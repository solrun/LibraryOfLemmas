   [("Circlines.circline_eq_clmat_refl", "circline_eq_clmat ?H ?H",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Circlines.inj_moebius_circline", "inj (moebius_circline ?M)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Circlines.circline_symmetric_inv_homo_disc",
     "circline_symmetric ?a (inversion ?a) unit_circle",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Circlines.is_circle_mk_circle", "is_circle (mk_circle ?a ?r)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))
             )
         )),
    ("Circlines.conjugate_conjugate_circline",
     "conjugate_circline (conjugate_circline ?H) = ?H",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Circlines.moebius_circline_id", "moebius_circline id_moebius ?H = ?H",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Circlines.inf_on_circline",
     "on_circline ?H \<infinity>\<^sub>h = is_line ?H",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Circlines.zero_on_circline",
     "on_circline ?H 0\<^sub>h = circline_D0 ?H",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Circlines.circline_intersection_symetry",
     "circline_intersection ?H1.0 ?H2.0 =
      circline_intersection ?H2.0 ?H1.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Circlines.inf_in_circline_set",
     "(\<infinity>\<^sub>h : circline_set ?H) = is_line ?H",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Circlines.zero_in_circline_set",
     "(0\<^sub>h : circline_set ?H) = circline_D0 ?H",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Circlines.moebius_preserve_circline_type",
     "circline_type (moebius_circline ?M ?H) = circline_type ?H",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Circlines.circline_set_circline_inversion",
     "circline_set (circline_inversion ?H) = inversion ` circline_set ?H",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Circlines.circline_set_circline_reciprocal",
     "circline_set (circline_reciprocal ?H) = reciprocal ` circline_set ?H",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Circlines.circline_set_conjugate_circline",
     "circline_set (conjugate_circline ?H) = conjugate ` circline_set ?H",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Circlines.on_unit_circle_conjugate",
     "on_circline unit_circle (conjugate ?z) = on_circline unit_circle ?z",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 0))),
    ("Circlines.inversion_id_iff_on_unit_circle",
     "(inversion ?a = ?a) = on_circline unit_circle ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Circlines.moebius_circline_comp_inv_right",
     "moebius_circline ?M (moebius_circline (moebius_inv ?M) ?H) = ?H",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_var 0)),
    ("Circlines.moebius_circline_comp_inv_left",
     "moebius_circline (moebius_inv ?M) (moebius_circline ?M ?H) = ?H",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_var 0)),
    ("Circlines.conjugate_circline_set'",
     "conjugate ` circline_set ?H <= circline_set (conjugate_circline ?H)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Circlines.on_circline_unit_circle",
     "on_circline unit_circle (of_complex ?z) = (cmod ?z = 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Circlines.on_circline_conjugate_circline",
     "on_circline (conjugate_circline ?H) ?z =
      on_circline ?H (conjugate ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Circlines.inversion_unit_circle",
     "on_circline unit_circle ?x ==> inversion ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Circlines.circline_set_I",
     "on_circline ?H ?z ==> ?z : circline_set ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Circlines.circline_set_moebius_circline",
     "circline_set (moebius_circline ?M ?H) =
      moebius_pt ?M ` circline_set ?H",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Circlines.on_circline_circline_inversion",
     "on_circline (circline_inversion ?H) ?z =
      on_circline ?H (reciprocal (conjugate ?z))",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Circlines.circline_equation_x_axis",
     "(of_complex ?z : circline_set x_axis) = (?z = cnj ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)),
              template_app (template_hole 3, template_hole 2))
            )],
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 0)))),
    ("Circlines.circline_symmetric_inv_homo_disc'",
     "circline_symmetric ?a ?a' unit_circle ==> ?a' = inversion ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 1)))),
    ("Circlines.on_circline_x_axis_I",
     "is_real ?z ==> on_circline x_axis (of_complex ?z)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Circlines.on_circline_y_axis_I",
     "is_imag ?z ==> on_circline y_axis (of_complex ?z)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Circlines.circline_type_pos_card_eq0",
     "0 < circline_type ?H ==> circline_set ?H = {}",
     template_implication
      ([template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Circlines.unique_circline_type_zero",
     "EX! H. circline_type H = 0 & ?z : circline_set H",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("Circlines.moebius_circline_comp",
     "moebius_circline (moebius_comp ?M1.0 ?M2.0) ?H =
      moebius_circline ?M1.0 (moebius_circline ?M2.0 ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Circlines.circline_set_x_axis_I",
     "is_real ?z ==> of_complex ?z : circline_set x_axis",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Circlines.circline_set_y_axis_I",
     "is_imag ?z ==> of_complex ?z : circline_set y_axis",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Circlines.circline_set_unit_circle_I",
     "cmod ?z = 1 ==> of_complex ?z : circline_set unit_circle",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_hole 0))
           ))),
    ("Circlines.circline_diagonalize",
     "EX M H'. moebius_circline M ?H = H' & circline_diag H'",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("Circlines.on_circline_moebius_circline_I",
     "on_circline ?H ?z ==>
      on_circline (moebius_circline ?M ?H) (moebius_pt ?M ?z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Circlines.moebius_circline_eq_I",
     "moebius_circline ?M ?H1.0 = moebius_circline ?M ?H2.0 ==>
      ?H1.0 = ?H2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Circlines.circline_set_moebius_circline_iff",
     "(moebius_pt ?M ?z : circline_set (moebius_circline ?M ?H)) =
      (?z : circline_set ?H)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Circlines.ex_moebius_circline_x_axis",
     "circline_type ?H < 0 ==> EX M. moebius_circline M ?H = x_axis",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 5, template_var 0),
          template_hole 4)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Circlines.moebius_circline_neq_I",
     "?H1.0 ~= ?H2.0 ==>
      moebius_circline ?M ?H1.0 ~= moebius_circline ?M ?H2.0",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Circlines.circline_type_zero_card_eq1",
     "circline_type ?H = 0 ==> EX z. circline_set ?H = {z}",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 0), template_hole 5)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Circlines.circline_set_moebius_circline_I",
     "?z : circline_set ?H ==>
      moebius_pt ?M ?z : circline_set (moebius_circline ?M ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Circlines.card_eq1_circline_type_zero",
     "EX z. circline_set ?H = {z} ==> circline_type ?H = 0",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Circlines.circline_set_moebius_circline_E",
     "moebius_pt ?M ?z : circline_set (moebius_circline ?M ?H) ==>
      ?z : circline_set ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Circlines.circline_type_pos_card_eq0_diag",
     "[| circline_diag ?H; 0 < circline_type ?H |]
      ==> circline_set ?H = {}",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Circlines.circline_type",
     "circline_type ?H = - 1 | circline_type ?H = 0 | circline_type ?H = 1",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app (template_hole 2, template_hole 1))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_hole 1)))
         )),
    ("Circlines.on_circline_cmat_cvec_unit",
     "on_circline_cmat_cvec unit_circle_cmat (?z1.0, ?z2.0) =
      (?z1.0 * cnj ?z1.0 = ?z2.0 * cnj ?z2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0))))),
    ("Circlines.circline_set_mk_circle",
     "0 <= ?r ==>
      circline_set (mk_circle ?a ?r) = of_complex ` circle ?a ?r",
     template_implication
      ([template_inequation (less_equals, template_hole 6, template_var 1)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Circlines.moebius_circline",
     "{z. on_circline (moebius_circline ?M ?H) z} =
      moebius_pt ?M ` {z. on_circline ?H z}",
     template_equation
      (template_app (template_hole 4, t_empty),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 4, t_empty)))),
    ("Circlines.symmetry_principle",
     "circline_symmetric ?z1.0 ?z2.0 ?H ==>
      circline_symmetric (moebius_pt ?M ?z1.0) (moebius_pt ?M ?z2.0)
       (moebius_circline ?M ?H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 3)),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Circlines.circline_set_positive_x_axis_I",
     "[| is_real ?z; 0 < Re ?z |] ==> of_complex ?z : positive_x_axis",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 0), template_hole 5),
        template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Circlines.circline_set_negative_x_axis_I",
     "[| is_real ?z; Re ?z < 0 |] ==> of_complex ?z : negative_x_axis",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 0), template_hole 5),
        template_inequation
         (less_than, template_app (template_hole 3, template_var 0),
          template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Circlines.circline_set_positive_y_axis_I",
     "[| is_imag ?z; 0 < Im ?z |] ==> of_complex ?z : positive_y_axis",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 0), template_hole 5),
        template_inequation
         (less_than, template_hole 5,
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Circlines.circline_set_negative_y_axis_I",
     "[| is_imag ?z; Im ?z < 0 |] ==> of_complex ?z : negative_y_axis",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 0), template_hole 5),
        template_inequation
         (less_than, template_app (template_hole 3, template_var 0),
          template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0)
           ))),
    ("Circlines.inj_circline_set",
     "[| circline_set ?H = circline_set ?H'; circline_set ?H ~= {} |]
      ==> ?H = ?H'",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 1),
              template_hole 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Circlines.moebius_similarity_lines_to_lines'",
     "?a ~= 0 ==>
      on_circline (moebius_circline (moebius_similarity ?a ?b) ?H)
       \<infinity>\<^sub>h =
      (\<infinity>\<^sub>h : circline_set ?H)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 7))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 2),
           template_app (template_hole 0, template_var 0))))),
    ("Circlines.circline_type_zero_card_eq1_0",
     "[| circline_type ?H = 0; 0\<^sub>h : circline_set ?H |]
      ==> circline_set ?H = {0\<^sub>h}",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 0), template_hole 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 4),
           template_hole 0)))),
    ("Circlines.on_circline_x_axis",
     "on_circline x_axis ?z =
      ((EX c. is_real c & ?z = of_complex c) | ?z = \<infinity>\<^sub>h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8, template_app (template_hole 7, t_empty)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 0))
           ))),
    ("Circlines.on_circline_y_axis",
     "on_circline y_axis ?z =
      ((EX c. is_imag c & ?z = of_complex c) | ?z = \<infinity>\<^sub>h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8, template_app (template_hole 7, t_empty)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 0))
           ))),
    ("Circlines.moebius_similarity_lines_to_lines",
     "?a ~= 0 ==>
      (\<infinity>\<^sub>h
       : circline_set (moebius_circline (moebius_similarity ?a ?b) ?H)) =
      (\<infinity>\<^sub>h : circline_set ?H)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0))),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app (template_hole 2, template_var 0))))),
    ("Circlines.circline_intersection_at_most_2_points",
     "?H1.0 ~= ?H2.0 ==>
      finite (circline_intersection ?H1.0 ?H2.0) &
      card (circline_intersection ?H1.0 ?H2.0) <= 2",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_var 0))),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))))
           ))),
    ("Circlines.circline_set_mk_line",
     "?z1.0 ~= ?z2.0 ==>
      circline_set (mk_line ?z1.0 ?z2.0) - {\<infinity>\<^sub>h} =
      of_complex ` line ?z1.0 ?z2.0",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Circlines.circline_eq_cmat_hermitean_nonzero",
     "[| hermitean ?H & ?H ~= mat_zero; circline_eq_cmat ?H ?H' |]
      ==> hermitean ?H' & ?H' ~= mat_zero",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)))
           ))),
    ("Circlines.zero_one_inf_x_axis",
     "[| 0\<^sub>h : circline_set ?H; 1\<^sub>h : circline_set ?H;
         \<infinity>\<^sub>h : circline_set ?H |]
      ==> ?H = x_axis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 3),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 2),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Circlines.wlog_circline_diag",
     "[| !!H. circline_diag H ==> ?P H;
         !!M H. ?P H ==> ?P (moebius_circline M H) |]
      ==> ?P ?H",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Circlines.wlog_circline_x_axis",
     "[| circline_type ?H < 0; !!M H. ?P H ==> ?P (moebius_circline M H);
         ?P x_axis |]
      ==> ?P ?H",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 5, template_var 1),
          template_hole 4),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (template_app (template_var 0, template_hole 0))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Circlines.classic_circle",
     "[| is_circle ?H; (?a, ?r) = euclidean_circle ?H;
         circline_type ?H <= 0 |]
      ==> circline_set ?H = of_complex ` circle ?a ?r",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 11, template_var 2))
            ),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 1), template_var 0),
          template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_hole 5)],
       template_equation
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Circlines.classic_line",
     "[| is_line ?H; circline_type ?H < 0;
         (?z1.0, ?z2.0) = euclidean_line ?H |]
      ==> circline_set ?H - {\<infinity>\<^sub>h} =
          of_complex ` line ?z1.0 ?z2.0",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 2)),
        template_inequation
         (less_than, template_app (template_hole 13, template_var 2),
          template_hole 12),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 1),
            template_var 0),
          template_app (template_hole 9, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 2)),
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Circlines.unique_circline_set",
     "[| ?A ~= ?B; ?A ~= ?C; ?B ~= ?C |]
      ==> EX! H.
             ?A : circline_set H &
             ?B : circline_set H & ?C : circline_set H",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Circlines.ex_mk_circline",
     "EX A B C D.
         ?H = mk_circline A B C D &
         hermitean (A, B, C, D) & (A, B, C, D) ~= mat_zero",
     template_predicate (template_app (template_hole 10, t_empty))),
    ("Circlines.circline_type_mk_circline",
     "(?A, ?B, ?C, ?D) : hermitean_nonzero ==>
      circline_type (mk_circline ?A ?B ?C ?D) =
      sgn (Re (?A * ?D - ?B * ?C))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 3),
                  template_app
                   (template_app (template_hole 14, template_var 2),
                    template_app
                     (template_app (template_hole 13, template_var 1),
                      template_var 0)))),
              template_app (template_hole 12, t_empty))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))))))),
    ("Circlines.four_points_on_circline_iff_cross_ratio_real",
     "distinct [?z, ?u, ?v, ?w] ==>
      is_real (to_complex (cross_ratio ?z ?u ?v ?w)) =
      (EX H. {?z, ?u, ?v, ?w} <= circline_set H)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 12, template_var 3),
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_app
                   (template_app (template_hole 12, template_var 1),
                    template_app
                     (template_app (template_hole 12, template_var 0),
                      template_hole 11)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 0)))),
           template_hole 5),
         template_app (template_hole 4, t_empty)))),
    ("Circlines.circline_type_neg_card_gt3",
     "circline_type ?H < 0 ==>
      EX A B C. A ~= B & A ~= C & B ~= C & {A, B, C} <= circline_set ?H",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 9, template_var 0),
          template_hole 8)],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Circlines.on_circline_cmat_cvec_circline_equation",
     "on_circline_cmat_cvec (?A, ?B, ?C, ?D) (?z1.0, ?z2.0) =
      circline_equation ?A ?B ?C ?D ?z1.0 ?z2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_app
                   (template_app (template_hole 6, template_var 4),
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_var 2)))),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 2, template_var 5),
                           template_var 1)),
                       template_app (template_hole 1, template_var 1))),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 2, template_var 4),
                         template_var 0)),
                     template_app (template_hole 1, template_var 1)))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app (template_hole 1, template_var 0))),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("Circlines.circline_type_neg_card_gt3_diag",
     "[| circline_type ?H < 0; circline_diag ?H |]
      ==> EX A B C.
             A ~= B & A ~= C & B ~= C & {A, B, C} <= circline_set ?H",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 10, template_var 0),
          template_hole 9),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Circlines.classic_circline",
     "[| ?H = mk_circline ?A ?B ?C ?D;
         hermitean (?A, ?B, ?C, ?D) & (?A, ?B, ?C, ?D) ~= mat_zero |]
      ==> circline_set ?H - {\<infinity>\<^sub>h} =
          of_complex ` circline (Re ?A) ?B (Re ?D)",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 18, template_var 3),
                template_var 2),
              template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_hole 16,
                  template_app
                   (template_app (template_hole 15, template_var 3),
                    template_app
                     (template_app (template_hole 14, template_var 2),
                      template_app
                       (template_app (template_hole 13, template_var 1),
                        template_var 0))))),
              template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 15, template_var 3),
                      template_app
                       (template_app (template_hole 14, template_var 2),
                        template_app
                         (template_app (template_hole 13, template_var 1),
                          template_var 0)))),
                  template_hole 10)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 4)),
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_hole 4)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)),
               template_var 2),
             template_app (template_hole 0, template_var 0)))))),
    ("Circlines.quad_form_diagonal_iff",
     "[| ?k1.0 ~= 0; is_real ?k1.0; is_real ?k2.0;
         Re ?k1.0 * Re ?k2.0 < 0 |]
      ==> (quad_form (?z1.0, 1) (?k1.0, 0, 0, ?k2.0) = 0) =
          (EX \<phi>. ?z1.0 = rcis (sqrt (Re (- ?k2.0 / ?k1.0))) \<phi>)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 17)),
        template_equation
         (template_app (template_hole 15, template_var 2),
          template_hole 14),
        template_equation
         (template_app (template_hole 15, template_var 1),
          template_hole 14),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 2)),
            template_app (template_hole 11, template_var 1)),
          template_hole 14)],
       template_equation
        (template_app
          (template_app
            (template_hole 18,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 0),
                   template_hole 7)),
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_app
                  (template_app (template_hole 5, template_hole 17),
                   template_app
                    (template_app (template_hole 8, template_hole 17),
                     template_var 1))))),
           template_hole 17),
         template_app (template_hole 4, t_empty)))),
    ("Circlines.circline_equation",
     "[| ?H = mk_circline ?A ?B ?C ?D;
         (?A, ?B, ?C, ?D) : hermitean_nonzero |]
      ==> (of_complex ?z : circline_set ?H) =
          circline_equation ?A ?B ?C ?D ?z 1",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 20, template_var 4),
                template_var 3),
              template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_var 4),
                  template_app
                   (template_app (template_hole 17, template_var 3),
                    template_app
                     (template_app (template_hole 16, template_var 2),
                      template_var 1)))),
              template_app (template_hole 15, t_empty))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 0)),
                template_app (template_hole 6, template_var 5))
              )],
         template_equation
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_app (template_hole 3, template_var 4),
                             template_var 0)),
                         template_app (template_hole 2, template_var 0))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 3, template_var 3),
                           template_hole 1)),
                       template_app (template_hole 2, template_var 0)))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 3, template_var 2),
                       template_app (template_hole 2, template_hole 1))),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 1)),
               template_app (template_hole 2, template_hole 1))),
           template_hole 0)))),
    ("Circlines.circline_equation_cancel_z2",
     "[| circline_equation ?A ?B ?C ?D ?z1.0 ?z2.0; ?z2.0 ~= 0 |]
      ==> circline_equation ?A ?B ?C ?D (?z1.0 / ?z2.0) 1",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_hole 5,
                          template_app
                           (template_app (template_hole 5, template_var 5),
                            template_var 4)),
                        template_app (template_hole 4, template_var 4))),
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app
                         (template_app (template_hole 5, template_var 3),
                          template_var 2)),
                      template_app (template_hole 4, template_var 4)))),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_app (template_hole 4, template_var 2))),
                  template_var 4))),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_var 2)),
              template_app (template_hole 4, template_var 2))),
          template_hole 3),
        template_negation
         (template_equation (template_var 2, template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 5, template_var 5),
                           template_app
                            (template_app (template_hole 1, template_var 4),
                             template_var 2))),
                       template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 1, template_var 4),
                           template_var 2)))),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 5, template_var 3),
                         template_hole 0)),
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 1, template_var 4),
                         template_var 2))))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app (template_hole 4, template_hole 0))),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2)))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 0)),
             template_app (template_hole 4, template_hole 0))),
         template_hole 3))),
    ("Circlines.circline_equation_quadratic_equation",
     "[| circline_equation ?A ?B (cnj ?B) ?D ?z 1; Re ?z = ?x; Im ?z = ?y;
         Re ?B = ?bx; Im ?B = ?by |]
      ==> ?A * cor (?x\<^sup>2) + ?A * cor (?y\<^sup>2) +
          cor (2 * ?bx * ?x) +
          cor (2 * ?by * ?y) +
          ?D =
          0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 14,
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app
                     (template_hole 14,
                      template_app
                       (template_app
                         (template_hole 13,
                          template_app
                           (template_app (template_hole 13, template_var 7),
                            template_var 6)),
                        template_app (template_hole 12, template_var 6))),
                    template_app
                     (template_app
                       (template_hole 13,
                        template_app
                         (template_app (template_hole 13, template_var 5),
                          template_hole 11)),
                      template_app (template_hole 12, template_var 6)))),
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app
                       (template_hole 13,
                        template_app (template_hole 12, template_var 5)),
                      template_app (template_hole 12, template_hole 11))),
                  template_var 6))),
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 13, template_var 4),
                  template_hole 11)),
              template_app (template_hole 12, template_hole 11))),
          template_hole 10),
        template_equation
         (template_app (template_hole 8, template_var 6), template_var 3),
        template_equation
         (template_app (template_hole 7, template_var 6), template_var 2),
        template_equation
         (template_app (template_hole 8, template_var 5), template_var 1),
        template_equation
         (template_app (template_hole 7, template_var 5), template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_app (template_hole 13, template_var 7),
                           template_app
                            (template_hole 6,
                             template_app
                              (template_app
                                (template_hole 5, template_var 3),
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 3, template_hole 2)))))),
                       template_app
                        (template_app (template_hole 13, template_var 7),
                         template_app
                          (template_hole 6,
                           template_app
                            (template_app (template_hole 5, template_var 2),
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 3, template_hole 2))))))),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 3, template_hole 2))),
                           template_var 1)),
                       template_var 3)))),
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_hole 3, template_hole 2))),
                       template_var 0)),
                   template_var 2)))),
           template_var 4),
         template_hole 10)))]
