   [("More_Complex.canon_ang_arg",
     "\<downharpoonright>Arg ?z\<downharpoonleft> = Arg ?z",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("More_Complex.arg_cis",
     "Arg (cis ?\<phi>) = \<downharpoonright>?\<phi>\<downharpoonleft>",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("More_Complex.ex_complex_sqrt", "EX s. s * s = ?z",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("More_Complex.complex_cnj", "cnj (- ?x) = - cnj ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("More_Complex.null_ccsqrt", "(ccsqrt ?x = 0) = (?x = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("More_Complex.cis_pm_pi", "cis (?x - pi) = - cis ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_hole 0, template_app (template_hole 3, template_var 0)))),
    ("More_Complex.cis_pm_pi", "cis (?x + pi) = - cis ?x",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_hole 0, template_app (template_hole 3, template_var 0)))),
    ("More_Complex.cis_times_cis_opposite",
     "cis ?\<phi> * cis (- ?\<phi>) = 1",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_hole 0)),
    ("More_Complex.square_ccsqrt", "(ccsqrt ?x)\<^sup>2 = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))),
       template_var 0)),
    ("More_Complex.eq_cnj_iff_real", "(cnj ?z = ?z) = is_real ?z",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_var 0),
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("More_Complex.eq_minus_cnj_iff_imag", "(cnj ?z = - ?z) = is_imag ?z",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 0),
         template_app (template_hole 3, template_var 0)),
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("More_Complex.complex_cnj", "cnj (?x - ?y) = cnj ?x - cnj ?y",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("More_Complex.complex_cnj", "cnj (?x + ?y) = cnj ?x + cnj ?y",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("More_Complex.complex_cnj", "cnj (?x * ?y) = cnj ?x * cnj ?y",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("More_Complex.complex_cnj", "cnj (?x / ?y) = cnj ?x / cnj ?y",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("More_Complex.rot90_ii", "rot90 ?z = ?z * \<i>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0))),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("More_Complex.arg_complex_of_real_positive",
     "0 < ?k ==> Arg (cor ?k) = 0",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_hole 3))),
    ("More_Complex.arg_complex_of_real_negative",
     "?k < 0 ==> Arg (cor ?k) = pi",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 4)],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("More_Complex.one_plus_square_neq_zero", "1 + (cor ?x)\<^sup>2 ~= 0",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))),
           template_hole 0)
         )),
    ("More_Complex.cmod_eq_one", "(cmod ?a = 1) = (?a * cnj ?a = 1)",
     template_bimplication
      (template_equation
        (template_app (template_hole 5, template_var 0), template_hole 4),
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("More_Complex.cmod_cor_divide",
     "cmod (?z / cor ?k) = cmod ?z / \<bar>?k\<bar>",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 4, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("More_Complex.cor_sqrt_mult_cor_sqrt",
     "cor (sqrt ?A) * cor (sqrt ?A) = cor \<bar>?A\<bar>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("More_Complex.arg_cnj_pi", "Arg ?z = pi ==> Arg (cnj ?z) = pi",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 0), template_hole 1)],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 0, template_var 0)),
         template_hole 1))),
    ("More_Complex.complex_of_real_Re", "is_real ?k ==> cor (Re ?k) = ?k",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("More_Complex.ex_complex_to_complex2", "EX k. k ~= 0 & k * ?z = ?z",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("More_Complex.cmod_square", "(cmod ?z)\<^sup>2 = Re (?z * cnj ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app
          (template_hole 5,
           template_app (template_hole 4, template_hole 3))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0))))),
    ("More_Complex.cnj_mix_real", "is_real (cnj_mix ?z1.0 ?z2.0)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0)))),
       template_hole 0)),
    ("More_Complex.Re_express_cnj", "cor (Re ?z) = (?z + cnj ?z) / 2",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("More_Complex.complex_mult_cnj_cmod",
     "?z * cnj ?z = cor ((cmod ?z)\<^sup>2)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 0),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("More_Complex.Complex_Im_express_cnj",
     "Complex 0 (Im ?z) = (?z - cnj ?z) / 2",
     template_equation
      (template_app
        (template_app (template_hole 8, template_hole 7),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("More_Complex.Complex_Re_express_cnj",
     "Complex (Re ?z) 0 = (?z + cnj ?z) / 2",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 0)),
         template_hole 6),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("More_Complex.cor_squared", "(cor ?x)\<^sup>2 = cor (?x\<^sup>2)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)))))),
    ("More_Complex.arg_mult_real_positive",
     "0 < ?k ==> Arg (cor ?k * ?z) = Arg ?z",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("More_Complex.arg_div_real_positive",
     "0 < ?k ==> Arg (?z / cor ?k) = Arg ?z",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 2, template_var 0)))),
    ("More_Complex.Re_sgn", "is_real ?R ==> Re (sgn ?R) = sgn (Re ?R)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_var 0))))),
    ("More_Complex.arg_pi_iff", "(Arg ?z = pi) = (is_real ?z & Re ?z < 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 6, template_var 0), template_hole 5),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_hole 2))
           ))),
    ("More_Complex.Im_express_cnj",
     "cor (Im ?z) = (?z - cnj ?z) / (2 * \<i>)",
     template_equation
      (template_app
        (template_hole 9, template_app (template_hole 8, template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app (template_hole 5, template_var 0))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_hole 0)))),
    ("More_Complex.cis_add_cis_opposite",
     "cis ?\<phi> + cis (- ?\<phi>) = cor (2 * cos ?\<phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 8, template_app (template_hole 7, template_var 0)),
         template_app
          (template_hole 7,
           template_app (template_hole 6, template_var 0))),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_app (template_hole 0, template_var 0))))),
    ("More_Complex.Complex_scale1",
     "Complex (?a * ?b) (?a * ?c) = cor ?a * Complex ?b ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("More_Complex.Complex_scale2",
     "Complex (?a * ?c) (?b * ?c) = Complex ?a ?b * cor ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("More_Complex.cis_pi2_minus_x",
     "cis (pi / 2 - ?x) = \<i> * cis (- ?x)",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3)))),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_hole 9,
           template_app (template_hole 0, template_var 0))))),
    ("More_Complex.arg_mult_real_negative",
     "?k < 0 ==> Arg (cor ?k * ?z) = Arg (- ?z)",
     template_implication
      ([template_inequation (less_than, template_var 1, template_hole 5)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_var 0))))),
    ("More_Complex.arg_div_real_negative",
     "?k < 0 ==> Arg (?z / cor ?k) = Arg (- ?z)",
     template_implication
      ([template_inequation (less_than, template_var 1, template_hole 5)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_var 0))))),
    ("More_Complex.arg_cnj_not_pi",
     "Arg ?z ~= pi ==> Arg (cnj ?z) = - Arg ?z",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 3, template_var 0))))),
    ("More_Complex.arg_Im_sgn", "Im ?z ~= 0 ==> sgn (Arg ?z) = sgn (Im ?z)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 3, template_var 0))))),
    ("More_Complex.cis_cmod",
     "?a ~= 0 ==> cis (Arg ?a) * cor (cmod ?a) = ?a",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_var 0))),
    ("More_Complex.cmod_cis",
     "?a ~= 0 ==> cor (cmod ?a) * cis (Arg ?a) = ?a",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))),
         template_var 0))),
    ("More_Complex.arg_uminus",
     "?z ~= 0 ==>
      Arg (- ?z) = \<downharpoonright>Arg ?z + pi\<downharpoonleft>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 4, template_var 0)),
             template_hole 0))))),
    ("More_Complex.cos_arg", "?z ~= 0 ==> cos (Arg ?z) = Re ?z / cmod ?z",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))))),
    ("More_Complex.sin_arg", "?z ~= 0 ==> sin (Arg ?z) = Im ?z / cmod ?z",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))))),
    ("More_Complex.arg_inv",
     "?z ~= 0 ==>
      Arg (1 / ?z) = \<downharpoonright>- Arg ?z\<downharpoonleft>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 0)))))),
    ("More_Complex.is_real_rot_to_x_axis",
     "?z ~= 0 ==> is_real (cis (- Arg ?z) * ?z)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)))),
             template_var 0)),
         template_hole 0))),
    ("More_Complex.positive_rot_to_x_axis",
     "?z ~= 0 ==> 0 < Re (cis (- Arg ?z) * ?z)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_inequation
        (less_than, template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)))),
             template_var 0))))),
    ("More_Complex.is_real_arg2", "is_real ?z ==> Arg ?z = 0 | Arg ?z = pi",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 1, template_var 0)),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 1, template_var 0)),
               template_hole 0))
           ))),
    ("More_Complex.is_real_arg1", "Arg ?z = 0 | Arg ?z = pi ==> is_real ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 0)),
                  template_hole 2)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 0)),
                template_hole 1))
            )],
       template_equation
        (template_app (template_hole 0, template_var 0), template_hole 2))),
    ("More_Complex.real_imag_0", "[| is_real ?a; is_imag ?a |] ==> ?a = 0",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3),
        template_equation
         (template_app (template_hole 2, template_var 0), template_hole 3)],
       template_equation (template_var 0, template_hole 0))),
    ("More_Complex.cmod_mult_minus_left_distrib",
     "cmod (?z * ?z1.0 - ?z * ?z2.0) = cmod ?z * cmod (?z1.0 - ?z2.0)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 3, template_var 2)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("More_Complex.scalprod_real", "is_real (scalprod ?z1.0 ?z2.0)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 1)),
                   template_var 0)),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app (template_hole 4, template_var 0)))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)))),
       template_hole 0)),
    ("More_Complex.cis_diff_cis_opposite",
     "cis ?\<phi> - cis (- ?\<phi>) = 2 * \<i> * cor (sin ?\<phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 0)),
         template_app
          (template_hole 8,
           template_app (template_hole 7, template_var 0))),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3))),
             template_hole 2)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("More_Complex.arg_complex_of_real_times_i_positive",
     "0 < ?k ==> Arg (cor ?k * \<i>) = pi / 2",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 0)],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 0)),
             template_hole 5)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("More_Complex.Im_mult_real",
     "is_real ?a ==> Im (?a * ?b) = Re ?a * Im ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1), template_hole 3)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 4, template_var 0))))),
    ("More_Complex.Re_mult_real",
     "is_real ?a ==> Re (?a * ?b) = Re ?a * Re ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1), template_hole 3)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("More_Complex.cmod_eqE",
     "cmod ?z1.0 = cmod ?z2.0 ==> ?z1.0 * cnj ?z1.0 = ?z2.0 * cnj ?z2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 0))))),
    ("More_Complex.cmod_eqI",
     "?z1.0 * cnj ?z1.0 = ?z2.0 * cnj ?z2.0 ==> cmod ?z1.0 = cmod ?z2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1),
            template_app (template_hole 2, template_var 1)),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_app (template_hole 2, template_var 0)))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("More_Complex.cis_one",
     "[| sin ?\<phi> = 0; cos ?\<phi> = 1 |] ==> cis ?\<phi> = 1",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 0), template_hole 5),
        template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("More_Complex.cor_eq_0",
     "(cor ?x + \<i> * cor ?y = 0) = (?x = 0 & ?y = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 1)),
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app (template_hole 6, template_var 0))),
         template_hole 3),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("More_Complex.cis_opposite_diff_cis",
     "cis (- ?\<phi>) - cis ?\<phi> = - 2 * \<i> * cor (sin ?\<phi>)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app (template_hole 8, template_var 0))),
         template_app (template_hole 9, template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_hole 3)))),
             template_hole 2)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("More_Complex.cor_cmod_power_4",
     "cor (cmod ?z) ^ 4 = (?z * cnj ?z)\<^sup>2",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 0))),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 3, template_hole 2)))),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2))))),
    ("More_Complex.arg_complex_of_real_times_i_negative",
     "?k < 0 ==> Arg (cor ?k * \<i>) = - pi / 2",
     template_implication
      ([template_inequation (less_than, template_var 0, template_hole 11)],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 0)),
             template_hole 6)),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3)),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("More_Complex.arg_uminus_opposite_sign",
     "?z ~= 0 ==> (0 < Arg ?z) = (~ 0 < Arg (- ?z))",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))))),
    ("More_Complex.ccsqrt",
     "?s * ?s = ?z ==> ?s = ccsqrt ?z | ?s = - ccsqrt ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 0))))
           ))),
    ("More_Complex.Complex_scale3",
     "Complex (?a / ?b) (?a / ?c) = cor ?a * Complex (1 / ?b) (1 / ?c)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 0),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_hole 0),
             template_var 0))))),
    ("More_Complex.cnjE",
     "?x ~= 0 ==> cnj ?x = cor ((cmod ?x)\<^sup>2) / ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_equation
        (template_app (template_hole 7, template_var 0),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))))),
           template_var 0)))),
    ("More_Complex.ex_complex_to_one",
     "?z ~= 0 ==> EX k. k ~= 0 & k * ?z = 1",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("More_Complex.cor_cmod_real",
     "is_real ?a ==> cor (cmod ?a) = ?a | cor (cmod ?a) = - ?a",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 0), template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 0))),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0))),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("More_Complex.arg_inv_pi",
     "[| ?z ~= 0; Arg ?z = pi |] ==> Arg (1 / ?z) = pi",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_equation
         (template_app (template_hole 3, template_var 0), template_hole 2)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_hole 2))),
    ("More_Complex.mult_reals",
     "[| is_real ?a; is_real ?b |] ==> is_real (?a * ?b)",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1),
        template_equation
         (template_app (template_hole 2, template_var 0), template_hole 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 1))),
    ("More_Complex.div_reals",
     "[| is_real ?a; is_real ?b |] ==> is_real (?a / ?b)",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1), template_hole 1),
        template_equation
         (template_app (template_hole 2, template_var 0), template_hole 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 1))),
    ("More_Complex.cis_minus_one",
     "[| sin ?\<phi> = 0; cos ?\<phi> = - 1 |] ==> cis ?\<phi> = - 1",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 0), template_hole 7),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app (template_hole 5, template_hole 4))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("More_Complex.arg_0_iff",
     "(?z ~= 0 & Arg ?z = 0) = (is_real ?z & 0 < Re ?z)",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_hole 6))),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)),
               template_hole 3))
           ),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 2, template_var 0)),
                 template_hole 3)),
             template_app
              (template_app (template_hole 1, template_hole 3),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("More_Complex.complex_double",
     "Complex ?a ?b * 2 = Complex (2 * ?a) (2 * ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app (template_hole 3, template_hole 2))),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_hole 3, template_hole 2))),
           template_var 0)))),
    ("More_Complex.complex_half",
     "Complex ?a ?b / 2 = Complex (?a / 2) (?b / 2)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_hole 0,
               template_app (template_hole 3, template_hole 2)))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_hole 0,
             template_app (template_hole 3, template_hole 2)))))),
    ("More_Complex.arg_mult",
     "?z1.0 * ?z2.0 ~= 0 ==>
      Arg (?z1.0 * ?z2.0) =
      \<downharpoonright>Arg ?z1.0 + Arg ?z2.0\<downharpoonleft>",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 1)),
             template_app (template_hole 2, template_var 0)))))),
    ("More_Complex.Complex_scale4",
     "?c ~= 0 ==> Complex (?a / ?c) (?b / ?c) = Complex ?a ?b / cor ?c",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 2))))),
    ("More_Complex.complex_sqrt_1",
     "?z ~= 0 ==> (?z = 1 / ?z) = (?z = 1 | ?z = - 1)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_bimplication
        (template_equation
          (template_var 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0)),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_hole 2)),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app (template_hole 0, template_hole 2)))
             )))),
    ("More_Complex.cis_arg_mult",
     "?z1.0 * ?z2.0 ~= 0 ==>
      cis (Arg (?z1.0 * ?z2.0)) = cis (Arg ?z1.0 + Arg ?z2.0)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 1, template_var 0)))))),
    ("More_Complex.cis_eq",
     "cis ?a = cis ?b ==> EX x. ?a - ?b = 2 * real_of_int x * pi",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("More_Complex.arg_inv_not_pi",
     "[| ?z ~= 0; Arg ?z ~= pi |] ==> Arg (1 / ?z) = - Arg ?z",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6)),
        template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_hole 4, template_var 0))))),
    ("More_Complex.complex_eq_if_Re_eq",
     "[| is_real ?z1.0; is_real ?z2.0 |]
      ==> (?z1.0 = ?z2.0) = (Re ?z1.0 = Re ?z2.0)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1), template_hole 3),
        template_equation
         (template_app (template_hole 4, template_var 0), template_hole 3)],
       template_bimplication
        (template_equation (template_var 1, template_var 0),
         template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("More_Complex.ccsqrt_mult",
     "ccsqrt (?a * ?b) = ccsqrt ?a * ccsqrt ?b |
      ccsqrt (?a * ?b) = - ccsqrt ?a * ccsqrt ?b",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 2, template_var 0)))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 2, template_var 1))),
               template_app (template_hole 2, template_var 0))))
         )),
    ("More_Complex.is_real_div",
     "?b ~= 0 ==> is_real (?a / ?b) = (?a * cnj ?b = ?b * cnj ?a)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_bimplication
        (template_equation
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_hole 2),
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)))))),
    ("More_Complex.Im_divide_real",
     "[| is_real ?b; ?b ~= 0 |] ==> Im (?a / ?b) = Im ?a / Re ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1), template_hole 6),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 7, template_var 0)),
           template_app (template_hole 0, template_var 1))))),
    ("More_Complex.Re_divide_real",
     "[| is_real ?b; ?b ~= 0 |] ==> Re (?a / ?b) = Re ?a / Re ?b",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 1), template_hole 6),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 2, template_var 1))))),
    ("More_Complex.arg_pi2_iff",
     "(?z ~= 0 & Arg ?z = pi / 2) = (is_imag ?z & 0 < Im ?z)",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_var 0),
                   template_hole 11))),
             template_app
              (template_app
                (template_hole 10,
                 template_app (template_hole 9, template_var 0)),
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4)))))
           ),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app
                  (template_hole 10,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_hole 2),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("More_Complex.arg_div",
     "[| ?z1.0 ~= 0; ?z2.0 ~= 0 |]
      ==> Arg (?z1.0 / ?z2.0) =
          \<downharpoonright>Arg ?z1.0 - Arg ?z2.0\<downharpoonleft>",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 3, template_var 1)),
             template_app (template_hole 3, template_var 0)))))),
    ("More_Complex.is_real_mult_real",
     "[| is_real ?a; ?a ~= 0 |] ==> is_real ?b = is_real (?a * ?b)",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1), template_hole 5),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_bimplication
        (template_equation
          (template_app (template_hole 6, template_var 0), template_hole 5),
         template_equation
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_hole 5)))),
    ("More_Complex.arg_minus_pi2_iff",
     "(?z ~= 0 & Arg ?z = - pi / 2) = (is_imag ?z & Im ?z < 0)",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_var 0),
                   template_hole 12))),
             template_app
              (template_app
                (template_hole 11,
                 template_app (template_hole 10, template_var 0)),
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_hole 7)),
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4)))))
           ),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 11,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_hole 2))
           ))),
    ("More_Complex.cmod_diff_le",
     "cmod (?b - ?c)
      <= sqrt (1 + (cmod ?b)\<^sup>2) + sqrt (1 + (cmod ?c)\<^sup>2)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 6, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 8, template_var 1)),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0)))))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 6, template_hole 4),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 8, template_var 0)),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))))))),
    ("More_Complex.cmod_diff_ge",
     "sqrt (1 + (cmod ?b)\<^sup>2) - sqrt (1 + (cmod ?c)\<^sup>2)
      <= cmod (?b - ?c)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 1)),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)))))),
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("More_Complex.is_imag_arg1",
     "Arg ?z = pi / 2 | Arg ?z = - pi / 2 ==> is_imag ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 0)),
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app
                     (template_hole 5,
                      template_app (template_hole 4, template_hole 3))))),
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 8, template_var 0)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 2, template_hole 6)),
                  template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_hole 3)))))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("More_Complex.ex_complex_to_complex",
     "[| ?z1.0 ~= 0; ?z2.0 ~= 0 |] ==> EX k. k ~= 0 & ?z2.0 = k * ?z1.0",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("More_Complex.cmod_1_plus_mult_le",
     "cmod (1 + ?z * ?w)
      <= sqrt ((1 + (cmod ?z)\<^sup>2) * (1 + (cmod ?w)\<^sup>2))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 11,
         template_app
          (template_app (template_hole 10, template_hole 9),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_var 0))),
       template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 11, template_var 1)),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))))),
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 11, template_var 0)),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))))))),
    ("More_Complex.arg_inv_2kpi",
     "?z ~= 0 ==> EX x. Arg (1 / ?z) = - Arg ?z + 2 * real_of_int x * pi",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 13))],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("More_Complex.arg_mult_2kpi",
     "?z1.0 * ?z2.0 ~= 0 ==>
      EX x. Arg (?z1.0 * ?z2.0) =
            Arg ?z1.0 + Arg ?z2.0 + 2 * real_of_int x * pi",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 11, template_var 1),
                template_var 0),
              template_hole 10)
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("More_Complex.is_imag_arg2",
     "[| is_imag ?z; ?z ~= 0 |] ==> Arg ?z = pi / 2 | Arg ?z = - pi / 2",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 0),
          template_hole 11),
        template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 13,
                   template_app (template_hole 6, template_var 0)),
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))))),
             template_app
              (template_app
                (template_hole 13,
                 template_app (template_hole 6, template_var 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 0, template_hole 4)),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)))))
           ))),
    ("More_Complex.cnj_mix_minus",
     "cnj ?z1.0 * ?z2.0 - ?z1.0 * cnj ?z2.0 =
      \<i> * cnj_mix (rot90 ?z1.0) ?z2.0",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 7, template_var 1),
           template_app (template_hole 6, template_var 0))),
       template_app
        (template_app (template_hole 7, template_hole 5),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_var 1))),
                     template_app (template_hole 0, template_var 1)))),
               template_var 0)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1))),
                 template_app (template_hole 0, template_var 1))),
             template_app (template_hole 6, template_var 0)))))),
    ("More_Complex.arg_mult_eq",
     "[| ?z * ?z1.0 ~= 0; ?z * ?z2.0 ~= 0;
         Arg (?z * ?z1.0) = Arg (?z * ?z2.0) |]
      ==> Arg ?z1.0 = Arg ?z2.0",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_hole 2)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 0),
              template_hole 2)
            ),
        template_equation
         (template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)),
          template_app
           (template_hole 0,
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("More_Complex.cis_inj",
     "[| - pi < ?\<alpha>; ?\<alpha> <= pi; - pi < ?\<alpha>';
         ?\<alpha>' <= pi; cis ?\<alpha> = cis ?\<alpha>' |]
      ==> ?\<alpha> = ?\<alpha>'",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 5, template_hole 4),
          template_var 1),
        template_inequation (less_equals, template_var 1, template_hole 4),
        template_inequation
         (less_than, template_app (template_hole 5, template_hole 4),
          template_var 0),
        template_inequation (less_equals, template_var 0, template_hole 4),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("More_Complex.arg_div_2kpi",
     "[| ?z1.0 ~= 0; ?z2.0 ~= 0 |]
      ==> EX x. Arg (?z1.0 / ?z2.0) =
                Arg ?z1.0 - Arg ?z2.0 + 2 * real_of_int x * pi",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 12)),
        template_negation
         (template_equation (template_var 0, template_hole 12))],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("More_Complex.csqrt_real",
     "is_real ?x ==>
      0 <= Re ?x & ccsqrt ?x = cor (sqrt (Re ?x)) |
      Re ?x < 0 & ccsqrt ?x = \<i> * cor (sqrt (- Re ?x))",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 0),
          template_hole 12)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_hole 12),
                     template_app (template_hole 8, template_var 0))),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_var 0)),
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 8, template_var 0)))))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 8, template_var 0)),
                   template_hole 12)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 8, template_var 0))))))))
           ))),
    ("More_Complex.cnj_mix_minus'",
     "cnj ?z1.0 * ?z2.0 - ?z1.0 * cnj ?z2.0 =
      rot90 (cnj_mix (rot90 ?z1.0) ?z2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app (template_hole 5, template_var 0))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 2, template_var 1))),
                           template_app
                            (template_hole 0, template_var 1)))),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3,
                           template_app (template_hole 2, template_var 1))),
                       template_app (template_hole 0, template_var 1))),
                   template_app (template_hole 5, template_var 0)))))),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3,
                           template_app (template_hole 2, template_var 1))),
                       template_app (template_hole 0, template_var 1)))),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 1))),
                   template_app (template_hole 0, template_var 1))),
               template_app (template_hole 5, template_var 0)))))))]
