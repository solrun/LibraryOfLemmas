   [("Homogeneous_Coordinates.complex_homo_coords_eq_refl",
     "?z \<approx> ?z",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Homogeneous_Coordinates.inf_not_of_complex",
     "\<infinity>\<^sub>h ~= of_complex ?x",
     template_negation
      (
         template_equation
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Homogeneous_Coordinates.of_complex_not_inf",
     "of_complex ?x ~= \<infinity>\<^sub>h",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Homogeneous_Coordinates.to_complex_of_complex",
     "to_complex (of_complex ?z) = ?z",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Homogeneous_Coordinates.add_zero_left", "0\<^sub>h +\<^sub>h ?z = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Homogeneous_Coordinates.add_zero_right",
     "?z +\<^sub>h 0\<^sub>h = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Homogeneous_Coordinates.conjugate_involution",
     "conjugate (conjugate ?z) = ?z",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Homogeneous_Coordinates.divide_one_right",
     "?z :\<^sub>h 1\<^sub>h = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Homogeneous_Coordinates.inversion_involution",
     "inversion (inversion ?z) = ?z",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Homogeneous_Coordinates.mult_one_left", "1\<^sub>h *\<^sub>h ?z = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Homogeneous_Coordinates.mult_one_right",
     "?z *\<^sub>h 1\<^sub>h = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Homogeneous_Coordinates.reciprocal_involution",
     "reciprocal (reciprocal ?z) = ?z",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Homogeneous_Coordinates.zero_sub_right",
     "?z -\<^sub>h 0\<^sub>h = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Homogeneous_Coordinates.inf_add_of_complex",
     "\<infinity>\<^sub>h +\<^sub>h of_complex ?x = \<infinity>\<^sub>h",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_hole 1)),
    ("Homogeneous_Coordinates.of_complex_add_inf",
     "of_complex ?x +\<^sub>h \<infinity>\<^sub>h = \<infinity>\<^sub>h",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_hole 0)),
    ("Homogeneous_Coordinates.add_commute",
     "?z +\<^sub>h ?w = ?w +\<^sub>h ?z",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Homogeneous_Coordinates.conjugate_of_complex",
     "conjugate (of_complex ?z) = of_complex (cnj ?z)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Homogeneous_Coordinates.mult_commute",
     "?z1.0 *\<^sub>h ?z2.0 = ?z2.0 *\<^sub>h ?z1.0",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Homogeneous_Coordinates.uminus_of_complex",
     "~\<^sub>h (of_complex ?z) = of_complex (- ?z)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Homogeneous_Coordinates.cross_ratio_01inf_id",
     "cross_ratio ?z 0\<^sub>h 1\<^sub>h \<infinity>\<^sub>h = ?z",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2),
           template_hole 1),
         template_hole 0),
       template_var 0)),
    ("Homogeneous_Coordinates.of_complex_ii_iff",
     "(of_complex ?x = ii\<^sub>h) = (?x = \<i>)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Homogeneous_Coordinates.of_complex_one_iff",
     "(of_complex ?x = 1\<^sub>h) = (?x = 1)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Homogeneous_Coordinates.of_complex_zero_iff",
     "(of_complex ?x = 0\<^sub>h) = (?x = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Homogeneous_Coordinates.reciprocal_inf_iff",
     "(reciprocal ?z = \<infinity>\<^sub>h) = (?z = 0\<^sub>h)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_equation (template_var 0, template_hole 0))),
    ("Homogeneous_Coordinates.reciprocal_zero_iff",
     "(reciprocal ?z = 0\<^sub>h) = (?z = \<infinity>\<^sub>h)",
     template_bimplication
      (template_equation
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_equation (template_var 0, template_hole 0))),
    ("Homogeneous_Coordinates.uminus_inf_iff",
     "(~\<^sub>h ?z = \<infinity>\<^sub>h) = (?z = \<infinity>\<^sub>h)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Homogeneous_Coordinates.zero_sub_left",
     "0\<^sub>h -\<^sub>h of_complex ?x = of_complex (- ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Homogeneous_Coordinates.complex_homo_coords_eq_sym",
     "?z1.0 \<approx> ?z2.0 ==> ?z2.0 \<approx> ?z1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Homogeneous_Coordinates.of_complex_sub_one",
     "of_complex ?x -\<^sub>h 1\<^sub>h = of_complex (?x - 1)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Homogeneous_Coordinates.inf_or_of_complex",
     "?z = \<infinity>\<^sub>h | (EX x. ?z = of_complex x)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)),
           template_app (template_hole 1, t_empty))
         )),
    ("Homogeneous_Coordinates.of_complex_add_of_complex",
     "of_complex ?x +\<^sub>h of_complex ?y = of_complex (?x + ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Homogeneous_Coordinates.of_complex_mult_of_complex",
     "of_complex ?z1.0 *\<^sub>h of_complex ?z2.0 =
      of_complex (?z1.0 * ?z2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Homogeneous_Coordinates.of_complex_sub_of_complex",
     "of_complex ?x -\<^sub>h of_complex ?y = of_complex (?x - ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Homogeneous_Coordinates.conjugate_inj",
     "conjugate ?x = conjugate ?y ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 0, template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Homogeneous_Coordinates.of_complex_inj",
     "of_complex ?x = of_complex ?y ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Homogeneous_Coordinates.inf_add_left",
     "?z ~= \<infinity>\<^sub>h ==>
      \<infinity>\<^sub>h +\<^sub>h ?z = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_hole 1), template_var 0),
         template_hole 1))),
    ("Homogeneous_Coordinates.inf_add_right",
     "?z ~= \<infinity>\<^sub>h ==>
      ?z +\<^sub>h \<infinity>\<^sub>h = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_hole 1),
         template_hole 1))),
    ("Homogeneous_Coordinates.divide_inf_left",
     "?z ~= \<infinity>\<^sub>h ==>
      \<infinity>\<^sub>h :\<^sub>h ?z = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_hole 1), template_var 0),
         template_hole 1))),
    ("Homogeneous_Coordinates.divide_inf_right",
     "?z ~= \<infinity>\<^sub>h ==>
      ?z :\<^sub>h \<infinity>\<^sub>h = 0\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 2),
         template_hole 0))),
    ("Homogeneous_Coordinates.mult_zero_left",
     "?z ~= \<infinity>\<^sub>h ==> 0\<^sub>h *\<^sub>h ?z = 0\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_hole 0))),
    ("Homogeneous_Coordinates.mult_zero_right",
     "?z ~= \<infinity>\<^sub>h ==> ?z *\<^sub>h 0\<^sub>h = 0\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_hole 0))),
    ("Homogeneous_Coordinates.of_complex_to_complex",
     "?z ~= \<infinity>\<^sub>h ==> of_complex (to_complex ?z) = ?z",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Homogeneous_Coordinates.inf_sub_left",
     "?z ~= \<infinity>\<^sub>h ==>
      \<infinity>\<^sub>h -\<^sub>h ?z = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_hole 1), template_var 0),
         template_hole 1))),
    ("Homogeneous_Coordinates.inf_sub_right",
     "?z ~= \<infinity>\<^sub>h ==>
      ?z -\<^sub>h \<infinity>\<^sub>h = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_hole 1),
         template_hole 1))),
    ("Homogeneous_Coordinates.sub_eq_zero",
     "?z ~= \<infinity>\<^sub>h ==> ?z -\<^sub>h ?z = 0\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 0),
         template_hole 0))),
    ("Homogeneous_Coordinates.divide_zero_left",
     "?z ~= 0\<^sub>h ==> 0\<^sub>h :\<^sub>h ?z = 0\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_hole 1), template_var 0),
         template_hole 1))),
    ("Homogeneous_Coordinates.divide_zero_right",
     "?z ~= 0\<^sub>h ==> ?z :\<^sub>h 0\<^sub>h = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 2),
         template_hole 0))),
    ("Homogeneous_Coordinates.mult_inf_left",
     "?z ~= 0\<^sub>h ==>
      \<infinity>\<^sub>h *\<^sub>h ?z = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_hole 0))),
    ("Homogeneous_Coordinates.mult_inf_right",
     "?z ~= 0\<^sub>h ==>
      ?z *\<^sub>h \<infinity>\<^sub>h = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_hole 0))),
    ("Homogeneous_Coordinates.uminus_id_iff",
     "(~\<^sub>h ?z = ?z) = (?z = 0\<^sub>h | ?z = \<infinity>\<^sub>h)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 1)),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 0))
           ))),
    ("Homogeneous_Coordinates.cross_ratio_commute_13",
     "cross_ratio ?z ?u ?v ?w = reciprocal (cross_ratio ?v ?u ?z ?w)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2),
             template_var 3),
           template_var 0)))),
    ("Homogeneous_Coordinates.cross_ratio_commute_24",
     "cross_ratio ?z ?u ?v ?w = reciprocal (cross_ratio ?z ?w ?v ?u)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             template_var 1),
           template_var 2)))),
    ("Homogeneous_Coordinates.of_complex_image_inj",
     "of_complex ` ?A = of_complex ` ?B ==> ?A = ?B",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 1),
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Homogeneous_Coordinates.complex_homo_coords_eq_trans",
     "[| ?z1.0 \<approx> ?z2.0; ?z2.0 \<approx> ?z3.0 |]
      ==> ?z1.0 \<approx> ?z3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Homogeneous_Coordinates.conjugate_id_iff",
     "(conjugate ?a = ?a) =
      (is_real (to_complex ?a) | ?a = \<infinity>\<^sub>h)",
     template_bimplication
      (template_equation
        (template_app (template_hole 6, template_var 0), template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0))),
                 template_hole 1)),
             template_app
              (template_app (template_hole 7, template_var 0),
               template_hole 0))
           ))),
    ("Homogeneous_Coordinates.reciprocal_of_complex",
     "?z ~= 0 ==> reciprocal (of_complex ?z) = of_complex (1 / ?z)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Homogeneous_Coordinates.divide_eq_inf",
     "?z :\<^sub>h ?w = \<infinity>\<^sub>h ==>
      ?z = \<infinity>\<^sub>h | ?w = 0\<^sub>h",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 0))
           ))),
    ("Homogeneous_Coordinates.mult_eq_inf",
     "?z *\<^sub>h ?w = \<infinity>\<^sub>h ==>
      ?z = \<infinity>\<^sub>h | ?w = \<infinity>\<^sub>h",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Homogeneous_Coordinates.sub_eq_inf",
     "?z -\<^sub>h ?w = \<infinity>\<^sub>h ==>
      ?z = \<infinity>\<^sub>h | ?w = \<infinity>\<^sub>h",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Homogeneous_Coordinates.reciprocal_id_iff",
     "(reciprocal ?z = ?z) = (?z = of_complex 1 | ?z = of_complex (- 1))",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 0), template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app (template_hole 2, template_hole 1))),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_app
                (template_hole 2,
                 template_app (template_hole 0, template_hole 1))))
           ))),
    ("Homogeneous_Coordinates.one_div_of_complex",
     "?x ~= 0 ==> 1\<^sub>h :\<^sub>h of_complex ?x = of_complex (1 / ?x)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 3),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Homogeneous_Coordinates.inversion_of_complex",
     "?z ~= 0 ==> inversion (of_complex ?z) = of_complex (1 / cnj ?z)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0)))))),
    ("Homogeneous_Coordinates.of_complex_divide_of_complex",
     "?z2.0 ~= 0 ==>
      of_complex ?z1.0 :\<^sub>h of_complex ?z2.0 =
      of_complex (?z1.0 / ?z2.0)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Homogeneous_Coordinates.inf_cvec_z2_zero_iff",
     "(?z1.0, ?z2.0) ~= vec_zero ==>
      ((?z1.0, ?z2.0) \<approx>\<^sub>v \<infinity>\<^sub>v) = (?z2.0 = 0)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0),
              template_hole 5)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 0)),
                template_hole 2)
              )],
         template_equation (template_var 0, template_hole 0)))),
    ("Homogeneous_Coordinates.zero_cvec_z1_zero_iff",
     "(?z1.0, ?z2.0) ~= vec_zero ==>
      ((?z1.0, ?z2.0) \<approx>\<^sub>v 0\<^sub>v) = (?z1.0 = 0)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0),
              template_hole 5)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_var 0)),
                template_hole 2)
              )],
         template_equation (template_var 1, template_hole 0)))),
    ("Homogeneous_Coordinates.ex_3_different_points",
     "EX z1 z2. ?z ~= z1 & z1 ~= z2 & ?z ~= z2",
     template_predicate (template_app (template_hole 3, t_empty))),
    ("Homogeneous_Coordinates.inversion_id_iff",
     "(?a = inversion ?a) =
      (?a ~= \<infinity>\<^sub>h &
       to_complex ?a * cnj (to_complex ?a) = 1)",
     template_bimplication
      (template_equation
        (template_var 0, template_app (template_hole 8, template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_hole 5))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_app
                    (template_hole 1,
                     template_app (template_hole 2, template_var 0)))),
               template_hole 0))
           ))),
    ("Homogeneous_Coordinates.cross_ratio_0inf",
     "?y ~= 0 ==>
      cross_ratio (of_complex ?x) 0\<^sub>h (of_complex ?y)
       \<infinity>\<^sub>h =
      of_complex (?x / ?y)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_hole 2),
             template_app (template_hole 3, template_var 1)),
           template_hole 1),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Homogeneous_Coordinates.mult_noteq_inf",
     "[| ?z ~= \<infinity>\<^sub>h; ?w ~= \<infinity>\<^sub>h |]
      ==> ?z *\<^sub>h ?w ~= \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 1)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 1)
           ))),
    ("Homogeneous_Coordinates.sub_noteq_inf",
     "[| ?z ~= \<infinity>\<^sub>h; ?w ~= \<infinity>\<^sub>h |]
      ==> ?z -\<^sub>h ?w ~= \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 1)),
        template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 1)
           ))),
    ("Homogeneous_Coordinates.cross_ratio_0",
     "[| ?u ~= ?v; ?u ~= ?w |] ==> cross_ratio ?u ?u ?v ?w = 0\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 2),
             template_var 1),
           template_var 0),
         template_hole 0))),
    ("Homogeneous_Coordinates.cross_ratio_1",
     "[| ?u ~= ?v; ?v ~= ?w |] ==> cross_ratio ?v ?u ?v ?w = 1\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2),
             template_var 1),
           template_var 0),
         template_hole 0))),
    ("Homogeneous_Coordinates.cross_ratio_inf",
     "[| ?u ~= ?w; ?v ~= ?w |]
      ==> cross_ratio ?w ?u ?v ?w = \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2),
             template_var 0),
           template_var 1),
         template_hole 0))),
    ("Homogeneous_Coordinates.is_real_inversion",
     "[| is_real ?x; ?x ~= 0 |]
      ==> is_real (to_complex (inversion (of_complex ?x)))",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_var 0), template_hole 6),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))),
         template_hole 6))),
    ("Homogeneous_Coordinates.sub_eq_zero_iff",
     "?z ~= \<infinity>\<^sub>h | ?w ~= \<infinity>\<^sub>h ==>
      (?z -\<^sub>h ?w = 0\<^sub>h) = (?z = ?w)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_hole 3))),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_hole 3)))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0),
         template_equation (template_var 1, template_var 0)))),
    ("Homogeneous_Coordinates.cross_ratio_not_zero",
     "[| ?z ~= ?u; ?v ~= ?w |] ==> cross_ratio ?z ?u ?v ?w ~= 0\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Homogeneous_Coordinates.cross_ratio_not_inf",
     "[| ?z ~= ?w; ?u ~= ?v |]
      ==> cross_ratio ?z ?u ?v ?w ~= \<infinity>\<^sub>h",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1),
                 template_var 0),
               template_var 2),
             template_hole 0)
           ))),
    ("Homogeneous_Coordinates.reciprocal_real",
     "[| is_real (to_complex ?z); ?z ~= 0\<^sub>h;
         ?z ~= \<infinity>\<^sub>h |]
      ==> Re (to_complex (reciprocal ?z)) = 1 / Re (to_complex ?z)",
     template_implication
      ([template_equation
         (template_app
           (template_hole 10,
            template_app (template_hole 9, template_var 0)),
          template_hole 8),
        template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 9,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_hole 3,
             template_app (template_hole 9, template_var 0)))))),
    ("Homogeneous_Coordinates.complex_cvec_eq_mix",
     "[| (?z1.0, ?z2.0) ~= vec_zero; (?w1.0, ?w2.0) ~= vec_zero |]
      ==> ((?z1.0, ?z2.0) \<approx>\<^sub>v (?w1.0, ?w2.0)) =
          (?z1.0 * ?w2.0 = ?z2.0 * ?w1.0)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_hole 4)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_hole 4)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2)),
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0))
              )],
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Homogeneous_Coordinates.cross_ratio_real",
     "[| is_real ?z; is_real ?u; is_real ?v; is_real ?w;
         ?z ~= ?u & ?v ~= ?w | ?z ~= ?w & ?u ~= ?v |]
      ==> is_real
           (to_complex
             (cross_ratio (of_complex ?z) (of_complex ?u) (of_complex ?v)
               (of_complex ?w)))",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 3), template_hole 7),
        template_equation
         (template_app (template_hole 8, template_var 2), template_hole 7),
        template_equation
         (template_app (template_hole 8, template_var 1), template_hole 7),
        template_equation
         (template_app (template_hole 8, template_var 0), template_hole 7),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 2))),
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_var 0)))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 0))),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1))))
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 3)),
                   template_app (template_hole 0, template_var 2)),
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0)))),
         template_hole 7))),
    ("Homogeneous_Coordinates.cross_ratio",
     "[| ?z ~= ?u & ?v ~= ?w | ?z ~= ?w & ?u ~= ?v;
         ?z ~= \<infinity>\<^sub>h; ?u ~= \<infinity>\<^sub>h;
         ?v ~= \<infinity>\<^sub>h; ?w ~= \<infinity>\<^sub>h |]
      ==> cross_ratio ?z ?u ?v ?w =
          (?z -\<^sub>h ?u) *\<^sub>h (?v -\<^sub>h ?w) :\<^sub>h
          ((?z -\<^sub>h ?w) *\<^sub>h (?v -\<^sub>h ?u))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_var 3),
                        template_var 2))),
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_var 0)))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_var 0))),
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1))))
            ),
        template_negation
         (template_equation (template_var 3, template_hole 4)),
        template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))))))]
