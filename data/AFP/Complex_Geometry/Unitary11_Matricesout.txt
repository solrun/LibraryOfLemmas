Loading theory "Draft.Linear_Systems" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.Unitary11_Matrices" via "Draft.Matrices")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Linear_Systems"
### 0.086s elapsed time, 0.376s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.129s elapsed time, 0.526s cpu time, 0.040s GC time
Loading theory "HOL-Library.Periodic_Fun" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.Unitary11_Matrices" via "Draft.Matrices" via "Draft.More_Complex" via "Draft.More_Transcendental")
locale periodic_fun
  fixes f :: "'a => 'b"
    and g :: "'a => 'a => 'a"
    and gm :: "'a => 'a => 'a"
    and g1 :: "'a => 'a"
    and gn1 :: "'a => 'a"
  assumes "periodic_fun f g gm g1 gn1"
Found termination order: "size_list size <*mlex*> {}"
locale periodic_fun_simple
  fixes f :: "'a => 'b"
    and period :: "'a"
  assumes "periodic_fun_simple f period"
locale periodic_fun_simple'
  fixes f :: "'a => 'b"
  assumes "periodic_fun_simple' f"
### theory "HOL-Library.Set_Algebras"
### 0.246s elapsed time, 1.002s cpu time, 0.040s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Periodic_Fun"
### 0.167s elapsed time, 0.646s cpu time, 0.078s GC time
Loading theory "Draft.More_Transcendental" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.Unitary11_Matrices" via "Draft.Matrices" via "Draft.More_Complex")
### theory "HOL-Library.Nat_Bijection"
### 0.315s elapsed time, 1.254s cpu time, 0.118s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.More_Transcendental"
### 0.084s elapsed time, 0.337s cpu time, 0.000s GC time
Loading theory "Draft.Canonical_Angle" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.Unitary11_Matrices" via "Draft.Matrices" via "Draft.More_Complex")
### theory "Draft.Canonical_Angle"
### 0.104s elapsed time, 0.405s cpu time, 0.076s GC time
Loading theory "Draft.More_Complex" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.Unitary11_Matrices" via "Draft.Matrices")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
### theory "Draft.More_Complex"
### 0.322s elapsed time, 1.273s cpu time, 0.132s GC time
Loading theory "HOL-Library.Quadratic_Discriminant" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.Unitary11_Matrices" via "Draft.Matrices" via "Draft.Quadratic")
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Library.Quadratic_Discriminant"
### 0.097s elapsed time, 0.392s cpu time, 0.000s GC time
Loading theory "Draft.Quadratic" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.Unitary11_Matrices" via "Draft.Matrices")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.011s elapsed time, 3.816s cpu time, 0.856s GC time
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.106s elapsed time, 4.071s cpu time, 0.855s GC time
Found termination order: "size <*mlex*> {}"
### theory "Draft.Quadratic"
### 0.518s elapsed time, 1.730s cpu time, 0.646s GC time
Loading theory "Draft.Matrices" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.Unitary11_Matrices")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "HOL-Library.Tree"
### 1.993s elapsed time, 6.337s cpu time, 1.057s GC time
Loading theory "Draft.Templates" (required by "Draft.Unitary11_MatricesMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "{}"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.073s elapsed time, 0.182s cpu time, 0.051s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Unitary11_MatricesMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.533s elapsed time, 1.101s cpu time, 0.064s GC time
### theory "Draft.Matrices"
### 1.335s elapsed time, 2.769s cpu time, 0.293s GC time
Loading theory "Draft.Unitary11_Matrices" (required by "Draft.Unitary11_MatricesMoreTemplates")
### theory "Draft.Unitary11_Matrices"
### 0.145s elapsed time, 0.145s cpu time, 0.000s GC time
Loading theory "Draft.Unitary11_MatricesMoreTemplates"
val templateLemmas =
   [("Unitary11_Matrices.unitary11_unitary11_gen",
     "unitary11 ?M ==> unitary11_gen ?M",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Unitary11_Matrices.unitary11_regular",
     "unitary11 ?M ==> mat_det ?M ~= 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Unitary11_Matrices.unitary11_gen_regular",
     "unitary11_gen ?M ==> mat_det ?M ~= 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Unitary11_Matrices.unitary11_gen_mat_inv",
     "[| unitary11_gen ?M; mat_det ?M ~= 0 |]
      ==> unitary11_gen (mat_inv ?M)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Unitary11_Matrices.unitary11_gen_mult_sm",
     "[| ?k ~= 0; unitary11_gen ?M |]
      ==> unitary11_gen (?k *\<^sub>s\<^sub>m ?M)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Unitary11_Matrices.unitary11_gen_div_sm",
     "[| ?k ~= 0; unitary11_gen (?k *\<^sub>s\<^sub>m ?M) |]
      ==> unitary11_gen ?M",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Unitary11_Matrices.unitary11_special",
     "[| unitary11 ?M; mat_det ?M = 1 |]
      ==> EX a b. ?M = (a, b, cnj b, cnj a)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_equation
         (template_app (template_hole 7, template_var 0), template_hole 6)],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Unitary11_Matrices.unitary11_gen_comp",
     "[| unitary11_gen ?M1.0; mat_det ?M1.0 ~= 0; unitary11_gen ?M2.0;
         mat_det ?M2.0 ~= 0 |]
      ==> unitary11_gen (?M1.0 *\<^sub>m\<^sub>m ?M2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Unitary11_Matrices.unitary11_gen_real",
     "unitary11_gen ?M =
      (EX k. k ~= 0 &
             congruence ?M (1, 0, 0, - 1) =
             cor k *\<^sub>s\<^sub>m (1, 0, 0, - 1))",
     template_equation
      (template_app (template_hole 15, template_var 0),
       template_app (template_hole 14, t_empty))),
    ("Unitary11_Matrices.unitary11_gen_special",
     "[| unitary11_gen ?M; mat_det ?M = 1 |]
      ==> EX a b.
             ?M = (a, b, cnj b, cnj a) | ?M = (a, b, - cnj b, - cnj a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_equation
         (template_app (template_hole 9, template_var 0), template_hole 8)],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Unitary11_Matrices.unitary11_gen_iff",
     "unitary11_gen ?M =
      (EX k a b.
          k ~= 0 &
          mat_det (a, b, cnj b, cnj a) ~= 0 &
          ?M = k *\<^sub>s\<^sub>m (a, b, cnj b, cnj a))",
     template_equation
      (template_app (template_hole 12, template_var 0),
       template_app (template_hole 11, t_empty))),
    ("Unitary11_Matrices.unitary11_gen_cis_inversion",
     "[| ?k ~= 0; ?M = ?k *\<^sub>s\<^sub>m (0, ?b, cnj ?b, 0); ?b ~= 0 |]
      ==> EX k' \<phi>.
             k' ~= 0 &
             ?M =
             k' *\<^sub>s\<^sub>m (cis \<phi>, 0, 0, 1) *\<^sub>m\<^sub>m
             (0, 1, 1, 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 12)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 10, template_var 2),
            template_app
             (template_app (template_hole 9, template_hole 12),
              template_app
               (template_app (template_hole 8, template_var 0),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 0)),
                  template_hole 12))))),
        template_negation
         (template_equation (template_var 0, template_hole 12))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Unitary11_Matrices.unitary11_iff",
     "unitary11 ?M =
      (EX a b k.
          (cmod b)\<^sup>2 < (cmod a)\<^sup>2 &
          (cmod k)\<^sup>2 = 1 / ((cmod a)\<^sup>2 - (cmod b)\<^sup>2) &
          ?M = k *\<^sub>s\<^sub>m (a, b, cnj b, cnj a))",
     template_equation
      (template_app (template_hole 18, template_var 0),
       template_app (template_hole 17, t_empty))),
    ("Unitary11_Matrices.unitary11_orientation",
     "[| unitary11_gen ?M; ?M = (?A, ?B, ?C, ?D) |]
      ==> EX k'.
             sgn k' =
             sgn (if ?B = 0 then 1
                  else sgn (Re (?A * ?D / (?B * ?C)) - 1)) &
             congruence ?M (1, 0, 0, - 1) =
             cor k' *\<^sub>s\<^sub>m (1, 0, 0, - 1)",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 4)),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 19, template_var 3),
            template_app
             (template_app (template_hole 18, template_var 2),
              template_app
               (template_app (template_hole 17, template_var 1),
                template_var 0))))],
       template_predicate (template_app (template_hole 16, t_empty)))),
    ("Unitary11_Matrices.unitary11_gen_iff'",
     "unitary11_gen ?M =
      (EX a b k.
          k ~= 0 &
          mat_det (a, b, cnj b, cnj a) ~= 0 &
          (?M = k *\<^sub>s\<^sub>m (a, b, cnj b, cnj a) |
           ?M =
           k *\<^sub>s\<^sub>m (- 1, 0, 0, 1) *\<^sub>m\<^sub>m
           (a, b, cnj b, cnj a)))",
     template_equation
      (template_app (template_hole 16, template_var 0),
       template_app (template_hole 15, t_empty))),
    ("Unitary11_Matrices.unitary11_gen_cis_inversion'",
     "[| ?k ~= 0;
         ?M =
         ?k *\<^sub>s\<^sub>m (- 1, 0, 0, 1) *\<^sub>m\<^sub>m
         (0, ?b, cnj ?b, 0);
         ?b ~= 0 |]
      ==> EX k' \<phi>.
             k' ~= 0 &
             ?M =
             k' *\<^sub>s\<^sub>m (cis \<phi>, 0, 0, 1) *\<^sub>m\<^sub>m
             (0, 1, 1, 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 13)),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 11,
              template_app
               (template_app (template_hole 10, template_var 2),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_hole 7)),
                  template_app
                   (template_app (template_hole 6, template_hole 13),
                    template_app
                     (template_app (template_hole 5, template_hole 13),
                      template_hole 7))))),
            template_app
             (template_app (template_hole 9, template_hole 13),
              template_app
               (template_app (template_hole 6, template_var 0),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)),
                  template_hole 13))))),
        template_negation
         (template_equation (template_var 0, template_hole 13))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Unitary11_Matrices.unitary11_gen_cis_inversion_rev",
     "[| ?k' ~= 0;
         ?M =
         ?k' *\<^sub>s\<^sub>m (cis ?\<phi>, 0, 0, 1) *\<^sub>m\<^sub>m
         (0, 1, 1, 0) |]
      ==> EX k a b.
             k ~= 0 &
             mat_det (a, b, cnj b, cnj a) ~= 0 &
             ?M = k *\<^sub>s\<^sub>m (a, b, cnj b, cnj a)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 12)),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 2),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 0)),
                  template_app
                   (template_app (template_hole 6, template_hole 12),
                    template_app
                     (template_app (template_hole 5, template_hole 12),
                      template_hole 4))))),
            template_app
             (template_app (template_hole 8, template_hole 12),
              template_app
               (template_app (template_hole 6, template_hole 4),
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_hole 12)))))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Unitary11_Matrices.unitary11_sgn_det_orientation'",
     "[| congruence ?M (1, 0, 0, - 1) =
         cor ?k' *\<^sub>s\<^sub>m (1, 0, 0, - 1);
         ?k' ~= 0 |]
      ==> EX a b k.
             k ~= 0 &
             ?M = k *\<^sub>s\<^sub>m (a, b, cnj b, cnj a) &
             sgn ?k' = sgn (Re (mat_det (a, b, cnj b, cnj a)))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 18, template_var 1),
            template_app
             (template_app (template_hole 17, template_hole 16),
              template_app
               (template_app (template_hole 15, template_hole 14),
                template_app
                 (template_app (template_hole 13, template_hole 14),
                  template_app (template_hole 12, template_hole 16))))),
          template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 0)),
            template_app
             (template_app (template_hole 17, template_hole 16),
              template_app
               (template_app (template_hole 15, template_hole 14),
                template_app
                 (template_app (template_hole 13, template_hole 14),
                  template_app (template_hole 12, template_hole 16)))))),
        template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Unitary11_Matrices.unitary11_inv",
     "[| ?k ~= 0; ?M = ?k *\<^sub>s\<^sub>m (?a, ?b, cnj ?b, cnj ?a);
         mat_det (?a, ?b, cnj ?b, cnj ?a) ~= 0 |]
      ==> EX k' a' b'.
             k' ~= 0 &
             mat_inv ?M = k' *\<^sub>s\<^sub>m (a', b', cnj b', cnj a') &
             mat_det (a', b', cnj b', cnj a') ~= 0",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 10)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 8, template_var 3),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 0),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)),
                  template_app (template_hole 4, template_var 1)))))),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_app
                   (template_app (template_hole 6, template_var 0),
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app (template_hole 4, template_var 0)),
                      template_app (template_hole 4, template_var 1))))),
              template_hole 10)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Unitary11_Matrices.unitary11_sgn_det_orientation",
     "[| ?k ~= 0; mat_det (?a, ?b, cnj ?b, cnj ?a) ~= 0;
         ?M = ?k *\<^sub>s\<^sub>m (?a, ?b, cnj ?b, cnj ?a) |]
      ==> EX k'.
             sgn k' = sgn (Re (mat_det (?a, ?b, cnj ?b, cnj ?a))) &
             congruence ?M (1, 0, 0, - 1) =
             cor k' *\<^sub>s\<^sub>m (1, 0, 0, - 1)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 16)),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 2),
                  template_app
                   (template_app (template_hole 13, template_var 1),
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app (template_hole 11, template_var 1)),
                      template_app (template_hole 11, template_var 2))))),
              template_hole 16)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 9, template_var 3),
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app
               (template_app (template_hole 13, template_var 1),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 1)),
                  template_app (template_hole 11, template_var 2))))))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Unitary11_Matrices.unitary11_sgn_det",
     "[| ?k ~= 0; mat_det (?a, ?b, cnj ?b, cnj ?a) ~= 0;
         ?M = ?k *\<^sub>s\<^sub>m (?a, ?b, cnj ?b, cnj ?a);
         ?M = (?A, ?B, ?C, ?D) |]
      ==> sgn (Re (mat_det (?a, ?b, cnj ?b, cnj ?a))) =
          (if ?b = 0 then 1 else sgn (Re (?A * ?D / (?B * ?C)) - 1))",
     template_implication
      ([template_negation
         (template_equation (template_var 7, template_hole 15)),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 6),
                  template_app
                   (template_app (template_hole 12, template_var 5),
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app (template_hole 10, template_var 5)),
                      template_app (template_hole 10, template_var 6))))),
              template_hole 15)
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 8, template_var 7),
            template_app
             (template_app (template_hole 13, template_var 6),
              template_app
               (template_app (template_hole 12, template_var 5),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 5)),
                  template_app (template_hole 10, template_var 6)))))),
        template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 13, template_var 3),
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_app (template_hole 11, template_var 1),
                template_var 0))))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 13, template_var 6),
                      template_app
                       (template_app (template_hole 12, template_var 5),
                        template_app
                         (template_app
                           (template_hole 11,
                            template_app
                             (template_hole 10, template_var 5)),
                          template_app
                           (template_hole 10, template_var 6)))))))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 16, template_var 5),
                     template_hole 15)),
                 template_hole 3),
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 3),
                             template_var 0)),
                         template_app
                          (template_app (template_hole 0, template_var 2),
                           template_var 1)))),
                   template_hole 3)))
             )))),
    ("Unitary11_Matrices.unitary11_gen_cis_blaschke_rev",
     "[| ?k' ~= 0;
         ?M =
         ?k' *\<^sub>s\<^sub>m (cis ?\<phi>, 0, 0, 1) *\<^sub>m\<^sub>m
         (1, - ?a', - cnj ?a', 1);
         ?a' * cnj ?a' ~= 1 |]
      ==> EX k a b.
             k ~= 0 &
             mat_det (a, b, cnj b, cnj a) ~= 0 &
             ?M = k *\<^sub>s\<^sub>m (a, b, cnj b, cnj a)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 14)),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_var 3),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 1)),
                  template_app
                   (template_app (template_hole 8, template_hole 14),
                    template_app
                     (template_app (template_hole 7, template_hole 14),
                      template_hole 6))))),
            template_app
             (template_app (template_hole 10, template_hole 6),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 5, template_var 0)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_hole 5,
                      template_app (template_hole 4, template_var 0))),
                  template_hole 6))))),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 0),
                template_app (template_hole 4, template_var 0)),
              template_hole 6)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Unitary11_Matrices.unitary11_gen_cis_blaschke",
     "[| ?k ~= 0; ?M = ?k *\<^sub>s\<^sub>m (?a, ?b, cnj ?b, cnj ?a);
         ?a ~= 0; mat_det (?a, ?b, cnj ?b, cnj ?a) ~= 0 |]
      ==> EX k' \<phi> a'.
             k' ~= 0 &
             a' * cnj a' ~= 1 &
             ?M =
             k' *\<^sub>s\<^sub>m (cis \<phi>, 0, 0, 1) *\<^sub>m\<^sub>m
             (1, - a', - cnj a', 1)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 15)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 13, template_var 3),
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app
               (template_app (template_hole 11, template_var 0),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 0)),
                  template_app (template_hole 9, template_var 1)))))),
        template_negation
         (template_equation (template_var 1, template_hole 15)),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 12, template_var 1),
                  template_app
                   (template_app (template_hole 11, template_var 0),
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app (template_hole 9, template_var 0)),
                      template_app (template_hole 9, template_var 1))))),
              template_hole 15)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Unitary11_Matrices.unitary11_gen_cis_blaschke'",
     "[| ?k ~= 0;
         ?M =
         ?k *\<^sub>s\<^sub>m (- 1, 0, 0, 1) *\<^sub>m\<^sub>m
         (?a, ?b, cnj ?b, cnj ?a);
         ?a ~= 0; mat_det (?a, ?b, cnj ?b, cnj ?a) ~= 0 |]
      ==> EX k' \<phi> a'.
             k' ~= 0 &
             a' * cnj a' ~= 1 &
             ?M =
             k' *\<^sub>s\<^sub>m (cis \<phi>, 0, 0, 1) *\<^sub>m\<^sub>m
             (1, - a', - cnj a', 1)",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 15)),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 12, template_var 3),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_hole 9)),
                  template_app
                   (template_app (template_hole 8, template_hole 15),
                    template_app
                     (template_app (template_hole 7, template_hole 15),
                      template_hole 9))))),
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_app (template_hole 8, template_var 0),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 0)),
                  template_app (template_hole 6, template_var 1)))))),
        template_negation
         (template_equation (template_var 1, template_hole 15)),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 11, template_var 1),
                  template_app
                   (template_app (template_hole 8, template_var 0),
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_var 0)),
                      template_app (template_hole 6, template_var 1))))),
              template_hole 15)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Unitary11_Matrices.unitary11_comp",
     "[| ?k1.0 ~= 0;
         ?M1.0 =
         ?k1.0 *\<^sub>s\<^sub>m (?a1.0, ?b1.0, cnj ?b1.0, cnj ?a1.0);
         mat_det (?a1.0, ?b1.0, cnj ?b1.0, cnj ?a1.0) ~= 0; ?k2.0 ~= 0;
         ?M2.0 =
         ?k2.0 *\<^sub>s\<^sub>m (?a2.0, ?b2.0, cnj ?b2.0, cnj ?a2.0);
         mat_det (?a2.0, ?b2.0, cnj ?b2.0, cnj ?a2.0) ~= 0 |]
      ==> EX k a b.
             k ~= 0 &
             ?M1.0 *\<^sub>m\<^sub>m ?M2.0 =
             k *\<^sub>s\<^sub>m (a, b, cnj b, cnj a) &
             mat_det (a, b, cnj b, cnj a) ~= 0",
     template_implication
      ([template_negation
         (template_equation (template_var 7, template_hole 10)),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 8, template_var 7),
            template_app
             (template_app (template_hole 7, template_var 5),
              template_app
               (template_app (template_hole 6, template_var 4),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 4)),
                  template_app (template_hole 4, template_var 5)))))),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 7, template_var 5),
                  template_app
                   (template_app (template_hole 6, template_var 4),
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app (template_hole 4, template_var 4)),
                      template_app (template_hole 4, template_var 5))))),
              template_hole 10)
            ),
        template_negation
         (template_equation (template_var 3, template_hole 10)),
        template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 8, template_var 3),
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 0),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 0)),
                  template_app (template_hole 4, template_var 1)))))),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_app
                   (template_app (template_hole 6, template_var 0),
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app (template_hole 4, template_var 0)),
                      template_app (template_hole 4, template_var 1))))),
              template_hole 10)
            )],
       template_predicate (template_app (template_hole 2, t_empty))))]:
   (string * thm * template) list
### theory "Draft.Unitary11_MatricesMoreTemplates"
### 0.334s elapsed time, 0.454s cpu time, 0.059s GC time
val it = (): unit
