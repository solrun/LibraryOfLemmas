   [("Hermitean_Matrices.hermitean_mat_cnj",
     "hermitean ?H = hermitean (mat_cnj ?H)",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Hermitean_Matrices.hermitean_transpose",
     "hermitean ?A = (mat_transpose ?A = mat_cnj ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Hermitean_Matrices.hermitean_congruence",
     "hermitean ?H ==> hermitean (congruence ?M ?H)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Hermitean_Matrices.mat_det_hermitean_real",
     "hermitean ?A ==> is_real (mat_det ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Hermitean_Matrices.hermitean_mult_real",
     "hermitean ?H ==> hermitean (cor ?k *\<^sub>s\<^sub>m ?H)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("Hermitean_Matrices.quad_form_hermitean_real",
     "hermitean ?H ==> is_real (quad_form ?z ?H)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("Hermitean_Matrices.hermitean_mk_circline",
     "hermitean (cor ?A, ?B, cnj ?B, cor ?D)",
     template_predicate
      (
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_app (template_hole 3, template_var 0)))))
         )),
    ("Hermitean_Matrices.quad_form_vec_cnj_mat_cnj",
     "hermitean ?H ==>
      quad_form (vec_cnj ?z) (mat_cnj ?H) = quad_form ?z ?H",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 1)))),
    ("Hermitean_Matrices.hermitean_eigenval_real",
     "[| hermitean ?H; eigenval ?k ?H |] ==> is_real ?k",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Hermitean_Matrices.bilinear_form_hermitean_commute",
     "hermitean ?H ==>
      bilinear_form ?v1.0 ?v2.0 ?H = cnj (bilinear_form ?v2.0 ?v1.0 ?H)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_var 2),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_var 2))))),
    ("Hermitean_Matrices.hermitean_elems",
     "hermitean (?A, ?B, ?C, ?D) ==> is_real ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 0))))
            )],
       template_equation
        (template_app (template_hole 1, template_var 3), template_hole 0))),
    ("Hermitean_Matrices.hermitean_elems",
     "hermitean (?A, ?B, ?C, ?D) ==> is_real ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 0))))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Hermitean_Matrices.hermitean_elems",
     "hermitean (?A, ?B, ?C, ?D) ==> ?B = cnj ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))))
            )],
       template_equation
        (template_var 2, template_app (template_hole 0, template_var 1)))),
    ("Hermitean_Matrices.hermitean_elems",
     "hermitean (?A, ?B, ?C, ?D) ==> cnj ?B = ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app
                   (template_app (template_hole 2, template_var 1),
                    template_var 0))))
            )],
       template_equation
        (template_app (template_hole 0, template_var 2), template_var 1))),
    ("Hermitean_Matrices.hermitean_det_zero_trace_zero",
     "[| mat_det ?A = 0; mat_trace ?A = 0; hermitean ?A |]
      ==> ?A = mat_zero",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 0), template_hole 4),
        template_equation
         (template_app (template_hole 3, template_var 0), template_hole 4),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation (template_var 0, template_hole 0))),
    ("Hermitean_Matrices.hermitean_mk_circline'",
     "[| is_real ?A; is_real ?D |] ==> hermitean (?A, ?B, cnj ?B, ?D)",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 2), template_hole 5),
        template_equation
         (template_app (template_hole 6, template_var 1), template_hole 5)],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 0)),
                   template_var 1))))
           ))),
    ("Hermitean_Matrices.hermitean_distinct_eigenvals",
     "hermitean ?H ==>
      (EX k\<^sub>1 k\<^sub>2.
          k\<^sub>1 ~= k\<^sub>2 &
          eigenval k\<^sub>1 ?H & eigenval k\<^sub>2 ?H) |
      mat_diagonal ?H",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6, template_app (template_hole 5, t_empty)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Hermitean_Matrices.hermitean_ortho_eigenvecs",
     "[| hermitean ?H; eigenpair ?k1.0 ?v1.0 ?H; eigenpair ?k2.0 ?v2.0 ?H;
         ?k1.0 ~= ?k2.0 |]
      ==> vec_cnj ?v1.0 *\<^sub>v\<^sub>v ?v2.0 = 0",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_var 4)
            ),
        template_negation
         (template_equation (template_var 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 0),
         template_hole 0))),
    ("Hermitean_Matrices.hermitean_ortho_eigenvecs",
     "[| hermitean ?H; eigenpair ?k1.0 ?v1.0 ?H; eigenpair ?k2.0 ?v2.0 ?H;
         ?k1.0 ~= ?k2.0 |]
      ==> vec_cnj ?v2.0 *\<^sub>v\<^sub>v ?v1.0 = 0",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_var 4)
            ),
        template_negation
         (template_equation (template_var 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 2),
         template_hole 0))),
    ("Hermitean_Matrices.hermitean_diagonizable",
     "hermitean ?H ==>
      EX k1 k2 M.
         mat_det M ~= 0 &
         unitary M &
         congruence M ?H = (k1, 0, 0, k2) &
         is_real k1 &
         is_real k2 & sgn (Re k1 * Re k2) = sgn (Re (mat_det ?H))",
     template_implication
      ([template_predicate
         (template_app (template_hole 19, template_var 0))],
       template_predicate (template_app (template_hole 18, t_empty))))]
