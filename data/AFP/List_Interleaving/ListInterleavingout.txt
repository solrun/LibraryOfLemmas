Loading theory "Draft.ListInterleaving" (required by "Draft.ListInterleavingMoreTemplates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ListInterleavingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.ListInterleavingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ListInterleavingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.147s elapsed time, 0.592s cpu time, 0.038s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.ListInterleavingMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.231s elapsed time, 0.932s cpu time, 0.038s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ListInterleavingMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.317s elapsed time, 1.262s cpu time, 0.120s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.ListInterleavingMoreTemplates" via "Draft.ExtrEqs")
Found termination order:
  "(%p. length (snd (snd (snd p)))) <*mlex*>
   (%p. length (fst (snd (snd p)))) <*mlex*> {}"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
Found termination order: "size <*mlex*> {}"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order:
  "(%p. length (snd (snd (snd p)))) <*mlex*>
   (%p. length (fst (snd (snd p)))) <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.998s elapsed time, 3.791s cpu time, 0.895s GC time
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "Draft.ListInterleaving"
### 1.300s elapsed time, 4.929s cpu time, 0.933s GC time
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.114s elapsed time, 4.013s cpu time, 0.935s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.885s elapsed time, 5.371s cpu time, 1.086s GC time
Loading theory "Draft.Templates" (required by "Draft.ListInterleavingMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.061s elapsed time, 0.108s cpu time, 0.046s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ListInterleavingMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.441s elapsed time, 0.446s cpu time, 0.000s GC time
Loading theory "Draft.ListInterleavingMoreTemplates"
val templateLemmas =
   [("ListInterleaving.interleaves_nil_all", "?xs \<simeq> {[], ?xs, ?P}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0),
           template_var 0)
         )),
    ("ListInterleaving.interleaves_all_nil", "?xs \<simeq> {?xs, [], ?P}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_var 0),
           template_hole 0)
         )),
    ("ListInterleaving.Interleaves_equal_nil_all",
     "?xs \<cong> {[], ?zs, ?P} ==> ?xs = ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("ListInterleaving.Interleaves_equal_all_nil",
     "?xs \<cong> {?ys, [], ?P} ==> ?xs = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("ListInterleaving.interleaves_equal_nil_all",
     "?xs \<simeq> {[], ?zs, ?P} ==> ?xs = ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("ListInterleaving.interleaves_equal_all_nil",
     "?xs \<simeq> {?ys, [], ?P} ==> ?xs = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("ListInterleaving.Interleaves_interleaves",
     "?xs \<cong> {?ys, ?zs, ?P} ==> ?xs \<simeq> {?ys, ?zs, ?P}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ListInterleaving.Interleaves_nil",
     "[] \<cong> {?ys, ?zs, ?P} ==> ?ys = [] & ?zs = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_hole 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 2))
           ))),
    ("ListInterleaving.interleaves_nil",
     "[] \<simeq> {?ys, ?zs, ?P} ==> ?ys = [] & ?zs = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_hole 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 2))
           ))),
    ("ListInterleaving.Interleaves_suffix_one_aux",
     "?P ?x [] ==> ~ ?xs @ [?x] \<cong> {[], ?zs, ?P}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2),
              template_hole 4)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_hole 4))),
                   template_hole 4),
                 template_var 0)
               )
           ))),
    ("ListInterleaving.Interleaves_length",
     "?xs \<cong> {?ys, ?zs, ?P} ==> length ?xs = length ?ys + length ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))))),
    ("ListInterleaving.interleaves_length",
     "?xs \<simeq> {?ys, ?zs, ?P} ==> length ?xs = length ?ys + length ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))))),
    ("ListInterleaving.Interleaves_swap",
     "?xs \<cong> {?ys, ?zs, ?P} =
      ?xs \<cong> {?zs, ?ys, %w ws. ~ ?P w ws}",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 2),
           template_var 0),
         template_var 1))),
    ("ListInterleaving.interleaves_swap",
     "?xs \<simeq> {?ys, ?zs, ?P} =
      ?xs \<simeq> {?zs, ?ys, %w ws. ~ ?P w ws}",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 2),
           template_var 0),
         template_var 1))),
    ("ListInterleaving.Interleaves_equal_snd",
     "[| ?xs \<cong> {?ys, ?zs, ?P}; ?xs \<cong> {?ys, ?zs', ?P} |]
      ==> ?zs = ?zs'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("ListInterleaving.Interleaves_equal_fst",
     "[| ?xs \<cong> {?ys, ?zs, ?P}; ?xs \<cong> {?ys', ?zs, ?P} |]
      ==> ?ys = ?ys'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 0),
              template_var 1)
            )],
       template_equation (template_var 2, template_var 0))),
    ("ListInterleaving.interleaves_equal_snd",
     "[| ?xs \<simeq> {?ys, ?zs, ?P}; ?xs \<simeq> {?ys, ?zs', ?P} |]
      ==> ?zs = ?zs'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("ListInterleaving.interleaves_equal_fst",
     "[| ?xs \<simeq> {?ys, ?zs, ?P}; ?xs \<simeq> {?ys', ?zs, ?P} |]
      ==> ?ys = ?ys'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 0),
              template_var 1)
            )],
       template_equation (template_var 2, template_var 0))),
    ("ListInterleaving.Interleaves_all_nil",
     "?xs \<cong> {?xs, [], ?P} =
      (ALL n<length ?xs. ?P (?xs ! n) (drop (Suc n) ?xs))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 8, template_var 1),
             template_var 0),
           template_var 0),
         template_hole 7),
       template_app (template_hole 6, t_empty))),
    ("ListInterleaving.Interleaves_all_nil_1",
     "[| ?xs \<cong> {?xs, [], ?P}; ?n < length ?xs |]
      ==> ?P (?xs ! ?n) (drop (Suc ?n) ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 1),
              template_hole 5)
            ),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_var 2,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("ListInterleaving.Interleaves_nil_all",
     "?xs \<cong> {[], ?xs, ?P} =
      (ALL n<length ?xs. ~ ?P (?xs ! n) (drop (Suc n) ?xs))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 9, template_var 1),
             template_var 0),
           template_hole 8),
         template_var 0),
       template_app (template_hole 7, t_empty))),
    ("ListInterleaving.Interleaves_all_nil_2",
     "(!!n. n < length ?xs ==> ?P (?xs ! n) (drop (Suc n) ?xs)) ==>
      ?xs \<cong> {?xs, [], ?P}",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1),
               template_var 1),
             template_hole 0)
           ))),
    ("ListInterleaving.Interleaves_suffix_one_fst",
     "?P ?x [] ==>
      ?xs \<cong> {?ys, ?zs, %w ws. ?P w (ws @ [?x])} =
      ?xs @ [?x] \<cong> {?ys @ [?x], ?zs, ?P}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 3),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_hole 4))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_hole 4))),
           template_var 0)))),
    ("ListInterleaving.Interleaves_suffix_one_snd",
     "~ ?P ?x [] ==>
      ?xs \<cong> {?ys, ?zs, %w ws. ?P w (ws @ [?x])} =
      ?xs @ [?x] \<cong> {?ys, ?zs @ [?x], ?P}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_var 4, template_var 3),
                  template_hole 4)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_hole 4))),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_hole 4)))))),
    ("ListInterleaving.Interleaves_suffix_one_fst_2",
     "[| ?P ?x []; ?xs @ [?x] \<cong> {?ys @ [?x], ?zs, ?P} |]
      ==> ?xs \<cong> {?ys, ?zs, %w ws. ?P w (ws @ [?x])}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 3),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_app
                     (template_app (template_hole 0, template_var 3),
                      template_hole 3))),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_hole 3))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, t_empty), template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ListInterleaving.Interleaves_suffix_one_fst_1",
     "[| ?P ?x []; ?xs \<cong> {?ys, ?zs, %w ws. ?P w (ws @ [?x])} |]
      ==> ?xs @ [?x] \<cong> {?ys @ [?x], ?zs, ?P}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 4, template_var 3),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, t_empty), template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_hole 3))),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_hole 3))),
             template_var 0)
           ))),
    ("ListInterleaving.Interleaves_filter",
     "[| !!x xs. ?P x (filter ?Q xs) = ?P x xs;
         ?xs \<cong> {?ys, ?zs, ?P} |]
      ==> filter ?Q ?xs \<cong> {filter ?Q ?ys, filter ?Q ?zs, ?P}",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0))
           ))),
    ("ListInterleaving.interleaves_filter",
     "[| !!x xs. ?P x (filter ?Q xs) = ?P x xs;
         ?xs \<simeq> {?ys, ?zs, ?P} |]
      ==> filter ?Q ?xs \<simeq> {filter ?Q ?ys, filter ?Q ?zs, ?P}",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0))
           ))),
    ("ListInterleaving.Interleaves_map",
     "[| inj ?f; ?xs \<cong> {?ys, ?zs, ?P} |]
      ==> map ?f
           ?xs \<cong> {map ?f
                         ?ys, map ?f
                               ?zs, %w ws.
 ?P (inv ?f w) (map (inv ?f) ws)}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, t_empty),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("ListInterleaving.interleaves_map",
     "[| inj ?f; ?xs \<simeq> {?ys, ?zs, ?P} |]
      ==> map ?f
           ?xs \<simeq> {map ?f
                          ?ys, map ?f
                                ?zs, %w ws.
  ?P (inv ?f w) (map (inv ?f) ws)}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, t_empty),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("ListInterleaving.Interleaves_prefix_fst",
     "(!!n. n < length ?ws ==> ?P (?ws ! n) (drop (Suc n) ?ws @ ?xs)) ==>
      ?xs \<cong> {?ys, ?zs, ?P} = ?ws @ ?xs \<cong> {?ws @ ?ys, ?zs, ?P}",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 2)),
             template_app
              (template_app (template_hole 4, template_var 4),
               template_var 1)),
           template_var 0)))),
    ("ListInterleaving.interleaves_prefix_fst",
     "(!!n. n < length ?ws ==> ?P (?ws ! n) (drop (Suc n) ?ws @ ?xs)) ==>
      ?xs \<simeq> {?ys, ?zs, ?P} =
      ?ws @ ?xs \<simeq> {?ws @ ?ys, ?zs, ?P}",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 2)),
             template_app
              (template_app (template_hole 4, template_var 4),
               template_var 1)),
           template_var 0)))),
    ("ListInterleaving.Interleaves_suffix_aux",
     "[| !!n. n < length ?ws ==> ?P (?ws ! n) (drop (Suc n) ?ws);
         ?x # ?xs @ ?ws \<cong> {?ws, ?zs, ?P} |]
      ==> ~ ?P ?x (?xs @ ?ws)",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_app
                     (template_app (template_hole 1, template_var 1),
                      template_var 4))),
                template_var 4),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_var 3, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 4))
               )
           ))),
    ("ListInterleaving.Interleaves_prefix_snd",
     "(!!n. n < length ?ws ==> ~ ?P (?ws ! n) (drop (Suc n) ?ws @ ?xs)) ==>
      ?xs \<cong> {?ys, ?zs, ?P} = ?ws @ ?xs \<cong> {?ys, ?ws @ ?zs, ?P}",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 2)),
             template_var 1),
           template_app
            (template_app (template_hole 4, template_var 4),
             template_var 0))))),
    ("ListInterleaving.interleaves_prefix_snd",
     "(!!n. n < length ?ws ==> ~ ?P (?ws ! n) (drop (Suc n) ?ws @ ?xs)) ==>
      ?xs \<simeq> {?ys, ?zs, ?P} =
      ?ws @ ?xs \<simeq> {?ys, ?ws @ ?zs, ?P}",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 2)),
             template_var 1),
           template_app
            (template_app (template_hole 4, template_var 4),
             template_var 0))))),
    ("ListInterleaving.Interleaves_prefix_fst_1",
     "[| ?xs \<cong> {?ys, ?zs, ?P};
         !!n. n < length ?ws ==> ?P (?ws ! n) (drop (Suc n) ?ws @ ?xs) |]
      ==> ?ws @ ?xs \<cong> {?ws @ ?ys, ?zs, ?P}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 4),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 3)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("ListInterleaving.interleaves_prefix_fst_1",
     "[| ?xs \<simeq> {?ys, ?zs, ?P};
         !!n. n < length ?ws ==> ?P (?ws ! n) (drop (Suc n) ?ws @ ?xs) |]
      ==> ?ws @ ?xs \<simeq> {?ws @ ?ys, ?zs, ?P}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 4),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 3)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2)),
             template_var 1)
           ))),
    ("ListInterleaving.Interleaves_prefix_fst_2",
     "[| ?ws @ ?xs \<cong> {?ws @ ?ys, ?zs, ?P};
         !!n. n < length ?ws ==> ?P (?ws ! n) (drop (Suc n) ?ws @ ?xs) |]
      ==> ?xs \<cong> {?ys, ?zs, ?P}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2)),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ListInterleaving.interleaves_prefix_fst_2",
     "[| ?ws @ ?xs \<simeq> {?ws @ ?ys, ?zs, ?P};
         !!n. n < length ?ws ==> ?P (?ws ! n) (drop (Suc n) ?ws @ ?xs) |]
      ==> ?xs \<simeq> {?ys, ?zs, ?P}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2)),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 1)),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 4),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ListInterleaving.Interleaves_suffix_fst",
     "(!!n. n < length ?ws ==> ?P (?ws ! n) (drop (Suc n) ?ws)) ==>
      ?xs \<cong> {?ys, ?zs, %v vs. ?P v (vs @ ?ws)} =
      ?xs @ ?ws \<cong> {?ys @ ?ws, ?zs, ?P}",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, t_empty), template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 4)),
           template_var 0)))),
    ("ListInterleaving.Interleaves_suffix_snd",
     "(!!n. n < length ?ws ==> ~ ?P (?ws ! n) (drop (Suc n) ?ws)) ==>
      ?xs \<cong> {?ys, ?zs, %v vs. ?P v (vs @ ?ws)} =
      ?xs @ ?ws \<cong> {?ys, ?zs @ ?ws, ?P}",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, t_empty), template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4)),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 4))))),
    ("ListInterleaving.Interleaves_suffix_fst_2",
     "[| !!n. n < length ?ws ==> ?P (?ws ! n) (drop (Suc n) ?ws);
         ?xs @ ?ws \<cong> {?ys @ ?ws, ?zs, ?P} |]
      ==> ?xs \<cong> {?ys, ?zs, %v vs. ?P v (vs @ ?ws)}",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 4)),
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 4)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, t_empty), template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ListInterleaving.Interleaves_suffix_fst_1",
     "[| !!n. n < length ?ws ==> ?P (?ws ! n) (drop (Suc n) ?ws);
         ?xs \<cong> {?ys, ?zs, %v vs. ?P v (vs @ ?ws)} |]
      ==> ?xs @ ?ws \<cong> {?ys @ ?ws, ?zs, ?P}",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, t_empty), template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 4)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 4)),
             template_var 0)
           )))]:
   (string * thm * template) list
### theory "Draft.ListInterleavingMoreTemplates"
### 0.316s elapsed time, 0.444s cpu time, 0.056s GC time
val it = (): unit
