   [("Prelim.distinct_asList", "finite ?A ==> distinct (asList ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Prelim.stl_o_sdrop", "stl o sdrop ?n = sdrop (Suc ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Prelim.sdrop_o_stl", "sdrop ?n o stl = sdrop (Suc ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_hole 2, template_app (template_hole 0, template_var 0)))),
    ("Prelim.append_singl_rev", "?a # ?as = [?a] @ ?as",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 0)),
         template_var 0))),
    ("Prelim.set_asList", "finite ?A ==> set (asList ?A) = ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Prelim.hd_stake", "0 < ?i ==> hd (stake ?i ?\<pi>) = shd ?\<pi>",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Prelim.asList",
     "finite ?A ==> distinct (asList ?A) & set (asList ?A) = ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_hole 0,
                   template_app (template_hole 2, template_var 0))),
               template_var 0))
           ))),
    ("Prelim.list_pair_induct",
     "[| ?P []; !!a b list. ?P list ==> ?P ((a, b) # list) |]
      ==> ?P ?lista",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 5)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Prelim.list_pair_case",
     "[| ?xs = [] ==> ?P; !!a b list. ?xs = (a, b) # list ==> ?P |] ==> ?P",
     template_implication
      ([template_implication
         ([template_equation (template_var 1, template_hole 5)],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0)))]
