   [("Restricted_Predicates.tranclp_idemp", "?P^++^++ = ?P^++",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Restricted_Predicates.wfp_on_UNIV", "wfp_on ?P UNIV = wfP ?P",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Restricted_Predicates.wfp_on_iff_inductive_on",
     "wfp_on ?P ?A = inductive_on ?P ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Restricted_Predicates.irreflp_on_converse_simp",
     "irreflp_on ?P^--1 ?A = irreflp_on ?P ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Restricted_Predicates.po_on_converse_simp",
     "po_on ?P^--1 ?A = po_on ?P ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Restricted_Predicates.reflp_on_converse_simp",
     "reflp_on ?P^--1 ?A = reflp_on ?P ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Restricted_Predicates.transp_on_converse_simp",
     "transp_on ?P^--1 ?A = transp_on ?P ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Restricted_Predicates.antisymp_on_reflclp",
     "antisymp_on ?P^== ?A = antisymp_on ?P ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Restricted_Predicates.wfp_on_restrict_to",
     "wfp_on (restrict_to ?P ?A) ?A = wfp_on ?P ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Restricted_Predicates.wfp_on_restrict_to_tranclp_wfp_on_conv",
     "wfp_on (restrict_to ?P ?A)^++ ?A = wfp_on ?P ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Restricted_Predicates.inductive_on_accessible_on_conv",
     "inductive_on ?P ?A = (ALL x:?A. accessible_on ?P ?A x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("Restricted_Predicates.wfp_on_accessible_on_iff",
     "wfp_on ?P ?A = (ALL x:?A. accessible_on ?P ?A x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("Restricted_Predicates.qo_on_UNIV_conv",
     "qo_on ?P UNIV = class.preorder ?P (strict ?P)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 0), t_empty))),
    ("Restricted_Predicates.restrict_to_iff",
     "restrict_to ?P ?A ?x ?y = (?x : ?A & ?y : ?A & ?P ?x ?y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_var 3, template_var 1),
             template_var 0))))),
    ("Restricted_Predicates.in_measure_on",
     "measure_on ?f ?A ?x ?y = (?x : ?A & ?y : ?A & ?f ?x < ?f ?y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 3, template_var 1)),
             template_app (template_var 3, template_var 0)))))),
    ("Restricted_Predicates.strict_reflclp_conv",
     "strict ?P^== = strict ?P", template_equation (t_empty, t_empty)),
    ("Restricted_Predicates.wfp_on_iff_minimal",
     "wfp_on ?P ?A =
      (ALL Q x. x : Q & Q <= ?A --> (EX z:Q. ALL y. ?P y z --> y ~: Q))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Restricted_Predicates.in_inv_image_betw",
     "inv_image_betw ?P ?f ?A ?B ?x ?y =
      (?x : ?A & ?y : ?A & ?f ?x : ?B & ?f ?y : ?B & ?P (?f ?x) (?f ?y))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_var 4, template_var 1)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_var 4, template_var 0)),
                   template_var 2)),
               template_app
                (template_app
                  (template_var 5,
                   template_app (template_var 4, template_var 1)),
                 template_app (template_var 4, template_var 0)))))))),
    ("Restricted_Predicates.tranclp_stepfun_conv",
     "?P^++ ?x ?y =
      (EX f n.
          f 0 = ?x & f (Suc n) = ?y & (ALL i<=n. ?P (f i) (f (Suc i))))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 8, t_empty)))]
