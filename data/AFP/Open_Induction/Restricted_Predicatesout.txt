Loading theory "Draft.Restricted_Predicates" (required by "Draft.Restricted_PredicatesMoreTemplates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Restricted_PredicatesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Restricted_PredicatesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Restricted_PredicatesMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.148s elapsed time, 0.614s cpu time, 0.040s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Restricted_PredicatesMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Set_Algebras"
### 0.198s elapsed time, 0.816s cpu time, 0.040s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Restricted_PredicatesMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
Proofs for inductive predicate(s) "accessible_on"
  Proving monotonicity ...
### theory "Draft.Restricted_Predicates"
### 0.356s elapsed time, 1.430s cpu time, 0.117s GC time
### theory "HOL-Library.Nat_Bijection"
### 0.372s elapsed time, 1.486s cpu time, 0.117s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Restricted_PredicatesMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.730s elapsed time, 2.368s cpu time, 0.283s GC time
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.947s elapsed time, 2.660s cpu time, 0.703s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.844s elapsed time, 4.279s cpu time, 0.856s GC time
Loading theory "Draft.Templates" (required by "Draft.Restricted_PredicatesMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.052s elapsed time, 0.074s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Restricted_PredicatesMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.456s elapsed time, 0.504s cpu time, 0.059s GC time
Loading theory "Draft.Restricted_PredicatesMoreTemplates"
val templateLemmas =
   [("Restricted_Predicates.reflp_on_reflclp", "reflp_on ?P^== ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0)),
           template_var 0)
         )),
    ("Restricted_Predicates.wfp_on_measure_on",
     "wfp_on (measure_on ?f ?A) ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0)
         )),
    ("Restricted_Predicates.tranclp_idemp", "?P^++^++ = ?P^++",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Restricted_Predicates.wfp_on_UNIV", "wfp_on ?P UNIV = wfP ?P",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Restricted_Predicates.wfp_on_iff_inductive_on",
     "wfp_on ?P ?A = inductive_on ?P ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Restricted_Predicates.irreflp_on_converse_simp",
     "irreflp_on ?P^--1 ?A = irreflp_on ?P ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Restricted_Predicates.po_on_converse_simp",
     "po_on ?P^--1 ?A = po_on ?P ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Restricted_Predicates.reflp_on_converse_simp",
     "reflp_on ?P^--1 ?A = reflp_on ?P ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Restricted_Predicates.transp_on_converse_simp",
     "transp_on ?P^--1 ?A = transp_on ?P ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Restricted_Predicates.inductive_on_imp_wfp_on",
     "inductive_on ?P ?A ==> wfp_on ?P ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Restricted_Predicates.po_on_imp_antisymp_on",
     "po_on ?P ?A ==> antisymp_on ?P ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Restricted_Predicates.po_on_imp_irreflp_on",
     "po_on ?P ?A ==> irreflp_on ?P ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Restricted_Predicates.po_on_imp_transp_on",
     "po_on ?P ?A ==> transp_on ?P ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Restricted_Predicates.qo_on_imp_reflp_on",
     "qo_on ?P ?A ==> reflp_on ?P ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Restricted_Predicates.qo_on_imp_transp_on",
     "qo_on ?P ?A ==> transp_on ?P ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Restricted_Predicates.wfp_on_imp_irreflp_on",
     "wfp_on ?P ?A ==> irreflp_on ?P ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Restricted_Predicates.antisymp_on_reflclp",
     "antisymp_on ?P^== ?A = antisymp_on ?P ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Restricted_Predicates.wfp_on_restrict_to",
     "wfp_on (restrict_to ?P ?A) ?A = wfp_on ?P ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Restricted_Predicates.irreflp_on_converse",
     "irreflp_on ?P ?A ==> irreflp_on ?P^--1 ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Restricted_Predicates.transp_on_converse",
     "transp_on ?P ?A ==> transp_on ?P^--1 ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Restricted_Predicates.accessible_on_imp_mem",
     "accessible_on ?P ?A ?a ==> ?a : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Restricted_Predicates.wfp_on_tranclp_imp_wfp_on",
     "wfp_on ?P^++ ?A ==> wfp_on ?P ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Restricted_Predicates.chain_on_imp_subset",
     "chain_on ?P ?C ?A ==> ?C <= ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation (less_equals, template_var 0, template_var 2))),
    ("Restricted_Predicates.wfp_on_restrict_to_tranclp_wfp_on_conv",
     "wfp_on (restrict_to ?P ?A)^++ ?A = wfp_on ?P ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Restricted_Predicates.po_on_imp_qo_on",
     "po_on ?P ?A ==> qo_on ?P^== ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_var 0)
           ))),
    ("Restricted_Predicates.transp_on_reflclp",
     "transp_on ?P ?A ==> transp_on ?P^== ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_var 0)
           ))),
    ("Restricted_Predicates.inductive_on_accessible_on_conv",
     "inductive_on ?P ?A = (ALL x:?A. accessible_on ?P ?A x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("Restricted_Predicates.wfp_on_accessible_on_iff",
     "wfp_on ?P ?A = (ALL x:?A. accessible_on ?P ?A x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("Restricted_Predicates.wfp_on_restrict_to_tranclp",
     "wfp_on ?P ?A ==> wfp_on (restrict_to ?P ?A)^++ ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_var 0)
           ))),
    ("Restricted_Predicates.wfp_on_restrict_to_tranclp'",
     "wfp_on (restrict_to ?P ?A)^++ ?A ==> wfp_on ?P ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_hole 1,
                  template_app
                   (template_app (template_hole 0, template_var 1),
                    template_var 0))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), template_var 0)
           ))),
    ("Restricted_Predicates.irreflp_on_strict", "irreflp_on (strict ?P) ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)
         )),
    ("Restricted_Predicates.inductive_on_imp_accessible_on",
     "inductive_on ?P ?A ==> ALL x:?A. accessible_on ?P ?A x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)
           ))),
    ("Restricted_Predicates.wfp_on_inv_image_betw",
     "wfp_on ?P ?B ==> wfp_on (inv_image_betw ?P ?f ?A ?B) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1),
                   template_var 0),
                 template_var 2)),
             template_var 0)
           ))),
    ("Restricted_Predicates.wfp_on_imp_inductive_on",
     "wfp_on ?P ?A ==> inductive_on ?P ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, t_empty), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Restricted_Predicates.accessible_on_imp_inductive_on",
     "ALL x:?A. accessible_on ?P ?A x ==> inductive_on ?P ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Restricted_Predicates.accessible_on_imp_wfp_on",
     "ALL x:?A. accessible_on ?P ?A x ==> wfp_on ?P ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Restricted_Predicates.accessible_on_tranclp",
     "accessible_on ?P ?A ?x ==>
      accessible_on (restrict_to ?P ?A)^++ ?A ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1))),
               template_var 1),
             template_var 0)
           ))),
    ("Restricted_Predicates.irreflp_on_subset",
     "[| ?A <= ?B; irreflp_on ?P ?B |] ==> irreflp_on ?P ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Restricted_Predicates.po_on_subset",
     "[| ?A <= ?B; po_on ?P ?B |] ==> po_on ?P ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Restricted_Predicates.qo_on_subset",
     "[| ?A <= ?B; qo_on ?P ?B |] ==> qo_on ?P ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Restricted_Predicates.reflp_on_subset",
     "[| ?A <= ?B; reflp_on ?P ?B |] ==> reflp_on ?P ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Restricted_Predicates.transp_on_subset",
     "[| ?A <= ?B; transp_on ?P ?B |] ==> transp_on ?P ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Restricted_Predicates.wfp_on_subset",
     "[| ?A <= ?B; wfp_on ?P ?B |] ==> wfp_on ?P ?A",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Restricted_Predicates.po_onI",
     "[| irreflp_on ?P ?A; transp_on ?P ?A |] ==> po_on ?P ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Restricted_Predicates.reflp_onI",
     "(!!a. a : ?A ==> ?P a a) ==> reflp_on ?P ?A",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Restricted_Predicates.chain_on_subset",
     "[| ?A <= ?B; chain_on ?P ?C ?A |] ==> chain_on ?P ?C ?B",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Restricted_Predicates.subchain_on",
     "[| ?C <= ?D; chain_on ?P ?D ?A |] ==> chain_on ?P ?C ?A",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Restricted_Predicates.transp_on_irreflp_on_imp_antisymp_on",
     "[| transp_on ?P ?A; irreflp_on ?P ?A |] ==> antisymp_on ?P^== ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_var 0)
           ))),
    ("Restricted_Predicates.qo_on_UNIV_conv",
     "qo_on ?P UNIV = class.preorder ?P (strict ?P)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 0), t_empty))),
    ("Restricted_Predicates.wfp_on_imp_accessible_on",
     "wfp_on ?P ?A ==> ALL x:?A. accessible_on ?P ?A x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)
           ))),
    ("Restricted_Predicates.irreflp_onI",
     "(!!a. a : ?A ==> ~ ?P a a) ==> irreflp_on ?P ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Restricted_Predicates.restrict_to_iff",
     "restrict_to ?P ?A ?x ?y = (?x : ?A & ?y : ?A & ?P ?x ?y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_var 3, template_var 1),
             template_var 0))))),
    ("Restricted_Predicates.transp_on_strict",
     "transp_on ?P ?A ==> transp_on (strict ?P) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_var 0)
           ))),
    ("Restricted_Predicates.accessible_on_restrict_to_downwards",
     "[| (restrict_to ?P ?A)^++ ?a ?b; accessible_on ?P ?A ?b |]
      ==> accessible_on ?P ?A ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Restricted_Predicates.in_measure_on",
     "measure_on ?f ?A ?x ?y = (?x : ?A & ?y : ?A & ?f ?x < ?f ?y)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_var 3, template_var 1)),
             template_app (template_var 3, template_var 0)))))),
    ("Restricted_Predicates.accessible_on_downward",
     "[| accessible_on ?P ?A ?b; ?a : ?A; ?P ?a ?b |]
      ==> accessible_on ?P ?A ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 0), template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Restricted_Predicates.irreflp_on_map",
     "[| irreflp_on ?Q ?B; ?h ` ?A <= ?B |]
      ==> irreflp_on (%x y. ?Q (?h x) (?h y)) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, t_empty), template_var 0)
           ))),
    ("Restricted_Predicates.po_on_map",
     "[| po_on ?Q ?B; ?h ` ?A <= ?B |]
      ==> po_on (%x y. ?Q (?h x) (?h y)) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, t_empty), template_var 0)
           ))),
    ("Restricted_Predicates.transp_on_map",
     "[| transp_on ?Q ?B; ?h ` ?A <= ?B |]
      ==> transp_on (%x y. ?Q (?h x) (?h y)) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, t_empty), template_var 0)
           ))),
    ("Restricted_Predicates.wfp_on_imp_has_min_elt",
     "[| wfp_on ?P ?A; ?A ~= {} |] ==> EX x:?A. ALL y:?A. ~ ?P y x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)
           ))),
    ("Restricted_Predicates.reflp_on_reflclp_simp",
     "[| reflp_on ?P ?A; ?a : ?A; ?b : ?A |] ==> ?P^== ?a ?b = ?P ?a ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_hole 0),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_var 3, template_var 1),
           template_var 0)))),
    ("Restricted_Predicates.strict_reflclp_conv",
     "strict ?P^== = strict ?P", template_equation (t_empty, t_empty)),
    ("Restricted_Predicates.restrict_to_rtranclp",
     "[| transp_on ?P ?A; ?x : ?A; ?y : ?A |]
      ==> (restrict_to ?P ?A)^** ?x ?y = ?P^== ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 2)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2)),
                  template_var 1),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_hole 0),
                 template_var 1),
               template_var 0)
             )))),
    ("Restricted_Predicates.wfp_on_iff_minimal",
     "wfp_on ?P ?A =
      (ALL Q x. x : Q & Q <= ?A --> (EX z:Q. ALL y. ?P y z --> y ~: Q))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Restricted_Predicates.wfp_on_imp_minimal",
     "wfp_on ?P ?A ==>
      ALL Q x. x : Q & Q <= ?A --> (EX z:Q. ALL y. ?P y z --> y ~: Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Restricted_Predicates.minimal_imp_inductive_on",
     "ALL Q x. x : Q & Q <= ?A --> (EX z:Q. ALL y. ?P y z --> y ~: Q) ==>
      inductive_on ?P ?A",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Restricted_Predicates.total_onI",
     "(!!x y. [| x : ?A; y : ?A |] ==> x = y | ?P x y | ?P y x) ==>
      Restricted_Predicates.total_on ?P ?A",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Restricted_Predicates.chain_transp_on_less",
     "[| ALL i. ?f i : ?A & ?P (?f i) (?f (Suc i)); transp_on ?P ?A;
         ?i < ?j |]
      ==> ?P (?f ?i) (?f ?j)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 3)
            ),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_var 2,
               template_app (template_var 4, template_var 1)),
             template_app (template_var 4, template_var 0))
           ))),
    ("Restricted_Predicates.reflp_on_restrict_to_rtranclp",
     "[| reflp_on ?P ?A; transp_on ?P ?A; ?x : ?A; ?y : ?A |]
      ==> (restrict_to ?P ?A)^** ?x ?y = ?P ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_var 3, template_var 1),
           template_var 0)))),
    ("Restricted_Predicates.in_inv_image_betw",
     "inv_image_betw ?P ?f ?A ?B ?x ?y =
      (?x : ?A & ?y : ?A & ?f ?x : ?B & ?f ?y : ?B & ?P (?f ?x) (?f ?y))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_var 4, template_var 1)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_var 4, template_var 0)),
                   template_var 2)),
               template_app
                (template_app
                  (template_var 5,
                   template_app (template_var 4, template_var 1)),
                 template_app (template_var 4, template_var 0)))))))),
    ("Restricted_Predicates.stepfun_imp_tranclp",
     "[| ?f 0 = ?x; ?f (Suc ?n) = ?z; ALL i<=?n. ?P (?f i) (?f (Suc i)) |]
      ==> ?P^++ ?x ?z",
     template_implication
      ([template_equation
         (template_app (template_var 4, template_hole 5), template_var 3),
        template_equation
         (template_app
           (template_var 4, template_app (template_hole 4, template_var 2)),
          template_var 1),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3),
             template_var 1)
           ))),
    ("Restricted_Predicates.tranclp_stepfun_conv",
     "?P^++ ?x ?y =
      (EX f n.
          f 0 = ?x & f (Suc n) = ?y & (ALL i<=n. ?P (f i) (f (Suc i))))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 9, template_var 2), template_var 1),
         template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Restricted_Predicates.antisymp_onI",
     "(!!a b. [| a : ?A; b : ?A; ?P a b; ?P b a |] ==> a = b) ==>
      antisymp_on ?P ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Restricted_Predicates.tranclp_imp_stepfun",
     "?P^++ ?x ?z ==>
      EX f n. f 0 = ?x & f (Suc n) = ?z & (ALL i<=n. ?P (f i) (f (Suc i)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Restricted_Predicates.accessible_on_induct",
     "[| accessible_on ?P ?A ?a;
         !!x. [| accessible_on ?P ?A x;
                 !!y. [| y : ?A; ?P y x |] ==> ?Q y |]
              ==> ?Q x |]
      ==> ?Q ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Restricted_Predicates.strict_reflclp",
     "[| ?x : ?A; ?y : ?A; transp_on ?P ?A; irreflp_on ?P ?A |]
      ==> strict ?P^== ?x ?y = ?P ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1),
                 template_var 3),
               template_var 1)),
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1),
                 template_var 1),
               template_var 3))),
         template_app
          (template_app (template_var 0, template_var 3),
           template_var 1)))),
    ("Restricted_Predicates.wfp_on_mono",
     "[| ?A <= ?B; !!x y. [| x : ?A; y : ?A; ?P x y |] ==> ?Q x y;
         wfp_on ?Q ?B |]
      ==> wfp_on ?P ?A",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 3)
           ))),
    ("Restricted_Predicates.qo_on_predecessor_subset_conv",
     "[| qo_on ?P ?A; ?x : ?A; ?y : ?A |]
      ==> ({z: ?A. ?P z ?x} <= {z: ?A. ?P z ?y}) = ?P ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_app (template_hole 1, t_empty)),
         template_app
          (template_app (template_var 3, template_var 1),
           template_var 0)))),
    ("Restricted_Predicates.transp_onI",
     "(!!x y z. [| x : ?A; y : ?A; z : ?A; ?P x y; ?P y z |] ==> ?P x z) ==>
      transp_on ?P ?A",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Restricted_Predicates.inductive_on_induct",
     "[| inductive_on ?P ?A; ?x : ?A;
         !!y. [| y : ?A; !!x. [| x : ?A; ?P x y |] ==> ?Q x |] ==> ?Q y |]
      ==> ?Q ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Restricted_Predicates.wfp_on_induct",
     "[| wfp_on ?P ?A; ?x : ?A;
         !!y. [| y : ?A; !!x. [| x : ?A; ?P x y |] ==> ?Q x |] ==> ?Q y |]
      ==> ?Q ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Restricted_Predicates.po_on_predecessors_eq_conv",
     "[| po_on ?P ?A; ?x : ?A; ?y : ?A |]
      ==> ({z: ?A. ?P^== z ?x} = {z: ?A. ?P^== z ?y}) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 2)
            )],
       template_bimplication
        (template_equation
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 3, t_empty)),
         template_equation (template_var 1, template_var 0)))),
    ("Restricted_Predicates.inductive_onI",
     "(!!Q x.
          [| x : ?A;
             !!y. [| y : ?A; !!x. [| x : ?A; ?P x y |] ==> Q x |] ==> Q y |]
          ==> Q x) ==>
      inductive_on ?P ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Restricted_Predicates.transp_on_map'",
     "[| transp_on ?Q ?B; ?g ` ?A <= ?B; ?h ` ?A <= ?B;
         !!x. x : ?A ==> ?Q^== (?h x) (?g x) |]
      ==> transp_on (%x y. ?Q (?g x) (?h y)) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 0), template_var 1),
          template_var 3),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, t_empty), template_var 1)
           ))),
    ("Restricted_Predicates.qo_on_predecessor_subset_conv'",
     "[| qo_on ?P ?A; ?B <= ?A; ?C <= ?A |]
      ==> ({x: ?A. EX y:?B. ?P x y} <= {x: ?A. EX y:?C. ?P x y}) =
          (ALL x:?B. EX y:?C. ?P x y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 4, t_empty)),
           template_app (template_hole 4, t_empty)),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty))))]:
   (string * thm * template) list
### theory "Draft.Restricted_PredicatesMoreTemplates"
### 0.269s elapsed time, 0.339s cpu time, 0.000s GC time
val it = (): unit
