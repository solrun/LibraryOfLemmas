   [("Gale_Shapley1.conj12", "?P & ?Q ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate (template_var 1))),
    ("Gale_Shapley1.conj12", "?P & ?Q ==> ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate (template_var 0))),
    ("Gale_Shapley1.length_rk_of_pref",
     "length (rk_of_pref ?v ?vs ?P) = length ?vs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Gale_Shapley1.prefers_asym",
     "?P \<turnstile> ?x < ?y ==> ~ ?P \<turnstile> ?y < ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0),
                 template_var 1)
               )
           ))),
    ("Gale_Shapley1.prefers_trans",
     "[| ?P \<turnstile> ?x < ?y; ?P \<turnstile> ?y < ?z |]
      ==> ?P \<turnstile> ?x < ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Gale_Shapley1.ranking_iff_pref",
     "[| set ?P = {<length ?P}; ?i < length ?P; ?j < length ?P |]
      ==> (ranking ?P ! ?i < ranking ?P ! ?j) = (?P \<turnstile> ?i < ?j)",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_app (template_hole 7, template_hole 6),
            template_app (template_hole 5, template_var 2))),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Gale_Shapley1.ran_map_upd_Some",
     "[| ?m ?x = Some ?y; inj_on ?m (dom ?m); ?z ~: ran ?m |]
      ==> ran (?m(?x |-> ?z)) = ran ?m - {?y} Un {?z}",
     template_implication
      ([template_equation
         (template_app (template_var 3, template_var 2),
          template_app (template_hole 11, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app (template_hole 9, template_var 3))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_app (template_hole 6, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_app (template_hole 11, template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 6, template_var 3)),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Gale_Shapley1.nth_rk_of_pref",
     "[| length ?P <= length ?rs; ?i : set ?P; distinct ?P;
         set ?P <= {<length ?rs} |]
      ==> rk_of_pref ?r ?rs ?P ! ?i = index ?P ?i + ?r",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 11, template_var 3),
          template_app (template_hole 11, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app (template_hole 9, template_var 3))
            ),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 3),
          template_app
           (template_app (template_hole 6, template_hole 5),
            template_app (template_hole 11, template_var 2)))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2),
               template_var 3)),
           template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("Gale_Shapley1.gs",
     "[| Pref ?P\<^sub>a ?P\<^sub>b; ?n = length ?P\<^sub>a |]
      ==> EX A. Gale_Shapley ?P\<^sub>a ?P\<^sub>b = Some A &
                Pref.matching ?P\<^sub>a A {<?n} &
                Pref.stable ?P\<^sub>a ?P\<^sub>b A {<?n} &
                Pref.opti\<^sub>a ?P\<^sub>a ?P\<^sub>b A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1)
            ),
        template_equation
         (template_var 0, template_app (template_hole 10, template_var 2))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Gale_Shapley1.while_rule2",
     "[| ?P ?s; !!s. [| ?P s; ?b s |] ==> ?P (?c s) & (?c s, s) : ?r;
         !!s. [| ?P s; ~ ?b s |] ==> ?Q s; wf ?r |]
      ==> ?Q (while ?b ?c ?s)",
     template_implication
      ([template_predicate (template_app (template_var 5, template_var 4)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_var 0,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 4))
           )))]
