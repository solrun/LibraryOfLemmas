   [("Process.nil_le", "[] <= ?s",
     template_inequation (less_equals, template_hole 0, template_var 0)),
    ("Process.is_process_Rep", "is_process (Rep_process ?P)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Process.nil_less", "~ ?t < []",
     template_negation
      (template_inequation (less_than, template_var 0, template_hole 0))),
    ("Process.min_elems_le_self", "min_elems ?A <= ?A",
     template_inequation
      (less_equals, template_app (template_hole 0, template_var 0),
       template_var 0)),
    ("Process.front_tickFree_single", "front_tickFree [?a]",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Process.Nil_elem_T", "[] : T ?P",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Process.D_T_subset", "D ?P <= T ?P",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Process.D_front_tickFree_subset", "D ?P <= Collect front_tickFree",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Process.tickFree_rev", "tickFree (rev ?t) = tickFree ?t",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Process.Nil_subset_T", "{[]} <= T ?P",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, template_hole 2), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Process.is_processT1", "([], {}) : F ?P",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Process.tickFree_implies_front_tickFree",
     "tickFree ?s ==> front_tickFree ?s",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Process.nil_le2", "(?s <= []) = (?s = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Process.process_surj_pair", "(FAILURES ?P, DIVERGENCES ?P) = ?P",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Process.nil_less2", "[] < ?t @ [?a]",
     template_inequation
      (less_than, template_hole 2,
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_hole 2)))),
    ("Process.less_self", "?t < ?t @ [?a]",
     template_inequation
      (less_than, template_var 1,
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Process.Process_spec", "Abs_process (F ?P, D ?P) = ?P",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))),
       template_var 0)),
    ("Process.le_approx_implies_le_ref", "?P << ?Q ==> ?P <= ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Process.front_tickFree_dw_closed",
     "front_tickFree (?s @ ?t) ==> front_tickFree ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 1)))),
    ("Process.D_imp_front_tickFree", "?s : D ?P ==> front_tickFree ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Process.is_processT2_TR", "ALL s. s : T ?P --> front_tickFree s",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Process.non_tickFree_implies_nonMt", "~ tickFree ?s ==> ?s ~= []",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Process.Nil_min_elems", "[] : ?A ==> [] : min_elems ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_hole 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Process.elem_min_elems", "?c : min_elems ?B ==> ?c : ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Process.suffixes_fin", "finite {t. EX t1. ?x = t1 @ t}",
     template_predicate
      (
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))
         )),
    ("Process.tickFree_append",
     "tickFree (?s @ ?t) = (tickFree ?s & tickFree ?t)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Process.is_process1", "is_process ?P ==> ([], {}) : FAILURES ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Process.tickFree_implies_front_tickFree_single",
     "tickFree ?t ==> front_tickFree (?t @ [?a])",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Process.less_length_mono", "?s < ?t ==> length ?s < length ?t",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Process.le_length_mono", "?s <= ?t ==> length ?s <= length ?t",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Process.le_ref1", "?P <= ?Q ==> D ?Q <= D ?P",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Process.le_ref2T", "?P <= ?Q ==> T ?Q <= T ?P",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Process.le_ref2", "?P <= ?Q ==> F ?Q <= F ?P",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Process.le_approx1", "?P << ?Q ==> D ?Q <= D ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Process.le_approx_lemma_T", "?P << ?Q ==> T ?Q <= T ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Process.order_lemma", "?P << ?Q ==> F ?Q <= F ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Process.D_T", "?s : D ?P ==> ?s : T ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Process.front_tickFree_implies_tickFree",
     "front_tickFree (?t @ [?a]) ==> tickFree ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_hole 1)))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Process.T_F_spec", "((?t, {}) : F ?P) = (?t : T ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 3)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Process.D_F", "{(s, x). s : D ?P} <= F ?P",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)),
       template_app (template_hole 0, template_var 0))),
    ("Process.le_approx3", "?P << ?Q ==> min_elems (D ?P) <= T ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Process.F_T1", "?a : F ?P ==> fst ?a : T ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Process.is_processT8_Pair", "fst ?s : D ?P ==> ?s : F ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Process.A", "(?x < ?y) = (?x <= ?y & ~ ?y <= ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Process.tickFree_Cons",
     "tickFree (?a # ?t) = (?a ~= tick & tickFree ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0))),
             template_app (template_hole 5, template_var 0))
           ))),
    ("Process.limproc_is_lub",
     "chain ?S ==> range ?S <<| lim_proc (range ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)))
           ))),
    ("Process.lim_proc_is_ub",
     "chain ?S ==> range ?S <| lim_proc (range ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)))
           ))),
    ("Process.less_append", "?s < ?t ==> ?a @ ?s < ?a @ ?t",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Process.less_cons", "?s < ?t ==> ?a # ?s < ?a # ?t",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Process.min_elems4", "?A ~= {} ==> EX s. s : min_elems ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Process.is_processT8_S", "?s : D ?P ==> (?s, ?X) : F ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Process.T_F", "?s : T ?P ==> (?s, {}) : F ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Process.NT_ND", "?c ~: T ?P ==> ?c ~: D ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_app (template_hole 1, template_var 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Process.Fa_eq_imp_Tr_eq",
     "FAILURES ?P = FAILURES ?Q ==> TRACES ?P = TRACES ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Process.F_subset_imp_T_subset", "F ?P <= F ?Q ==> T ?P <= T ?Q",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Process.is_processT3_ST", "?s @ ?t : T ?P ==> ?s : T ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Process.F_T", "(?s, ?X) : F ?P ==> ?s : T ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Process.append_single_T_imp_tickFree",
     "?t @ [?a] : T ?P ==> tickFree ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_hole 2))),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("Process.front_tickFree_append",
     "[| tickFree ?s; front_tickFree ?t |] ==> front_tickFree (?s @ ?t)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Process.is_processT2", "ALL s X. (s, X) : F ?P --> front_tickFree s",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("Process.limproc_is_thelub",
     "chain ?S ==> Lub ?S = lim_proc (range ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))))),
    ("Process.tickFree_tl",
     "[| ?s ~= []; tickFree ?s |] ==> tickFree (tl ?s)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Process.sublists_fin", "finite {t. EX t1 t2. ?x = t1 @ t @ t2}",
     template_predicate
      (
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))
         )),
    ("Process.NT_NF", "?s ~: T ?P ==> (?s, {}) ~: F ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app (template_hole 4, template_var 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1)),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Process.is_processT4_empty", "(?s, ?X) : F ?P ==> (?s, {}) : F ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 0)),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Process.NF_NT", "(?s, {}) ~: F ?P ==> ?s ~: T ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_hole 3)),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Process.NF_ND", "(?s, ?X) ~: F ?P ==> ?s ~: D ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      template_var 1)),
                  template_app (template_hole 2, template_var 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("Process.is_processT8", "ALL s X. s : D ?P --> (s, X) : F ?P",
     template_predicate (template_app (template_hole 7, t_empty))),
    ("Process.is_processT9", "ALL s. s @ [tick] : D ?P --> s : D ?P",
     template_predicate (template_app (template_hole 7, t_empty))),
    ("Process.Process_eq_spec", "(?P = ?Q) = (F ?P = F ?Q & D ?P = D ?Q)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Process.process_eq_spec",
     "(?P = ?Q) =
      (FAILURES ?P = FAILURES ?Q & DIVERGENCES ?P = DIVERGENCES ?Q)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_app (template_hole 2, template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Process.front_tickFree_mono",
     "front_tickFree (?t @ ?r) & ?r ~= [] -->
      tickFree ?t & front_tickFree ?r",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 0))),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)))),
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 5, template_var 0)))
         )),
    ("Process.chain_lemma", "chain ?S ==> ?S ?i << ?S ?k | ?S ?k << ?S ?i",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_var 2, template_var 1)),
                 template_app (template_var 2, template_var 0))),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_var 2, template_var 0)),
               template_app (template_var 2, template_var 1)))
           ))),
    ("Process.min_elems5", "?x : ?A ==> EX s<=?x. s : min_elems ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Process.le_adm_cont",
     "[| cont ?u; cont ?v |] ==> adm (%x. ?u x <= ?v x)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Process.le_adm",
     "[| cont ?u; monofun ?v |] ==> adm (%x. ?u x <= ?v x)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Process.is_processT3_ST_pref",
     "[| ?t : T ?P; ?s <= ?t |] ==> ?s : T ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Process.D_LUB",
     "chain ?S ==> D (lim_proc (range ?S)) = \<Inter> (D ` range ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 5),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)))))),
    ("Process.T_LUB",
     "chain ?S ==> T (lim_proc (range ?S)) = \<Inter> (T ` range ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 5),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)))))),
    ("Process.F_LUB",
     "chain ?S ==> F (lim_proc (range ?S)) = \<Inter> (F ` range ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 5),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)))))),
    ("Process.is_processT9_S_swap", "?s ~: D ?P ==> ?s @ [tick] ~: D ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app (template_hole 4, template_var 0))
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_hole 0))),
                 template_app (template_hole 4, template_var 0))
               )
           ))),
    ("Process.is_processT3_SR", "(?s @ ?t, ?X) : F ?P ==> (?s, {}) : F ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_hole 0)),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Process.is_process8_S",
     "[| is_process ?P; ?s : DIVERGENCES ?P |] ==> (?s, ?X) : FAILURES ?P",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Process.Failures_implies_Traces",
     "[| is_process ?P; (?s, ?X) : FAILURES ?P |] ==> ?s : TRACES ?P",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Process.trace_with_Tick_implies_tickFree_front",
     "[| is_process ?P; ?t @ [tick] : TRACES ?P |] ==> tickFree ?t",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_hole 2))),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Process.less_tail", "[| ?s ~= []; ?s < ?t |] ==> tl ?s < tl ?t",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2)),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Process.append_T_imp_tickFree",
     "[| ?t @ ?s : T ?P; ?s ~= [] |] ==> tickFree ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_app (template_hole 4, template_var 0))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("Process.is_processT9_tick",
     "[| [tick] : D ?P; front_tickFree ?s |] ==> ?s : D ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_hole 2)),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Process.is_process2",
     "is_process ?P ==> ALL s X. (s, X) : FAILURES ?P --> front_tickFree s",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Process.list_nonMt_append", "?s ~= [] ==> EX a t. ?s = t @ [a]",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Process.Process_eqI",
     "[| FAILURES ?P = FAILURES ?Q; DIVERGENCES ?P = DIVERGENCES ?Q |]
      ==> ?P = ?Q",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Process.is_process_REP_LUB",
     "chain ?S ==>
      is_process (\<Inter> (F ` range ?S), \<Inter> (D ` range ?S))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_hole 3)))),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 3)))))
           ))),
    ("Process.is_process9_S",
     "[| is_process ?P; ?s @ [tick] : DIVERGENCES ?P |]
      ==> ?s : DIVERGENCES ?P",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_hole 1))),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Process.front_trace_is_tickfree",
     "[| is_process ?P; (?t @ [tick], ?X) : FAILURES ?P |] ==> tickFree ?t",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_app
                       (template_app (template_hole 4, template_hole 3),
                        template_hole 2))),
                  template_var 0)),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Process.nonTickFree_n_frontTickFree",
     "[| ~ tickFree ?s; front_tickFree ?s |] ==> EX t. ?s = t @ [tick]",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 0))
            ),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Process.is_processT3",
     "ALL s t. (s @ t, {}) : F ?P --> (s, {}) : F ?P",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("Process.D_LUB_2",
     "chain ?S ==> (?t : D (lim_proc (range ?S))) = (ALL x. ?t : D (?S x))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)))),
         template_app (template_hole 0, t_empty)))),
    ("Process.T_LUB_2",
     "chain ?S ==> (?t : T (lim_proc (range ?S))) = (ALL x. ?t : T (?S x))",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)))),
         template_app (template_hole 0, t_empty)))),
    ("Process.min_elems_ex",
     "?t : ?A ==> EX t' r. ?t = t' @ r & t' : min_elems ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Process.is_processT5_S6", "([], {?c}) ~: F ?P ==> ([?c], {}) : F ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_hole 4),
                      template_app
                       (template_app (template_hole 3, template_var 1),
                        template_hole 2))),
                  template_app (template_hole 1, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_hole 4)),
                 template_hole 2)),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Process.append_eq_first_pref_spec",
     "?s @ ?t = ?r @ [?x] & ?t ~= [] ==> ?s <= ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_app
                     (template_app (template_hole 3, template_var 0),
                      template_hole 2)))),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_hole 2)))
            )],
       template_inequation (less_equals, template_var 3, template_var 1))),
    ("Process.is_processT4_S1",
     "[| ?x : F ?P; ?X <= snd ?x |] ==> (fst ?x, ?X) : F ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)),
             template_app (template_hole 4, template_var 1))
           ))),
    ("Process.is_processT3_S_pref",
     "[| (?t, {}) : F ?P; ?s <= ?t |] ==> (?s, {}) : F ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_hole 2)),
              template_app (template_hole 1, template_var 1))
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Process.min_elems_no",
     "[| ?x : min_elems ?A; ?t : ?A; ?t <= ?x |] ==> ?x = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_equation (template_var 2, template_var 0))),
    ("Process.lim_proc_is_lub1",
     "chain ?S ==> ALL u. range ?S <| u --> D u <= D (lim_proc (range ?S))",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Process.is_process8",
     "is_process ?P ==>
      ALL s X. s ~: DIVERGENCES ?P | (s, X) : FAILURES ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Process.is_process9",
     "is_process ?P ==>
      ALL s. s @ [tick] ~: DIVERGENCES ?P | s : DIVERGENCES ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Process.is_processT6_S2",
     "[| tick ~: ?X; [tick] : T ?P |] ==> ([], ?X) : F ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 1)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 7),
                  template_hole 4)),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 4),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Process.T_nonTickFree_imp_decomp",
     "[| ?t : T ?P; ~ tickFree ?t |] ==> EX s. ?t = s @ [tick]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 6, template_var 1))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Process.is_processT7_S",
     "[| tickFree ?s; front_tickFree ?t; ?s : D ?P |] ==> ?s @ ?t : D ?P",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Process.is_processT7",
     "ALL s t. s : D ?P & tickFree s & front_tickFree t --> s @ t : D ?P",
     template_predicate (template_app (template_hole 7, t_empty))),
    ("Process.prefixes_fin",
     "let prefixes = {t. EX t2. ?x = t @ t2}
      in finite prefixes & card prefixes = length ?x + 1",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 11, template_app (template_hole 10, t_empty)),
           t_empty)
         )),
    ("Process.front_tickFree_charn",
     "front_tickFree ?s = (?s = [] | (EX a t. ?s = t @ [a] & tickFree t))",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_hole 6)),
             template_app (template_hole 5, t_empty))
           ))),
    ("Process.Process_eq_spec_optimized",
     "(?P = ?Q) = (D ?P = D ?Q & (D ?P = D ?Q --> F ?P = F ?Q))",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 1)),
                 template_app (template_hole 3, template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 1)),
                   template_app (template_hole 3, template_var 0))),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Process.le_approx2T",
     "[| ?P << ?Q; ?s ~: D ?P |] ==> (?s : T ?Q) = (?s : T ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app (template_hole 2, template_var 2))
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 0, template_var 2))))),
    ("Process.is_proT2",
     "[| (?s, ?X) : F ?P; ?s ~= [] |] ==> tick ~: set (tl (rev ?s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)),
              template_app (template_hole 8, template_var 0))
            ),
        template_negation
         (template_equation (template_var 2, template_hole 5))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 2))))
               )
           ))),
    ("Process.is_processT4",
     "ALL s X Y. (s, Y) : F ?P & X <= Y --> (s, X) : F ?P",
     template_predicate (template_app (template_hole 7, t_empty))),
    ("Process.is_process3",
     "is_process ?P ==>
      ALL s t. (s @ t, {}) : FAILURES ?P --> (s, {}) : FAILURES ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Process.is_process4_S1",
     "[| is_process ?P; ?x : FAILURES ?P; ?X <= snd ?x |]
      ==> (fst ?x, ?X) : FAILURES ?P",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)),
                 template_var 0)),
             template_app (template_hole 4, template_var 2))
           ))),
    ("Process.is_process4_S",
     "[| is_process ?P; (?s, ?Y) : FAILURES ?P; ?X <= ?Y |]
      ==> (?s, ?X) : FAILURES ?P",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_var 3))
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 3))
           ))),
    ("Process.is_process3_S_pref",
     "[| is_process ?P; (?t, {}) : FAILURES ?P; ?s <= ?t |]
      ==> (?s, {}) : FAILURES ?P",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_hole 2)),
              template_app (template_hole 1, template_var 2))
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)),
             template_app (template_hole 1, template_var 2))
           ))),
    ("Process.lim_proc_is_lub3c",
     "[| chain ?S; ?X = range ?S |]
      ==> ALL u. ?X <| u --> min_elems (D (lim_proc ?X)) <= T u",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 9, template_var 1),
            template_hole 8))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Process.is_processT6_S1",
     "[| tick ~: ?X; (?s @ [tick], {}) : F ?P |] ==> (?s, ?X) : F ?P",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_app
                       (template_app (template_hole 3, template_hole 7),
                        template_hole 2))),
                  template_hole 1)),
              template_app (template_hole 0, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 2)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Process.is_process7_S",
     "[| is_process ?P; ?s : DIVERGENCES ?P; tickFree ?s;
         front_tickFree ?t |]
      ==> ?s @ ?t : DIVERGENCES ?P",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app (template_hole 3, template_var 2))
           ))),
    ("Process.is_processT6",
     "ALL s X. (s @ [tick], {}) : F ?P --> (s, X - {tick}) : F ?P",
     template_predicate (template_app (template_hole 12, t_empty))),
    ("Process.lim_proc_is_lub3a",
     "front_tickFree ?s ==>
      ?s ~: D ?P --> (ALL t. t : D ?P --> ~ t < ?s @ [?c])",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_app (template_hole 5, template_var 1)))),
             template_app (template_hole 4, t_empty))
           ))),
    ("Process.proc_ord2a",
     "[| ?P << ?Q; ?s ~: D ?P |] ==> ((?s, ?X) : F ?P) = ((?s, ?X) : F ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app (template_hole 4, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 3)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 2))))),
    ("Process.le_approx2",
     "[| ?P << ?Q; ?s ~: D ?P |] ==> ((?s, ?X) : F ?Q) = ((?s, ?X) : F ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app (template_hole 4, template_var 3))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 3))))),
    ("Process.is_process6_S",
     "[| is_process ?P; (?s @ [tick], {}) : FAILURES ?P |]
      ==> (?s, ?X - {tick}) : FAILURES ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 1),
                      template_app
                       (template_app (template_hole 6, template_hole 5),
                        template_hole 4))),
                  template_hole 3)),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_app (template_hole 0, template_hole 5),
                     template_hole 3)))),
             template_app (template_hole 2, template_var 2))
           ))),
    ("Process.min_elems1",
     "[| ?s ~: D ?P; ?s @ [?c] : D ?P |] ==> ?s @ [?c] : min_elems (D ?P)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app
                   (template_app (template_hole 2, template_var 0),
                    template_hole 1))),
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1))),
             template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 1)))
           ))),
    ("Process.min_elems3",
     "[| ?s @ [?c] : D ?P; ?s @ [?c] ~: min_elems (D ?P) |] ==> ?s : D ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_hole 3))),
              template_app (template_hole 2, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_app
                       (template_app (template_hole 4, template_var 1),
                        template_hole 3))),
                  template_app
                   (template_hole 0,
                    template_app (template_hole 2, template_var 0)))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app (template_hole 2, template_var 0))
           ))),
    ("Process.ND_F_dir2'",
     "[| ?s ~: D ?P; ?s : T ?P; ?P << ?S; ?Q << ?S |] ==> ?s : T ?Q",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 2, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 1, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Process.F_D_part",
     "F ?P = {(s, x). s : D ?P} Un {(s, x). s ~: D ?P & (s, x) : F ?P}",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty))),
         template_app
          (template_hole 7, template_app (template_hole 6, t_empty))))),
    ("Process.is_process7",
     "is_process ?P ==>
      ALL s t.
         s ~: DIVERGENCES ?P |
         ~ tickFree s | ~ front_tickFree t | s @ t : DIVERGENCES ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Process.is_process4",
     "is_process ?P ==>
      ALL s X Y. (s, Y) ~: FAILURES ?P | ~ X <= Y | (s, X) : FAILURES ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Process.is_process6",
     "is_process ?P ==>
      ALL s X.
         (s @ [tick], {}) : FAILURES ?P --> (s, X - {tick}) : FAILURES ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 0))],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Process.is_processT5_S7",
     "[| ?t : T ?P; (?t, ?A) ~: F ?P |] ==> EX x. x : ?A & ?t @ [x] : T ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app (template_hole 10, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 2),
                      template_var 0)),
                  template_app (template_hole 6, template_var 1))
                )
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Process.is_processT5_S4",
     "[| (?s, {}) : F ?P; (?s, {?c}) ~: F ?P |] ==> (?s @ [?c], {}) : F ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_hole 6)),
              template_app (template_hole 5, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 2),
                      template_app
                       (template_app (template_hole 3, template_var 0),
                        template_hole 6))),
                  template_app (template_hole 5, template_var 1))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_hole 0))),
                 template_hole 6)),
             template_app (template_hole 5, template_var 1))
           ))),
    ("Process.is_processT5_S3",
     "[| (?s, {}) : F ?P; (?s @ [?c], {}) ~: F ?P |] ==> (?s, {?c}) : F ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_hole 6)),
              template_app (template_hole 5, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 3, template_var 2),
                          template_app
                           (template_app (template_hole 2, template_var 0),
                            template_hole 1))),
                      template_hole 6)),
                  template_app (template_hole 5, template_var 1))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_hole 6))),
             template_app (template_hole 5, template_var 1))
           ))),
    ("Process.is_processT5_S2a",
     "[| (?s, ?X) : F ?P; (?s, ?X Un {?c}) ~: F ?P |]
      ==> (?s @ [?c], {}) : F ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)),
              template_app (template_hole 7, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 3),
                      template_app
                       (template_app (template_hole 5, template_var 2),
                        template_app
                         (template_app (template_hole 4, template_var 0),
                          template_hole 3)))),
                  template_app (template_hole 7, template_var 1))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_hole 0))),
                 template_hole 3)),
             template_app (template_hole 7, template_var 1))
           ))),
    ("Process.is_processT5_S2",
     "[| (?s, ?X) : F ?P; (?s @ [?c], {}) ~: F ?P |]
      ==> (?s, ?X Un {?c}) : F ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)),
              template_app (template_hole 7, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 5, template_var 3),
                          template_app
                           (template_app (template_hole 4, template_var 0),
                            template_hole 3))),
                      template_hole 2)),
                  template_app (template_hole 7, template_var 1))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_hole 2)))),
             template_app (template_hole 7, template_var 1))
           ))),
    ("Process.is_process5_singT",
     "[| is_process ?P; (?s, {?x}) ~: FAILURES ?P; (?s, {}) : FAILURES ?P |]
      ==> ?s @ [?x] : TRACES ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 1),
                      template_app
                       (template_app (template_hole 7, template_var 0),
                        template_hole 6))),
                  template_app (template_hole 5, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_hole 6)),
              template_app (template_hole 5, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1))),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Process.ND_F_dir2",
     "[| ?s ~: D ?P; (?s, {}) : F ?P; ?P << ?S; ?Q << ?S |]
      ==> (?s, {}) : F ?Q",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app (template_hole 5, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_hole 2)),
              template_app (template_hole 1, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_hole 2)),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Process.min_elems6",
     "[| ?s ~: D ?P; ?s @ [?c] : D ?P; ?P << ?S |]
      ==> (?s @ [?c], {}) : F ?S",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_app (template_hole 8, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_hole 5))),
              template_app (template_hole 8, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_app
                      (template_app (template_hole 6, template_var 1),
                       template_hole 5))),
                 template_hole 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Process.lim_proc_is_lub2",
     "chain ?S ==>
      ALL u.
         range ?S <| u -->
         (ALL s.
             s ~: D (lim_proc (range ?S)) -->
             Ra (lim_proc (range ?S)) s = Ra u s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 0))],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("Process.is_process5_sing",
     "[| is_process ?P; (?s, {?x}) ~: FAILURES ?P; (?s, {}) : FAILURES ?P |]
      ==> (?s @ [?x], {}) : FAILURES ?P",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 1),
                      template_app
                       (template_app (template_hole 5, template_var 0),
                        template_hole 4))),
                  template_app (template_hole 3, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_hole 4)),
              template_app (template_hole 3, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_hole 0))),
                 template_hole 4)),
             template_app (template_hole 3, template_var 2))
           ))),
    ("Process.if_then_else_cont",
     "[| !!x. ?P x ==> cont (?f x); !!x. ~ ?P x ==> cont (?g x) |]
      ==> cont (%y. if ?P ?x then ?f ?x y else ?g ?x y)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Process.is_processT5_S1",
     "[| (?s, ?X) : F ?P; (?s, ?X Un ?Y) ~: F ?P |]
      ==> EX c. c : ?Y & (?s @ [c], {}) : F ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2)),
              template_app (template_hole 9, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 10, template_var 3),
                      template_app
                       (template_app (template_hole 7, template_var 2),
                        template_var 0))),
                  template_app (template_hole 9, template_var 1))
                )
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Process.Rep_Abs_LUB",
     "chain ?S ==>
      Rep_process (Abs_process (INT a. F (?S a), INT a. D (?S a))) =
      (INT a. F (?S a), INT a. D (?S a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0))],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, t_empty),
                     template_hole 3))),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, t_empty),
                   template_hole 3))))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, t_empty),
                 template_hole 3))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty),
               template_hole 3)))))),
    ("Process.min_elems2",
     "[| ?s ~: D ?P; ?s @ [?c] : D ?P; ?P << ?S; ?Q << ?S |]
      ==> (?s @ [?c], {}) : F ?Q",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_app (template_hole 8, template_var 3))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_hole 5))),
              template_app (template_hole 8, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 7, template_var 4),
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_hole 5))),
                 template_hole 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Process.is_processT5_S7'",
     "[| (?t, ?X) : F ?P; (?t, ?X Un ?A) ~: F ?P |]
      ==> EX x. x : ?A & x ~: ?X & ?t @ [x] : T ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2)),
              template_app (template_hole 10, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 11, template_var 3),
                      template_app
                       (template_app (template_hole 8, template_var 2),
                        template_var 0))),
                  template_app (template_hole 10, template_var 1))
                )
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Process.is_processT5",
     "ALL s X Y.
         (s, X) : F ?P & (ALL c. c : Y --> (s @ [c], {}) ~: F ?P) -->
         (s, X Un Y) : F ?P",
     template_predicate (template_app (template_hole 14, t_empty))),
    ("Process.is_process5_S1",
     "[| is_process ?P; (?sa, ?X) : FAILURES ?P;
         (?sa, ?X Un ?Y) ~: FAILURES ?P |]
      ==> EX c. c : ?Y & (?sa @ [c], {}) : FAILURES ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1)),
              template_app (template_hole 9, template_var 3))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 10, template_var 2),
                      template_app
                       (template_app (template_hole 7, template_var 1),
                        template_var 0))),
                  template_app (template_hole 9, template_var 3))
                )
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Process.is_process5_S",
     "[| is_process ?P; (?sa, ?X) : FAILURES ?P;
         ALL c. c : ?Y --> (?sa @ [c], {}) ~: FAILURES ?P |]
      ==> (?sa, ?X Un ?Y) : FAILURES ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1)),
              template_app (template_hole 9, template_var 3))
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_app (template_hole 9, template_var 3))
           ))),
    ("Process.is_process5",
     "is_process ?P ==>
      ALL sa X Y.
         (sa, X) : FAILURES ?P &
         (ALL c. c : Y --> (sa @ [c], {}) ~: FAILURES ?P) -->
         (sa, X Un Y) : FAILURES ?P",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 0))],
       template_predicate (template_app (template_hole 14, t_empty)))),
    ("Process.is_processT5_S5",
     "[| (?s, ?X) : F ?P; ALL c. c : ?Y --> (?s, ?X Un {c}) ~: F ?P |]
      ==> ALL c. c : ?Y --> (?s @ [c], {}) : F ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2)),
              template_app (template_hole 10, template_var 1))
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Process.lim_proc_is_lub3b",
     "[| ALL x.
            x : ?X -->
            (ALL xa.
                xa : D x & (ALL t. t : D x --> ~ t < xa) --> xa : T ?u);
         ?xa : ?X; ALL xa. xa : ?X --> ?x : D xa;
         ALL t. (ALL x. x : ?X --> t : D x) --> ~ t < ?x |]
      ==> ?x : T ?u",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Process.is_processT",
     "([], {}) : F ?P &
      (ALL s X. (s, X) : F ?P --> front_tickFree s) &
      (ALL s t. (s @ t, {}) : F ?P --> (s, {}) : F ?P) &
      (ALL s X Y. (s, Y) : F ?P & X <= Y --> (s, X) : F ?P) &
      (ALL s X Y.
          (s, X) : F ?P & (ALL c. c : Y --> (s @ [c], {}) ~: F ?P) -->
          (s, X Un Y) : F ?P) &
      (ALL s X. (s @ [tick], {}) : F ?P --> (s, X - {tick}) : F ?P) &
      (ALL s t. s : D ?P & tickFree s & front_tickFree t --> s @ t : D ?P) &
      (ALL s X. s : D ?P --> (s, X) : F ?P) &
      (ALL s. s @ [tick] : D ?P --> s : D ?P)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 22,
             template_app
              (template_app
                (template_hole 21,
                 template_app
                  (template_app (template_hole 20, template_hole 19),
                   template_hole 18)),
               template_app (template_hole 17, template_var 0))),
           template_app
            (template_app
              (template_hole 22, template_app (template_hole 16, t_empty)),
             template_app
              (template_app
                (template_hole 22,
                 template_app (template_hole 16, t_empty)),
               template_app
                (template_app
                  (template_hole 22,
                   template_app (template_hole 16, t_empty)),
                 template_app
                  (template_app
                    (template_hole 22,
                     template_app (template_hole 16, t_empty)),
                   template_app
                    (template_app
                      (template_hole 22,
                       template_app (template_hole 16, t_empty)),
                     template_app
                      (template_app
                        (template_hole 22,
                         template_app (template_hole 16, t_empty)),
                       template_app
                        (template_app
                          (template_hole 22,
                           template_app (template_hole 16, t_empty)),
                         template_app (template_hole 16, t_empty)))))))))
         )),
    ("Process.process_charn",
     "([], {}) : F ?P &
      (ALL s X. (s, X) : F ?P --> front_tickFree s) &
      (ALL s t. (s @ t, {}) ~: F ?P | (s, {}) : F ?P) &
      (ALL s X Y. (s, Y) ~: F ?P | ~ X <= Y | (s, X) : F ?P) &
      (ALL s X Y.
          (s, X) : F ?P & (ALL c. c : Y --> (s @ [c], {}) ~: F ?P) -->
          (s, X Un Y) : F ?P) &
      (ALL s X. (s @ [tick], {}) : F ?P --> (s, X - {tick}) : F ?P) &
      (ALL s t.
          s ~: D ?P | ~ tickFree s | ~ front_tickFree t | s @ t : D ?P) &
      (ALL s X. s ~: D ?P | (s, X) : F ?P) &
      (ALL s. s @ [tick] ~: D ?P | s : D ?P)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 23,
             template_app
              (template_app
                (template_hole 22,
                 template_app
                  (template_app (template_hole 21, template_hole 20),
                   template_hole 19)),
               template_app (template_hole 18, template_var 0))),
           template_app
            (template_app
              (template_hole 23, template_app (template_hole 17, t_empty)),
             template_app
              (template_app
                (template_hole 23,
                 template_app (template_hole 17, t_empty)),
               template_app
                (template_app
                  (template_hole 23,
                   template_app (template_hole 17, t_empty)),
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app (template_hole 17, t_empty)),
                   template_app
                    (template_app
                      (template_hole 23,
                       template_app (template_hole 17, t_empty)),
                     template_app
                      (template_app
                        (template_hole 23,
                         template_app (template_hole 17, t_empty)),
                       template_app
                        (template_app
                          (template_hole 23,
                           template_app (template_hole 17, t_empty)),
                         template_app (template_hole 17, t_empty)))))))))
         )),
    ("Process.is_process_spec",
     "is_process ?P =
      (([], {}) : FAILURES ?P &
       (ALL s X. (s, X) : FAILURES ?P --> front_tickFree s) &
       (ALL s t. (s @ t, {}) ~: FAILURES ?P | (s, {}) : FAILURES ?P) &
       (ALL s X Y.
           (s, Y) ~: FAILURES ?P | ~ X <= Y | (s, X) : FAILURES ?P) &
       (ALL s X Y.
           (s, X) : FAILURES ?P &
           (ALL c. c : Y --> (s @ [c], {}) ~: FAILURES ?P) -->
           (s, X Un Y) : FAILURES ?P) &
       (ALL s X.
           (s @ [tick], {}) : FAILURES ?P -->
           (s, X - {tick}) : FAILURES ?P) &
       (ALL s t.
           s ~: DIVERGENCES ?P |
           ~ tickFree s | ~ front_tickFree t | s @ t : DIVERGENCES ?P) &
       (ALL s X. s ~: DIVERGENCES ?P | (s, X) : FAILURES ?P) &
       (ALL s. s @ [tick] ~: DIVERGENCES ?P | s : DIVERGENCES ?P))",
     template_equation
      (template_app (template_hole 24, template_var 0),
       template_app
        (template_app
          (template_hole 23,
           template_app
            (template_app
              (template_hole 22,
               template_app
                (template_app (template_hole 21, template_hole 20),
                 template_hole 19)),
             template_app (template_hole 18, template_var 0))),
         template_app
          (template_app
            (template_hole 23, template_app (template_hole 17, t_empty)),
           template_app
            (template_app
              (template_hole 23, template_app (template_hole 17, t_empty)),
             template_app
              (template_app
                (template_hole 23,
                 template_app (template_hole 17, t_empty)),
               template_app
                (template_app
                  (template_hole 23,
                   template_app (template_hole 17, t_empty)),
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app (template_hole 17, t_empty)),
                   template_app
                    (template_app
                      (template_hole 23,
                       template_app (template_hole 17, t_empty)),
                     template_app
                      (template_app
                        (template_hole 23,
                         template_app (template_hole 17, t_empty)),
                       template_app (template_hole 17, t_empty)))))))))))]
