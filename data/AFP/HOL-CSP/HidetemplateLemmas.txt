   [("Hide.cont_hiding_base", "finite ?A ==> cont (%x. x \ ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Hide.cont_hiding1", "chain ?Y ==> chain (%i. ?Y i \ ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Hide.mono_hiding", "?P << ?Q ==> ?P \ ?A << ?Q \ ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Hide.hiding_tickFree",
     "tickFree ?s = tickFree (trace_hide ?s (ev ` ?A))",
     template_equation
      (template_app (template_hole 5, template_var 1),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 1)))),
    ("Hide.hiding_fronttickFree",
     "front_tickFree ?s ==> front_tickFree (trace_hide ?s (ev ` ?A))",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty), template_var 1))
           ))),
    ("Hide.hiding_cont",
     "[| finite ?A; cont ?f |] ==> cont (%x. ?f x \ ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Hide.cont_hiding2",
     "[| finite ?A; chain ?Y |]
      ==> (LUB i. ?Y i) \ ?A = (LUB i. ?Y i \ ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty),
                 template_hole 0))),
           template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0))))),
    ("Hide.div_hiding_lub",
     "[| finite ?A; chain ?Y |]
      ==> D (LUB i. ?Y i \ ?A) <= D ((LUB i. ?Y i) \ ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_hole 0))),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, t_empty),
                   template_hole 0))),
             template_var 1))))),
    ("Hide.trace_hide_union",
     "trace_hide ?t (ev ` (?A Un ?B)) =
      trace_hide (trace_hide ?t (ev ` ?A)) (ev ` ?B)",
     template_equation
      (template_app
        (template_app (template_hole 5, t_empty), template_var 0),
       template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app (template_hole 5, t_empty), template_var 0)))),
    ("Hide.KoenigLemma",
     "[| infinite ?Tr; ALL i. finite {t. EX t':?Tr. t = take i t'} |]
      ==> EX f. strict_mono f & range f <= {t. EX t':?Tr. t <= t'}",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 12, template_var 0))
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Hide.trace_hide_append",
     "?s @ ?t = trace_hide ?ta (ev ` ?A) ==>
      EX ss tt.
         ?ta = ss @ tt &
         ?s = trace_hide ss (ev ` ?A) & ?t = trace_hide tt (ev ` ?A)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 6, t_empty), template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Hide.isInfHiddenRun_1",
     "isInfHiddenRun ?f ?P ?A =
      (strict_mono ?f &
       (ALL i. ?f i : T ?P) &
       (ALL i. EX t. ?f i = ?f 0 @ t & set t <= ev ` ?A))",
     template_equation
      (template_app
        (template_app
          (template_hole 15,
           template_app (template_hole 14, template_var 2)),
         template_app
          (template_app
            (template_hole 15, template_app (template_hole 13, t_empty)),
           template_app (template_hole 13, t_empty))),
       template_app
        (template_app
          (template_hole 15,
           template_app (template_hole 14, template_var 2)),
         template_app
          (template_app
            (template_hole 15, template_app (template_hole 13, t_empty)),
           template_app (template_hole 13, t_empty))))),
    ("Hide.D_hiding", "D (?P \ ?A) = div_hide ?P ?A",
     template_equation
      (template_app
        (template_hole 22,
         template_app
          (template_app (template_hole 21, template_var 1),
           template_var 0)),
       template_app (template_hole 20, t_empty))),
    ("Hide.inf_hidden",
     "[| ALL t.
            trace_hide t (ev ` ?A) = trace_hide ?s (ev ` ?A) -->
            (t, ev ` ?A) ~: F ?P;
         ?s : T ?P |]
      ==> EX f. isInfHiddenRun f ?P ?A & ?s : range f",
     template_implication
      ([template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Hide.T_hiding",
     "T (?P \ ?A) =
      {trace_hide t (ev ` ?A) |t. (t, ev ` ?A) : F ?P} Un div_hide ?P ?A",
     template_equation
      (template_app
        (template_hole 26,
         template_app
          (template_app (template_hole 25, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 24, template_app (template_hole 23, t_empty)),
         template_app (template_hole 23, t_empty)))),
    ("Hide.F_hiding",
     "F (?P \ ?A) =
      {(s, X).
       EX t. s = trace_hide t (ev ` ?A) & (t, X Un ev ` ?A) : F ?P} Un
      {(s, X). s : div_hide ?P ?A}",
     template_equation
      (template_app
        (template_hole 29,
         template_app
          (template_app (template_hole 28, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 27,
           template_app
            (template_hole 26, template_app (template_hole 25, t_empty))),
         template_app
          (template_hole 26, template_app (template_hole 25, t_empty))))),
    ("Hide.hiding_maintains_is_process",
     "is_process
       ({(s, X).
         EX t. s = trace_hide t (ev ` ?A) & (t, X Un ev ` ?A) : F ?P} Un
        {(s, X). s : div_hide ?P ?A},
        div_hide ?P ?A)",
     template_predicate
      (
         template_app
          (template_hole 30,
           template_app
            (template_app
              (template_hole 29,
               template_app
                (template_app
                  (template_hole 28,
                   template_app
                    (template_hole 27,
                     template_app (template_hole 26, t_empty))),
                 template_app
                  (template_hole 27,
                   template_app (template_hole 26, t_empty)))),
             template_app (template_hole 12, t_empty)))
         )),
    ("Hide.Rep_Abs_Hiding",
     "Rep_process
       (Abs_process
         ({(s, X).
           EX t. s = trace_hide t (ev ` ?A) & (t, X Un ev ` ?A) : F ?P} Un
          {(s, X). s : div_hide ?P ?A},
          div_hide ?P ?A)) =
      ({(s, X).
        EX t. s = trace_hide t (ev ` ?A) & (t, X Un ev ` ?A) : F ?P} Un
       {(s, X). s : div_hide ?P ?A},
       div_hide ?P ?A)",
     template_equation
      (template_app
        (template_hole 31,
         template_app
          (template_hole 30,
           template_app
            (template_app
              (template_hole 29,
               template_app
                (template_app
                  (template_hole 28,
                   template_app
                    (template_hole 27,
                     template_app (template_hole 26, t_empty))),
                 template_app
                  (template_hole 27,
                   template_app (template_hole 26, t_empty)))),
             template_app (template_hole 12, t_empty)))),
       template_app
        (template_app
          (template_hole 29,
           template_app
            (template_app
              (template_hole 28,
               template_app
                (template_hole 27,
                 template_app (template_hole 26, t_empty))),
             template_app
              (template_hole 27,
               template_app (template_hole 26, t_empty)))),
         template_app (template_hole 12, t_empty))))]
