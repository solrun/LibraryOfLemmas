   [("Skip.process_prover", "DIVERGENCES ?P = snd ?P",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Skip.process_prover", "FAILURES ?P = fst ?P",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Skip.process_prover", "Rep_process ?x : {p. is_process p}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, t_empty))
         )),
    ("Skip.process_prover",
     "?y : {p. is_process p} ==> Rep_process (Abs_process ?y) = ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, t_empty))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Skip.process_prover",
     "TRACES ?P = {tr. EX a. a : FAILURES ?P & tr = fst a}",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app (template_hole 6, t_empty)))]
