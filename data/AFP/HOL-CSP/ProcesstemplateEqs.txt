   [("Process.tickFree_rev", "tickFree (rev ?t) = tickFree ?t",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Process.nil_le2", "(?s <= []) = (?s = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Process.process_surj_pair", "(FAILURES ?P, DIVERGENCES ?P) = ?P",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Process.Process_spec", "Abs_process (F ?P, D ?P) = ?P",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))),
       template_var 0)),
    ("Process.tickFree_append",
     "tickFree (?s @ ?t) = (tickFree ?s & tickFree ?t)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Process.T_F_spec", "((?t, {}) : F ?P) = (?t : T ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_hole 3)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Process.A", "(?x < ?y) = (?x <= ?y & ~ ?y <= ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Process.tickFree_Cons",
     "tickFree (?a # ?t) = (?a ~= tick & tickFree ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Process.Process_eq_spec", "(?P = ?Q) = (F ?P = F ?Q & D ?P = D ?Q)",
     template_bimplication
      (template_equation (template_var 1, template_var 0), template_dunno)),
    ("Process.process_eq_spec",
     "(?P = ?Q) =
      (FAILURES ?P = FAILURES ?Q & DIVERGENCES ?P = DIVERGENCES ?Q)",
     template_bimplication
      (template_equation (template_var 1, template_var 0), template_dunno)),
    ("Process.front_tickFree_charn",
     "front_tickFree ?s = (?s = [] | (EX a t. ?s = t @ [a] & tickFree t))",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_dunno)),
    ("Process.Process_eq_spec_optimized",
     "(?P = ?Q) = (D ?P = D ?Q & (D ?P = D ?Q --> F ?P = F ?Q))",
     template_bimplication
      (template_equation (template_var 1, template_var 0), template_dunno)),
    ("Process.F_D_part",
     "F ?P = {(s, x). s : D ?P} Un {(s, x). s ~: D ?P & (s, x) : F ?P}",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7, template_app (template_hole 6, t_empty))),
         template_app
          (template_hole 7, template_app (template_hole 6, t_empty))))),
    ("Process.is_process_spec",
     "is_process ?P =
      (([], {}) : FAILURES ?P &
       (ALL s X. (s, X) : FAILURES ?P --> front_tickFree s) &
       (ALL s t. (s @ t, {}) ~: FAILURES ?P | (s, {}) : FAILURES ?P) &
       (ALL s X Y.
           (s, Y) ~: FAILURES ?P | ~ X <= Y | (s, X) : FAILURES ?P) &
       (ALL s X Y.
           (s, X) : FAILURES ?P &
           (ALL c. c : Y --> (s @ [c], {}) ~: FAILURES ?P) -->
           (s, X Un Y) : FAILURES ?P) &
       (ALL s X.
           (s @ [tick], {}) : FAILURES ?P -->
           (s, X - {tick}) : FAILURES ?P) &
       (ALL s t.
           s ~: DIVERGENCES ?P |
           ~ tickFree s | ~ front_tickFree t | s @ t : DIVERGENCES ?P) &
       (ALL s X. s ~: DIVERGENCES ?P | (s, X) : FAILURES ?P) &
       (ALL s. s @ [tick] ~: DIVERGENCES ?P | s : DIVERGENCES ?P))",
     template_equation
      (template_app (template_hole 24, template_var 0),
       template_app
        (template_app
          (template_hole 23,
           template_app
            (template_app
              (template_hole 22,
               template_app
                (template_app (template_hole 21, template_hole 20),
                 template_hole 19)),
             template_app (template_hole 18, template_var 0))),
         template_app
          (template_app
            (template_hole 23, template_app (template_hole 17, t_empty)),
           template_app
            (template_app
              (template_hole 23, template_app (template_hole 17, t_empty)),
             template_app
              (template_app
                (template_hole 23,
                 template_app (template_hole 17, t_empty)),
               template_app
                (template_app
                  (template_hole 23,
                   template_app (template_hole 17, t_empty)),
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app (template_hole 17, t_empty)),
                   template_app
                    (template_app
                      (template_hole 23,
                       template_app (template_hole 17, t_empty)),
                     template_app
                      (template_app
                        (template_hole 23,
                         template_app (template_hole 17, t_empty)),
                       template_app (template_hole 17, t_empty)))))))))))]
