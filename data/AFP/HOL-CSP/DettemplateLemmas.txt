   [("Det.Det_commute", "(?P [+] ?Q) = (?Q [+] ?P)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Det.D_det", "D (?P [+] ?Q) = D ?P Un D ?Q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Det.T_det", "T (?P [+] ?Q) = T ?P Un T ?Q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Det.mono_Det", "?P << ?Q ==> (?P [+] ?S) << (?Q [+] ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Det.mono_Det_sym", "?P << ?Q ==> (?S [+] ?P) << (?S [+] ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Det.mono_D1", "?P << ?Q ==> D (?Q [+] ?S) <= D (?P [+] ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Det.mono_D3",
     "?P << ?Q ==> min_elems (D (?P [+] ?S)) <= T (?Q [+] ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Det.det_cont", "[| cont ?f; cont ?g |] ==> cont (%x. ?f x [+] ?g x)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Det.cont_D0",
     "chain ?Y ==>
      (lim_proc (range ?Y) [+] ?S) = lim_proc (range (%i. ?Y i [+] ?S))",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0))),
           template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0))))),
    ("Det.cont_D",
     "chain ?Y ==> ((LUB i. ?Y i) [+] ?S) = (LUB i. ?Y i [+] ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty),
                 template_hole 0))),
           template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0))))),
    ("Det.mono_D2",
     "?P << ?Q ==>
      ALL s. s ~: D (?P [+] ?S) --> Ra (?P [+] ?S) s = Ra (?Q [+] ?S) s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Det.F_det",
     "F (?P [+] ?Q) =
      {(s, X). s = [] & (s, X) : F ?P Int F ?Q} Un
      {(s, X). s ~= [] & (s, X) : F ?P Un F ?Q} Un
      {(s, X). s = [] & s : D ?P Un D ?Q} Un
      {(s, X). s = [] & tick ~: X & [tick] : T ?P Un T ?Q}",
     template_equation
      (template_app
        (template_hole 18,
         template_app
          (template_app (template_hole 17, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 16,
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_hole 15,
                     template_app (template_hole 14, t_empty))),
                 template_app
                  (template_hole 15,
                   template_app (template_hole 14, t_empty)))),
             template_app
              (template_hole 15,
               template_app (template_hole 14, t_empty)))),
         template_app
          (template_hole 15, template_app (template_hole 14, t_empty))))),
    ("Det.is_process_REP_D",
     "is_process
       ({(s, X). s = [] & (s, X) : F ?P Int F ?Q} Un
        {(s, X). s ~= [] & (s, X) : F ?P Un F ?Q} Un
        {(s, X). s = [] & s : D ?P Un D ?Q} Un
        {(s, X). s = [] & tick ~: X & [tick] : T ?P Un T ?Q},
        D ?P Un D ?Q)",
     template_predicate
      (
         template_app
          (template_hole 19,
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app
                  (template_hole 17,
                   template_app
                    (template_app
                      (template_hole 17,
                       template_app
                        (template_app
                          (template_hole 17,
                           template_app
                            (template_hole 16,
                             template_app (template_hole 15, t_empty))),
                         template_app
                          (template_hole 16,
                           template_app (template_hole 15, t_empty)))),
                     template_app
                      (template_hole 16,
                       template_app (template_hole 15, t_empty)))),
                 template_app
                  (template_hole 16,
                   template_app (template_hole 15, t_empty)))),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1)),
               template_app (template_hole 4, template_var 0))))
         )),
    ("Det.Rep_Abs_D",
     "Rep_process
       (Abs_process
         ({(s, X). s = [] & (s, X) : F ?P Int F ?Q} Un
          {(s, X). s ~= [] & (s, X) : F ?P Un F ?Q} Un
          {(s, X). s = [] & s : D ?P Un D ?Q} Un
          {(s, X). s = [] & tick ~: X & [tick] : T ?P Un T ?Q},
          D ?P Un D ?Q)) =
      ({(s, X). s = [] & (s, X) : F ?P Int F ?Q} Un
       {(s, X). s ~= [] & (s, X) : F ?P Un F ?Q} Un
       {(s, X). s = [] & s : D ?P Un D ?Q} Un
       {(s, X). s = [] & tick ~: X & [tick] : T ?P Un T ?Q},
       D ?P Un D ?Q)",
     template_equation
      (template_app
        (template_hole 20,
         template_app
          (template_hole 19,
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app
                  (template_hole 17,
                   template_app
                    (template_app
                      (template_hole 17,
                       template_app
                        (template_app
                          (template_hole 17,
                           template_app
                            (template_hole 16,
                             template_app (template_hole 15, t_empty))),
                         template_app
                          (template_hole 16,
                           template_app (template_hole 15, t_empty)))),
                     template_app
                      (template_hole 16,
                       template_app (template_hole 15, t_empty)))),
                 template_app
                  (template_hole 16,
                   template_app (template_hole 15, t_empty)))),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 1)),
               template_app (template_hole 4, template_var 0))))),
       template_app
        (template_app
          (template_hole 18,
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app
                  (template_hole 17,
                   template_app
                    (template_app
                      (template_hole 17,
                       template_app
                        (template_hole 16,
                         template_app (template_hole 15, t_empty))),
                     template_app
                      (template_hole 16,
                       template_app (template_hole 15, t_empty)))),
                 template_app
                  (template_hole 16,
                   template_app (template_hole 15, t_empty)))),
             template_app
              (template_hole 16,
               template_app (template_hole 15, t_empty)))),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_app (template_hole 4, template_var 0)))))]
