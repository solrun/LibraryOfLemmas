   [("Mprefix.mono_Mprefix", "monofun (Mprefix ?A)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Mprefix.write0_contlub", "contlub (write0 ?a)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Mprefix.contlub_Mprefix", "contlub (Mprefix ?A)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("Mprefix.write0_cont_lub", "contlub (Mprefix {?a})",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))
         )),
    ("Mprefix.cont2contlub", "cont ?f ==> contlub ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Mprefix.Nil_Nin_D_Mprefix", "[] ~: D (Mprefix ?A ?P)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   t_empty)))
             )
         )),
    ("Mprefix.write0_cont", "cont ?P ==> cont (%x. ?a \<rightarrow> ?P x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Mprefix.mprefix_chainpreserving",
     "chain ?Y ==> chain (%i. Mprefix ?A (?Y i))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Mprefix.monocontlub2cont", "[| monofun ?f; contlub ?f |] ==> cont ?f",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 0)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Mprefix.tick_T_Mprefix", "[tick] ~: T (Mprefix ?A ?P)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_hole 2)),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   t_empty)))
             )
         )),
    ("Mprefix.write_cont",
     "(!!x. cont ?P) ==> cont (%x. ?c`!`?a \<rightarrow> ?P x)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Mprefix.Mprefix_cont",
     "(!!x. cont (?f x)) ==> cont (%y. Mprefix ?A (%z. ?f z y))",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Mprefix.proc_ord_proc_eq_spec",
     "[| ?P << ?Q; D ?P <= D ?Q |] ==> ?P = ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Mprefix.read_cont",
     "(!!x. cont (?f x)) ==> cont (%y. ?c`?`x \<rightarrow> ?f x y)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Mprefix.limproc_is_thelub_fun",
     "chain ?S ==> Lub ?S ?c = lim_proc (range (%x. ?S x ?c))",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2)),
           template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_hole 2))))),
    ("Mprefix.mono_Mprefix0",
     "ALL x:?A. ?P x << ?Q x ==> Mprefix ?A ?P << Mprefix ?A ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Mprefix.mono_Mprefix1",
     "ALL a:?A. ?P a << ?Q a ==> D (Mprefix ?A ?Q) <= D (Mprefix ?A ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Mprefix.mono_Mprefix3",
     "ALL x:?A. ?P x << ?Q x ==>
      min_elems (D (Mprefix ?A ?P)) <= T (Mprefix ?A ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Mprefix.contlubE",
     "[| contlub ?f; chain ?Y |] ==> ?f (LUB i. ?Y i) = (LUB i. ?f (?Y i))",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_var 1,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, t_empty), template_hole 2))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_hole 2))))),
    ("Mprefix.contlubI",
     "(!!Y. chain Y ==> ?f (LUB i. Y i) = (LUB i. ?f (Y i))) ==>
      contlub ?f",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Mprefix.mono_Mprefix2",
     "ALL x:?A. ?P x << ?Q x ==>
      ALL s.
         s ~: D (Mprefix ?A ?P) -->
         Ra (Mprefix ?A ?P) s = Ra (Mprefix ?A ?Q) s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2), t_empty)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Mprefix.D_Mprefix",
     "D (Mprefix ?A ?P) =
      {d. d ~= [] &
          hd d : ev ` ?A & (EX a. ev a = hd d & tl d : D (?P a))}",
     template_equation
      (template_app
        (template_hole 14,
         template_app
          (template_app (template_hole 13, template_var 1), t_empty)),
       template_app (template_hole 12, t_empty))),
    ("Mprefix.T_Mprefix",
     "T (Mprefix ?A ?P) =
      {s. s = [] |
          (EX a. a : ?A & s ~= [] & hd s = ev a & tl s : T (?P a))}",
     template_equation
      (template_app
        (template_hole 14,
         template_app
          (template_app (template_hole 13, template_var 1), t_empty)),
       template_app (template_hole 12, t_empty))),
    ("Mprefix.proc_ord2_set",
     "?P << ?Q ==>
      {(s, X). s ~: D ?P & (s, X) : F ?P} =
      {(s, X). s ~: D ?P & (s, X) : F ?Q}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 8, template_app (template_hole 7, t_empty)),
         template_app
          (template_hole 8, template_app (template_hole 7, t_empty))))),
    ("Mprefix.F_Mprefix",
     "F (Mprefix ?A ?P) =
      {(tr, ref). tr = [] & ref Int ev ` ?A = {}} Un
      {(tr, ref).
       tr ~= [] &
       hd tr : ev ` ?A & (EX a. ev a = hd tr & (tl tr, ref) : F (?P a))}",
     template_equation
      (template_app
        (template_hole 20,
         template_app
          (template_app (template_hole 19, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 18,
           template_app
            (template_hole 17, template_app (template_hole 16, t_empty))),
         template_app
          (template_hole 17, template_app (template_hole 16, t_empty))))),
    ("Mprefix.is_process_REP_Mp",
     "is_process
       ({(tr, ref). tr = [] & ref Int ev ` ?A = {}} Un
        {(tr, ref).
         tr ~= [] &
         hd tr : ev ` ?A & (EX a. ev a = hd tr & (tl tr, ref) : F (?P a))},
        {d. d ~= [] &
            hd d : ev ` ?A & (EX a. ev a = hd d & tl d : D (?P a))})",
     template_predicate
      (
         template_app
          (template_hole 24,
           template_app
            (template_app
              (template_hole 23,
               template_app
                (template_app
                  (template_hole 22,
                   template_app
                    (template_hole 21,
                     template_app (template_hole 20, t_empty))),
                 template_app
                  (template_hole 21,
                   template_app (template_hole 20, t_empty)))),
             template_app (template_hole 2, t_empty)))
         )),
    ("Mprefix.Rep_Abs_Mp''",
     "[| ?f =
         {(tr, ref). tr = [] & ref Int ev ` ?A = {}} Un
         {(tr, ref).
          tr ~= [] &
          hd tr : ev ` ?A & (EX a. ev a = hd tr & (tl tr, ref) : F (?P a))};
         ?d =
         {d. d ~= [] &
             hd d : ev ` ?A & (EX a. ev a = hd d & tl d : D (?P a))} |]
      ==> Rep_process (Abs_process (?f, ?d)) = (?f, ?d)",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 27,
              template_app
               (template_hole 26,
                template_app (template_hole 25, t_empty))),
            template_app
             (template_hole 26, template_app (template_hole 25, t_empty)))),
        template_equation
         (template_var 0, template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Mprefix.Rep_Abs_Mp",
     "Rep_process
       (Abs_process
         ({(tr, ref). tr = [] & ref Int ev ` ?A = {}} Un
          {(tr, ref).
           tr ~= [] &
           hd tr : ev ` ?A &
           (EX a. ev a = hd tr & (tl tr, ref) : F (?P a))},
          {d. d ~= [] &
              hd d : ev ` ?A & (EX a. ev a = hd d & tl d : D (?P a))})) =
      ({(tr, ref). tr = [] & ref Int ev ` ?A = {}} Un
       {(tr, ref).
        tr ~= [] &
        hd tr : ev ` ?A & (EX a. ev a = hd tr & (tl tr, ref) : F (?P a))},
       {d. d ~= [] &
           hd d : ev ` ?A & (EX a. ev a = hd d & tl d : D (?P a))})",
     template_equation
      (template_app
        (template_hole 25,
         template_app
          (template_hole 24,
           template_app
            (template_app
              (template_hole 23,
               template_app
                (template_app
                  (template_hole 22,
                   template_app
                    (template_hole 21,
                     template_app (template_hole 20, t_empty))),
                 template_app
                  (template_hole 21,
                   template_app (template_hole 20, t_empty)))),
             template_app (template_hole 2, t_empty)))),
       template_app
        (template_app
          (template_hole 23,
           template_app
            (template_app
              (template_hole 22,
               template_app
                (template_hole 21,
                 template_app (template_hole 20, t_empty))),
             template_app
              (template_hole 21,
               template_app (template_hole 20, t_empty)))),
         template_app (template_hole 2, t_empty))))]
