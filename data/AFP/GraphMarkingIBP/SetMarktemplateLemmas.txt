   [("SetMark.union_term_eq", "\<Union> (range (term_eq ?t)) = UNIV",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_hole 1)),
       template_hole 0)),
    ("SetMark.union_term_w", "(UN w. {s. ?t s = w}) = UNIV",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_hole 1)),
       template_hole 0)),
    ("SetMark.sup_union", "(\<Squnion>range ?A) ?i = (UN w. ?A w ?i)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_hole 2)))),
    ("SetMark.SUP_SUP_L",
     "\<Squnion>range (SUP_LE_P ?X) = \<Squnion>range ?X",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty), template_var 0)),
           template_hole 2)),
       template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("SetMark.union_less_term_eq",
     "\<Union> (term_eq ?t ` {v. v \<sqsubset> ?w}) = term_less ?t ?w",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 2, t_empty))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetMark.SUP_L_SUP_LE_P", "Sup_less (SUP_LE_P ?X) = SUP_L_P ?X",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("SetMark.SUP_L_P_upper",
     "(?i, ?v) \<sqsubset> ?u ==> ?P ?v ?i <= SUP_L_P ?P ?u ?i",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_var 0, template_var 2), template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, t_empty), template_var 0),
             template_var 1),
           template_var 3)))),
    ("SetMark.SUP_LE_P_upper",
     "(?i, ?v) <= ?u ==> ?P ?v ?i <= SUP_LE_P ?P ?u ?i",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_var 0, template_var 2), template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, t_empty), template_var 0),
             template_var 1),
           template_var 3)))),
    ("SetMark.hoare_dgr_correctness",
     "[| dmono ?D; Hoare_dgr ?P ?D ?Q |] ==> \<Turnstile> ?P{| pt ?D |}?Q",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, t_empty), template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 2)),
             template_var 0)
           ))),
    ("SetMark.hoare_dgr_correctness1",
     "[| dmono ?D; Hoare_dgr1 ?P ?D ?Q |] ==> \<Turnstile> ?P{| pt ?D |}?Q",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, t_empty), template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 2)),
             template_var 0)
           ))),
    ("SetMark.union_less_term_w",
     "(UN v:{v. v \<sqsubset> ?w}. {s. ?t s = v}) =
      {s. ?t s \<sqsubset> ?w}",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 1, t_empty))),
       template_app (template_hole 3, t_empty))),
    ("SetMark.forall_simp",
     "(ALL a b. ALL x:?A. a = ?t x --> ?h x | b ~= ?u x) =
      (ALL x:?A. ?h x)",
     template_equation
      (template_app (template_hole 7, t_empty),
       template_app
        (template_app (template_hole 5, template_var 3), t_empty))),
    ("SetMark.SUP_L_P_least",
     "(!!v. (?i, v) \<sqsubset> ?u ==> ?P v ?i <= ?Q) ==>
      SUP_L_P ?P ?u ?i <= ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, t_empty), template_var 1),
             template_var 2),
           template_var 3),
         template_var 0))),
    ("SetMark.SUP_LE_P_least",
     "(!!v. (?i, v) <= ?u ==> ?P v ?i <= ?Q) ==> SUP_LE_P ?P ?u ?i <= ?Q",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, t_empty), template_var 1),
             template_var 2),
           template_var 3),
         template_var 0))),
    ("SetMark.disjunctive_SUP_L_P",
     "Disjunctive_fun ?R ==>
      (?R .. SUP_L_P ?P (?i, ?u)) = SUP_L_P (%w. ?R .. ?P w) (?i, ?u)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_app (template_hole 0, t_empty), t_empty),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("SetMark.forall_simp2",
     "(ALL a b.
          ALL x:?A. ALL y. a = ?t x y --> ?h x y --> ?g x y | b ~= ?u x y) =
      (ALL x:?A. ALL y. ?h x y --> ?g x y)",
     template_equation
      (template_app (template_hole 8, t_empty),
       template_app
        (template_app (template_hole 6, template_var 4), t_empty))),
    ("SetMark.Diagram_DataRefinement1",
     "[| dmono ?D; Disjunctive_fun ?R; Hoare_dgr ?P ?D ?Q;
         DgrDataRefinement1 ?D ?R ?D' |]
      ==> Hoare_dgr (?R .. ?P) ?D'
           ((?R .. ?P) \<sqinter> - grd (step ?D'))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, t_empty), template_var 2),
                template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, t_empty),
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 2)),
               template_var 0),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 2)),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("SetMark.Diagram_DataRefinement2",
     "[| dmono ?D; Disjunctive_fun ?R; Hoare_dgr ?P ?D ?Q;
         DgrDataRefinement2 ?P ?D ?R ?D' |]
      ==> Hoare_dgr (?R .. ?P) ?D'
           ((?R .. ?P) \<sqinter> - grd (step ?D'))",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, t_empty), template_var 2),
                template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 4),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, t_empty),
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 2)),
               template_var 0),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 2)),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("SetMark.hoare_diagram2",
     "[| dmono ?D;
         ALL u i j. \<Turnstile> ?X u i{| ?D (i, j) |}SUP_L_P ?X (i, u) j |]
      ==> \<Turnstile> \<Squnion>range
                                  ?X{| pt
  ?D |}(\<Squnion>range ?X \<sqinter> - grd (step ?D))",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 1)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 5))),
               template_app (template_hole 4, template_var 1)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 5))),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 1)))))
           ))),
    ("SetMark.trascl_less",
     "[| ?x ~= ?y; (?a, ?x) : ?R^* |]
      ==> (?a, ?x) : (Restr ?R (- {?y}))^* |
          (?y, ?x) : ?R O (Restr ?R (- {?y}))^*",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 3)),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_var 3)),
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_app (template_hole 2, template_var 2),
                             template_hole 1))),
                       t_empty))))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_var 3)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_app (template_hole 2, template_var 2),
                             template_hole 1))),
                       t_empty))))))
           ))),
    ("SetMark.hoare_diagram3",
     "[| dmono ?D;
         ALL u i j. \<Turnstile> ?X u i{| ?D (i, j) |}SUP_L_P ?X (i, u) j;
         ?P <= \<Squnion>range ?X;
         \<Squnion>range ?X \<sqinter> - grd (step ?D) <= ?Q |]
      ==> \<Turnstile> ?P{| pt ?D |}?Q",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 3)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 2),
              template_hole 6))),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_hole 6))),
            template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)))),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 3)),
             template_var 0)
           ))),
    ("SetMark.dgr_data_refinement_1",
     "[| dmono ?D'; Disjunctive_fun ?R;
         ALL w i j. \<Turnstile> ?P w i{| ?D (i, j) |}SUP_L_P ?P (i, w) j;
         ALL w i j.
            DataRefinement ({. ?P w i .} o ?D (i, j)) (?R i) (?R j)
             (?D' (i, j)) |]
      ==> \<Turnstile> ?R ..
                       \<Squnion>range
                                  ?P{| pt
  ?D' |}((?R .. \<Squnion>range ?P) \<sqinter> - grd (step ?D'))",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 3)),
        template_predicate
         (template_app (template_hole 19, template_var 2)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 1),
                       template_hole 5)))),
               template_app (template_hole 4, template_var 3)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_var 1),
                       template_hole 5)))),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 3)))))
           )))]
