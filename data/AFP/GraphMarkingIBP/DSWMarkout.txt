Loading theory "Draft.Graph" (required by "Draft.DSWMarkMoreTemplates" via "Draft.DSWMark" via "Draft.LinkMark" via "Draft.StackMark" via "Draft.SetMark")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.DSWMarkMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.DSWMarkMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.DSWMarkMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
locale node
  fixes nil :: "'node"
    and root :: "'node"
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
locale graph
  fixes nil :: "'node"
    and root :: "'node"
    and "next" :: "('node * 'node) set"
  assumes "graph nil next"
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Graph"
### 0.099s elapsed time, 0.433s cpu time, 0.000s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.DSWMarkMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.156s elapsed time, 0.647s cpu time, 0.047s GC time
Loading theory "LatticeProperties.Conj_Disj" (required by "Draft.DSWMarkMoreTemplates" via "Draft.DSWMark" via "Draft.LinkMark" via "Draft.StackMark" via "Draft.SetMark" via "DataRefinementIBP.DataRefinement" via "DataRefinementIBP.Diagram" via "DataRefinementIBP.Hoare" via "DataRefinementIBP.Statements" via "DataRefinementIBP.Preliminaries")
locale conjunctive
  fixes inf_b :: "'b => 'b => 'b"
    and inf_c :: "'c => 'c => 'c"
    and times_abc :: "'a => 'b => 'c"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.214s elapsed time, 0.876s cpu time, 0.047s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.DSWMarkMoreTemplates" via "Draft.ExtrEqs")
locale disjunctive
  fixes sup_b :: "'b => 'b => 'b"
    and sup_c :: "'c => 'c => 'c"
    and times_abc :: "'a => 'b => 'c"
locale Conjunctive
  fixes Inf_b :: "'b set => 'b"
    and Inf_c :: "'c set => 'c"
    and times_abc :: "'a => 'b => 'c"
locale Disjunctive
  fixes Sup_b :: "'b set => 'b"
    and Sup_c :: "'c set => 'c"
    and times_abc :: "'a => 'b => 'c"
### theory "HOL-Library.Nat_Bijection"
### 0.343s elapsed time, 1.374s cpu time, 0.140s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.DSWMarkMoreTemplates" via "Draft.ExtrEqs")
### theory "LatticeProperties.Conj_Disj"
### 0.203s elapsed time, 0.801s cpu time, 0.093s GC time
Loading theory "LatticeProperties.WellFoundedTransitive" (required by "Draft.DSWMarkMoreTemplates" via "Draft.DSWMark" via "Draft.LinkMark" via "Draft.StackMark" via "Draft.SetMark" via "DataRefinementIBP.DataRefinement" via "DataRefinementIBP.Diagram" via "DataRefinementIBP.Hoare" via "DataRefinementIBP.Statements" via "DataRefinementIBP.Preliminaries" via "LatticeProperties.Complete_Lattice_Prop")
class transitive = ord +
  assumes "order_trans1": "!!x y z. [| x < y; y < z |] ==> x < z"
    and "less_eq_def": "!!x y. (x <= y) = (x = y | x < y)"
class well_founded = ord +
  assumes
    "less_induct1": "!!P a. (!!x. (!!y. y < x ==> P y) ==> P x) ==> P a"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
instantiation
  prod :: (ord, ord) ord
  less_eq_prod == less_eq :: 'a * 'b => 'a * 'b => bool
  less_prod == less :: 'a * 'b => 'a * 'b => bool
instantiation
  prod :: (transitive, transitive) transitive
instantiation
  prod :: (well_founded, well_founded) well_founded
instantiation
  prod :: (well_founded_transitive, well_founded_transitive)
    well_founded_transitive
instantiation
  nat :: transitive
instantiation
  nat :: well_founded
instantiation
  nat :: well_founded_transitive
### theory "LatticeProperties.WellFoundedTransitive"
### 0.359s elapsed time, 1.420s cpu time, 0.142s GC time
Loading theory "LatticeProperties.Complete_Lattice_Prop" (required by "Draft.DSWMarkMoreTemplates" via "Draft.DSWMark" via "Draft.LinkMark" via "Draft.StackMark" via "Draft.SetMark" via "DataRefinementIBP.DataRefinement" via "DataRefinementIBP.Diagram" via "DataRefinementIBP.Hoare" via "DataRefinementIBP.Statements" via "DataRefinementIBP.Preliminaries")
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
class complete_lattice = ccpo + conditionally_complete_lattice +
  bounded_lattice +
  assumes "Inf_lower": "!!x A. x : A ==> Inf A <= x"
    and "Inf_greatest": "!!A z. (!!x. x : A ==> z <= x) ==> z <= Inf A"
    and "Sup_upper": "!!x A. x : A ==> x <= Sup A"
    and "Sup_least": "!!A z. (!!x. x : A ==> x <= z) ==> Sup A <= z"
    and "Inf_empty": "Inf {} = top"
    and "Sup_empty": "Sup {} = bot"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
class complete_lattice = ccpo + conditionally_complete_lattice +
  bounded_lattice +
  assumes "Inf_lower": "!!x A. x : A ==> Inf A <= x"
    and "Inf_greatest": "!!A z. (!!x. x : A ==> z <= x) ==> z <= Inf A"
    and "Sup_upper": "!!x A. x : A ==> x <= Sup A"
    and "Sup_least": "!!A z. (!!x. x : A ==> x <= z) ==> Sup A <= z"
    and "Inf_empty": "Inf {} = top"
    and "Sup_empty": "Sup {} = bot"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
### theory "LatticeProperties.Complete_Lattice_Prop"
### 0.256s elapsed time, 1.014s cpu time, 0.071s GC time
Loading theory "DataRefinementIBP.Preliminaries" (required by "Draft.DSWMarkMoreTemplates" via "Draft.DSWMark" via "Draft.LinkMark" via "Draft.StackMark" via "Draft.SetMark" via "DataRefinementIBP.DataRefinement" via "DataRefinementIBP.Diagram" via "DataRefinementIBP.Hoare" via "DataRefinementIBP.Statements")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.956s elapsed time, 3.602s cpu time, 0.812s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
### theory "DataRefinementIBP.Preliminaries"
### 0.341s elapsed time, 1.054s cpu time, 0.544s GC time
Loading theory "DataRefinementIBP.Statements" (required by "Draft.DSWMarkMoreTemplates" via "Draft.DSWMark" via "Draft.LinkMark" via "Draft.StackMark" via "Draft.SetMark" via "DataRefinementIBP.DataRefinement" via "DataRefinementIBP.Diagram" via "DataRefinementIBP.Hoare")
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
"{: y, z \<leadsto> x, z' . P x y z z' :}"
  :: "('c * 'd) set => ('a * 'b) set"
### theory "HOL-Library.Stream"
### 1.036s elapsed time, 3.744s cpu time, 0.756s GC time
### theory "DataRefinementIBP.Statements"
### 0.070s elapsed time, 0.212s cpu time, 0.000s GC time
Loading theory "DataRefinementIBP.Hoare" (required by "Draft.DSWMarkMoreTemplates" via "Draft.DSWMark" via "Draft.LinkMark" via "Draft.StackMark" via "Draft.SetMark" via "DataRefinementIBP.DataRefinement" via "DataRefinementIBP.Diagram")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "DataRefinementIBP.Hoare"
### 0.097s elapsed time, 0.194s cpu time, 0.000s GC time
Loading theory "DataRefinementIBP.Diagram" (required by "Draft.DSWMarkMoreTemplates" via "Draft.DSWMark" via "Draft.LinkMark" via "Draft.StackMark" via "Draft.SetMark" via "DataRefinementIBP.DataRefinement")
Found termination order: "size <*mlex*> {}"
locale DiagramTermination
  fixes pair :: "'a => 'b => 'c"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "DataRefinementIBP.Diagram"
### 0.183s elapsed time, 0.396s cpu time, 0.063s GC time
Loading theory "DataRefinementIBP.DataRefinement" (required by "Draft.DSWMarkMoreTemplates" via "Draft.DSWMark" via "Draft.LinkMark" via "Draft.StackMark" via "Draft.SetMark")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "DataRefinementIBP.DataRefinement"
### 0.120s elapsed time, 0.243s cpu time, 0.000s GC time
Loading theory "Draft.SetMark" (required by "Draft.DSWMarkMoreTemplates" via "Draft.DSWMark" via "Draft.LinkMark" via "Draft.StackMark")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.031s elapsed time, 6.263s cpu time, 1.012s GC time
Loading theory "Draft.Templates" (required by "Draft.DSWMarkMoreTemplates" via "Draft.ExtrEqs")
instantiation
  I :: well_founded_transitive
  less_eq_I == less_eq :: I => I => bool
  less_I == less :: I => I => bool
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.055s elapsed time, 0.126s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.DSWMarkMoreTemplates")
### theory "Draft.SetMark"
### 0.611s elapsed time, 1.313s cpu time, 0.160s GC time
Loading theory "Draft.StackMark" (required by "Draft.DSWMarkMoreTemplates" via "Draft.DSWMark" via "Draft.LinkMark")
### theory "Draft.StackMark"
### 0.166s elapsed time, 0.330s cpu time, 0.000s GC time
Loading theory "Draft.LinkMark" (required by "Draft.DSWMarkMoreTemplates" via "Draft.DSWMark")
locale pointer
  fixes nil :: "'node"
    and root :: "'node"
    and none :: "'index"
    and link0 :: "'index => 'node => 'node"
    and label0 :: "'node => 'index"
  assumes "pointer nil"
locale pointer
  fixes nil :: "'node"
    and root :: "'node"
    and none :: "'index"
    and link0 :: "'index => 'node => 'node"
    and label0 :: "'node => 'index"
  assumes "pointer nil"
consts
  label_0 :: "('node => 'index) => 'node list => 'node => 'index"
consts
  link_0 ::
    "('index => 'node => 'node)
     => ('node => 'index)
        => 'node => 'node list => 'index => 'node => 'node"
consts
  stack ::
    "('index => 'node => 'node)
     => ('node => 'index) => 'node => 'node list => bool"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.536s elapsed time, 1.131s cpu time, 0.131s GC time
### theory "Draft.LinkMark"
### 0.330s elapsed time, 0.530s cpu time, 0.071s GC time
Loading theory "Draft.DSWMark" (required by "Draft.DSWMarkMoreTemplates")
locale classical
  fixes nil :: "'node"
    and root :: "'node"
    and left0 :: "'node => 'node"
    and right0 :: "'node => 'node"
    and atom0 :: "'node => bool"
  assumes "classical nil"
locale classical
  fixes nil :: "'node"
    and root :: "'node"
    and left0 :: "'node => 'node"
    and right0 :: "'node => 'node"
    and atom0 :: "'node => bool"
  assumes "classical nil"
### theory "Draft.DSWMark"
### 0.582s elapsed time, 0.643s cpu time, 0.084s GC time
Loading theory "Draft.DSWMarkMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.DSWMarkMoreTemplates"
### 0.338s elapsed time, 0.476s cpu time, 0.046s GC time
val it = (): unit
