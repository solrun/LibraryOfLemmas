   [("HOL.NO_MATCH_cong", "NO_MATCH ?pat ?val = NO_MATCH ?pat ?val",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("AT.fst_att_eq",
     "(fst ?x # ?sl) ! 0 =
      fst (attack (?al \<oplus>\<^sub>\<and>\<^bsup>?x\<^esup>))",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_var 1)),
         template_hole 2),
       template_app
        (template_hole 3,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("AT.att_base",
     "(\<turnstile>\<N>\<^bsub>?s\<^esub>) =
      (ALL x:fst ?s. Bex (snd ?s) ((\<rightarrow>\<^sub>i) x))",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         t_empty))),
    ("AT.length_last", "(?l @ [?x]) ! (length (?l @ [?x]) - 1) = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3)))),
           template_hole 0)),
       template_var 0)),
    ("AT.attack_eq1",
     "snd (attack (?x1.0 # ?x2a \<oplus>\<^sub>\<and>\<^bsup>?x\<^esup>)) =
      snd (attack
            (?x2a \<oplus>\<^sub>\<and>\<^bsup>(snd (attack ?x1.0),
          snd ?x)\<^esup>))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 2))),
               template_app (template_hole 4, template_var 0))))))),
    ("AT.att_and",
     "(\<turnstile>?As \<oplus>\<^sub>\<and>\<^bsup>?s\<^esup>) =
      (case ?As of [] => fst ?s <= snd ?s
       | [a] => \<turnstile>a & attack a = ?s
       | a # ab # list =>
           \<turnstile>a &
           fst (attack a) = fst ?s &
           \<turnstile>ab #
                       list \<oplus>\<^sub>\<and>\<^bsup>(snd (attack a),
                    snd ?s)\<^esup>)",
     template_equation
      (template_app
        (template_hole 11,
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 0)),
               template_app (template_hole 6, template_var 0))),
           t_empty),
         template_var 1))),
    ("AT.att_or",
     "(\<turnstile>?As \<oplus>\<^sub>\<or>\<^bsup>?s\<^esup>) =
      (case ?As of [] => fst ?s <= snd ?s
       | [a] =>
           \<turnstile>a &
           fst ?s <= fst (attack a) & snd (attack a) <= snd ?s
       | a # ab # list =>
           \<turnstile>a &
           fst (attack a) <= fst ?s &
           snd (attack a) <= snd ?s &
           \<turnstile>ab #
                       list \<oplus>\<^sub>\<or>\<^bsup>(fst ?s -
                   fst (attack a),
                   snd ?s)\<^esup>)",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app (template_hole 9, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 0)),
               template_app (template_hole 5, template_var 0))),
           t_empty),
         template_var 1)))]
