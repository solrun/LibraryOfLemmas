   [("ListUtilities.PrefixListMonotonicity",
     "prefixList ?l1.0 ?l2.0 ==> length ?l1.0 < length ?l2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("ListUtilities.TailIsPrefixList",
     "?tail ~= [] ==> prefixList ?l1.0 (?l1.0 @ ?tail)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("ListUtilities.PrefixListTransitive",
     "[| prefixList ?l1.0 ?l2.0; prefixList ?l2.0 ?l3.0 |]
      ==> prefixList ?l1.0 ?l3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("ListUtilities.PrefixListHasTail",
     "prefixList ?l1.0 ?l2.0 ==> EX l. ?l2.0 = ?l1.0 @ l & l ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("ListUtilities.SetToIndex",
     "?a : set ?liste ==> EX index<length ?liste. ?a = ?liste ! index",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("ListUtilities.PrefixSameOnLow",
     "prefixList ?l1.0 ?l2.0 ==>
      ALL index<length ?l1.0. ?l1.0 ! index = ?l2.0 ! index",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("ListUtilities.MinPredicate",
     "EX n. ?P n ==> EX n0. ?P n0 & (ALL n'. ?P n' --> n0 <= n')",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("ListUtilities.DropToShift",
     "?l + ?i < length ?list ==> drop ?l ?list ! ?i = ?list ! (?l + ?i)",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1))))),
    ("ListUtilities.ListLenDrop",
     "[| ?i < length ?lb; ?la <= ?i |] ==> ?lb ! ?i : set (drop ?la ?lb)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 2)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("ListUtilities.MinPredicate2",
     "EX n. ?P n ==> EX n0. ?P n0 & (n0 = 0 | ~ ?P (n0 - 1))",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("ListUtilities.DropToIndex",
     "?a : set (drop ?l ?liste) ==>
      EX i>=?l. i < length ?liste & ?a = ?liste ! i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("ListUtilities.NatPredicateTippingPoint",
     "[| 0 < ?n2.0; ?Pr 0; ~ ?Pr ?n2.0 |]
      ==> EX n<?n2.0. ?Pr n & ~ ?Pr (Suc n)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_predicate (template_app (template_var 0, template_hole 4)),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 1))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("ListUtilities.SmallerMultipleStepsWithLimit",
     "ALL n>=?limit. ?A (Suc n) < ?A n ==>
      ALL n>=?limit. ?A (n + ?k) <= ?A n - ?k",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("ListUtilities.KeepProperty",
     "[| ALL i>=?low. ?P i --> ?P (Suc i) & ?Q i; ?P ?low |]
      ==> ALL i>=?low. ?Q i",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_var 1, template_var 2))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("ListUtilities.PredicatePairFunctions2Inv",
     "[| ALL x1 x2. EX y1 y2. ?P x1 x2 y1 y2;
         !!f1 f2. ALL x1 x2. ?P x1 x2 (f1 x1 x2) (f2 x1 x2) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("ListUtilities.PredicatePairFunction",
     "ALL x1 x2. EX y1 y2. ?P x1 x2 y1 y2 ==>
      EX f. ALL x1 x2.
               EX y1 y2.
                  f x1 x2 = (y1, y2) &
                  ?P x1 x2 (fst (f x1 x2)) (snd (f x1 x2))",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("ListUtilities.PredicatePairFunctions2",
     "[| ALL x1 x2. EX y1 y2. ?P x1 x2 y1 y2;
         !!f1 f2.
            ALL x1 x2.
               EX y1 y2.
                  f1 x1 x2 = y1 &
                  f2 x1 x2 = y2 & ?P x1 x2 (f1 x1 x2) (f2 x1 x2) ==>
            ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0)))]
