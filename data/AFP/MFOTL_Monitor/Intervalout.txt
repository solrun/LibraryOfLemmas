Loading theory "Draft.Interval" (required by "Draft.IntervalTemplates")
Loading theory "Draft.Templates" (required by "Draft.IntervalTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.073s elapsed time, 0.172s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.IntervalTemplates")
instantiation
  \<I> :: equal
  equal_\<I> == equal_class.equal :: \<I> => \<I> => bool
instantiation
  \<I> :: linorder
  less_eq_\<I> == less_eq :: \<I> => \<I> => bool
  less_\<I> == less :: \<I> => \<I> => bool
### theory "Draft.Interval"
### 0.385s elapsed time, 0.807s cpu time, 0.031s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.519s elapsed time, 0.840s cpu time, 0.031s GC time
Loading theory "Draft.IntervalTemplates"
val templateLemmas =
   [("Set_Interval.finite_atMost", "finite {..?k}",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Set_Interval.finite_lessThan", "finite {..<?k}",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Interval.finite_shifted", "finite (shifted ?I)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Set_Interval.finite_atLeastAtMost_int", "finite {?l..?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Set_Interval.finite_atLeastZeroLessThan_int", "finite {0..<?u}",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("Set_Interval.finite_atLeastLessThan_int", "finite {?l..<?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Set_Interval.finite_greaterThanAtMost_int", "finite {?l<..?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Set_Interval.finite_greaterThanLessThan_int", "finite {?l<..<?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Set_Interval.finite_atLeastAtMost", "finite {?l..?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Set_Interval.finite_atLeastLessThan", "finite {?l..<?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Set_Interval.finite_greaterThanAtMost", "finite {?l<..?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Set_Interval.finite_greaterThanLessThan", "finite {?l<..<?u}",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Set_Interval.infinite_Iic", "infinite {..?a}",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Set_Interval.infinite_Iio", "infinite {..<?a}",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Set_Interval.infinite_Ici", "infinite {?a..}",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Set_Interval.infinite_Ioi", "infinite {?a<..}",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("Set_Interval.Inf_greaterThan", "Inf {?x<..} = ?x",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Set_Interval.Sup_lessThan", "Sup {..<?y} = ?y",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Set_Interval.card_lessThan", "card {..<?u} = ?u",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Interval.init_simps", "Interval.left (init ?n) = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Interval.point_simps", "Interval.left (point ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Set_Interval.atLeastLessThan0", "{?m..<0} = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Interval.subtract_simps", "subtract 0 ?I = ?I",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Set_Interval.zero_notin_Suc_image", "0 ~: Suc ` ?A",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0))
             )
         )),
    ("Set_Interval.card_atMost", "card {..?u} = Suc ?u",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.Compl_atLeast", "- {?k..} = {..<?k}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.Compl_atMost", "- {..?k} = {?k<..}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.Compl_greaterThan", "- {?k<..} = {..?k}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.Compl_lessThan", "- {..<?k} = {?k..}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.atMost_atLeast0", "{..?n} = {0..?n}",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Set_Interval.lessThan_atLeast0", "{..<?n} = {0..<?n}",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Set_Interval.atLeast_Suc_greaterThan", "{Suc ?k..} = {?k<..}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.atLeast0AtMost", "{0..?n} = {..?n}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.atLeast0LessThan", "{0..<?n} = {..<?n}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.lessThan_Suc_atMost", "{..<Suc ?k} = {..?k}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Interval.init_simps", "Interval.right (init ?n) = enat ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Interval.point_simps", "Interval.right (point ?n) = enat ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Interval.left_right", "enat (Interval.left ?I) <= Interval.right ?I",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Interval.subtract_shifted", "subtract ?n ?I : shifted ?I",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Set_Interval.card_atLeastZeroLessThan_int", "card {0..<?u} = nat ?u",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.card_atLeastLessThan", "card {?l..<?u} = ?u - ?l",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Set_Interval.card_greaterThanAtMost", "card {?l<..?u} = ?u - ?l",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Set_Interval.ivl_disj_int", "{..?l} Int {?l<..?u} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_int", "{..?l} Int {?l<..<?u} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_int", "{..<?l} Int {?l..?u} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_int", "{..<?l} Int {?l..<?u} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_int", "{?l..?u} Int {?u<..} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_int", "{?l..<?u} Int {?u..} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_int", "{?l<..?u} Int {?u<..} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_int", "{?l<..<?u} Int {?u..} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Set_Interval.lessThan_Suc", "{..<Suc ?k} = insert ?k {..<?k}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app (template_hole 2, template_var 0)))),
    ("Set_Interval.image_Suc_lessThan", "Suc ` {..<?n} = {1..?n}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Set_Interval.atLeastSucAtMost_greaterThanAtMost",
     "{Suc ?l..?u} = {?l<..?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set_Interval.atLeastLessThanSuc_atLeastAtMost",
     "{?l..<Suc ?u} = {?l..?u}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set_Interval.atLeastLessThan_singleton", "{?m..<Suc ?m} = {?m}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Set_Interval.atLeastSucLessThan_greaterThanLessThan",
     "{Suc ?l..<?u} = {?l<..<?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set_Interval.Iio_eq_empty_iff", "({..<?n} = {}) = (?n = bot)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Set_Interval.lessThan_empty_iff", "({..<?n} = {}) = (?n = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Set_Interval.finite_M_bounded_by_nat", "finite {k. ?P k & k < ?i}",
     template_predicate
      (
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))
         )),
    ("Set_Interval.card_atLeastLessThan_int",
     "card {?l..<?u} = nat (?u - ?l)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Set_Interval.card_greaterThanAtMost_int",
     "card {?l<..?u} = nat (?u - ?l)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Set_Interval.card_atLeastAtMost", "card {?l..?u} = Suc ?u - ?l",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Set_Interval.card_greaterThanLessThan",
     "card {?l<..<?u} = ?u - Suc ?l",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Interval.subtract_simps",
     "Interval.left (subtract ?n ?I) = Interval.left ?I - ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_var 1))),
    ("Set_Interval.atMost_Int_atLeast", "{..?n} Int {?n..} = {?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Set_Interval.ivl_disj_int", "{?l..?m} Int {?m<..?u} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_int", "{?l..?m} Int {?m<..<?u} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_int", "{?l..<?m} Int {?m..?u} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_int", "{?l..<?m} Int {?m..<?u} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_int", "{?l<..?m} Int {?m<..?u} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_int", "{?l<..?m} Int {?m<..<?u} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_int", "{?l<..<?m} Int {?m..?u} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_int", "{?l<..<?m} Int {?m..<?u} = {}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Set_Interval.ivl_disj_un", "{..<?u} Un {?u} = {..?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.ivl_disj_un", "{?l} Un {?l<..} = {?l..}",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2)),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Set_Interval.atLeastPlusOneAtMost_greaterThanAtMost_int",
     "{?l + 1..?u} = {?l<..?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set_Interval.atLeastLessThanPlusOne_atLeastAtMost_int",
     "{?l..<?u + 1} = {?l..?u}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set_Interval.atLeastPlusOneLessThan_greaterThanLessThan_int",
     "{?l + 1..<?u} = {?l<..<?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set_Interval.atMost_Suc", "{..Suc ?k} = insert (Suc ?k) {..?k}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Set_Interval.image_Suc_atMost", "Suc ` {..?n} = {1..Suc ?n}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Set_Interval.atLeast_eq_iff", "({?x..} = {?y..}) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Set_Interval.atMost_eq_iff", "({..?x} = {..?y}) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Set_Interval.greaterThan_eq_iff", "({?x<..} = {?y<..}) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Set_Interval.lessThan_eq_iff", "({..<?x} = {..<?y}) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Set_Interval.lessThan_strict_subset_iff",
     "({..<?m} < {..<?n}) = (?m < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set_Interval.greaterThan_subset_iff",
     "({?x<..} <= {?y<..}) = (?y <= ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Set_Interval.lessThan_subset_iff",
     "({..<?x} <= {..<?y}) = (?x <= ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Set_Interval.atLeast_subset_iff", "({?x..} <= {?y..}) = (?y <= ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Set_Interval.atMost_subset_iff", "({..?x} <= {..?y}) = (?x <= ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Interval.subtract_simps", "subtract ?x (point ?y) = point (?y - ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Set_Interval.subset_eq_atLeast0_atMost_finite",
     "?N <= {0..?n} ==> finite ?N",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Set_Interval.subset_eq_atLeast0_lessThan_finite",
     "?N <= {0..<?n} ==> finite ?N",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 2, template_hole 1),
            template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Set_Interval.single_Diff_lessThan", "{?k} - {..<?k} = {?k}",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 0), template_hole 1))),
    ("Set_Interval.image_minus_const_atLeast",
     "(-) ?c ` {?a..} = {..?c - ?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Set_Interval.image_minus_const_AtMost",
     "(-) ?c ` {..?b} = {?c - ?b..}",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Set_Interval.atLeast_Suc", "{Suc ?k..} = {?k..} - {?k}",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Set_Interval.atMost_Suc_eq_insert_0",
     "{..Suc ?n} = insert 0 (Suc ` {..?n})",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_app (template_hole 4, template_var 0))))),
    ("Set_Interval.atMost_nat_numeral",
     "{..numeral ?k} = insert (numeral ?k) {..pred_numeral ?k}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_var 0))))),
    ("Set_Interval.lessThan_Suc_eq_insert_0",
     "{..<Suc ?n} = insert 0 (Suc ` {..<?n})",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_app (template_hole 4, template_var 0))))),
    ("Set_Interval.lessThan_nat_numeral",
     "{..<numeral ?k} = insert (pred_numeral ?k) {..<pred_numeral ?k}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_var 0))))),
    ("Set_Interval.atLeast0_lessThan_Suc",
     "{0..<Suc ?n} = insert ?n {0..<?n}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("Interval.subtract_simps",
     "Interval.right (subtract ?n ?I) = Interval.right ?I - enat ?n",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Set_Interval.card_le_Suc_Max",
     "finite ?S ==> card ?S <= Suc (Max ?S)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Set_Interval.bounded_nat_set_is_finite",
     "ALL i:?N. i < ?n ==> finite ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1), t_empty)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Set_Interval.card_atLeastAtMost_int",
     "card {?l..?u} = nat (?u - ?l + 1)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_hole 0)))),
    ("Set_Interval.card_greaterThanLessThan_int",
     "card {?l<..<?u} = nat (?u - (?l + 1))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("Set_Interval.image_int_atLeastAtMost",
     "int ` {?a..?b} = {int ?a..int ?b}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Set_Interval.image_int_atLeastLessThan",
     "int ` {?a..<?b} = {int ?a..<int ?b}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Set_Interval.greaterThan_Suc", "{Suc ?k<..} = {?k<..} - {Suc ?k}",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           template_hole 0)))),
    ("Set_Interval.atLeast0_atMost_Suc",
     "{0..Suc ?n} = insert (Suc ?n) {0..?n}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("Set_Interval.atLeast1_atMost_eq_remove0",
     "{Suc 0..?n} = {..?n} - {0}",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app (template_hole 5, template_hole 4)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 4),
           template_hole 0)))),
    ("Set_Interval.atLeast1_lessThan_eq_remove0",
     "{Suc 0..<?n} = {..<?n} - {0}",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app (template_hole 5, template_hole 4)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 4),
           template_hole 0)))),
    ("Set_Interval.image_Suc_atLeastAtMost",
     "Suc ` {?i..?j} = {Suc ?i..Suc ?j}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Set_Interval.image_Suc_atLeastLessThan",
     "Suc ` {?i..<?j} = {Suc ?i..<Suc ?j}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Set_Interval.finite_nat_set_iff_bounded",
     "finite ?N = (EX m. ALL n:?N. n < m)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Set_Interval.finite_nat_set_iff_bounded_le",
     "finite ?N = (EX m. ALL n:?N. n <= m)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Set_Interval.Inf_greaterThanAtMost", "?x < ?y ==> Inf {?x<..?y} = ?x",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Set_Interval.Inf_greaterThanLessThan",
     "?x < ?y ==> Inf {?x<..<?y} = ?x",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Set_Interval.Sup_atLeastLessThan", "?x < ?y ==> Sup {?x..<?y} = ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Set_Interval.Sup_greaterThanLessThan",
     "?x < ?y ==> Sup {?x<..<?y} = ?y",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Set_Interval.subset_eq_atLeast0_lessThan_card",
     "?N <= {0..<?n} ==> card ?N <= ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Set_Interval.atLeast0_atMost_Suc_eq_insert_0",
     "{0..Suc ?n} = insert 0 (Suc ` {0..?n})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 3),
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0))))),
    ("Set_Interval.atLeast0_lessThan_Suc_eq_insert_0",
     "{0..<Suc ?n} = insert 0 (Suc ` {0..<?n})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 3),
         template_app
          (template_app (template_hole 0, template_hole 2),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0))))),
    ("Set_Interval.card_sum_le_nat_sum",
     "\<Sum> {0..<card ?S} <= \<Sum> ?S",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 3, t_empty), template_var 0))),
    ("Set_Interval.ex_bij_betw_finite_nat",
     "finite ?M ==> EX h. bij_betw h ?M {0..<card ?M}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Set_Interval.ex_bij_betw_nat_finite_1",
     "finite ?M ==> EX h. bij_betw h {1..card ?M} ?M",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Set_Interval.ex_bij_betw_nat_finite",
     "finite ?M ==> EX h. bij_betw h {0..<card ?M} ?M",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Set_Interval.prod_int_eq",
     "prod int {?i..?j} = \<Prod>{int ?i..int ?j}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 3, template_var 0))))),
    ("Set_Interval.image_diff_atLeastLessThan",
     "(-) ?c ` {?a..<?b} = {?c - ?b<..?c - ?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 1)))),
    ("Set_Interval.image_minus_const_greaterThanAtMost",
     "(-) ?c ` {?a<..?b} = {?c - ?b..<?c - ?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 1)))),
    ("Set_Interval.image_diff_atLeastAtMost",
     "(-) ?d ` {?a..?b} = {?d - ?b..?d - ?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("Set_Interval.image_add_int_atLeastLessThan",
     "(%x. x + ?l) ` {0..<?u - ?l} = {?l..<?u}",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Set_Interval.ivl_disj_un",
     "?l < ?u ==> {..?l} Un {?l<..<?u} = {..<?u}",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "?l < ?u ==> {?l<..<?u} Un {?u..} = {?l<..}",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Set_Interval.ivl_disj_un",
     "?l <= ?u ==> {..?l} Un {?l<..?u} = {..?u}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "?l <= ?u ==> {..<?l} Un {?l..?u} = {..?u}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "?l <= ?u ==> {..<?l} Un {?l..<?u} = {..<?u}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "?l <= ?u ==> {?l..?u} Un {?u<..} = {?l..}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Set_Interval.ivl_disj_un",
     "?l <= ?u ==> {?l..<?u} Un {?u..} = {?l..}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Set_Interval.ivl_disj_un",
     "?l <= ?u ==> {?l<..?u} Un {?u<..} = {?l<..}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Set_Interval.image_atLeastZeroLessThan_int",
     "0 <= ?u ==> {0..<?u} = int ` {..<nat ?u}",
     template_implication
      ([template_inequation (less_equals, template_hole 6, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_hole 6), template_var 0),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))))),
    ("Set_Interval.gauss_sum_nat", "\<Sum> {0..?n} = ?n * Suc ?n div 2",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app (template_hole 3, template_var 0))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Set_Interval.atLeastLessThanSuc",
     "{?m..<Suc ?n} = (if ?m <= ?n then insert ?n {?m..<?n} else {})",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0))),
         template_hole 0))),
    ("Set_Interval.range_mod", "0 < ?n ==> range (%m. m mod ?n) = {0..<?n}",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty), template_hole 1),
         template_app
          (template_app (template_hole 0, template_hole 5),
           template_var 0)))),
    ("Set_Interval.Icc_eq_insert_lb_nat",
     "?m <= ?n ==> {?m..?n} = insert ?m {Suc ?m..?n}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_var 0))))),
    ("Set_Interval.atLeastAtMost_insertL",
     "?m <= ?n ==> insert ?m {Suc ?m..?n} = {?m..?n}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Set_Interval.finite_less_ub",
     "(!!n. n <= ?f n) ==> finite {n. ?f n <= ?u}",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1, template_app (template_hole 0, t_empty))
           ))),
    ("Set_Interval.sum_lessThan_telescope'",
     "(SUM n<?m. ?f n - ?f (Suc n)) = ?f 0 - ?f ?m",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_var 1, template_hole 0)),
         template_app (template_var 1, template_var 0)))),
    ("Set_Interval.sum_lessThan_telescope",
     "(SUM n<?m. ?f (Suc n) - ?f n) = ?f ?m - ?f 0",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_var 1, template_var 0)),
         template_app (template_var 1, template_hole 0)))),
    ("Set_Interval.sum_atLeastAtMost_code",
     "sum ?f {?a..?b} =
      fold_atLeastAtMost_nat (%a. (+) (?f a)) ?a ?b (0::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 1),
           template_var 0),
         template_hole 0))),
    ("Set_Interval.prod_atLeastAtMost_code",
     "prod ?f {?a..?b} =
      fold_atLeastAtMost_nat (%a. (*) (?f a)) ?a ?b (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 1),
           template_var 0),
         template_hole 0))),
    ("Set_Interval.image_minus_const_atLeastAtMost'",
     "(%t. t - ?d) ` {?a..?b} = {?a - ?d..?b - ?d}",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("Set_Interval.fold_atLeastAtMost_nat",
     "comp_fun_commute ?f ==>
      fold_atLeastAtMost_nat ?f ?a ?b ?acc =
      Finite_Set.fold ?f ?acc {?a..?b}",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Set_Interval.ivl_disj_un",
     "?l < ?u ==> {?l} Un {?l<..<?u} = {?l..<?u}",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "?l < ?u ==> {?l<..<?u} Un {?u} = {?l<..?u}",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Set_Interval.ivl_diff",
     "?i <= ?n ==> {?i..<?m} - {?i..<?n} = {?n..<?m}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "?l <= ?u ==> {?l} Un {?l<..?u} = {?l..?u}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "?l <= ?u ==> {?l..<?u} Un {?u} = {?l..?u}",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Set_Interval.one_diff_power_eq",
     "(1::?'a) - ?x ^ ?n = ((1::?'a) - ?x) * sum ((^) ?x) {..<?n}",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1)),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("Set_Interval.power_diff_1_eq",
     "?x ^ ?n - (1::?'a) = (?x - (1::?'a)) * sum ((^) ?x) {..<?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_hole 3)),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("Set_Interval.sum_telescope",
     "(SUM i<=?i. ?f i - ?f (Suc i)) = ?f 0 - ?f (Suc ?i)",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_var 1, template_hole 0)),
         template_app
          (template_var 1,
           template_app (template_hole 2, template_var 0))))),
    ("Set_Interval.atLeastAtMostSuc_conv",
     "?m <= Suc ?n ==> {?m..Suc ?n} = insert (Suc ?n) {?m..?n}",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Set_Interval.sum_gp_basic",
     "((1::?'a) - ?x) * sum ((^) ?x) {..?n} = (1::?'a) - ?x ^ Suc ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_var 1)),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Set_Interval.prod_int_plus_eq",
     "prod int {?i..?i + ?j} = \<Prod>{int ?i..int (?i + ?j)}",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)))))),
    ("Set_Interval.sum_power2", "sum ((^) 2) {0..<?k} = 2 ^ ?k - 1",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))),
             template_var 0)),
         template_hole 0))),
    ("Set_Interval.atLeastLessThan_nat_numeral",
     "{?m..<numeral ?k} =
      (if ?m <= pred_numeral ?k
       then insert (pred_numeral ?k) {?m..<pred_numeral ?k} else {})",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app (template_hole 2, template_var 0)))),
         template_hole 0))),
    ("Set_Interval.subset_card_intvl_is_intvl",
     "?A <= {?k..<?k + card ?A} ==> ?A = {?k..<?k + card ?A}",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 3, template_var 0),
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))))],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 1)))))),
    ("Set_Interval.sum_power_add",
     "(SUM i:?I. ?x ^ (?m + i)) = ?x ^ ?m * sum ((^) ?x) ?I",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty), template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)))),
    ("Set_Interval.UN_le_eq_Un0",
     "\<Union> (?M ` {..?n}) = \<Union> (?M ` {1..?n}) Un ?M 0",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, t_empty),
           template_app (template_hole 4, template_var 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0)))),
         template_app (template_var 1, template_hole 0)))),
    ("Set_Interval.UN_UN_finite_eq",
     "(UN n. \<Union> (?A ` {0..<n})) = \<Union> (range ?A)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_hole 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_hole 0)))),
    ("Set_Interval.ivl_subset",
     "({?i..<?j} <= {?m..<?n}) = (?j <= ?i | ?m <= ?i & ?j <= ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 3)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Set_Interval.card_less", "0 : ?M ==> card {k: ?M. k < Suc ?i} ~= 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 1)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_hole 7)
           ))),
    ("Set_Interval.one_diff_power_eq'",
     "(1::?'a) - ?x ^ ?n = ((1::?'a) - ?x) * (SUM i<?n. ?x ^ (?n - Suc i))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_var 1)),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("Set_Interval.UN_le_add_shift",
     "(UN i<=?n. ?M (i + ?k)) = \<Union> (?M ` {?k..?n + ?k})",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)))))),
    ("Set_Interval.UN_le_add_shift_strict",
     "(UN i<?n. ?M (i + ?k)) = \<Union> (?M ` {?k..<?n + ?k})",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)))))),
    ("Set_Interval.atLeastLessThan_add_Un",
     "?i <= ?j ==> {?i..<?j + ?k} = {?i..<?j} Un {?j..<?j + ?k}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)))))),
    ("Set_Interval.atLeastAtMostPlus1_int_conv",
     "?m <= 1 + ?n ==> {?m..1 + ?n} = insert (1 + ?n) {?m..?n}",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Set_Interval.bij_betw_iff_card",
     "[| finite ?A; finite ?B |]
      ==> (EX f. bij_betw f ?A ?B) = (card ?A = card ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_implication
        ([template_predicate (template_app (template_hole 4, t_empty))],
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Set_Interval.ivl_disj_un",
     "[| ?l < ?m; ?m < ?u |] ==> {?l<..?m} Un {?m..<?u} = {?l<..<?u}",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "[| ?l < ?m; ?m <= ?u |] ==> {?l<..?m} Un {?m..?u} = {?l<..?u}",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "[| ?l < ?m; ?m <= ?u |] ==> {?l<..<?m} Un {?m..?u} = {?l<..?u}",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "[| ?l < ?m; ?m <= ?u |] ==> {?l<..<?m} Un {?m..<?u} = {?l<..<?u}",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "[| ?l <= ?m; ?m < ?u |] ==> {?l..?m} Un {?m..<?u} = {?l..<?u}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "[| ?l <= ?m; ?m < ?u |] ==> {?l..?m} Un {?m<..<?u} = {?l..<?u}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "[| ?l <= ?m; ?m < ?u |] ==> {?l<..?m} Un {?m<..<?u} = {?l<..<?u}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "[| ?l <= ?m; ?m <= ?u |] ==> {?l..?m} Un {?m..?u} = {?l..?u}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "[| ?l <= ?m; ?m <= ?u |] ==> {?l..?m} Un {?m<..?u} = {?l..?u}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "[| ?l <= ?m; ?m <= ?u |] ==> {?l..<?m} Un {?m..?u} = {?l..?u}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "[| ?l <= ?m; ?m <= ?u |] ==> {?l..<?m} Un {?m..<?u} = {?l..<?u}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Set_Interval.ivl_disj_un",
     "[| ?l <= ?m; ?m <= ?u |] ==> {?l<..?m} Un {?m<..?u} = {?l<..?u}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Set_Interval.finite_same_card_bij",
     "[| finite ?A; finite ?B; card ?A = card ?B |]
      ==> EX h. bij_betw h ?A ?B",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Set_Interval.Sum_Icc_nat",
     "\<Sum> {?m..?n} = (?n * (?n + 1) - ?m * (?m - 1)) div 2",
     template_equation
      (template_app
        (template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 8, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3))),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 3)))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Set_Interval.Sum_Ico_nat",
     "\<Sum> {?m..<?n} = (?n * (?n - 1) - ?m * (?m - 1)) div 2",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 3))),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 3)))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Set_Interval.sum_Suc_diff'",
     "?m <= ?n ==> (SUM i = ?m..<?n. ?f (Suc i) - ?f i) = ?f ?n - ?f ?m",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_var 0, template_var 1)),
           template_app (template_var 0, template_var 2))))),
    ("Set_Interval.UN_finite_subset",
     "(!!n. \<Union> (?A ` {0..<n}) <= ?C) ==> \<Union> (range ?A) <= ?C",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, t_empty), template_hole 0)),
         template_var 0))),
    ("Set_Interval.atLeastLessThan_inj",
     "[| {?a..<?b} = {?c..<?d}; ?a < ?b; ?c < ?d |] ==> ?a = ?c",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_inequation (less_than, template_var 3, template_var 2),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation (template_var 3, template_var 1))),
    ("Set_Interval.atLeastLessThan_inj",
     "[| {?a..<?b} = {?c..<?d}; ?a < ?b; ?c < ?d |] ==> ?b = ?d",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_inequation (less_than, template_var 3, template_var 2),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation (template_var 2, template_var 0))),
    ("Set_Interval.sum_gp_strict",
     "sum ((^) ?x) {..<?n} =
      (if ?x = (1::?'a) then of_nat ?n
       else ((1::?'a) - ?x ^ ?n) / ((1::?'a) - ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty),
              template_app (template_hole 5, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_hole 3)),
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_hole 3),
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_var 0))),
               template_app
                (template_app (template_hole 0, template_hole 3),
                 template_var 1)))
           ))),
    ("Set_Interval.card_2_iff",
     "(card ?S = 2) = (EX x y. ?S = {x, y} & x ~= y)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 0)),
         template_app
          (template_hole 9,
           template_app (template_hole 8, template_hole 7))),
       template_app (template_hole 6, t_empty))),
    ("Set_Interval.geometric_sum",
     "?x ~= (1::?'a) ==>
      sum ((^) ?x) {..<?n} = (?x ^ ?n - (1::?'a)) / (?x - (1::?'a))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_hole 5)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_hole 5))))),
    ("Set_Interval.sum_telescope''",
     "?m <= ?n ==> (SUM k = Suc ?m..?n. ?f k - ?f (k - 1)) = ?f ?n - ?f ?m",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_var 0, template_var 1)),
           template_app (template_var 0, template_var 2))))),
    ("Set_Interval.sum_Suc_diff",
     "?m <= Suc ?n ==>
      (SUM i = ?m..?n. ?f (Suc i) - ?f i) = ?f (Suc ?n) - ?f ?m",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_var 0,
               template_app (template_hole 4, template_var 1))),
           template_app (template_var 0, template_var 2))))),
    ("Interval.subtract_too_much",
     "(case Interval.right ?I of enat n => n
       | \<infinity> => Interval.left ?I)
      < ?i ==>
      subtract ?i ?I =
      subtract
       (case Interval.right ?I of enat n => n
        | \<infinity> => Interval.left ?I)
       ?I",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app
             (template_app (template_hole 4, t_empty),
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 2, template_var 1)),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 4, t_empty),
                 template_app (template_hole 3, template_var 1)),
               template_app (template_hole 2, template_var 1))),
           template_var 1)))),
    ("Set_Interval.mono_image_least",
     "[| mono ?f; ?f ` {?m..<?n} = {?m'..<?n'}; ?m < ?n |] ==> ?f ?m = ?m'",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app (template_var 4, template_var 3), template_var 1))),
    ("Set_Interval.sum_natinterval_diff",
     "(SUM k = ?m..?n. ?f k - ?f (k + 1)) =
      (if ?m <= ?n then ?f ?m - ?f (?n + 1) else (0::?'a))",
     template_equation
      (template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 6,
               template_app (template_var 2, template_var 1)),
             template_app
              (template_var 2,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4)))),
         template_hole 0))),
    ("Set_Interval.atLeastLessThan_eq_iff",
     "[| ?a < ?b; ?c < ?d |]
      ==> ({?a..<?b} = {?c..<?d}) = (?a = ?c & ?b = ?d)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))
             )))),
    ("Set_Interval.power_diff_sumr2",
     "?x ^ ?n - ?y ^ ?n =
      (?x - ?y) * (SUM i<?n. ?y ^ (?n - Suc i) * ?x ^ i)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 0, template_var 1))))),
    ("Set_Interval.sum_gp0",
     "sum ((^) ?x) {..?n} =
      (if ?x = (1::?'a) then of_nat (?n + 1)
       else ((1::?'a) - ?x ^ Suc ?n) / ((1::?'a) - ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, t_empty),
              template_app (template_hole 8, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 11, template_var 1),
                   template_hole 6)),
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 6),
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_app (template_hole 0, template_var 0)))),
               template_app
                (template_app (template_hole 1, template_hole 6),
                 template_var 1)))
           ))),
    ("Set_Interval.sum_gp_multiplied",
     "?m <= ?n ==>
      ((1::?'a) - ?x) * sum ((^) ?x) {?m..?n} = ?x ^ ?m - ?x ^ Suc ?n",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_var 0)),
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 0, template_var 1)))))),
    ("Set_Interval.arith_series_nat",
     "(SUM i = 0..?n. ?a + i * ?d) = Suc ?n * (2 * ?a + ?n * ?d) div 2",
     template_equation
      (template_app
        (template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_hole 0))),
                   template_var 2)),
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_var 1)))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Set_Interval.Sum_Icc_int",
     "?m <= ?n ==> \<Sum> {?m..?n} = (?n * (?n + 1) - ?m * (?m - 1)) div 2",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 9, t_empty),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 3))),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_hole 3)))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Set_Interval.sum_power_shift",
     "?m <= ?n ==>
      sum ((^) ?x) {?m..?n} = ?x ^ ?m * sum ((^) ?x) {..?n - ?m}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2))))))),
    ("Set_Interval.sum_diff_nat_ivl",
     "[| ?m <= ?n; ?n <= ?p |]
      ==> sum ?f {?m..<?p} - sum ?f {?m..<?n} = sum ?f {?n..<?p}",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Set_Interval.obtain_subset_with_card_n",
     "[| ?n <= card ?S;
         !!T. [| T <= ?S; card T = ?n; finite T |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Set_Interval.diff_power_eq_sum",
     "?x ^ Suc ?n - ?y ^ Suc ?n =
      (?x - ?y) * (SUM p<Suc ?n. ?x ^ p * ?y ^ (?n - p))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app (template_hole 4, template_var 1))),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app (template_hole 4, template_var 1))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 1)))))),
    ("Set_Interval.image_minus_const_atLeastLessThan_nat",
     "(%i. i - ?c) ` {?x..<?y} =
      (if ?c < ?y then {?x - ?c..<?y - ?c}
       else if ?x < ?y then {0} else {})",
     template_equation
      (template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_var 2))),
         template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 0)),
           template_hole 0)))),
    ("Set_Interval.card_2_iff'",
     "(card ?S = 2) =
      (EX x:?S. EX y:?S. x ~= y & (ALL z:?S. z = x | z = y))",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 0)),
         template_app
          (template_hole 8,
           template_app (template_hole 7, template_hole 6))),
       template_app
        (template_app (template_hole 5, template_var 0), t_empty))),
    ("Set_Interval.card_less_Suc",
     "0 : ?M ==>
      Suc (card {k. Suc k : ?M & k < ?i}) = card {k: ?M. k < Suc ?i}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty))),
         template_app
          (template_hole 3, template_app (template_hole 2, t_empty))))),
    ("Set_Interval.card_less_Suc2",
     "0 ~: ?M ==> card {k. Suc k : ?M & k < ?i} = card {k: ?M. k < Suc ?i}",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_var 1)
                )
            )],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("Set_Interval.sum_diff_distrib",
     "ALL x. ?Q x <= ?P x ==>
      sum ?P {..<?n} - sum ?Q {..<?n} = (SUM x<?n. ?P x - ?Q x)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty),
               template_app (template_hole 0, template_var 0))),
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("Set_Interval.sum_gp_offset",
     "sum ((^) ?x) {?m..?m + ?n} =
      (if ?x = (1::?'a) then of_nat ?n + (1::?'a)
       else ?x ^ ?m * ((1::?'a) - ?x ^ Suc ?n) / ((1::?'a) - ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, t_empty),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 12, template_var 2),
                   template_hole 6)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_hole 6)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 10, template_var 2),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 1, template_hole 6),
                     template_app
                      (template_app (template_hole 10, template_var 2),
                       template_app (template_hole 0, template_var 0))))),
               template_app
                (template_app (template_hole 1, template_hole 6),
                 template_var 2)))
           ))),
    ("Set_Interval.sum_gp",
     "sum ((^) ?x) {?m..?n} =
      (if ?n < ?m then 0::?'a
       else if ?x = (1::?'a) then of_nat (?n + 1 - ?m)
            else (?x ^ ?m - ?x ^ Suc ?n) / ((1::?'a) - ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, t_empty),
              template_app
               (template_app (template_hole 11, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_var 1)),
               template_hole 8),
             template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 14, template_var 2),
                     template_hole 7)),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 0),
                         template_hole 3)),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 12, template_var 2),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 12, template_var 2),
                       template_app (template_hole 0, template_var 0)))),
                 template_app
                  (template_app (template_hole 1, template_hole 7),
                   template_var 2))))
           ))),
    ("Set_Interval.UN_finite2_eq",
     "(!!n. \<Union> (?A ` {0..<n}) = \<Union> (?B ` {0..<n + ?k})) ==>
      \<Union> (range ?A) = \<Union> (range ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_hole 0)),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_hole 0))))),
    ("Set_Interval.UN_finite2_subset",
     "(!!n. \<Union> (?A ` {0..<n}) <= \<Union> (?B ` {0..<n + ?k})) ==>
      \<Union> (range ?A) <= \<Union> (range ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_hole 0)),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_hole 0))))),
    ("Set_Interval.bounded_Max_nat",
     "[| ?P ?x; !!x. ?P x ==> x <= ?M;
         !!m. [| ?P m; !!x. ?P x ==> x <= m |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_var 3, template_var 2)),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Set_Interval.inj_on_funpow_least",
     "[| (?f ^^ ?n) ?s = ?s;
         !!m. [| 0 < m; m < ?n |] ==> (?f ^^ m) ?s ~= ?s |]
      ==> inj_on (%k. (?f ^^ k) ?s) {0..<?n}",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_var 0),
          template_var 0),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty),
             template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 2))
           ))),
    ("Set_Interval.card_le_if_inj_on_rel",
     "[| finite ?B; !!a. a : ?A ==> EX b. b : ?B & ?r a b;
         !!a1 a2 b.
            [| a1 : ?A; a2 : ?A; b : ?B; ?r a1 b; ?r a2 b |] ==> a1 = a2 |]
      ==> card ?A <= card ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 2))))]:
   (string * thm * template) list
### theory "Draft.IntervalTemplates"
### 0.442s elapsed time, 0.585s cpu time, 0.069s GC time
val it = (): unit
