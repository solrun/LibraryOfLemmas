   [("Table.restrict_Nil", "restrict ?A [] = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Table.length_restrict", "length (restrict ?A ?v) = length ?v",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Table.length_tabulate", "length (tabulate ?f ?x ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 0)),
    ("Table.wf_tuple_Nil", "wf_tuple ?n ?A [] = (?n = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation (template_var 1, template_hole 0))),
    ("Table.in_unit_table", "(?v : unit_table ?n) = wf_tuple ?n {} ?v",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 0), template_hole 0),
         template_var 1))),
    ("Table.restrict_eq_Nil", "(restrict ?A ?v = []) = (?v = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("Table.join_False_alt", "join ?X False ?Y = ?X - join ?X True ?Y",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_hole 2),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 0),
           template_var 0)))),
    ("Table.Suc_pred'",
     "Suc (?x - Suc 0) = (case ?x of 0 => Suc 0 | Suc nat => ?x)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 3, template_hole 1))),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_hole 1)),
           t_empty),
         template_var 0))),
    ("Table.tabulate_alt", "tabulate ?f ?x ?n = map ?f [?x..<?x + ?n]",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Table.mem_restr_Un_iff",
     "mem_restr (?A Un ?B) ?x = (mem_restr ?A ?x | mem_restr ?B ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Table.map_tabulate",
     "map ?f (tabulate ?g ?x ?n) = tabulate (%x. ?f (?g x)) ?x ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, t_empty), template_var 1),
         template_var 0))),
    ("Table.table_wf_table",
     "table ?n ?A ?X = wf_table ?n ?A (%v. v : ?X) ?X",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             t_empty),
           t_empty),
         template_var 0))),
    ("Table.join_True_code",
     "join ?A True ?B = (UN a:?A. UN b:?B. set_option (join1 (a, b)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 1), template_hole 5),
         template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 1)))),
    ("Table.qtable_empty_iff",
     "qtable ?n ?A ?P ?Q empty_table =
      (ALL x. wf_tuple ?n ?A x --> ?P x --> ?Q x --> False)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0),
         template_hole 4),
       template_app (template_hole 3, t_empty))),
    ("Table.wf_table_iff",
     "wf_table ?n ?A ?Q ?X = (ALL x. (x : ?X) = (?Q x & wf_tuple ?n ?A x))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             t_empty),
           template_var 1),
         template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Table.join_False_code",
     "join ?A False ?B = {a: ?A. ALL b:?B. join1 (a, b) ~= Some a}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 10, template_var 1),
           template_hole 9),
         template_var 0),
       template_app (template_hole 8, t_empty))),
    ("Table.restrict_Cons",
     "restrict ?A (?x # ?xs) =
      (if 0 : ?A then ?x # restrict ((%x. x - 1) ` (?A - {0})) ?xs
       else None # restrict ((%x. x - 1) ` ?A) ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 2),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_var 2)),
           template_app
            (template_app (template_hole 10, template_var 1),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 6, t_empty),
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app
                      (template_app (template_hole 2, template_hole 7),
                       template_hole 1)))),
               template_var 0))),
         template_app
          (template_app (template_hole 10, template_hole 0),
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app (template_hole 6, t_empty), template_var 2)),
             template_var 0))))),
    ("Table.wf_tuple_Suc",
     "wf_tuple (Suc ?m) ?A ?a =
      (?a ~= [] &
       wf_tuple ?m ((%x. x - 1) ` (?A - {0})) (tl ?a) &
       (0 : ?A) = (hd ?a ~= None))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Table.wf_tuple_Cons",
     "wf_tuple ?n ?A (?x # ?xs) =
      ((if ?x = None then 0 ~: ?A else 0 : ?A) &
       (EX m. ?n = Suc m & wf_tuple m ((%x. x - 1) ` (?A - {0})) ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 17, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 16, template_var 1),
                template_var 0))
            )],
       template_dunno))]
