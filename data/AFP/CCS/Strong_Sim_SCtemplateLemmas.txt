   [("Strong_Sim_SC.test", "?x \<sharp> [?x].?P",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Strong_Sim_SC.resNilRight",
     "\<zero> \<leadsto>[?Rel] \<lparr>\<nu>?x\<rparr>\<zero>",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_hole 1))
         )),
    ("Strong_Sim_SC.resNilLeft",
     "\<lparr>\<nu>?x\<rparr>\<zero> \<leadsto>[?Rel] \<zero>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_var 0),
           template_hole 0)
         )),
    ("Strong_Sim_SC.sumIdRight",
     "Id <= ?Rel ==> ?P \<leadsto>[?Rel] ?P \<oplus> \<zero>",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Strong_Sim_SC.sumIdLeft",
     "Id <= ?Rel ==> ?P \<oplus> \<zero> \<leadsto>[?Rel] ?P",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)),
               template_var 1),
             template_var 0)
           ))),
    ("Strong_Sim_SC.bangUnfoldRight",
     "Id <= ?Rel ==> !?P \<leadsto>[?Rel] ?P \<parallel> !?P",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 1, template_var 0)))
           ))),
    ("Strong_Sim_SC.sumComm",
     "Id <= ?Rel ==> ?P \<oplus> ?Q \<leadsto>[?Rel] ?Q \<oplus> ?P",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Strong_Sim_SC.bangUnfoldLeft",
     "Id <= ?Rel ==> ?P \<parallel> !?P \<leadsto>[?Rel] !?P",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app (template_hole 0, template_var 0))),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Strong_Sim_SC.sumAssocRight",
     "Id <= ?Rel ==>
      ?P \<oplus>
      (?Q \<oplus> ?R) \<leadsto>[?Rel] ?P \<oplus> ?Q \<oplus> ?R",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0))),
               template_var 3),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0))
           ))),
    ("Strong_Sim_SC.sumAssocLeft",
     "Id <= ?Rel ==>
      ?P \<oplus> ?Q \<oplus>
      ?R \<leadsto>[?Rel] ?P \<oplus> (?Q \<oplus> ?R)",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1)),
                   template_var 0)),
               template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Strong_Sim_SC.parIdRight",
     "(!!Q. (Q, Q \<parallel> \<zero>) : ?Rel) ==>
      ?P \<leadsto>[?Rel] ?P \<parallel> \<zero>",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1))
           ))),
    ("Strong_Sim_SC.parIdLeft",
     "(!!Q. (Q \<parallel> \<zero>, Q) : ?Rel) ==>
      ?P \<parallel> \<zero> \<leadsto>[?Rel] ?P",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)),
               template_var 1),
             template_var 0)
           ))),
    ("Strong_Sim_SC.resActRight",
     "[| ?x \<sharp> ?\<alpha>; Id <= ?Rel |]
      ==> ?\<alpha>.(\<lparr>\<nu>?x\<rparr>?P) \<leadsto>[?Rel] \<lparr>\<nu>?x\<rparr>?\<alpha>.?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_hole 3, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0))),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)))
           ))),
    ("Strong_Sim_SC.resActLeft",
     "[| ?x \<sharp> ?\<alpha>; Id <= ?Rel |]
      ==> \<lparr>\<nu>?x\<rparr>?\<alpha>.?P \<leadsto>[?Rel] ?\<alpha>.(\<lparr>\<nu>?x\<rparr>?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_hole 3, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0))),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0)))
           ))),
    ("Strong_Sim_SC.parComm",
     "(!!R T. (R \<parallel> T, T \<parallel> R) : ?Rel) ==>
      ?P \<parallel> ?Q \<leadsto>[?Rel] ?Q \<parallel> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))
           ))),
    ("Strong_Sim_SC.resComm",
     "(!!Q. (\<lparr>\<nu>?x\<rparr>\<lparr>\<nu>?y\<rparr>Q,
             \<lparr>\<nu>?y\<rparr>\<lparr>\<nu>?x\<rparr>Q)
            : ?Rel) ==>
      \<lparr>\<nu>?x\<rparr>\<lparr>\<nu>?y\<rparr>?P \<leadsto>[?Rel] \<lparr>\<nu>?y\<rparr>\<lparr>\<nu>?x\<rparr>?P",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0))),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0)))
           ))),
    ("Strong_Sim_SC.bangCases",
     "[| !?P \<longmapsto>?\<alpha> \<prec> ?P';
         !!P. [| !?P = !P;
                 P \<parallel> !P \<longmapsto>?\<alpha> \<prec> ?P' |]
              ==> ?Pa |]
      ==> ?Pa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Strong_Sim_SC.parAssocRight",
     "(!!S T U.
          (S \<parallel> (T \<parallel> U), S \<parallel> T \<parallel> U)
          : ?Rel) ==>
      ?P \<parallel>
      (?Q \<parallel>
       ?R) \<leadsto>[?Rel] ?P \<parallel> ?Q \<parallel> ?R",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0))),
               template_var 3),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_var 0))
           ))),
    ("Strong_Sim_SC.parAssocLeft",
     "(!!S T U.
          (S \<parallel> T \<parallel> U, S \<parallel> (T \<parallel> U))
          : ?Rel) ==>
      ?P \<parallel> ?Q \<parallel>
      ?R \<leadsto>[?Rel] ?P \<parallel> (?Q \<parallel> ?R)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1)),
                   template_var 0)),
               template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))
           ))),
    ("Strong_Sim_SC.scopeExtSumRight",
     "[| ?x \<sharp> ?P;
         !!y R. y \<sharp> R ==> (R, \<lparr>\<nu>y\<rparr>R) : ?Rel;
         Id <= ?Rel |]
      ==> ?P \<oplus>
          \<lparr>\<nu>?x\<rparr>?Q \<leadsto>[?Rel] \<lparr>\<nu>?x\<rparr>(?P \<oplus>
 ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_inequation (less_equals, template_hole 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_var 0))),
               template_var 1),
             template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Strong_Sim_SC.scopeExtSumLeft",
     "[| ?x \<sharp> ?P;
         !!y R. y \<sharp> R ==> (\<lparr>\<nu>y\<rparr>R, R) : ?Rel;
         Id <= ?Rel |]
      ==> \<lparr>\<nu>?x\<rparr>(?P \<oplus>
                                  ?Q) \<leadsto>[?Rel] ?P \<oplus>
                 \<lparr>\<nu>?x\<rparr>?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_inequation (less_equals, template_hole 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0))),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 0)))
           ))),
    ("Strong_Sim_SC.scopeExtRight",
     "[| ?x \<sharp> ?P;
         !!y R T.
            y \<sharp> R ==>
            (R \<parallel> \<lparr>\<nu>y\<rparr>T,
             \<lparr>\<nu>y\<rparr>(R \<parallel> T))
            : ?Rel |]
      ==> ?P \<parallel>
          \<lparr>\<nu>?x\<rparr>?Q \<leadsto>[?Rel] \<lparr>\<nu>?x\<rparr>(?P \<parallel>
 ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 0))),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0)))
           ))),
    ("Strong_Sim_SC.scopeExtLeft",
     "[| ?x \<sharp> ?P;
         !!y R T.
            y \<sharp> R ==>
            (\<lparr>\<nu>y\<rparr>(R \<parallel> T),
             R \<parallel> \<lparr>\<nu>y\<rparr>T)
            : ?Rel |]
      ==> \<lparr>\<nu>?x\<rparr>(?P \<parallel>
                                  ?Q) \<leadsto>[?Rel] ?P \<parallel>
                 \<lparr>\<nu>?x\<rparr>?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0))),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 0)))
           )))]
