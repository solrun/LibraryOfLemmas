   [("TypingL.wf_replace_true",
     "   \<turnstile>\<^sub>w\<^sub>f ?P  ==> True",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_hole 0))),
    ("TypingL.wf_replace_true",
     " ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi>  ==> True",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("TypingL.wf_replace_true",
     " ?\<Theta> \<turnstile>\<^sub>w\<^sub>f ?td  ==> True",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("TypingL.wf_replace_true",
     " ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?b  ==> True",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("TypingL.wf_replace_true",
     " ?\<Theta>  ; ?\<Phi> \<turnstile>\<^sub>w\<^sub>f ?ftq  ==> True",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("TypingL.if_simp", "(if ?x = ?x then ?e1.0 else ?e2.0) = ?e1.0",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_var 1)),
    ("TypingL.wf_replace_true",
     " ?\<Theta> ; ?\<Phi> ; ?\<B> \<turnstile>\<^sub>w\<^sub>f ?ft  ==>
      True",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("TypingL.wf_replace_true",
     " ?\<Theta> ; ?\<B>  ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?ts  ==>
      True",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("TypingL.base_for_lit_wf",
     "   \<turnstile>\<^sub>w\<^sub>f ?\<Theta>  ==>
       ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f base_for_lit ?l ",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("TypingL.infer_v_wf",
     " ?\<Theta> ; ?\<B> ; ?G \<turnstile> ?v \<Rightarrow> ?\<tau> ==>
         \<turnstile>\<^sub>w\<^sub>f ?\<Theta> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 4)))),
    ("TypingL.check_v_wf",
     "?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("TypingL.infer_v_wf",
     " ?\<Theta> ; ?\<B> ; ?G \<turnstile> ?v \<Rightarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?G ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("TypingL.subtype_g_wf",
     "?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?\<tau>1.0 \<lesssim> ?\<tau>2.0 ==>
       ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("TypingL.subtype_reflI2",
     " ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?\<tau>  ==>
      ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?\<tau> \<lesssim> ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0),
             template_var 0)
           ))),
    ("TypingL.check_v_wf",
     "?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?\<tau> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("TypingL.infer_v_wf",
     " ?\<Theta> ; ?\<B> ; ?G \<turnstile> ?v \<Rightarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<B> ; ?G   \<turnstile>\<^sub>w\<^sub>f ?\<tau> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("TypingL.subtype_eq_base2",
     "?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?t1.0 \<lesssim> ?t2.0 ==>
      b_of ?t1.0 = b_of ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("TypingL.infer_e_wf",
     "?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?e \<Rightarrow> ?\<tau> ==>
       ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 6), template_var 5)
           ))),
    ("TypingL.infer_l_uniqueness",
     "[|  \<turnstile> ?l \<Rightarrow> ?\<tau>;
          \<turnstile> ?l \<Rightarrow> ?\<tau>' |]
      ==> ?\<tau> = ?\<tau>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("TypingL.infer_l_wf",
     "[|  \<turnstile> ?l \<Rightarrow> ?\<tau>;
          ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>  |]
      ==>    \<turnstile>\<^sub>w\<^sub>f ?\<Theta> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("TypingL.infer_e_wf",
     "?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?e \<Rightarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 6),
               template_var 4),
             template_var 3)
           ))),
    ("TypingL.check_v_wf",
     "?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?v : b_of
                                  ?\<tau> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("TypingL.infer_v_v_wf",
     " ?\<Theta> ; ?\<B> ; ?G \<turnstile> ?v \<Rightarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<B> ; ?G \<turnstile>\<^sub>w\<^sub>f ?v : b_of
                           ?\<tau> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("TypingL.infer_e_wf",
     "?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?e \<Rightarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 4),
               template_var 3),
             template_var 2)
           ))),
    ("TypingL.infer_e_wf",
     "?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?e \<Rightarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?\<tau> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 4),
               template_var 3),
             template_var 0)
           ))),
    ("TypingL.infer_l_wf",
     "[|  \<turnstile> ?l \<Rightarrow> ?\<tau>;
          ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>  |]
      ==>  ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("TypingL.obtain_for_t_with_fresh",
     "atom ?x \<sharp> ?t ==> EX b c. ?t = \<lbrace> ?x : b  | c \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("TypingL.infer_l_wf",
     "[|  \<turnstile> ?l \<Rightarrow> ?\<tau>;
          ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>  |]
      ==>  ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?\<tau> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("TypingL.valid_wf_all",
     "?\<Theta> ; ?\<B> ; (?z0.0, ?b, ?c0.0) #\<^sub>\<Gamma>
                          ?G  \<Turnstile> ?c  ==>
      atom ?z0.0 \<sharp> ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 4),
                      template_app
                       (template_app (template_hole 2, template_var 3),
                        template_var 2))),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 4)),
             template_var 1)
           ))),
    ("TypingL.valid_wf_all",
     "?\<Theta> ; ?\<B> ; (?z0.0, ?b, ?c0.0) #\<^sub>\<Gamma>
                          ?G  \<Turnstile> ?c  ==>
       ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?G ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_var 2))),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 6),
               template_var 5),
             template_var 1)
           ))),
    ("TypingL.subtype_eq_base",
     "?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> \<lbrace> ?z1.0 : ?b1.0  | ?c1.0 \<rbrace> \<lesssim> \<lbrace> ?z2.0 : ?b2.0  | ?c2.0 \<rbrace> ==>
      ?b1.0 = ?b2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_equation (template_var 4, template_var 1))),
    ("TypingL.infer_v_form_consp",
     " ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> V_consp ?s ?dc ?b
             ?v \<Rightarrow> ?\<tau> ==>
      b_of ?\<tau> = B_app ?s ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 4),
           template_var 2)))),
    ("TypingL.wfG_x_fresh_in_v_simple",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> ?\<tau>;
         atom ?x \<sharp> ?\<Gamma> |]
      ==> atom ?x \<sharp> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 0)),
             template_var 2)
           ))),
    ("TypingL.infer_v_t_wf",
     " ?\<Theta> ; ?\<B> ; ?G \<turnstile> ?v \<Rightarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<B> ; ?G   \<turnstile>\<^sub>w\<^sub>f ?\<tau>  &
       ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f b_of ?\<tau> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3),
               template_app (template_hole 0, template_var 0)))
           ))),
    ("TypingL.subtype_wf",
     "?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?\<tau>1.0 \<lesssim> ?\<tau>2.0 ==>
       ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?\<tau>1.0  &
       ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?\<tau>2.0 ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("TypingL.subtype_wfT",
     "?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?t1.0 \<lesssim> ?t2.0 ==>
       ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?t1.0  &
       ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?t2.0 ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("TypingL.check_s_check_branch_s_wfS",
     " ?\<Theta> ; ?\<Phi> ; ?B ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s \<Leftarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<Phi> ; ?B ; ?\<Gamma> ; ?\<Delta> \<turnstile>\<^sub>w\<^sub>f ?s : b_of
               ?\<tau> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("TypingL.infer_e_t_wf",
     "?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?e \<Rightarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?\<tau>  &
       ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 6),
                     template_var 4),
                   template_var 3),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 6),
               template_var 5))
           ))),
    ("TypingL.infer_e_e_wf",
     "?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?e \<Rightarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta> \<turnstile>\<^sub>w\<^sub>f ?e : b_of
                  ?\<tau> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("TypingL.infer_v_uniqueness",
     "[|  ?P ; ?B ; ?G \<turnstile> ?v \<Rightarrow> ?\<tau>;
          ?P ; ?B ; ?G \<turnstile> ?v \<Rightarrow> ?\<tau>' |]
      ==> ?\<tau> = ?\<tau>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("TypingL.\<tau>_fresh_c",
     "[| atom ?x \<sharp> \<lbrace> ?z : ?b  | ?c \<rbrace>;
         atom ?z \<sharp> ?x |]
      ==> atom ?x \<sharp> ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 3)),
             template_var 0)
           ))),
    ("TypingL.infer_l_form3",
     " \<turnstile> ?l \<Rightarrow> ?\<tau> ==>
      EX z. ?\<tau> =
            \<lbrace> z : base_for_lit
                           ?l  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?l ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("TypingL.infer_l_form4",
     " ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>  ==>
      EX z.  \<turnstile> ?l \<Rightarrow> \<lbrace> z : base_for_lit
                    ?l  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?l ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("TypingL.infer_var2",
     " ?P ; ?\<B> ; ?G \<turnstile> [ ?x ]\<^sup>v \<Rightarrow> ?\<tau> ==>
      EX b c. Some (b, c) = lookup ?G ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3),
                  template_var 2),
                template_app (template_hole 6, template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("TypingL.fresh_z_subst_g",
     "[| atom ?z' \<sharp> (?x, ?v); atom ?z' \<sharp> ?G |]
      ==> atom ?z' \<sharp> ?G[?x::=?v]\<^sub>\<Gamma>\<^sub>v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 3, template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 3, template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("TypingL.infer_v_unit_form",
     "[|  ?P ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> ?z1.0 : B_unit  | ?c1.0 \<rbrace>;
         supp ?v = {} |]
      ==> ?v = [ L_unit ]\<^sup>v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 1),
                  template_hole 6),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 4, template_var 2), template_hole 3)],
       template_equation
        (template_var 2, template_app (template_hole 1, template_hole 0)))),
    ("TypingL.subtype_top",
     " ?\<Theta> ; ?\<B> ; ?G   \<turnstile>\<^sub>w\<^sub>f \<lbrace> ?z : ?b  | ?c \<rbrace>  ==>
      ?\<Theta> ; ?\<B> ; ?G  \<turnstile> \<lbrace> ?z : ?b  | ?c \<rbrace> \<lesssim> \<lbrace> ?z : ?b  | TRUE \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4),
                template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_hole 0))
           ))),
    ("TypingL.infer_v_uniqueness_rig",
     "[|  ?P ; ?B ; ?G \<turnstile> ?v \<Rightarrow> ?\<tau>;
          ?P ; ?B ; ?G[?x\<longmapsto>?c'] \<turnstile> ?v \<Rightarrow> ?\<tau>' |]
      ==> ?\<tau> = ?\<tau>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 7),
                    template_var 6),
                  template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 2),
                    template_var 1)),
                template_var 4),
              template_var 0)
            )],
       template_equation (template_var 3, template_var 0))),
    ("TypingL.subtype_trans",
     "[| ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?\<tau>1.0 \<lesssim> ?\<tau>2.0;
         ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?\<tau>2.0 \<lesssim> ?\<tau>3.0 |]
      ==> ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?\<tau>1.0 \<lesssim> ?\<tau>3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("TypingL.infer_e_fresh",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?e \<Rightarrow> ?\<tau>;
         atom ?x \<sharp> ?\<Gamma> |]
      ==> atom ?x \<sharp> (?e, ?\<tau>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("TypingL.valid_wf_all",
     "?\<Theta> ; ?\<B> ; (?z0.0, ?b, ?c0.0) #\<^sub>\<Gamma>
                          ?G  \<Turnstile> ?c  ==>
       ?\<Theta> ; ?\<B> ; (?z0.0, ?b, ?c0.0) #\<^sub>\<Gamma>
                           ?G   \<turnstile>\<^sub>w\<^sub>f ?c ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 4),
                      template_app
                       (template_app (template_hole 1, template_var 3),
                        template_var 2))),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 5),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 4),
                     template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2))),
                 template_var 1)),
             template_var 0)
           ))),
    ("TypingL.check_s_check_branch_s_wfS",
     " ?\<Theta> ;  ?\<Phi> ; ?B ; ?\<Gamma> ; ?\<Delta> ; ?tid ; ?dclist ; ?v \<turnstile> ?css \<Leftarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<Phi> ; ?B ; ?\<Gamma> ; ?\<Delta> ; ?tid ; ?dclist \<turnstile>\<^sub>w\<^sub>f ?css : b_of
                                  ?\<tau> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 2, template_var 9),
                              template_var 8),
                            template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 9),
                           template_var 8),
                         template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("TypingL.check_int",
     "[| ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> \<lbrace> ?z : B_int  | ?c \<rbrace>;
         supp ?v = {} |]
      ==> EX n. [ L_num n ]\<^sup>v = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 8, template_var 1),
                  template_hole 7),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 5, template_var 2), template_hole 4)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("TypingL.infer_int",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> ?z : B_int  | ?c \<rbrace>;
         supp ?v = {} |]
      ==> EX n. [ L_num n ]\<^sup>v = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 8, template_var 1),
                  template_hole 7),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 5, template_var 2), template_hole 4)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("TypingL.infer_bitvec",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> ?z' : B_bitvec  | ?c' \<rbrace>;
         supp ?v = {} |]
      ==> EX bv. ?v = [ L_bitvec bv ]\<^sup>v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 8, template_var 1),
                  template_hole 7),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 5, template_var 2), template_hole 4)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("TypingL.subtype_fresh_tau",
     "[| atom ?x \<sharp> ?t1.0; atom ?x \<sharp> ?\<Gamma>;
         ?P ; ?\<B> ; ?\<Gamma>  \<turnstile> ?t1.0 \<lesssim> ?t2.0 |]
      ==> atom ?x \<sharp> ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 5)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 2, template_var 5)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 0, template_var 2),
                    template_var 1),
                  template_var 3),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 5)),
             template_var 0)
           ))),
    ("TypingL.check_s_flip_u",
     "( ?\<Theta> ; ?\<Phi> ; ?B ; ?\<Gamma> ; (?u \<leftrightarrow> ?u') \<bullet> ?\<Delta>  \<turnstile> (?u \<leftrightarrow> ?u') \<bullet> ?s \<Leftarrow> ?\<tau>) =
      ( ?\<Theta> ; ?\<Phi> ; ?B ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s \<Leftarrow> ?\<tau>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 8),
                   template_var 7),
                 template_var 6),
               template_var 5),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3)),
               template_var 2)),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 8),
                   template_var 7),
                 template_var 6),
               template_var 5),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("TypingL.infer_v_form2",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> ?z : ?b  | ?c \<rbrace>;
         atom ?z \<sharp> ?v |]
      ==> ?c =
          ([ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ ?v ]\<^sup>c\<^sup>e )",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 3)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2))),
           template_app (template_hole 1, template_var 3))))),
    ("TypingL.infer_l_form",
     " \<turnstile> ?l \<Rightarrow> ?\<tau> ==>
      EX z b.
         ?\<tau> =
         \<lbrace> z : b  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?l ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> &
         atom z \<sharp> ?tm",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("TypingL.check_s_flip_u1",
     " ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s \<Leftarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; (?u \<leftrightarrow> ?u') \<bullet> ?\<Delta>  \<turnstile> (?u \<leftrightarrow> ?u') \<bullet> ?s \<Leftarrow> ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0)),
                   template_var 4)),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_var 3)),
             template_var 2)
           ))),
    ("TypingL.infer_l_t_wf",
     " ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>  &
      atom ?z \<sharp> ?\<Gamma> ==>
       ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f \<lbrace> ?z : base_for_lit
        ?l  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?l ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_app (template_hole 9, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 1)),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 3),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 5, template_var 1),
                 template_app (template_hole 4, template_var 0)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 1))),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("TypingL.fresh_u_replace_true",
     "atom
       ?bv \<sharp> ?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma> ==>
      atom
       ?bv \<sharp> ?\<Gamma>' @ (?x, ?b, TRUE) #\<^sub>\<Gamma> ?\<Gamma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 5)),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_app
                       (template_app (template_hole 1, template_var 2),
                        template_var 1))),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 5)),
             template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_hole 0))),
                 template_var 0)))
           ))),
    ("TypingL.check_s_check_branch_s_wfS",
     " ?\<Theta> ;  ?\<Phi> ; ?B ; ?\<Gamma> ; ?\<Delta> ; ?tid ; ?cons ; ?const ; ?v \<turnstile> ?cs \<Leftarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<Phi> ; ?B ; ?\<Gamma> ; ?\<Delta> ; ?tid ; ?cons ; ?const \<turnstile>\<^sub>w\<^sub>f ?cs : b_of
  ?\<tau> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 2, template_var 10),
                                template_var 9),
                              template_var 8),
                            template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 1, template_var 10),
                             template_var 9),
                           template_var 8),
                         template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("TypingL.check_s_flip_u2",
     " ?\<Theta> ; ?\<Phi> ; ?B ; ?\<Gamma> ; (?u \<leftrightarrow> ?u') \<bullet> ?\<Delta>  \<turnstile> (?u \<leftrightarrow> ?u') \<bullet> ?s \<Leftarrow> ?\<tau> ==>
       ?\<Theta> ; ?\<Phi> ; ?B ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s \<Leftarrow> ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 1, template_var 4),
                        template_var 3)),
                    template_var 2)),
                template_app
                 (template_app
                   (template_hole 0,
                    template_app
                     (template_app (template_hole 1, template_var 4),
                      template_var 3)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("TypingL.check_bool_options",
     "[| ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> \<lbrace> ?z : B_bool  | TRUE \<rbrace>;
         supp ?v = {} |]
      ==> ?v = [ L_true ]\<^sup>v | ?v = [ L_false ]\<^sup>v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 0),
                  template_hole 9),
                template_hole 8))
            ),
        template_equation
         (template_app (template_hole 6, template_var 1), template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 2, template_hole 1))),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 2, template_hole 0)))
           ))),
    ("TypingL.infer_bool_options",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> ?z : B_bool  | ?c \<rbrace>;
         supp ?v = {} |]
      ==> ?v = [ L_true ]\<^sup>v | ?v = [ L_false ]\<^sup>v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 1),
                  template_hole 8),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 6, template_var 2), template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app (template_hole 2, template_hole 1))),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app (template_hole 2, template_hole 0)))
           ))),
    ("TypingL.lookup_in_rig_b",
     "[| Some (?b2.0, ?c2.0) = lookup (?\<Gamma>[?x\<longmapsto>?c']) ?x';
         Some (?b1.0, ?c1.0) = lookup ?\<Gamma> ?x' |]
      ==> ?b1.0 = ?b2.0",
     template_implication
      ([template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 7),
              template_var 6)),
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3)),
            template_var 2)),
        template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)),
          template_app
           (template_app (template_hole 2, template_var 5),
            template_var 2))],
       template_equation (template_var 1, template_var 7))),
    ("TypingL.type_v_eq",
     "[| \<lbrace> ?z1.0 : ?b1.0  | ?c1.0 \<rbrace> =
         \<lbrace> ?z : ?b  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?x ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace>;
         atom ?z \<sharp> ?x |]
      ==> ?b = ?b1.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2))),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0))))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 4))),
    ("TypingL.infer_int2",
     " ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> ?z : ?b  | ?c \<rbrace> ==>
      supp ?v = {} & ?b = B_int --> (EX n. ?v = [ L_num n ]\<^sup>v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 12, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_var 3)),
                     template_hole 6)),
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_hole 4))),
             template_app (template_hole 3, t_empty))
           ))),
    ("TypingL.check_v_g_weakening",
     "[| ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> ?\<tau>;
         toSet ?\<Gamma> <= toSet ?\<Gamma>';
          ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>'  |]
      ==> ?\<Theta> ; ?\<B> ; ?\<Gamma>'  \<turnstile> ?v \<Leftarrow> ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 5),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("TypingL.infer_v_g_weakening",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> ?\<tau>;
         toSet ?\<Gamma> <= toSet ?\<Gamma>';
          ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>'  |]
      ==>  ?\<Theta> ; ?\<B> ; ?\<Gamma>' \<turnstile> ?v \<Rightarrow> ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 5),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("TypingL.subtype_weakening",
     "[| ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?\<tau>1.0 \<lesssim> ?\<tau>2.0;
         toSet ?\<Gamma> <= toSet ?\<Gamma>';
          ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>'  |]
      ==> ?\<Theta> ; ?\<B> ; ?\<Gamma>'  \<turnstile> ?\<tau>1.0 \<lesssim> ?\<tau>2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 5),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("TypingL.eval_e_concat_eq",
     " ?\<Theta> ; ?\<Gamma> \<turnstile> ?i ==>
      EX s. ?i \<lbrakk> [ [ L_bitvec
                              (?v1.0 @
                               ?v2.0) ]\<^sup>v ]\<^sup>c\<^sup>e \<rbrakk> ~ s  &
            ?i \<lbrakk> [ [ [ L_bitvec
                                ?v1.0 ]\<^sup>v ]\<^sup>c\<^sup>e @@ [ [ L_bitvec
                                    ?v2.0 ]\<^sup>v ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e \<rbrakk> ~ s ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_var 3),
              template_var 2)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("TypingL.infer_v_form_fresh",
     " ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> ?\<tau> ==>
      EX z b.
         ?\<tau> =
         \<lbrace> z : b  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ ?v ]\<^sup>c\<^sup>e  \<rbrace> &
         atom z \<sharp> (?t, ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("TypingL.infer_e_eq",
     "?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ eq ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> ?\<tau> ==>
      EX z. \<lbrace> z : B_bool  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ eq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace> =
            ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_app
                 (template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("TypingL.infer_e_leq",
     "?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ leq ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> ?\<tau> ==>
      EX z. \<lbrace> z : B_bool  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ leq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace> =
            ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_app
                 (template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("TypingL.infer_e_plus",
     "?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ plus ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> ?\<tau> ==>
      EX z. \<lbrace> z : B_int  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ plus [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace> =
            ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_app
                 (template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("TypingL.infer_bool_options2",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> ?z : ?b  | ?c \<rbrace>;
         supp ?v = {} & ?b = B_bool |]
      ==> ?v = [ L_true ]\<^sup>v | ?v = [ L_false ]\<^sup>v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 12, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 3)),
                  template_hole 7)),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app (template_hole 2, template_hole 1))),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app (template_hole 2, template_hole 0)))
           ))),
    ("TypingL.infer_e_fst_pair",
     "?\<Theta> ; ?\<Phi> ; {||} ; GNil ; ?\<Delta>  \<turnstile> [#1[ ?v1.0 , ?v2.0 ]\<^sup>v ]\<^sup>e \<Rightarrow> ?\<tau> ==>
      EX \<tau>'.
         ?\<Theta> ; ?\<Phi> ; {||} ; GNil ; ?\<Delta>  \<turnstile> [ ?v1.0 ]\<^sup>e \<Rightarrow> \<tau>' &
         ?\<Theta> ; {||} ; GNil  \<turnstile> \<tau>' \<lesssim> ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 5),
                        template_var 4),
                      template_hole 7),
                    template_hole 6),
                  template_var 3),
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("TypingL.infer_e_snd_pair",
     "?\<Theta> ; ?\<Phi> ; {||} ; GNil ; ?\<Delta>  \<turnstile> [#2[ ?v1.0 , ?v2.0 ]\<^sup>v ]\<^sup>e \<Rightarrow> ?\<tau> ==>
      EX \<tau>'.
         ?\<Theta> ; ?\<Phi> ; {||} ; GNil ; ?\<Delta>  \<turnstile> [ ?v2.0 ]\<^sup>e \<Rightarrow> \<tau>' &
         ?\<Theta> ; {||} ; GNil  \<turnstile> \<tau>' \<lesssim> ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 5),
                        template_var 4),
                      template_hole 7),
                    template_hole 6),
                  template_var 3),
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("TypingL.wf_replace_true",
     "[|  ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?G ;
         ?G = ?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma> |]
      ==>  ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>' @
                     (?x, ?b, TRUE) #\<^sub>\<Gamma> ?\<Gamma> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_equation
         (template_var 5,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, template_var 7),
               template_var 6),
             template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_hole 0))),
                 template_var 0)))
           ))),
    ("TypingL.infer_v_form3",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> ?\<tau>;
         atom ?z \<sharp> (?v, ?\<Gamma>) |]
      ==>  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> ?z : b_of
           ?\<tau>  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ ?v ]\<^sup>c\<^sup>e  \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 8, template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 4, template_var 0),
                 template_app (template_hole 3, template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 0))),
                 template_app (template_hole 1, template_var 2))))
           ))),
    ("TypingL.check_s_g_weakening",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s \<Leftarrow> ?t;
         toSet ?\<Gamma> <= toSet ?\<Gamma>';
          ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>'  |]
      ==>  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma>' ; ?\<Delta>  \<turnstile> ?s \<Leftarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 4),
          template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 7),
                template_var 5),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("TypingL.infer_e_g_weakening",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?e \<Rightarrow> ?\<tau>;
         toSet ?\<Gamma> <= toSet ?\<Gamma>';
          ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>'  |]
      ==> ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma>' ; ?\<Delta>  \<turnstile> ?e \<Rightarrow> ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 4),
          template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 7),
                template_var 5),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("TypingL.type_v_eq",
     "[| \<lbrace> ?z1.0 : ?b1.0  | ?c1.0 \<rbrace> =
         \<lbrace> ?z : ?b  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?x ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace>;
         atom ?z \<sharp> ?x |]
      ==> ?c1.0 =
          ([ [ ?z1.0 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?x ]\<^sup>v ]\<^sup>c\<^sup>e )",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2))),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0))))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 0)
            )],
       template_equation
        (template_var 3,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 5))),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)))))),
    ("TypingL.check_s_d_weakening",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s \<Leftarrow> ?\<tau>;
         setD ?\<Delta> <= setD ?\<Delta>';
          ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta>'  |]
      ==>  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>'  \<turnstile> ?s \<Leftarrow> ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 7),
                  template_var 5),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("TypingL.infer_e_d_weakening",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?e \<Rightarrow> ?\<tau>;
         setD ?\<Delta> <= setD ?\<Delta>';
          ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta>'  |]
      ==> ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>'  \<turnstile> ?e \<Rightarrow> ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 7),
                  template_var 5),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("TypingL.subtype_len",
     "   \<turnstile>\<^sub>w\<^sub>f ?\<Theta>  ==>
      ?\<Theta> ; ?\<B> ; GNil  \<turnstile> \<lbrace> ?z' : B_int  | [ [ ?z' ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ L_num
  (int (length
         ?v)) ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> \<lesssim> \<lbrace> ?z : B_int  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [| [ [ L_bitvec
                      ?v ]\<^sup>v ]\<^sup>c\<^sup>e |]\<^sup>c\<^sup>e  \<rbrace>",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 12, template_var 4),
                   template_var 3),
                 template_hole 11),
               template_app
                (template_app
                  (template_app (template_hole 10, template_var 2),
                   template_hole 9),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 2))),
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2, template_var 1)))))))),
             template_app
              (template_app
                (template_app (template_hole 10, template_var 0),
                 template_hole 9),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_var 0))),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 0, template_var 1)))))))
           ))),
    ("TypingL.check_s_check_branch_s_wf",
     " ?\<Theta> ; ?\<Phi> ; ?B ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s \<Leftarrow> ?\<tau> ==>
       ?\<Theta> ; ?B  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>  &
         \<turnstile>\<^sub>w\<^sub>f ?\<Theta>  &
       ?\<Theta> ; ?B ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta>  &
       ?\<Theta> ; ?B ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?\<tau>  &
       ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 6, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 6),
                   template_var 4),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 3, template_var 6)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 6),
                         template_var 4),
                       template_var 3),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 6),
                           template_var 4),
                         template_var 3),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 5)))))
           ))),
    ("TypingL.wf_replace_true",
     "[|  ?\<Theta> ; ?\<B> ; ?G   \<turnstile>\<^sub>w\<^sub>f ?c'' ;
         ?G = ?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma> |]
      ==>  ?\<Theta> ; ?\<B> ; ?\<Gamma>' @
                               (?x, ?b, TRUE) #\<^sub>\<Gamma>
                               ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?c'' ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 8),
                 template_var 7),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_hole 0))),
                   template_var 0))),
             template_var 5)
           ))),
    ("TypingL.wf_replace_true",
     "[|  ?\<Theta> ; ?\<B> ; ?G \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
         ?G = ?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma> |]
      ==>  ?\<Theta> ; ?\<B> ; ?\<Gamma>' @
                               (?x, ?b, TRUE) #\<^sub>\<Gamma>
                               ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 8),
                 template_var 7),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_hole 0))),
                   template_var 0))),
             template_var 5)
           ))),
    ("TypingL.wf_replace_true",
     "[|  ?\<Theta> ; ?\<B> ; ?G   \<turnstile>\<^sub>w\<^sub>f ?\<tau> ;
         ?G = ?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma> |]
      ==>  ?\<Theta> ; ?\<B> ; ?\<Gamma>' @
                               (?x, ?b, TRUE) #\<^sub>\<Gamma>
                               ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?\<tau> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 8),
                 template_var 7),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_hole 0))),
                   template_var 0))),
             template_var 5)
           ))),
    ("TypingL.subtype_reflI",
     "[| \<lbrace> ?z1.0 : ?b  | ?c1.0 \<rbrace> =
         \<lbrace> ?z2.0 : ?b  | ?c2.0 \<rbrace>;
          ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f \<lbrace> ?z1.0 : ?b  | ?c1.0 \<rbrace>  |]
      ==> ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> \<lbrace> ?z1.0 : ?b  | ?c1.0 \<rbrace> \<lesssim> \<lbrace> ?z2.0 : ?b  | ?c2.0 \<rbrace>",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 7),
              template_var 6),
            template_var 5),
          template_app
           (template_app
             (template_app (template_hole 2, template_var 4),
              template_var 6),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 7),
                  template_var 6),
                template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 7),
                   template_var 6),
                 template_var 5)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 6),
               template_var 3))
           ))),
    ("TypingL.wfT_wfT_if1",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f \<lbrace> ?z : b_of
           ?t  | [ ?v ]\<^sup>c\<^sup>e  ==  [ [ L_false ]\<^sup>v ]\<^sup>c\<^sup>e   IMP  c_of
                 ?t ?z  \<rbrace> ;
         atom ?z \<sharp> (?\<Gamma>, ?t) |]
      ==>  ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?t ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 5),
                  template_var 4),
                template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 2),
                  template_app (template_hole 9, template_var 1)),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_var 0)),
                      template_app
                       (template_hole 6,
                        template_app (template_hole 5, template_hole 4)))),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 2))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 11, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 1)
           ))),
    ("TypingL.infer_v_t_form_wf",
     "[|  ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?b ;
          ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?v : ?b ;
         atom ?z \<sharp> ?\<Gamma> |]
      ==>  ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f \<lbrace> ?z : ?b  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ ?v ]\<^sup>c\<^sup>e  \<rbrace> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 4),
                  template_var 2),
                template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 5),
                 template_var 4),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 0))),
                 template_app (template_hole 1, template_var 1))))
           ))),
    ("TypingL.check_s_v_unit",
     "[| ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> \<lbrace> ?z : B_unit  | TRUE \<rbrace> \<lesssim> ?\<tau>;
          ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
          ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi>  |]
      ==>  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [[ L_unit ]\<^sup>v]\<^sup>s \<Leftarrow> ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 8, template_var 3),
                    template_hole 7),
                  template_hole 6)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 6),
                       template_var 0),
                     template_var 5),
                   template_var 4),
                 template_var 1),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0))),
             template_var 2)
           ))),
    ("TypingL.check_e_elims",
     "[|  ?F ; ?D ; ?B ; ?G ; ?\<Theta>  \<turnstile> ?e \<Leftarrow> ?\<tau>;
         !!\<tau>'.
            [| ?F ; ?D ; ?B ; ?G ; ?\<Theta>  \<turnstile> ?e \<Rightarrow> \<tau>';
               ?F ; ?B ; ?G  \<turnstile> \<tau>' \<lesssim> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("TypingL.infer_lit",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> ?z : ?b  | ?c \<rbrace>;
         supp ?v = {}; ?b : {B_bool, B_int, B_unit} |]
      ==> EX l. [ l ]\<^sup>v = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 13, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 10, template_var 3), template_hole 9),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app
                 (template_app (template_hole 7, template_hole 5),
                  template_app
                   (template_app (template_hole 7, template_hole 4),
                    template_hole 3))))
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("TypingL.is_satis_eval_e_eq_imp",
     "[|  ?\<Theta> ; ?\<Gamma> \<turnstile> ?i;
         ?i \<lbrakk> ?e1.0 \<rbrakk> ~ ?s ;
         ?i \<lbrakk> ?e2.0 \<rbrakk> ~ ?s ;
          ?i \<Turnstile> [ [ ?x ]\<^sup>v ]\<^sup>c\<^sup>e  ==  ?e1.0   |]
      ==>  ?i \<Turnstile> [ [ ?x ]\<^sup>v ]\<^sup>c\<^sup>e  ==  ?e2.0  ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 0))),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0))),
               template_var 1))
           ))),
    ("TypingL.infer_v_pair2I",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v\<^sub>1 \<Rightarrow> ?\<tau>\<^sub>1;
          ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v\<^sub>2 \<Rightarrow> ?\<tau>\<^sub>2 |]
      ==> EX \<tau>.
              ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v \<Rightarrow> \<tau> &
             b_of \<tau> =
             [ b_of ?\<tau>\<^sub>1 , b_of ?\<tau>\<^sub>2 ]\<^sup>b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("TypingL.wf_replace_true",
     "[|   ?\<Theta> ; ?\<B> ; ?G \<turnstile>\<^sub>w\<^sub>f ?ce : ?b' ;
         ?G = ?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma> |]
      ==>   ?\<Theta> ; ?\<B> ; ?\<Gamma>' @
                                (?x, ?b, TRUE) #\<^sub>\<Gamma>
                                ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?ce : ?b' ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 9),
                    template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_equation
         (template_var 7,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 9),
                   template_var 8),
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_app
                          (template_app (template_hole 1, template_var 2),
                           template_hole 0))),
                     template_var 0))),
               template_var 6),
             template_var 5)
           ))),
    ("TypingL.wf_replace_true",
     "[|  ?\<Theta> ; ?\<B> ; ?G \<turnstile>\<^sub>w\<^sub>f ?v : ?b' ;
         ?G = ?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma> |]
      ==>  ?\<Theta> ; ?\<B> ; ?\<Gamma>' @
                               (?x, ?b, TRUE) #\<^sub>\<Gamma>
                               ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?v : ?b' ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 9),
                    template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_equation
         (template_var 7,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 9),
                   template_var 8),
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 3),
                         template_app
                          (template_app (template_hole 1, template_var 2),
                           template_hole 0))),
                     template_var 0))),
               template_var 6),
             template_var 5)
           ))),
    ("TypingL.check_s_check_branch_s_wf",
     " ?\<Theta> ;  ?\<Phi> ; ?B ; ?\<Gamma> ; ?\<Delta> ; ?tid ; ?dclist ; ?v \<turnstile> ?css \<Leftarrow> ?\<tau> ==>
       ?\<Theta> ; ?B  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>  &
         \<turnstile>\<^sub>w\<^sub>f ?\<Theta>  &
       ?\<Theta> ; ?B ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta>  &
       ?\<Theta> ; ?B ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?\<tau>  &
       ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 6, template_var 9),
                              template_var 8),
                            template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 9),
                   template_var 7),
                 template_var 6)),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 3, template_var 9)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 9),
                         template_var 7),
                       template_var 6),
                     template_var 5)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 9),
                           template_var 7),
                         template_var 6),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 0, template_var 9),
                     template_var 8)))))
           ))),
    ("TypingL.check_e_elims",
     "[|  ?F ; ?D ; ?B ; ?G ; ?\<Theta>  \<turnstile> [ ?v ]\<^sup>e \<Leftarrow> ?\<tau>;
         !!\<tau>'.
            [| ?F ; ?D ; ?B ; ?G ; ?\<Theta>  \<turnstile> [ ?v ]\<^sup>e \<Rightarrow> \<tau>';
               ?F ; ?B ; ?G  \<turnstile> \<tau>' \<lesssim> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("TypingL.infer_v_form4",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> ?\<tau>;
         atom ?z \<sharp> (?v, ?\<Gamma>); ?b = b_of ?\<tau> |]
      ==>  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> ?z : ?b  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ ?v ]\<^sup>c\<^sup>e  \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 4))
            ),
        template_equation
         (template_var 0, template_app (template_hole 4, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 9, template_var 6),
                   template_var 5),
                 template_var 4),
               template_var 3),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1))),
                 template_app (template_hole 1, template_var 3))))
           ))),
    ("TypingL.subtype_concat",
     "   \<turnstile>\<^sub>w\<^sub>f ?\<Theta>  ==>
      ?\<Theta> ; ?\<B> ; GNil  \<turnstile> \<lbrace> ?z : B_bitvec  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ L_bitvec
   (?v1.0 @
    ?v2.0) ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> \<lesssim> \<lbrace> ?z : B_bitvec  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ [ L_bitvec
                     ?v1.0 ]\<^sup>v ]\<^sup>c\<^sup>e @@ [ [ L_bitvec
                         ?v2.0 ]\<^sup>v ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace>",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 10, template_var 4),
                   template_var 3),
                 template_hole 9),
               template_app
                (template_app
                  (template_app (template_hole 8, template_var 2),
                   template_hole 7),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 2))),
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 1),
                           template_var 0))))))),
             template_app
              (template_app
                (template_app (template_hole 8, template_var 2),
                 template_hole 7),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 2))),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_hole 5,
                       template_app
                        (template_hole 3,
                         template_app (template_hole 2, template_var 1)))),
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 0)))))))
           ))),
    ("TypingL.infer_v_form",
     " ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> ?\<tau> ==>
      EX z b.
         ?\<tau> =
         \<lbrace> z : b  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ ?v ]\<^sup>c\<^sup>e  \<rbrace> &
         atom z \<sharp> ?v &
         atom z \<sharp> (?\<Theta>, ?\<B>, ?\<Gamma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 13, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("TypingL.subtype_gnil_snd",
     "  ?P ; {||} ; GNil \<turnstile>\<^sub>w\<^sub>f [#2[ [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e : ?b  ==>
      ?P ; {||} ; GNil  \<turnstile> \<lbrace> ?z1.0 : ?b  | [ [ ?z1.0 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ ?v\<^sub>2 ]\<^sup>c\<^sup>e  \<rbrace> \<lesssim> \<lbrace> ?z2.0 : ?b  | [ [ ?z2.0 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [#2[ [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e  \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_hole 8),
                  template_hole 7),
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 4),
                      template_var 3)))),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_hole 8),
                 template_hole 7),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 0, template_var 1))),
                   template_app (template_hole 5, template_var 3)))),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 0, template_var 0))),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 4),
                       template_var 3))))))
           ))),
    ("TypingL.subtype_gnil_fst",
     "  ?\<Theta> ; {||} ; GNil \<turnstile>\<^sub>w\<^sub>f [#1[ [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e : ?b  ==>
      ?\<Theta> ; {||} ; GNil  \<turnstile> \<lbrace> ?z\<^sub>1 : ?b  | [ [ ?z\<^sub>1 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ ?v\<^sub>1 ]\<^sup>c\<^sup>e  \<rbrace> \<lesssim> \<lbrace> ?z\<^sub>2 : ?b  | [ [ ?z\<^sub>2 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [#1[ [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e  \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_hole 8),
                  template_hole 7),
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 4),
                      template_var 3)))),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_hole 8),
                 template_hole 7),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 0, template_var 1))),
                   template_app (template_hole 5, template_var 4)))),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 0, template_var 0))),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 4),
                       template_var 3))))))
           ))),
    ("TypingL.check_s_check_branch_s_wf",
     " ?\<Theta> ;  ?\<Phi> ; ?B ; ?\<Gamma> ; ?\<Delta> ; ?tid ; ?cons ; ?const ; ?v \<turnstile> ?cs \<Leftarrow> ?\<tau> ==>
       ?\<Theta> ; ?B  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>  &
         \<turnstile>\<^sub>w\<^sub>f ?\<Theta>  &
       ?\<Theta> ; ?B ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta>  &
       ?\<Theta> ; ?B ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?\<tau>  &
       ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 6, template_var 10),
                                template_var 9),
                              template_var 8),
                            template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 10),
                   template_var 8),
                 template_var 7)),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 3, template_var 10)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 2, template_var 10),
                         template_var 8),
                       template_var 7),
                     template_var 6)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 10),
                           template_var 8),
                         template_var 7),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 0, template_var 10),
                     template_var 9)))))
           ))),
    ("TypingL.check_s_g_weakening",
     "[|  ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta> ; ?tid ; ?dclist ; ?v \<turnstile> ?css \<Leftarrow> ?t;
         toSet ?\<Gamma> <= toSet ?\<Gamma>';
          ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>'  |]
      ==>  ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma>' ; ?\<Delta> ; ?tid ; ?dclist ; ?v \<turnstile> ?css \<Leftarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 3, template_var 10),
                              template_var 9),
                            template_var 8),
                          template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 7),
          template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 10),
                template_var 8),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 3, template_var 10),
                             template_var 9),
                           template_var 8),
                         template_var 0),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("TypingL.check_s_d_weakening",
     "[|  ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta> ; ?tid ; ?dclist ; ?v \<turnstile> ?css \<Leftarrow> ?\<tau>;
         setD ?\<Delta> <= setD ?\<Delta>';
          ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta>'  |]
      ==>  ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>' ; ?tid ; ?dclist ; ?v \<turnstile> ?css \<Leftarrow> ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 3, template_var 10),
                              template_var 9),
                            template_var 8),
                          template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 6),
          template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 10),
                  template_var 8),
                template_var 7),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 3, template_var 10),
                             template_var 9),
                           template_var 8),
                         template_var 7),
                       template_var 0),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("TypingL.wf_replace_true",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?G ; ?D \<turnstile>\<^sub>w\<^sub>f ?e : ?b' ;
         ?G = ?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma> |]
      ==>  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma>' @
   (?x, ?b, TRUE) #\<^sub>\<Gamma>
   ?\<Gamma> ; ?D \<turnstile>\<^sub>w\<^sub>f ?e : ?b' ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 6, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 3),
                           template_app
                            (template_app (template_hole 1, template_var 2),
                             template_hole 0))),
                       template_var 0))),
                 template_var 7),
               template_var 6),
             template_var 5)
           ))),
    ("TypingL.wf_replace_true",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?G ; ?\<Delta> \<turnstile>\<^sub>w\<^sub>f ?s : ?b' ;
         ?G = ?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma> |]
      ==>  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma>' @
   (?x, ?b, TRUE) #\<^sub>\<Gamma>
   ?\<Gamma> ; ?\<Delta> \<turnstile>\<^sub>w\<^sub>f ?s : ?b' ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 6, template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 11),
                       template_var 10),
                     template_var 9),
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 3),
                           template_app
                            (template_app (template_hole 1, template_var 2),
                             template_hole 0))),
                       template_var 0))),
                 template_var 7),
               template_var 6),
             template_var 5)
           ))),
    ("TypingL.check_s_g_weakening",
     "[|  ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta> ; ?tid ; ?cons ; ?const ; ?v \<turnstile> ?cs \<Leftarrow> ?t;
         toSet ?\<Gamma> <= toSet ?\<Gamma>';
          ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>'  |]
      ==>  ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma>' ; ?\<Delta> ; ?tid ; ?cons ; ?const ; ?v \<turnstile> ?cs \<Leftarrow> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 3, template_var 11),
                                template_var 10),
                              template_var 9),
                            template_var 8),
                          template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 8),
          template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 11),
                template_var 9),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 3, template_var 11),
                               template_var 10),
                             template_var 9),
                           template_var 0),
                         template_var 7),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("TypingL.check_s_d_weakening",
     "[|  ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta> ; ?tid ; ?cons ; ?const ; ?v \<turnstile> ?cs \<Leftarrow> ?\<tau>;
         setD ?\<Delta> <= setD ?\<Delta>';
          ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta>'  |]
      ==>  ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>' ; ?tid ; ?cons ; ?const ; ?v \<turnstile> ?cs \<Leftarrow> ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 3, template_var 11),
                                template_var 10),
                              template_var 9),
                            template_var 8),
                          template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 7),
          template_app (template_hole 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 11),
                  template_var 9),
                template_var 8),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 3, template_var 11),
                               template_var 10),
                             template_var 9),
                           template_var 8),
                         template_var 0),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("TypingL.wfG_xa_fresh_in_v",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> ?\<tau>;
         ?G =
         ?\<Gamma>' @
         (?x, ?b, ?c[?z::=[ ?x ]\<^sup>v]\<^sub>v) #\<^sub>\<Gamma>
         ?\<Gamma>;
         atom ?xa \<sharp> ?G;
          ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?G  |]
      ==> atom ?xa \<sharp> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 11),
                    template_var 10),
                  template_var 9),
                template_var 8),
              template_var 7)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 9, template_var 5),
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_app
                     (template_app
                       (template_app (template_hole 5, template_var 2),
                        template_var 1),
                      template_app (template_hole 4, template_var 4))))),
              template_var 9))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 11),
                template_var 10),
              template_var 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 2, template_var 0)),
             template_var 8)
           ))),
    ("TypingL.subtype_valid_simple",
     "[| ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?t1.0 \<lesssim> ?t2.0;
         atom ?z \<sharp> ?\<Gamma>;
         ?t1.0 = \<lbrace> ?z : ?b  | ?c1.0 \<rbrace>;
         ?t2.0 = \<lbrace> ?z : ?b  | ?c2.0 \<rbrace> |]
      ==> ?\<Theta> ; ?\<B> ; (?z, ?b, ?c1.0) #\<^sub>\<Gamma>
                              ?\<Gamma>  \<Turnstile> ?c2.0 ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 3)),
              template_var 6)
            ),
        template_equation
         (template_var 5,
          template_app
           (template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2),
            template_var 1)),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 8),
                 template_var 7),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1))),
                 template_var 6)),
             template_var 0)
           ))),
    ("TypingL.check_s_wf",
     " ?\<Theta> ; ?\<Phi> ; ?B ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s \<Leftarrow> ?\<tau> ==>
       ?\<Theta> ; ?B  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>  &
       ?\<Theta> ; ?B ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?\<tau>  &
       ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi>  &
         \<turnstile>\<^sub>w\<^sub>f ?\<Theta>  &
       ?\<Theta> ; ?B ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta>  &
       ?\<Theta> ; ?\<Phi> ; ?B ; ?\<Gamma> ; ?\<Delta> \<turnstile>\<^sub>w\<^sub>f ?s : b_of
               ?\<tau> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 6),
                   template_var 4),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 6),
                       template_var 4),
                     template_var 3),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 4, template_var 6),
                     template_var 5)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 3, template_var 6)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 2, template_var 6),
                             template_var 4),
                           template_var 3),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 1, template_var 6),
                                 template_var 5),
                               template_var 4),
                             template_var 3),
                           template_var 2),
                         template_var 1),
                       template_app (template_hole 0, template_var 0)))))))
           ))),
    ("TypingL.wf_replace_true",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?G ; ?\<Delta> ; ?tid ; ?dclist \<turnstile>\<^sub>w\<^sub>f ?css : ?b' ;
         ?G = ?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma> |]
      ==>  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma>' @
   (?x, ?b, TRUE) #\<^sub>\<Gamma>
   ?\<Gamma> ; ?\<Delta> ; ?tid ; ?dclist \<turnstile>\<^sub>w\<^sub>f ?css : ?b' ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 6, template_var 13),
                            template_var 12),
                          template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_equation
         (template_var 10,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 6, template_var 13),
                           template_var 12),
                         template_var 11),
                       template_app
                        (template_app (template_hole 4, template_var 4),
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_app
                                (template_hole 2, template_var 3),
                               template_app
                                (template_app
                                  (template_hole 1, template_var 2),
                                 template_hole 0))),
                           template_var 0))),
                     template_var 9),
                   template_var 8),
                 template_var 7),
               template_var 6),
             template_var 5)
           ))),
    ("TypingL.valid_wfT",
     "[| ?\<Theta> ; ?\<B> ; (?z0.0, ?b,
                              ?c0.0[?z::=[ ?z0.0 ]\<^sup>v]\<^sub>v) #\<^sub>\<Gamma>
                             ?G  \<Turnstile> ?c[?z::=[ ?z0.0 ]\<^sup>v]\<^sub>v ;
         atom ?z0.0 \<sharp> (?\<Theta>, ?\<B>, ?G, ?c, ?c0.0) |]
      ==>  ?\<Theta> ; ?\<B> ; ?G   \<turnstile>\<^sub>w\<^sub>f \<lbrace> ?z : ?b  | ?c \<rbrace> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 11, template_var 5),
                      template_app
                       (template_app (template_hole 10, template_var 4),
                        template_app
                         (template_app
                           (template_app (template_hole 9, template_var 3),
                            template_var 2),
                          template_app
                           (template_hole 8, template_var 5))))),
                  template_var 1)),
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 0),
                  template_var 2),
                template_app (template_hole 8, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 5)),
              template_app
               (template_app (template_hole 5, template_var 7),
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_app
                     (template_app (template_hole 2, template_var 0),
                      template_var 3)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 7),
                 template_var 6),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4),
               template_var 0))
           ))),
    ("TypingL.valid_wfT",
     "[| ?\<Theta> ; ?\<B> ; (?z0.0, ?b,
                              ?c0.0[?z::=[ ?z0.0 ]\<^sup>v]\<^sub>v) #\<^sub>\<Gamma>
                             ?G  \<Turnstile> ?c[?z::=[ ?z0.0 ]\<^sup>v]\<^sub>v ;
         atom ?z0.0 \<sharp> (?\<Theta>, ?\<B>, ?G, ?c, ?c0.0) |]
      ==>  ?\<Theta> ; ?\<B> ; ?G   \<turnstile>\<^sub>w\<^sub>f \<lbrace> ?z : ?b  | ?c0.0 \<rbrace> ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 11, template_var 5),
                      template_app
                       (template_app (template_hole 10, template_var 4),
                        template_app
                         (template_app
                           (template_app (template_hole 9, template_var 3),
                            template_var 2),
                          template_app
                           (template_hole 8, template_var 5))))),
                  template_var 1)),
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 0),
                  template_var 2),
                template_app (template_hole 8, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 5)),
              template_app
               (template_app (template_hole 5, template_var 7),
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_app
                     (template_app (template_hole 2, template_var 0),
                      template_var 3)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 7),
                 template_var 6),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4),
               template_var 3))
           ))),
    ("TypingL.wfG_xa_fresh_in_subst_v",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> ?\<tau>;
         ?G =
         ?\<Gamma>' @
         (?x, ?b, ?c[?z::=[ ?x ]\<^sup>v]\<^sub>v) #\<^sub>\<Gamma>
         ?\<Gamma>;
         atom ?xa \<sharp> ?G;
          ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?G  |]
      ==> atom ?xa \<sharp> ?G[?x::=?v]\<^sub>\<Gamma>\<^sub>v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 11),
                    template_var 10),
                  template_var 9),
                template_var 8),
              template_var 7)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 9, template_var 5),
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_app
                     (template_app
                       (template_app (template_hole 5, template_var 2),
                        template_var 1),
                      template_app (template_hole 4, template_var 4))))),
              template_var 9))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 11),
                template_var 10),
              template_var 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 4),
               template_var 8))
           ))),
    ("TypingL.wf_replace_true",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?G ; ?\<Delta> ; ?tid ; ?dc ; ?t \<turnstile>\<^sub>w\<^sub>f ?cs : ?b' ;
         ?G = ?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma> |]
      ==>  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma>' @
   (?x, ?b, TRUE) #\<^sub>\<Gamma>
   ?\<Gamma> ; ?\<Delta> ; ?tid ; ?dc ; ?t \<turnstile>\<^sub>w\<^sub>f ?cs : ?b' ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 6, template_var 14),
                              template_var 13),
                            template_var 12),
                          template_var 11),
                        template_var 10),
                      template_var 9),
                    template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_equation
         (template_var 11,
          template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_var 1))),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 6, template_var 14),
                             template_var 13),
                           template_var 12),
                         template_app
                          (template_app (template_hole 4, template_var 4),
                           template_app
                            (template_app
                              (template_hole 3,
                               template_app
                                (template_app
                                  (template_hole 2, template_var 3),
                                 template_app
                                  (template_app
                                    (template_hole 1, template_var 2),
                                   template_hole 0))),
                             template_var 0))),
                       template_var 10),
                     template_var 9),
                   template_var 8),
                 template_var 7),
               template_var 6),
             template_var 5)
           ))),
    ("TypingL.check_v_tid_form",
     "[| ?\<Theta> ; ?B ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> \<lbrace> ?z : B_id
      ?tid  | TRUE \<rbrace>;
         AF_typedef ?tid ?dclist : set ?\<Theta>; supp ?v = {} |]
      ==> EX dc v' t. ?v = V_cons ?tid dc v' & (dc, t) : set ?dclist",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 18, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 17, template_var 2),
                  template_app (template_hole 16, template_var 1)),
                template_hole 15))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 1),
                  template_var 0)),
              template_app (template_hole 12, template_var 6))
            ),
        template_equation
         (template_app (template_hole 10, template_var 3),
          template_hole 9)],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("TypingL.infer_v_tid_form",
     "[|  ?\<Theta> ; ?B ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> ?z : B_id
       ?tid  | ?c \<rbrace>;
         AF_typedef ?tid ?dclist : set ?\<Theta>; supp ?v = {} |]
      ==> EX dc v' t. ?v = V_cons ?tid dc v' & (dc, t) : set ?dclist",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 17, template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 16, template_var 3),
                  template_app (template_hole 15, template_var 2)),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_var 0)),
              template_app (template_hole 12, template_var 7))
            ),
        template_equation
         (template_app (template_hole 10, template_var 4),
          template_hole 9)],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("TypingL.subtype_bop_eq",
     "[|  ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma> ;
         base_for_lit ?l1.0 = base_for_lit ?l2.0 |]
      ==> ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> \<lbrace> ?z : B_bool  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ if ?l1.0 =
            ?l2.0
         then L_true
         else L_false ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> \<lesssim> \<lbrace> ?z : B_bool  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ eq [ [ ?l1.0 ]\<^sup>v ]\<^sup>c\<^sup>e [ [ ?l2.0 ]\<^sup>v ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app (template_hole 13, template_var 2),
          template_app (template_hole 13, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 12, template_var 5),
                   template_var 4),
                 template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 11, template_var 0),
                   template_hole 10),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_var 0))),
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 5,
                             template_app
                              (template_app
                                (template_hole 4, template_var 2),
                               template_var 1)),
                           template_hole 3),
                         template_hole 2)))))),
             template_app
              (template_app
                (template_app (template_hole 11, template_var 0),
                 template_hole 10),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 0))),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_app
                      (template_hole 8,
                       template_app (template_hole 6, template_var 2))),
                   template_app
                    (template_hole 8,
                     template_app (template_hole 6, template_var 1))))))
           ))),
    ("TypingL.check_v_top",
     "[| ?\<Theta> ; ?\<B> ; GNil  \<turnstile> ?v \<Leftarrow> ?\<tau>;
         ?ce1.0 = ?ce2.0[?z::=?v]\<^sub>c\<^sub>e\<^sub>v;
          ?\<Theta> ; ?\<B> ; GNil   \<turnstile>\<^sub>w\<^sub>f \<lbrace> ?z : b_of
      ?\<tau>  | ?ce1.0  ==  ?ce2.0  \<rbrace> ;
         supp ?ce1.0 <= supp ?\<B> |]
      ==> ?\<Theta> ; ?\<B> ; GNil  \<turnstile> ?v \<Leftarrow> \<lbrace> ?z : b_of
     ?\<tau>  | ?ce1.0  ==  ?ce2.0  \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_var 6),
                    template_var 5),
                  template_hole 9),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 5),
                template_hole 9),
              template_app
               (template_app
                 (template_app (template_hole 5, template_var 0),
                  template_app (template_hole 4, template_var 3)),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)))
            ),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_app (template_hole 0, template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 10, template_var 6),
                   template_var 5),
                 template_hole 9),
               template_var 4),
             template_app
              (template_app
                (template_app (template_hole 5, template_var 0),
                 template_app (template_hole 4, template_var 3)),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)))
           ))),
    ("TypingL.subtype_valid",
     "[| ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?t1.0 \<lesssim> ?t2.0;
         atom ?y \<sharp> ?\<Gamma>;
         ?t1.0 = \<lbrace> ?z1.0 : ?b  | ?c1.0 \<rbrace>;
         ?t2.0 = \<lbrace> ?z2.0 : ?b  | ?c2.0 \<rbrace> |]
      ==> ?\<Theta> ; ?\<B> ; (?y, ?b,
                               ?c1.0[?z1.0::=[ ?y ]\<^sup>v]\<^sub>v) #\<^sub>\<Gamma>
                              ?\<Gamma>  \<Turnstile> ?c2.0[?z2.0::=[ ?y ]\<^sup>v]\<^sub>v ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_var 10),
                    template_var 9),
                  template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 5)),
              template_var 8)
            ),
        template_equation
         (template_var 7,
          template_app
           (template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3),
            template_var 2)),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_app (template_hole 6, template_var 1),
              template_var 3),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 10),
                 template_var 9),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 5),
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_app
                        (template_app
                          (template_app (template_hole 1, template_var 2),
                           template_var 4),
                         template_app (template_hole 0, template_var 5))))),
                 template_var 8)),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1),
               template_app (template_hole 0, template_var 5)))
           ))),
    ("TypingL.infer_var3",
     " ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> [ ?x ]\<^sup>v \<Rightarrow> ?\<tau> ==>
      EX z b c.
         Some (b, c) = lookup ?\<Gamma> ?x &
         ?\<tau> =
         \<lbrace> z : b  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?x ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> &
         atom z \<sharp> ?x &
         atom z \<sharp> (?\<Theta>, ?\<B>, ?\<Gamma>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 18, template_var 4),
                    template_var 3),
                  template_var 2),
                template_app (template_hole 17, template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 16, t_empty)))),
    ("TypingL.subtype_base_fresh",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f \<lbrace> ?z : ?b  | ?c \<rbrace> ;
          ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f \<lbrace> ?z : ?b  | ?c' \<rbrace> ;
         atom ?z \<sharp> ?\<Gamma>;
         ?\<Theta> ; ?\<B> ; (?z, ?b, ?c) #\<^sub>\<Gamma>
                             ?\<Gamma>  \<Turnstile> ?c'  |]
      ==> ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> \<lbrace> ?z : ?b  | ?c \<rbrace> \<lesssim> \<lbrace> ?z : ?b  | ?c' \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 6),
                  template_var 5),
                template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 6),
                  template_var 5),
                template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 3)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_app
                       (template_app (template_hole 1, template_var 2),
                        template_var 1))),
                  template_var 4)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app
                  (template_app (template_hole 7, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 7, template_var 3),
                 template_var 2),
               template_var 0))
           ))),
    ("TypingL.valid_flip_simple",
     "[| ?\<Theta> ; ?\<B> ; (?z, ?b, ?c) #\<^sub>\<Gamma>
                             ?\<Gamma>  \<Turnstile> ?c' ;
         atom ?z \<sharp> ?\<Gamma>;
         atom ?x \<sharp> (?z, ?c, ?z, ?c', ?\<Gamma>) |]
      ==> ?\<Theta> ; ?\<B> ; (?x, ?b,
                               (?z \<leftrightarrow> ?x) \<bullet> ?c) #\<^sub>\<Gamma>
                              ?\<Gamma>  \<Turnstile> (?z \<leftrightarrow> ?x) \<bullet> ?c' ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 10, template_var 5),
                      template_app
                       (template_app (template_hole 9, template_var 4),
                        template_var 3))),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 5)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 7, template_var 0)),
              template_app
               (template_app (template_hole 5, template_var 5),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_var 2)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 12, template_var 7),
                 template_var 6),
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 10, template_var 0),
                     template_app
                      (template_app (template_hole 9, template_var 4),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app (template_hole 0, template_var 5),
                             template_var 0)),
                         template_var 3)))),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 0)),
               template_var 1))
           ))),
    ("TypingL.check_num_range",
     "[| 0 <= ?n & ?n <= int (length ?v);
            \<turnstile>\<^sub>w\<^sub>f ?\<Theta>  |]
      ==> ?\<Theta> ; {||} ; GNil  \<turnstile> [ L_num
             ?n ]\<^sup>v \<Leftarrow> \<lbrace> ?z : B_int  | [ leq [ [ L_num
                                    0 ]\<^sup>v ]\<^sup>c\<^sup>e [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  ==  [ [ L_true ]\<^sup>v ]\<^sup>c\<^sup>e   AND  [ leq [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e [| [ [ L_bitvec
                             ?v ]\<^sup>v ]\<^sup>c\<^sup>e |]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  ==  [ [ L_true ]\<^sup>v ]\<^sup>c\<^sup>e   \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_app (template_hole 20, template_hole 19),
                  template_var 3)),
              template_app
               (template_app (template_hole 20, template_var 3),
                template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_var 2))))
            ),
        template_predicate
         (template_app (template_hole 16, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 15, template_var 1),
                   template_hole 14),
                 template_hole 13),
               template_app
                (template_hole 12,
                 template_app (template_hole 11, template_var 3))),
             template_app
              (template_app
                (template_app (template_hole 10, template_var 0),
                 template_hole 9),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_app (template_hole 6, template_hole 5),
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 11, template_hole 19)))),
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 3, template_var 0)))),
                     template_app
                      (template_hole 4,
                       template_app (template_hole 12, template_hole 2)))),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_app (template_hole 6, template_hole 5),
                         template_app
                          (template_hole 4,
                           template_app (template_hole 3, template_var 0))),
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 0, template_var 2)))))),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 12, template_hole 2))))))
           ))),
    ("TypingL.infer_v_pair2E",
     " ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v \<Rightarrow> ?\<tau> ==>
      EX \<tau>\<^sub>1 \<tau>\<^sub>2 z.
          ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v\<^sub>1 \<Rightarrow> \<tau>\<^sub>1 &
          ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v\<^sub>2 \<Rightarrow> \<tau>\<^sub>2 &
         ?\<tau> =
         \<lbrace> z : [ b_of
                          \<tau>\<^sub>1 , b_of
      \<tau>\<^sub>2 ]\<^sup>b  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> &
         atom z \<sharp> (?v\<^sub>1, ?v\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 14, template_var 5),
                    template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("TypingL.valid_ce_eq",
     "[| ?ce1.0 = ?ce2.0[?x::=?v]\<^sub>c\<^sub>e\<^sub>v;
          ?\<Theta> ; ?\<B> ; GNil \<turnstile>\<^sub>w\<^sub>f ?v : ?b ;
           ?\<Theta> ; ?\<B> ; (?x, ?b, TRUE) #\<^sub>\<Gamma>
                               GNil \<turnstile>\<^sub>w\<^sub>f ?ce2.0 : ?b' ;
           ?\<Theta> ; ?\<B> ; GNil \<turnstile>\<^sub>w\<^sub>f ?ce1.0 : ?b'  |]
      ==> ?\<Theta> ; ?\<B> ; (?x, ?b,
                               [ [ ?x ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ ?v ]\<^sup>c\<^sup>e ) #\<^sub>\<Gamma>
                              GNil  \<Turnstile> ?ce1.0  ==  ?ce2.0  ",
     template_implication
      ([template_equation
         (template_var 7,
          template_app
           (template_app
             (template_app (template_hole 11, template_var 6),
              template_var 5),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 10, template_var 3),
                    template_var 2),
                  template_hole 9),
                template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 3),
                    template_var 2),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 5),
                        template_app
                         (template_app (template_hole 5, template_var 1),
                          template_hole 4))),
                    template_hole 9)),
                template_var 6),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 3),
                    template_var 2),
                  template_hole 9),
                template_var 7),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 5),
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 0, template_var 5))),
                         template_app (template_hole 1, template_var 4))))),
                 template_hole 9)),
             template_app
              (template_app (template_hole 2, template_var 7),
               template_var 6))
           ))),
    ("TypingL.valid_eval_e_eq",
     "[| ALL \<Gamma> i.
             ?\<Theta> ; \<Gamma> \<turnstile> i -->
            (EX s. i \<lbrakk> ?e1.0 \<rbrakk> ~ s  &
                   i \<lbrakk> ?e2.0 \<rbrakk> ~ s );
           ?\<Theta> ; ?\<B> ; GNil \<turnstile>\<^sub>w\<^sub>f ?e1.0 : ?b ;
           ?\<Theta> ; ?\<B> ; GNil \<turnstile>\<^sub>w\<^sub>f ?e2.0 : ?b  |]
      ==> ?\<Theta> ; ?\<B> ; (?x, ?b,
                               [ [ ?x ]\<^sup>v ]\<^sup>c\<^sup>e  ==  ?e1.0 ) #\<^sub>\<Gamma>
                              GNil  \<Turnstile> [ [ ?x ]\<^sup>v ]\<^sup>c\<^sup>e  ==  ?e2.0  ",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 5),
                    template_var 2),
                  template_hole 7),
                template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 5),
                    template_var 2),
                  template_hole 7),
                template_var 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 5),
                 template_var 2),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 0, template_var 0))),
                         template_var 4)))),
                 template_hole 7)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0))),
               template_var 3))
           ))),
    ("TypingL.infer_v_pair2I_zbc",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v\<^sub>1 \<Rightarrow> ?\<tau>\<^sub>1;
          ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v\<^sub>2 \<Rightarrow> ?\<tau>\<^sub>2 |]
      ==> EX z \<tau>.
              ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v \<Rightarrow> \<tau> &
             \<tau> =
             \<lbrace> z : [ b_of
                              ?\<tau>\<^sub>1 , b_of
           ?\<tau>\<^sub>2 ]\<^sup>b  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> &
             atom z \<sharp> (?v\<^sub>1, ?v\<^sub>2) &
             atom z \<sharp> ?\<Gamma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 15, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 15, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 14, t_empty)))),
    ("TypingL.valid_flip",
     "[| ?\<Theta> ; ?\<B> ; (?xx2.0, ?b,
                              ?c0.0[?z0.0::=[ ?xx2.0 ]\<^sup>v]\<^sub>v) #\<^sub>\<Gamma>
                             ?\<Gamma>  \<Turnstile> ?c[?z::=[ ?xx2.0 ]\<^sup>v]\<^sub>v ;
         atom ?xx2.0 \<sharp> (?c0.0, ?\<Gamma>, ?c, ?z);
         atom ?z0.0 \<sharp> (?\<Gamma>, ?c, ?z) |]
      ==> ?\<Theta> ; ?\<B> ; (?z0.0, ?b, ?c0.0) #\<^sub>\<Gamma>
                              ?\<Gamma>  \<Turnstile> ?c[?z::=[ ?z0.0 ]\<^sup>v]\<^sub>v ",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 8),
                  template_var 7),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_var 6),
                      template_app
                       (template_app (template_hole 8, template_var 5),
                        template_app
                         (template_app
                           (template_app (template_hole 7, template_var 4),
                            template_var 3),
                          template_app
                           (template_hole 6, template_var 6))))),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0),
                template_app (template_hole 6, template_var 6)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 6)),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 0,
                template_app (template_hole 4, template_var 3)),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 11, template_var 8),
                 template_var 7),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 3),
                     template_app
                      (template_app (template_hole 8, template_var 5),
                       template_var 4))),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 7, template_var 1),
                 template_var 0),
               template_app (template_hole 6, template_var 3)))
           ))),
    ("TypingL.check_v_num_leq",
     "[| 0 <= ?n & ?n <= int (length ?v);
            \<turnstile>\<^sub>w\<^sub>f ?\<Theta> ;
          ?\<Theta> ; {||}  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>  |]
      ==> ?\<Theta> ; {||} ; ?\<Gamma>  \<turnstile> [ L_num
                  ?n ]\<^sup>v \<Leftarrow> \<lbrace> ?z : B_int  | [ leq [ [ L_num
   0 ]\<^sup>v ]\<^sup>c\<^sup>e [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  ==  [ [ L_true ]\<^sup>v ]\<^sup>c\<^sup>e   AND  [ leq [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e [| [ [ L_bitvec
                                  ?v ]\<^sup>v ]\<^sup>c\<^sup>e |]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  ==  [ [ L_true ]\<^sup>v ]\<^sup>c\<^sup>e   \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_app (template_hole 20, template_hole 19),
                  template_var 4)),
              template_app
               (template_app (template_hole 20, template_var 4),
                template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_var 3))))
            ),
        template_predicate
         (template_app (template_hole 16, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 2),
                template_hole 14),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 13, template_var 2),
                   template_hole 14),
                 template_var 1),
               template_app
                (template_hole 12,
                 template_app (template_hole 11, template_var 4))),
             template_app
              (template_app
                (template_app (template_hole 10, template_var 0),
                 template_hole 9),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_app (template_hole 6, template_hole 5),
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 12,
                               template_app
                                (template_hole 11, template_hole 19)))),
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 3, template_var 0)))),
                     template_app
                      (template_hole 4,
                       template_app (template_hole 12, template_hole 2)))),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_app (template_hole 6, template_hole 5),
                         template_app
                          (template_hole 4,
                           template_app (template_hole 3, template_var 0))),
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 0, template_var 3)))))),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 12, template_hole 2))))))
           ))),
    ("TypingL.check_s_abs_u",
     "[| [[atom ?u]]lst. ?s = [[atom ?u']]lst. ?s';
         atom ?u \<sharp> ?\<Delta>; atom ?u' \<sharp> ?\<Delta>;
          ?\<Theta> ; ?B ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?\<tau>' ;
          ?\<Theta> ; ?\<Phi> ; ?B ; ?\<Gamma> ; (?u,
            ?\<tau>') #\<^sub>\<Delta>
           ?\<Delta>  \<turnstile> ?s \<Leftarrow> ?\<tau> |]
      ==>  ?\<Theta> ; ?\<Phi> ; ?B ; ?\<Gamma> ; (?u',
             ?\<tau>') #\<^sub>\<Delta>
            ?\<Delta>  \<turnstile> ?s' \<Leftarrow> ?\<tau>",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 10)),
                template_hole 5)),
            template_var 9),
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 8)),
                template_hole 5)),
            template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 6, template_var 10)),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 6, template_var 8)),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 2, template_var 5),
                        template_var 1),
                      template_var 4),
                    template_var 3),
                  template_app
                   (template_app
                     (template_hole 1,
                      template_app
                       (template_app (template_hole 0, template_var 10),
                        template_var 2)),
                    template_var 6)),
                template_var 9),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 1),
                     template_var 4),
                   template_var 3),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 8),
                       template_var 2)),
                   template_var 6)),
               template_var 7),
             template_var 0)
           ))),
    ("TypingL.subtype_if_simp",
     "[|  ?P ; ?\<B> ; GNil   \<turnstile>\<^sub>w\<^sub>f \<lbrace> ?z1.0 : ?b  | [ [ ?l ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?l ]\<^sup>v ]\<^sup>c\<^sup>e   IMP  ?c[?z::=[ ?z1.0 ]\<^sup>v]\<^sub>v  \<rbrace> ;
          ?P ; ?\<B> ; GNil   \<turnstile>\<^sub>w\<^sub>f \<lbrace> ?z : ?b  | ?c \<rbrace> ;
         atom ?z1.0 \<sharp> ?c |]
      ==> ?P ; ?\<B> ; GNil  \<turnstile> \<lbrace> ?z1.0 : ?b  | [ [ ?l ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?l ]\<^sup>v ]\<^sup>c\<^sup>e   IMP  ?c[?z::=[ ?z1.0 ]\<^sup>v]\<^sub>v  \<rbrace> \<lesssim> \<lbrace> ?z : ?b  | ?c \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 6),
                  template_var 5),
                template_hole 10),
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_hole 6,
                          template_app (template_hole 5, template_var 2))),
                      template_app
                       (template_hole 6,
                        template_app (template_hole 5, template_var 2)))),
                  template_app
                   (template_app
                     (template_app (template_hole 4, template_var 1),
                      template_var 0),
                    template_app (template_hole 3, template_var 4)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 6),
                  template_var 5),
                template_hole 10),
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 0),
                  template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 4)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 5),
                 template_hole 10),
               template_app
                (template_app
                  (template_app (template_hole 9, template_var 4),
                   template_var 3),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6,
                           template_app (template_hole 5, template_var 2))),
                       template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 2)))),
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_var 1),
                       template_var 0),
                     template_app (template_hole 3, template_var 4))))),
             template_app
              (template_app
                (template_app (template_hole 9, template_var 0),
                 template_var 3),
               template_var 1))
           ))),
    ("TypingL.subtype_split",
     "[| split ?n ?v (?v1.0, ?v2.0);
            \<turnstile>\<^sub>w\<^sub>f ?\<Theta>  |]
      ==> ?\<Theta> ; {||} ; GNil  \<turnstile> \<lbrace> ?z : [ B_bitvec , B_bitvec ]\<^sup>b  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ [ L_bitvec
                               ?v1.0 ]\<^sup>v , [ L_bitvec
              ?v2.0 ]\<^sup>v ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> \<lesssim> \<lbrace> ?z : [ B_bitvec , B_bitvec ]\<^sup>b  | [ [ L_bitvec
                     ?v ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [#1[ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e @@ [#2[ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e   AND  [| [#1[ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e |]\<^sup>c\<^sup>e  ==  [ [ L_num
                  ?n ]\<^sup>v ]\<^sup>c\<^sup>e   \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 5),
                template_var 4),
              template_app
               (template_app (template_hole 19, template_var 3),
                template_var 2))
            ),
        template_predicate
         (template_app (template_hole 18, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 17, template_var 1),
                   template_hole 16),
                 template_hole 15),
               template_app
                (template_app
                  (template_app (template_hole 14, template_var 0),
                   template_app
                    (template_app (template_hole 13, template_hole 12),
                     template_hole 12)),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_hole 10,
                       template_app (template_hole 9, template_var 0))),
                   template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app (template_hole 6, template_var 3))),
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 6, template_var 2))))))),
             template_app
              (template_app
                (template_app (template_hole 14, template_var 0),
                 template_app
                  (template_app (template_hole 13, template_hole 12),
                   template_hole 12)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_hole 10,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6, template_var 4)))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 10,
                             template_app
                              (template_hole 9, template_var 0)))),
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 9, template_var 0)))))),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 10,
                           template_app
                            (template_hole 9, template_var 0))))),
                   template_app
                    (template_hole 10,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 0, template_var 5)))))))
           ))),
    ("TypingL.subtype_range",
     "[| 0 <= ?n & ?n <= int (length ?v);
          ?\<Theta> ; {||}  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma>  |]
      ==> ?\<Theta> ; {||} ; ?\<Gamma>  \<turnstile> \<lbrace> ?z : B_int  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ L_num
        ?n ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> \<lesssim> \<lbrace> ?z : B_int  | [ leq [ [ L_num
                    0 ]\<^sup>v ]\<^sup>c\<^sup>e [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  ==  [ [ L_true ]\<^sup>v ]\<^sup>c\<^sup>e   AND  [ leq [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e [| [ [ L_bitvec
             ?v ]\<^sup>v ]\<^sup>c\<^sup>e |]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  ==  [ [ L_true ]\<^sup>v ]\<^sup>c\<^sup>e   \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_hole 18),
                  template_var 4)),
              template_app
               (template_app (template_hole 19, template_var 4),
                template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_var 3))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 2),
                template_hole 14),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 13, template_var 2),
                   template_hole 14),
                 template_var 1),
               template_app
                (template_app
                  (template_app (template_hole 12, template_var 0),
                   template_hole 11),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_hole 9,
                       template_app (template_hole 8, template_var 0))),
                   template_app
                    (template_hole 9,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 4)))))),
             template_app
              (template_app
                (template_app (template_hole 12, template_var 0),
                 template_hole 11),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app
                          (template_app (template_hole 4, template_hole 3),
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 6, template_hole 18)))),
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 8, template_var 0)))),
                     template_app
                      (template_hole 9,
                       template_app (template_hole 7, template_hole 2)))),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_app (template_hole 4, template_hole 3),
                         template_app
                          (template_hole 9,
                           template_app (template_hole 8, template_var 0))),
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 0, template_var 3)))))),
                   template_app
                    (template_hole 9,
                     template_app (template_hole 7, template_hole 2))))))
           ))),
    ("TypingL.check_v_range",
     "[| ?\<Theta> ; ?B ; ?\<Gamma>  \<turnstile> ?v2.0 \<Leftarrow> \<lbrace> ?z : B_int  | [ leq [ [ L_num
                            0 ]\<^sup>v ]\<^sup>c\<^sup>e [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  ==  [ [ L_true ]\<^sup>v ]\<^sup>c\<^sup>e   AND  [ leq [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e [| [ ?v1.0 ]\<^sup>c\<^sup>e |]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  ==  [ [ L_true ]\<^sup>v ]\<^sup>c\<^sup>e   \<rbrace>;
         ?v1.0 = [ L_bitvec ?bv ]\<^sup>v & ?v2.0 = [ L_num ?n ]\<^sup>v;
         atom ?z \<sharp> ?\<Gamma>; sble ?\<Theta> ?\<Gamma> |]
      ==> 0 <= ?n & ?n <= int (length ?bv)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 22, template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 21, template_var 3),
                  template_hole 20),
                template_app
                 (template_app
                   (template_hole 19,
                    template_app
                     (template_app
                       (template_hole 18,
                        template_app
                         (template_app
                           (template_app
                             (template_hole 17, template_hole 16),
                            template_app
                             (template_hole 15,
                              template_app
                               (template_hole 14,
                                template_app
                                 (template_hole 13, template_hole 12)))),
                          template_app
                           (template_hole 15,
                            template_app
                             (template_hole 11, template_var 3)))),
                      template_app
                       (template_hole 15,
                        template_app
                         (template_hole 14, template_hole 10)))),
                  template_app
                   (template_app
                     (template_hole 18,
                      template_app
                       (template_app
                         (template_app (template_hole 17, template_hole 16),
                          template_app
                           (template_hole 15,
                            template_app
                             (template_hole 11, template_var 3))),
                        template_app
                         (template_hole 9,
                          template_app
                           (template_hole 15, template_var 2)))),
                    template_app
                     (template_hole 15,
                      template_app (template_hole 14, template_hole 10))))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_app
                   (template_hole 14,
                    template_app (template_hole 6, template_var 1)))),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_app
                 (template_hole 14,
                  template_app (template_hole 13, template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 3)),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 7),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 2, template_hole 12),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))))
           ))),
    ("TypingL.subtype_bop_arith",
     "[|  ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma> ;
         ?opp = plus & ?ll = L_num (?n1.0 + ?n2.0) |
         ?opp = leq & ?ll = (if ?n1.0 <= ?n2.0 then L_true else L_false);
         (?opp = plus --> ?b = B_int) & (?opp = leq --> ?b = B_bool) |]
      ==> ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> \<lbrace> ?z : ?b  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?ll ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> \<lesssim> \<lbrace> ?z : ?b  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ ?opp [ [ L_num
                  ?n1.0 ]\<^sup>v ]\<^sup>c\<^sup>e [ [ L_num
                   ?n2.0 ]\<^sup>v ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 23, template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app
                   (template_hole 21,
                    template_app
                     (template_app (template_hole 20, template_var 5),
                      template_hole 19)),
                  template_app
                   (template_app (template_hole 18, template_var 4),
                    template_app
                     (template_hole 17,
                      template_app
                       (template_app (template_hole 16, template_var 3),
                        template_var 2))))),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app (template_hole 20, template_var 5),
                    template_hole 15)),
                template_app
                 (template_app (template_hole 18, template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_app (template_hole 13, template_var 3),
                          template_var 2)),
                      template_hole 12),
                    template_hole 11))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 20, template_var 5),
                      template_hole 19)),
                  template_app
                   (template_app (template_hole 9, template_var 1),
                    template_hole 8))),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 20, template_var 5),
                    template_hole 15)),
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_hole 7)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 8),
                   template_var 7),
                 template_var 6),
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 1),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_var 0))),
                   template_app
                    (template_hole 3,
                     template_app (template_hole 1, template_var 4))))),
             template_app
              (template_app
                (template_app (template_hole 5, template_var 0),
                 template_var 1),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0))),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_app
                      (template_hole 3,
                       template_app
                        (template_hole 1,
                         template_app (template_hole 17, template_var 3)))),
                   template_app
                    (template_hole 3,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 17, template_var 2)))))))
           ))),
    ("TypingL.infer_e_app2E",
     "?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ ?f  ?v  ]\<^sup>e \<Rightarrow> ?\<tau> ==>
      EX x b c s' \<tau>'.
          ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta>  &
         Some
          (AF_fundef ?f (AF_fun_typ_none (AF_fun_typ x b c \<tau>' s'))) =
         lookup_fun ?\<Phi> ?f &
          ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi>  &
         ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> \<lbrace> x : b  | c \<rbrace> &
         ?\<tau> = \<tau>'[x::=?v]\<^sub>\<tau>\<^sub>v &
         atom
          x \<sharp> (?\<Theta>, ?\<Phi>, ?\<B>, ?\<Gamma>, ?\<Delta>, ?v,
                      ?\<tau>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 27, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_app
                 (template_app (template_hole 26, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 25, t_empty)))),
    ("TypingL.subtype_gnil_fst_aux",
     "[| supp ?v\<^sub>1 = {};
         supp [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v = {};
            \<turnstile>\<^sub>w\<^sub>f ?P ;
           ?P ; ?\<B> ; GNil \<turnstile>\<^sub>w\<^sub>f [ ?v\<^sub>1 ]\<^sup>c\<^sup>e : ?b ;
           ?P ; ?\<B> ; GNil \<turnstile>\<^sub>w\<^sub>f [#1[ [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e : ?b ;
           ?P ; ?\<B> ; GNil \<turnstile>\<^sub>w\<^sub>f [ ?v\<^sub>2 ]\<^sup>c\<^sup>e : ?b2.0 ;
         atom ?z1.0 \<sharp> GNil; atom ?z2.0 \<sharp> GNil |]
      ==> ?P ; ?\<B> ; GNil  \<turnstile> \<lbrace> ?z1.0 : ?b  | [ [ ?z1.0 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ ?v\<^sub>1 ]\<^sup>c\<^sup>e  \<rbrace> \<lesssim> \<lbrace> ?z2.0 : ?b  | [ [ ?z2.0 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [#1[ [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e  \<rbrace>",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 7),
          template_hole 12),
        template_equation
         (template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 11, template_var 7),
              template_var 6)),
          template_hole 12),
        template_predicate
         (template_app (template_hole 10, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_hole 8),
                template_app (template_hole 7, template_var 7)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_hole 8),
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 11, template_var 7),
                      template_var 6)))),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_hole 8),
                template_app (template_hole 7, template_var 6)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)),
              template_hole 8)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_var 4),
                 template_hole 8),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 3),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 0, template_var 1))),
                   template_app (template_hole 7, template_var 7)))),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 0, template_var 0))),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 11, template_var 7),
                       template_var 6))))))
           ))),
    ("TypingL.subtype_gnil_snd_aux",
     "[| supp ?v\<^sub>2 = {};
         supp [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v = {};
            \<turnstile>\<^sub>w\<^sub>f ?P ;
           ?P ; ?\<B> ; GNil \<turnstile>\<^sub>w\<^sub>f [ ?v\<^sub>2 ]\<^sup>c\<^sup>e : ?b ;
           ?P ; ?\<B> ; GNil \<turnstile>\<^sub>w\<^sub>f [#2[ [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e : ?b ;
           ?P ; ?\<B> ; GNil \<turnstile>\<^sub>w\<^sub>f [ ?v\<^sub>1 ]\<^sup>c\<^sup>e : ?b2.0 ;
         atom ?z1.0 \<sharp> GNil; atom ?z2.0 \<sharp> GNil |]
      ==> ?P ; ?\<B> ; GNil  \<turnstile> \<lbrace> ?z1.0 : ?b  | [ [ ?z1.0 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ ?v\<^sub>2 ]\<^sup>c\<^sup>e  \<rbrace> \<lesssim> \<lbrace> ?z2.0 : ?b  | [ [ ?z2.0 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [#2[ [ ?v\<^sub>1 , ?v\<^sub>2 ]\<^sup>v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e  \<rbrace>",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 7),
          template_hole 12),
        template_equation
         (template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 11, template_var 6),
              template_var 7)),
          template_hole 12),
        template_predicate
         (template_app (template_hole 10, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_hole 8),
                template_app (template_hole 7, template_var 7)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_hole 8),
                template_app
                 (template_hole 6,
                  template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 11, template_var 6),
                      template_var 7)))),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4),
                  template_hole 8),
                template_app (template_hole 7, template_var 6)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)),
              template_hole 8)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_var 4),
                 template_hole 8),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 3),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 0, template_var 1))),
                   template_app (template_hole 7, template_var 7)))),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 0, template_var 0))),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 11, template_var 6),
                       template_var 7))))))
           ))),
    ("TypingL.infer_e_appP2E",
     "?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [?f [ ?b ]  ?v ]\<^sup>e \<Rightarrow> ?\<tau> ==>
      EX bv x ba c s' \<tau>'.
          ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta>  &
         Some
          (AF_fundef ?f
            (AF_fun_typ_some bv (AF_fun_typ x ba c \<tau>' s'))) =
         lookup_fun ?\<Phi> ?f &
          ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi>  &
          ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?b  &
         ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> \<lbrace> x : ba[bv::=?b]\<^sub>b\<^sub>b  | c[bv::=?b]\<^sub>c\<^sub>b \<rbrace> &
         ?\<tau> =
         \<tau>'[bv::=?b]\<^sub>\<tau>\<^sub>b[x::=?v]\<^sub>\<tau>\<^sub>v &
         atom x \<sharp> ?\<Gamma> & atom bv \<sharp> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 28, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 27, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 26, t_empty)))),
    ("TypingL.subtype_eq_e",
     "[| ALL i s1 s2 G.
             ?P ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f G  &
             ?P ; G \<turnstile> i &
            i \<lbrakk> ?e1.0 \<rbrakk> ~ s1  &
            i \<lbrakk> ?e2.0 \<rbrakk> ~ s2  -->
            s1 = s2;
         atom ?z1.0 \<sharp> ?e1.0; atom ?z2.0 \<sharp> ?e2.0;
         atom ?z1.0 \<sharp> ?\<Gamma>; atom ?z2.0 \<sharp> ?\<Gamma>;
           ?P ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?e1.0 : ?b ;
           ?P ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?e2.0 : ?b  |]
      ==> ?P ; ?\<B> ; ?\<Gamma>  \<turnstile> \<lbrace> ?z1.0 : ?b  | [ [ ?z1.0 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  ?e1.0  \<rbrace> \<lesssim> \<lbrace> ?z2.0 : ?b  | [ [ ?z2.0 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  ?e2.0  \<rbrace>",
     template_implication
      ([template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 3)),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 2)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 7, template_var 3)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 7, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 7),
                    template_var 6),
                  template_var 1),
                template_var 5),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 7),
                    template_var 6),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 7),
                   template_var 6),
                 template_var 1),
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 0),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 3))),
                   template_var 5))),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 2))),
                 template_var 4)))
           ))),
    ("TypingL.subtype_eq_e_nil",
     "[| ALL i s1 s2 G.
             ?P ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f G  &
             ?P ; G \<turnstile> i &
            i \<lbrakk> ?e1.0 \<rbrakk> ~ s1  &
            i \<lbrakk> ?e2.0 \<rbrakk> ~ s2  -->
            s1 = s2;
         supp ?e1.0 = {}; supp ?e2.0 = {};
            \<turnstile>\<^sub>w\<^sub>f ?P ;
           ?P ; ?\<B> ; GNil \<turnstile>\<^sub>w\<^sub>f ?e1.0 : ?b ;
           ?P ; ?\<B> ; GNil \<turnstile>\<^sub>w\<^sub>f ?e2.0 : ?b ;
         atom ?z1.0 \<sharp> GNil; atom ?z2.0 \<sharp> GNil |]
      ==> ?P ; ?\<B> ; GNil  \<turnstile> \<lbrace> ?z1.0 : ?b  | [ [ ?z1.0 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  ?e1.0  \<rbrace> \<lesssim> \<lbrace> ?z2.0 : ?b  | [ [ ?z2.0 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  ?e2.0  \<rbrace>",
     template_implication
      ([template_predicate (template_app (template_hole 21, t_empty)),
        template_equation
         (template_app (template_hole 11, template_var 4),
          template_hole 10),
        template_equation
         (template_app (template_hole 11, template_var 3),
          template_hole 10),
        template_predicate (template_app (template_hole 9, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 6),
                    template_var 5),
                  template_hole 7),
                template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 6),
                    template_var 5),
                  template_hole 7),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_hole 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              template_hole 7)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 6),
                   template_var 5),
                 template_hole 7),
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 2),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 1))),
                   template_var 4))),
             template_app
              (template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 0))),
                 template_var 3)))
           ))),
    ("TypingL.subtype_if",
     "[| ?P ; ?\<B> ; ?\<Gamma>  \<turnstile> \<lbrace> ?z : ?b  | ?c \<rbrace> \<lesssim> \<lbrace> ?z' : ?b  | ?c' \<rbrace>;
          ?P ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f \<lbrace> ?z1.0 : ?b  | [ ?v ]\<^sup>c\<^sup>e  ==  [ [ ?l ]\<^sup>v ]\<^sup>c\<^sup>e   IMP  ?c[?z::=[ ?z1.0 ]\<^sup>v]\<^sub>v  \<rbrace> ;
          ?P ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f \<lbrace> ?z2.0 : ?b  | [ ?v ]\<^sup>c\<^sup>e  ==  [ [ ?l ]\<^sup>v ]\<^sup>c\<^sup>e   IMP  ?c'[?z'::=[ ?z2.0 ]\<^sup>v]\<^sub>v  \<rbrace> ;
         atom ?z1.0 \<sharp> ?v; atom ?z \<sharp> ?\<Gamma>;
         atom ?z1.0 \<sharp> ?c; atom ?z2.0 \<sharp> ?c';
         atom ?z2.0 \<sharp> ?v |]
      ==> ?P ; ?\<B> ; ?\<Gamma>  \<turnstile> \<lbrace> ?z1.0 : ?b  | [ ?v ]\<^sup>c\<^sup>e  ==  [ [ ?l ]\<^sup>v ]\<^sup>c\<^sup>e   IMP  ?c[?z::=[ ?z1.0 ]\<^sup>v]\<^sub>v  \<rbrace> \<lesssim> \<lbrace> ?z2.0 : ?b  | [ ?v ]\<^sup>c\<^sup>e  ==  [ [ ?l ]\<^sup>v ]\<^sup>c\<^sup>e   IMP  ?c'[?z'::=[ ?z2.0 ]\<^sup>v]\<^sub>v  \<rbrace>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 12, template_var 11),
                    template_var 10),
                  template_var 9),
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 8),
                    template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 5),
                  template_var 7),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 11),
                  template_var 10),
                template_var 9),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 7),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app (template_hole 7, template_var 2)),
                      template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_var 1)))),
                  template_app
                   (template_app
                     (template_app (template_hole 5, template_var 6),
                      template_var 8),
                    template_app (template_hole 4, template_var 3)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 11),
                  template_var 10),
                template_var 9),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 0),
                  template_var 7),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app (template_hole 7, template_var 2)),
                      template_app
                       (template_hole 7,
                        template_app (template_hole 6, template_var 1)))),
                  template_app
                   (template_app
                     (template_app (template_hole 5, template_var 4),
                      template_var 5),
                    template_app (template_hole 4, template_var 0)))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 2, template_var 8)),
              template_var 9)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 0,
                template_app (template_hole 2, template_var 3)),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 0,
                template_app (template_hole 2, template_var 0)),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 12, template_var 11),
                   template_var 10),
                 template_var 9),
               template_app
                (template_app
                  (template_app (template_hole 11, template_var 3),
                   template_var 7),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app (template_hole 7, template_var 2)),
                       template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_var 1)))),
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 6),
                       template_var 8),
                     template_app (template_hole 4, template_var 3))))),
             template_app
              (template_app
                (template_app (template_hole 11, template_var 0),
                 template_var 7),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_var 2)),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 1)))),
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 4),
                     template_var 5),
                   template_app (template_hole 4, template_var 0)))))
           )))]
