   [("SyntaxL.rig_dom_eq",
     "Syntax.dom (?G[?x\<longmapsto>?c]) = Syntax.dom ?G",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("SyntaxL.fresh_x_neq", "atom ?x \<sharp> ?y = (?x ~= ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("SyntaxL.GCons_eq_append_conv",
     "(?x #\<^sub>\<Gamma> ?xs = ?ys @ ?zs) =
      (?ys = GNil & ?x #\<^sub>\<Gamma> ?xs = ?zs |
       (EX ys'. ?x #\<^sub>\<Gamma> ys' = ?ys & ?xs = ys' @ ?zs))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_dunno)),
    ("SyntaxL.fun_typ_flip",
     "(?bv1.0 \<leftrightarrow> ?c) \<bullet> AF_fun_typ ?x1.0 ?b1.0 ?c1.0
         ?\<tau>1.0 ?s1.0 =
      AF_fun_typ ?x1.0 ((?bv1.0 \<leftrightarrow> ?c) \<bullet> ?b1.0)
       ((?bv1.0 \<leftrightarrow> ?c) \<bullet> ?c1.0)
       ((?bv1.0 \<leftrightarrow> ?c) \<bullet> ?\<tau>1.0)
       ((?bv1.0 \<leftrightarrow> ?c) \<bullet> ?s1.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 6),
             template_var 5)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 5, template_var 6),
                     template_var 5)),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5)),
               template_var 2)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 5, template_var 6),
                 template_var 5)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, template_var 6),
               template_var 5)),
           template_var 0)))),
    ("SyntaxL.toSet_splitU",
     "((?x', ?b', ?c')
       : toSet (?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma>)) =
      ((?x', ?b', ?c')
       : toSet ?\<Gamma>' Un {(?x, ?b, ?c)} Un toSet ?\<Gamma>)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 7),
             template_app
              (template_app (template_hole 6, template_var 6),
               template_var 5))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 4),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 7, template_var 3),
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 1))),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 7),
             template_app
              (template_app (template_hole 6, template_var 6),
               template_var 5))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 5, template_var 4)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_var 1))),
                 template_hole 0))),
           template_app (template_hole 5, template_var 0))))),
    ("SyntaxL.toSet_splitP",
     "(ALL (x', b', c')
           :toSet (?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma>).
          ?P x' b' c') =
      ((ALL (x', b', c'):toSet ?\<Gamma>'. ?P x' b' c') &
       ?P ?x ?b ?c & (ALL (x', b', c'):toSet ?\<Gamma>. ?P x' b' c'))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 5),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 2))),
                 template_var 1)))),
         template_app (template_hole 2, t_empty)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 5)),
             template_app (template_hole 2, t_empty))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_var 0, template_var 4),
                 template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 1)),
             template_app (template_hole 2, t_empty))))))]
