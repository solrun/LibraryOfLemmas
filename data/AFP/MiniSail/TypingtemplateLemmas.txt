   [("Typing.infer_l_form2",
     "EX z.  \<turnstile> ?l \<Rightarrow> \<lbrace> z : base_for_lit
                    ?l  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?l ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace>",
     template_predicate (template_app (template_hole 7, t_empty))),
    ("Typing.check_fundef_elims",
     "[|  ?\<Theta> ; ?\<Phi> \<turnstile> AF_fundef ?f ?ftq ;
          ?\<Theta> ; ?\<Phi> \<turnstile> ?ftq  ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Typing.check_prog_elims",
     "[| \<turnstile> PROG ?\<Theta> ?\<Phi> ?\<G> ?s \<Leftarrow> ?\<tau>;
          ?\<Theta> ; ?\<Phi> ; {||} ; GNil ; \<Delta>_of
         ?\<G>  \<turnstile> ?s \<Leftarrow> ?\<tau> ==>
         ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_var 5),
                           template_var 4),
                         template_hole 2),
                       template_hole 1),
                     template_app (template_hole 0, template_var 3)),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Typing.infer_v_elims",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> [ ?l ]\<^sup>v \<Rightarrow> ?\<tau>;
         [|  ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma> ;
             \<turnstile> ?l \<Rightarrow> ?\<tau> |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 2, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 4),
                 template_var 3)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Typing.infer_l_elims",
     "[|  \<turnstile> L_false \<Rightarrow> ?\<tau>;
         !!z. ?\<tau> =
              \<lbrace> z : B_bool  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ L_false ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> ==>
              ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_l_elims",
     "[|  \<turnstile> L_true \<Rightarrow> ?\<tau>;
         !!z. ?\<tau> =
              \<lbrace> z : B_bool  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ L_true ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> ==>
              ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_l_elims",
     "[|  \<turnstile> L_unit \<Rightarrow> ?\<tau>;
         !!z. ?\<tau> =
              \<lbrace> z : B_unit  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ L_unit ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> ==>
              ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_l_elims",
     "[|  \<turnstile> L_bitvec ?x \<Rightarrow> ?\<tau>;
         !!z. ?\<tau> =
              \<lbrace> z : B_bitvec  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ L_bitvec
        ?x ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> ==>
              ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_l_elims",
     "[|  \<turnstile> L_num ?n \<Rightarrow> ?\<tau>;
         !!z. ?\<tau> =
              \<lbrace> z : B_int  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ L_num
     ?n ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> ==>
              ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_v_elims",
     "[| ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> ?\<tau>;
         !!\<tau>1.
            [| ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> \<tau>1 \<lesssim> ?\<tau>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<tau>1 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ ?v ]\<^sup>e \<Rightarrow> ?\<tau>;
         [|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
             ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
             ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> ?\<tau> |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 4, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 7),
                     template_var 5),
                   template_var 4),
                 template_var 3)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 1, template_var 7),
                   template_var 6)
                 )],
            template_implication
             ([template_predicate
                (
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 0, template_var 7),
                           template_var 5),
                         template_var 4),
                       template_var 2),
                     template_var 1)
                   )],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ ?u ]\<^sup>e \<Rightarrow> ?\<tau>;
         [|  ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma> ;
             ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
             ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
            (?u, ?\<tau>) : setD ?\<Delta> |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 6, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 7),
                   template_var 5),
                 template_var 4)
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 4, template_var 7),
                   template_var 6)
                 )],
            template_implication
             ([template_predicate
                (
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 7),
                         template_var 5),
                       template_var 4),
                     template_var 3)
                   )],
              template_implication
               ([template_predicate
                  (
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 2),
                           template_var 1)),
                       template_app (template_hole 0, template_var 3))
                     )],
                template_predicate (template_var 0)))))],
       template_predicate (template_var 0))),
    ("Typing.check_s_elims",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile>  ?s1.0 ;; ?s2.0  \<Leftarrow> ?\<tau>;
         !!z. [|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s1.0 \<Leftarrow> \<lbrace> z : B_unit  | TRUE \<rbrace>;
                  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s2.0 \<Leftarrow> ?\<tau> |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_s_elims",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [?v]\<^sup>s \<Leftarrow> ?\<tau>;
         !!\<tau>'.
            [|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<tau>';
               ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> \<tau>' \<lesssim> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 6, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 5, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_branch_s_elims",
     "[|  ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta> ; ?tid ; ?dclist ; ?v \<turnstile> { ?cs } \<Leftarrow> ?\<tau>;
         !!cons const.
            [| ?dclist = [(cons, const)];
                ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta> ; ?tid ; cons ; const ; ?v \<turnstile> ?cs \<Leftarrow> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 8, template_var 10),
                              template_var 9),
                            template_var 8),
                          template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 7, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_s_elims",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> WHILE ?s1.0 DO { ?s2.0 }  \<Leftarrow> ?\<tau>;
         !!z. [|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s1.0 \<Leftarrow> \<lbrace> z : B_bool  | TRUE \<rbrace>;
                  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s2.0 \<Leftarrow> \<lbrace> z : B_unit  | TRUE \<rbrace>;
                 ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> \<lbrace> z : B_unit  | TRUE \<rbrace> \<lesssim> ?\<tau> |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_funtyp_elims",
     "[|  ?\<Theta> ; ?\<Phi> ; ?B \<turnstile> ?ft ;
         !!x b c s \<tau>.
            [| ?ft = AF_fun_typ x b c \<tau> s;
               atom x \<sharp> (?\<Theta>, ?\<Phi>, ?B, b);
                ?\<Theta> ; ?\<Phi> ; ?B ; (x, b, c) #\<^sub>\<Gamma>
     GNil ; []\<^sub>\<Delta>  \<turnstile> s \<Leftarrow> \<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 18, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_funtypq_elims",
     "[|  ?\<Theta> ; ?\<Phi> \<turnstile> AF_fun_typ_none
      (AF_fun_typ ?x ?b ?c ?\<tau> ?s) ;
         !!x c t s.
            [| [[atom ?x]]lst. ((?c, ?\<tau>), ?s) =
               [[atom x]]lst. ((c, t), s);
                ?\<Theta> ; ?\<Phi> ; {||} \<turnstile> AF_fun_typ x ?b c t
                   s  |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 7),
                template_var 6),
              template_app
               (template_hole 14,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 13, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1)))
            ),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_s_elims",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?u ::= ?v \<Leftarrow> ?\<tau>;
         !!\<tau> z.
            [|  ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
               (?u, \<tau>) : setD ?\<Delta>;
               ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> \<tau>;
               ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> \<lbrace> z : B_unit  | TRUE \<rbrace> \<lesssim> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 13, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_s_elims",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> MATCH ?v WITH { ?cs } \<Leftarrow> ?\<tau>;
         !!tid dclist z.
            [|  ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta> ; tid ; dclist ; ?v \<turnstile> ?cs \<Leftarrow> ?\<tau>;
               AF_typedef tid dclist : set ?\<Theta>;
               ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> \<lbrace> z : B_id
              tid  | TRUE \<rbrace>;
                  \<turnstile>\<^sub>w\<^sub>f ?\<Theta>  |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 13, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_branch_s_elims",
     "[|  ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta> ; ?tid ; ?dclist ; ?v \<turnstile>  ?cs | ?css   \<Leftarrow> ?\<tau>;
         !!cons const dclist.
            [| ?dclist = (cons, const) # dclist;
                ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta> ; ?tid ; cons ; const ; ?v \<turnstile> ?cs \<Leftarrow> ?\<tau>;
                ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta> ; ?tid ; dclist ; ?v \<turnstile> ?css \<Leftarrow> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 8, template_var 11),
                              template_var 10),
                            template_var 9),
                          template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_v_elims",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> [ ?x ]\<^sup>v \<Rightarrow> ?\<tau>;
         !!b c z.
            [| ?\<tau> =
               \<lbrace> z : b  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?x ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace>;
                ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?\<Gamma> ;
               Some (b, c) = lookup ?\<Gamma> ?x; atom z \<sharp> ?x;
               atom z \<sharp> (?\<Theta>, ?\<B>, ?\<Gamma>) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 18, template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 17, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [| ?v |]\<^sup>e \<Rightarrow> ?\<tau>;
         !!z' c z.
            [| ?\<tau> =
               \<lbrace> z : B_int  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [| [ ?v ]\<^sup>c\<^sup>e |]\<^sup>c\<^sup>e  \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> z' : B_bitvec  | c \<rbrace>;
               atom z \<sharp> ?v; atom z \<sharp> ?\<Gamma> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 17, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 16, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_v_elims",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> [ ?v1.0 , ?v2.0 ]\<^sup>v \<Rightarrow> ?\<tau>;
         !!z t1 t2.
            [| ?\<tau> =
               \<lbrace> z : [ b_of
                                t1 , b_of
t2 ]\<^sup>b  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?v1.0 , ?v2.0 ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace>;
               atom z \<sharp> (?v1.0, ?v2.0);
               atom z \<sharp> (?\<Theta>, ?\<B>, ?\<Gamma>);
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> t1;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> t2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 16, template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 15, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [#1?v ]\<^sup>e \<Rightarrow> ?\<tau>;
         !!z' b1 b2 c z.
            [| ?\<tau> =
               \<lbrace> z : b1  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [#1[ ?v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e  \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> z' : [ b1 , b2 ]\<^sup>b  | c \<rbrace>;
               atom z \<sharp> ?v; atom z \<sharp> ?\<Gamma> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 17, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 16, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [#2?v ]\<^sup>e \<Rightarrow> ?\<tau>;
         !!z' b1 b2 c z.
            [| ?\<tau> =
               \<lbrace> z : b2  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [#2[ ?v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e  \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> z' : [ b1 , b2 ]\<^sup>b  | c \<rbrace>;
               atom z \<sharp> ?v; atom z \<sharp> ?\<Gamma> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 17, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 16, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_funtypq_elims",
     "[|  ?\<Theta> ; ?\<Phi> \<turnstile> AF_fun_typ_some ?bv
      (AF_fun_typ ?x ?b ?c ?\<tau> ?s) ;
         !!bv x b c t s.
            [| [[atom ?bv]]lst. AF_fun_typ ?x ?b ?c ?\<tau> ?s =
               [[atom bv]]lst. AF_fun_typ x b c t s;
               atom bv \<sharp> (?\<Theta>, ?\<Phi>, AF_fun_typ x b c t s);
                ?\<Theta> ; ?\<Phi> ; {|bv|} \<turnstile> AF_fun_typ x b c t
                     s  |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 19, template_var 8),
                template_var 7),
              template_app
               (template_app (template_hole 18, template_var 6),
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 17, template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1)))
            ),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_s_elims",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ASSERT ?c IN ?s  \<Leftarrow> ?\<tau>;
         !!x. [| atom
                  x \<sharp> (?\<Theta>, ?\<Phi>, ?\<B>, ?\<Gamma>,
                              ?\<Delta>, ?c, ?\<tau>, ?s);
                  ?\<Theta> ; ?\<Phi> ; ?\<B> ; (x, B_bool,
           ?c) #\<^sub>\<Gamma>
          ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s \<Leftarrow> ?\<tau>;
                  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                  ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?c ;
                 ALL i.
                     ?\<Theta> ; ?\<Gamma> \<turnstile> i &
                     i \<Turnstile> ?\<Gamma>  -->
                     i \<Turnstile> ?c  |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 23, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 22, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 21, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [| ?v |]\<^sup>e \<Rightarrow> \<lbrace> ?z : B_int  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [| [ ?v ]\<^sup>c\<^sup>e |]\<^sup>c\<^sup>e  \<rbrace>;
         !!z' c z.
            [| ALL c.
                  atom c \<sharp> (?z, ?v, z) -->
                  (?z \<leftrightarrow> c) \<bullet> ?v = ?v;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> \<lbrace> z' : B_bitvec  | c \<rbrace>;
               atom z \<sharp> ?v; atom z \<sharp> ?\<Gamma> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 24, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_app (template_hole 23, template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 22, template_var 1),
                  template_hole 21),
                template_app
                 (template_app
                   (template_hole 20,
                    template_app
                     (template_hole 19,
                      template_app (template_hole 18, template_var 1))),
                  template_app
                   (template_hole 17,
                    template_app (template_hole 19, template_var 2)))))
            ),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_v_elims",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> V_cons ?s ?dc
                ?v \<Rightarrow> ?\<tau>;
         !!dclist tc tv z.
            [| ?\<tau> =
               \<lbrace> z : B_id
                              ?s  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ V_cons
  ?s ?dc ?v ]\<^sup>c\<^sup>e  \<rbrace>;
               AF_typedef ?s dclist : set ?\<Theta>; (?dc, tc) : set dclist;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> tv;
               ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> tv \<lesssim> tc;
               atom z \<sharp> ?v;
               atom z \<sharp> (?\<Theta>, ?\<B>, ?\<Gamma>) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 22, template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 21, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 20, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ ?f  ?v  ]\<^sup>e \<Rightarrow> ?\<tau>;
         !!x b c \<tau>' s'.
            [|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
               Some
                (AF_fundef ?f
                  (AF_fun_typ_none (AF_fun_typ x b c \<tau>' s'))) =
               lookup_fun ?\<Phi> ?f;
               ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> \<lbrace> x : b  | c \<rbrace>;
               atom
                x \<sharp> (?\<Theta>, ?\<Phi>, ?\<B>, ?\<Gamma>, ?\<Delta>,
                            ?v, ?\<tau>);
               \<tau>'[x::=?v]\<^sub>v = ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 26, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 25, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 24, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ ?v1.0 @@ ?v2.0 ]\<^sup>e \<Rightarrow> ?\<tau>;
         !!z1 c1 z2 c2 z3.
            [| ?\<tau> =
               \<lbrace> z3 : B_bitvec  | [ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?v1.0 ]\<^sup>c\<^sup>e @@ [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : B_bitvec  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : B_bitvec  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 16, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 15, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ leq ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> ?\<tau>;
         !!z1 c1 z2 c2 z3.
            [| ?\<tau> =
               \<lbrace> z3 : B_bool  | [ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ leq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : B_int  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : B_int  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 18, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 17, template_hole 16),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ plus ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> ?\<tau>;
         !!z1 c1 z2 c2 z3.
            [| ?\<tau> =
               \<lbrace> z3 : B_int  | [ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ plus [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : B_int  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : B_int  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 17, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 16, template_hole 15),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_s_elims",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> VAR ?u : ?t = ?v IN ?s \<Leftarrow> ?\<tau>;
         !!u s.
            [| ALL c.
                  atom c \<sharp> (?s, s) -->
                  atom c \<sharp> (?u, u, ?s, s) -->
                  (?u \<leftrightarrow> c) \<bullet> ?s =
                  (u \<leftrightarrow> c) \<bullet> s;
               atom
                u \<sharp> (?\<Theta>, ?\<Phi>, ?\<B>, ?\<Gamma>, ?\<Delta>,
                            ?t, ?v, ?\<tau>);
               ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> ?t;
                ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; (u,
                     ?t) #\<^sub>\<Delta>
                    ?\<Delta>  \<turnstile> s \<Leftarrow> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 25, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 24, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 23, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_s_elims",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> IF ?v THEN ?s1.0 ELSE ?s2.0 \<Leftarrow> ?\<tau>;
         !!z. [| atom
                  z \<sharp> (?\<Theta>, ?\<Phi>, ?\<B>, ?\<Gamma>,
                              ?\<Delta>, ?v, ?s1.0, ?s2.0, ?\<tau>);
                 ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> \<lbrace> z : B_bool  | TRUE \<rbrace>;
                  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s1.0 \<Leftarrow> \<lbrace> z : b_of
    ?\<tau>  | [ ?v ]\<^sup>c\<^sup>e  ==  [ [ L_true ]\<^sup>v ]\<^sup>c\<^sup>e   IMP  c_of
              ?\<tau> z  \<rbrace>;
                  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s2.0 \<Leftarrow> \<lbrace> z : b_of
    ?\<tau>  | [ ?v ]\<^sup>c\<^sup>e  ==  [ [ L_false ]\<^sup>v ]\<^sup>c\<^sup>e   IMP  c_of
               ?\<tau> z  \<rbrace> |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 24, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 23, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 22, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ ?f  ?v  ]\<^sup>e \<Rightarrow> ?\<tau>[?x::=?v]\<^sub>\<tau>\<^sub>v;
         !!x b c \<tau>' s'.
            [|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
               Some
                (AF_fundef ?f
                  (AF_fun_typ_none (AF_fun_typ x b c \<tau>' s'))) =
               lookup_fun ?\<Phi> ?f;
               ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> \<lbrace> x : b  | c \<rbrace>;
               atom
                x \<sharp> (?\<Theta>, ?\<Phi>, ?\<B>, ?\<Gamma>, ?\<Delta>,
                            ?v, ?\<tau>[?x::=?v]\<^sub>\<tau>\<^sub>v);
               \<tau>'[x::=?v]\<^sub>v =
               ?\<tau>[?x::=?v]\<^sub>\<tau>\<^sub>v |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 27, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app (template_hole 26, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 25, template_var 2),
                  template_var 1),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 24, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_s_elims",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> LET ?x : ?t = ?s1.0 IN ?s2.0 \<Leftarrow> ?\<tau>;
         !!x s2.
            [| ALL c.
                  atom c \<sharp> (?s2.0, s2) -->
                  atom c \<sharp> (?x, x, ?s2.0, s2) -->
                  (?x \<leftrightarrow> c) \<bullet> ?s2.0 =
                  (x \<leftrightarrow> c) \<bullet> s2;
               atom
                x \<sharp> (?\<Theta>, ?\<Phi>, ?\<B>, ?\<Gamma>, ?\<Delta>,
                            ?t, ?s1.0, ?\<tau>);
                ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?s1.0 \<Leftarrow> ?t;
                ?\<Theta> ; ?\<Phi> ; ?\<B> ; (x, b_of ?t,
         c_of ?t x) #\<^sub>\<Gamma>
        ?\<Gamma> ; ?\<Delta>  \<turnstile> s2 \<Leftarrow> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 27, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 26, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 25, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_v_elims",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> [ ?v1.0 , ?v2.0 ]\<^sup>v \<Rightarrow> \<lbrace> ?z : [ ?b1.0 , ?b2.0 ]\<^sup>b  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?v1.0 , ?v2.0 ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace>;
         !!z t1 t2.
            [| atom z \<sharp> (?v1.0, ?v2.0);
               atom z \<sharp> (?\<Theta>, ?\<B>, ?\<Gamma>);
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> t1;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> t2;
               ALL c.
                  atom c \<sharp> (?z, ?v2.0, ?v1.0, z) -->
                  (?z \<leftrightarrow> c) \<bullet> ?v1.0 = ?v1.0 &
                  (?z \<leftrightarrow> c) \<bullet> ?v2.0 = ?v2.0;
               ?b1.0 = b_of t1; ?b2.0 = b_of t2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 26, template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app (template_hole 25, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_app (template_hole 24, template_var 3),
                  template_app
                   (template_app (template_hole 23, template_var 2),
                    template_var 1)),
                template_app
                 (template_app
                   (template_hole 22,
                    template_app
                     (template_hole 21,
                      template_app (template_hole 20, template_var 3))),
                  template_app
                   (template_hole 21,
                    template_app
                     (template_app (template_hole 25, template_var 5),
                      template_var 4)))))
            ),
        template_predicate (template_app (template_hole 19, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ eq ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> ?\<tau>;
         !!z1 b c1 z2 c2 z3.
            [| ?\<tau> =
               \<lbrace> z3 : B_bool  | [ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ eq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : b  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : b  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>;
               b = B_bool | b = B_int | b = B_unit; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 22, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 21, template_hole 20),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 19, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_v_elims",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> [ ?v1.0 , ?v2.0 ]\<^sup>v \<Rightarrow> \<lbrace> ?z : ?b  | ?c \<rbrace>;
         !!z t1 t2.
            [| atom z \<sharp> (?v1.0, ?v2.0);
               atom z \<sharp> (?\<Theta>, ?\<B>, ?\<Gamma>);
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> t1;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> t2;
               ALL c.
                  atom c \<sharp> (?c, ?v2.0, ?v1.0, z) -->
                  atom
                   c \<sharp> (?z, z, ?c,
                               [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?v1.0 , ?v2.0 ]\<^sup>v ]\<^sup>c\<^sup>e ) -->
                  ?c[?z::=[ c ]\<^sup>v]\<^sub>c\<^sub>v =
                  ([ [ c ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?v1.0 , ?v2.0 ]\<^sup>v ]\<^sup>c\<^sup>e );
               ?b = [ b_of t1 , b_of t2 ]\<^sup>b |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 28, template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app (template_hole 27, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_app (template_hole 26, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 25, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_v_elims",
     "[|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> V_consp ?s ?dc ?b
                ?v \<Rightarrow> ?\<tau>;
         !!bv dclist tc tv z.
            [| ?\<tau> =
               \<lbrace> z : B_app ?s
                              ?b  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ V_consp
  ?s ?dc ?b ?v ]\<^sup>c\<^sup>e  \<rbrace>;
               AF_typedef_poly ?s bv dclist : set ?\<Theta>;
               (?dc, tc) : set dclist;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v \<Rightarrow> tv;
               ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> tv \<lesssim> tc[bv::=?b]\<^sub>\<tau>\<^sub>b;
               atom z \<sharp> (?\<Theta>, ?\<B>, ?\<Gamma>, ?v, ?b);
               atom bv \<sharp> (?\<Theta>, ?\<B>, ?\<Gamma>, ?v, ?b);
                ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?b  |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 27, template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 26, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 25, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [?f [ ?b ]  ?v ]\<^sup>e \<Rightarrow> ?\<tau>;
         !!bv x b c \<tau>' s'.
            [|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B>  \<turnstile>\<^sub>w\<^sub>f ?b ;
               Some
                (AF_fundef ?f
                  (AF_fun_typ_some bv (AF_fun_typ x b c \<tau>' s'))) =
               lookup_fun ?\<Phi> ?f;
               ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v \<Leftarrow> \<lbrace> x : b[bv::=?b]\<^sub>b  | c[bv::=?b]\<^sub>b \<rbrace>;
               atom x \<sharp> ?\<Gamma>;
               \<tau>'[bv::=?b]\<^sub>b[x::=?v]\<^sub>v = ?\<tau>;
               atom
                bv \<sharp> (?\<Theta>, ?\<Phi>, ?\<B>, ?\<Gamma>,
                             ?\<Delta>, ?b, ?v, ?\<tau>) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 34, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 33, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 32, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ ?v1.0 @@ ?v2.0 ]\<^sup>e \<Rightarrow> \<lbrace> ?z : B_bitvec  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?v1.0 ]\<^sup>c\<^sup>e @@ [ ?v1.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace>;
         !!z1 c1 z2 c2 z3.
            [| ALL c.
                  atom c \<sharp> (?z, ?v2.0, ?v1.0, z3) -->
                  (?z \<leftrightarrow> c) \<bullet> ?v1.0 = ?v1.0 &
                  (?z \<leftrightarrow> c) \<bullet> ?v1.0 = ?v2.0;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : B_bitvec  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : B_bitvec  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 25, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 24, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 23, template_var 1),
                  template_hole 22),
                template_app
                 (template_app
                   (template_hole 21,
                    template_app
                     (template_hole 20,
                      template_app (template_hole 19, template_var 1))),
                  template_app
                   (template_app
                     (template_hole 18,
                      template_app (template_hole 20, template_var 3)),
                    template_app (template_hole 20, template_var 3)))))
            ),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ leq ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> \<lbrace> ?z3.0 : B_bool  | [ [ ?z3.0 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ leq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace>;
         !!z1 c1 z2 c2 z3.
            [| ALL c.
                  atom c \<sharp> (?z3.0, ?v2.0, ?v1.0, z3) -->
                  (?z3.0 \<leftrightarrow> c) \<bullet> ?v1.0 = ?v1.0 &
                  (?z3.0 \<leftrightarrow> c) \<bullet> ?v2.0 = ?v2.0;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : B_int  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : B_int  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 27, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 26, template_hole 25),
                    template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 24, template_var 1),
                  template_hole 23),
                template_app
                 (template_app
                   (template_hole 22,
                    template_app
                     (template_hole 21,
                      template_app (template_hole 20, template_var 1))),
                  template_app
                   (template_app
                     (template_app (template_hole 19, template_hole 25),
                      template_app (template_hole 21, template_var 3)),
                    template_app (template_hole 21, template_var 2)))))
            ),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ plus ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> \<lbrace> ?z3.0 : B_int  | [ [ ?z3.0 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ plus [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace>;
         !!z1 c1 z2 c2 z3.
            [| ALL c.
                  atom c \<sharp> (?z3.0, ?v2.0, ?v1.0, z3) -->
                  (?z3.0 \<leftrightarrow> c) \<bullet> ?v1.0 = ?v1.0 &
                  (?z3.0 \<leftrightarrow> c) \<bullet> ?v2.0 = ?v2.0;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : B_int  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : B_int  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 26, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 25, template_hole 24),
                    template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 23, template_var 1),
                  template_hole 22),
                template_app
                 (template_app
                   (template_hole 21,
                    template_app
                     (template_hole 20,
                      template_app (template_hole 19, template_var 1))),
                  template_app
                   (template_app
                     (template_app (template_hole 18, template_hole 24),
                      template_app (template_hole 20, template_var 3)),
                    template_app (template_hole 20, template_var 2)))))
            ),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_s_elims",
     "[|  ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> LET ?x = ?e IN ?s \<Leftarrow> ?\<tau>;
         !!x z s b c.
            [| ALL c.
                  atom c \<sharp> (?s, s) -->
                  atom c \<sharp> (?x, x, ?s, s) -->
                  (?x \<leftrightarrow> c) \<bullet> ?s =
                  (x \<leftrightarrow> c) \<bullet> s;
               atom
                x \<sharp> (?\<Theta>, ?\<Phi>, ?\<B>, ?\<Gamma>, ?\<Delta>,
                            ?e, ?\<tau>);
               atom
                z \<sharp> (x, ?\<Theta>, ?\<Phi>, ?\<B>, ?\<Gamma>,
                            ?\<Delta>, ?e, ?\<tau>, s);
               ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> ?e \<Rightarrow> \<lbrace> z : b  | c \<rbrace>;
                ?\<Theta> ; ?\<Phi> ; ?\<B> ; (x, b,
         c[z::=[ x ]\<^sup>v]\<^sub>v) #\<^sub>\<Gamma>
        ?\<Gamma> ; ?\<Delta>  \<turnstile> s \<Leftarrow> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 39, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 38, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 37, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ leq ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> \<lbrace> ?z3.0 : B_bool  | ?c \<rbrace>;
         !!z1 c1 z2 c2 z3.
            [| ALL c.
                  atom c \<sharp> (?c, ?v2.0, ?v1.0, z3) -->
                  atom
                   c \<sharp> (?z3.0, z3, ?c,
                               [ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ leq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e ) -->
                  ?c[?z3.0::=[ c ]\<^sup>v]\<^sub>c\<^sub>v =
                  ([ [ c ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ leq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e );
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : B_int  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : B_int  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 29, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 28, template_hole 27),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 26, template_var 2),
                  template_hole 25),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 24, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ plus ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> \<lbrace> ?z3.0 : B_int  | ?c \<rbrace>;
         !!z1 c1 z2 c2 z3.
            [| ALL c.
                  atom c \<sharp> (?c, ?v2.0, ?v1.0, z3) -->
                  atom
                   c \<sharp> (?z3.0, z3, ?c,
                               [ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ plus [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e ) -->
                  ?c[?z3.0::=[ c ]\<^sup>v]\<^sub>c\<^sub>v =
                  ([ [ c ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ plus [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e );
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : B_int  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : B_int  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 28, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 27, template_hole 26),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 25, template_var 2),
                  template_hole 24),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 23, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_l_elims",
     "[|  \<turnstile> ?l \<Rightarrow> ?\<tau>;
         !!z. [| ?l = L_true;
                 ?\<tau> =
                 \<lbrace> z : B_bool  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ L_true ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> |]
              ==> ?P;
         !!z. [| ?l = L_false;
                 ?\<tau> =
                 \<lbrace> z : B_bool  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ L_false ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> |]
              ==> ?P;
         !!n z.
            [| ?l = L_num n;
               ?\<tau> =
               \<lbrace> z : B_int  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ L_num
      n ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> |]
            ==> ?P;
         !!z. [| ?l = L_unit;
                 ?\<tau> =
                 \<lbrace> z : B_unit  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ L_unit ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> |]
              ==> ?P;
         !!bv z.
            [| ?l = L_bitvec bv;
               ?\<tau> =
               \<lbrace> z : B_bitvec  | [ [ z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ L_bitvec
         bv ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ ?v1.0 @@ ?v2.0 ]\<^sup>e \<Rightarrow> \<lbrace> ?z : ?b  | ?c \<rbrace>;
         !!z1 c1 z2 c2 z3.
            [|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : B_bitvec  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : B_bitvec  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>;
               ALL c.
                  atom c \<sharp> (?c, ?v2.0, ?v1.0, z3) -->
                  atom
                   c \<sharp> (?z, z3, ?c,
                               [ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?v1.0 ]\<^sup>c\<^sup>e @@ [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e ) -->
                  ?c[?z::=[ c ]\<^sup>v]\<^sub>c\<^sub>v =
                  ([ [ c ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?v1.0 ]\<^sup>c\<^sup>e @@ [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e );
               ?b = B_bitvec; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 28, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app (template_hole 27, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_app (template_hole 26, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 25, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.subtype_elims",
     "[| ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?\<tau>\<^sub>1 \<lesssim> ?\<tau>\<^sub>2;
         !!x z c z' c' b.
            [| ?\<tau>\<^sub>1 = \<lbrace> z : b  | c \<rbrace>;
               ?\<tau>\<^sub>2 = \<lbrace> z' : b  | c' \<rbrace>;
               atom x \<sharp> (?\<Theta>, ?\<B>, ?\<Gamma>, z, c, z', c');
                ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f \<lbrace> z : b  | c \<rbrace> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f \<lbrace> z' : b  | c' \<rbrace> ;
                ?\<Theta> ; ?\<B> ; (x, b,
                                     c[z::=[ x ]\<^sup>v]\<^sub>v) #\<^sub>\<Gamma>
                                    ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f c'[z'::=[ x ]\<^sup>v]\<^sub>v ;
               ALL i.
                   ?\<Theta> ; (x, b,
                                c[z::=[ x ]\<^sup>v]\<^sub>v) #\<^sub>\<Gamma>
                               ?\<Gamma> \<turnstile> i &
                   i \<Turnstile> c[z::=[ x ]\<^sup>v]\<^sub>v  &
                   i \<Turnstile> ?\<Gamma>  -->
                   i \<Turnstile> c'[z'::=[ x ]\<^sup>v]\<^sub>v  |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 26, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 25, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ leq ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> \<lbrace> ?z3.0 : ?b  | ?c \<rbrace>;
         !!z1 c1 z2 c2 z3.
            [|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : B_int  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : B_int  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>;
               ALL c.
                  atom c \<sharp> (?c, ?v2.0, ?v1.0, z3) -->
                  atom
                   c \<sharp> (?z3.0, z3, ?c,
                               [ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ leq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e ) -->
                  ?c[?z3.0::=[ c ]\<^sup>v]\<^sub>c\<^sub>v =
                  ([ [ c ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ leq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e );
               ?b = B_bool; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 30, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 29, template_hole 28),
                    template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_app (template_hole 27, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 26, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ plus ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> \<lbrace> ?z3.0 : ?b  | ?c \<rbrace>;
         !!z1 c1 z2 c2 z3.
            [|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : B_int  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : B_int  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>;
               ALL c.
                  atom c \<sharp> (?c, ?v2.0, ?v1.0, z3) -->
                  atom
                   c \<sharp> (?z3.0, z3, ?c,
                               [ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ plus [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e ) -->
                  ?c[?z3.0::=[ c ]\<^sup>v]\<^sub>c\<^sub>v =
                  ([ [ c ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ plus [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e );
               ?b = B_int; atom z3 \<sharp> ?v1.0; atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 29, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 28, template_hole 27),
                    template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_app (template_hole 26, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 25, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.check_branch_s_elims",
     "[|  ?\<Theta> ;  ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta> ; ?tid ; ?cons ; ?const ; ?v \<turnstile>  ?dc ?x \<Rightarrow> ?s  \<Leftarrow> ?\<tau>;
         !!x s.
            [| ?cons = ?dc;
               ALL c.
                  atom c \<sharp> (?s, s) -->
                  atom c \<sharp> (?x, x, ?s, s) -->
                  (?x \<leftrightarrow> c) \<bullet> ?s =
                  (x \<leftrightarrow> c) \<bullet> s;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                  \<turnstile>\<^sub>w\<^sub>f ?\<Theta> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f ?\<tau> ;
                ?\<Theta> ; {||} ; GNil   \<turnstile>\<^sub>w\<^sub>f ?const ;
               atom
                x \<sharp> (?\<Theta>, ?\<Phi>, ?\<B>, ?\<Gamma>, ?\<Delta>,
                            ?tid, ?dc, ?const, ?v, ?\<tau>);
                ?\<Theta> ; ?\<Phi> ; ?\<B> ; (x, b_of ?const,
         [ ?v ]\<^sup>c\<^sup>e  ==  [ V_cons ?tid ?dc
  [ x ]\<^sup>v ]\<^sup>c\<^sup>e   AND  c_of ?const x ) #\<^sub>\<Gamma>
        ?\<Gamma> ; ?\<Delta>  \<turnstile> s \<Leftarrow> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 41, template_var 13),
                                template_var 12),
                              template_var 11),
                            template_var 10),
                          template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 40, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 39, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ eq ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> \<lbrace> ?z3.0 : B_bool  | ?c \<rbrace>;
         !!z1 b c1 z2 c2 z3.
            [| ALL c.
                  atom c \<sharp> (?c, ?v2.0, ?v1.0, z3) -->
                  atom
                   c \<sharp> (?z3.0, z3, ?c,
                               [ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ eq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e ) -->
                  ?c[?z3.0::=[ c ]\<^sup>v]\<^sub>c\<^sub>v =
                  ([ [ c ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ eq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e );
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : b  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : b  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>;
               b = B_bool | b = B_int | b = B_unit; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 33, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 32, template_hole 31),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 30, template_var 2),
                  template_hole 29),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 28, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ eq ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> \<lbrace> ?z3.0 : ?b  | ?c \<rbrace>;
         !!z1 b c1 z2 c2 z3.
            [|  ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : b  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : b  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>;
               b = B_bool | b = B_int | b = B_unit;
               ALL c.
                  atom c \<sharp> (?c, ?v2.0, ?v1.0, z3) -->
                  atom
                   c \<sharp> (?z3.0, z3, ?c,
                               [ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ eq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e ) -->
                  ?c[?z3.0::=[ c ]\<^sup>v]\<^sub>c\<^sub>v =
                  ([ [ c ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ eq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e );
               ?b = B_bool; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 33, template_var 10),
                        template_var 9),
                      template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 32, template_hole 31),
                    template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_app (template_hole 30, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 29, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ ?v1.0 
         ?v2.0 ]\<^sup>e \<Rightarrow> ?\<tau>;
         !!z1 c1 z2 z3.
            [| ?\<tau> =
               \<lbrace> z3 : [ B_bitvec , B_bitvec ]\<^sup>b  | [ ?v1.0 ]\<^sup>c\<^sup>e  ==  [ [#1[ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e @@ [#2[ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e   AND  [| [#1[ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e]\<^sup>c\<^sup>e |]\<^sup>c\<^sup>e  ==  [ ?v2.0 ]\<^sup>c\<^sup>e   \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : B_bitvec  | c1 \<rbrace>;
               ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> ?v2.0 \<Leftarrow> \<lbrace> z2 : B_int  | [ leq [ [ L_num
                                     0 ]\<^sup>v ]\<^sup>c\<^sup>e [ [ z2 ]\<^sup>v ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  ==  [ [ L_true ]\<^sup>v ]\<^sup>c\<^sup>e   AND  [ leq [ [ z2 ]\<^sup>v ]\<^sup>c\<^sup>e [| [ ?v1.0 ]\<^sup>c\<^sup>e |]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  ==  [ [ L_true ]\<^sup>v ]\<^sup>c\<^sup>e   \<rbrace>;
               atom z1 \<sharp> ?\<Gamma>; atom z2 \<sharp> ?\<Gamma>;
               atom z3 \<sharp> ?\<Gamma>; atom z1 \<sharp> ?v1.0;
               atom z1 \<sharp> ?v2.0; atom z2 \<sharp> ?v1.0;
               atom z2 \<sharp> ?v2.0; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 29, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_app
                 (template_app (template_hole 28, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 27, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.subtype_elims",
     "[| ?\<Theta> ; ?\<B> ; ?\<Gamma>  \<turnstile> \<lbrace> ?z : ?b  | ?c \<rbrace> \<lesssim> \<lbrace> ?z' : ?b  | ?c' \<rbrace>;
         !!x z c z' c'.
            [| ALL ca.
                  atom ca \<sharp> (?c, c) -->
                  atom ca \<sharp> (?z, z, ?c, c) -->
                  ?c[?z::=[ ca ]\<^sup>v]\<^sub>c\<^sub>v =
                  c[z::=[ ca ]\<^sup>v]\<^sub>c\<^sub>v;
               ALL c.
                  atom c \<sharp> (?c', c') -->
                  atom c \<sharp> (?z', z', ?c', c') -->
                  ?c'[?z'::=[ c ]\<^sup>v]\<^sub>c\<^sub>v =
                  c'[z'::=[ c ]\<^sup>v]\<^sub>c\<^sub>v;
               atom x \<sharp> (?\<Theta>, ?\<B>, ?\<Gamma>, z, c, z', c');
                ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f \<lbrace> z : ?b  | c \<rbrace> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f \<lbrace> z' : ?b  | c' \<rbrace> ;
                ?\<Theta> ; ?\<B> ; (x, ?b,
                                     c[z::=[ x ]\<^sup>v]\<^sub>v) #\<^sub>\<Gamma>
                                    ?\<Gamma>   \<turnstile>\<^sub>w\<^sub>f c'[z'::=[ x ]\<^sup>v]\<^sub>v ;
               ALL i.
                   ?\<Theta> ; (x, ?b,
                                c[z::=[ x ]\<^sup>v]\<^sub>v) #\<^sub>\<Gamma>
                               ?\<Gamma> \<turnstile> i &
                   i \<Turnstile> c[z::=[ x ]\<^sup>v]\<^sub>v  &
                   i \<Turnstile> ?\<Gamma>  -->
                   i \<Turnstile> c'[z'::=[ x ]\<^sup>v]\<^sub>v  |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 32, template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 31, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 31, template_var 2),
                  template_var 4),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 30, t_empty))],
       template_predicate (template_var 0))),
    ("Typing.infer_e_elims",
     "[| ?\<Theta> ; ?\<Phi> ; ?\<B> ; ?\<Gamma> ; ?\<Delta>  \<turnstile> [ ?opp ?v1.0 ?v2.0 ]\<^sup>e \<Rightarrow> ?\<tau>;
         !!z1 c1 z2 c2 z3.
            [| ?opp = plus;
               ?\<tau> =
               \<lbrace> z3 : B_int  | [ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ plus [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : B_int  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : B_int  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P;
         !!z1 c1 z2 c2 z3.
            [| ?opp = leq;
               ?\<tau> =
               \<lbrace> z3 : B_bool  | [ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ leq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : B_int  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : B_int  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P;
         !!z1 b c1 z2 c2 z3.
            [| ?opp = eq;
               ?\<tau> =
               \<lbrace> z3 : B_bool  | [ [ z3 ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ eq [ ?v1.0 ]\<^sup>c\<^sup>e [ ?v2.0 ]\<^sup>c\<^sup>e ]\<^sup>c\<^sup>e  \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile>\<^sub>w\<^sub>f ?\<Delta> ;
                ?\<Theta>  \<turnstile>\<^sub>w\<^sub>f ?\<Phi> ;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v1.0 \<Rightarrow> \<lbrace> z1 : b  | c1 \<rbrace>;
                ?\<Theta> ; ?\<B> ; ?\<Gamma> \<turnstile> ?v2.0 \<Rightarrow> \<lbrace> z2 : b  | c2 \<rbrace>;
               atom z3 \<sharp> ?\<Gamma>;
               b = B_bool | b = B_int | b = B_unit; atom z3 \<sharp> ?v1.0;
               atom z3 \<sharp> ?v2.0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 25, template_var 9),
                        template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 24, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate (template_app (template_hole 23, t_empty))],
       template_predicate (template_var 0)))]
