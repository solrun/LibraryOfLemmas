   [("SyntaxL.u_fresh_c", "atom ?u \<sharp> ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("SyntaxL.u_fresh_v", "atom ?u \<sharp> ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("SyntaxL.u_fresh_ce", "atom ?u \<sharp> ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("SyntaxL.u_fresh_t", "atom ?u \<sharp> ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("SyntaxL.u_fresh_g", "atom ?u \<sharp> ?t",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)
         )),
    ("SyntaxL.rig_dom_eq",
     "Syntax.dom (?G[?x\<longmapsto>?c]) = Syntax.dom ?G",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("SyntaxL.fresh_x_neq", "atom ?x \<sharp> ?y = (?x ~= ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("SyntaxL.supp_list_member", "?x : set ?l ==> supp ?x <= supp ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SyntaxL.bv_not_in_bset_supp",
     "?bv |\<notin>| ?B ==> atom ?bv ~: supp ?B",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 0, template_var 0))
               )
           ))),
    ("SyntaxL.lookup_not_empty",
     "Some ?\<tau> = lookup ?G ?x ==> ?G ~= GNil",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("SyntaxL.fresh_d_fst_d",
     "atom ?u \<sharp> ?\<delta> ==> ?u ~: fst ` set ?\<delta>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 0, template_var 0)))
               )
           ))),
    ("SyntaxL.u_fresh_d", "atom ?u \<sharp> ?D ==> ?u ~: fst ` setD ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 0, template_var 0)))
               )
           ))),
    ("SyntaxL.fresh_d_not_in",
     "atom ?u2.0 \<sharp> ?\<Delta>' ==> ?u2.0 ~: fst ` setD ?\<Delta>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_var 0)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_app (template_hole 0, template_var 0)))
               )
           ))),
    ("SyntaxL.GNil_append",
     "GNil = ?G1.0 @ ?G2.0 ==> ?G1.0 = GNil & ?G2.0 = GNil",
     template_implication
      ([template_equation
         (template_hole 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2))
           ))),
    ("SyntaxL.b_of_c_of_eq",
     "atom ?z \<sharp> ?\<tau> ==>
      \<lbrace> ?z : b_of ?\<tau>  | c_of ?\<tau> ?z \<rbrace> = ?\<tau>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("SyntaxL.lookup_fun_member",
     "Some (AF_fundef ?f ?ft) = lookup_fun ?\<Phi> ?f ==>
      AF_fundef ?f ?ft : set ?\<Phi>",
     template_implication
      ([template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("SyntaxL.lookup_x",
     "Some (?b, ?c) = lookup ?G ?x ==> ?x : fst ` toSet ?G",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("SyntaxL.split_G",
     "?x : toSet ?xs ==> EX ys zs. ?xs = ys @ ?x #\<^sub>\<Gamma> zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("SyntaxL.exist_fresh_bv",
     "EX bva2 dclist2.
         AF_typedef_poly ?tyid ?bva ?dclist =
         AF_typedef_poly ?tyid bva2 dclist2 &
         atom bva2 \<sharp> ?tm",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("SyntaxL.lookup_in_g",
     "Some (?b, ?c) = lookup ?\<Gamma> ?x ==>
      (?x, ?b, ?c) : toSet ?\<Gamma>",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 2))),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SyntaxL.lookup_in_rig_eq",
     "Some (?b, ?c) = lookup ?\<Gamma> ?x ==>
      Some (?b, ?c') = lookup (?\<Gamma>[?x\<longmapsto>?c']) ?x",
     template_implication
      ([template_equation
         (template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3)),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 4),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 1)))),
    ("SyntaxL.GCons_eq_appendI",
     "[| ?x #\<^sub>\<Gamma> ?xs1.0 = ?ys; ?xs = ?xs1.0 @ ?zs |]
      ==> ?x #\<^sub>\<Gamma> ?xs = ?ys @ ?zs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 4), template_var 3),
          template_var 2),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("SyntaxL.supp_v_tau",
     "atom ?z \<sharp> ?v ==>
      supp
       \<lbrace> ?z : ?b  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ ?v ]\<^sup>c\<^sup>e  \<rbrace> =
      supp ?v Un supp ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 2)),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 2))),
               template_app (template_hole 4, template_var 1)))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("SyntaxL.lookup_in_rig",
     "Some (?b, ?c) = lookup ?\<Gamma> ?y ==>
      EX c''. Some (?b, c'') = lookup (?\<Gamma>[?x\<longmapsto>?c']) ?y",
     template_implication
      ([template_equation
         (template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 5),
              template_var 4)),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("SyntaxL.fun_arg_unique_aux",
     "AF_fun_typ ?x1.0 ?b1.0 ?c1.0 ?\<tau>1' ?s1' =
      AF_fun_typ ?x2.0 ?b2.0 ?c2.0 ?\<tau>2' ?s2' ==>
      \<lbrace> ?x1.0 : ?b1.0  | ?c1.0 \<rbrace> =
      \<lbrace> ?x2.0 : ?b2.0  | ?c2.0 \<rbrace>",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 9),
                  template_var 8),
                template_var 7),
              template_var 6),
            template_var 5),
          template_app
           (template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 9),
             template_var 8),
           template_var 7),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 3),
           template_var 2)))),
    ("SyntaxL.obtain_fresh_bv",
     "(!!bva2 dclist2.
          AF_typedef_poly ?tyid ?bva ?dclist =
          AF_typedef_poly ?tyid bva2 dclist2 &
          atom bva2 \<sharp> ?tm ==>
          ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("SyntaxL.supp_v_var_tau",
     "?z ~= ?x ==>
      supp
       \<lbrace> ?z : ?b  | [ [ ?z ]\<^sup>v ]\<^sup>c\<^sup>e  ==  [ [ ?x ]\<^sup>v ]\<^sup>c\<^sup>e  \<rbrace> =
      {atom ?x} Un supp ?b",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1))],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 2),
               template_var 0),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 2))),
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 1))))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_hole 1)),
           template_app (template_hole 0, template_var 0))))),
    ("SyntaxL.lookup_inside",
     "?x ~: fst ` toSet ?\<Gamma>' ==>
      Some (?b1.0, ?c1.0) =
      lookup (?\<Gamma>' @ (?x, ?b1.0, ?c1.0) #\<^sub>\<Gamma> ?\<Gamma>)
       ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_app (template_hole 7, template_var 3)))
                )
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_app
                      (template_app (template_hole 4, template_var 2),
                       template_var 1))),
                 template_var 0))),
           template_var 4)))),
    ("SyntaxL.lookup_split",
     "Some (?b, ?c) = lookup ?\<Gamma> ?x ==>
      EX G G'. ?\<Gamma> = G' @ (?x, ?b, ?c) #\<^sub>\<Gamma> G",
     template_implication
      ([template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("SyntaxL.lookup_in_rig_neq",
     "[| Some (?b, ?c) = lookup ?\<Gamma> ?y; ?x ~= ?y |]
      ==> Some (?b, ?c) = lookup (?\<Gamma>[?x\<longmapsto>?c']) ?y",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 5),
              template_var 4)),
          template_app
           (template_app (template_hole 3, template_var 3),
            template_var 2)),
        template_negation
         (template_equation (template_var 1, template_var 2))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 5),
             template_var 4)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 0)),
           template_var 2)))),
    ("SyntaxL.lookup_options",
     "Some (?b, ?c) = lookup (?xt #\<^sub>\<Gamma> ?G) ?x ==>
      (?x, ?b, ?c) = ?xt | Some (?b, ?c) = lookup ?G ?x",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1)),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_app
                      (template_app (template_hole 5, template_var 4),
                       template_var 3))),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 4),
                     template_var 3))),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)))
           ))),
    ("SyntaxL.dclist_distinct_unique",
     "[| (?dc, ?const) : set ?dclist2.0;
         (?cons, ?const1.0) : set ?dclist2.0; ?dc = ?cons;
         distinct (map fst ?dclist2.0) |]
      ==> ?const = ?const1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_app (template_hole 5, template_var 2))
            ),
        template_equation (template_var 4, template_var 1),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 2))
            )],
       template_equation (template_var 3, template_var 0))),
    ("SyntaxL.GCons_eq_append_conv",
     "(?x #\<^sub>\<Gamma> ?xs = ?ys @ ?zs) =
      (?ys = GNil & ?x #\<^sub>\<Gamma> ?xs = ?zs |
       (EX ys'. ?x #\<^sub>\<Gamma> ys' = ?ys & ?xs = ys' @ ?zs))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_hole 1)),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 3),
                       template_var 2)),
                   template_var 0))),
             template_app (template_hole 0, t_empty))
           ))),
    ("SyntaxL.fun_typ_flip",
     "(?bv1.0 \<leftrightarrow> ?c) \<bullet> AF_fun_typ ?x1.0 ?b1.0 ?c1.0
         ?\<tau>1.0 ?s1.0 =
      AF_fun_typ ?x1.0 ((?bv1.0 \<leftrightarrow> ?c) \<bullet> ?b1.0)
       ((?bv1.0 \<leftrightarrow> ?c) \<bullet> ?c1.0)
       ((?bv1.0 \<leftrightarrow> ?c) \<bullet> ?\<tau>1.0)
       ((?bv1.0 \<leftrightarrow> ?c) \<bullet> ?s1.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 6),
             template_var 5)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 5, template_var 6),
                     template_var 5)),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5)),
               template_var 2)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 5, template_var 6),
                 template_var 5)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, template_var 6),
               template_var 5)),
           template_var 0)))),
    ("SyntaxL.obtain_fresh_z3",
     "(!!z. \<lbrace> ?x : ?b  | ?c \<rbrace> =
            \<lbrace> z : ?b  | ?c[?x::=[ z ]\<^sup>v]\<^sub>c\<^sub>v \<rbrace> &
            atom z \<sharp> ?tm & atom z \<sharp> (?x, ?c) ==>
            ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0))),
    ("SyntaxL.lookup_restrict",
     "[| Some (?b', ?c') =
         lookup (?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma>) ?y;
         ?x ~= ?y |]
      ==> Some (?b', ?c') = lookup (?\<Gamma>' @ ?\<Gamma>) ?y",
     template_implication
      ([template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 7),
              template_var 6)),
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 5),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 4),
                      template_app
                       (template_app (template_hole 6, template_var 3),
                        template_var 2))),
                  template_var 1))),
            template_var 0)),
        template_negation
         (template_equation (template_var 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 7),
             template_var 6)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 5),
               template_var 1)),
           template_var 0)))),
    ("SyntaxL.toSet_splitU",
     "((?x', ?b', ?c')
       : toSet (?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma>)) =
      ((?x', ?b', ?c')
       : toSet ?\<Gamma>' Un {(?x, ?b, ?c)} Un toSet ?\<Gamma>)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 7),
             template_app
              (template_app (template_hole 6, template_var 6),
               template_var 5))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 4),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 7, template_var 3),
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 1))),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 7),
             template_app
              (template_app (template_hole 6, template_var 6),
               template_var 5))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 5, template_var 4)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_app
                      (template_app (template_hole 6, template_var 2),
                       template_var 1))),
                 template_hole 0))),
           template_app (template_hole 5, template_var 0))))),
    ("SyntaxL.lookup_inside2",
     "[| Some (?b1.0, ?c1.0) =
         lookup (?\<Gamma>' @ (?x, ?b0.0, ?c0.0) #\<^sub>\<Gamma> ?\<Gamma>)
          ?y;
         ?x ~= ?y |]
      ==> Some (?b1.0, ?c1.0) =
          lookup (?\<Gamma>' @ (?x, ?b0.0, ?c0') #\<^sub>\<Gamma> ?\<Gamma>)
           ?y",
     template_implication
      ([template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 8),
              template_var 7)),
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 4, template_var 6),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_app
                       (template_app (template_hole 6, template_var 4),
                        template_var 3))),
                  template_var 2))),
            template_var 1)),
        template_negation
         (template_equation (template_var 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 8),
             template_var 7)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 6),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 5),
                     template_app
                      (template_app (template_hole 6, template_var 4),
                       template_var 0))),
                 template_var 2))),
           template_var 1)))),
    ("SyntaxL.toSet_splitP",
     "(ALL (x', b', c')
           :toSet (?\<Gamma>' @ (?x, ?b, ?c) #\<^sub>\<Gamma> ?\<Gamma>).
          ?P x' b' c') =
      ((ALL (x', b', c'):toSet ?\<Gamma>'. ?P x' b' c') &
       ?P ?x ?b ?c & (ALL (x', b', c'):toSet ?\<Gamma>. ?P x' b' c'))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 5),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 2))),
                 template_var 1)))),
         template_app (template_hole 2, t_empty)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 5)),
             template_app (template_hole 2, t_empty))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_var 0, template_var 4),
                 template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_hole 8,
               template_app (template_hole 7, template_var 1)),
             template_app (template_hole 2, t_empty))))))]
