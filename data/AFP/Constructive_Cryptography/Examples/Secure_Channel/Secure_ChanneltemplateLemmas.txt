   [("Secure_Channel.bound_enc",
     "interaction_any_bounded_converter (cipher.enc (enc ?\<eta>))
       (enat 2)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))))
         )),
    ("Secure_Channel.bound_dec",
     "interaction_any_bounded_converter (cipher.dec (dec ?\<eta>))
       (enat 2)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))))
         )),
    ("Secure_Channel.WT_enc",
     "\<I>_uniform (nlists UNIV ?\<eta>) UNIV,
      \<I>_uniform UNIV (nlists UNIV ?\<eta>) \<oplus>\<^sub>\<I>
      \<I>_uniform (vld ?\<eta>) UNIV \<turnstile>\<^sub>C
      cipher.enc (enc ?\<eta>) \<surd>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_var 0)),
                 template_hole 5)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 5),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 2, template_var 0)),
                 template_hole 5))),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Secure_Channel.plossless_enc",
     "plossless_converter (\<I>_uniform (nlists UNIV ?\<eta>) UNIV)
       (\<I>_uniform UNIV (nlists UNIV ?\<eta>) \<oplus>\<^sub>\<I>
        \<I>_uniform (nlists UNIV ?\<eta>) UNIV)
       (cipher.enc (enc ?\<eta>))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 0)),
                 template_hole 4)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 4),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 0)),
                 template_hole 4))),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Secure_Channel.callee_invariant_on_key_oracle",
     "callee_invariant_on
       (key.key_oracle (key ?\<eta>) \<oplus>\<^sub>O
        key.key_oracle (key ?\<eta>))
       (%x. case x of None => True | Some x' => length x' = ?\<eta>)
       (\<I>_uniform UNIV (nlists UNIV ?\<eta>) \<oplus>\<^sub>\<I>
        \<I>_full)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_hole 11,
                     template_app (template_hole 10, template_var 0))),
                 template_app
                  (template_hole 11,
                   template_app (template_hole 10, template_var 0)))),
             t_empty),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 0))),
             template_hole 0))
         )),
    ("Secure_Channel.WT_dec",
     "\<I>_uniform UNIV (insert None (Some ` nlists UNIV ?\<eta>)),
      \<I>_uniform UNIV (nlists UNIV ?\<eta>) \<oplus>\<^sub>\<I>
      \<I>_uniform UNIV
       (insert None (Some ` vld ?\<eta>)) \<turnstile>\<^sub>C
      cipher.dec (dec ?\<eta>) \<surd>",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 12, template_hole 11),
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_var 0))))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 11),
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 0))),
               template_app
                (template_app (template_hole 12, template_hole 11),
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     template_app (template_hole 2, template_var 0)))))),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Secure_Channel.plossless_dec",
     "plossless_converter
       (\<I>_uniform UNIV (insert None (Some ` nlists UNIV ?\<eta>)))
       (\<I>_uniform UNIV (nlists UNIV ?\<eta>) \<oplus>\<^sub>\<I>
        \<I>_uniform UNIV (insert None (Some ` nlists UNIV ?\<eta>)))
       (cipher.dec (dec ?\<eta>))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_var 0))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 10),
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 0))),
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_var 0)))))),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Secure_Channel.mac_otp",
     "constructive_security
       (%\<eta>.
           1\<^sub>C |\<^sub>=
           (cipher.enc (enc \<eta>) |\<^sub>=
            cipher.dec (dec \<eta>)) \<odot>
           parallel_wiring \<rhd>
           parallel_resource1_wiring \<rhd>
           key.res (key \<eta>) \<parallel>
           (1\<^sub>C |\<^sub>=
            macode.enm (mac \<eta>) |\<^sub>= macode.dem (mac \<eta>) \<rhd>
            1\<^sub>C |\<^sub>= parallel_wiring \<rhd>
            parallel_resource1_wiring \<rhd>
            rorc.res (rnd \<eta>) \<parallel>
            channel.res insec_channel.insec_oracle))
       (%_. channel.res sec_channel.sec_oracle)
       (%\<eta>.
           CNV Message_Authentication_Code.sim (Inl None) \<odot>
           CNV One_Time_Pad.sim None)
       (%\<eta>.
           \<I>_uniform (Set.Collect (valid_mac_query \<eta>))
            (insert None
              (Some ` (nlists UNIV \<eta> \<times> nlists UNIV \<eta>))))
       (%\<eta>. \<I>_uniform UNIV {None, Some \<eta>})
       (%\<eta>.
           \<I>_uniform (nlists UNIV \<eta>) UNIV \<oplus>\<^sub>\<I>
           \<I>_uniform UNIV (insert None (Some ` nlists UNIV \<eta>)))
       (%_. enat ?q) True
       (%\<eta>.
           (id, map_option length) \<circ>\<^sub>w
           (insec_query_of, map_option snd))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 74, t_empty), t_empty),
                       t_empty),
                     t_empty),
                   t_empty),
                 t_empty),
               t_empty),
             template_hole 9),
           t_empty)
         ))]
