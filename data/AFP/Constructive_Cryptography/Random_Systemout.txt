Loading theory "Draft.Resource" (required by "Draft.Random_SystemTemplates" via "Draft.Random_System" via "Draft.Converter_Rewrite" via "Draft.Converter")
Loading theory "HOL-Library.BigO" (required by "Draft.Random_SystemTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Templates" (required by "Draft.Random_SystemTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.092s elapsed time, 0.312s cpu time, 0.000s GC time
### theory "HOL-Library.BigO"
### 0.662s elapsed time, 1.480s cpu time, 0.108s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Random_SystemTemplates")
consts
  map_resource :: "('a', 'b) resource => ('a, 'b') resource"
Proofs for coinductive predicate(s) "rel_resource"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "lossless_resource"
  Proving monotonicity ...
consts
  resource_of_oracle :: "'s => ('a, 'b) resource"
consts
  parallel_resource ::
    "('a, 'b) resource => ('c, 'd) resource => ('a + 'c, 'b + 'd) resource"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
Proofs for coinductive predicate(s) "WT_resource"
### theory "Draft.ExtrEqs"
### 0.515s elapsed time, 1.070s cpu time, 0.124s GC time
  Proving monotonicity ...
### theory "Draft.Resource"
### 1.441s elapsed time, 2.847s cpu time, 0.232s GC time
Loading theory "Draft.Converter" (required by "Draft.Random_SystemTemplates" via "Draft.Random_System" via "Draft.Converter_Rewrite")
consts
  map_converter ::
    "('a', 'b, 'out, 'in') converter => ('a, 'b', 'out', 'in) converter"
Proofs for inductive predicate(s) "outsp_converter"
  Proving monotonicity ...
Proofs for inductive predicate(s) "resultsp_converter"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "rel_converter"
  Proving monotonicity ...
Proofs for inductive predicate(s) "pred_converter"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "WT_converter"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "plossless_converter"
  Proving monotonicity ...
consts
  converter_of_callee :: "'s => ('a, 'b, 'out, 'in) converter"
consts
  parallel_converter ::
    "('a, 'b, 'out, 'in) converter
     => ('c, 'd, 'out, 'in) converter
        => ('a + 'c, 'b + 'd, 'out, 'in) converter"
consts
  id_converter :: "('a, 'b, 'a, 'b) converter"
consts
  parallel_converter2 ::
    "('a, 'b, 'out, 'in) converter
     => ('c, 'd, 'out', 'in') converter
        => ('a + 'c, 'b + 'd, 'out + 'out', 'in + 'in') converter"
consts
  left_interface ::
    "('a, 'b, 'out, 'in) converter
     => ('a, 'b, 'out + 'out', 'in + 'in') converter"
consts
  right_interface ::
    "('a, 'b, 'out, 'in) converter
     => ('a, 'b, 'out' + 'out, 'in' + 'in) converter"
consts
  converter_of_resource :: "('a, 'b) resource => ('a, 'b, 'c, 'd) converter"
consts
  restrict_converter ::
    "('a, 'b, 'c, 'd) converter => ('a, 'b, 'c, 'd) converter"
consts
  attach ::
    "('a, 'b, 'out, 'in) converter
     => ('out, 'in) resource => ('a, 'b) resource"
consts
  comp_converter ::
    "('a, 'b, 'out, 'in) converter
     => ('out, 'in, 'out', 'in') converter
        => ('a, 'b, 'out', 'in') converter"
Proofs for coinductive predicate(s) "interaction_any_bounded_converter"
  Proving monotonicity ...
### theory "Draft.Converter"
### 3.731s elapsed time, 4.157s cpu time, 0.652s GC time
Loading theory "Draft.Converter_Rewrite" (required by "Draft.Random_SystemTemplates" via "Draft.Random_System")
Proofs for coinductive predicate(s) "eq_resource_on"
  Proving monotonicity ...
Proofs for inductive predicate(s) "eq_\<I>_generat"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "eq_\<I>_gpv"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "eq_\<I>_converter"
  Proving monotonicity ...
### theory "Draft.Converter_Rewrite"
### 0.480s elapsed time, 0.519s cpu time, 0.041s GC time
Loading theory "Draft.Random_System" (required by "Draft.Random_SystemTemplates")
Found termination order:
  "(%p. size_list size (fst (snd (snd p)))) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd (snd p))) <*mlex*> {}"
Proofs for inductive predicate(s) "trace_callee_closure"
  Proving monotonicity ...
### theory "Draft.Random_System"
### 0.447s elapsed time, 0.483s cpu time, 0.047s GC time
Loading theory "Draft.Random_SystemTemplates"
val templateLemmas =
   [("Random_System.cond_spmf_fst_None",
     "cond_spmf_fst (return_pmf None) ?x = return_pmf None",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2)),
         template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Random_System.trace_callee_closure_start",
     "trace_callee_closure ?callee1.0 ?callee2.0 ?A ?p ?q ?p ?q",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0),
             template_var 1),
           template_var 0)
         )),
    ("Random_System.trace_callee_None",
     "trace_callee ?callee (return_pmf None) ?xs ?x = return_pmf None",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_app (template_hole 3, template_hole 2)),
           template_var 1),
         template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Random_System.trace_callee_aux_append",
     "trace_callee_aux ?callee ?p (?xs @ ?ys) =
      trace_callee_aux ?callee (trace_callee_aux ?callee ?p ?xs) ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0))),
    ("Random_System.trace_callee_resource_of_oracle2",
     "trace_callee run_resource (map_spmf (resource_of_oracle ?callee) ?p)
       ?xs ?x =
      trace_callee ?callee ?p ?xs ?x",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 3))),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Random_System.set_spmf_cond_spmf_fst",
     "set_spmf (cond_spmf_fst ?p ?a) =
      snd ` (set_spmf ?p Int {?a} \<times> UNIV)",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app (template_hole 8, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             t_empty))))),
    ("Random_System.trace_callee_resource_of_oracle",
     "trace_callee run_resource
       (return_spmf (resource_of_oracle ?callee ?s)) ?xs ?x =
      trace_callee ?callee (return_spmf ?s) ?xs ?x",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 7, template_hole 6),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2)))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2))),
           template_var 1),
         template_var 0))),
    ("Random_System.trace_callee_conv_trace_callee_aux",
     "trace_callee ?callee ?p ?xs ?a =
      trace_callee_aux ?callee ?p ?xs >>=
      (%s. map_spmf fst (?callee s ?a))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1)),
         t_empty))),
    ("Random_System.trace_eq'_resource_of_oracle",
     "?A \<turnstile>\<^sub>R resource_of_oracle ?callee1.0 ?s1.0
      \<approx> resource_of_oracle ?callee2.0 ?s2.0 =
      ?A \<turnstile>\<^sub>C ?callee1.0(?s1.0) \<approx>
      ?callee2.0(?s2.0)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 10, template_hole 9),
               template_hole 9),
             template_var 4),
           template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 2)))),
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 1),
             template_var 4),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 2))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Random_System.trace_callee_eqD",
     "[| trace_callee_eq ?callee1.0 ?callee2.0 ?A ?p ?q;
         set ?xs <= ?A \<times> UNIV; ?x : ?A |]
      ==> trace_callee ?callee1.0 ?p ?xs ?x =
          trace_callee ?callee2.0 ?q ?xs ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 8, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_app
           (template_app (template_hole 5, template_var 4), t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 6),
               template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("Random_System.trace_callee_eqI",
     "(!!xs x.
          [| set xs <= ?A \<times> UNIV; x : ?A |]
          ==> trace_callee ?callee1.0 ?p xs x =
              trace_callee ?callee2.0 ?q xs x) ==>
      trace_callee_eq ?callee1.0 ?callee2.0 ?A ?p ?q",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 4),
               template_var 2),
             template_var 0)
           ))),
    ("Random_System.trace_callee_closure_sim",
     "[| trace_callee_closure ?callee1.0 ?callee2.0 ?A ?p ?q ?p' ?q';
         ?a : ?A |]
      ==> trace_callee_closure ?callee1.0 ?callee2.0 ?A ?p ?q
           (cond_spmf_fst (?p' >>= (%s. ?callee1.0 s ?a)) ?b)
           (cond_spmf_fst (?q' >>= (%s. ?callee2.0 s ?a)) ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 5, template_var 8),
                        template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 8),
                       template_var 7),
                     template_var 6),
                   template_var 5),
                 template_var 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     t_empty)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   t_empty)),
               template_var 0))
           ))),
    ("Random_System.trace_callee_closure_step",
     "[| trace_callee_eq ?callee1.0 ?callee2.0 ?A ?p ?q;
         trace_callee_closure ?callee1.0 ?callee2.0 ?A ?p ?q ?p' ?q';
         ?a : ?A |]
      ==> ?p' >>= (%s. map_spmf fst (?callee1.0 s ?a)) =
          ?q' >>= (%s. map_spmf fst (?callee2.0 s ?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 11, template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 10, template_var 7),
                        template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_var 5)
            )],
       template_equation
        (template_app
          (template_app (template_hole 7, template_var 2), t_empty),
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)))),
    ("Random_System.trace_callee_eq'_run_gpv",
     "[| ?A \<turnstile>\<^sub>C ?callee1.0(?s1.0) \<approx>
         ?callee2.0(?s2.0);
         callee_invariant_on ?callee1.0 ?I1.0 ?\<I>;
         callee_invariant_on ?callee2.0 ?I2.0 ?\<I>;
         ?\<I> \<turnstile>g ?gpv \<surd>; outs_gpv ?\<I> ?gpv <= ?A;
         ?I1.0 ?s1.0; ?I2.0 ?s2.0 |]
      ==> run_gpv ?callee1.0 ?gpv ?s1.0 = run_gpv ?callee2.0 ?gpv ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 18, template_var 8),
                    template_var 7),
                  template_var 6),
                template_app
                 (template_hole 17,
                  template_app (template_hole 16, template_var 5))),
              template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 8),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 7),
                template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 9, template_var 2), template_var 0),
          template_var 6),
        template_predicate (template_app (template_var 3, template_var 5)),
        template_predicate (template_app (template_var 1, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_hole 5)),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 8),
               template_var 0),
             template_var 5)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 7),
               template_var 0),
             template_var 4))))),
    ("Random_System.trace_callee_eq_run_gpv",
     "[| trace_callee_eq ?callee1.0 ?callee2.0 ?A ?p ?q;
         callee_invariant_on ?callee1.0 ?I1.0 ?\<I>;
         callee_invariant_on ?callee2.0 ?I2.0 ?\<I>;
         ?\<I> \<turnstile>g ?gpv \<surd>; outs_gpv ?\<I> ?gpv <= ?A;
         lossless_spmf ?p; lossless_spmf ?q; ALL x:set_spmf ?p. ?I1.0 x;
         ALL y:set_spmf ?q. ?I2.0 y |]
      ==> ?p >>= run_gpv ?callee1.0 ?gpv = ?q >>= run_gpv ?callee2.0 ?gpv",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 22, template_var 8),
                    template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 21, template_var 8),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 7),
                template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 2),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 17, template_var 2),
            template_var 0),
          template_var 6),
        template_predicate
         (template_app (template_hole 16, template_var 5)),
        template_predicate
         (template_app (template_hole 15, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 5)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 4)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 9, template_var 5), t_empty),
         template_app
          (template_app (template_hole 4, template_var 4), t_empty)))),
    ("Random_System.trace'_eqI_sim",
     "[| ?S ?p ?q;
         !!p q a.
            [| ?S p q; a : ?A |]
            ==> p >>= (%s. map_spmf fst (?callee1.0 s a)) =
                q >>= (%s. map_spmf fst (?callee2.0 s a));
         !!p q a res b s'.
            [| ?S p q; a : ?A; res : set_spmf q;
               (b, s') : set_spmf (?callee2.0 res a) |]
            ==> ?S (cond_spmf_fst (p >>= (%s. ?callee1.0 s a)) b)
                 (cond_spmf_fst (q >>= (%s. ?callee2.0 s a)) b) |]
      ==> trace_callee_eq ?callee1.0 ?callee2.0 ?A ?p ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 5, template_var 4), template_var 3)
            ),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2),
               template_var 4),
             template_var 3)
           ))),
    ("Random_System.trace_callee_eq_complete",
     "[| trace_callee_eq ?callee1.0 ?callee2.0 ?A ?p ?q;
         !!S. [| S ?p ?q;
                 !!p q a.
                    [| S p q; a : ?A |]
                    ==> p >>= (%s. map_spmf fst (?callee1.0 s a)) =
                        q >>= (%s. map_spmf fst (?callee2.0 s a));
                 !!p q a s b s'.
                    [| S p q; a : ?A; s : set_spmf q;
                       (b, s') : set_spmf (?callee2.0 s a) |]
                    ==> S (cond_spmf_fst (p >>= (%s. ?callee1.0 s a)) b)
                         (cond_spmf_fst (q >>= (%s. ?callee2.0 s a)) b) |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 25, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 24, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.Random_SystemTemplates"
### 2.174s elapsed time, 2.948s cpu time, 0.775s GC time
val it = (): unit
