   [("Arrow_Order.alt2", "EX b. b ~= ?a",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("Arrow_Order.converse_in_Lin", "(?L^-1 : Lin) = (?L : Lin)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_app
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("Arrow_Order.const_Lin_Prof", "?L : Lin ==> (%p. ?L) : Prof",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_hole 0)
           ))),
    ("Arrow_Order.mkbot_Lin", "?L : Lin ==> mkbot ?L ?x : Lin",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Arrow_Order.mktop_Lin", "?L : Lin ==> mktop ?L ?x : Lin",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Arrow_Order.complete_Lin",
     "?a ~= ?b ==> EX L:Lin. ?a <\<^bsub>L\<^esub> ?b",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_hole 2), t_empty)
           ))),
    ("Arrow_Order.third_alt", "?a ~= ?b ==> EX c. distinct [?a, ?b, c]",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Arrow_Order.above_Lin",
     "[| ?x ~= ?y; ?L : Lin |] ==> Arrow_Order.above ?L ?x ?y : Lin",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2),
                 template_var 1)),
             template_hole 1)
           ))),
    ("Arrow_Order.below_Lin",
     "[| ?x ~= ?y; ?L : Lin |] ==> below ?L ?x ?y : Lin",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2),
                 template_var 1)),
             template_hole 1)
           ))),
    ("Arrow_Order.Lin_irrefl",
     "[| ?L : Lin; ?a <\<^bsub>?L\<^esub> ?b; ?b <\<^bsub>?L\<^esub> ?a |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 1)),
              template_var 2)
            )],
       template_predicate (template_hole 0))),
    ("Arrow_Order.Arrow",
     "[| ?F : SWF; unanimity ?F; IIA ?F |] ==> EX i. dictator ?F i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_hole 5), t_empty))
            ),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Arrow_Order.notin_Lin_iff",
     "[| ?L : Lin; ?x ~= ?y |]
      ==> ((?x, ?y) ~: ?L) = (?y <\<^bsub>?L\<^esub> ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_hole 5)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2)))),
    ("Arrow_Order.in_mkbot",
     "(?x <\<^bsub>mkbot ?L ?z\<^esub> ?y) =
      (?y ~= ?z &
       (if ?x = ?z then ?x ~= ?y else ?x <\<^bsub>?L\<^esub> ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 0)),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_var 2)),
                 template_var 1)))
           ))),
    ("Arrow_Order.in_mktop",
     "(?x <\<^bsub>mktop ?L ?z\<^esub> ?y) =
      (?x ~= ?z &
       (if ?y = ?z then ?x ~= ?y else ?x <\<^bsub>?L\<^esub> ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 0))),
             template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0)),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_var 2)),
                 template_var 1)))
           ))),
    ("Arrow_Order.dictatorI",
     "[| ?F : SWF;
         ALL P:Prof.
            ALL a b.
               a ~= b -->
               a <\<^bsub>P ?i\<^esub> b --> a <\<^bsub>?F P\<^esub> b |]
      ==> dictator ?F ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_app (template_hole 10, template_hole 9), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 9), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Arrow_Order.in_above",
     "[| ?a ~= ?b; ?L : Lin |]
      ==> (?x <\<^bsub>Arrow_Order.above ?L ?a ?b\<^esub> ?y) =
          (?x ~= ?y &
           (if ?x = ?b then ?a <\<^bsub>?L\<^esub> ?y
            else if ?y = ?b then ?x = ?a | ?x <\<^bsub>?L\<^esub> ?a
                 else ?x <\<^bsub>?L\<^esub> ?y))",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_hole 7)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 0)),
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 4),
                  template_var 3))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 9, template_var 1),
                       template_var 3)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 4),
                         template_var 0)),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 9, template_var 0),
                         template_var 3)),
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_app (template_hole 9, template_var 1),
                           template_var 4)),
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app (template_hole 4, template_var 1),
                             template_var 4)),
                         template_var 2))),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_var 0)),
                     template_var 2))))
             )))),
    ("Arrow_Order.in_below",
     "[| ?a ~= ?b; ?L : Lin |]
      ==> (?x <\<^bsub>below ?L ?a ?b\<^esub> ?y) =
          (?x ~= ?y &
           (if ?y = ?a then ?x <\<^bsub>?L\<^esub> ?b
            else if ?x = ?a then ?y = ?b | ?b <\<^bsub>?L\<^esub> ?y
                 else ?x <\<^bsub>?L\<^esub> ?y))",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_hole 7)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 0)),
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 4),
                  template_var 3))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 9, template_var 0),
                       template_var 4)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_var 3)),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 9, template_var 1),
                         template_var 4)),
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_app (template_hole 9, template_var 0),
                           template_var 3)),
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app (template_hole 4, template_var 3),
                             template_var 0)),
                         template_var 2))),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_var 0)),
                     template_var 2))))
             ))))]
