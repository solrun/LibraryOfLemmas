Loading theory "Draft.Lotteries" (required by "Draft.SDS_LoweringTemplates" via "Draft.SDS_Lowering" via "Draft.Social_Decision_Schemes" via "Draft.Stochastic_Dominance")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SDS_LoweringTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Order_Predicates" (required by "Draft.SDS_LoweringTemplates" via "Draft.SDS_Lowering" via "Draft.Social_Decision_Schemes" via "Draft.Preference_Profiles")
Loading theory "Draft.Templates" (required by "Draft.SDS_LoweringTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.068s elapsed time, 0.308s cpu time, 0.000s GC time
### theory "Draft.Lotteries"
### 0.090s elapsed time, 0.380s cpu time, 0.000s GC time
### theory "HOL-Library.Function_Algebras"
### 0.136s elapsed time, 0.477s cpu time, 0.048s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SDS_LoweringTemplates" via "Draft.ExtrEqs")
locale preorder_on
  fixes carrier :: "'a set"
    and le :: "'a => 'a => bool"
  assumes "Order_Predicates.preorder_on carrier le"
locale total_preorder_on
  fixes carrier :: "'a set"
    and le :: "'a => 'a => bool"
  assumes "total_preorder_on carrier le"
"R b a = R b a"
  :: "bool"
locale preorder_on
  fixes carrier :: "'a set"
    and le :: "'a => 'a => bool"
  assumes "Order_Predicates.preorder_on carrier le"
locale order_on
  fixes carrier :: "'a set"
    and le :: "'a => 'a => bool"
  assumes "order_on carrier le"
locale linorder_on
  fixes carrier :: "'a set"
    and le :: "'a => 'a => bool"
  assumes "linorder_on carrier le"
locale preorder_on
  fixes carrier :: "'a set"
    and le :: "'a => 'a => bool"
  assumes "Order_Predicates.preorder_on carrier le"
locale total_preorder_on
  fixes carrier :: "'a set"
    and le :: "'a => 'a => bool"
  assumes "total_preorder_on carrier le"
Proofs for inductive predicate(s) "of_weak_ranking"
  Proving monotonicity ...
### Not an equation, in theorem:
### is_weak_ranking []
### Not an equation, in theorem:
### is_finite_weak_ranking []
consts
  is_weak_ranking_aux :: "'a set => 'a set list => bool"
### Code generator: dropping subsumed code equation
### is_weak_ranking (?x # ?xs) ==
### ?x ~= {} & is_weak_ranking ?xs & ?x Int \<Union> (set ?xs) = {}
locale finite_total_preorder_on
  fixes carrier :: "'a set"
    and le :: "'a => 'a => bool"
  assumes "finite_total_preorder_on carrier le"
locale finite_linorder_on
  fixes carrier :: "'a set"
    and le :: "'a => 'a => bool"
  assumes "finite_linorder_on carrier le"
### theory "Draft.Order_Predicates"
### 0.613s elapsed time, 1.441s cpu time, 0.113s GC time
Loading theory "Draft.Preference_Profiles" (required by "Draft.SDS_LoweringTemplates" via "Draft.SDS_Lowering" via "Draft.Social_Decision_Schemes")
locale preorder_family
  fixes dom :: "'a set"
    and carrier :: "'b set"
    and R :: "'a => 'b => 'b => bool"
  assumes "preorder_family dom carrier R"
locale pref_profile_wf
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and R :: "'agent => 'alt => 'alt => bool"
  assumes "pref_profile_wf agents alts R"
locale preorder_family
  fixes dom :: "'a set"
    and carrier :: "'b set"
    and R :: "'a => 'b => 'b => bool"
  assumes "preorder_family dom carrier R"
locale pref_profile_wf
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and R :: "'agent => 'alt => 'alt => bool"
  assumes "pref_profile_wf agents alts R"
### theory "HOL-Library.BigO"
### 0.628s elapsed time, 1.324s cpu time, 0.150s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SDS_LoweringTemplates")
locale pref_profile_wf
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and R :: "'agent => 'alt => 'alt => bool"
  assumes "pref_profile_wf agents alts R"
locale pref_profile_unique_favorites
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and R :: "'agent => 'alt => 'alt => bool"
  assumes "pref_profile_unique_favorites agents alts R"
### theory "Draft.Preference_Profiles"
### 0.311s elapsed time, 0.652s cpu time, 0.085s GC time
Loading theory "Draft.Elections" (required by "Draft.SDS_LoweringTemplates" via "Draft.SDS_Lowering" via "Draft.Social_Decision_Schemes")
Loading theory "Draft.Utility_Functions" (required by "Draft.SDS_LoweringTemplates" via "Draft.SDS_Lowering" via "Draft.Social_Decision_Schemes" via "Draft.Stochastic_Dominance")
locale election
  fixes agents :: "'agent set"
    and alts :: "'alt set"
  assumes "election agents alts"
### theory "Draft.Elections"
### 0.084s elapsed time, 0.263s cpu time, 0.086s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.492s elapsed time, 1.075s cpu time, 0.086s GC time
locale vnm_utility
  fixes carrier :: "'a set"
    and le :: "'a => 'a => bool"
    and u :: "'a => real"
  assumes "vnm_utility carrier le u"
### theory "Draft.Utility_Functions"
### 0.459s elapsed time, 0.917s cpu time, 0.134s GC time
Loading theory "Draft.Stochastic_Dominance" (required by "Draft.SDS_LoweringTemplates" via "Draft.SDS_Lowering" via "Draft.Social_Decision_Schemes")
locale preorder_on
  fixes carrier :: "'a set"
    and le :: "'a => 'a => bool"
  assumes "Order_Predicates.preorder_on carrier le"
locale pref_profile_wf
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and R :: "'agent => 'alt => 'alt => bool"
  assumes "pref_profile_wf agents alts R"
locale pref_profile_wf
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and R :: "'agent => 'alt => 'alt => bool"
  assumes "pref_profile_wf agents alts R"
locale pref_profile_wf
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and R :: "'agent => 'alt => 'alt => bool"
  assumes "pref_profile_wf agents alts R"
locale finite_total_preorder_on
  fixes carrier :: "'a set"
    and le :: "'a => 'a => bool"
  assumes "finite_total_preorder_on carrier le"
### theory "Draft.Stochastic_Dominance"
### 0.214s elapsed time, 0.214s cpu time, 0.000s GC time
Loading theory "Draft.SD_Efficiency" (required by "Draft.SDS_LoweringTemplates" via "Draft.SDS_Lowering" via "Draft.Social_Decision_Schemes")
locale pref_profile_wf
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and R :: "'agent => 'alt => 'alt => bool"
  assumes "pref_profile_wf agents alts R"
Found termination order: "size <*mlex*> {}"
### theory "Draft.SD_Efficiency"
### 0.206s elapsed time, 0.240s cpu time, 0.049s GC time
Loading theory "Draft.Social_Decision_Schemes" (required by "Draft.SDS_LoweringTemplates" via "Draft.SDS_Lowering")
locale election
  fixes agents :: "'agent set"
    and alts :: "'alt set"
  assumes "election agents alts"
locale social_decision_scheme
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
  assumes "social_decision_scheme agents alts sds"
locale anonymous_sds
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
  assumes "anonymous_sds agents alts sds"
locale neutral_sds
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
  assumes "neutral_sds agents alts sds"
locale an_sds
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
  assumes "an_sds agents alts sds"
locale ex_post_efficient_sds
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
  assumes "ex_post_efficient_sds agents alts sds"
locale sd_efficient_sds
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
  assumes "sd_efficient_sds agents alts sds"
locale social_decision_scheme
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
  assumes "social_decision_scheme agents alts sds"
locale strategyproof_sds
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
  assumes "strategyproof_sds agents alts sds"
locale social_decision_scheme
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
  assumes "social_decision_scheme agents alts sds"
locale strongly_strategyproof_sds
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
  assumes "strongly_strategyproof_sds agents alts sds"
locale strategyproof_an_sds
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
  assumes "strategyproof_an_sds agents alts sds"
### theory "Draft.Social_Decision_Schemes"
### 1.438s elapsed time, 1.924s cpu time, 0.687s GC time
Loading theory "Draft.SDS_Lowering" (required by "Draft.SDS_LoweringTemplates")
locale sds_lowering
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
    and agents' :: "'agent set"
    and alts' :: "'alt set"
  assumes "sds_lowering agents alts sds agents' alts'"
locale sds_lowering_anonymous
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
    and agents' :: "'agent set"
    and alts' :: "'alt set"
  assumes "sds_lowering_anonymous agents alts sds agents' alts'"
locale sds_lowering_neutral
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
    and agents' :: "'agent set"
    and alts' :: "'alt set"
  assumes "sds_lowering_neutral agents alts sds agents' alts'"
locale sds_lowering_sd_efficient
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
    and agents' :: "'agent set"
    and alts' :: "'alt set"
  assumes "sds_lowering_sd_efficient agents alts sds agents' alts'"
locale sds_lowering_strategyproof
  fixes agents :: "'agent set"
    and alts :: "'alt set"
    and sds :: "('agent => 'alt => 'alt => bool) => 'alt pmf"
    and agents' :: "'agent set"
    and alts' :: "'alt set"
  assumes "sds_lowering_strategyproof agents alts sds agents' alts'"
locale sds_lowering_anonymous_neutral_sdeff_stratproof
  fixes agents :: "'a set"
    and alts :: "'b set"
    and sds :: "('a => 'b => 'b => bool) => 'b pmf"
    and agents' :: "'a set"
    and alts' :: "'b set"
  assumes
    "sds_lowering_anonymous_neutral_sdeff_stratproof agents alts sds agents'
      alts'"
### theory "Draft.SDS_Lowering"
### 0.385s elapsed time, 0.385s cpu time, 0.000s GC time
Loading theory "Draft.SDS_LoweringTemplates"
val templateLemmas =
   [("SDS_Lowering.lottery_prob_carrier",
     "?p : lotteries_on ?A ==> measure_pmf.prob ?p ?A = 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_hole 0))),
    ("SDS_Lowering.lotteries_on_subset",
     "[| ?A <= ?B; ?p : lotteries_on ?A |] ==> ?p : lotteries_on ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SDS_Lowering.lift_pref_profile_permute_agents",
     "[| ?\<pi> permutes ?agents; ?agents <= ?agents' |]
      ==> lift_pref_profile ?agents ?alts ?agents' ?alts' (?R o ?\<pi>) =
          lift_pref_profile ?agents ?alts ?agents' ?alts' ?R o ?\<pi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 4, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 2),
               template_var 3),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 5)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 2),
                   template_var 3),
                 template_var 1),
               template_var 0)),
           template_var 5)))),
    ("SDS_Lowering.lift_pref_profile_permute_alts",
     "[| ?\<sigma> permutes ?alts; ?alts <= ?alts' |]
      ==> lift_pref_profile ?agents ?alts ?agents' ?alts'
           (permute_profile ?\<sigma> ?R) =
          permute_profile ?\<sigma>
           (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 4, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 4),
               template_var 1),
             template_var 3),
           template_app
            (template_app (template_hole 0, template_var 5),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 4),
                 template_var 1),
               template_var 3),
             template_var 0))))),
    ("SDS_Lowering.lift_pref_profile_wf",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; finite ?alts' |]
      ==> pref_profile_wf ?agents' ?alts'
           (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 4, template_var 1),
        template_inequation (less_equals, template_var 3, template_var 0),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("SDS_Lowering.pareto_losers_lift_pref_profile",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts' |]
      ==> pareto_losers
           (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R) =
          pareto_losers ?R Un (?alts' - ?alts)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 4, template_var 1),
        template_inequation (less_equals, template_var 3, template_var 0),
        template_negation
         (template_equation (template_var 3, template_hole 7)),
        template_negation
         (template_equation (template_var 4, template_hole 5)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3),
                 template_var 1),
               template_var 0),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 3))))),
    ("SDS_Lowering.lift_SD_efficient_iff",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts';
         ?p : lotteries_on ?alts |]
      ==> SD_efficient (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R)
           ?p =
          SD_efficient ?R ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_inequation (less_equals, template_var 5, template_var 2),
        template_inequation (less_equals, template_var 4, template_var 1),
        template_negation
         (template_equation (template_var 4, template_hole 8)),
        template_negation
         (template_equation (template_var 5, template_hole 6)),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 4))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 2),
                 template_var 1),
               template_var 3)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_var 0)))),
    ("SDS_Lowering.lift_pref_profile_Pareto_iff",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts' |]
      ==> Pareto (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R) ?x
           ?y =
          (?x : ?alts' & ?y : ?alts' & (?x ~: ?alts | Pareto ?R ?x ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 6, template_var 3),
        template_inequation (less_equals, template_var 5, template_var 2),
        template_negation
         (template_equation (template_var 5, template_hole 9)),
        template_negation
         (template_equation (template_var 6, template_hole 7)),
        template_predicate
         (template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 6),
                       template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_hole 11,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 5))),
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 1),
                 template_var 0))))))),
    ("SDS_Lowering.lift_SD_iff",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts';
         ?p : lotteries_on ?alts; ?q : lotteries_on ?alts;
         ?i : ?agents' - ?agents |]
      ==> SD (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R ?i) ?p ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_inequation (less_equals, template_var 7, template_var 4),
        template_inequation (less_equals, template_var 6, template_var 3),
        template_negation
         (template_equation (template_var 6, template_hole 9)),
        template_negation
         (template_equation (template_var 7, template_hole 7)),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 4),
                template_var 7))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 0, template_var 7),
                           template_var 6),
                         template_var 4),
                       template_var 3),
                     template_var 5),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("SDS_Lowering.lift_pref_profile_strict_iff",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts' |]
      ==> ?x \<prec>[lift_pref_profile ?agents ?alts ?agents' ?alts' ?R
                      ?i] ?y =
          (?i : ?agents &
           (?y : ?alts & ?x : ?alts' - ?alts | ?x \<prec>[?R ?i] ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_inequation (less_equals, template_var 7, template_var 4),
        template_inequation (less_equals, template_var 6, template_var 3),
        template_negation
         (template_equation (template_var 6, template_hole 11)),
        template_negation
         (template_equation (template_var 7, template_hole 9)),
        template_predicate
         (template_app (template_hole 8, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 7),
                       template_var 6),
                     template_var 4),
                   template_var 3),
                 template_var 5),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 7)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 6)),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 6)))),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 2),
                 template_app (template_var 5, template_var 1)),
               template_var 0)))))),
    ("SDS_Lowering.lift_Pareto_SD_iff",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts';
         ?p : lotteries_on ?alts; ?q : lotteries_on ?alts |]
      ==> Pareto (SD o lift_pref_profile ?agents ?alts ?agents' ?alts' ?R)
           ?p ?q =
          Pareto (SD o ?R) ?p ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 6, template_var 3),
        template_inequation (less_equals, template_var 5, template_var 2),
        template_negation
         (template_equation (template_var 5, template_hole 10)),
        template_negation
         (template_equation (template_var 6, template_hole 8)),
        template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 5))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 3),
                     template_var 2),
                   template_var 4))),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 4)),
             template_var 1),
           template_var 0)))),
    ("SDS_Lowering.lift_Pareto_SD_strict_iff",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts';
         ?p : lotteries_on ?alts; ?q : lotteries_on ?alts |]
      ==> ?p \<prec>[Pareto
                      (SD o
                       lift_pref_profile ?agents ?alts ?agents' ?alts'
                        ?R)] ?q =
          ?p \<prec>[Pareto (SD o ?R)] ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 6, template_var 3),
        template_inequation (less_equals, template_var 5, template_var 2),
        template_negation
         (template_equation (template_var 5, template_hole 11)),
        template_negation
         (template_equation (template_var 6, template_hole 9)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 5))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 3),
                     template_var 2),
                   template_var 4)))),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 4))),
           template_var 0)))),
    ("SDS_Lowering.lift_pref_profile_Pareto_strict_iff",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts' |]
      ==> ?x \<prec>[Pareto
                      (lift_pref_profile ?agents ?alts ?agents' ?alts'
                        ?R)] ?y =
          (?x : ?alts' &
           ?y : ?alts' &
           (?x ~: ?alts & ?y : ?alts | ?x \<prec>[Pareto ?R] ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 6, template_var 3),
        template_inequation (less_equals, template_var 5, template_var 2),
        template_negation
         (template_equation (template_var 5, template_hole 10)),
        template_negation
         (template_equation (template_var 6, template_hole 8)),
        template_predicate
         (template_app (template_hole 7, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 6),
                       template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4))),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 12,
                       template_app
                        (template_app (template_hole 1, template_var 1),
                         template_var 5))),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 5))),
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app (template_hole 4, template_var 4)),
                 template_var 0))))))),
    ("SDS_Lowering.preferred_alts_lift_pref_profile",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts';
         ?i : ?agents'; ?x : ?alts' |]
      ==> preferred_alts
           (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R ?i) ?x =
          (if ?i : ?agents & ?x : ?alts then preferred_alts (?R ?i) ?x
           else ?alts')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_inequation (less_equals, template_var 6, template_var 3),
        template_inequation (less_equals, template_var 5, template_var 2),
        template_negation
         (template_equation (template_var 5, template_hole 9)),
        template_negation
         (template_equation (template_var 6, template_hole 7)),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 6),
                       template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 4),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_var 6)),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 5))),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_var 4, template_var 1)),
               template_var 0)),
           template_var 2)))),
    ("SDS_Lowering.lift_SD_iff",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts';
         ?p : lotteries_on ?alts; ?q : lotteries_on ?alts; ?i : ?agents |]
      ==> SD (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R ?i) ?p ?q =
          SD (?R ?i) ?p ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_inequation (less_equals, template_var 7, template_var 4),
        template_inequation (less_equals, template_var 6, template_var 3),
        template_negation
         (template_equation (template_var 6, template_hole 9)),
        template_negation
         (template_equation (template_var 7, template_hole 7)),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 7)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_var 4),
                     template_var 3),
                   template_var 5),
                 template_var 0)),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app (template_var 5, template_var 0)),
             template_var 2),
           template_var 1)))),
    ("SDS_Lowering.lift_SD_strict_iff",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts';
         ?p : lotteries_on ?alts; ?q : lotteries_on ?alts; ?i : ?agents |]
      ==> ?p \<prec>[SD (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R
                          ?i)] ?q =
          ?p \<prec>[SD (?R ?i)] ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_inequation (less_equals, template_var 7, template_var 4),
        template_inequation (less_equals, template_var 6, template_var 3),
        template_negation
         (template_equation (template_var 6, template_hole 10)),
        template_negation
         (template_equation (template_var 7, template_hole 8)),
        template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 7)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_var 4),
                     template_var 3),
                   template_var 5),
                 template_var 0))),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app (template_var 5, template_var 0))),
           template_var 1)))),
    ("SDS_Lowering.lift_SD_iff'",
     "[| pref_profile_wf ?agents ?alts ?R; ?agents <= ?agents';
         ?alts <= ?alts'; ?alts ~= {}; ?agents ~= {}; finite ?alts';
         ?p : lotteries_on ?alts; ?q : lotteries_on ?alts; ?i : ?agents' |]
      ==> SD (lift_pref_profile ?agents ?alts ?agents' ?alts' ?R ?i) ?p ?q =
          (?i ~: ?agents | SD (?R ?i) ?p ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_inequation (less_equals, template_var 7, template_var 4),
        template_inequation (less_equals, template_var 6, template_var 3),
        template_negation
         (template_equation (template_var 6, template_hole 10)),
        template_negation
         (template_equation (template_var 7, template_hole 8)),
        template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 7),
                         template_var 6),
                       template_var 4),
                     template_var 3),
                   template_var 5),
                 template_var 0)),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 7))),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_var 5, template_var 0)),
               template_var 2),
             template_var 1)))))]:
   (string * thm * template) list
### theory "Draft.SDS_LoweringTemplates"
### 1.231s elapsed time, 1.565s cpu time, 0.246s GC time
val it = (): unit
