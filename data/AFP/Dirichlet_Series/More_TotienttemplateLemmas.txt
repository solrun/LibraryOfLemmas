   [("More_Totient.totient_conv_moebius_mu",
     "int (totient ?n) = dirichlet_prod moebius_mu int ?n",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0),
           template_hole 3),
         template_var 0))),
    ("More_Totient.even_prime_nat", "[| prime ?p; even ?p |] ==> ?p = 2",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_hole 1))),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))))),
    ("More_Totient.totient_prime_power_Suc",
     "prime ?p ==> totient (?p ^ Suc ?n) = ?p ^ Suc ?n - ?p ^ ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_var 0))),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("More_Totient.totient_conv_moebius_mu'",
     "0 < ?n ==>
      real (totient ?n) =
      real ?n * (SUM d | d dvd ?n. moebius_mu d / real d)",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 0)],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 7, template_var 0)),
           template_app
            (template_app (template_hole 4, t_empty),
             template_app (template_hole 1, t_empty)))))),
    ("More_Totient.twopow_dvd_totient",
     "0 < ?n ==>
      2 ^ card {p. p :# prime_factorization ?n & odd p} dvd totient ?n",
     template_implication
      ([template_inequation (less_than, template_hole 13, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_hole 10,
                     template_app (template_hole 9, template_hole 8))),
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, t_empty)))),
             template_app (template_hole 0, template_var 0))
           )))]
