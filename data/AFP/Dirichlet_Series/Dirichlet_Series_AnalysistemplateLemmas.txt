   [("Dirichlet_Series_Analysis.conv_le_abs_conv_abscissa",
     "conv_abscissa ?f <= abs_conv_abscissa ?f",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_const",
     "abs_conv_abscissa (fds_const ?c) = - \<infinity>",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_deriv",
     "abs_conv_abscissa (fds_deriv ?f) = abs_conv_abscissa ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_minus",
     "abs_conv_abscissa (- ?f) = abs_conv_abscissa ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_numeral",
     "abs_conv_abscissa (numeral ?n) = - \<infinity>",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_norm",
     "abs_conv_abscissa (fds_norm ?f) = abs_conv_abscissa ?f",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Dirichlet_Series_Analysis.conv_abscissa_const",
     "conv_abscissa (fds_const ?c) = - \<infinity>",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Dirichlet_Series_Analysis.conv_abscissa_minus",
     "conv_abscissa (- ?f) = conv_abscissa ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Dirichlet_Series_Analysis.conv_abscissa_numeral",
     "conv_abscissa (numeral ?n) = - \<infinity>",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Dirichlet_Series_Analysis.conv_abscissa_norm",
     "conv_abscissa (fds_norm ?f) = abs_conv_abscissa ?f",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_exp",
     "abs_conv_abscissa (fds_exp ?f) <= abs_conv_abscissa ?f",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Dirichlet_Series_Analysis.conv_abscissa_deriv_le",
     "conv_abscissa (fds_deriv ?f) <= conv_abscissa ?f",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Dirichlet_Series_Analysis.fds_abs_summable_zeta_real_iff",
     "fds_abs_converges fds_zeta ?s = (1 < ?s)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_integral",
     "abs_conv_abscissa (fds_integral ?a ?f) = abs_conv_abscissa ?f",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_truncate",
     "abs_conv_abscissa (fds_truncate ?m ?f) = - \<infinity>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Dirichlet_Series_Analysis.conv_abscissa_truncate",
     "conv_abscissa (fds_truncate ?m ?f) = - \<infinity>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Dirichlet_Series_Analysis.fds_exp_minus",
     "fds_exp (- ?f) = inverse (fds_exp ?f)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Dirichlet_Series_Analysis.abs_conv_le_conv_abscissa_plus_1",
     "abs_conv_abscissa ?f <= conv_abscissa ?f + 1",
     template_inequation
      (less_equals, template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_power_le",
     "abs_conv_abscissa (?f ^ ?n) <= abs_conv_abscissa ?f",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_restrict",
     "abs_conv_abscissa (fds_subseries ?P ?f) <= abs_conv_abscissa ?f",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_higher_deriv",
     "abs_conv_abscissa ((fds_deriv ^^ ?n) ?f) = abs_conv_abscissa ?f",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Dirichlet_Series_Analysis.conv_abscissa_higher_deriv_le",
     "conv_abscissa ((fds_deriv ^^ ?n) ?f) <= conv_abscissa ?f",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0),
           template_var 0)),
       template_app (template_hole 2, template_var 0))),
    ("Dirichlet_Series_Analysis.nonneg_dirichlet_series_power",
     "nonneg_dirichlet_series ?f ==> nonneg_dirichlet_series (?f ^ ?n)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Dirichlet_Series_Analysis.fds_abs_summable_zeta_real",
     "1 < ?s ==> fds_abs_converges fds_zeta ?s",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.nonneg_dirichlet_series_const",
     "?c : \<real>\<^sub>\<ge>\<^sub>0 ==>
      nonneg_dirichlet_series (fds_const ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Dirichlet_Series_Analysis.fds_abs_summable_zeta_iff",
     "fds_abs_converges fds_zeta ?s = (1 < ?s \<bullet> (1::?'a))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4), template_var 0),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Dirichlet_Series_Analysis.fds_abs_converges_norm_iff'",
     "fds_abs_converges (fds_norm ?f) ?s =
      fds_abs_converges ?f (of_real ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Dirichlet_Series_Analysis.fds_converges_norm_iff'",
     "fds_converges (fds_norm ?f) ?s = fds_abs_converges ?f (of_real ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Dirichlet_Series_Analysis.fds_abs_converges_of_real",
     "fds_abs_converges (fds_of_real ?f) (of_real ?s) =
      fds_abs_converges ?f ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_MInf_iff",
     "(abs_conv_abscissa ?f = - \<infinity>) = All (fds_abs_converges ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app (template_hole 3, template_hole 2)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Dirichlet_Series_Analysis.conv_abscissa_MInf_iff",
     "(conv_abscissa ?f = - \<infinity>) = All (fds_converges ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_app (template_hole 3, template_hole 2)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Dirichlet_Series_Analysis.fds_deriv_exp",
     "fds_deriv (fds_exp ?f) = fds_exp ?f * fds_deriv ?f",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Dirichlet_Series_Analysis.fds_abs_converges_exp",
     "fds_abs_converges ?f ?s ==> fds_abs_converges (fds_exp ?f) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.fds_abs_converges_moebius_mu_real",
     "1 < ?s ==> fds_abs_converges (fds moebius_mu) ?s",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)),
             template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.nat_power_of_real",
     "nat_power ?n (of_real ?x) = of_real (real ?n powr ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Dirichlet_Series_Analysis.fds_abs_converges_norm_iff",
     "fds_abs_converges (fds_norm ?f) (?s \<bullet> (1::?'a)) =
      fds_abs_converges ?f ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Dirichlet_Series_Analysis.fds_converges_norm_iff",
     "fds_converges (fds_norm ?f) (?s \<bullet> (1::?'a)) =
      fds_abs_converges ?f ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_ln",
     "abs_conv_abscissa (fds_ln ?l ?f) =
      abs_conv_abscissa (fds_deriv ?f / ?f)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 0)))),
    ("Dirichlet_Series_Analysis.fds_exp_add",
     "fds_exp (?f + ?g) = fds_exp ?f * fds_exp ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_diff_le",
     "abs_conv_abscissa (?f - ?g)
      <= max (abs_conv_abscissa ?f) (abs_conv_abscissa ?g)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_add_le",
     "abs_conv_abscissa (?f + ?g)
      <= max (abs_conv_abscissa ?f) (abs_conv_abscissa ?g)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_mult_le",
     "abs_conv_abscissa (?f * ?g)
      <= max (abs_conv_abscissa ?f) (abs_conv_abscissa ?g)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Dirichlet_Series_Analysis.conv_abscissa_diff_le",
     "conv_abscissa (?f - ?g) <= max (conv_abscissa ?f) (conv_abscissa ?g)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Dirichlet_Series_Analysis.conv_abscissa_add_le",
     "conv_abscissa (?f + ?g) <= max (conv_abscissa ?f) (conv_abscissa ?g)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Dirichlet_Series_Analysis.fds_abs_converges_power",
     "fds_abs_converges ?f ?s ==> fds_abs_converges (?f ^ ?n) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Dirichlet_Series_Analysis.fds_abs_summable_zeta",
     "1 < ?s \<bullet> (1::?'a) ==> fds_abs_converges fds_zeta ?s",
     template_implication
      ([template_inequation
         (less_than, template_hole 4,
          template_app
           (template_app (template_hole 3, template_var 0),
            template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_PInf_iff",
     "(abs_conv_abscissa ?f = \<infinity>) =
      (ALL s. ~ fds_abs_converges ?f s)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_hole 3),
       template_app (template_hole 2, t_empty))),
    ("Dirichlet_Series_Analysis.conv_abscissa_PInf_iff",
     "(conv_abscissa ?f = \<infinity>) = (ALL s. ~ fds_converges ?f s)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 0)),
         template_hole 3),
       template_app (template_hole 2, t_empty))),
    ("Dirichlet_Series_Analysis.fds_converges_cmult_right",
     "fds_converges ?f ?s ==> fds_converges (?f * fds_const ?c) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 0))),
             template_var 1)
           ))),
    ("Dirichlet_Series_Analysis.fds_converges_cmult_left",
     "fds_converges ?f ?s ==> fds_converges (fds_const ?c * ?f) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 2)),
             template_var 1)
           ))),
    ("Dirichlet_Series_Analysis.real_power_1_right",
     "0 < ?d ==> real_power ?d (1::?'a) = of_real ?d",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Dirichlet_Series_Analysis.fds_abs_converges_moebius_mu",
     "1 < ?s \<bullet> (1::?'a) ==> fds_abs_converges (fds moebius_mu) ?s",
     template_implication
      ([template_inequation
         (less_than, template_hole 5,
          template_app
           (template_app (template_hole 4, template_var 0),
            template_hole 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)),
             template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_shift",
     "abs_conv_abscissa (fds_shift ?c ?f) =
      abs_conv_abscissa ?f + ereal (?c \<bullet> (1::?'a))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 5, template_var 0)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("Dirichlet_Series_Analysis.completely_multiplicative_function_divide_nat_power",
     "completely_multiplicative_function ?f ==>
      completely_multiplicative_function (%n. ?f n / nat_power n ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Dirichlet_Series_Analysis.multiplicative_function_divide_nat_power",
     "multiplicative_function ?f ==>
      multiplicative_function (%n. ?f n / nat_power n ?s)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Dirichlet_Series_Analysis.fds_abs_converges_norm_power",
     "fds_abs_converges (fds_norm ?f) ?s ==>
      fds_abs_converges (fds_norm (?f ^ ?n)) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_var 1)
           ))),
    ("Dirichlet_Series_Analysis.eval_fds_norm_nonneg",
     "fds_abs_converges (fds_norm ?f) ?s ==>
      0 <= eval_fds (fds_norm ?f) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 1)),
           template_var 0)))),
    ("Dirichlet_Series_Analysis.continuous_on_real_power",
     "?A <= {0<..} ==> continuous_on ?A (%x. real_power x ?s)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_power_leI",
     "abs_conv_abscissa ?f <= ?d ==> abs_conv_abscissa (?f ^ ?n) <= ?d",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_MInfI",
     "(!!s. fds_abs_converges ?f s) ==>
      abs_conv_abscissa ?f = - \<infinity>",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("Dirichlet_Series_Analysis.conv_abscissa_MInfI",
     "(!!s. fds_converges ?f s) ==> conv_abscissa ?f = - \<infinity>",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_PInfI",
     "(!!s. ~ fds_converges ?f s) ==> abs_conv_abscissa ?f = \<infinity>",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Dirichlet_Series_Analysis.conv_abscissa_PInfI",
     "(!!s. ~ fds_converges ?f s) ==> conv_abscissa ?f = \<infinity>",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Dirichlet_Series_Analysis.fds_abs_converges",
     "abs_conv_abscissa ?f < ereal (?s \<bullet> (1::?'a)) ==>
      fds_abs_converges ?f ?s",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_var 1),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.fds_converges",
     "conv_abscissa ?f < ereal (?s \<bullet> (1::?'a)) ==>
      fds_converges ?f ?s",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 4, template_var 1),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.nonneg_dirichlet_series_add",
     "[| nonneg_dirichlet_series ?f; nonneg_dirichlet_series ?g |]
      ==> nonneg_dirichlet_series (?f + ?g)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Dirichlet_Series_Analysis.nonneg_dirichlet_series_mult",
     "[| nonneg_dirichlet_series ?f; nonneg_dirichlet_series ?g |]
      ==> nonneg_dirichlet_series (?f * ?g)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Dirichlet_Series_Analysis.eventually_gt_ereal_at_top",
     "?c ~= \<infinity> ==> \<forall>\<^sub>F x in at_top. ?c < ereal x",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty), template_hole 0)
           ))),
    ("Dirichlet_Series_Analysis.eval_fds_zeta_nonzero",
     "1 < ?s \<bullet> (1::?'a) ==> eval_fds fds_zeta ?s ~= (0::?'a)",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 5))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Dirichlet_Series_Analysis.fds_converges_deriv",
     "conv_abscissa ?f < ereal (?s \<bullet> (1::?'a)) ==>
      fds_converges (fds_deriv ?f) ?s",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 5, template_var 1),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.fds_abs_diverges",
     "ereal (?s \<bullet> (1::?'a)) < abs_conv_abscissa ?f ==>
      ~ fds_abs_converges ?f ?s",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)),
          template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)
               )
           ))),
    ("Dirichlet_Series_Analysis.fds_diverges",
     "ereal (?s \<bullet> (1::?'a)) < conv_abscissa ?f ==>
      ~ fds_converges ?f ?s",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)),
          template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)
               )
           ))),
    ("Dirichlet_Series_Analysis.fds_abs_converges_altdef'",
     "fds_abs_converges ?f ?s =
      ((%n. fds_nth ?f n / nat_power n ?s) abs_summable_on UNIV)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 4, t_empty), template_hole 0))),
    ("Dirichlet_Series_Analysis.eval_fds_exp",
     "fds_abs_converges ?f ?s ==>
      eval_fds (fds_exp ?f) ?s = exp (eval_fds ?f ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_cmult",
     "?c ~= (0::?'a) ==>
      abs_conv_abscissa (fds_const ?c * ?f) = abs_conv_abscissa ?f",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Dirichlet_Series_Analysis.conv_abscissa_cmult_right",
     "?c ~= (0::?'a) ==>
      conv_abscissa (?f * fds_const ?c) = conv_abscissa ?f",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 2, template_var 0)))),
    ("Dirichlet_Series_Analysis.conv_abscissa_cmult_left",
     "?c ~= (0::?'a) ==>
      conv_abscissa (fds_const ?c * ?f) = conv_abscissa ?f",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Dirichlet_Series_Analysis.fds_ln_exp",
     "?l = fds_nth ?f (Suc 0) ==> fds_ln ?l (fds_exp ?f) = ?f",
     template_implication
      ([template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 5, template_var 0),
            template_app (template_hole 4, template_hole 3)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Dirichlet_Series_Analysis.fds_abs_converges_altdef",
     "fds_abs_converges ?f ?s =
      ((%n. fds_nth ?f n / nat_power n ?s) abs_summable_on {1..})",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 5, t_empty),
         template_app (template_hole 1, template_hole 0)))),
    ("Dirichlet_Series_Analysis.eval_fds_of_real",
     "fds_converges ?f ?s ==>
      eval_fds (fds_of_real ?f) (of_real ?s) = of_real (eval_fds ?f ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Dirichlet_Series_Analysis.fds_exp_ln",
     "exp ?l = fds_nth ?f (Suc 0) ==> fds_exp (fds_ln ?l ?f) = ?f",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 1),
          template_app
           (template_app (template_hole 5, template_var 0),
            template_app (template_hole 4, template_hole 3)))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Dirichlet_Series_Analysis.continuous_eval_fds",
     "conv_abscissa ?f < ereal (?s \<bullet> (1::?'a)) ==>
      continuous (at ?s within ?A) (eval_fds ?f)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 6, template_var 2),
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 1),
              template_hole 3)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Dirichlet_Series_Analysis.fds_abs_converges_mult",
     "[| fds_abs_converges ?f ?s; fds_abs_converges ?g ?s |]
      ==> fds_abs_converges (?f * ?g) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Dirichlet_Series_Analysis.eval_fds_power",
     "fds_abs_converges ?f ?s ==>
      eval_fds (?f ^ ?n) ?s = eval_fds ?f ?s ^ ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Dirichlet_Series_Analysis.analytic_fds_eval",
     "?A <= {z. conv_abscissa ?f < ereal (Re z)} ==>
      eval_fds ?f analytic_on ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Dirichlet_Series_Analysis.holomorphic_fds_eval",
     "?A <= {z. conv_abscissa ?f < ereal (Re z)} ==>
      eval_fds ?f holomorphic_on ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_mono",
     "(!!s. fds_abs_converges ?g s ==> fds_abs_converges ?f s) ==>
      abs_conv_abscissa ?f <= abs_conv_abscissa ?g",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Dirichlet_Series_Analysis.conv_abscissa_mono",
     "(!!s. fds_converges ?g s ==> fds_converges ?f s) ==>
      conv_abscissa ?f <= conv_abscissa ?g",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Dirichlet_Series_Analysis.continuous_on_eval_fds",
     "?A <= {s. conv_abscissa ?f < ereal (s \<bullet> (1::?'a))} ==>
      continuous_on ?A (eval_fds ?f)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Dirichlet_Series_Analysis.fds_abs_converges_Re_le",
     "[| fds_abs_converges ?f ?z;
         ?z \<bullet> (1::?'a) <= ?z' \<bullet> (1::?'a) |]
      ==> fds_abs_converges ?f ?z'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_hole 0),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_hole 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.fds_converges_Re_le",
     "[| fds_converges ?f ?s0.0;
         ?s0.0 \<bullet> (1::?'a) < ?s \<bullet> (1::?'a) |]
      ==> fds_converges ?f ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_hole 0),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_hole 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.nonneg_dirichlet_series_lnD",
     "[| nonneg_dirichlet_series (fds_ln ?l ?f);
         exp ?l = fds_nth ?f (Suc 0) |]
      ==> nonneg_dirichlet_series ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            ),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_app (template_hole 1, template_hole 0)))],
       template_predicate
        (template_app (template_hole 6, template_var 0)))),
    ("Dirichlet_Series_Analysis.summable_fds_exp_aux",
     "fds_nth ?f' 1 = (0::?'a) ==>
      summable (%k. fds_nth (?f' ^ k) ?n /\<^sub>R fact k)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_hole 6),
          template_hole 5)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Dirichlet_Series_Analysis.eval_fds_deriv",
     "conv_abscissa ?f < ereal (?s \<bullet> (1::?'a)) ==>
      eval_fds (fds_deriv ?f) ?s = deriv (eval_fds ?f) ?s",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 7, template_var 1),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4)))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_var 0)))),
    ("Dirichlet_Series_Analysis.nonneg_Reals_sum",
     "(!!x. x : ?A ==> ?f x : \<real>\<^sub>\<ge>\<^sub>0) ==>
      sum ?f ?A : \<real>\<^sub>\<ge>\<^sub>0",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_hole 1)
           ))),
    ("Dirichlet_Series_Analysis.fds_abs_converges_prod",
     "(!!x. x : ?A ==> fds_abs_converges (?f x) ?s) ==>
      fds_abs_converges (prod ?f ?A) ?s",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_leI_weak",
     "(!!x. ?d < ereal x ==> fds_abs_converges ?f (of_real x)) ==>
      abs_conv_abscissa ?f <= ?d",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("Dirichlet_Series_Analysis.conv_abscissa_leI_weak",
     "(!!x. ?d < ereal x ==> fds_converges ?f (of_real x)) ==>
      conv_abscissa ?f <= ?d",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("Dirichlet_Series_Analysis.fds_converges_deriv_aux",
     "[| fds_converges ?f ?s0.0;
         ?s0.0 \<bullet> (1::?'a) < ?s \<bullet> (1::?'a) |]
      ==> fds_converges (fds_deriv ?f) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_hole 1),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 2)),
             template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.frequently_eventually_frequently",
     "[| frequently ?P ?F; eventually ?Q ?F |]
      ==> \<exists>\<^sub>F x in ?F. ?P x & ?Q x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_var 1)
           ))),
    ("Dirichlet_Series_Analysis.fds_abs_converges_norm_mult",
     "[| fds_abs_converges (fds_norm ?f) ?s;
         fds_abs_converges (fds_norm ?g) ?s |]
      ==> fds_abs_converges (fds_norm (?f * ?g)) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 0)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_var 1)
           ))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_diff_leI",
     "[| abs_conv_abscissa ?f <= ?d; abs_conv_abscissa ?g <= ?d |]
      ==> abs_conv_abscissa (?f - ?g) <= ?d",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_add_leI",
     "[| abs_conv_abscissa ?f <= ?d; abs_conv_abscissa ?g <= ?d |]
      ==> abs_conv_abscissa (?f + ?g) <= ?d",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_mult_leI",
     "[| abs_conv_abscissa ?f <= ?d; abs_conv_abscissa ?g <= ?d |]
      ==> abs_conv_abscissa (?f * ?g) <= ?d",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Dirichlet_Series_Analysis.conv_abscissa_diff_leI",
     "[| conv_abscissa ?f <= ?d; conv_abscissa ?g <= ?d |]
      ==> conv_abscissa (?f - ?g) <= ?d",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Dirichlet_Series_Analysis.conv_abscissa_add_leI",
     "[| conv_abscissa ?f <= ?d; conv_abscissa ?g <= ?d |]
      ==> conv_abscissa (?f + ?g) <= ?d",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 0),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Dirichlet_Series_Analysis.eval_fds_altdef",
     "fds_abs_converges ?f ?s ==>
      eval_fds ?f ?s = (\<Sum>\<^sub>an. fds_nth ?f n / nat_power n ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 4, t_empty), template_hole 0)))),
    ("Dirichlet_Series_Analysis.eval_fds_norm_power_le",
     "fds_abs_converges (fds_norm ?f) ?s ==>
      eval_fds (fds_norm (?f ^ ?n)) ?s <= eval_fds (fds_norm ?f) ?s ^ ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0))),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 4, template_var 2)),
               template_var 1)),
           template_var 0)))),
    ("Dirichlet_Series_Analysis.has_field_derivative_eval_fds",
     "conv_abscissa ?f < ereal (?s \<bullet> (1::?'a)) ==>
      (eval_fds ?f has_field_derivative eval_fds (fds_deriv ?f) ?s)
       (at ?s within ?A)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 7, template_var 2),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 2)),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Dirichlet_Series_Analysis.fds_converges_imp_abs_converges",
     "[| fds_converges ?f ?s;
         ?s \<bullet> (1::?'a) + 1 < ?s' \<bullet> (1::?'a) |]
      ==> fds_abs_converges ?f ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_hole 2)),
            template_hole 1),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.has_field_derivative_nat_power",
     "0 < ?n ==>
      (nat_power ?n has_field_derivative
       ln (real ?n) *\<^sub>R nat_power ?n ?x)
       (at ?x within ?A)",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 2))),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Dirichlet_Series_Analysis.has_vector_derivative_real_power",
     "0 < ?x ==>
      ((%y. real_power y ?c) has_vector_derivative
       ?c * real_power ?x (?c - (1::?'a)))
       (at ?x within ?A)",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_hole 1)))),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Dirichlet_Series_Analysis.tendsto_eval_fds_Re_going_to_at_top'",
     "conv_abscissa ?f ~= \<infinity> ==>
      (eval_fds ?f \<longlongrightarrow> fds_nth ?f 1)
       (Re going_to at_top)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 10, template_var 0),
              template_hole 9)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 8, t_empty),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4))),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_hole 1),
               template_hole 0))
           ))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_sum_leI",
     "(!!x. x : ?A ==> abs_conv_abscissa (?f x) <= ?d) ==>
      abs_conv_abscissa (sum ?f ?A) <= ?d",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_prod_le",
     "(!!x. x : ?A ==> abs_conv_abscissa (?f x) <= ?d) ==>
      abs_conv_abscissa (prod ?f ?A) <= ?d",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Dirichlet_Series_Analysis.conv_abscissa_sum_leI",
     "(!!x. x : ?A ==> conv_abscissa (?f x) <= ?d) ==>
      conv_abscissa (sum ?f ?A) <= ?d",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_var 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_completely_multiplicative_log_deriv",
     "[| completely_multiplicative_function (fds_nth ?f);
         fds_nth ?f 1 ~= (0::?'a) |]
      ==> abs_conv_abscissa (fds_deriv ?f / ?f) <= abs_conv_abscissa ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 8, template_var 0),
                template_hole 5),
              template_hole 4)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)),
         template_app (template_hole 2, template_var 0)))),
    ("Dirichlet_Series_Analysis.frequently_going_to_at_top_iff",
     "frequently ?P (?f going_to at_top) =
      (EX g. ALL n. ?P (g n) & (LIM n sequentially. ?f (g n) :> at_top))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 0),
             template_hole 6),
           template_hole 5)),
       template_app (template_hole 4, t_empty))),
    ("Dirichlet_Series_Analysis.eval_fds_higher_deriv",
     "conv_abscissa ?f < ereal (?s \<bullet> (1::?'a)) ==>
      eval_fds ((fds_deriv ^^ ?n) ?f) ?s = (deriv ^^ ?n) (eval_fds ?f) ?s",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 9, template_var 2),
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_hole 6)))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0),
             template_app (template_hole 4, template_var 2)),
           template_var 1)))),
    ("Dirichlet_Series_Analysis.tendsto_eval_fds_Re_going_to_at_top",
     "conv_abscissa ?f ~= \<infinity> ==>
      (eval_fds ?f \<longlongrightarrow> fds_nth ?f 1)
       ((%s. s \<bullet> (1::?'a)) going_to at_top)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 11, template_var 0),
              template_hole 10)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 9, t_empty),
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_hole 5))),
             template_app
              (template_app
                (template_app (template_hole 4, t_empty), template_hole 1),
               template_hole 0))
           ))),
    ("Dirichlet_Series_Analysis.eval_fds_mult",
     "[| fds_abs_converges ?f ?s; fds_abs_converges ?g ?s |]
      ==> eval_fds (?f * ?g) ?s = eval_fds ?f ?s * eval_fds ?g ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Dirichlet_Series_Analysis.fds_exp_ln_strong",
     "fds_nth ?f (Suc 0) ~= (0::?'a) ==>
      fds_exp (fds_ln ?l ?f) =
      fds_const (exp ?l / fds_nth ?f (Suc 0)) * ?f",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 10, template_var 1),
                template_app (template_hole 9, template_hole 8)),
              template_hole 7)
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_app
                  (template_app (template_hole 10, template_var 1),
                   template_app (template_hole 9, template_hole 8))))),
           template_var 1)))),
    ("Dirichlet_Series_Analysis.eval_fds_zeroD_aux",
     "[| fds_abs_converges ?h ?s0.0;
         \<exists>\<^sub>F s in (%s. s \<bullet> (1::?'a)) going_to at_top.
            eval_fds ?h s = (0::?'a) |]
      ==> ?h = 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, t_empty),
              template_app
               (template_app
                 (template_app (template_hole 6, t_empty), template_hole 3),
                template_hole 2))
            )],
       template_equation (template_var 1, template_hole 0))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_leI",
     "(!!c'. ?c < ereal c' ==>
             EX s. s \<bullet> (1::?'a) = c' & fds_abs_converges ?f s) ==>
      abs_conv_abscissa ?f <= ?c",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("Dirichlet_Series_Analysis.conv_abscissa_leI",
     "(!!c'. ?c < ereal c' ==>
             EX s. s \<bullet> (1::?'a) = c' & fds_converges ?f s) ==>
      conv_abscissa ?f <= ?c",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("Dirichlet_Series_Analysis.eval_fds_zeroD",
     "[| conv_abscissa ?h < \<infinity>;
         \<exists>\<^sub>F s in (%s. s \<bullet> (1::?'a)) going_to at_top.
            eval_fds ?h s = (0::?'a) |]
      ==> ?h = 0",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 12, template_var 0),
          template_hole 11),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, t_empty),
              template_app
               (template_app
                 (template_app (template_hole 6, t_empty), template_hole 3),
                template_hole 2))
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Dirichlet_Series_Analysis.tendsto_eval_fds_Re_at_top'",
     "conv_abscissa ?f ~= \<infinity> ==>
      uniform_limit UNIV
       (%\<sigma> t.
           eval_fds ?f
            (complex_of_real \<sigma> + complex_of_real t * \<i>))
       (%_. fds_nth ?f 1) at_top",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 12, template_var 0),
              template_hole 11)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 10, t_empty),
               template_app
                (template_app (template_hole 4, template_hole 3), t_empty)),
             template_hole 0)
           ))),
    ("Dirichlet_Series_Analysis.eval_fds_prod",
     "(!!x. x : ?A ==> fds_abs_converges (?f x) ?s) ==>
      eval_fds (prod ?f ?A) ?s = (PROD x:?A. eval_fds (?f x) ?s)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 0, t_empty), template_var 2)))),
    ("Dirichlet_Series_Analysis.abs_conv_abscissa_geI",
     "(!!c'. ereal c' < ?c ==>
             EX s. s \<bullet> (1::?'a) = c' & ~ fds_abs_converges ?f s) ==>
      ?c <= abs_conv_abscissa ?f",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("Dirichlet_Series_Analysis.conv_abscissa_geI",
     "(!!c'. ereal c' < ?c ==>
             EX s. s \<bullet> (1::?'a) = c' & ~ fds_converges ?f s) ==>
      ?c <= conv_abscissa ?f",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("Dirichlet_Series_Analysis.fds_abs_convergent_euler_product'",
     "[| completely_multiplicative_function (fds_nth ?f);
         fds_abs_converges ?f ?s |]
      ==> abs_convergent_prod
           (%p. if prime p
                then inverse ((1::?'a) - fds_nth ?f p / nat_power p ?s)
                else (1::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Dirichlet_Series_Analysis.continuous_eval_fds'",
     "[| continuous (at ?s within ?A) ?g;
         conv_abscissa ?f < ereal (?g ?s \<bullet> (1::?'a)) |]
      ==> continuous (at ?s within ?A) (%x. eval_fds ?f (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_inequation
         (less_than, template_app (template_hole 4, template_var 0),
          template_app
           (template_hole 3,
            template_app
             (template_app
               (template_hole 2,
                template_app (template_var 1, template_var 3)),
              template_hole 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 2)),
             t_empty)
           ))),
    ("Dirichlet_Series_Analysis.continuous_on_eval_fds'",
     "[| continuous_on ?A ?g;
         ?g ` ?A <= {s. conv_abscissa ?f < ereal (s \<bullet> (1::?'a))} |]
      ==> continuous_on ?A (%x. eval_fds ?f (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 7, template_var 1), template_var 2),
          template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 2), t_empty)
           ))),
    ("Dirichlet_Series_Analysis.eval_fds_integral_has_field_derivative",
     "[| abs_conv_abscissa ?f < ereal (?s \<bullet> (1::?'a));
         fds_nth ?f 1 = (0::?'a) |]
      ==> (eval_fds (fds_integral ?c ?f) has_field_derivative
           eval_fds ?f ?s)
           (at ?s)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 12, template_var 2),
          template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 10, template_var 1),
              template_hole 9))),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 2),
            template_hole 6),
          template_hole 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 2))),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Dirichlet_Series_Analysis.fds_abs_convergent_zero_iff",
     "[| completely_multiplicative_function (fds_nth ?f);
         fds_abs_converges ?f ?s |]
      ==> (eval_fds ?f ?s = (0::?'a)) =
          (EX p. prime p & fds_nth ?f p = nat_power p ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)),
           template_hole 4),
         template_app (template_hole 3, t_empty)))),
    ("Dirichlet_Series_Analysis.eval_fds_norm_mult_le",
     "[| fds_abs_converges (fds_norm ?f) ?s;
         fds_abs_converges (fds_norm ?g) ?s |]
      ==> eval_fds (fds_norm (?f * ?g)) ?s
          <= eval_fds (fds_norm ?f) ?s * eval_fds (fds_norm ?g) ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0))),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 4, template_var 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 4, template_var 0)),
             template_var 1))))),
    ("Dirichlet_Series_Analysis.tendsto_eval_fds_Re_at_top",
     "[| conv_abscissa ?f ~= \<infinity>;
         LIM x ?F. ?S x \<bullet> (1::?'a) :> at_top |]
      ==> ((%x. eval_fds ?f (?S x)) \<longlongrightarrow> fds_nth ?f 1) ?F",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 10, template_var 2),
              template_hole 9)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, t_empty), template_hole 5),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_hole 0))),
             template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.bounded_partial_sums_imp_fps_converges",
     "[| Bseq (%n. SUM k<=n. fds_nth ?f k / nat_power k ?s0.0);
         ?s0.0 \<bullet> (1::?'a) < ?s \<bullet> (1::?'a) |]
      ==> fds_converges ?f ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, t_empty), template_hole 4)
            ),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_hole 1),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_hole 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Dirichlet_Series_Analysis.eval_fds_inverse",
     "[| fds_abs_converges ?f ?s; fds_abs_converges (inverse ?f) ?s;
         fds_nth ?f 1 ~= (0::?'a) |]
      ==> eval_fds (inverse ?f) ?s = inverse (eval_fds ?f ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_hole 3),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 7, template_var 1)),
           template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Dirichlet_Series_Analysis.frequently_filtercomapI",
     "[| LIM n ?G. ?f (?g n) :> ?F; \<forall>\<^sub>F n in ?G. ?P (?g n);
         ?G ~= bot |]
      ==> frequently ?P (filtercomap ?f ?F)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, t_empty), template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2))
           ))),
    ("Dirichlet_Series_Analysis.fds_abs_convergent_euler_product",
     "[| multiplicative_function (fds_nth ?f); fds_abs_converges ?f ?s |]
      ==> abs_convergent_prod
           (%p. if prime p
                then \<Sum>i. fds_nth ?f (p ^ i) / nat_power (p ^ i) ?s
                else (1::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Dirichlet_Series_Analysis.euler_product_fds_zeta",
     "1 < ?s \<bullet> (1::?'a) ==>
      (%n. PROD p<=n.
           if prime p then inverse ((1::?'a) - (1::?'a) / nat_power p ?s)
           else (1::?'a))
      \<longlonglongrightarrow> eval_fds fds_zeta ?s",
     template_implication
      ([template_inequation
         (less_than, template_hole 15,
          template_app
           (template_app (template_hole 14, template_var 0),
            template_hole 13))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, t_empty),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 0))),
             template_hole 0)
           ))),
    ("Dirichlet_Series_Analysis.frequently_going_to_at_topE",
     "[| frequently ?P (?f going_to at_top);
         !!g. [| !!n. ?P (g n); LIM n sequentially. ?f (g n) :> at_top |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 1),
                  template_hole 5),
                template_hole 4))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Dirichlet_Series_Analysis.fds_nonzero_halfplane_exists",
     "[| conv_abscissa ?f < \<infinity>; ?f ~= 0 |]
      ==> \<forall>\<^sub>F s in (%s. s \<bullet> (1::?'a)) going_to at_top.
             fds_converges ?f s & eval_fds ?f s ~= (0::?'a)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 15, template_var 0),
          template_hole 14),
        template_negation
         (template_equation (template_var 0, template_hole 11))],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, t_empty),
             template_app
              (template_app
                (template_app (template_hole 4, t_empty), template_hole 1),
               template_hole 0))
           ))),
    ("Dirichlet_Series_Analysis.eval_fds_eqD",
     "[| conv_abscissa ?f < \<infinity>; conv_abscissa ?g < \<infinity>;
         \<exists>\<^sub>F s in (%s. s \<bullet> (1::?'a)) going_to at_top.
            eval_fds ?f s = eval_fds ?g s |]
      ==> ?f = ?g",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 10, template_var 1),
          template_hole 9),
        template_inequation
         (less_than, template_app (template_hole 10, template_var 0),
          template_hole 9),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, t_empty),
              template_app
               (template_app
                 (template_app (template_hole 5, t_empty), template_hole 2),
                template_hole 1))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Dirichlet_Series_Analysis.has_field_derivative_eval_fds'",
     "[| conv_abscissa ?f < ereal (?g ?x \<bullet> (1::?'a));
         (?g has_field_derivative ?Db) (at ?x within ?s) |]
      ==> ((%x. eval_fds ?f (?g x)) has_field_derivative
           eval_fds (fds_deriv ?f) (?g ?x) * ?Db)
           (at ?x within ?s)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 8, template_var 4),
          template_app
           (template_hole 7,
            template_app
             (template_app
               (template_hole 6,
                template_app (template_var 3, template_var 2)),
              template_hole 5))),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 0, template_var 4)),
                     template_app (template_var 3, template_var 2))),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))
           ))),
    ("Dirichlet_Series_Analysis.uniformly_convergent_eval_fds",
     "[| compact ?B;
         !!z. z : ?B ==> conv_abscissa ?f < ereal (z \<bullet> (1::?'a)) |]
      ==> uniformly_convergent_on ?B
           (%N z. SUM n<=N. fds_nth ?f n / nat_power n z)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1), t_empty)
           ))),
    ("Dirichlet_Series_Analysis.uniformly_convergent_eval_fds'",
     "[| compact ?B;
         !!z. z : ?B ==> conv_abscissa ?f < ereal (z \<bullet> (1::?'a)) |]
      ==> uniformly_convergent_on ?B
           (%N z. SUM n<N. fds_nth ?f n / nat_power n z)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1), t_empty)
           ))),
    ("Dirichlet_Series_Analysis.fds_euler_product_LIMSEQ'",
     "[| completely_multiplicative_function (fds_nth ?f);
         fds_abs_converges ?f ?s |]
      ==> (%n. PROD p<=n.
               if prime p
               then inverse ((1::?'a) - fds_nth ?f p / nat_power p ?s)
               else (1::?'a))
          \<longlonglongrightarrow> eval_fds ?f ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, t_empty),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_hole 0)
           ))),
    ("Dirichlet_Series_Analysis.fds_ln_completely_multiplicative",
     "[| completely_multiplicative_function (fds_nth ?f);
         fds_nth ?f 1 ~= (0::?'a) |]
      ==> fds_ln ?l ?f =
          fds (%n. if n = 1 then ?l
                   else fds_nth ?f n * mangoldt n /\<^sub>R ln (real n))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 16,
              template_app (template_hole 15, template_var 1))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 15, template_var 1),
                template_hole 12),
              template_hole 11)
            )],
       template_equation
        (template_app
          (template_app (template_hole 9, template_var 0), template_var 1),
         template_app (template_hole 8, t_empty)))),
    ("Dirichlet_Series_Analysis.entire_continuation_imp_abs_conv_abscissa_MInfty",
     "[| nonneg_dirichlet_series ?f; abs_conv_abscissa ?f <= ereal ?c;
         !!s. ?c < Re s ==> ?g s = eval_fds ?f s; ?g holomorphic_on UNIV |]
      ==> abs_conv_abscissa ?f = - \<infinity>",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 11, template_var 2),
          template_app (template_hole 10, template_var 1)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_equation
        (template_app (template_hole 11, template_var 2),
         template_app (template_hole 1, template_hole 0)))),
    ("Dirichlet_Series_Analysis.norm_dirichlet_series_cutoff_le",
     "[| fds_abs_converges ?f ?s0.0; 0 < ?N; ?c <= ?s \<bullet> (1::?'a);
         ?s0.0 \<bullet> (1::?'a) <= ?c |]
      ==> summable (%n. fds_nth ?f (n + ?N) / nat_power (n + ?N) ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_var 3)
            ),
        template_inequation (less_than, template_hole 8, template_var 2),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 5)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 6, template_var 3),
            template_hole 5),
          template_var 1)],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Dirichlet_Series_Analysis.fds_euler_product_LIMSEQ",
     "[| multiplicative_function (fds_nth ?f); fds_abs_converges ?f ?s |]
      ==> (%n. PROD p<=n.
               if prime p
               then \<Sum>i. fds_nth ?f (p ^ i) / nat_power (p ^ i) ?s
               else (1::?'a))
          \<longlonglongrightarrow> eval_fds ?f ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, t_empty),
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_hole 0)
           ))),
    ("Dirichlet_Series_Analysis.norm_dirichlet_series_cutoff_le",
     "[| fds_abs_converges ?f ?s0.0; 0 < ?N; ?c <= ?s \<bullet> (1::?'a);
         ?s0.0 \<bullet> (1::?'a) <= ?c |]
      ==> summable
           (%n. norm (fds_nth ?f (n + ?N)) / nat_power (n + ?N) ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_var 3)
            ),
        template_inequation (less_than, template_hole 9, template_var 2),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 7, template_var 0),
            template_hole 6)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 7, template_var 3),
            template_hole 6),
          template_var 1)],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Dirichlet_Series_Analysis.frequently_going_toI",
     "[| LIM n ?G. ?f (?g n) :> ?F; \<forall>\<^sub>F n in ?G. ?P (?g n);
         \<forall>\<^sub>F n in ?G. ?g n : ?A; ?G ~= bot |]
      ==> frequently ?P (?f going_to ?F within ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, t_empty), template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 2)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 3),
               template_var 0))
           ))),
    ("Dirichlet_Series_Analysis.uniformly_convergent_eval_fds_aux'",
     "[| fds_converges ?f ?s0.0; compact ?B;
         !!z. z : ?B ==> ?s0.0 \<bullet> (1::?'a) < z \<bullet> (1::?'a) |]
      ==> uniformly_convergent_on ?B
           (%N z. SUM n<=N. fds_nth ?f n / nat_power n z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0), t_empty)
           ))),
    ("Dirichlet_Series_Analysis.fds_primepow_subseries_euler_product_cm",
     "[| completely_multiplicative_function (fds_nth ?f); prime ?p;
         abs_conv_abscissa ?f < ereal (?s \<bullet> (1::?'a)) |]
      ==> eval_fds (fds_primepow_subseries ?p ?f) ?s =
          (1::?'a) / ((1::?'a) - fds_nth ?f ?p / nat_power ?p ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 18,
              template_app (template_hole 17, template_var 2))
            ),
        template_predicate
         (template_app (template_hole 16, template_var 1)),
        template_inequation
         (less_than, template_app (template_hole 14, template_var 2),
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 12, template_var 0),
              template_hole 11)))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, t_empty), template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 11),
           template_app
            (template_app (template_hole 1, template_hole 11),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 17, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))))),
    ("Dirichlet_Series_Analysis.eval_fds_integral_has_field_derivative'",
     "[| (?f has_field_derivative ?D) (at ?x within ?s);
         abs_conv_abscissa ?fa < ereal (?f ?x \<bullet> (1::?'a));
         fds_nth ?fa 1 = (0::?'a) |]
      ==> ((%x. eval_fds (fds_integral ?c ?fa) (?f x)) has_field_derivative
           eval_fds ?fa (?f ?x) * ?D)
           (at ?x within ?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_var 4),
              template_app
               (template_app (template_hole 12, template_var 3),
                template_var 2))
            ),
        template_inequation
         (less_than, template_app (template_hole 10, template_var 1),
          template_app
           (template_hole 9,
            template_app
             (template_app
               (template_hole 8,
                template_app (template_var 5, template_var 3)),
              template_hole 7))),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 1),
            template_hole 4),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 13, t_empty),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_app (template_var 5, template_var 3))),
                 template_var 4)),
             template_app
              (template_app (template_hole 12, template_var 3),
               template_var 2))
           ))),
    ("Dirichlet_Series_Analysis.summable_dirichlet_prod",
     "[| ?f 0 = (0::?'a); ?g 0 = (0::?'a);
         summable (%n. norm (?f n / nat_power n ?s));
         summable (%n. norm (?g n / nat_power n ?s)) |]
      ==> summable (%n. norm (dirichlet_prod ?f ?g n / nat_power n ?s))",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_hole 6), template_hole 5),
        template_equation
         (template_app (template_var 1, template_hole 6), template_hole 5),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Dirichlet_Series_Analysis.summable_dirichlet_prod_real",
     "[| ?f 0 = 0; ?g 0 = 0; summable (%n. norm (?f n / real n powr ?s));
         summable (%n. norm (?g n / real n powr ?s)) |]
      ==> summable (%n. norm (dirichlet_prod ?f ?g n / real n powr ?s))",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_hole 7), template_hole 6),
        template_equation
         (template_app (template_var 1, template_hole 7), template_hole 6),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Dirichlet_Series_Analysis.pringsheim_landau",
     "[| nonneg_dirichlet_series ?f; abs_conv_abscissa ?f = ereal ?c;
         !!s. [| s : ?A; ?c < Re s |] ==> ?g s = eval_fds ?f s;
         ?g holomorphic_on ?A; open ?A; complex_of_real ?c : ?A |]
      ==> False",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 3)),
        template_equation
         (template_app (template_hole 11, template_var 3),
          template_app (template_hole 10, template_var 2)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            )],
       template_predicate (template_hole 0))),
    ("Dirichlet_Series_Analysis.eval_fds_ln_completely_multiplicative",
     "[| completely_multiplicative_function (fds_nth ?f);
         fds_nth ?f 1 ~= (0::?'a);
         abs_conv_abscissa (fds_deriv ?f / ?f)
         < ereal (?s \<bullet> (1::?'a)) |]
      ==> (%(p, k).
              (fds_nth ?f p / nat_power p ?s) ^ Suc k /
              of_nat (Suc k)) abs_summable_on
          {p. prime p} \<times> UNIV",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 23,
              template_app (template_hole 22, template_var 1))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 22, template_var 1),
                template_hole 19),
              template_hole 18)
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 16,
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 1)),
              template_var 1)),
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 12, template_var 0),
              template_hole 11)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10, template_app (template_hole 9, t_empty)),
             template_app
              (template_app
                (template_hole 3, template_app (template_hole 2, t_empty)),
               t_empty))
           ))),
    ("Dirichlet_Series_Analysis.uniformly_Cauchy_eval_fds_aux",
     "[| Bseq (%n. SUM k<=n. fds_nth ?f k / nat_power k ?s0.0); compact ?B;
         !!z. z : ?B ==> ?s0.0 \<bullet> (1::?'a) < z \<bullet> (1::?'a) |]
      ==> uniformly_Cauchy_on ?B
           (%N z. SUM n<=N. fds_nth ?f n / nat_power n z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, t_empty), template_hole 7)
            ),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), t_empty)
           ))),
    ("Dirichlet_Series_Analysis.uniformly_convergent_eval_fds_aux",
     "[| Bseq (%n. SUM k<=n. fds_nth ?f k / nat_power k ?s0.0); compact ?B;
         !!z. z : ?B ==> ?s0.0 \<bullet> (1::?'a) < z \<bullet> (1::?'a) |]
      ==> uniformly_convergent_on ?B
           (%N z. SUM n<=N. fds_nth ?f n / nat_power n z)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, t_empty), template_hole 7)
            ),
        template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), t_empty)
           ))),
    ("Dirichlet_Series_Analysis.eval_fds_log_deriv",
     "[| fds_nth ?f 1 ~= (0::?'a);
         abs_conv_abscissa ?f < ereal (?s \<bullet> (1::?'a));
         abs_conv_abscissa (fds_deriv ?f / ?f)
         < ereal (?s \<bullet> (1::?'a));
         eval_fds ?f ?s ~= (0::?'a) |]
      ==> eval_fds (fds_deriv ?f / ?f) ?s =
          eval_fds (fds_deriv ?f) ?s / eval_fds ?f ?s",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 11, template_var 1),
                template_hole 10),
              template_hole 9)
            ),
        template_inequation
         (less_than, template_app (template_hole 7, template_var 1),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4))),
        template_inequation
         (less_than,
          template_app
           (template_hole 7,
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 1)),
              template_var 1)),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 0),
              template_hole 4))),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_hole 9)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 2, template_var 1)),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Dirichlet_Series_Analysis.eval_fds_at_top_tail_bound",
     "[| abs_conv_abscissa ?f < ereal ?c; ?c <= ?s \<bullet> (1::?'a) |]
      ==> norm (eval_fds ?f ?s - fds_nth ?f 1)
          <= (\<Sum>n. norm (fds_nth ?f (n + 2)) / real (n + 2) powr ?c) *
             2 powr ?c /
             2 powr (?s \<bullet> (1::?'a))",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 19, template_var 2),
          template_app (template_hole 18, template_var 1)),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 16, template_var 0),
            template_hole 15))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 12, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 11, template_var 2),
               template_hole 10))),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8, template_app (template_hole 7, t_empty)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 0,
                     template_app (template_hole 4, template_hole 3))),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 0,
                 template_app (template_hole 4, template_hole 3))),
             template_app
              (template_app (template_hole 16, template_var 0),
               template_hole 15)))))),
    ("Dirichlet_Series_Analysis.pringsheim_landau_aux",
     "[| nonneg_dirichlet_series ?f; abs_conv_abscissa ?f <= ereal ?c;
         !!s. [| s : ?A; ?c < Re s |] ==> ?g s = eval_fds ?f s;
         ?g holomorphic_on ?A; open ?A; complex_of_real ?c : ?A |]
      ==> EX x<?c. fds_abs_converges ?f (complex_of_real x)",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 13, template_var 3),
          template_app (template_hole 12, template_var 2)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 3, template_var 2)),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Dirichlet_Series_Analysis.eval_fds_ln_completely_multiplicative",
     "[| completely_multiplicative_function (fds_nth ?f);
         fds_nth ?f 1 ~= (0::?'a);
         abs_conv_abscissa (fds_deriv ?f / ?f)
         < ereal (?s \<bullet> (1::?'a)) |]
      ==> eval_fds (fds_ln ?l ?f) ?s =
          ?l +
          (INFSETSUM (p, k):{p. prime p} \<times> UNIV.
              (fds_nth ?f p / nat_power p ?s) ^ Suc k / of_nat (Suc k))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 26,
              template_app (template_hole 25, template_var 2))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 25, template_var 2),
                template_hole 22),
              template_hole 21)
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 19,
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 2)),
              template_var 2)),
          template_app
           (template_hole 16,
            template_app
             (template_app (template_hole 15, template_var 1),
              template_hole 14)))],
       template_equation
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 12, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app (template_hole 11, template_var 0),
           template_app
            (template_app
              (template_hole 10, template_app (template_hole 9, t_empty)),
             template_app
              (template_app
                (template_hole 3, template_app (template_hole 2, t_empty)),
               t_empty)))))),
    ("Dirichlet_Series_Analysis.eval_fds_ln_completely_multiplicative_strong",
     "[| fds_abs_converges (fds (%n. fds_nth (fds_ln ?l ?f) n * ?g n)) ?s;
         completely_multiplicative_function (fds_nth ?f);
         fds_nth ?f 1 ~= (0::?'a) |]
      ==> (%(p, k).
              (fds_nth ?f p / nat_power p ?s) ^ Suc k * ?g (p ^ Suc k) /
              of_nat (Suc k)) abs_summable_on
          {p. prime p} \<times> UNIV",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21, template_app (template_hole 20, t_empty)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 16,
              template_app (template_hole 18, template_var 2))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 18, template_var 2),
                template_hole 13),
              template_hole 12)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11, template_app (template_hole 10, t_empty)),
             template_app
              (template_app
                (template_hole 3, template_app (template_hole 2, t_empty)),
               t_empty))
           ))),
    ("Dirichlet_Series_Analysis.norm_dirichlet_series_cutoff_le",
     "[| fds_abs_converges ?f ?s0.0; 0 < ?N; ?c <= ?s \<bullet> (1::?'a);
         ?s0.0 \<bullet> (1::?'a) <= ?c |]
      ==> norm (\<Sum>n. fds_nth ?f (n + ?N) / nat_power (n + ?N) ?s)
          <= (\<Sum>n. norm (fds_nth ?f (n + ?N)) / nat_power (n + ?N) ?c) /
             nat_power ?N (?s \<bullet> (1::?'a) - ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 4),
              template_var 3)
            ),
        template_inequation (less_than, template_hole 13, template_var 2),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 11, template_var 0),
            template_hole 10)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 11, template_var 3),
            template_hole 10),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 9, template_app (template_hole 8, t_empty)),
         template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 11, template_var 0),
                   template_hole 10)),
               template_var 1)))))),
    ("Dirichlet_Series_Analysis.suminf_dirichlet_prod",
     "[| ?f 0 = (0::?'a); ?g 0 = (0::?'a);
         summable (%n. norm (?f n / nat_power n ?s));
         summable (%n. norm (?g n / nat_power n ?s)) |]
      ==> (\<Sum>n. dirichlet_prod ?f ?g n / nat_power n ?s) =
          (\<Sum>n. ?f n / nat_power n ?s) *
          (\<Sum>n. ?g n / nat_power n ?s)",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_hole 8), template_hole 7),
        template_equation
         (template_app (template_var 1, template_hole 8), template_hole 7),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app
            (template_hole 0, template_app (template_hole 2, t_empty)),
           template_app (template_hole 2, t_empty))))),
    ("Dirichlet_Series_Analysis.eval_fds_ln'",
     "[| ?s0.0 < ereal (Re ?s); abs_conv_abscissa ?f <= ?s0.0;
         abs_conv_abscissa (fds_deriv ?f / ?f) <= ?s0.0;
         !!s. ?s0.0 < ereal (Re s) ==> eval_fds ?f s ~= 0;
         fds_nth ?f 1 ~= 0; exp ?l = fds_nth ?f 1 |]
      ==> exp (eval_fds (fds_ln ?l ?f) ?s) = eval_fds ?f ?s",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_hole 14,
            template_app (template_hole 13, template_var 2))),
        template_inequation
         (less_equals, template_app (template_hole 11, template_var 1),
          template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_hole 11,
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 1)),
              template_var 1)),
          template_var 3),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_hole 2),
              template_hole 4)
            ),
        template_equation
         (template_app (template_hole 1, template_var 0),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_hole 2))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 2)),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_var 2)))),
    ("Dirichlet_Series_Analysis.suminf_dirichlet_prod_real",
     "[| ?f 0 = 0; ?g 0 = 0; summable (%n. norm (?f n / real n powr ?s));
         summable (%n. norm (?g n / real n powr ?s)) |]
      ==> (\<Sum>n. dirichlet_prod ?f ?g n / real n powr ?s) =
          (\<Sum>n. ?f n / nat_power n ?s) *
          (\<Sum>n. ?g n / real n powr ?s)",
     template_implication
      ([template_equation
         (template_app (template_var 2, template_hole 10), template_hole 9),
        template_equation
         (template_app (template_var 1, template_hole 10), template_hole 9),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app
            (template_hole 1, template_app (template_hole 3, t_empty)),
           template_app (template_hole 3, t_empty))))),
    ("Dirichlet_Series_Analysis.eval_fds_ln_completely_multiplicative_strong",
     "[| fds_abs_converges (fds (%n. fds_nth (fds_ln ?l ?f) n * ?g n)) ?s;
         completely_multiplicative_function (fds_nth ?f);
         fds_nth ?f 1 ~= (0::?'a) |]
      ==> eval_fds (fds (%n. fds_nth (fds_ln ?l ?f) n * ?g n)) ?s =
          ?l * ?g 1 +
          (INFSETSUM (p, k):{p. prime p} \<times> UNIV.
              (fds_nth ?f p / nat_power p ?s) ^ Suc k * ?g (p ^ Suc k) /
              of_nat (Suc k))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23, template_app (template_hole 22, t_empty)),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 18,
              template_app (template_hole 20, template_var 2))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 20, template_var 2),
                template_hole 15),
              template_hole 14)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 13, template_app (template_hole 22, t_empty)),
           template_var 0),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app (template_hole 21, template_var 3),
               template_app (template_var 1, template_hole 15))),
           template_app
            (template_app
              (template_hole 11, template_app (template_hole 10, t_empty)),
             template_app
              (template_app
                (template_hole 3, template_app (template_hole 2, t_empty)),
               t_empty)))))),
    ("Dirichlet_Series_Analysis.eval_fds_ln",
     "[| !!s. ?s0.0 < ereal (Re s) ==> eval_fds ?f s ~= 0;
         fds_nth ?f 1 ~= 0; exp ?l = fds_nth ?f 1;
         ((?g o complex_of_real) \<longlongrightarrow> ?l) at_top;
         !!s. ?s0.0 < ereal (Re s) ==> exp (?g s) = eval_fds ?f s;
         ?g holomorphic_on {s. ?s0.0 < ereal (Re s)}; ?s0.0 < ereal (Re ?s);
         abs_conv_abscissa ?f <= ?s0.0;
         abs_conv_abscissa (fds_deriv ?f / ?f) <= ?s0.0 |]
      ==> eval_fds (fds_ln ?l ?f) ?s = ?g ?s",
     template_implication
      ([template_predicate (template_app (template_hole 23, t_empty)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 14, template_var 3),
                template_hole 13),
              template_hole 15)
            ),
        template_equation
         (template_app (template_hole 12, template_var 2),
          template_app
           (template_app (template_hole 14, template_var 3),
            template_hole 13)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 1),
                    template_hole 9)),
                template_app (template_hole 8, template_var 2)),
              template_hole 7)
            ),
        template_predicate (template_app (template_hole 23, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, t_empty))
            ),
        template_inequation
         (less_than, template_var 4,
          template_app
           (template_hole 20,
            template_app (template_hole 19, template_var 0))),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 3),
          template_var 4),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 3)),
              template_var 3)),
          template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3)),
           template_var 0),
         template_app (template_var 1, template_var 0))))]
