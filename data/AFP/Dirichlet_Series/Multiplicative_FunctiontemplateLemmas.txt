   [("Multiplicative_Function.ind_0", "ind ?P 0 = (0::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Multiplicative_Function.completely_multiplicative_function_inverse",
     "completely_multiplicative_function ?f ==>
      completely_multiplicative_function (%n. inverse (?f n))",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Multiplicative_Function.multiplicative_function_inverse",
     "multiplicative_function ?f ==>
      multiplicative_function (%n. inverse (?f n))",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Multiplicative_Function.multiplicative_function_of_natI",
     "multiplicative_function ?f ==>
      multiplicative_function (%n. of_nat (?f n))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Multiplicative_Function.multiplicative_function_of_natD",
     "multiplicative_function (%n. of_nat (?f n)) ==>
      multiplicative_function ?f",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Multiplicative_Function.ind_eq_1_iff",
     "(ind ?P ?n = (1::?'a)) = (0 < ?n & ?P ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)),
         template_app (template_var 1, template_var 0)))),
    ("Multiplicative_Function.ind_eq_0_iff",
     "(ind ?P ?n = (0::?'a)) = (?n = 0 | ~ ?P ?n)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_hole 4),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_app
              (template_hole 0,
               template_app (template_var 1, template_var 0)))
           ))),
    ("Multiplicative_Function.ind_nonzero",
     "0 < ?n ==> ind ?P ?n = (if ?P ?n then 1::?'a else (0::?'a))",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_var 0, template_var 1)),
             template_hole 1),
           template_hole 0)))),
    ("Multiplicative_Function.ind_True",
     "[| ?P ?n; 0 < ?n |] ==> ind ?P ?n = (1::?'a)",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0)),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Multiplicative_Function.completely_multiplicative_function_divide",
     "[| completely_multiplicative_function ?f;
         completely_multiplicative_function ?g |]
      ==> completely_multiplicative_function (%n. ?f n / ?g n)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Multiplicative_Function.completely_multiplicative_function_mult",
     "[| completely_multiplicative_function ?f;
         completely_multiplicative_function ?g |]
      ==> completely_multiplicative_function (%n. ?f n * ?g n)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Multiplicative_Function.multiplicative_function_divide",
     "[| multiplicative_function ?f; multiplicative_function ?g |]
      ==> multiplicative_function (%n. ?f n / ?g n)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Multiplicative_Function.multiplicative_function_mult",
     "[| multiplicative_function ?f; multiplicative_function ?g |]
      ==> multiplicative_function (%n. ?f n * ?g n)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Multiplicative_Function.ind_False",
     "[| ~ ?P ?n; 0 < ?n |] ==> ind ?P ?n = (0::?'a)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 1, template_var 0))
            ),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("Multiplicative_Function.multiplicative_function_eqI",
     "[| multiplicative_function ?f; multiplicative_function ?g;
         !!p k. [| prime p; 0 < k |] ==> ?f (p ^ k) = ?g (p ^ k) |]
      ==> ?f ?n = ?g ?n",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app (template_var 2, template_var 0),
         template_app (template_var 1, template_var 0)))),
    ("Multiplicative_Function.multiplicative_function_ind",
     "[| ?P 1;
         !!a b.
            [| 1 < a; 1 < b; coprime a b |]
            ==> ?P (a * b) = (?P a & ?P b) |]
      ==> multiplicative_function (ind ?P)",
     template_implication
      ([template_predicate (template_app (template_var 0, template_hole 8)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           )))]
