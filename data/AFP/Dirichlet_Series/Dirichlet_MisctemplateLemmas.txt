   [("Dirichlet_Misc.Set_filter_empty", "Set.filter ?P {} = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Dirichlet_Misc.finite_Set_filter",
     "finite ?A ==> finite (Set.filter ?P ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Dirichlet_Misc.Set_filter_union",
     "Set.filter ?P (?A Un ?B) = Set.filter ?P ?A Un Set.filter ?P ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Dirichlet_Misc.Set_filter_image",
     "Set.filter ?P (?f ` ?A) = ?f ` Set.filter (?P o ?f) ?A",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Dirichlet_Misc.dvd_div_gt0",
     "[| ?d dvd ?n; 0 < ?n |] ==> 0 < ?n div ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Dirichlet_Misc.bij_betw_prime_power_divisors",
     "prime ?p ==> bij_betw ((^) ?p) {..?k} {d. d dvd ?p ^ ?k}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)),
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, t_empty))
           ))),
    ("Dirichlet_Misc.Set_filter_insert",
     "Set.filter ?P (insert ?x ?A) =
      (if ?P ?x then insert ?x (Set.filter ?P ?A) else Set.filter ?P ?A)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Dirichlet_Misc.inj_on_insert'",
     "(!!B. B : ?A ==> ?x ~: B) ==> inj_on (insert ?x) ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1)
           ))),
    ("Dirichlet_Misc.geometric_sum_nat_dvd",
     "[| 1 < ?a; 0 < ?k |] ==> ?a - 1 dvd ?a ^ ?k - 1",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 4)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_hole 4))
           ))),
    ("Dirichlet_Misc.power_diff'",
     "[| ?n <= ?m; ?x ~= (0::?'a) |]
      ==> ?x ^ (?m - ?n) = ?x ^ ?m div ?x ^ ?n",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2))))),
    ("Dirichlet_Misc.Set_filter_cong",
     "[| !!x. x : ?A ==> ?P x = ?Q x; ?A = ?B |]
      ==> Set.filter ?P ?A = Set.filter ?Q ?B",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_equation (template_var 3, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Dirichlet_Misc.geometric_sum_nat",
     "[| 1 < ?a; 0 < ?k |]
      ==> sum ((^) ?a) {..<?k} = (?a ^ ?k - 1) div (?a - 1)",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1),
        template_inequation (less_than, template_hole 6, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_hole 7)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_hole 7))))),
    ("Dirichlet_Misc.geometric_sum_nat_aux",
     "[| 1 < ?a; 0 < ?k |]
      ==> (?a - 1) * sum ((^) ?a) {..<?k} = ?a ^ ?k - 1",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1),
        template_inequation (less_than, template_hole 6, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 7)),
           template_app
            (template_app (template_hole 2, t_empty),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 7)))),
    ("Dirichlet_Misc.bij_betw_prod_divisors_coprime",
     "coprime ?a ?b ==>
      bij_betw (%x. fst x * snd x) ({d. d dvd ?a} \<times> {d. d dvd ?b})
       {k. k dvd ?a * ?b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, t_empty)),
                 t_empty)),
             template_app (template_hole 1, t_empty))
           ))),
    ("Dirichlet_Misc.card_even_subset_aux",
     "[| finite ?A; ?A ~= {} |]
      ==> card {B. B <= ?A & even (card B)} = 2 ^ (card ?A - 1)",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 13))],
       template_equation
        (template_app
          (template_hole 11, template_app (template_hole 10, t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 3, template_var 0)),
             template_hole 0))))),
    ("Dirichlet_Misc.card_odd_subset_aux",
     "[| finite ?A; ?A ~= {} |]
      ==> card {B. B <= ?A & odd (card B)} = 2 ^ (card ?A - 1)",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 13))],
       template_equation
        (template_app
          (template_hole 11, template_app (template_hole 10, t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 3, template_var 0)),
             template_hole 0))))),
    ("Dirichlet_Misc.sum_divisors_coprime_mult",
     "coprime ?a ?b ==>
      (SUM d | d dvd ?a * ?b. ?f d) =
      (SUM r | r dvd ?a. SUM s | s dvd ?b. ?f (r * s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 2, t_empty)),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 2, t_empty))))),
    ("Dirichlet_Misc.card_even_odd_subset",
     "[| finite ?A; ?A ~= {} |]
      ==> card {B. B <= ?A & even (card B)} =
          card {B. B <= ?A & odd (card B)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 10))],
       template_equation
        (template_app
          (template_hole 8, template_app (template_hole 7, t_empty)),
         template_app
          (template_hole 8, template_app (template_hole 7, t_empty)))))]
