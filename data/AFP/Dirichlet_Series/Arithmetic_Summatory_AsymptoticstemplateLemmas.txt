   [("Arithmetic_Summatory_Asymptotics.frac_le_1", "frac ?x <= (1::?'a)",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_hole 0)),
    ("Arithmetic_Summatory_Asymptotics.card_farey_fractions",
     "card (farey_fractions ?N) = sum totient {0<..?N}",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Arithmetic_Summatory_Asymptotics.sum_upto_inverse_bound",
     "0 <= sum_upto (%i. 1 / real i) ?x",
     template_inequation
      (less_equals, template_hole 4,
       template_app
        (template_app (template_hole 3, t_empty), template_var 0))),
    ("Arithmetic_Summatory_Asymptotics.le_sqrt_iff",
     "0 <= ?x ==> (?x <= sqrt ?y) = (?x\<^sup>2 <= ?y)",
     template_implication
      ([template_inequation (less_equals, template_hole 6, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 7, template_var 1),
           template_app (template_hole 4, template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))),
           template_var 0)))),
    ("Arithmetic_Summatory_Asymptotics.sum_inverse_squares_tail_bound",
     "0 < ?d ==> summable (%n. 1 / (real (Suc n) + ?d)\<^sup>2)",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 0)],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Arithmetic_Summatory_Asymptotics.sum_inverse_squares_tail_bound",
     "0 < ?d ==> (\<Sum>n. 1 / (real (Suc n) + ?d)\<^sup>2) <= 1 / ?d",
     template_implication
      ([template_inequation (less_than, template_hole 11, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 8, template_hole 7),
           template_var 0)))),
    ("Arithmetic_Summatory_Asymptotics.ln_minus_ln_floor_bound",
     "2 <= ?x ==>
      ln ?x - ln (real_of_int \<lfloor>?x\<rfloor>) : {0..<1 / (?x - 1)}",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 11,
            template_app (template_hole 10, template_hole 9)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 0))))),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_hole 0))))
           ))),
    ("Arithmetic_Summatory_Asymptotics.summatory_divisor_eq",
     "sum_upto (%n. real (divisor_count n)) (real ?m) =
      real (card {(n, d). n : {0<..?m} & d dvd n})",
     template_equation
      (template_app
        (template_app (template_hole 10, t_empty),
         template_app (template_hole 9, template_var 0)),
       template_app
        (template_hole 9,
         template_app
          (template_hole 7,
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty)))))),
    ("Arithmetic_Summatory_Asymptotics.sum_upto_sqrt_bound",
     "0 <= ?x ==>
      norm ((sum_upto (%_. 1) (sqrt ?x))\<^sup>2 - ?x)
      <= 2 * norm (sqrt ?x)",
     template_implication
      ([template_inequation
         (less_equals, template_hole 11, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, t_empty),
                     template_app (template_hole 5, template_var 0))),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)))),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app (template_hole 3, template_hole 2))),
           template_app
            (template_hole 10,
             template_app (template_hole 5, template_var 0)))))),
    ("Arithmetic_Summatory_Asymptotics.quotient_of_split",
     "?P (quotient_of ?q) =
      (ALL a b.
          0 < b --> coprime a b --> ?q = Rat.Fract a b --> ?P (a, b))",
     template_equation
      (template_app
        (template_var 1, template_app (template_hole 8, template_var 0)),
       template_app (template_hole 7, t_empty))),
    ("Arithmetic_Summatory_Asymptotics.quotient_of_split_asm",
     "?P (quotient_of ?q) =
      (\<nexists>a b.
          0 < b & coprime a b & ?q = Rat.Fract a b & ~ ?P (a, b))",
     template_equation
      (template_app
        (template_var 1, template_app (template_hole 9, template_var 0)),
       template_app
        (template_hole 8, template_app (template_hole 7, t_empty)))),
    ("Arithmetic_Summatory_Asymptotics.moebius_sum_tail_bound",
     "0 < ?d ==>
      \<bar>\<Sum>n.
               moebius_mu (Suc n + ?d) / (real (Suc n + ?d))\<^sup>2\<bar>
      <= 1 / real ?d",
     template_implication
      ([template_inequation (less_than, template_hole 13, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 11, template_app (template_hole 10, t_empty)),
         template_app
          (template_app (template_hole 9, template_hole 0),
           template_app (template_hole 4, template_var 0))))),
    ("Arithmetic_Summatory_Asymptotics.Fract_eq_coprime",
     "[| Rat.Fract ?a ?b = Rat.Fract ?c ?d; 0 < ?b; 0 < ?d; coprime ?a ?b;
         coprime ?c ?d |]
      ==> ?a = ?c",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_inequation (less_than, template_hole 2, template_var 2),
        template_inequation (less_than, template_hole 2, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_equation (template_var 3, template_var 1))),
    ("Arithmetic_Summatory_Asymptotics.Fract_eq_coprime",
     "[| Rat.Fract ?a ?b = Rat.Fract ?c ?d; 0 < ?b; 0 < ?d; coprime ?a ?b;
         coprime ?c ?d |]
      ==> ?b = ?d",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_inequation (less_than, template_hole 2, template_var 2),
        template_inequation (less_than, template_hole 2, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Arithmetic_Summatory_Asymptotics.moebius_sum_tail_bound'",
     "2 <= ?t ==>
      \<bar>\<Sum>n.
               moebius_mu (n + Suc (nat \<lfloor>?t\<rfloor>)) /
               real ((n + Suc (nat \<lfloor>?t\<rfloor>))\<^sup>2)\<bar>
      <= 1 / (?t - 1)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 15,
            template_app (template_hole 14, template_hole 13)),
          template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 12, template_app (template_hole 11, t_empty)),
         template_app
          (template_app (template_hole 10, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_hole 1))))),
    ("Arithmetic_Summatory_Asymptotics.farey_fractions_bij",
     "bij_betw (%(a, b). Rat.Fract (int a) (int b))
       {(a, b) |a b. 0 < a & a <= b & b <= ?N & coprime a b}
       (farey_fractions ?N)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 13, template_app (template_hole 12, t_empty)),
             template_app (template_hole 9, t_empty)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Arithmetic_Summatory_Asymptotics.hyperbola_method_bigo",
     "[| (%x. sum_upto (%n. ?f n * sum_upto ?g (x / real n)) (sqrt x) -
              ?R x)
         : O(?b);
         (%x. sum_upto (%n. sum_upto ?f (x / real n) * ?g n) (sqrt x) -
              ?S x)
         : O(?b);
         (%x. sum_upto ?f (sqrt x) * sum_upto ?g (sqrt x) - ?T x) : O(?b) |]
      ==> (%x. sum_upto (dirichlet_prod ?f ?g) x - (?R x + ?S x - ?T x))
          : O(?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, t_empty),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, t_empty),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, t_empty),
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, t_empty),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 2))
           )))]
