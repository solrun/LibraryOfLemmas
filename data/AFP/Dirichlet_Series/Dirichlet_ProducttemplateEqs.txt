   [("Dirichlet_Product.dirichlet_prod_0",
     "dirichlet_prod ?f ?g 0 = (0::?'a)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_hole 0)),
    ("Dirichlet_Product.dirichlet_inverse_0",
     "dirichlet_inverse ?f ?i 0 = (0::?'a)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_hole 0)),
    ("Dirichlet_Product.dirichlet_inverse_Suc_0",
     "dirichlet_inverse ?f ?i (Suc 0) = ?i",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_var 0)),
    ("Dirichlet_Product.dirichlet_prod_commutes",
     "dirichlet_prod ?f ?g = dirichlet_prod ?g ?f",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Dirichlet_Product.dirichlet_prod_assoc",
     "dirichlet_prod (dirichlet_prod ?f ?g) ?h =
      dirichlet_prod ?f (dirichlet_prod ?g ?h)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Dirichlet_Product.dirichlet_prod_Suc_0",
     "dirichlet_prod ?f ?g (Suc 0) = ?f (Suc 0) * ?g (Suc 0)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app (template_hole 2, template_hole 1)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_var 1,
             template_app (template_hole 2, template_hole 1))),
         template_app
          (template_var 0,
           template_app (template_hole 2, template_hole 1))))),
    ("Dirichlet_Product.of_int_dirichlet_inverse",
     "of_int (dirichlet_inverse ?f ?i ?n) =
      dirichlet_inverse (%n. of_int (?f n)) (of_int ?i) ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, t_empty),
           template_app (template_hole 2, template_var 1)),
         template_var 0))),
    ("Dirichlet_Product.of_int_dirichlet_prod",
     "of_int (dirichlet_prod ?f ?g ?n) =
      dirichlet_prod (%n. of_int (?f n)) (%n. of_int (?g n)) ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_app (template_hole 0, t_empty), t_empty),
         template_var 0))),
    ("Dirichlet_Product.dirichlet_prod_altdef1",
     "dirichlet_prod ?f ?g = (%n. SUM d | d dvd n. ?f (n div d) * ?g d)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       t_empty)),
    ("Dirichlet_Product.dirichlet_prod_altdef2",
     "dirichlet_prod ?f ?g =
      (%n. SUM (r, d):{(r, d). r * d = n}. ?f r * ?g d)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       t_empty)),
    ("Dirichlet_Product.dirichlet_prod_code",
     "dirichlet_prod ?f ?g ?n =
      (if ?n = 0 then 0::?'a
       else fold_atLeastAtMost_nat
             (%d acc. if d dvd ?n then ?f d * ?g (?n div d) + acc else acc)
             1 ?n (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Dirichlet_Product.dirichlet_inverse_code",
     "dirichlet_inverse ?f ?i ?n =
      (if ?n = 0 then 0::?'a
       else if ?n = 1 then ?i
            else - ?i *
                 fold_atLeastAtMost_nat
                  (%d acc.
                      if d dvd ?n
                      then ?f (?n div d) * dirichlet_inverse ?f ?i d + acc
                      else acc)
                  1 (?n - 1) (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_dunno))]
