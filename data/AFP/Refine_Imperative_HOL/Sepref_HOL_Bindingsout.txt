Loading theory "Draft.User_Smashing" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Translate")
Loading theory "Draft.Concl_Pres_Clarification" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Intf_Util")
Loading theory "Draft.Named_Theorems_Rev" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Translate" via "Draft.Sepref_Monadify" via "Draft.Sepref_Basic" via "Draft.Sepref_Misc")
Loading theory "Draft.Structured_Apply" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Translate" via "Draft.Sepref_Monadify" via "Draft.Sepref_Basic")
val enumerate = fn: 'a list -> ('a * int) list
val dummy_abs = fn: int -> typ list -> term -> term
val common_prefix = fn: typ list -> term -> term -> typ list * term * term
val dest_app = fn: term list -> term -> term * term list
val add_bound = fn: term * 'a -> (int * 'a) list -> (int * 'a) list
### ML warning (line 43 of "$AFP/Refine_Imperative_HOL/Lib/User_Smashing.thy"):
### (=) has infix status but was not preceded by op.
### ML warning (line 34 of "$AFP/Refine_Imperative_HOL/Lib/User_Smashing.thy"):
### Pattern is not exhaustive.
### ML warning (line 35 of "$AFP/Refine_Imperative_HOL/Lib/User_Smashing.thy"):
### Pattern is not exhaustive.
val smash_pair = fn: Proof.context -> thm -> term * term -> thm
val smash = fn: Proof.context -> thm -> thm
val smashed_attrib = fn: Proof.context -> thm -> 'a option * thm option
val smash_new_rule = fn: Proof.context -> thm -> thm Seq.seq
### theory "Draft.User_Smashing"
### 0.025s elapsed time, 0.096s cpu time, 0.000s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
val cp_clarify_step_tac = fn: Proof.context -> int -> tactic
val cp_clarify_tac = fn: Proof.context -> int -> tactic
val cp_clarsimp_tac = fn: Proof.context -> int -> tactic
### theory "Draft.Concl_Pres_Clarification"
### 0.055s elapsed time, 0.248s cpu time, 0.000s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
signature NAMED_THEOREMS_REV =
  sig
    val add: string -> attribute
    val add_thm: string -> thm -> Context.generic -> Context.generic
    val check: Proof.context -> string * Position.T -> string
    val declare: binding -> string -> local_theory -> string * local_theory
    val del: string -> attribute
    val del_thm: string -> thm -> Context.generic -> Context.generic
    val get: Proof.context -> string -> thm list
    val member: Proof.context -> string -> thm -> bool
  end
structure Named_Theorems_Rev: NAMED_THEOREMS_REV
### theory "Draft.Named_Theorems_Rev"
### 0.068s elapsed time, 0.305s cpu time, 0.000s GC time
Loading theory "Draft.PO_Normalizer" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Translate" via "Draft.Sepref_Monadify" via "Draft.Sepref_Basic" via "Draft.Sepref_Misc")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
signature STRUCTURED_APPLY =
  sig
    val apply1:
       Method.text_range -> Proof.state -> Proof.state Seq.result Seq.seq
    val applyT:
       Method.text * Position.range ->
         Proof.state -> Proof.state Seq.result Seq.seq
    val apply_focus:
       Method.text_range -> Proof.state -> Proof.state Seq.result Seq.seq
    val apply_solve:
       Method.text_range -> Proof.state -> Proof.state Seq.result Seq.seq
    val focus: Proof.state -> Proof.state
    val solved: Proof.state -> Proof.state
    val unfocus: Proof.state -> Proof.state
  end
structure Structured_Apply: STRUCTURED_APPLY
### theory "Draft.Structured_Apply"
### 0.084s elapsed time, 0.371s cpu time, 0.000s GC time
Loading theory "Draft.Sepref_Id_Op" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Translate" via "Draft.Sepref_Monadify" via "Draft.Sepref_Basic")
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### ML warning (line 63 of "$AFP/Refine_Imperative_HOL/Lib/PO_Normalizer.ML"):
### Pattern is not exhaustive.
### ML warning (line 77 of "$AFP/Refine_Imperative_HOL/Lib/PO_Normalizer.ML"):
### Pattern is not exhaustive.
signature PO_NORMALIZER =
  sig
    val gen_norm_rule: thm list -> norm_set -> Proof.context -> thm -> thm
    val gen_norm_tac: norm_set -> Proof.context -> tactic'
    type norm_set =
       {cong_rules: thm list,
        norm_rules: thm list, refl_rules: thm list, trans_rules: thm list}
  end
structure PO_Normalizer: PO_NORMALIZER
### theory "Draft.PO_Normalizer"
### 0.074s elapsed time, 0.264s cpu time, 0.025s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.171s elapsed time, 0.680s cpu time, 0.025s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
infix 0 THEN_ELSE_COMB'
signature ID_OP_TACTICAL =
  sig
    val DF_SOLVE_FWD: bool -> tactic' -> tactic'
    val SOLVE_FWD: tactic' -> tactic'
  end
structure Id_Op_Tactical: ID_OP_TACTICAL
### theory "HOL-Library.Set_Algebras"
### 0.245s elapsed time, 0.961s cpu time, 0.090s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
structure Id_Op:
  sig
    val add_id_rule: thm -> Proof.context -> Proof.context
    val cfg_id_debug: bool Config.T
    val cfg_id_trace_fallback: bool Config.T
    val dest_id_rl: thm -> term * typ
    val do_unprotect_tac: Proof.context -> int -> tactic
    val id_a_conv: conv -> cterm -> thm
    val id_tac: id_tac_mode -> Proof.context -> int -> tactic
    datatype id_tac_mode = Init | Normal | Solve | Step
    val protect: typ list -> term -> term
    val protect_conv: Proof.context -> conv
    val unprotect_conv: Proof.context -> conv
  end
### theory "Draft.Sepref_Id_Op"
### 0.580s elapsed time, 2.271s cpu time, 0.150s GC time
Loading theory "Draft.Pf_Mono_Prover" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Translate")
structure Pf_Mono_Prover:
  sig val mono_tac: Proof.context -> int -> tactic end
### theory "Draft.Pf_Mono_Prover"
### 0.031s elapsed time, 0.126s cpu time, 0.000s GC time
Loading theory "Draft.Sepref_Misc" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Translate" via "Draft.Sepref_Monadify" via "Draft.Sepref_Basic")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Library.Stream"
### 0.940s elapsed time, 3.623s cpu time, 0.297s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.030s elapsed time, 3.676s cpu time, 0.791s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Sepref_Misc"
### 1.145s elapsed time, 3.360s cpu time, 0.866s GC time
Loading theory "Draft.Sepref_Basic" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Translate" via "Draft.Sepref_Monadify")
Loading theory "Draft.Term_Synth" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Definition")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
signature TERM_SYNTH =
  sig val synth_term: thm list -> Proof.context -> term -> term end
structure Term_Synth: TERM_SYNTH
### theory "Draft.Term_Synth"
### 0.147s elapsed time, 0.442s cpu time, 0.000s GC time
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.116s elapsed time, 6.477s cpu time, 1.161s GC time
Loading theory "Draft.Templates" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.124s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Sepref_HOL_BindingsTemplates")
### Ignoring duplicate rewrite rule:
### hn_refine ?\<Gamma>1 ?c1 ?\<Gamma>'1 ?R1 FAIL == True
signature SEPREF_BASIC =
  sig
    val PHASES': phase list -> phases_ctrl -> Proof.context -> tactic'
    val apply_under_lambda:
       (Proof.context -> term -> term) -> Proof.context -> term -> term
    val constrain_type_pre: typ -> term -> term
    val dbg_phases_ctrl: phases_ctrl
    val dest_hn_ctxt: term -> term * term * term
    val dest_hn_ctxt_opt: term -> (term * term * term) option
    val dest_hn_refine: term -> term * term * term * term * term
    val dest_hnr_absfun: term -> bool * (term * term list)
    val dest_lambda_rc:
       Proof.context -> term -> (term * (term -> term)) * Proof.context
    val dest_nresT: typ -> typ
    val dflt_phases_ctrl: phases_ctrl
    val flag_phases_ctrl: bool -> phases_ctrl
    val hn_refine_concl_conv_a:
       (Proof.context -> conv) -> Proof.context -> conv
    val hn_refine_conv: conv -> conv -> conv -> conv -> conv -> conv
    val hn_refine_conv_a: conv -> conv
    val is_hn_ctxt: term -> bool
    val is_hn_refine_concl: term -> bool
    val is_nresT: typ -> bool
    val is_true: term -> bool
    val list_star: term list -> term
    val mk_cequals: cterm * cterm -> cterm
    val mk_compN_pre: int -> term -> term -> term
    val mk_curry0_pre: term -> term
    val mk_curryN_pre: int -> term -> term
    val mk_curry_pre: term -> term
    val mk_entails: term * term -> term
    val mk_hn_refine: term * term * term * term * term -> term
    val mk_hnr_absfun: bool * (term * term list) -> term
    val mk_hnr_absfun': term * term list -> term
    val mk_nresT: typ -> typ
    val mk_pair_in_pre: term -> term -> term -> term
    val mk_star: term * term -> term
    val mk_uncurry0_pre: term -> term
    val mk_uncurryN_pre: int -> term -> term
    val mk_uncurry_pre: term -> term
    type phase = string * (Proof.context -> tactic') * int
    type phases_ctrl =
       {int_res: bool,
        start: string option, stop: string option, trace: bool}
    val star_permute_tac: Proof.context -> tactic
    val strip_star: term -> term list
  end
signature SEPREF_DEBUGGING =
  sig
    val DBG_CONVERSION: bool Config.T -> Proof.context -> conv -> tactic'
    val DBG_CONVERSION': Proof.context -> conv -> tactic'
    val cfg_debug_all: bool Config.T
    val dbg_msg_tac:
       bool Config.T ->
         (Proof.context -> int -> thm -> string) -> Proof.context -> tactic'
    val dbg_msg_tac':
       (Proof.context -> int -> thm -> string) -> Proof.context -> tactic'
    val dbg_trace_msg: bool Config.T -> Proof.context -> string -> unit
    val dbg_trace_msg': Proof.context -> string -> unit
    val error_tac': string -> Proof.context -> tactic'
    val is_debug: bool Config.T -> Proof.context -> bool
    val is_debug': Proof.context -> bool
    val msg_allgoals: string -> Proof.context -> int -> thm -> string
    val msg_from_subgoal:
       string ->
         (term -> Proof.context -> string) ->
           Proof.context -> int -> thm -> string
    val msg_subgoal: string -> Proof.context -> int -> thm -> string
    val msg_text: string -> Proof.context -> int -> thm -> string
    val tracing_tac': string -> Proof.context -> tactic'
    val warning_tac': string -> Proof.context -> tactic'
  end
structure Sepref_Basic: SEPREF_BASIC
structure Sepref_Debugging: SEPREF_DEBUGGING
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.755s elapsed time, 1.821s cpu time, 0.775s GC time
infix 1 THEN_NEXT
infix 1 THEN_ALL_NEW_LIST
infix 1 THEN_ALL_NEW_LIST'
signature STACTICAL =
  sig
    val APPLY_LIST: tactic' list -> tactic'
    val THEN_ALL_NEW_LIST: tactic' * tactic' list -> tactic'
    val THEN_ALL_NEW_LIST': tactic' * (tactic' list * tactic') -> tactic'
    val THEN_NEXT: tactic' * tactic' -> tactic'
  end
structure STactical: STACTICAL
val THEN_ALL_NEW_LIST = fn: tactic' * tactic' list -> tactic'
val APPLY_LIST = fn: tactic' list -> tactic'
val THEN_NEXT = fn: tactic' * tactic' -> tactic'
val THEN_ALL_NEW_LIST' = fn: tactic' * (tactic' list * tactic') -> tactic'
### theory "Draft.Sepref_Basic"
### 1.267s elapsed time, 3.052s cpu time, 0.920s GC time
Loading theory "Draft.Sepref_Constraints" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Translate")
Loading theory "Draft.Sepref_Monadify" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Translate")
### ML warning (line 153 of "$AFP/Refine_Imperative_HOL/Sepref_Monadify.thy"):
### (aconv) has infix status but was not preceded by op.
### ML warning (line 188 of "$AFP/Refine_Imperative_HOL/Sepref_Monadify.thy"):
### (aconv) has infix status but was not preceded by op.
structure Sepref_Monadify:
  sig
    val arity_tac: Proof.context -> int -> tactic
    val comb_tac: Proof.context -> int -> tactic
    val contains_eval: term -> bool
    val dup_tac: Proof.context -> int -> tactic
    val mark_params_conv: Proof.context -> conv
    val mark_params_tac: Proof.context -> int -> tactic
    val monadify_simproc: simproc
    val monadify_tac: bool -> Proof.context -> tactic'
    val remove_pass_tac: Proof.context -> int -> tactic
  end
signature SEPREF_CONSTRAINTS =
  sig
    val ON_SLOT: tactic -> tactic
    val WITH_SLOT: tactic' -> tactic
    val add_constraint_rule: thm -> Context.generic -> Context.generic
    val add_safe_constraint_rule: thm -> Context.generic -> Context.generic
    val cond_focus: (term -> bool) -> tactic
    val constraint_tac: Proof.context -> tactic'
    val create_slot_tac: tactic
    val del_constraint_rule: thm -> Context.generic -> Context.generic
    val del_safe_constraint_rule: thm -> Context.generic -> Context.generic
    val dest_slot_tac: tactic'
    val ensure_slot_tac: tactic
    val focus: tactic
    val get_constraint_rules: Proof.context -> thm list
    val get_safe_constraint_rules: Proof.context -> thm list
    val has_slot: thm -> bool
    val is_constraint_goal: term -> bool
    val is_constraint_tac: tactic'
    val prefer_slot_tac: tactic
    val print_slot_tac: Proof.context -> tactic
    val process_constraint_slot: Proof.context -> tactic
    val remove_slot_tac: tactic
    val safe_constraint'_tac: Proof.context -> tactic'
    val safe_constraint_tac: Proof.context -> tactic'
    val setup: theory -> theory
    val slot_constraint_tac: int -> tactic
    val solve_constraint'_tac: Proof.context -> tactic'
    val solve_constraint_slot: Proof.context -> tactic
    val solve_constraint_tac: Proof.context -> tactic'
    val some_to_slot_tac: (term -> bool) -> tactic
    val to_slot_tac: tactic'
    val unfocus: tactic
    val unfocus_ins: tactic
  end
structure Sepref_Constraints: SEPREF_CONSTRAINTS
### theory "Draft.Sepref_Constraints"
### 0.359s elapsed time, 0.738s cpu time, 0.059s GC time
Loading theory "Draft.Sepref_Frame" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Translate")
Loading theory "Draft.Sepref_Rules" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Translate")
### theory "Draft.Sepref_Monadify"
### 0.388s elapsed time, 0.815s cpu time, 0.059s GC time
consts
  hf_pres ::
    "('a => 'b => assn) => bool => ('a => 'b => assn) * ('a => 'b => assn)"
signature SEPREF_FRAME =
  sig
    val add_normrel_eq: thm -> Context.generic -> Context.generic
    val align_goal_tac: Proof.context -> tactic'
    val align_rl_conv: Proof.context -> conv
    val cfg_debug: bool Config.T
    val del_normrel_eq: thm -> Context.generic -> Context.generic
    val frame_step_tac:
       (Proof.context -> tactic') -> bool -> Proof.context -> tactic'
    val frame_tac: (Proof.context -> tactic') -> Proof.context -> tactic'
    val get_normrel_eqs: Proof.context -> thm list
    val is_merge: term -> bool
    val merge_tac: (Proof.context -> tactic') -> Proof.context -> tactic'
    val norm_goal_pre_tac: Proof.context -> tactic'
    val prepare_frame_tac: Proof.context -> tactic'
    val recover_pure_tac: Proof.context -> tactic'
    val setup: theory -> theory
    val weaken_post_tac: Proof.context -> tactic'
  end
structure Sepref_Frame: SEPREF_FRAME
### theory "Draft.Sepref_Frame"
### 0.507s elapsed time, 1.075s cpu time, 0.119s GC time
signature SEPREF_RULES =
  sig
    val add_pure_constraints_rule: Proof.context -> thm -> thm
    val analyze_hnr: Proof.context -> thm -> hnr_analysis
    val analyze_rel: term -> term option * term list * term
    val binder_rels: term -> term list
    val body_rel: term -> term
    val ensure_fref: Proof.context -> thm -> thm
    val ensure_fref_nres: Proof.context -> thm -> thm
    val ensure_hfref: Proof.context -> thm -> thm
    val ensure_hnr: Proof.context -> thm -> thm
    val fcomp_attrib: attribute context_parser
    val gen_compose: Proof.context -> thm -> thm -> thm
    type hnr_analysis =
       {ahead: term * bool,
        argrels: (term * bool) list,
        chead: term * bool,
        precond: term, prems: term list, result_rel: term, thm: thm}
    val intf_of_assn: Proof.context -> term -> typ
    val mk_hfprod: term * term -> term
    val mk_hfprods: term list -> term
    val mk_hfref_thm: Proof.context -> hnr_analysis -> thm
    val mk_rel: term option * term list * term -> term
    val mk_triv_precond: term list -> term
    val norm_fcomp_rule: Proof.context -> thm -> thm
    val prepare_hfref_synth_tac: Proof.context -> tactic'
    val pretty_hnr_analysis: Proof.context -> hnr_analysis -> Pretty.T
    val simplify_precond: Proof.context -> thm -> thm
    val strip_rel: term -> term list * term
    val to_foparam: Proof.context -> thm -> thm
    val to_fref: Proof.context -> thm -> thm
    val to_hfref: Proof.context -> thm -> thm
    val to_hnr: Proof.context -> thm -> thm
  end
structure Sepref_Rules: SEPREF_RULES
### theory "Draft.Sepref_Rules"
### 1.765s elapsed time, 2.345s cpu time, 0.169s GC time
Loading theory "Draft.Sepref_Combinator_Setup" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool" via "Draft.Sepref_Translate")
Loading theory "Draft.Sepref_Definition" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool")
### ML warning (line 62 of "$AFP/Refine_Imperative_HOL/Sepref_Combinator_Setup.thy"):
### (=) has infix status but was not preceded by op.
signature SEPREF_INTF_TYPES =
  sig
    val check_intf_type: Proof.context -> typ -> typ -> bool
    val check_intf_type_err: Proof.context -> typ -> typ -> unit
    val check_intf_type_msg:
       (typ * typ -> unit) -> Proof.context -> typ -> typ -> unit
    val decl_intf_type_cmd:
       ((string list * binding) * mixfix) * string ->
         local_theory -> local_theory
    val norm_intf_type: Proof.context -> typ -> typ
    val register_itype_rewrite: typ -> typ -> Proof.context -> local_theory
  end
structure Sepref_Intf_Types: SEPREF_INTF_TYPES
structure Sepref_Extraction:
  sig
    val heap_extraction: Refine_Automation.extraction
    val setup: theory -> theory
  end
"starts_with"
  :: "'a"
structure Sepref_Definition:
  sig
    val cfg_prep_code: bool Config.T
    val make_hnr_goal:
       term -> Proof.context -> (cterm * term) * Proof.context
    val mk_synth_term: Proof.context -> string -> string -> term
    val sd_cmd:
       (((('a Config.T * 'a) list * binding) * Token.src list) * string) *
       string
         -> Proof.context -> Proof.state
    val sd_parser:
       Token.T list ->
         (((((bool Config.T * bool) list * binding) * Token.src list) *
           string)
          *
          string)
         *
         Token.T list
    val st_cmd: (binding * string) * string -> Proof.context -> Proof.state
    val st_parser:
       Token.T list -> ((binding * string) * string) * Token.T list
  end
### theory "Draft.Sepref_Definition"
### 0.433s elapsed time, 0.874s cpu time, 0.034s GC time
### ML warning (line 347 of "$AFP/Refine_Imperative_HOL/Sepref_Combinator_Setup.thy"):
### (=) has infix status but was not preceded by op.
### ML warning (line 349 of "$AFP/Refine_Imperative_HOL/Sepref_Combinator_Setup.thy"):
### (=) has infix status but was not preceded by op.
### ML warning (line 436 of "$AFP/Refine_Imperative_HOL/Sepref_Combinator_Setup.thy"):
### Pattern is not exhaustive.
structure Sepref_Combinator_Setup:
  sig
    val analyze_decl: term -> term -> opkind * (typ list * typ)
    val analyze_itype_thm: thm -> term * opkind * (typ list * typ)
    val check_type_intf: Proof.context -> typ -> typ -> bool
    val cr_reg_thms:
       term ->
         typ ->
           Proof.context ->
             {arity_thm: thm option, itype_thm: thm, mcomb_thm: thm option}
    val gen_pr_const_pat: Proof.context -> term -> thm option * term
    val generate_basename: Proof.context -> term -> string
    val get_nt_rule: thm -> typ * typ
    val import_terms_disj:
       term list -> Proof.context -> term list * Proof.context
    val is_valid_abs_op: Proof.context -> term -> bool
    val map_type: Proof.context -> typ -> typ
    val map_type_raw: Proof.context -> (typ * typ) list -> typ -> typ
    val mk_arity: Proof.context -> term -> int -> thm
    val mk_itype: Proof.context -> term -> term -> thm
    val mk_mcomb: Proof.context -> term -> int -> thm
    datatype opkind = COMB | PURE
    val read_term_type:
       string ->
         string option -> Proof.context -> (term * typ) * Proof.context
    type reg_thms =
       {arity_thm: thm option, itype_thm: thm, mcomb_thm: thm option}
    val sepref_register_adhoc:
       (term * typ option) list -> Context.generic -> Context.generic
    val sepref_register_adhoc_attr: (term * typ option) list -> attribute
    val sepref_register_adhoc_attr_decl:
       Context.generic * Token.T list ->
         attribute * (Context.generic * Token.T list)
    val sepref_register_adhoc_parser:
       Context.generic * Token.T list ->
         (term * typ option) list * (Context.generic * Token.T list)
    val sepref_register_adhoc_single:
       term * typ option -> Context.generic -> Context.generic
    val sepref_register_cmd:
       ((string option * string) * string option) list ->
         Proof.context -> Proof.context
    val sepref_register_parser:
       Token.T list ->
         ((string option * string) * string option) list * Token.T list
    val sepref_register_single:
       string ->
         term ->
           typ ->
             Proof.context ->
               ((thm option * thm option) * thm) * local_theory
    val sepref_register_single_cmd:
       (string option * string) * string option ->
         Proof.context -> local_theory
  end
### theory "Draft.Sepref_Combinator_Setup"
### 0.524s elapsed time, 0.998s cpu time, 0.083s GC time
Loading theory "Draft.Sepref_Translate" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool")
structure Sepref_Translate:
  sig
    val cfg_debug: bool Config.T
    val check_side_conds: thm -> unit list
    val dbg_msg_tac:
       (Proof.context -> int -> thm -> string) -> Proof.context -> tactic'
    val gen_msg_analyze: term -> Proof.context -> string
    val gen_trans_op_tac: bool -> Proof.context -> tactic'
    val gen_trans_step_tac: bool -> Proof.context -> tactic'
    val gen_trans_tac: bool -> Proof.context -> tactic'
    val msg_analyze: string -> Proof.context -> int -> thm -> string
    structure sepref_comb_rules: NAMED_SORTED_THMS
    structure sepref_fr_rules: NAMED_SORTED_THMS
    val setup: theory -> theory
    val side_cond_dispatch_tac:
       bool -> (int -> tactic) -> Proof.context -> tactic'
    val side_constraint_tac: Proof.context -> tactic'
    val side_fallback_tac: Proof.context -> int -> tactic
    val side_frame_tac: Proof.context -> tactic'
    val side_gen_algo_tac: Proof.context -> int -> tactic
    val side_merge_tac: Proof.context -> tactic'
    val side_mono_tac: Proof.context -> int -> tactic
    val side_pref_def_tac: Proof.context -> int -> tactic
    val side_rprem_tac: Proof.context -> int -> tactic
    val side_unfold_tac: Proof.context -> int -> tactic
    val trans_comb_tac: Proof.context -> int -> tactic
    val trans_keep_tac: Proof.context -> tactic'
    val trans_step_keep_tac: Proof.context -> tactic'
    val trans_step_tac: Proof.context -> tactic'
    val trans_tac: Proof.context -> tactic'
  end
"PR_CONST (op_ASSERT_bind I)"
  :: "'a nres => 'a nres"
structure Sepref_Import_Param:
  sig
    val add_PR_CONST: thm -> thm
    val import: Proof.context -> thm -> thm
    val import_attr:
       Context.generic * Token.T list ->
         attribute * (Context.generic * Token.T list)
    val import_attr_rl:
       Context.generic * Token.T list ->
         attribute * (Context.generic * Token.T list)
    val setup: theory -> theory
    val to_import_fo: Proof.context -> thm -> thm
  end
### theory "Draft.Sepref_Translate"
### 0.911s elapsed time, 0.947s cpu time, 0.053s GC time
Loading theory "Draft.Sepref_Intf_Util" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings" via "Draft.Sepref_Tool")
### ML warning (line 926 of "$AFP/Refine_Imperative_HOL/Sepref_Intf_Util.thy"):
### Value identifier (unfold_PR_CONST_tac) has not been referenced.
signature SEPREF_INTF_UTIL =
  sig
    val cfg_def: bool Config.T
    val cfg_ismop: bool Config.T
    val cfg_mop: bool Config.T
    val cfg_rawgoals: bool Config.T
    val cleanup_constraints: Proof.context -> thm -> thm
    val get_intf_of_rel: Proof.context -> term -> typ
    val list_filtered_subterms: (term -> 'a option) -> term -> 'a list
    val simp_precond_tac: Proof.context -> tactic'
    val to_assns_rl: bool -> Proof.context -> thm -> thm
  end
structure Sepref_Intf_Util: SEPREF_INTF_UTIL
### theory "Draft.Sepref_Intf_Util"
### 1.211s elapsed time, 1.279s cpu time, 0.103s GC time
Loading theory "Draft.Sepref_Tool" (required by "Draft.Sepref_HOL_BindingsTemplates" via "Draft.Sepref_HOL_Bindings")
structure Sepref:
  sig
    val cons_init_tac: Proof.context -> int -> tactic
    val cons_solve_tac: bool -> Proof.context -> int -> tactic
    val id_init_tac: Proof.context -> int -> tactic
    val id_solve_tac: Proof.context -> int -> tactic
    val id_step_tac: Proof.context -> int -> tactic
    val id_tac: Proof.context -> int -> tactic
    val monadify_tac: bool -> Proof.context -> tactic'
    val opt_tac: Proof.context -> int -> tactic
    val preproc_tac: Proof.context -> int -> tactic
    structure sepref_opt_simps: NAMED_THMS
    structure sepref_opt_simps2: NAMED_THMS
    structure sepref_preproc_simps: NAMED_THMS
    val sepref_tac: bool -> Proof.context -> int -> tactic
    val setup: theory -> theory
    val trans_tac: Proof.context -> tactic'
  end
val SIMPLE_METHOD_NOPARAM' = fn:
   ('a -> int -> tactic) -> 'b -> ('a -> Method.method) * 'b
val SIMPLE_METHOD_NOPARAM = fn:
   ('a -> tactic) -> 'b -> ('a -> Method.method) * 'b
COPY ::\<^sub>i TYPE(?'a => ?'a)
val prec_extract_eqs_tac = fn: Proof.context -> int -> tactic
val prep_comb_rule = fn: thm -> thm
### theory "Draft.Sepref_Tool"
### 0.383s elapsed time, 0.384s cpu time, 0.000s GC time
Loading theory "Draft.Sepref_HOL_Bindings" (required by "Draft.Sepref_HOL_BindingsTemplates")
PR_CONST (ASSN_ANNOT A) ::\<^sub>i TYPE('a => 'a)
IS_ID ?R ==> IS_LEFT_TOTAL ?R
IS_ID ?R ==> IS_RIGHT_TOTAL ?R
IS_BELOW_ID ?R ==> IS_LEFT_UNIQUE ?R
IS_BELOW_ID ?R ==> single_valued ?R
IS_ID ?R ==> IS_BELOW_ID ?R
single_valued ?R ==> precise (pure ?R)
[| precise ?R; single_valued ?S |] ==> precise (hr_comp ?R ?S)
### Ignoring duplicate rewrite rule:
### b_rel (b_rel ?R1 ?P1.1) ?P2.1 == b_rel ?R1 (%x. ?P1.1 x & ?P2.1 x)
### Ignoring duplicate rewrite rule:
### b_assn (b_assn ?A1 ?P1.1) ?P2.1 == b_assn ?A1 (%x. ?P1.1 x & ?P2.1 x)
Found termination order: "{}"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Found termination order: "{}"
Inr ::\<^sub>i TYPE(?'a => ?'b + ?'a)
Inl ::\<^sub>i TYPE(?'a => ?'a + ?'b)
case_sum ::\<^sub>i TYPE((?'a => ?'b) => (?'c => ?'b) => ?'a + ?'c => ?'b)
isl ::\<^sub>i TYPE(?'a + ?'b => bool)
projl ::\<^sub>i TYPE(?'a + ?'b => ?'a)
projr ::\<^sub>i TYPE(?'a + ?'b => ?'b)
PR_CONST STR '''' ::\<^sub>i TYPE(String.literal)
PR_CONST (String.Literal b0 b1 b2 b3 b4 b5 b6 s) ::\<^sub>i
TYPE(String.literal)
### theory "Draft.Sepref_HOL_Bindings"
### 1.917s elapsed time, 2.690s cpu time, 1.057s GC time
Loading theory "Draft.Sepref_HOL_BindingsTemplates"
val templateLemmas =
   [("Sepref_HOL_Bindings.b_assn_triv", "b_assn ?A (%_. True) = ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), t_empty),
       template_var 0)),
    ("Sepref_HOL_Bindings.b_rel_triv", "b_rel ?R (%_. True) = ?R",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), t_empty),
       template_var 0)),
    ("Sepref_HOL_Bindings.prop2p",
     "single_valued ?R = right_unique (rel2p ?R)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.prop2p",
     "IS_LEFT_TOTAL ?R = left_total (rel2p ?R)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.prop2p",
     "IS_LEFT_UNIQUE ?R = left_unique (rel2p ?R)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.prop2p",
     "IS_RIGHT_TOTAL ?R = right_total (rel2p ?R)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.p2prop",
     "left_total ?P = IS_LEFT_TOTAL (p2rel ?P)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.p2prop",
     "left_unique ?P = IS_LEFT_UNIQUE (p2rel ?P)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.p2prop",
     "right_total ?P = IS_RIGHT_TOTAL (p2rel ?P)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.p2prop",
     "right_unique ?P = single_valued (p2rel ?P)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.IS_ID_imp_BELOW_ID",
     "IS_ID ?R ==> IS_BELOW_ID ?R",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.list_assn_simps",
     "hn_ctxt (list_assn ?P) [] [] = emp",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_hole 2),
         template_hole 1),
       template_hole 0)),
    ("Sepref_HOL_Bindings.list_assn_precise",
     "precise ?P ==> precise (list_assn ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Sepref_HOL_Bindings.option_assn_precise",
     "precise ?P ==> precise (option_assn ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Sepref_HOL_Bindings.list_assn_pure",
     "is_pure ?P ==> is_pure (list_assn ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Sepref_HOL_Bindings.pure_option",
     "is_pure ?P ==> is_pure (option_assn ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Sepref_HOL_Bindings.list_assn_pure_conv",
     "list_assn (pure ?R) = pure (\<langle>?R\<rangle>list_rel)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Sepref_HOL_Bindings.option_assn_pure_conv",
     "option_assn (pure ?R) = pure (\<langle>?R\<rangle>option_rel)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Sepref_HOL_Bindings.p2prop",
     "bi_unique ?P = (left_unique ?P & right_unique ?P)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.prop2p",
     "right_unique (rel2p (?R^-1)) = left_unique (rel2p ?R)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.b_rel_right_unique",
     "single_valued ?R ==> single_valued (b_rel ?R ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Sepref_HOL_Bindings.b_assn_is_pure",
     "is_pure ?A ==> is_pure (b_assn ?A ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Sepref_HOL_Bindings.b_rel_below_id",
     "IS_BELOW_ID ?R ==> IS_BELOW_ID (b_rel ?R ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Sepref_HOL_Bindings.IS_BELOW_ID_list_rel",
     "IS_BELOW_ID ?R ==> IS_BELOW_ID (\<langle>?R\<rangle>list_rel)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Sepref_HOL_Bindings.b_rel_left_unique",
     "IS_LEFT_UNIQUE ?R ==> IS_LEFT_UNIQUE (b_rel ?R ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Sepref_HOL_Bindings.b_assn_pure_conv",
     "b_assn (pure ?R) ?P = pure (b_rel ?R ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sepref_HOL_Bindings.inv_list_rel_eq",
     "(\<langle>?R\<rangle>list_rel)^-1 = \<langle>?R^-1\<rangle>list_rel",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.inv_option_rel_eq",
     "(\<langle>?K\<rangle>option_rel)^-1 =
      \<langle>?K^-1\<rangle>option_rel",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.list_assn_aux_simps",
     "list_assn ?P [] ?l' = \<up> (?l' = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Sepref_HOL_Bindings.list_assn_aux_simps",
     "list_assn ?P ?l [] = \<up> (?l = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Sepref_HOL_Bindings.option_assn_simps",
     "option_assn ?P None ?v' = \<up> (?v' = None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Sepref_HOL_Bindings.option_assn_simps",
     "option_assn ?P ?v None = \<up> (?v = None)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Sepref_HOL_Bindings.list_assn_simps",
     "hn_ctxt (list_assn ?P) [] (?c # ?cs) = false",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Sepref_HOL_Bindings.list_assn_simps",
     "hn_ctxt (list_assn ?P) (?a # ?as) [] = false",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Sepref_HOL_Bindings.b_rel_Range",
     "Range (b_rel ?R ?P) = Range ?R Int Collect ?P",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.list_assn_simps",
     "hn_ctxt (list_assn ?P) [] ?l' = \<up> (?l' = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_hole 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Sepref_HOL_Bindings.list_assn_simps",
     "hn_ctxt (list_assn ?P) ?l [] = \<up> (?l = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 1)),
                template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Sepref_HOL_Bindings.hn_Nil",
     "hn_refine emp (return []) emp (list_assn ?P) (RETURN $ [])",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app (template_hole 5, template_hole 4)),
               template_hole 6),
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))
         )),
    ("Sepref_HOL_Bindings.hn_None",
     "hn_refine emp (return None) emp (option_assn ?P) (RETURN $ None)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app (template_hole 5, template_hole 4)),
               template_hole 6),
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))
         )),
    ("Sepref_HOL_Bindings.b_assn_subtyping_match_eqA_tR",
     "hn_ctxt (b_assn ?A ?P) ?x ?y \<Longrightarrow>\<^sub>t
      hn_ctxt ?A ?x ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2)),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0))
         )),
    ("Sepref_HOL_Bindings.list_assn_comp",
     "hr_comp (list_assn ?A) (\<langle>?B\<rangle>list_rel) =
      list_assn (hr_comp ?A ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sepref_HOL_Bindings.hr_comp_option_conv",
     "hr_comp (option_assn ?R) (\<langle>?R'\<rangle>option_rel) =
      option_assn (hr_comp ?R ?R')",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sepref_HOL_Bindings.sum_assn_pure_conv",
     "pure ?A +\<^sub>a pure ?B = pure (\<langle>?A, ?B\<rangle>sum_rel)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_var 0)))),
    ("Sepref_HOL_Bindings.IS_LEFT_TOTAL_alt",
     "IS_LEFT_TOTAL ?R = (ALL x. EX y. (x, y) : ?R)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Sepref_HOL_Bindings.IS_RIGHT_TOTAL_alt",
     "IS_RIGHT_TOTAL ?R = (ALL x. EX y. (y, x) : ?R)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Sepref_HOL_Bindings.b_assn_rdom",
     "rdomp (b_assn ?R ?P) ?x = (rdomp ?R ?x & ?P ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app (template_var 1, template_var 0)))),
    ("Sepref_HOL_Bindings.list_assn_aux_eqlen_simp",
     "vassn_tag (list_assn ?P ?l ?l') ==> length ?l' = length ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Sepref_HOL_Bindings.prod_assn_precise",
     "[| precise ?P1.0; precise ?P2.0 |]
      ==> precise (?P1.0 \<times>\<^sub>a ?P2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Sepref_HOL_Bindings.sum_assn_pure",
     "[| is_pure ?A; is_pure ?B |] ==> is_pure (?A +\<^sub>a ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Sepref_HOL_Bindings.pure_prod",
     "[| is_pure ?P1.0; is_pure ?P2.0 |]
      ==> is_pure (?P1.0 \<times>\<^sub>a ?P2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Sepref_HOL_Bindings.entt_invalid_list",
     "hn_invalid (list_assn ?A) ?l ?l' \<Longrightarrow>\<^sub>t
      hn_ctxt (list_assn (invalid_assn ?A)) ?l ?l'",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 2))),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2))),
               template_var 1),
             template_var 0))
         )),
    ("Sepref_HOL_Bindings.b_assn_simp",
     "b_assn ?A ?P ?x ?y = ?A ?x ?y * \<up> (?P ?x)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_var 3, template_var 1),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app (template_var 2, template_var 1))))),
    ("Sepref_HOL_Bindings.hn_ctxt_eq",
     "?A ?x ?y = ?z ==> hn_ctxt ?A ?x ?y = ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_var 3, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Sepref_HOL_Bindings.list_assn_aux_eqlen_simp",
     "?h \<Turnstile> list_assn ?P ?l ?l' ==> length ?l' = length ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 2)))),
    ("Sepref_HOL_Bindings.b_assn_nesting",
     "b_assn (b_assn ?A ?P1.0) ?P2.0 = b_assn ?A (%x. ?P1.0 x & ?P2.0 x)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2), t_empty))),
    ("Sepref_HOL_Bindings.b_rel_nesting",
     "b_rel (b_rel ?R ?P1.0) ?P2.0 = b_rel ?R (%x. ?P1.0 x & ?P2.0 x)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2), t_empty))),
    ("Sepref_HOL_Bindings.inv_fun_rel_eq",
     "(?A \<rightarrow> ?B)^-1 = ?A^-1 \<rightarrow> ?B^-1",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.inv_sum_rel_eq",
     "(\<langle>?P, ?Q\<rangle>sum_rel)^-1 = \<langle>?P^-1,
      ?Q^-1\<rangle>sum_rel",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.inv_prod_rel_eq",
     "(?P \<times>\<^sub>r ?Q)^-1 = ?P^-1 \<times>\<^sub>r ?Q^-1",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("Sepref_HOL_Bindings.list_assn_aux_ineq_len",
     "length ?l ~= length ?li ==> list_assn ?A ?l ?li = false",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2),
           template_var 1),
         template_hole 0))),
    ("Sepref_HOL_Bindings.IS_BELOW_ID_fun_rel",
     "[| IS_ID ?R1.0; IS_BELOW_ID ?R2.0 |]
      ==> IS_BELOW_ID (?R1.0 \<rightarrow> ?R2.0)",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1)),
               template_var 0))
           ))),
    ("Sepref_HOL_Bindings.hn_ctxt_list",
     "list_assn ?A ?x ?y = ?z ==> hn_ctxt (list_assn ?A) ?x ?y = ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2),
            template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Sepref_HOL_Bindings.hn_ctxt_option",
     "option_assn ?A ?x ?y = ?z ==> hn_ctxt (option_assn ?A) ?x ?y = ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2),
            template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 1, template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Sepref_HOL_Bindings.IS_BELOW_ID_fun_rel_aux",
     "[| Id <= ?R1.0; IS_BELOW_ID ?R2.0 |]
      ==> IS_BELOW_ID (?R1.0 \<rightarrow> ?R2.0)",
     template_implication
      ([template_inequation (less_equals, template_hole 5, template_var 1),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1)),
               template_var 0))
           ))),
    ("Sepref_HOL_Bindings.intf_of_prod_assn",
     "[| intf_of_assn ?A TYPE(?'a); intf_of_assn ?B TYPE(?'b) |]
      ==> intf_of_assn (?A \<times>\<^sub>a ?B) TYPE(?'a * ?'b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_hole 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("Sepref_HOL_Bindings.entt_invalid_sum",
     "hn_invalid (?A +\<^sub>a ?B) ?e ?e' \<Longrightarrow>\<^sub>t
      hn_ctxt (invalid_assn ?A +\<^sub>a invalid_assn ?B) ?e ?e'",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2))),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 3)),
                   template_app (template_hole 0, template_var 2))),
               template_var 1),
             template_var 0))
         )),
    ("Sepref_HOL_Bindings.entt_invalid_prod",
     "hn_invalid (?A \<times>\<^sub>a ?B) ?p ?p' \<Longrightarrow>\<^sub>t
      hn_ctxt (invalid_assn ?A \<times>\<^sub>a invalid_assn ?B) ?p ?p'",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 2))),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 3)),
                   template_app (template_hole 0, template_var 2))),
               template_var 1),
             template_var 0))
         )),
    ("Sepref_HOL_Bindings.b_rel_subtyping_merge_eqA_tL",
     "hn_ctxt ?A ?x ?y \<or>\<^sub>A
      hn_ctxt (b_assn ?A ?P') ?x ?y \<Longrightarrow>\<^sub>t
      hn_ctxt ?A ?x ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 0)),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1))
         )),
    ("Sepref_HOL_Bindings.b_rel_subtyping_merge_eqA_tR",
     "hn_ctxt (b_assn ?A ?P) ?x ?y \<or>\<^sub>A
      hn_ctxt ?A ?x ?y \<Longrightarrow>\<^sub>t
      hn_ctxt ?A ?x ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 2)),
                     template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0))
         )),
    ("Sepref_HOL_Bindings.b_rel_simp",
     "((?x, ?y) : b_rel ?R ?P) = ((?x, ?y) : ?R & ?P ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_app (template_var 0, template_var 2)))),
    ("Sepref_HOL_Bindings.list_assn_aux_len",
     "list_assn ?P ?l ?l' =
      list_assn ?P ?l ?l' * \<up> (length ?l = length ?l')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Sepref_HOL_Bindings.projl_hnr",
     "(return o projl, RETURN o projl)
      : [isl]\<^sub>a (?A +\<^sub>a ?B)\<^sup>d \<rightarrow> ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_hole 8)),
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_hole 5))),
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_hole 0)),
             template_var 1))
         )),
    ("Sepref_HOL_Bindings.rdomp_prodD",
     "rdomp (?A \<times>\<^sub>a ?B) (?a, ?b) ==>
      rdomp ?A ?a & rdomp ?B ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Sepref_HOL_Bindings.fst_hnr",
     "(return o fst, RETURN o fst)
      : (?A \<times>\<^sub>a ?B)\<^sup>d \<rightarrow>\<^sub>a ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_hole 8)),
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_hole 5))),
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_hole 0)),
             template_var 1))
         )),
    ("Sepref_HOL_Bindings.snd_hnr",
     "(return o snd, RETURN o snd)
      : (?A \<times>\<^sub>a ?B)\<^sup>d \<rightarrow>\<^sub>a ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_hole 8)),
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_hole 5))),
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_hole 0)),
             template_var 0))
         )),
    ("Sepref_HOL_Bindings.prod_assn_ctxt",
     "(?A1.0 \<times>\<^sub>a ?A2.0) ?x ?y = ?z ==>
      hn_ctxt (?A1.0 \<times>\<^sub>a ?A2.0) ?x ?y = ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 2),
            template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Sepref_HOL_Bindings.sum_assn_ctxt",
     "(?A +\<^sub>a ?B) ?x ?y = ?z ==>
      hn_ctxt (?A +\<^sub>a ?B) ?x ?y = ?z",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 2),
            template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 3)),
             template_var 2),
           template_var 1),
         template_var 0))),
    ("Sepref_HOL_Bindings.b_assn_invalid_merge7",
     "hn_ctxt ?A ?x ?y \<or>\<^sub>A
      hn_invalid (b_assn ?A ?P) ?x ?y \<Longrightarrow>\<^sub>t
      hn_invalid ?A ?x ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 0))),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_var 1))
         )),
    ("Sepref_HOL_Bindings.b_assn_invalid_merge9",
     "hn_invalid ?A ?x ?y \<or>\<^sub>A
      hn_ctxt (b_assn ?A ?P) ?x ?y \<Longrightarrow>\<^sub>t
      hn_invalid ?A ?x ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 3)),
                     template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 0)),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_var 1))
         )),
    ("Sepref_HOL_Bindings.b_assn_invalid_merge8",
     "hn_ctxt (b_assn ?A ?P) ?x ?y \<or>\<^sub>A
      hn_invalid ?A ?x ?y \<Longrightarrow>\<^sub>t
      hn_invalid ?A ?x ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_var 2)),
                     template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 0, template_var 3)),
                   template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 0, template_var 3)),
               template_var 1),
             template_var 0))
         )),
    ("Sepref_HOL_Bindings.b_assn_invalid_merge6",
     "hn_invalid (b_assn ?A ?P) ?x ?y \<or>\<^sub>A
      hn_ctxt ?A ?x ?y \<Longrightarrow>\<^sub>t
      hn_invalid ?A ?x ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 3),
                           template_var 2))),
                     template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 1),
             template_var 0))
         )),
    ("Sepref_HOL_Bindings.projr_hnr",
     "(return o projr, RETURN o projr)
      : [Not o isl]\<^sub>a (?A +\<^sub>a ?B)\<^sup>d \<rightarrow> ?B",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_hole 11),
                   template_hole 10)),
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_hole 7))),
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_hole 3)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_hole 0)),
             template_var 0))
         )),
    ("Sepref_HOL_Bindings.isl_hnr",
     "(return o isl, RETURN o isl)
      : (?A +\<^sub>a ?B)\<^sup>k \<rightarrow>\<^sub>a bool_assn",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_hole 10),
                   template_hole 9)),
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_hole 6))),
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)),
                 template_hole 4)),
             template_app (template_hole 1, template_hole 0)))
         )),
    ("Sepref_HOL_Bindings.b_assn_invalid_merge3",
     "hn_invalid ?A ?x ?y \<or>\<^sub>A
      hn_invalid (b_assn ?A ?P) ?x ?y \<Longrightarrow>\<^sub>t
      hn_invalid ?A ?x ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 3)),
                     template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 0))),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 2),
             template_var 1))
         )),
    ("Sepref_HOL_Bindings.b_assn_invalid_merge2",
     "hn_invalid (b_assn ?A ?P) ?x ?y \<or>\<^sub>A
      hn_invalid ?A ?x ?y \<Longrightarrow>\<^sub>t
      hn_invalid ?A ?x ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 3),
                           template_var 2))),
                     template_var 1),
                   template_var 0)),
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 3)),
                   template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 1),
             template_var 0))
         )),
    ("Sepref_HOL_Bindings.param_distinct",
     "[| IS_LEFT_UNIQUE ?A; single_valued ?A |]
      ==> (distinct, distinct)
          : \<langle>?A\<rangle>list_rel \<rightarrow> bool_rel",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_hole 6)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 0))),
               template_hole 0))
           ))),
    ("Sepref_HOL_Bindings.invalid_list_split",
     "invalid_assn (list_assn ?A) (?x # ?xs)
       (?y # ?ys) \<Longrightarrow>\<^sub>t
      invalid_assn ?A ?x ?y * invalid_assn (list_assn ?A) ?xs ?ys",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 4)),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 4)),
                 template_var 2),
               template_var 0)))
         )),
    ("Sepref_HOL_Bindings.pres_eq_iff_svb",
     "(((=), (=)) : ?K \<rightarrow> ?K \<rightarrow> bool_rel) =
      (single_valued ?K & single_valued (?K^-1))",
     template_equation
      (template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 13, template_hole 12),
             template_hole 11)),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_hole 8),
               template_var 0)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 0)),
             template_hole 4))),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Sepref_HOL_Bindings.list_assn_simps",
     "hn_ctxt (list_assn ?P) (?a # ?as) (?c # ?cs) =
      hn_ctxt ?P ?a ?c * hn_ctxt (list_assn ?P) ?as ?cs",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 4)),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 4)),
             template_var 2),
           template_var 0)))),
    ("Sepref_HOL_Bindings.hn_Some",
     "hn_refine (hn_ctxt ?P ?v ?v') (return (Some ?v'))
       (hn_invalid ?P ?v ?v') (option_assn ?P) (RETURN $ (Some $ ?v))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_app (template_hole 8, template_var 2),
                       template_var 1),
                     template_var 0)),
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0))),
               template_app
                (template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 5, template_var 2)),
                   template_var 1),
                 template_var 0)),
             template_app (template_hole 4, template_var 2)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)))
         )),
    ("Sepref_HOL_Bindings.uminus_hnr",
     "hn_refine (hn_val int_rel ?x'5 ?x5) (return (- ?x5))
       (hn_val int_rel ?x'5 ?x5) int_assn (RETURN $ (uminus $ ?x'5))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_hole 5)),
                       template_var 1),
                     template_var 0)),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0))),
               template_app
                (template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5)),
                   template_var 1),
                 template_var 0)),
             template_app (template_hole 6, template_hole 5)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_hole 3),
               template_var 1)))
         )),
    ("Sepref_HOL_Bindings.int_param",
     "hn_refine (hn_val nat_rel ?x'5 ?x5) (return (int ?x5))
       (hn_val nat_rel ?x'5 ?x5) int_assn (RETURN $ (int $ ?x'5))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_hole 7)),
                       template_var 1),
                     template_var 0)),
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0))),
               template_app
                (template_app
                  (template_app
                    (template_hole 9,
                     template_app (template_hole 8, template_hole 7)),
                   template_var 1),
                 template_var 0)),
             template_app (template_hole 4, template_hole 3)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_hole 5),
               template_var 1)))
         )),
    ("Sepref_HOL_Bindings.nat_param",
     "hn_refine (hn_val int_rel ?x'5 ?x5) (return (nat ?x5))
       (hn_val int_rel ?x'5 ?x5) nat_assn (RETURN $ (nat $ ?x'5))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_hole 7)),
                       template_var 1),
                     template_var 0)),
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0))),
               template_app
                (template_app
                  (template_app
                    (template_hole 9,
                     template_app (template_hole 8, template_hole 7)),
                   template_var 1),
                 template_var 0)),
             template_app (template_hole 4, template_hole 3)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_hole 5),
               template_var 1)))
         )),
    ("Sepref_HOL_Bindings.hn_is_None",
     "hn_refine (hn_ctxt (option_assn ?P) ?a ?a') (return (is_None ?a'))
       (hn_ctxt (option_assn ?P) ?a ?a') bool_assn
       (RETURN $ (is_None $ ?a))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 8, template_var 2)),
                       template_var 1),
                     template_var 0)),
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0))),
               template_app
                (template_app
                  (template_app
                    (template_hole 9,
                     template_app (template_hole 8, template_var 2)),
                   template_var 1),
                 template_var 0)),
             template_app (template_hole 5, template_hole 4)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)))
         )),
    ("Sepref_HOL_Bindings.IS_RIGHT_UNIQUED",
     "[| single_valued ?r; (?x, ?y) : ?r; (?x, ?z) : ?r |] ==> ?y = ?z",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 0)),
              template_var 3)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Sepref_HOL_Bindings.IS_LEFT_UNIQUED",
     "[| IS_LEFT_UNIQUE ?r; (?y, ?x) : ?r; (?z, ?x) : ?r |] ==> ?y = ?z",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 1)),
              template_var 3)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Sepref_HOL_Bindings.b_assn_subtyping_match_eqA_tL",
     "(vassn_tag (hn_ctxt ?A ?x ?y) ==> ?P' ?x) ==>
      hn_ctxt ?A ?x ?y \<Longrightarrow>\<^sub>t
      hn_ctxt (b_assn ?A ?P') ?x ?y",
     template_implication
      ([template_implication
         ([template_predicate
            (
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2),
                   template_var 1))
               )],
          template_predicate
           (template_app (template_var 0, template_var 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0)),
                 template_var 2),
               template_var 1))
           ))),
    ("Sepref_HOL_Bindings.invalid_list_merge",
     "?A \<or>\<^sub>A
      hn_ctxt (list_assn (invalid_assn ?Aa)) ?l
       ?l' \<Longrightarrow>\<^sub>t
      ?C ==>
      ?A \<or>\<^sub>A
      hn_invalid (list_assn ?Aa) ?l ?l' \<Longrightarrow>\<^sub>t
      ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_hole 3,
                        template_app
                         (template_hole 2,
                          template_app (template_hole 1, template_var 3))),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 0,
                         template_app (template_hole 2, template_var 3))),
                     template_var 2),
                   template_var 1))),
             template_var 0)
           ))),
    ("Sepref_HOL_Bindings.invalid_list_merge",
     "hn_ctxt (list_assn (invalid_assn ?A)) ?l ?l' \<or>\<^sub>A
      ?B \<Longrightarrow>\<^sub>t
      ?C ==>
      hn_invalid (list_assn ?A) ?l ?l' \<or>\<^sub>A
      ?B \<Longrightarrow>\<^sub>t
      ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_app
                         (template_hole 3,
                          template_app
                           (template_hole 2,
                            template_app
                             (template_hole 1, template_var 4))),
                        template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_hole 0,
                           template_app (template_hole 2, template_var 4))),
                       template_var 3),
                     template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("Sepref_HOL_Bindings.list_assn_mono",
     "(!!x x'. ?P x x' \<Longrightarrow>\<^sub>A ?P' x x') ==>
      list_assn ?P ?l ?l' \<Longrightarrow>\<^sub>A list_assn ?P' ?l ?l'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Sepref_HOL_Bindings.list_assn_monot",
     "(!!x x'. ?P x x' \<Longrightarrow>\<^sub>t ?P' x x') ==>
      list_assn ?P ?l ?l' \<Longrightarrow>\<^sub>t list_assn ?P' ?l ?l'",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Sepref_HOL_Bindings.b_rel_subtyping_merge_eqA",
     "hn_ctxt (b_assn ?A ?P) ?x ?y \<or>\<^sub>A
      hn_ctxt (b_assn ?A ?P') ?x ?y \<Longrightarrow>\<^sub>t
      hn_ctxt (b_assn ?A (%x. ?P x | ?P' x)) ?x ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 4),
                         template_var 3)),
                     template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 0)),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   t_empty)),
               template_var 2),
             template_var 1))
         )),
    ("Sepref_HOL_Bindings.list_assn_aux_append",
     "length ?l1.0 = length ?l1' ==>
      list_assn ?P (?l1.0 @ ?l2.0) (?l1' @ ?l2') =
      list_assn ?P ?l1.0 ?l1' * list_assn ?P ?l2.0 ?l2'",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 4),
          template_app (template_hole 5, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 4),
               template_var 3)),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0))))),
    ("Sepref_HOL_Bindings.list_assn_aux_append2",
     "length ?l2.0 = length ?l2' ==>
      list_assn ?P (?l1.0 @ ?l2.0) (?l1' @ ?l2') =
      list_assn ?P ?l1.0 ?l1' * list_assn ?P ?l2.0 ?l2'",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 4),
          template_app (template_hole 5, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 4)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 4),
             template_var 3))))),
    ("Sepref_HOL_Bindings.invalid_sum_merge",
     "?A \<or>\<^sub>A
      hn_ctxt (invalid_assn ?Aa +\<^sub>a invalid_assn ?B) ?e
       ?e' \<Longrightarrow>\<^sub>t
      ?C ==>
      ?A \<or>\<^sub>A
      hn_invalid (?Aa +\<^sub>a ?B) ?e ?e' \<Longrightarrow>\<^sub>t
      ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app
                           (template_hole 3,
                            template_app (template_hole 2, template_var 4)),
                          template_app (template_hole 1, template_var 3))),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 5),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_app (template_hole 3, template_var 4),
                           template_var 3))),
                     template_var 2),
                   template_var 1))),
             template_var 0)
           ))),
    ("Sepref_HOL_Bindings.invalid_prod_merge",
     "?A \<or>\<^sub>A
      hn_ctxt (invalid_assn ?Aa \<times>\<^sub>a invalid_assn ?B) ?p
       ?p' \<Longrightarrow>\<^sub>t
      ?C ==>
      ?A \<or>\<^sub>A
      hn_invalid (?Aa \<times>\<^sub>a ?B) ?p ?p' \<Longrightarrow>\<^sub>t
      ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app
                           (template_hole 3,
                            template_app (template_hole 2, template_var 4)),
                          template_app (template_hole 1, template_var 3))),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 5),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_app (template_hole 3, template_var 4),
                           template_var 3))),
                     template_var 2),
                   template_var 1))),
             template_var 0)
           ))),
    ("Sepref_HOL_Bindings.invalid_sum_merge",
     "hn_ctxt (invalid_assn ?A +\<^sub>a invalid_assn ?Ba) ?e
       ?e' \<or>\<^sub>A
      ?B \<Longrightarrow>\<^sub>t
      ?C ==>
      hn_invalid (?A +\<^sub>a ?Ba) ?e ?e' \<or>\<^sub>A
      ?B \<Longrightarrow>\<^sub>t
      ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_app
                         (template_hole 4,
                          template_app
                           (template_app
                             (template_hole 3,
                              template_app
                               (template_hole 2, template_var 5)),
                            template_app
                             (template_hole 1, template_var 4))),
                        template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_app (template_hole 3, template_var 5),
                             template_var 4))),
                       template_var 3),
                     template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("Sepref_HOL_Bindings.invalid_prod_merge",
     "hn_ctxt (invalid_assn ?A \<times>\<^sub>a invalid_assn ?Ba) ?p
       ?p' \<or>\<^sub>A
      ?B \<Longrightarrow>\<^sub>t
      ?C ==>
      hn_invalid (?A \<times>\<^sub>a ?Ba) ?p ?p' \<or>\<^sub>A
      ?B \<Longrightarrow>\<^sub>t
      ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_app
                         (template_hole 4,
                          template_app
                           (template_app
                             (template_hole 3,
                              template_app
                               (template_hole 2, template_var 5)),
                            template_app
                             (template_hole 1, template_var 4))),
                        template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_app (template_hole 3, template_var 5),
                             template_var 4))),
                       template_var 3),
                     template_var 2)),
                 template_var 1)),
             template_var 0)
           ))),
    ("Sepref_HOL_Bindings.list_assn_aux_cons_conv2",
     "list_assn ?R ?l (?b # ?m) =
      (\<exists>\<^sub>Aa l'.
          ?R a ?b * list_assn ?R l' ?m * \<up> (?l = a # l'))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app (template_hole 5, t_empty))),
    ("Sepref_HOL_Bindings.list_assn_aux_cons_conv1",
     "list_assn ?R (?a # ?l) ?m =
      (\<exists>\<^sub>Ab m'.
          ?R ?a b * list_assn ?R ?l m' * \<up> (?m = b # m'))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 3),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("Sepref_HOL_Bindings.sepref_the_id",
     "CONSTRAINT (IS_PURE IS_ID) ?R ==>
      hn_refine (hn_ctxt (option_assn ?R) ?x ?xi) (return (the ?xi))
       (hn_ctxt (option_assn ?R) ?x ?xi) ?R (RETURN $ (the $ ?x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_hole 8)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 5, template_var 2)),
                         template_var 1),
                       template_var 0)),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 0))),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 2)),
                     template_var 1),
                   template_var 0)),
               template_var 2),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_hole 3),
                 template_var 1)))
           ))),
    ("Sepref_HOL_Bindings.b_assn_subtyping_match_tR",
     "(?P ?x ==>
       hn_ctxt ?A ?x ?y \<Longrightarrow>\<^sub>t hn_ctxt ?A' ?x ?y) ==>
      hn_ctxt (b_assn ?A ?P) ?x ?y \<Longrightarrow>\<^sub>t
      hn_ctxt ?A' ?x ?y",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 4, template_var 3))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_app (template_hole 1, template_var 2),
                      template_var 3),
                    template_var 1)),
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 0),
                    template_var 3),
                  template_var 1))
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 4)),
                   template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 3),
               template_var 1))
           ))),
    ("Sepref_HOL_Bindings.b_assn_invalid_merge5",
     "hn_ctxt (b_assn ?A ?P') ?x ?y \<or>\<^sub>A
      hn_invalid (b_assn ?A ?P) ?x ?y \<Longrightarrow>\<^sub>t
      hn_invalid (b_assn ?A (%x. ?P x | ?P' x)) ?x ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 4),
                         template_var 3)),
                     template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 2, template_var 4),
                         template_var 0))),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 2, template_var 4),
                     t_empty))),
               template_var 2),
             template_var 1))
         )),
    ("Sepref_HOL_Bindings.b_assn_invalid_merge4",
     "hn_invalid (b_assn ?A ?P) ?x ?y \<or>\<^sub>A
      hn_ctxt (b_assn ?A ?P') ?x ?y \<Longrightarrow>\<^sub>t
      hn_invalid (b_assn ?A (%x. ?P x | ?P' x)) ?x ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 4),
                           template_var 3))),
                     template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 0)),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     t_empty))),
               template_var 2),
             template_var 1))
         )),
    ("Sepref_HOL_Bindings.list_assn_aux_append_conv2",
     "list_assn ?R ?l (?m1.0 @ ?m2.0) =
      (\<exists>\<^sub>Al1 l2.
          list_assn ?R l1 ?m1.0 * list_assn ?R l2 ?m2.0 *
          \<up> (?l = l1 @ l2))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("Sepref_HOL_Bindings.list_assn_aux_append_conv1",
     "list_assn ?R (?l1.0 @ ?l2.0) ?m =
      (\<exists>\<^sub>Am1 m2.
          list_assn ?R ?l1.0 m1 * list_assn ?R ?l2.0 m2 *
          \<up> (?m = m1 @ m2))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Sepref_HOL_Bindings.Literal_hnr",
     "hn_refine emp
       (return
         (String.Literal ?b0.5 ?b1.5 ?b2.5 ?b3.5 ?b4.5 ?b5.5 ?b6.5 ?s5))
       emp id_assn
       (RETURN $
        PR_CONST
         (String.Literal ?b0.5 ?b1.5 ?b2.5 ?b3.5 ?b4.5 ?b5.5 ?b6.5 ?s5))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 5, template_var 7),
                                 template_var 6),
                               template_var 5),
                             template_var 4),
                           template_var 3),
                         template_var 2),
                       template_var 1),
                     template_var 0))),
               template_hole 7),
             template_app (template_hole 4, template_hole 3)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 5, template_var 7),
                             template_var 6),
                           template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0))))
         )),
    ("Sepref_HOL_Bindings.sepref_the_complete",
     "?x ~= None ==>
      hn_refine (hn_ctxt (option_assn ?R) ?x ?xi) (return (the ?xi))
       (hn_invalid (option_assn ?R) ?x ?xi) ?R (RETURN $ (the $ ?x))",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 10))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 8,
                           template_app (template_hole 7, template_var 1)),
                         template_var 2),
                       template_var 0)),
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_var 0))),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_hole 4,
                         template_app (template_hole 7, template_var 1))),
                     template_var 2),
                   template_var 0)),
               template_var 1),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 2)))
           ))),
    ("Sepref_HOL_Bindings.b_assn_invalid_merge1",
     "hn_invalid (b_assn ?A ?P) ?x ?y \<or>\<^sub>A
      hn_invalid (b_assn ?A ?P') ?x ?y \<Longrightarrow>\<^sub>t
      hn_invalid (b_assn ?A (%x. ?P x | ?P' x)) ?x ?y",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 4),
                           template_var 3))),
                     template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 4),
                         template_var 0))),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     t_empty))),
               template_var 2),
             template_var 1))
         )),
    ("Sepref_HOL_Bindings.b_assn_subtyping_match_eqA",
     "([| vassn_tag (hn_ctxt ?A ?x ?y); ?P ?x |] ==> ?P' ?x) ==>
      hn_ctxt (b_assn ?A ?P) ?x ?y \<Longrightarrow>\<^sub>t
      hn_ctxt (b_assn ?A ?P') ?x ?y",
     template_implication
      ([template_implication
         ([template_predicate
            (
               template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 3),
                   template_var 2))
               )],
          template_implication
           ([template_predicate
              (template_app (template_var 1, template_var 3))],
            template_predicate
             (template_app (template_var 0, template_var 3))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 1)),
                   template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 0)),
                 template_var 3),
               template_var 2))
           ))),
    ("Sepref_HOL_Bindings.param_Image",
     "[| IS_LEFT_UNIQUE ?A; single_valued ?A |]
      ==> ((``), (``))
          : \<langle>?A \<times>\<^sub>r ?B\<rangle>set_rel \<rightarrow>
            \<langle>?A\<rangle>set_rel \<rightarrow>
            \<langle>?B\<rangle>set_rel",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 1)),
        template_predicate
         (template_app (template_hole 19, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app (template_hole 17, template_hole 16),
                 template_hole 15)),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_hole 12),
                   template_app
                    (template_app (template_hole 11, template_hole 10),
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 8, template_hole 7),
                           template_var 1)),
                       template_var 0)))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 1))),
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0))))
           ))),
    ("Sepref_HOL_Bindings.b_rel_subtyping_merge_tL",
     "hn_ctxt ?A ?x ?y \<or>\<^sub>A
      hn_ctxt ?A' ?x ?y \<Longrightarrow>\<^sub>t
      hn_ctxt ?Am ?x ?y ==>
      hn_ctxt ?A ?x ?y \<or>\<^sub>A
      hn_ctxt (b_assn ?A' ?P') ?x ?y \<Longrightarrow>\<^sub>t
      hn_ctxt ?Am ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3)),
                  template_app
                   (template_app
                     (template_app (template_hole 1, template_var 2),
                      template_var 4),
                    template_var 3))),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 4),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 0)),
                     template_var 4),
                   template_var 3))),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 4),
               template_var 3))
           ))),
    ("Sepref_HOL_Bindings.b_rel_subtyping_merge_tR",
     "hn_ctxt ?A ?x ?y \<or>\<^sub>A
      hn_ctxt ?A' ?x ?y \<Longrightarrow>\<^sub>t
      hn_ctxt ?Am ?x ?y ==>
      hn_ctxt (b_assn ?A ?P) ?x ?y \<or>\<^sub>A
      hn_ctxt ?A' ?x ?y \<Longrightarrow>\<^sub>t
      hn_ctxt ?Am ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4),
                      template_var 3)),
                  template_app
                   (template_app
                     (template_app (template_hole 1, template_var 2),
                      template_var 4),
                    template_var 3))),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 4),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_var 0)),
                       template_var 4),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 4),
                   template_var 3))),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 4),
               template_var 3))
           ))),
    ("Sepref_HOL_Bindings.b_assn_subtyping_match_tL",
     "[| hn_ctxt ?A ?x ?y \<Longrightarrow>\<^sub>t hn_ctxt ?A' ?x ?y;
         vassn_tag (hn_ctxt ?A ?x ?y) ==> ?P' ?x |]
      ==> hn_ctxt ?A ?x ?y \<Longrightarrow>\<^sub>t
          hn_ctxt (b_assn ?A' ?P') ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 3),
                template_var 2))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 3),
                   template_var 2))
               )],
          template_predicate
           (template_app (template_var 0, template_var 3)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 3),
               template_var 2))
           ))),
    ("Sepref_HOL_Bindings.hn_Pair",
     "hn_refine (hn_ctxt ?P1.0 ?x1.0 ?x1' * hn_ctxt ?P2.0 ?x2.0 ?x2')
       (return (?x1', ?x2'))
       (hn_invalid ?P1.0 ?x1.0 ?x1' * hn_invalid ?P2.0 ?x2.0 ?x2')
       (?P1.0 \<times>\<^sub>a ?P2.0) (RETURN $ (Pair $ ?x1.0 $ ?x2.0))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app
                          (template_app (template_hole 11, template_var 5),
                           template_var 4),
                         template_var 3)),
                     template_app
                      (template_app
                        (template_app (template_hole 10, template_var 2),
                         template_var 1),
                       template_var 0))),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 3),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 11,
                         template_app (template_hole 7, template_var 5)),
                       template_var 4),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 10,
                       template_app (template_hole 6, template_var 2)),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 2)),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 4)),
               template_var 1)))
         )),
    ("Sepref_HOL_Bindings.param_max_int",
     "hn_refine (hn_val int_rel ?x'6 ?x6 * hn_val int_rel ?x'a6 ?xa6)
       (return (max ?x6 ?xa6))
       (hn_val int_rel ?x'6 ?x6 * hn_val int_rel ?x'a6 ?xa6) int_assn
       (RETURN $ (max $ ?x'6 $ ?x'a6))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_hole 7, template_hole 6)),
                           template_var 3),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 8,
                           template_app (template_hole 7, template_hole 6)),
                         template_var 1),
                       template_var 0))),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 8,
                         template_app (template_hole 7, template_hole 6)),
                       template_var 3),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 6)),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 7, template_hole 6)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_hole 4),
                   template_var 3)),
               template_var 1)))
         )),
    ("Sepref_HOL_Bindings.param_min_int",
     "hn_refine (hn_val int_rel ?x'6 ?x6 * hn_val int_rel ?x'a6 ?xa6)
       (return (min ?x6 ?xa6))
       (hn_val int_rel ?x'6 ?x6 * hn_val int_rel ?x'a6 ?xa6) int_assn
       (RETURN $ (min $ ?x'6 $ ?x'a6))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_hole 7, template_hole 6)),
                           template_var 3),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 8,
                           template_app (template_hole 7, template_hole 6)),
                         template_var 1),
                       template_var 0))),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 8,
                         template_app (template_hole 7, template_hole 6)),
                       template_var 3),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 6)),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 7, template_hole 6)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_hole 4),
                   template_var 3)),
               template_var 1)))
         )),
    ("Sepref_HOL_Bindings.param_max_nat",
     "hn_refine (hn_val nat_rel ?x'6 ?x6 * hn_val nat_rel ?x'a6 ?xa6)
       (return (max ?x6 ?xa6))
       (hn_val nat_rel ?x'6 ?x6 * hn_val nat_rel ?x'a6 ?xa6) nat_assn
       (RETURN $ (max $ ?x'6 $ ?x'a6))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_hole 7, template_hole 6)),
                           template_var 3),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 8,
                           template_app (template_hole 7, template_hole 6)),
                         template_var 1),
                       template_var 0))),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 8,
                         template_app (template_hole 7, template_hole 6)),
                       template_var 3),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 6)),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 7, template_hole 6)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_hole 4),
                   template_var 3)),
               template_var 1)))
         )),
    ("Sepref_HOL_Bindings.param_min_nat",
     "hn_refine (hn_val nat_rel ?x'6 ?x6 * hn_val nat_rel ?x'a6 ?xa6)
       (return (min ?x6 ?xa6))
       (hn_val nat_rel ?x'6 ?x6 * hn_val nat_rel ?x'a6 ?xa6) nat_assn
       (RETURN $ (min $ ?x'6 $ ?x'a6))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_hole 7, template_hole 6)),
                           template_var 3),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 8,
                           template_app (template_hole 7, template_hole 6)),
                         template_var 1),
                       template_var 0))),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 8,
                         template_app (template_hole 7, template_hole 6)),
                       template_var 3),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 6)),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 7, template_hole 6)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_hole 4),
                   template_var 3)),
               template_var 1)))
         )),
    ("Sepref_HOL_Bindings.hn_Cons",
     "hn_refine (hn_ctxt ?P ?x ?x' * hn_ctxt (list_assn ?P) ?xs ?xs')
       (return (?x' # ?xs'))
       (hn_invalid ?P ?x ?x' * hn_invalid (list_assn ?P) ?xs ?xs')
       (list_assn ?P) (RETURN $ ((#) $ ?x $ ?xs))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app
                          (template_app (template_hole 11, template_var 4),
                           template_var 3),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 10,
                           template_app (template_hole 9, template_var 4)),
                         template_var 1),
                       template_var 0))),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 2),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 11,
                         template_app (template_hole 6, template_var 4)),
                       template_var 3),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 5,
                         template_app (template_hole 9, template_var 4))),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 9, template_var 4)),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 3)),
               template_var 1)))
         )),
    ("Sepref_HOL_Bindings.hn_append",
     "hn_refine
       (hn_ctxt (list_assn ?P) ?l1.0 ?l1' *
        hn_ctxt (list_assn ?P) ?l2.0 ?l2')
       (return (?l1' @ ?l2'))
       (hn_invalid (list_assn ?P) ?l1.0 ?l1' *
        hn_invalid (list_assn ?P) ?l2.0 ?l2')
       (list_assn ?P) (RETURN $ ((@) $ ?l1.0 $ ?l2.0))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 9,
                             template_app
                              (template_hole 8, template_var 4)),
                           template_var 3),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 9,
                           template_app (template_hole 8, template_var 4)),
                         template_var 1),
                       template_var 0))),
                 template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_hole 5,
                           template_app (template_hole 8, template_var 4))),
                       template_var 3),
                     template_var 2)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_hole 5,
                         template_app (template_hole 8, template_var 4))),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 8, template_var 4)),
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 3)),
               template_var 1)))
         )),
    ("Sepref_HOL_Bindings.list_match_cong",
     "(!!x x'.
          [| x : set ?l; x' : set ?l' |]
          ==> hn_ctxt ?A x x' \<Longrightarrow>\<^sub>t
              hn_ctxt ?A' x x') ==>
      hn_ctxt (list_assn ?A) ?l ?l' \<Longrightarrow>\<^sub>t
      hn_ctxt (list_assn ?A') ?l ?l'",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1)),
                   template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 3),
               template_var 2))
           ))),
    ("Sepref_HOL_Bindings.b_rel_subtyping_merge",
     "hn_ctxt ?A ?x ?y \<or>\<^sub>A
      hn_ctxt ?A' ?x ?y \<Longrightarrow>\<^sub>t
      hn_ctxt ?Am ?x ?y ==>
      hn_ctxt (b_assn ?A ?P) ?x ?y \<or>\<^sub>A
      hn_ctxt (b_assn ?A' ?P') ?x ?y \<Longrightarrow>\<^sub>t
      hn_ctxt (b_assn ?Am (%x. ?P x | ?P' x)) ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app
                       (template_app (template_hole 2, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_app
                   (template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 5),
                    template_var 4))),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 5),
                template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 6),
                           template_var 1)),
                       template_var 5),
                     template_var 4)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 3),
                         template_var 0)),
                     template_var 5),
                   template_var 4))),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     t_empty)),
                 template_var 5),
               template_var 4))
           ))),
    ("Sepref_HOL_Bindings.prod_frame_match",
     "[| hn_ctxt ?A (fst ?x) (fst ?y) \<Longrightarrow>\<^sub>t
         hn_ctxt ?A' (fst ?x) (fst ?y);
         hn_ctxt ?B (snd ?x) (snd ?y) \<Longrightarrow>\<^sub>t
         hn_ctxt ?B' (snd ?x) (snd ?y) |]
      ==> hn_ctxt (?A \<times>\<^sub>a ?B) ?x ?y \<Longrightarrow>\<^sub>t
          hn_ctxt (?A' \<times>\<^sub>a ?B') ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_app (template_hole 7, template_var 5),
                    template_app (template_hole 6, template_var 4)),
                  template_app (template_hole 5, template_var 3))),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_app (template_hole 6, template_var 4)),
                template_app (template_hole 5, template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_app (template_hole 4, template_var 1),
                    template_app (template_hole 3, template_var 4)),
                  template_app (template_hole 2, template_var 3))),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app (template_hole 3, template_var 4)),
                template_app (template_hole 2, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 1)),
                   template_var 4),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_var 4),
               template_var 3))
           ))),
    ("Sepref_HOL_Bindings.b_assn_subtyping_match",
     "[| hn_ctxt (b_assn ?A ?P) ?x ?y \<Longrightarrow>\<^sub>t
         hn_ctxt ?A' ?x ?y;
         [| vassn_tag (hn_ctxt ?A ?x ?y); vassn_tag (hn_ctxt ?A' ?x ?y);
            ?P ?x |]
         ==> ?P' ?x |]
      ==> hn_ctxt (b_assn ?A ?P) ?x ?y \<Longrightarrow>\<^sub>t
          hn_ctxt (b_assn ?A' ?P') ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 1, template_var 5),
                        template_var 4)),
                    template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 3),
                template_var 2))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 3),
                   template_var 2))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 3),
                     template_var 2))
                 )],
            template_implication
             ([template_predicate
                (template_app (template_var 4, template_var 3))],
              template_predicate
               (template_app (template_var 0, template_var 3)))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4)),
                   template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_var 3),
               template_var 2))
           ))),
    ("Sepref_HOL_Bindings.list_merge_cong",
     "(!!x x'.
          [| x : set ?l; x' : set ?l' |]
          ==> hn_ctxt ?A x x' \<or>\<^sub>A
              hn_ctxt ?A' x x' \<Longrightarrow>\<^sub>t
              hn_ctxt ?Am x x') ==>
      hn_ctxt (list_assn ?A) ?l ?l' \<or>\<^sub>A
      hn_ctxt (list_assn ?A') ?l ?l' \<Longrightarrow>\<^sub>t
      hn_ctxt (list_assn ?Am) ?l ?l'",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 0, template_var 2)),
                       template_var 4),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 1)),
                     template_var 4),
                   template_var 3))),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 4),
               template_var 3))
           ))),
    ("Sepref_HOL_Bindings.prod_frame_merge",
     "[| hn_ctxt ?A (fst ?x) (fst ?y) \<or>\<^sub>A
         hn_ctxt ?A' (fst ?x) (fst ?y) \<Longrightarrow>\<^sub>t
         hn_ctxt ?Am (fst ?x) (fst ?y);
         hn_ctxt ?B (snd ?x) (snd ?y) \<or>\<^sub>A
         hn_ctxt ?B' (snd ?x) (snd ?y) \<Longrightarrow>\<^sub>t
         hn_ctxt ?Bm (snd ?x) (snd ?y) |]
      ==> hn_ctxt (?A \<times>\<^sub>a ?B) ?x ?y \<or>\<^sub>A
          hn_ctxt (?A' \<times>\<^sub>a ?B') ?x ?y \<Longrightarrow>\<^sub>t
          hn_ctxt (?Am \<times>\<^sub>a ?Bm) ?x ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_app (template_hole 7, template_var 7),
                        template_app (template_hole 6, template_var 6)),
                      template_app (template_hole 5, template_var 5))),
                  template_app
                   (template_app
                     (template_app (template_hole 7, template_var 4),
                      template_app (template_hole 6, template_var 6)),
                    template_app (template_hole 5, template_var 5)))),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app (template_hole 6, template_var 6)),
                template_app (template_hole 5, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_app (template_hole 4, template_var 2),
                        template_app (template_hole 3, template_var 6)),
                      template_app (template_hole 2, template_var 5))),
                  template_app
                   (template_app
                     (template_app (template_hole 4, template_var 1),
                      template_app (template_hole 3, template_var 6)),
                    template_app (template_hole 2, template_var 5)))),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 0),
                  template_app (template_hole 3, template_var 6)),
                template_app (template_hole 2, template_var 5)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 7),
                           template_var 2)),
                       template_var 6),
                     template_var 5)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 4),
                         template_var 1)),
                     template_var 6),
                   template_var 5))),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0)),
                 template_var 6),
               template_var 5))
           ))),
    ("Sepref_HOL_Bindings.sum_match_cong",
     "[| !!x y.
            [| ?e = Inl x; ?e' = Inl y |]
            ==> hn_ctxt ?A x y \<Longrightarrow>\<^sub>t hn_ctxt ?A' x y;
         !!x y.
            [| ?e = Inr x; ?e' = Inr y |]
            ==> hn_ctxt ?B x y \<Longrightarrow>\<^sub>t hn_ctxt ?B' x y |]
      ==> hn_ctxt (?A +\<^sub>a ?B) ?e ?e' \<Longrightarrow>\<^sub>t
          hn_ctxt (?A' +\<^sub>a ?B') ?e ?e'",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 1)),
                   template_var 5),
                 template_var 4)),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_var 5),
               template_var 4))
           ))),
    ("Sepref_HOL_Bindings.hn_if",
     "[| ?\<Gamma> \<Longrightarrow>\<^sub>t
         ?\<Gamma>1.0 * hn_val bool_rel ?a ?a';
         ?a ==>
         hn_refine (?\<Gamma>1.0 * hn_val bool_rel ?a ?a') ?b' ?\<Gamma>2b
          ?R ?b;
         ~ ?a ==>
         hn_refine (?\<Gamma>1.0 * hn_val bool_rel ?a ?a') ?c' ?\<Gamma>2c
          ?R ?c;
         TERM If ==>
         ?\<Gamma>2b \<or>\<^sub>A ?\<Gamma>2c \<Longrightarrow>\<^sub>t
         ?\<Gamma>' |]
      ==> hn_refine ?\<Gamma> (if ?a' then ?b' else ?c') ?\<Gamma>' ?R
           (If $ ?a $ ?b $ ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 11),
              template_app
               (template_app (template_hole 13, template_var 10),
                template_app
                 (template_app
                   (template_app
                     (template_hole 12,
                      template_app (template_hole 11, template_hole 10)),
                    template_var 9),
                  template_var 8)))
            ),
        template_implication
         ([template_predicate (template_var 9)],
          template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app (template_hole 13, template_var 10),
                          template_app
                           (template_app
                             (template_app
                               (template_hole 12,
                                template_app
                                 (template_hole 11, template_hole 10)),
                              template_var 9),
                            template_var 8))),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4)
              )),
        template_implication
         ([template_negation (template_predicate (template_var 9))],
          template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app (template_hole 13, template_var 10),
                          template_app
                           (template_app
                             (template_app
                               (template_hole 12,
                                template_app
                                 (template_hole 11, template_hole 10)),
                              template_var 9),
                            template_var 8))),
                      template_var 3),
                    template_var 2),
                  template_var 5),
                template_var 1)
              )),
        template_implication
         ([template_predicate
            (template_app (template_hole 7, template_hole 6))],
          template_predicate
           (
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 2)),
                template_var 0)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 9, template_var 11),
                   template_app
                    (template_app
                      (template_app (template_hole 4, template_var 8),
                       template_var 7),
                     template_var 3)),
                 template_var 0),
               template_var 5),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 9)),
                   template_var 4)),
               template_var 1))
           ))),
    ("Sepref_HOL_Bindings.hn_let",
     "[| ?\<Gamma> \<Longrightarrow>\<^sub>t
         ?\<Gamma>1.0 * hn_ctxt ?R ?v ?v';
         !!x x'.
            x = ?v ==>
            hn_refine (?\<Gamma>1.0 * hn_ctxt ?R x x') (?f' x')
             (?\<Gamma>' x x') ?R2.0 (?f x);
         !!x x'.
            ?\<Gamma>' x x' \<Longrightarrow>\<^sub>t
            ?\<Gamma>2.0 * hn_ctxt ?R' x x' |]
      ==> hn_refine ?\<Gamma> (Let ?v' ?f')
           (?\<Gamma>2.0 * hn_ctxt ?R' ?v ?v') ?R2.0
           (Let $ ?v $ (%x. (#?f x#)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 10),
              template_app
               (template_app (template_hole 11, template_var 9),
                template_app
                 (template_app
                   (template_app (template_hole 10, template_var 8),
                    template_var 7),
                  template_var 6)))
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 6, template_var 10),
                   template_app
                    (template_app (template_hole 5, template_var 6),
                     template_var 5)),
                 template_app
                  (template_app (template_hole 11, template_var 1),
                   template_app
                    (template_app
                      (template_app (template_hole 10, template_var 0),
                       template_var 7),
                     template_var 6))),
               template_var 3),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 7)),
               t_empty))
           ))),
    ("Sepref_HOL_Bindings.enum_merge_cong",
     "[| !!x y.
            [| ?e = Inl x; ?e' = Inl y |]
            ==> hn_ctxt ?A x y \<or>\<^sub>A
                hn_ctxt ?A' x y \<Longrightarrow>\<^sub>t
                hn_ctxt ?Am x y;
         !!x y.
            [| ?e = Inr x; ?e' = Inr y |]
            ==> hn_ctxt ?B x y \<or>\<^sub>A
                hn_ctxt ?B' x y \<Longrightarrow>\<^sub>t
                hn_ctxt ?Bm x y |]
      ==> hn_ctxt (?A +\<^sub>a ?B) ?e ?e' \<or>\<^sub>A
          hn_ctxt (?A' +\<^sub>a ?B') ?e ?e' \<Longrightarrow>\<^sub>t
          hn_ctxt (?Am +\<^sub>a ?Bm) ?e ?e'",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_var 2)),
                       template_var 7),
                     template_var 6)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 4),
                         template_var 1)),
                     template_var 7),
                   template_var 6))),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0)),
                 template_var 7),
               template_var 6))
           ))),
    ("Sepref_HOL_Bindings.option_assn_eq",
     "[| ?\<Gamma> \<Longrightarrow>\<^sub>t
         hn_ctxt (option_assn ?P) ?a ?a' * hn_ctxt (option_assn ?P) ?b ?b' *
         ?\<Gamma>1.0;
         !!va va' vb vb'.
            hn_refine (hn_ctxt ?P va va' * hn_ctxt ?P vb vb' * ?\<Gamma>1.0)
             (?eq' va' vb') (?\<Gamma>' va va' vb vb') bool_assn
             (RETURN $ ((=) $ va $ vb));
         !!va va' vb vb'.
            ?\<Gamma>' va va' vb vb' \<Longrightarrow>\<^sub>t
            hn_ctxt ?P va va' * hn_ctxt ?P vb vb' * ?\<Gamma>1.0 |]
      ==> hn_refine ?\<Gamma> (imp_option_eq ?eq' ?a' ?b')
           (hn_ctxt (option_assn ?P) ?a ?a' *
            hn_ctxt (option_assn ?P) ?b ?b' *
            ?\<Gamma>1.0)
           bool_assn (RETURN $ ((=) $ ?a $ ?b))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 8),
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app
                     (template_hole 17,
                      template_app
                       (template_app
                         (template_app
                           (template_hole 16,
                            template_app
                             (template_hole 15, template_var 7)),
                          template_var 6),
                        template_var 5)),
                    template_app
                     (template_app
                       (template_app
                         (template_hole 16,
                          template_app (template_hole 15, template_var 7)),
                        template_var 4),
                      template_var 3))),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 12, template_var 8),
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 1),
                       template_var 5),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_app
                        (template_hole 17,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 16,
                               template_app
                                (template_hole 15, template_var 7)),
                             template_var 6),
                           template_var 5)),
                       template_app
                        (template_app
                          (template_app
                            (template_hole 16,
                             template_app
                              (template_hole 15, template_var 7)),
                           template_var 4),
                         template_var 3))),
                   template_var 2)),
               template_app (template_hole 10, template_hole 9)),
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 6)),
                 template_var 4)))
           ))),
    ("Sepref_HOL_Bindings.hn_case_prod_old",
     "[| ?\<Gamma> \<Longrightarrow>\<^sub>t
         ?\<Gamma>1.0 * hn_ctxt (?P1.0 \<times>\<^sub>a ?P2.0) ?p' ?p;
         !!a1 a2 a1' a2'.
            ?p' = (a1', a2') ==>
            hn_refine
             (?\<Gamma>1.0 * hn_ctxt ?P1.0 a1' a1 * hn_ctxt ?P2.0 a2' a2 *
              hn_invalid (?P1.0 \<times>\<^sub>a ?P2.0) ?p' ?p)
             (?f a1 a2) (?\<Gamma>h a1 a1' a2 a2') ?R (?f' a1' a2');
         !!a1 a1' a2 a2'.
            ?\<Gamma>h a1 a1' a2 a2' \<Longrightarrow>\<^sub>t
            ?\<Gamma>' * hn_ctxt ?P1' a1' a1 * hn_ctxt ?P2' a2' a2 *
            hn_ctxt ?Pxx ?p' ?p |]
      ==> hn_refine ?\<Gamma> (case ?p of (x, xa) => ?f x xa)
           (?\<Gamma>' * hn_ctxt (?P1' \<times>\<^sub>a ?P2') ?p' ?p) ?R
           (case_prod $ (%x. (#%xa. (#?f' x xa#)#)) $ ?p')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 13),
              template_app
               (template_app (template_hole 19, template_var 12),
                template_app
                 (template_app
                   (template_app
                     (template_hole 18,
                      template_app
                       (template_app (template_hole 17, template_var 11),
                        template_var 10)),
                    template_var 9),
                  template_var 8)))
            ),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 10, template_var 13),
                   template_app
                    (template_app (template_hole 6, template_var 7),
                     template_var 8)),
                 template_app
                  (template_app (template_hole 19, template_var 3),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 18,
                         template_app
                          (template_app (template_hole 17, template_var 2),
                           template_var 1)),
                       template_var 9),
                     template_var 8))),
               template_var 5),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   t_empty)),
               template_var 9))
           ))),
    ("Sepref_HOL_Bindings.hn_case_prod'",
     "[| ?\<Gamma> \<Longrightarrow>\<^sub>t
         hn_ctxt (?P1.0 \<times>\<^sub>a ?P2.0) ?p' ?p * ?\<Gamma>1.0;
         !!a1 a2 a1' a2'.
            ?p' = (a1', a2') ==>
            hn_refine
             (hn_ctxt ?P1.0 a1' a1 * hn_ctxt ?P2.0 a2' a2 * ?\<Gamma>1.0 *
              hn_invalid (?P1.0 \<times>\<^sub>a ?P2.0) ?p' ?p)
             (?f a1 a2) (?Q a1 a2 a1' a2') ?R (?f' a1' a2');
         !!a1 a2 a1' a2'.
            ?p' = (a1', a2') ==>
            ?Q a1 a2 a1' a2' \<Longrightarrow>\<^sub>t
            hn_ctxt ?P1' a1' a1 * hn_ctxt ?P2' a2' a2 *
            hn_ctxt ?XX1.0 ?p' ?p *
            ?\<Gamma>1' |]
      ==> hn_refine ?\<Gamma> (case ?p of (x, xa) => ?f x xa)
           (hn_ctxt (?P1' \<times>\<^sub>a ?P2') ?p' ?p * ?\<Gamma>1') ?R
           (case_prod $ (%x. (#%xa. (#?f' x xa#)#)) $ ?p')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 13),
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app
                     (template_app
                       (template_hole 18,
                        template_app
                         (template_app (template_hole 17, template_var 12),
                          template_var 11)),
                      template_var 10),
                    template_var 9)),
                template_var 8))
            ),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 10, template_var 13),
                   template_app
                    (template_app (template_hole 6, template_var 7),
                     template_var 9)),
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 18,
                           template_app
                            (template_app
                              (template_hole 17, template_var 3),
                             template_var 2)),
                         template_var 10),
                       template_var 9)),
                   template_var 0)),
               template_var 5),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   t_empty)),
               template_var 10))
           ))),
    ("Sepref_HOL_Bindings.sum_cases_hnr",
     "[| ?\<Gamma> \<Longrightarrow>\<^sub>t
         hn_ctxt (?A +\<^sub>a ?B) ?e ?e' * ?F;
         !!x1 x1a.
            [| ?e = Inl x1; ?e' = Inl x1a |]
            ==> hn_refine
                 (hn_ctxt ?A x1 x1a * hn_invalid (?A +\<^sub>a ?B) ?e ?e' *
                  ?F)
                 (?f1' x1a)
                 (hn_ctxt ?A' x1 x1a * hn_ctxt ?XX1.0 ?e ?e' * ?\<Gamma>1')
                 ?R (?f1.0 x1);
         !!x2 x2a.
            [| ?e = Inr x2; ?e' = Inr x2a |]
            ==> hn_refine
                 (hn_ctxt ?B x2 x2a * hn_invalid (?A +\<^sub>a ?B) ?e ?e' *
                  ?F)
                 (?f2' x2a)
                 (hn_ctxt ?B' x2 x2a * hn_ctxt ?XX2.0 ?e ?e' * ?\<Gamma>2')
                 ?R (?f2.0 x2);
         ?\<Gamma>1' \<or>\<^sub>A ?\<Gamma>2' \<Longrightarrow>\<^sub>t
         ?\<Gamma>' |]
      ==> hn_refine ?\<Gamma>
           (case ?e' of Inl x => ?f1' x | Inr x => ?f2' x)
           (hn_ctxt (?A' +\<^sub>a ?B') ?e ?e' * ?\<Gamma>') ?R
           (case_sum $ (%x. (#?f1.0 x#)) $ (%x. (#?f2.0 x#)) $ ?e)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 17),
              template_app
               (template_app
                 (template_hole 24,
                  template_app
                   (template_app
                     (template_app
                       (template_hole 23,
                        template_app
                         (template_app (template_hole 22, template_var 16),
                          template_var 15)),
                      template_var 14),
                    template_var 13)),
                template_var 12))
            ),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_app (template_hole 7, template_var 8),
                  template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 15, template_var 17),
                   template_app
                    (template_app
                      (template_app (template_hole 6, template_var 11),
                       template_var 5),
                     template_var 13)),
                 template_app
                  (template_app
                    (template_hole 24,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 23,
                           template_app
                            (template_app
                              (template_hole 22, template_var 10),
                             template_var 4)),
                         template_var 14),
                       template_var 13)),
                   template_var 0)),
               template_var 7),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       t_empty)),
                   t_empty)),
               template_var 14))
           ))),
    ("Sepref_HOL_Bindings.hn_case_option",
     "[| ?\<Gamma> \<Longrightarrow>\<^sub>t
         hn_ctxt (option_assn ?P) ?p ?p' * ?F;
         ?p = None ==>
         hn_refine (hn_ctxt (option_assn ?P) ?p ?p' * ?F) ?f1' ?Qa ?R ?f1.0;
         ?p = None ==>
         ?Qa \<Longrightarrow>\<^sub>t hn_ctxt ?XX1.0 ?p ?p' * ?\<Gamma>1';
         !!x x'.
            [| ?p = Some x; ?p' = Some x' |]
            ==> hn_refine
                 (hn_ctxt ?P x x' * hn_invalid (option_assn ?P) ?p ?p' * ?F)
                 (?f2' x') (?Q x x') ?R (?f2.0 x);
         !!x x'.
            [| ?p = Some x; ?p' = Some x' |]
            ==> ?Q x x' \<Longrightarrow>\<^sub>t
                hn_ctxt ?P' x x' * hn_ctxt ?XX2.0 ?p ?p' * ?\<Gamma>2';
         ?\<Gamma>1' \<or>\<^sub>A ?\<Gamma>2' \<Longrightarrow>\<^sub>t
         ?\<Gamma>' |]
      ==> hn_refine ?\<Gamma> (case ?p' of None => ?f1' | Some x => ?f2' x)
           (hn_ctxt (option_assn ?P') ?p ?p' * ?\<Gamma>') ?R
           (case_option $ ?f1.0 $ (%x. (#?f2.0 x#)) $ ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 17),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app
                     (template_app
                       (template_hole 19,
                        template_app (template_hole 18, template_var 16)),
                      template_var 15),
                    template_var 14)),
                template_var 13))
            ),
        template_implication
         ([template_equation (template_var 15, template_hole 16)],
          template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 15,
                        template_app
                         (template_app
                           (template_hole 20,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 19,
                                  template_app
                                   (template_hole 18, template_var 16)),
                                template_var 15),
                              template_var 14)),
                          template_var 13)),
                      template_var 12),
                    template_var 11),
                  template_var 10),
                template_var 9)
              )),
        template_implication
         ([template_equation (template_var 15, template_hole 16)],
          template_predicate
           (
              template_app
               (template_app (template_hole 21, template_var 11),
                template_app
                 (template_app
                   (template_hole 20,
                    template_app
                     (template_app
                       (template_app (template_hole 19, template_var 8),
                        template_var 15),
                      template_var 14)),
                  template_var 7))
              )),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_app (template_hole 7, template_var 7),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 15, template_var 17),
                   template_app
                    (template_app
                      (template_app (template_hole 6, template_var 12),
                       template_var 6),
                     template_var 14)),
                 template_app
                  (template_app
                    (template_hole 20,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 19,
                           template_app (template_hole 18, template_var 3)),
                         template_var 15),
                       template_var 14)),
                   template_var 0)),
               template_var 10),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 9)),
                   t_empty)),
               template_var 15))
           ))),
    ("Sepref_HOL_Bindings.hn_case_list",
     "[| ?\<Gamma> \<Longrightarrow>\<^sub>t
         hn_ctxt (list_assn ?P) ?p ?p' * ?F;
         ?p = [] ==>
         hn_refine (hn_ctxt (list_assn ?P) ?p ?p' * ?F) ?f1' ?Qa ?R ?f1.0;
         ?p = [] ==>
         ?Qa \<Longrightarrow>\<^sub>t hn_ctxt ?XX1.0 ?p ?p' * ?\<Gamma>1';
         !!x l x' l'.
            [| ?p = x # l; ?p' = x' # l' |]
            ==> hn_refine
                 (hn_ctxt ?P x x' * hn_ctxt (list_assn ?P) l l' *
                  hn_invalid (list_assn ?P) ?p ?p' *
                  ?F)
                 (?f2' x' l') (?Q x l x' l') ?R (?f2.0 x l);
         !!x l x' l'.
            [| ?p = x # l; ?p' = x' # l' |]
            ==> ?Q x l x' l' \<Longrightarrow>\<^sub>t
                hn_ctxt ?P1' x x' * hn_ctxt (list_assn ?P2') l l' *
                hn_ctxt ?XX2.0 ?p ?p' *
                ?\<Gamma>2';
         !!x x'.
            hn_ctxt ?P1' x x' \<or>\<^sub>A
            hn_ctxt ?P2' x x' \<Longrightarrow>\<^sub>t
            hn_ctxt ?P' x x';
         ?\<Gamma>1' \<or>\<^sub>A ?\<Gamma>2' \<Longrightarrow>\<^sub>t
         ?\<Gamma>' |]
      ==> hn_refine ?\<Gamma> (case ?p' of [] => ?f1' | x # xa => ?f2' x xa)
           (hn_ctxt (list_assn ?P') ?p ?p' * ?\<Gamma>') ?R
           (case_list $ ?f1.0 $ (%x. (#%xa. (#?f2.0 x xa#)#)) $ ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 19),
              template_app
               (template_app
                 (template_hole 23,
                  template_app
                   (template_app
                     (template_app
                       (template_hole 22,
                        template_app (template_hole 21, template_var 18)),
                      template_var 17),
                    template_var 16)),
                template_var 15))
            ),
        template_implication
         ([template_equation (template_var 17, template_hole 19)],
          template_predicate
           (
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_hole 18,
                        template_app
                         (template_app
                           (template_hole 23,
                            template_app
                             (template_app
                               (template_app
                                 (template_hole 22,
                                  template_app
                                   (template_hole 21, template_var 18)),
                                template_var 17),
                              template_var 16)),
                          template_var 15)),
                      template_var 14),
                    template_var 13),
                  template_var 12),
                template_var 11)
              )),
        template_implication
         ([template_equation (template_var 17, template_hole 19)],
          template_predicate
           (
              template_app
               (template_app (template_hole 24, template_var 13),
                template_app
                 (template_app
                   (template_hole 23,
                    template_app
                     (template_app
                       (template_app (template_hole 22, template_var 10),
                        template_var 17),
                      template_var 16)),
                  template_var 9))
              )),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app (template_hole 8, template_var 9),
                  template_var 2)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 18, template_var 19),
                   template_app
                    (template_app
                      (template_app (template_hole 7, template_var 14),
                       template_var 8),
                     template_var 16)),
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app
                      (template_app
                        (template_app
                          (template_hole 22,
                           template_app (template_hole 21, template_var 1)),
                         template_var 17),
                       template_var 16)),
                   template_var 0)),
               template_var 12),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_var 11)),
                   t_empty)),
               template_var 17))
           )))]:
   (string * thm * template) list
### theory "Draft.Sepref_HOL_BindingsTemplates"
### 0.632s elapsed time, 0.790s cpu time, 0.092s GC time
val it = (): unit
