Loading theory "Draft.Structured_Apply" (required by "Draft.Sepref_RulesTemplates" via "Draft.Sepref_Rules" via "Draft.Sepref_Basic")
Loading theory "Draft.Named_Theorems_Rev" (required by "Draft.Sepref_RulesTemplates" via "Draft.Sepref_Rules" via "Draft.Sepref_Basic" via "Draft.Sepref_Misc")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Sepref_RulesTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Stream" (required by "Draft.Sepref_RulesTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
signature STRUCTURED_APPLY =
  sig
    val apply1:
       Method.text_range -> Proof.state -> Proof.state Seq.result Seq.seq
    val applyT:
       Method.text * Position.range ->
         Proof.state -> Proof.state Seq.result Seq.seq
    val apply_focus:
       Method.text_range -> Proof.state -> Proof.state Seq.result Seq.seq
    val apply_solve:
       Method.text_range -> Proof.state -> Proof.state Seq.result Seq.seq
    val focus: Proof.state -> Proof.state
    val solved: Proof.state -> Proof.state
    val unfocus: Proof.state -> Proof.state
  end
structure Structured_Apply: STRUCTURED_APPLY
### theory "Draft.Structured_Apply"
### 0.067s elapsed time, 0.305s cpu time, 0.000s GC time
Loading theory "Draft.PO_Normalizer" (required by "Draft.Sepref_RulesTemplates" via "Draft.Sepref_Rules" via "Draft.Sepref_Basic" via "Draft.Sepref_Misc")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
signature NAMED_THEOREMS_REV =
  sig
    val add: string -> attribute
    val add_thm: string -> thm -> Context.generic -> Context.generic
    val check: Proof.context -> string * Position.T -> string
    val declare: binding -> string -> local_theory -> string * local_theory
    val del: string -> attribute
    val del_thm: string -> thm -> Context.generic -> Context.generic
    val get: Proof.context -> string -> thm list
    val member: Proof.context -> string -> thm -> bool
  end
structure Named_Theorems_Rev: NAMED_THEOREMS_REV
### theory "Draft.Named_Theorems_Rev"
### 0.082s elapsed time, 0.363s cpu time, 0.000s GC time
Loading theory "Draft.Sepref_Id_Op" (required by "Draft.Sepref_RulesTemplates" via "Draft.Sepref_Rules" via "Draft.Sepref_Basic")
### ML warning (line 63 of "$AFP/Refine_Imperative_HOL/Lib/PO_Normalizer.ML"):
### Pattern is not exhaustive.
### ML warning (line 77 of "$AFP/Refine_Imperative_HOL/Lib/PO_Normalizer.ML"):
### Pattern is not exhaustive.
signature PO_NORMALIZER =
  sig
    val gen_norm_rule: thm list -> norm_set -> Proof.context -> thm -> thm
    val gen_norm_tac: norm_set -> Proof.context -> tactic'
    type norm_set =
       {cong_rules: thm list,
        norm_rules: thm list, refl_rules: thm list, trans_rules: thm list}
  end
structure PO_Normalizer: PO_NORMALIZER
### theory "Draft.PO_Normalizer"
### 0.053s elapsed time, 0.188s cpu time, 0.032s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Sepref_RulesTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
### theory "HOL-Library.Function_Algebras"
### 0.162s elapsed time, 0.654s cpu time, 0.032s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Sepref_RulesTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Set_Algebras"
### 0.223s elapsed time, 0.864s cpu time, 0.097s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Sepref_RulesTemplates" via "Draft.ExtrEqs")
infix 0 THEN_ELSE_COMB'
signature ID_OP_TACTICAL =
  sig
    val DF_SOLVE_FWD: bool -> tactic' -> tactic'
    val SOLVE_FWD: tactic' -> tactic'
  end
structure Id_Op_Tactical: ID_OP_TACTICAL
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
structure Id_Op:
  sig
    val add_id_rule: thm -> Proof.context -> Proof.context
    val cfg_id_debug: bool Config.T
    val cfg_id_trace_fallback: bool Config.T
    val dest_id_rl: thm -> term * typ
    val do_unprotect_tac: Proof.context -> int -> tactic
    val id_a_conv: conv -> cterm -> thm
    val id_tac: id_tac_mode -> Proof.context -> int -> tactic
    datatype id_tac_mode = Init | Normal | Solve | Step
    val protect: typ list -> term -> term
    val protect_conv: Proof.context -> conv
    val unprotect_conv: Proof.context -> conv
  end
### theory "Draft.Sepref_Id_Op"
### 0.599s elapsed time, 2.296s cpu time, 0.239s GC time
Loading theory "Draft.Sepref_Misc" (required by "Draft.Sepref_RulesTemplates" via "Draft.Sepref_Rules" via "Draft.Sepref_Basic")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.859s elapsed time, 3.344s cpu time, 0.313s GC time
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.868s elapsed time, 3.104s cpu time, 0.645s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.Sepref_Misc"
### 0.950s elapsed time, 2.684s cpu time, 0.639s GC time
Loading theory "Draft.Sepref_Basic" (required by "Draft.Sepref_RulesTemplates" via "Draft.Sepref_Rules")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.864s elapsed time, 5.497s cpu time, 0.889s GC time
Loading theory "Draft.Templates" (required by "Draft.Sepref_RulesTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.072s elapsed time, 0.179s cpu time, 0.059s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Sepref_RulesTemplates")
### Ignoring duplicate rewrite rule:
### hn_refine ?\<Gamma>1 ?c1 ?\<Gamma>'1 ?R1 FAIL == True
signature SEPREF_BASIC =
  sig
    val PHASES': phase list -> phases_ctrl -> Proof.context -> tactic'
    val apply_under_lambda:
       (Proof.context -> term -> term) -> Proof.context -> term -> term
    val constrain_type_pre: typ -> term -> term
    val dbg_phases_ctrl: phases_ctrl
    val dest_hn_ctxt: term -> term * term * term
    val dest_hn_ctxt_opt: term -> (term * term * term) option
    val dest_hn_refine: term -> term * term * term * term * term
    val dest_hnr_absfun: term -> bool * (term * term list)
    val dest_lambda_rc:
       Proof.context -> term -> (term * (term -> term)) * Proof.context
    val dest_nresT: typ -> typ
    val dflt_phases_ctrl: phases_ctrl
    val flag_phases_ctrl: bool -> phases_ctrl
    val hn_refine_concl_conv_a:
       (Proof.context -> conv) -> Proof.context -> conv
    val hn_refine_conv: conv -> conv -> conv -> conv -> conv -> conv
    val hn_refine_conv_a: conv -> conv
    val is_hn_ctxt: term -> bool
    val is_hn_refine_concl: term -> bool
    val is_nresT: typ -> bool
    val is_true: term -> bool
    val list_star: term list -> term
    val mk_cequals: cterm * cterm -> cterm
    val mk_compN_pre: int -> term -> term -> term
    val mk_curry0_pre: term -> term
    val mk_curryN_pre: int -> term -> term
    val mk_curry_pre: term -> term
    val mk_entails: term * term -> term
    val mk_hn_refine: term * term * term * term * term -> term
    val mk_hnr_absfun: bool * (term * term list) -> term
    val mk_hnr_absfun': term * term list -> term
    val mk_nresT: typ -> typ
    val mk_pair_in_pre: term -> term -> term -> term
    val mk_star: term * term -> term
    val mk_uncurry0_pre: term -> term
    val mk_uncurryN_pre: int -> term -> term
    val mk_uncurry_pre: term -> term
    type phase = string * (Proof.context -> tactic') * int
    type phases_ctrl =
       {int_res: bool,
        start: string option, stop: string option, trace: bool}
    val star_permute_tac: Proof.context -> tactic
    val strip_star: term -> term list
  end
signature SEPREF_DEBUGGING =
  sig
    val DBG_CONVERSION: bool Config.T -> Proof.context -> conv -> tactic'
    val DBG_CONVERSION': Proof.context -> conv -> tactic'
    val cfg_debug_all: bool Config.T
    val dbg_msg_tac:
       bool Config.T ->
         (Proof.context -> int -> thm -> string) -> Proof.context -> tactic'
    val dbg_msg_tac':
       (Proof.context -> int -> thm -> string) -> Proof.context -> tactic'
    val dbg_trace_msg: bool Config.T -> Proof.context -> string -> unit
    val dbg_trace_msg': Proof.context -> string -> unit
    val error_tac': string -> Proof.context -> tactic'
    val is_debug: bool Config.T -> Proof.context -> bool
    val is_debug': Proof.context -> bool
    val msg_allgoals: string -> Proof.context -> int -> thm -> string
    val msg_from_subgoal:
       string ->
         (term -> Proof.context -> string) ->
           Proof.context -> int -> thm -> string
    val msg_subgoal: string -> Proof.context -> int -> thm -> string
    val msg_text: string -> Proof.context -> int -> thm -> string
    val tracing_tac': string -> Proof.context -> tactic'
    val warning_tac': string -> Proof.context -> tactic'
  end
structure Sepref_Basic: SEPREF_BASIC
structure Sepref_Debugging: SEPREF_DEBUGGING
infix 1 THEN_NEXT
infix 1 THEN_ALL_NEW_LIST
infix 1 THEN_ALL_NEW_LIST'
signature STACTICAL =
  sig
    val APPLY_LIST: tactic' list -> tactic'
    val THEN_ALL_NEW_LIST: tactic' * tactic' list -> tactic'
    val THEN_ALL_NEW_LIST': tactic' * (tactic' list * tactic') -> tactic'
    val THEN_NEXT: tactic' * tactic' -> tactic'
  end
structure STactical: STACTICAL
val THEN_ALL_NEW_LIST = fn: tactic' * tactic' list -> tactic'
val APPLY_LIST = fn: tactic' list -> tactic'
val THEN_NEXT = fn: tactic' * tactic' -> tactic'
val THEN_ALL_NEW_LIST' = fn: tactic' * (tactic' list * tactic') -> tactic'
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.Sepref_Basic"
### 1.184s elapsed time, 2.730s cpu time, 0.859s GC time
Loading theory "Draft.Sepref_Constraints" (required by "Draft.Sepref_RulesTemplates" via "Draft.Sepref_Rules")
### theory "Draft.ExtrEqs"
### 0.725s elapsed time, 1.761s cpu time, 0.757s GC time
signature SEPREF_CONSTRAINTS =
  sig
    val ON_SLOT: tactic -> tactic
    val WITH_SLOT: tactic' -> tactic
    val add_constraint_rule: thm -> Context.generic -> Context.generic
    val add_safe_constraint_rule: thm -> Context.generic -> Context.generic
    val cond_focus: (term -> bool) -> tactic
    val constraint_tac: Proof.context -> tactic'
    val create_slot_tac: tactic
    val del_constraint_rule: thm -> Context.generic -> Context.generic
    val del_safe_constraint_rule: thm -> Context.generic -> Context.generic
    val dest_slot_tac: tactic'
    val ensure_slot_tac: tactic
    val focus: tactic
    val get_constraint_rules: Proof.context -> thm list
    val get_safe_constraint_rules: Proof.context -> thm list
    val has_slot: thm -> bool
    val is_constraint_goal: term -> bool
    val is_constraint_tac: tactic'
    val prefer_slot_tac: tactic
    val print_slot_tac: Proof.context -> tactic
    val process_constraint_slot: Proof.context -> tactic
    val remove_slot_tac: tactic
    val safe_constraint'_tac: Proof.context -> tactic'
    val safe_constraint_tac: Proof.context -> tactic'
    val setup: theory -> theory
    val slot_constraint_tac: int -> tactic
    val solve_constraint'_tac: Proof.context -> tactic'
    val solve_constraint_slot: Proof.context -> tactic
    val solve_constraint_tac: Proof.context -> tactic'
    val some_to_slot_tac: (term -> bool) -> tactic
    val to_slot_tac: tactic'
    val unfocus: tactic
    val unfocus_ins: tactic
  end
structure Sepref_Constraints: SEPREF_CONSTRAINTS
### theory "Draft.Sepref_Constraints"
### 0.328s elapsed time, 0.331s cpu time, 0.000s GC time
Loading theory "Draft.Sepref_Rules" (required by "Draft.Sepref_RulesTemplates")
consts
  hf_pres ::
    "('a => 'b => assn) => bool => ('a => 'b => assn) * ('a => 'b => assn)"
signature SEPREF_RULES =
  sig
    val add_pure_constraints_rule: Proof.context -> thm -> thm
    val analyze_hnr: Proof.context -> thm -> hnr_analysis
    val analyze_rel: term -> term option * term list * term
    val binder_rels: term -> term list
    val body_rel: term -> term
    val ensure_fref: Proof.context -> thm -> thm
    val ensure_fref_nres: Proof.context -> thm -> thm
    val ensure_hfref: Proof.context -> thm -> thm
    val ensure_hnr: Proof.context -> thm -> thm
    val fcomp_attrib: attribute context_parser
    val gen_compose: Proof.context -> thm -> thm -> thm
    type hnr_analysis =
       {ahead: term * bool,
        argrels: (term * bool) list,
        chead: term * bool,
        precond: term, prems: term list, result_rel: term, thm: thm}
    val intf_of_assn: Proof.context -> term -> typ
    val mk_hfprod: term * term -> term
    val mk_hfprods: term list -> term
    val mk_hfref_thm: Proof.context -> hnr_analysis -> thm
    val mk_rel: term option * term list * term -> term
    val mk_triv_precond: term list -> term
    val norm_fcomp_rule: Proof.context -> thm -> thm
    val prepare_hfref_synth_tac: Proof.context -> tactic'
    val pretty_hnr_analysis: Proof.context -> hnr_analysis -> Pretty.T
    val simplify_precond: Proof.context -> thm -> thm
    val strip_rel: term -> term list * term
    val to_foparam: Proof.context -> thm -> thm
    val to_fref: Proof.context -> thm -> thm
    val to_hfref: Proof.context -> thm -> thm
    val to_hnr: Proof.context -> thm -> thm
  end
structure Sepref_Rules: SEPREF_RULES
### theory "Draft.Sepref_Rules"
### 1.749s elapsed time, 1.836s cpu time, 0.135s GC time
Loading theory "Draft.Sepref_RulesTemplates"
val templateLemmas =
   [("Sepref_Rules.fcomp_norm_refl", "?t = ?t",
     template_equation (template_var 0, template_var 0)),
    ("Sepref_Rules.hrp_imp_refl", "hrp_imp ?RR ?RR",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Sepref_Rules.intf_of_assn_fallback", "intf_of_assn ?R TYPE(?'a)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Sepref_Rules.intf_of_assnI", "intf_of_assn ?R TYPE(?'a)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Sepref_Rules.to_hnr_post", "uncurry0 ?c ?x = ?c",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 1)),
    ("Sepref_Rules.hr_comp_Id2", "hr_comp ?R Id = ?R",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Sepref_Rules.fcomp_norm_unfold", "Id O ?R = ?R",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Sepref_Rules.fcomp_norm_unfold", "?R O Id = ?R",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Sepref_Rules.to_hnr_post", "emp * ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Sepref_Rules.to_hnr_post", "?x * emp = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Sepref_Rules.uncurry0_APP", "uncurry0 ?c $ ?x = ?c",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_var 1)),
    ("Sepref_Rules.hn_ctxt_ctxt_fix_conv",
     "hn_ctxt (hn_ctxt ?R) = hn_ctxt ?R",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Sepref_Rules.keep_drop_sels", "fst (?R\<^sup>d) = ?R",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("Sepref_Rules.keep_drop_sels", "fst (?R\<^sup>k) = ?R",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("Sepref_Rules.hf_pres_fst", "fst (hf_pres ?R ?k) = ?R",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Sepref_Rules.keep_drop_sels", "snd (?R\<^sup>k) = ?R",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("Sepref_Rules.pure_unit_rel_eq_empty", "unit_assn ?x ?y = emp",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), template_var 1),
         template_var 0),
       template_hole 0)),
    ("Sepref_Rules.auto_weaken_pre_add_dummy_imp", "?P ==> True --> ?P",
     template_implication
      ([template_predicate (template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("Sepref_Rules.keep_drop_sels", "snd (?R\<^sup>d) = invalid_assn ?R",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Sepref_Rules.hr_comp_Id1", "hr_comp id_assn ?R = pure ?R",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Sepref_Rules.prod_casesK", "(%(uu_, uu_). ?k) = (%_. ?k)",
     template_equation (template_app (template_hole 0, t_empty), t_empty)),
    ("Sepref_Rules.hn_val_unit_conv_emp", "hn_val unit_rel ?x ?y = emp",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)),
           template_var 1),
         template_var 0),
       template_hole 0)),
    ("Sepref_Rules.uncurry0_add_app_tag",
     "uncurry0 (RETURN ?c) = uncurry0 (RETURN $ ?c)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 0, template_hole 1),
           template_var 0)))),
    ("Sepref_Rules.ensure_fref_nres_unfold",
     "(RETURN \<circ>\<circ> uncurry0) ?f = uncurry0 (RETURN ?f)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Sepref_Rules.hr_comp_is_pure",
     "is_pure ?A ==> is_pure (hr_comp ?A ?B)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Sepref_Rules.hrp_imp_reflI", "?RR = ?RR' ==> hrp_imp ?RR ?RR'",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Sepref_Rules.hr_comp_invalid",
     "hr_comp (invalid_assn ?R1.0) ?R2.0 =
      invalid_assn (hr_comp ?R1.0 ?R2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Sepref_Rules.hr_comp_pure", "hr_comp (pure ?R) ?S = pure (?R O ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sepref_Rules.hfprod_fst_snd",
     "fst (?A *\<^sub>a ?B) = fst ?A \<times>\<^sub>a fst ?B",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Sepref_Rules.to_hnr_prod_fst_snd",
     "fst (?A *\<^sub>a ?B) = to_hnr_prod (fst ?A) (fst ?B)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Sepref_Rules.hfprod_fst_snd",
     "snd (?A *\<^sub>a ?B) = snd ?A \<times>\<^sub>a snd ?B",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Sepref_Rules.to_hnr_prod_fst_snd",
     "snd (?A *\<^sub>a ?B) = to_hnr_prod (snd ?A) (snd ?B)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Sepref_Rules.fcomp_norm_simps",
     "CONSTRAINT is_pure ?P ==> pure (the_pure ?P) = ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Sepref_Rules.hr_comp_assoc",
     "hr_comp (hr_comp ?R ?S) ?T = hr_comp ?R (?S O ?T)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sepref_Rules.ensure_fref_nres_unfold",
     "(RETURN \<circ>\<circ> uncurry) ?f =
      uncurry (RETURN \<circ>\<circ> ?f)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Sepref_Rules.fref_param1",
     "?R \<rightarrow> ?S = ?R \<rightarrow>\<^sub>f ?S",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, t_empty), template_var 1),
         template_var 0))),
    ("Sepref_Rules.uncurry0_hfref_post",
     "[uncurry0 True]\<^sub>a ?R \<rightarrow> ?S =
      ?R \<rightarrow>\<^sub>a ?S",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, t_empty), template_var 1),
         template_var 0))),
    ("Sepref_Rules.auto_weaken_pre_to_imp_nf",
     "((?A & ?B) & ?C) = (?A & ?B & ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sepref_Rules.auto_weaken_pre_to_imp_nf",
     "(?A --> ?B --> ?C) = (?A & ?B --> ?C)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Sepref_Rules.norm_return_o",
     "(return o ?f) $ ?x = return $ (?f $ ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sepref_Rules.hrp_comp_dest",
     "hrp_comp (?A\<^sup>d) ?B = (hr_comp ?A ?B)\<^sup>d",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 2))),
    ("Sepref_Rules.hrp_comp_keep",
     "hrp_comp (?A\<^sup>k) ?B = (hr_comp ?A ?B)\<^sup>k",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 2))),
    ("Sepref_Rules.norm_RETURN_o",
     "(RETURN o ?f) $ ?x = RETURN $ (?f $ ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sepref_Rules.fcomp_prenorm_simps", "(?a, ?b) : ?r ==> ?a : Domain ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Sepref_Rules.uncurry_APP", "uncurry ?f $ (?a, ?b) = ?f $ ?a $ ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Sepref_Rules.hr_comp_precise",
     "[| precise ?R; single_valued ?S |] ==> precise (hr_comp ?R ?S)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Sepref_Rules.fcomp_norm_unfold",
     "\<langle>?A\<rangle>nres_rel O \<langle>?B\<rangle>nres_rel =
      \<langle>?A O ?B\<rangle>nres_rel",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sepref_Rules.hr_comp_the_pure",
     "is_pure ?A ==> the_pure (hr_comp ?A ?B) = the_pure ?A O ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Sepref_Rules.fref_triv",
     "?A <= Id ==> (?f, ?f) : [?P]\<^sub>f ?A \<rightarrow> Id",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2),
               template_hole 0))
           ))),
    ("Sepref_Rules.hfsynth_ID_R_D",
     "[| hfsynth_ID_R ?R ?a; intf_of_assn ?R ?I |] ==> ?a ::\<^sub>i ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Sepref_Rules.hrp_imp_trans",
     "[| hrp_imp ?A ?B; hrp_imp ?B ?C |] ==> hrp_imp ?A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Sepref_Rules.in_CURRY_conv",
     "((?f, ?g) : CURRY ?R) = ((uncurry ?f, uncurry ?g) : ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 0, template_var 1))),
         template_var 0))),
    ("Sepref_Rules.hfref_imp",
     "hrp_imp ?RR ?RR' ==>
      [?P]\<^sub>a ?RR \<rightarrow> ?S
      <= [?P]\<^sub>a ?RR' \<rightarrow> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Sepref_Rules.ensure_fref_nres_unfold",
     "(RETURN \<circ>\<circ>\<circ> uncurry) ?f =
      uncurry (RETURN \<circ>\<circ>\<circ> ?f)",
     template_equation (t_empty, template_app (template_hole 0, t_empty))),
    ("Sepref_Rules.PRE_D1",
     "?Q ?x & ?P ?x --> comp_PRE ?S1.0 ?Q (%x _. ?P x) ?S ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_var 4, template_var 3)),
               template_app (template_var 2, template_var 3))),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 4),
                 t_empty),
               template_var 0),
             template_var 3))
         )),
    ("Sepref_Rules.hr_comp_emp",
     "hr_comp (%a c. emp) ?R ?a ?c = \<up> (EX b. (b, ?a) : ?R)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 5, t_empty), template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 3, template_app (template_hole 2, t_empty)))),
    ("Sepref_Rules.hr_compI",
     "(?b, ?a) : ?R2.0 ==>
      ?R1.0 ?b ?c \<Longrightarrow>\<^sub>A hr_comp ?R1.0 ?R2.0 ?a ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_var 1, template_var 4),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 3),
               template_var 0))
           ))),
    ("Sepref_Rules.hr_comp_prod_conv",
     "hr_comp (?Ra \<times>\<^sub>a ?Rb) (?Ra' \<times>\<^sub>r ?Rb') =
      hr_comp ?Ra ?Ra' \<times>\<^sub>a hr_comp ?Rb ?Rb'",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Sepref_Rules.rdomp_hrcomp_conv",
     "rdomp (hr_comp ?A ?R) ?x = (EX y. rdomp ?A y & (y, ?x) : ?R)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Sepref_Rules.norm_return_o",
     "(return \<circ>\<circ> ?f) $ ?x $ ?y = return $ (?f $ ?x $ ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, t_empty), template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 3),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Sepref_Rules.prod_hrp_comp",
     "hrp_comp (?A *\<^sub>a ?B) (?C \<times>\<^sub>r ?D) =
      hrp_comp ?A ?C *\<^sub>a hrp_comp ?B ?D",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Sepref_Rules.norm_RETURN_o",
     "(RETURN \<circ>\<circ> ?f) $ ?x $ ?y = RETURN $ (?f $ ?x $ ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, t_empty), template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 3),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Sepref_Rules.hrp_comp_cong",
     "[| hrp_imp ?A ?A'; ?B = ?B' |]
      ==> hrp_imp (hrp_comp ?A ?B) (hrp_comp ?A' ?B')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_equation (template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Sepref_Rules.hrp_prod_cong",
     "[| hrp_imp ?A ?A'; hrp_imp ?B ?B' |]
      ==> hrp_imp (?A *\<^sub>a ?B) (?A' *\<^sub>a ?B')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Sepref_Rules.fref_param0I",
     "(?c, ?a) : ?R ==>
      (uncurry0 ?c, uncurry0 ?a) : unit_rel \<rightarrow>\<^sub>f ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 2)),
                 template_app (template_hole 3, template_var 1))),
             template_app
              (template_app
                (template_app (template_hole 2, t_empty), template_hole 0),
               template_var 0))
           ))),
    ("Sepref_Rules.fref_unit_conv",
     "((%_. ?c, %_. ?a) : [?P]\<^sub>f unit_rel \<rightarrow> ?S) =
      (?P () --> (?c, ?a) : ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app (template_app (template_hole 6, t_empty), t_empty)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 1),
             template_hole 4),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_var 1, template_hole 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 0)))),
    ("Sepref_Rules.fcomp_norm_dflt_init",
     "[| ?x : [?P]\<^sub>a ?R \<rightarrow> ?T; hrp_imp ?R ?S |]
      ==> ?x : [?P]\<^sub>a ?S \<rightarrow> ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0),
               template_var 1))
           ))),
    ("Sepref_Rules.fref_ncI",
     "(?f, ?g) : ?R \<rightarrow> ?S ==>
      (?f, ?g) : ?R \<rightarrow>\<^sub>f ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 1, t_empty), template_var 1),
               template_var 0))
           ))),
    ("Sepref_Rules.fref_ncD",
     "(?f, ?g) : ?R \<rightarrow>\<^sub>f ?S ==>
      (?f, ?g) : ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 4, t_empty), template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1)),
               template_var 0))
           ))),
    ("Sepref_Rules.fcomp_norm_unfold",
     "(?A \<times>\<^sub>r ?B) O (?C \<times>\<^sub>r ?D) =
      ?A O ?C \<times>\<^sub>r ?B O ?D",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_var 3)),
             template_var 2)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Sepref_Rules.norm_return_o",
     "(return \<circ>\<circ>\<circ> ?f) $ ?x $ ?y $ ?z =
      return $ (?f $ ?x $ ?y $ ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, t_empty), template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_hole 4),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 1)),
           template_var 0)))),
    ("Sepref_Rules.norm_RETURN_o",
     "(RETURN \<circ>\<circ>\<circ> ?f) $ ?x $ ?y $ ?z =
      RETURN $ (?f $ ?x $ ?y $ ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, t_empty), template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_hole 4),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 1)),
           template_var 0)))),
    ("Sepref_Rules.PRE_D2",
     "?Q ?x & (ALL y. (y, ?x) : ?S1.0 --> ?S ?x --> ?P ?x y) -->
      comp_PRE ?S1.0 ?Q ?P ?S ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_var 4, template_var 3)),
               template_app (template_hole 3, t_empty))),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 4),
                 template_var 0),
               template_var 1),
             template_var 3))
         )),
    ("Sepref_Rules.ensure_fref_nresI",
     "(?f, ?g) : [?P]\<^sub>f ?R \<rightarrow> ?S ==>
      (RETURN o ?f, RETURN o ?g)
      : [?P]\<^sub>f ?R \<rightarrow> \<langle>?S\<rangle>nres_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 4)),
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_var 3))),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("Sepref_Rules.hfref_weaken_pre_nofail",
     "(?f, ?g) : [?P]\<^sub>a ?R \<rightarrow> ?S ==>
      (?f, ?g) : [%x. nofail (?g x) --> ?P x]\<^sub>a ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 2, t_empty), template_var 1),
               template_var 0))
           ))),
    ("Sepref_Rules.hn_rel_compI",
     "[| nofail ?a; (?b, ?a) : \<langle>?R2.0\<rangle>nres_rel |]
      ==> hn_rel ?R1.0 ?b ?c \<Longrightarrow>\<^sub>A
          hn_rel (hr_comp ?R1.0 ?R2.0) ?a ?c",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 4)),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 3),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 2)),
                 template_var 4),
               template_var 0))
           ))),
    ("Sepref_Rules.rel2p_fref",
     "rel2p ([?P]\<^sub>f ?R \<rightarrow> ?S) =
      (%f g. ALL x y. ?P y --> rel2p ?R x y --> rel2p ?S (f x) (g y))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       t_empty)),
    ("Sepref_Rules.hfref_PRE_D3",
     "(?f, ?h) : [comp_PRE ?S1.0 ?Q ?P ?X]\<^sub>a ?R \<rightarrow> ?S ==>
      (?f, ?h) : [comp_PRE ?S1.0 ?Q ?P ?X]\<^sub>a ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 0, template_var 5),
                          template_var 4),
                        template_var 3),
                      template_var 2)),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 7),
                 template_var 6)),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2)),
                 template_var 1),
               template_var 0))
           ))),
    ("Sepref_Rules.fref_weaken_pre",
     "[| !!x. ?P x --> ?P' x;
         (?f, ?h) : [?P']\<^sub>f ?R \<rightarrow> ?S |]
      ==> (?f, ?h) : [?P]\<^sub>f ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1),
               template_var 0))
           ))),
    ("Sepref_Rules.hfref_weaken_pre",
     "[| !!x. ?P x --> ?P' x;
         (?f, ?h) : [?P']\<^sub>a ?R \<rightarrow> ?S |]
      ==> (?f, ?h) : [?P]\<^sub>a ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1),
               template_var 0))
           ))),
    ("Sepref_Rules.hfrefD",
     "[| (?f, ?g) : [?P]\<^sub>a ?RS \<rightarrow> ?T; ?P ?a |]
      ==> hn_refine (fst ?RS ?a ?c) (?f ?c) (snd ?RS ?a ?c) ?T (?g ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2))
            ),
        template_predicate (template_app (template_var 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_app (template_hole 1, template_var 3),
                         template_var 1),
                       template_var 0)),
                   template_app (template_var 6, template_var 0)),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1),
                   template_var 0)),
               template_var 2),
             template_app (template_var 5, template_var 1))
           ))),
    ("Sepref_Rules.auto_weaken_pre_init_f",
     "[| !!x. PROTECT ?P x --> ?P' x;
         (?f, ?h) : [?P']\<^sub>f ?R \<rightarrow> ?S |]
      ==> (?f, ?h) : [?P]\<^sub>f ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1),
               template_var 0))
           ))),
    ("Sepref_Rules.auto_weaken_pre_init_hf",
     "[| !!x. PROTECT ?P x --> ?P' x;
         (?f, ?h) : [?P']\<^sub>a ?R \<rightarrow> ?S |]
      ==> (?f, ?h) : [?P]\<^sub>a ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 1),
               template_var 0))
           ))),
    ("Sepref_Rules.frefD",
     "[| (?f, ?g) : [?P]\<^sub>f ?R \<rightarrow> ?S; ?P ?y;
         (?x, ?y) : ?R |]
      ==> (?f ?x, ?g ?y) : ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2))
            ),
        template_predicate (template_app (template_var 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_var 1)),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_var 6, template_var 0)),
                 template_app (template_var 5, template_var 1))),
             template_var 2)
           ))),
    ("Sepref_Rules.norm_return_o",
     "(%x. return \<circ>\<circ>\<circ> ?f x) $ ?x $ ?y $ ?z $ ?a =
      return $ (?f $ ?x $ ?y $ ?z $ ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, t_empty),
                     template_var 3)),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 4, template_hole 5),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 3)),
                   template_var 2)),
               template_var 1)),
           template_var 0)))),
    ("Sepref_Rules.norm_RETURN_o",
     "(%x. RETURN \<circ>\<circ>\<circ> ?f x) $ ?x $ ?y $ ?z $ ?a =
      RETURN $ (?f $ ?x $ ?y $ ?z $ ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, t_empty),
                     template_var 3)),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 4, template_hole 5),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 3)),
                   template_var 2)),
               template_var 1)),
           template_var 0)))),
    ("Sepref_Rules.fref_mono",
     "[| !!x. ?P' x ==> ?P x; ?R' <= ?R; ?S <= ?S' |]
      ==> [?P]\<^sub>f ?R \<rightarrow> ?S
          <= [?P']\<^sub>f ?R' \<rightarrow> ?S'",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 5),
             template_var 3),
           template_var 0)))),
    ("Sepref_Rules.uc_hfprod_sel",
     "fst (?A *\<^sub>a ?B) ?a ?c =
      (case (?a, ?c) of ((a1, a2), c1, c2) => fst ?A a1 c1 * fst ?B a2 c2)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sepref_Rules.uc_hfprod_sel",
     "snd (?A *\<^sub>a ?B) ?a ?c =
      (case (?a, ?c) of ((a1, a2), c1, c2) => snd ?A a1 c1 * snd ?B a2 c2)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Sepref_Rules.fref_PRE_D1",
     "(?f, ?h)
      : [comp_PRE ?S1.0 ?Q (%x _. ?P x) ?X]\<^sub>f ?R \<rightarrow> ?S ==>
      (?f, ?h) : [%x. ?Q x & ?P x]\<^sub>f ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 1, template_var 5),
                          template_var 4),
                        t_empty),
                      template_var 2)),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 7),
                 template_var 6)),
             template_app
              (template_app
                (template_app (template_hole 2, t_empty), template_var 1),
               template_var 0))
           ))),
    ("Sepref_Rules.hfref_PRE_D1",
     "(?f, ?h)
      : [comp_PRE ?S1.0 ?Q (%x _. ?P x) ?X]\<^sub>a ?R \<rightarrow> ?S ==>
      (?f, ?h) : [%x. ?Q x & ?P x]\<^sub>a ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 1, template_var 5),
                          template_var 4),
                        t_empty),
                      template_var 2)),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 7),
                 template_var 6)),
             template_app
              (template_app
                (template_app (template_hole 2, t_empty), template_var 1),
               template_var 0))
           ))),
    ("Sepref_Rules.fref_compI",
     "([?P]\<^sub>f ?R1.0 \<rightarrow> ?R2.0) O
      ([?Q]\<^sub>f ?S1.0 \<rightarrow> ?S2.0)
      <= [%x. ?Q x &
              (ALL y.
                  (y, x) : ?S1.0 -->
                  ?P y)]\<^sub>f ?R1.0 O ?S1.0 \<rightarrow> ?R2.0 O ?S2.0",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_app (template_hole 9, template_var 5),
               template_var 4),
             template_var 3)),
         template_app
          (template_app
            (template_app (template_hole 8, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Sepref_Rules.hfref_to_ASSERT_conv",
     "NO_MATCH (%_. True) ?P ==>
      ((?a, ?b) : [?P]\<^sub>a ?R \<rightarrow> ?S) =
      ((?a, %x. ASSERT (?P x) >>= (%_. ?b x))
       : ?R \<rightarrow>\<^sub>a ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty), template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 4),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3), t_empty)),
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_var 1),
             template_var 0))))),
    ("Sepref_Rules.hfrefI",
     "(!!c a.
          ?P a ==>
          hn_refine (fst ?RS a c) (?f c) (snd ?RS a c) ?T (?g a)) ==>
      (?f, ?g) : [?P]\<^sub>a ?RS \<rightarrow> ?T",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 1))
           ))),
    ("Sepref_Rules.frefI",
     "(!!x y. [| ?P y; (x, y) : ?R |] ==> (?f x, ?g y) : ?S) ==>
      (?f, ?g) : [?P]\<^sub>f ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 0))
           ))),
    ("Sepref_Rules.hfref_weaken_pre_nofail'",
     "[| (?f, ?g) : [?P]\<^sub>a ?R \<rightarrow> ?S;
         !!x. [| nofail (?g x); ?Q x |] ==> ?P x |]
      ==> (?f, ?g) : [?Q]\<^sub>a ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 4)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Sepref_Rules.hfref_weaken_pre'",
     "[| !!x. [| ?P x; rdomp (fst ?R) x |] ==> ?P' x;
         (?f, ?h) : [?P']\<^sub>a ?R \<rightarrow> ?S |]
      ==> (?f, ?h) : [?P]\<^sub>a ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 4),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4),
               template_var 0))
           ))),
    ("Sepref_Rules.norm_return_o",
     "(%x y. return \<circ>\<circ>\<circ> ?f x y) $ ?x $ ?y $ ?z $ ?a $ ?b =
      return $ (?f $ ?x $ ?y $ ?z $ ?a $ ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, t_empty),
                         template_var 4)),
                     template_var 3)),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 5, template_hole 6),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_var 4)),
                       template_var 3)),
                   template_var 2)),
               template_var 1)),
           template_var 0)))),
    ("Sepref_Rules.norm_RETURN_o",
     "(%x y. RETURN \<circ>\<circ>\<circ> ?f x y) $ ?x $ ?y $ ?z $ ?a $ ?b =
      RETURN $ (?f $ ?x $ ?y $ ?z $ ?a $ ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, t_empty),
                         template_var 4)),
                     template_var 3)),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 5, template_hole 6),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 5),
                           template_var 4)),
                       template_var 3)),
                   template_var 2)),
               template_var 1)),
           template_var 0)))),
    ("Sepref_Rules.auto_weaken_pre_comp_PRE_I",
     "[| ?S ?x ==> ?P ?x;
         !!y. [| (y, ?x) : ?R; ?P ?x; ?S ?x |] ==> ?Q ?x y |]
      ==> comp_PRE ?R ?P ?Q ?S ?x",
     template_implication
      ([template_implication
         ([template_predicate
            (template_app (template_var 4, template_var 3))],
          template_predicate
           (template_app (template_var 2, template_var 3))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2),
                 template_var 0),
               template_var 4),
             template_var 3)
           ))),
    ("Sepref_Rules.fref_cons'",
     "[| (?f, ?g) : [?P]\<^sub>f ?R \<rightarrow> ?S;
         !!c a. [| (c, a) : ?R; ?Q a |] ==> ?P a |]
      ==> (?f, ?g) : [?Q]\<^sub>f ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 5),
                 template_var 4)),
             template_app
              (template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Sepref_Rules.fref_compI_PRE",
     "[| (?f, ?g) : [?P]\<^sub>f ?R1.0 \<rightarrow> ?R2.0;
         (?g, ?h) : [?Q]\<^sub>f ?S1.0 \<rightarrow> ?S2.0 |]
      ==> (?f, ?h)
          : [comp_PRE ?S1.0 ?Q (%_. ?P)
              (%_. True)]\<^sub>f ?R1.0 O
                                  ?S1.0 \<rightarrow> ?R2.0 O ?S2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 8),
                  template_var 7)),
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 6),
                  template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 7),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 8),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 2),
                       t_empty),
                     t_empty)),
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)))
           ))),
    ("Sepref_Rules.hf2hnr",
     "(?f, ?g) : [?P]\<^sub>a ?R \<rightarrow> ?S ==>
      ALL x xi.
         ?P x -->
         hn_refine (emp * hn_ctxt (fst ?R) x xi) (?f $ xi)
          (emp * hn_ctxt (snd ?R) x xi) ?S (?g $ x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Sepref_Rules.fref_PRE_D2",
     "(?f, ?h) : [comp_PRE ?S1.0 ?Q ?P ?X]\<^sub>f ?R \<rightarrow> ?S ==>
      (?f, ?h)
      : [%x. ?Q x &
             (ALL y.
                 (y, x) : ?S1.0 -->
                 ?X x --> ?P x y)]\<^sub>f ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 5, template_var 5),
                          template_var 4),
                        template_var 3),
                      template_var 2)),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 7),
                 template_var 6)),
             template_app
              (template_app
                (template_app (template_hole 6, t_empty), template_var 1),
               template_var 0))
           ))),
    ("Sepref_Rules.hfref_PRE_D2",
     "(?f, ?h) : [comp_PRE ?S1.0 ?Q ?P ?X]\<^sub>a ?R \<rightarrow> ?S ==>
      (?f, ?h)
      : [%x. ?Q x &
             (ALL y.
                 (y, x) : ?S1.0 -->
                 ?X x --> ?P x y)]\<^sub>a ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 5, template_var 5),
                          template_var 4),
                        template_var 3),
                      template_var 2)),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 7),
                 template_var 6)),
             template_app
              (template_app
                (template_app (template_hole 6, t_empty), template_var 1),
               template_var 0))
           ))),
    ("Sepref_Rules.hfref_compI_PRE_aux",
     "[| (?f, ?g) : [?P]\<^sub>a ?RR' \<rightarrow> ?S;
         (?g, ?h)
         : [?Q]\<^sub>f ?T \<rightarrow> \<langle>?U\<rangle>nres_rel |]
      ==> (?f, ?h)
          : [comp_PRE ?T ?Q (%_. ?P)
              (%_. True)]\<^sub>a hrp_comp ?RR'
                                   ?T \<rightarrow> hr_comp ?S ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 8),
                  template_var 7)),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 6),
                  template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 7),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1),
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 8),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 2),
                       t_empty),
                     t_empty)),
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)))
           ))),
    ("Sepref_Rules.hnr_intro_dummy",
     "ALL x xi.
         ?P x -->
         hn_refine (?\<Gamma> x xi) (?c xi) (?\<Gamma>' x xi) ?R (?a x) ==>
      ALL x xi.
         ?P x -->
         hn_refine (emp * ?\<Gamma> x xi) (?c xi) (emp * ?\<Gamma>' x xi) ?R
          (?a x)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Sepref_Rules.hfsynth_hnr_from_hfI",
     "ALL x xi.
         ?P x & hfsynth_ID_R (fst ?R) x -->
         hn_refine (emp * hn_ctxt (fst ?R) x xi) (?f $ xi)
          (emp * hn_ctxt (snd ?R) x xi) ?S (?g $ x) ==>
      (?f, ?g) : [?P]\<^sub>a ?R \<rightarrow> ?S",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 1))
           ))),
    ("Sepref_Rules.hfref_compI_PRE",
     "[| (?f, ?g) : [?P]\<^sub>a ?RR' \<rightarrow> ?S;
         (?g, ?h)
         : [?Q]\<^sub>f ?T \<rightarrow> \<langle>?U\<rangle>nres_rel |]
      ==> (?f, ?h)
          : [comp_PRE ?T ?Q (%x. ?P)
              (%x. nofail
                    (?h x))]\<^sub>a hrp_comp ?RR'
?T \<rightarrow> hr_comp ?S ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 8),
                  template_var 7)),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 6),
                  template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 7),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1),
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 8),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 2),
                       t_empty),
                     t_empty)),
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)))
           ))),
    ("Sepref_Rules.fref_compI'",
     "[| (?f, ?g) : [?P]\<^sub>f ?R1.0 \<rightarrow> ?R2.0;
         (?g, ?h) : [?Q]\<^sub>f ?S1.0 \<rightarrow> ?S2.0 |]
      ==> (?f, ?h)
          : [%x. ?Q x &
                 (ALL y.
                     (y, x) : ?S1.0 -->
                     ?P y)]\<^sub>f ?R1.0 O
                                    ?S1.0 \<rightarrow> ?R2.0 O ?S2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 8),
                  template_var 7)),
              template_app
               (template_app
                 (template_app (template_hole 13, template_var 6),
                  template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 7),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 8),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 7, t_empty),
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)))
           ))),
    ("Sepref_Rules.hfcomp",
     "[| (?f, ?g) : [?P]\<^sub>a ?RR' \<rightarrow> ?S;
         (?g, ?h)
         : [?Q]\<^sub>f ?T \<rightarrow> \<langle>?U\<rangle>nres_rel |]
      ==> (?f, ?h)
          : [%a. ?Q a &
                 (ALL a'.
                     (a', a) : ?T -->
                     ?P a')]\<^sub>a hrp_comp ?RR'
?T \<rightarrow> hr_comp ?S ?U",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 8),
                  template_var 7)),
              template_app
               (template_app
                 (template_app (template_hole 15, template_var 6),
                  template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 7),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 1),
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 8),
                 template_var 3)),
             template_app
              (template_app
                (template_app (template_hole 7, t_empty),
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)))
           ))),
    ("Sepref_Rules.fref_cons",
     "[| (?f, ?g) : [?P]\<^sub>f ?R \<rightarrow> ?S;
         !!c a. [| (c, a) : ?R'; ?Q a |] ==> ?P a; ?R' <= ?R; ?S <= ?S' |]
      ==> (?f, ?g) : [?Q]\<^sub>f ?R' \<rightarrow> ?S'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation (less_equals, template_var 2, template_var 4),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 7),
                 template_var 6)),
             template_app
              (template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 2),
               template_var 0))
           ))),
    ("Sepref_Rules.fref_to_pure_hfref'",
     "[| (?f, ?g)
         : [?P]\<^sub>f ?R \<rightarrow> \<langle>?S\<rangle>nres_rel;
         !!x. x : Domain ?R Int ?R^-1 `` Collect ?P ==>
              ?f x = RETURN (?f' x) |]
      ==> (return o ?f', ?g)
          : [?P]\<^sub>a (pure ?R)\<^sup>k \<rightarrow> pure ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_var 5),
                  template_var 4)),
              template_app
               (template_app
                 (template_app (template_hole 20, template_var 3),
                  template_var 2),
                template_app
                 (template_app (template_hole 19, template_hole 18),
                  template_var 1)))
            ),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 5),
                     template_var 0)),
                 template_var 4)),
             template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 2)),
                   template_hole 1)),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Sepref_Rules.fref_uncurry_conv",
     "((uncurry ?c, uncurry ?a)
       : [?P]\<^sub>f ?R1.0 \<times>\<^sub>r ?R2.0 \<rightarrow> ?S) =
      (ALL x1 y1 x2 y2.
          ?P (y1, y2) -->
          (x1, y1) : ?R1.0 -->
          (x2, y2) : ?R2.0 --> (?c x1 x2, ?a y1 y2) : ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 19,
           template_app
            (template_app
              (template_hole 18,
               template_app (template_hole 17, template_var 5)),
             template_app (template_hole 16, template_var 4))),
         template_app
          (template_app
            (template_app (template_hole 15, template_var 3),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_hole 12),
                   template_var 2)),
               template_var 1)),
           template_var 0)),
       template_app (template_hole 11, t_empty))),
    ("Sepref_Rules.hfref_cons",
     "[| (?f, ?g) : [?P]\<^sub>a ?R \<rightarrow> ?S; !!x. ?P' x ==> ?P x;
         !!x y. fst ?R' x y \<Longrightarrow>\<^sub>t fst ?R x y;
         !!x y. snd ?R x y \<Longrightarrow>\<^sub>t snd ?R' x y;
         !!x y. ?S x y \<Longrightarrow>\<^sub>t ?S' x y |]
      ==> (?f, ?g) : [?P']\<^sub>a ?R' \<rightarrow> ?S'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 7),
                 template_var 6)),
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Sepref_Rules.hnr_uncurry_unfold",
     "(ALL x xi.
          ?P x -->
          hn_refine (?\<Gamma> * hn_ctxt (to_hnr_prod ?A ?B) x xi) (?fi xi)
           (?\<Gamma>' * hn_ctxt (to_hnr_prod ?A' ?B') x xi) ?R (?f x)) =
      (ALL b bi a ai.
          ?P (a, b) -->
          hn_refine (?\<Gamma> * hn_ctxt ?B b bi * hn_ctxt ?A a ai)
           (?fi (ai, bi)) (?\<Gamma>' * hn_ctxt ?B' b bi * hn_ctxt ?A' a ai)
           ?R (?f (a, b)))",
     template_equation
      (template_app (template_hole 14, t_empty),
       template_app (template_hole 7, t_empty))),
    ("Sepref_Rules.fref_composeI",
     "[| (?f, ?g) : [?P]\<^sub>f ?R1.0 \<rightarrow> ?R2.0;
         (?g, ?h) : [?Q]\<^sub>f ?S1.0 \<rightarrow> ?S2.0;
         !!x. ?P' x ==> ?Q x; !!x y. [| ?P' x; (y, x) : ?S1.0 |] ==> ?P y;
         ?R' <= ?R1.0 O ?S1.0; ?R2.0 O ?S2.0 <= ?S'; ?f' = ?f; ?h' = ?h |]
      ==> (?f', ?h') : [?P']\<^sub>f ?R' \<rightarrow> ?S'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app (template_hole 17, template_var 13),
                  template_var 12)),
              template_app
               (template_app
                 (template_app (template_hole 16, template_var 11),
                  template_var 10),
                template_var 9))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 12),
                  template_var 8)),
              template_app
               (template_app
                 (template_app (template_hole 13, template_var 7),
                  template_var 6),
                template_var 5))
            ),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 7, template_var 10),
            template_var 6)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 9), template_var 5),
          template_var 2),
        template_equation (template_var 1, template_var 13),
        template_equation (template_var 0, template_var 8)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2))
           ))),
    ("Sepref_Rules.hnr_comp1_aux",
     "[| !!b1 c1.
            ?P b1 ==>
            hn_refine (hn_ctxt ?R1.0 b1 c1) (?c c1) (hn_ctxt ?R1p b1 c1) ?R
             (?b $ b1);
         !!a1 b1.
            [| ?Q a1; (b1, a1) : ?R1' |]
            ==> (?b $ b1, ?a $ a1) : \<langle>?R'\<rangle>nres_rel;
         !!a1 b1. [| ?Q a1; (b1, a1) : ?R1' |] ==> ?P b1; ?Q ?a1.0 |]
      ==> hn_refine (hr_comp ?R1.0 ?R1' ?a1.0 ?c1.0) (?c ?c1.0)
           (hr_comp ?R1p ?R1' ?a1.0 ?c1.0) (hr_comp ?R ?R') (?a ?a1.0)",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_var 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 10),
                           template_var 4),
                         template_var 1),
                       template_var 0)),
                   template_app (template_var 9, template_var 0)),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 4),
                     template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 7),
                 template_var 2)),
             template_app (template_var 3, template_var 1))
           ))),
    ("Sepref_Rules.hnr_comp",
     "[| !!b1 c1.
            ?P b1 ==>
            hn_refine (?R1.0 b1 c1 * ?\<Gamma>) (?c c1)
             (?R1p b1 c1 * ?\<Gamma>') ?R (?b b1);
         !!a1 b1.
            [| ?Q a1; (b1, a1) : ?R1' |]
            ==> (?b b1, ?a a1) : \<langle>?R'\<rangle>nres_rel;
         !!a1 b1. [| ?Q a1; (b1, a1) : ?R1' |] ==> ?P b1; ?Q ?a1.0 |]
      ==> hn_refine (hr_comp ?R1.0 ?R1' ?a1.0 ?c1.0 * ?\<Gamma>) (?c ?c1.0)
           (hr_comp ?R1p ?R1' ?a1.0 ?c1.0 * ?\<Gamma>') (hr_comp ?R ?R')
           (?a ?a1.0)",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_var 5, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_hole 1, template_var 12),
                               template_var 4),
                             template_var 1),
                           template_var 0)),
                       template_var 11)),
                   template_app (template_var 10, template_var 0)),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 9),
                           template_var 4),
                         template_var 1),
                       template_var 0)),
                   template_var 8)),
               template_app
                (template_app (template_hole 0, template_var 7),
                 template_var 2)),
             template_app (template_var 3, template_var 1))
           )))]:
   (string * thm * template) list
### theory "Draft.Sepref_RulesTemplates"
### 0.628s elapsed time, 0.782s cpu time, 0.063s GC time
val it = (): unit
