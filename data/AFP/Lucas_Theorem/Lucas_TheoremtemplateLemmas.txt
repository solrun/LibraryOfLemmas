   [("Lucas_Theorem.fps_equiv", "equiv UNIV (fpsmodrel ?p)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Lucas_Theorem.binomial_coeffs_induct",
     "(1 + fps_X) ^ ?n $ ?k = of_nat (?n choose ?k)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_hole 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Lucas_Theorem.fps_mult_equiv",
     "(?f, ?g) : fpsmodrel ?p ==> (?f * ?h, ?g * ?h) : fpsmodrel ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Lucas_Theorem.fps_power_equiv",
     "(?f, ?g) : fpsmodrel ?p ==> (?f ^ ?x, ?g ^ ?x) : fpsmodrel ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Lucas_Theorem.fps_freshmans_dream",
     "prime ?p ==> ((1 + fps_X) ^ ?p, 1 + fps_X ^ ?p) : fpsmodrel (int ?p)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 4, template_hole 3),
                         template_hole 2)),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 5, template_hole 2),
                     template_var 0)))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Lucas_Theorem.fpsrel_iff",
     "((?f, ?g) : fpsmodrel ?p) = (ALL n. ?f $ n mod ?p = ?g $ n mod ?p)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("Lucas_Theorem.fps_binomial_p_compose",
     "?p ~= 0 ==> (1 + fps_X ^ ?p) ^ ?n = (1 + fps_X) ^ ?n oo fps_X ^ ?p",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 4, template_hole 1),
                 template_var 1))),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_hole 1)),
               template_var 0)),
           template_app
            (template_app (template_hole 4, template_hole 1),
             template_var 1))))),
    ("Lucas_Theorem.fps_mult_equiv_coeff",
     "(?f, ?g) : fpsmodrel ?p ==>
      (?f * ?h) $ ?n mod ?p = (?g * ?h) $ ?n mod ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3)),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1)),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_var 0)),
           template_var 2)))),
    ("Lucas_Theorem.fps_X_pow_binomial_coeffs",
     "prime ?p ==>
      (1 + fps_X ^ ?p) ^ ?N $ ?k =
      int (if ?p dvd ?k then ?N choose ?k div ?p else 0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app (template_hole 9, template_hole 6),
                     template_var 2))),
               template_var 1)),
           template_var 0),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))),
             template_hole 0))))),
    ("Lucas_Theorem.lucas_corollary",
     "prime ?p ==>
      (?n choose ?k) mod ?p =
      (?n div ?p choose ?k div ?p) * (?n mod ?p choose ?k mod ?p) mod ?p",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 2)))),
           template_var 2)))),
    ("Lucas_Theorem.fps_middle_coeffs",
     "[| prime ?p; ?n ~= 0 & ?n ~= ?p |]
      ==> (1 + fps_X) ^ ?p $ ?n mod int ?p = int (0 mod ?p)",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 0),
                    template_hole 9))),
              template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 0),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_hole 2)),
                   template_var 1)),
               template_var 0)),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 9),
             template_var 1))))),
    ("Lucas_Theorem.pn_choose_k_modp_0",
     "[| prime ?p; 1 <= ?k & ?k <= ?p ^ ?n - 1; 0 < ?n |]
      ==> (?p ^ ?n choose ?k) mod ?p = 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 1)),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_var 0)),
                  template_hole 7)))
            ),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 0)),
               template_var 1)),
           template_var 2),
         template_hole 3))),
    ("Lucas_Theorem.fps_div_rep_coeffs",
     "prime ?p ==>
      ((1 + fps_X ^ ?p) ^ (?n div ?p) * (1 + fps_X) ^ (?n mod ?p)) $ ?k =
      int ((?n div ?p choose ?k div ?p) * (?n mod ?p choose ?k mod ?p))",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_app
                        (template_app (template_hole 8, template_hole 5),
                         template_var 2))),
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_hole 5)),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 2)))),
           template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 2)),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 2))))))),
    ("Lucas_Theorem.lucas_theorem",
     "[| ?n < ?p ^ Suc ?d; ?k < ?p ^ Suc ?d; prime ?p |]
      ==> (?n choose ?k) mod ?p =
          (PROD i<=?d.
           nth_digit_general ?n i ?p choose nth_digit_general ?k i ?p) mod
          ?p",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app (template_hole 7, template_var 1))),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 8, template_var 2),
            template_app (template_hole 7, template_var 1))),
        template_predicate
         (template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 2, t_empty),
               template_app (template_hole 0, template_var 1))),
           template_var 2))))]
