Loading theory "Draft.Fekete" (required by "Draft.FeketeTemplates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.FeketeTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "Draft.Templates" (required by "Draft.FeketeTemplates" via "Draft.ExtrEqs")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.075s elapsed time, 0.256s cpu time, 0.000s GC time
### theory "HOL-Library.Function_Algebras"
### 0.108s elapsed time, 0.319s cpu time, 0.000s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.FeketeTemplates" via "Draft.ExtrEqs")
### theory "Draft.Fekete"
### 0.202s elapsed time, 0.517s cpu time, 0.054s GC time
### theory "HOL-Library.BigO"
### 0.640s elapsed time, 0.768s cpu time, 0.070s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.FeketeTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.467s elapsed time, 0.468s cpu time, 0.000s GC time
Loading theory "Draft.FeketeTemplates"
val templateLemmas =
   [("Fekete.spectral_radius_nonneg", "0 <= spectral_radius ?x",
     template_inequation
      (less_equals, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Fekete.subadditive_imp_eventually_subadditive",
     "subadditive ?u ==> eventually_subadditive ?u 0",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("Fekete.spectral_radius_upper_bound",
     "spectral_radius ?x ^ ?n <= norm (?x ^ ?n)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Fekete.subadditive_of_superadditive",
     "superadditive ?u ==> subadditive (%n. - ?u n)",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Fekete.spectral_radius_limit",
     "(%n. root n (norm (?x ^ n)))
      \<longlonglongrightarrow> spectral_radius ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 6, t_empty),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0))),
           template_hole 0)
         )),
    ("Fekete.subadditiveD",
     "subadditive ?u ==> ?u (?m + ?n) <= ?u ?m + ?u ?n",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_var 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0))))),
    ("Fekete.spectral_radius_aux",
     "bdd_below {root n (norm (?x ^ n)) |n. 0 < n}",
     template_predicate
      (
         template_app
          (template_hole 9, template_app (template_hole 8, t_empty))
         )),
    ("Fekete.subadditive_un_le_nu1",
     "[| subadditive ?u; 0 < ?n |] ==> ?u ?n <= real ?n * ?u 1",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_inequation
        (less_equals, template_app (template_var 1, template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_var 1, template_hole 0))))),
    ("Fekete.superadditive_un_ge_nu1",
     "[| superadditive ?u; 0 < ?n |] ==> real ?n * ?u 1 <= ?u ?n",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_var 1, template_hole 0)),
         template_app (template_var 1, template_var 0)))),
    ("Fekete.subadditiveI",
     "(!!m n. ?u (m + n) <= ?u m + ?u n) ==> subadditive ?u",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Fekete.spectral_radius_aux",
     "{root n (norm (?x ^ n)) |n. 0 < n} ~= {}",
     template_negation
      (
         template_equation
          (template_app (template_hole 9, t_empty), template_hole 0)
         )),
    ("Fekete.spectral_radius_aux",
     "0 <= Inf {root n (norm (?x ^ n)) |n. 0 < n}",
     template_inequation
      (less_equals, template_hole 10,
       template_app
        (template_hole 9, template_app (template_hole 8, t_empty)))),
    ("Fekete.spectral_radius_aux",
     "?t : {root n (norm (?x ^ n)) |n. 0 < n} ==> 0 <= ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, t_empty))
            )],
       template_inequation (less_equals, template_hole 0, template_var 1))),
    ("Fekete.spectral_radius_aux",
     "?t : {root n (norm (?x ^ n)) |n. 0 < n} ==> spectral_radius ?x <= ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app (template_hole 10, t_empty))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("Fekete.almost_additive_converges",
     "(!!m n. \<bar>?u (m + n) - ?u m - ?u n\<bar> <= ?C) ==>
      convergent (%n. ?u n / real n)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Fekete.eventually_subadditiveI",
     "(!!m n. [| ?N0.0 < m; ?N0.0 < n |] ==> ?u (m + n) <= ?u m + ?u n) ==>
      eventually_subadditive ?u ?N0.0",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Fekete.subadditive_converges_ereal",
     "subadditive ?u ==>
      (%m. ereal (?u m / real m))
      \<longlonglongrightarrow> Inf {ereal (?u n / real n) |n. 0 < n}",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, t_empty),
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, t_empty)))),
             template_hole 0)
           ))),
    ("Fekete.subadditive_converges_ereal'",
     "eventually_subadditive ?u ?N0.0 ==>
      (%m. ereal (?u m / real m))
      \<longlonglongrightarrow> Inf {ereal (?u n / real n) |n. ?N0.0 < n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 11, t_empty),
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, t_empty)))),
             template_hole 0)
           ))),
    ("Fekete.subadditive_converges_unbounded",
     "[| subadditive ?u; ~ bdd_below {?u n / real n |n. 0 < n} |]
      ==> (%n. ereal (?u n / real n))
          \<longlonglongrightarrow> - \<infinity>",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 14,
                  template_app (template_hole 13, t_empty))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_hole 0)
           ))),
    ("Fekete.almost_additive_converges",
     "(!!m n. \<bar>?u (m + n) - ?u m - ?u n\<bar> <= ?C) ==>
      \<bar>?u ?k - real ?k * lim (%n. ?u n / real n)\<bar> <= ?C",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app (template_var 2, template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 t_empty)))),
         template_var 1))),
    ("Fekete.subadditive_converges_unbounded'",
     "[| eventually_subadditive ?u ?N0.0;
         ~ bdd_below {?u n / real n |n. ?N0.0 < n} |]
      ==> (%n. ereal (?u n / real n))
          \<longlonglongrightarrow> - \<infinity>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 13,
                  template_app (template_hole 12, t_empty))
                )
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_hole 0)
           ))),
    ("Fekete.eventually_subadditive_ineq",
     "[| eventually_subadditive ?u ?N0.0; 0 < ?e; ?N0.0 < ?n |]
      ==> EX N>?N0.0. ALL m>=N. ?u m / real m < ?u ?n / real ?n + ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_hole 9, template_var 1),
        template_inequation (less_than, template_var 2, template_var 0)],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Fekete.subadditive_converges_bounded''",
     "[| subadditive ?u; !!n. 0 < n ==> real n * ?a <= ?u n |]
      ==> EX l. (%n. ?u n / real n) \<longlonglongrightarrow> l &
                (ALL n>0. real n * l <= ?u n)",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Fekete.superadditive_converges_bounded''",
     "[| superadditive ?u; !!n. 0 < n ==> ?u n <= real n * ?a |]
      ==> EX l. (%n. ?u n / real n) \<longlonglongrightarrow> l &
                (ALL n>0. ?u n <= real n * l)",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Fekete.subadditive_converges_bounded",
     "[| subadditive ?u; bdd_below {?u n / real n |n. 0 < n} |]
      ==> (%n. ?u n / real n)
          \<longlonglongrightarrow> Inf {?u n / real n |n. 0 < n}",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 12, template_app (template_hole 11, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 11, t_empty)))),
             template_hole 0)
           ))),
    ("Fekete.submultiplicative_converges",
     "[| !!n. 0 <= ?u n; !!m n. ?u (m + n) <= ?u m * ?u n |]
      ==> (%n. root n (?u n))
          \<longlonglongrightarrow> Inf {root n (?u n) |n. 0 < n}",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 16, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 10, t_empty),
               template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, t_empty)))),
             template_hole 0)
           ))),
    ("Fekete.subadditive_converges_bounded'",
     "[| eventually_subadditive ?u ?N0.0;
         bdd_below {?u n / real n |n. ?N0.0 < n} |]
      ==> (%n. ?u n / real n)
          \<longlonglongrightarrow> Inf {?u n / real n |n. ?N0.0 < n}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 11, template_app (template_hole 10, t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 10, t_empty)))),
             template_hole 0)
           )))]:
   (string * thm * template) list
### theory "Draft.FeketeTemplates"
### 0.766s elapsed time, 1.028s cpu time, 0.143s GC time
val it = (): unit
