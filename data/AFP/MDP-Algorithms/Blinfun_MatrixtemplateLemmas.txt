   [("Blinfun_Matrix.blinfun_to_matrix_inv",
     "blinfun_to_matrix (matrix_to_blinfun ?f) = ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Blinfun_Matrix.matrix_to_blinfun_inv",
     "matrix_to_blinfun (blinfun_to_matrix ?f) = ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Blinfun_Matrix.blinfun_to_matrix_matpow",
     "blinfun_to_matrix (?X ^^ ?i) = matpow (blinfun_to_matrix ?X) ?i",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 0)),
         template_var 1))),
    ("Blinfun_Matrix.blinfun_to_matrix_scaleR",
     "blinfun_to_matrix (?c *\<^sub>R ?f) =
      ?c *\<^sub>R blinfun_to_matrix ?f",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Blinfun_Matrix.matrix_to_blinfun_scaleR",
     "matrix_to_blinfun (?c *\<^sub>R ?f) =
      ?c *\<^sub>R matrix_to_blinfun ?f",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Blinfun_Matrix.summable_blinfun_to_matrix",
     "summable ?f ==> summable (%i. blinfun_to_matrix (?f i))",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Blinfun_Matrix.blinfun_to_matrix_comp",
     "blinfun_to_matrix (?f o\<^sub>L ?g) =
      blinfun_to_matrix ?f ** blinfun_to_matrix ?g",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Blinfun_Matrix.blinfun_to_matrix_diff",
     "blinfun_to_matrix (?f - ?g) =
      blinfun_to_matrix ?f - blinfun_to_matrix ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Blinfun_Matrix.blinfun_to_matrix_add",
     "blinfun_to_matrix (?f + ?g) =
      blinfun_to_matrix ?f + blinfun_to_matrix ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Blinfun_Matrix.matrix_to_blinfun_comp",
     "matrix_to_blinfun (?m ** ?n) =
      matrix_to_blinfun ?m o\<^sub>L matrix_to_blinfun ?n",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Blinfun_Matrix.matrix_to_blinfun_diff",
     "matrix_to_blinfun (?f - ?g) =
      matrix_to_blinfun ?f - matrix_to_blinfun ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Blinfun_Matrix.matrix_to_blinfun_add",
     "matrix_to_blinfun (?f + ?g) =
      matrix_to_blinfun ?f + matrix_to_blinfun ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Blinfun_Matrix.matrix_to_blinfun_inv\<^sub>L",
     "invertible ?m ==> invertible\<^sub>L (matrix_to_blinfun ?m)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Blinfun_Matrix.invertible_invertible\<^sub>L_I",
     "invertible (blinfun_to_matrix ?f) ==> invertible\<^sub>L ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Blinfun_Matrix.blinfun_to_matrix_inverse",
     "invertible\<^sub>L ?X ==> invertible (blinfun_to_matrix ?X)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Blinfun_Matrix.invertible_invertible\<^sub>L_I",
     "invertible\<^sub>L (matrix_to_blinfun ?X) ==> invertible ?X",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Blinfun_Matrix.matrix_to_blinfun_inv\<^sub>L",
     "invertible ?m ==>
      matrix_to_blinfun (matrix_inv ?m) =
      inv\<^sub>L (matrix_to_blinfun ?m)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Blinfun_Matrix.norm_nonneg_blinfun_one",
     "nonneg_blinfun ?X ==> norm ?X = norm (blinfun_apply ?X 1)",
     template_implication
      ([template_inequation
         (less_equals, template_hole 6,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Blinfun_Matrix.blinfun_to_matrix_inverse",
     "invertible\<^sub>L ?X ==>
      blinfun_to_matrix (inv\<^sub>L ?X) =
      matrix_inv (blinfun_to_matrix ?X)",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Blinfun_Matrix.nonneg_blinfun_iff",
     "nonneg_blinfun ?X = (ALL v>=0. 0 <= blinfun_apply ?X v)",
     template_equation
      (template_app
        (template_app (template_hole 9, template_hole 8),
         template_app (template_hole 7, template_var 0)),
       template_app (template_hole 6, t_empty))),
    ("Blinfun_Matrix.matrix_to_blinfun_mult",
     "apply_bfun (blinfun_apply (matrix_to_blinfun ?m) ?v) ?i =
      (?m *v (\<chi>i. apply_bfun ?v i)) $ ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, t_empty))),
         template_var 0))),
    ("Blinfun_Matrix.blinfun_to_matrix_mult'",
     "(blinfun_to_matrix ?f *v ?v) $ ?i =
      apply_bfun (blinfun_apply ?f (bfun.Bfun (($) ?v))) ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app (template_hole 1, t_empty))),
         template_var 0))),
    ("Blinfun_Matrix.blinfun_to_matrix_mult",
     "(blinfun_to_matrix ?f *v (\<chi>i. apply_bfun ?v i)) $ ?i =
      apply_bfun (blinfun_apply ?f ?v) ?i",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 2)),
             template_app (template_hole 3, t_empty))),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Blinfun_Matrix.blinfun_to_matrix_mult''",
     "blinfun_to_matrix ?f *v ?v =
      (\<chi>i. apply_bfun (blinfun_apply ?f (bfun.Bfun (($) ?v))) i)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Blinfun_Matrix.nonneg_blinfun_nonneg",
     "[| nonneg_blinfun ?Q; 0 <= ?v |] ==> 0 <= blinfun_apply ?Q ?v",
     template_implication
      ([template_inequation
         (less_equals, template_hole 6,
          template_app (template_hole 5, template_var 1)),
        template_inequation (less_equals, template_hole 3, template_var 0)],
       template_inequation
        (less_equals, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Blinfun_Matrix.plus_vec_eq",
     "(\<chi>i. ?f i + ?g i) = (\<chi>i. ?f i) + (\<chi>i. ?g i)",
     template_equation
      (template_app (template_hole 2, t_empty),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, t_empty)),
         template_app (template_hole 2, t_empty)))),
    ("Blinfun_Matrix.matrix_le_norm_mono",
     "[| nonneg_blinfun ?C; blinfun_to_matrix ?C <= blinfun_to_matrix ?D |]
      ==> norm ?C <= norm ?D",
     template_implication
      ([template_inequation
         (less_equals, template_hole 3,
          template_app (template_hole 2, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Blinfun_Matrix.nonneg_blinfun_mono",
     "[| nonneg_blinfun ?Q; ?u <= ?v |]
      ==> blinfun_apply ?Q ?u <= blinfun_apply ?Q ?v",
     template_implication
      ([template_inequation
         (less_equals, template_hole 4,
          template_app (template_hole 3, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Blinfun_Matrix.blinfun_apply_mono",
     "[| nonneg_blinfun ?X; 0 <= ?v;
         blinfun_to_matrix ?X <= blinfun_to_matrix ?Y |]
      ==> blinfun_apply ?X ?v <= blinfun_apply ?Y ?v",
     template_implication
      ([template_inequation
         (less_equals, template_hole 5,
          template_app (template_hole 4, template_var 2)),
        template_inequation (less_equals, template_hole 2, template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1))))]
