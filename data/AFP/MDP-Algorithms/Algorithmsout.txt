Loading theory "Draft.Templates" (required by "Draft.AlgorithmsTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Matrix_Util" (required by "Draft.AlgorithmsTemplates" via "Draft.Algorithms" via "Draft.Splitting_Methods" via "Draft.Blinfun_Matrix")
Loading theory "HOL-Library.BigO" (required by "Draft.AlgorithmsTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.Policy_Iteration" (required by "Draft.AlgorithmsTemplates" via "Draft.Algorithms")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.073s elapsed time, 0.339s cpu time, 0.000s GC time
Loading theory "Draft.Value_Iteration" (required by "Draft.AlgorithmsTemplates" via "Draft.Algorithms")
consts
  matpow :: "(('a, 'n) vec, 'n) vec => nat => (('a, 'n) vec, 'n) vec"
locale MDP_att_\<L>
  fixes A :: "'s => 'a set"
    and K :: "'s * 'a => 's pmf"
    and r :: "'s * 'a => real"
    and l :: "real"
  assumes "MDP_att_\<L> A K r l"
locale MDP_act
  fixes A :: "'s => 'a set"
    and K :: "'s * 'a => 's pmf"
    and r :: "'s * 'a => real"
    and l :: "real"
    and arb_act :: "'a set => 'a"
  assumes "MDP_act A K r l arb_act"
locale MDP_att_\<L>
  fixes A :: "'s => 'a set"
    and K :: "'s * 'a => 's pmf"
    and r :: "'s * 'a => real"
    and l :: "real"
  assumes "MDP_att_\<L> A K r l"
### theory "Draft.Matrix_Util"
### 0.234s elapsed time, 0.968s cpu time, 0.032s GC time
Loading theory "Draft.Blinfun_Matrix" (required by "Draft.AlgorithmsTemplates" via "Draft.Algorithms" via "Draft.Splitting_Methods")
locale MDP_PI_finite
  fixes A :: "'s => 'a set"
    and K :: "'s * 'a => 's pmf"
    and r :: "'s * 'a => real"
    and l :: "real"
    and arb_act :: "'a set => 'a"
  assumes "MDP_PI_finite A K r l arb_act"
locale MDP_att_\<L>
  fixes A :: "'s => 'a set"
    and K :: "'s * 'a => 's pmf"
    and r :: "'s * 'a => real"
    and l :: "real"
  assumes "MDP_att_\<L> A K r l"
locale MDP_finite_type
  fixes A :: "'s => 'a set"
    and K :: "'s * 'a => 's pmf"
    and r :: "'s * 'a => real"
    and l :: "real"
  assumes "MDP_finite_type A r l"
locale MDP_act
  fixes A :: "'s => 'a set"
    and K :: "'s * 'a => 's pmf"
    and r :: "'s * 'a => real"
    and l :: "real"
    and arb_act :: "'a set => 'a"
  assumes "MDP_act A K r l arb_act"
### theory "Draft.Value_Iteration"
### 0.590s elapsed time, 2.295s cpu time, 0.134s GC time
### theory "HOL-Library.BigO"
### 0.722s elapsed time, 2.796s cpu time, 0.194s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.AlgorithmsTemplates")
### theory "Draft.Blinfun_Matrix"
### 0.525s elapsed time, 1.954s cpu time, 0.162s GC time
locale MDP_ord
  fixes A :: "'s => 'a set"
    and K :: "'s * 'a => 's pmf"
    and r :: "'s * 'a => real"
    and l :: "real"
  assumes "MDP_ord A r l"
### theory "Draft.Policy_Iteration"
### 0.863s elapsed time, 3.138s cpu time, 0.194s GC time
Loading theory "Draft.Modified_Policy_Iteration" (required by "Draft.AlgorithmsTemplates" via "Draft.Algorithms")
Loading theory "Draft.Splitting_Methods" (required by "Draft.AlgorithmsTemplates" via "Draft.Algorithms")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.542s elapsed time, 1.528s cpu time, 0.072s GC time
locale MDP_MPI
  fixes A :: "'s => 'a set"
    and K :: "'s * 'a => 's pmf"
    and r :: "'s * 'a => real"
    and l :: "real"
    and arb_act :: "'a set => 'a"
  assumes "MDP_MPI A K r l arb_act"
locale MDP_QR
  fixes A :: "'s => 'a set"
    and K :: "'s * 'a => 's pmf"
    and r :: "'s * 'a => real"
    and l :: "real"
    and
    Q :: "('s => 'a)
          => ('s \<Rightarrow>\<^sub>b real) \<Rightarrow>\<^sub>L 
             's \<Rightarrow>\<^sub>b real"
    and
    R :: "('s => 'a)
          => ('s \<Rightarrow>\<^sub>b real) \<Rightarrow>\<^sub>L 
             's \<Rightarrow>\<^sub>b real"
  assumes "MDP_QR A K r l Q R"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale MDP_ord
  fixes A :: "'s => 'a set"
    and K :: "'s * 'a => 's pmf"
    and r :: "'s * 'a => real"
    and l :: "real"
  assumes "MDP_ord A r l"
Found termination order: "(%p. size (fst (snd (snd p)))) <*mlex*> {}"
### theory "Draft.Modified_Policy_Iteration"
### 1.732s elapsed time, 4.108s cpu time, 0.722s GC time
locale MDP_ord
  fixes A :: "'s => 'a set"
    and K :: "'s * 'a => 's pmf"
    and r :: "'s * 'a => real"
    and l :: "real"
  assumes "MDP_ord A r l"
### theory "Draft.Splitting_Methods"
### 2.435s elapsed time, 4.829s cpu time, 0.797s GC time
Loading theory "Draft.Algorithms" (required by "Draft.AlgorithmsTemplates")
### theory "Draft.Algorithms"
### 0.231s elapsed time, 0.234s cpu time, 0.000s GC time
Loading theory "Draft.AlgorithmsTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.AlgorithmsTemplates"
### 1.493s elapsed time, 2.344s cpu time, 0.886s GC time
val it = (): unit
