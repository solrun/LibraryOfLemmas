   [("Abacus.start_of_nonzero", "0 < start_of ?ly ?as",
     template_inequation
      (less_than, template_hole 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Abacus_Mopup.wf_mopup", "tm_wf0 (mopup ?n)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))
         )),
    ("Abacus.length_layout_of", "length (layout_of ?aprog) = length ?aprog",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Abacus.length_tms_of", "length (tms_of ?aprog) = length ?aprog",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Abacus.abc_steps_l_0", "abc_steps_l ?ac ?ap 0 = ?ac",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 1)),
    ("Abacus.startof_ge1", "Suc 0 <= start_of ?ly ?as",
     template_inequation
      (less_equals, template_app (template_hole 2, template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Abacus.start_of_nonzero", "(start_of ?ly ?as = 0) = False",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Abacus.lm_iff_empty", "(<?lm> = []) = (?lm = [])",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Abacus.start_of_less_2", "start_of ?ly ?e <= start_of ?ly (Suc ?e)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Abacus.repeat_Bk_no_Oc", "(Oc # ?r = Bk \<up> ?rn) = False",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Abacus.tape_nat", "<[?x]> = Oc \<up> Suc ?x",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Abacus.start_of_less_1", "start_of ?ly ?e <= start_of ?ly (?e + ?d)",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 2), template_var 1),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Abacus.length_findnth", "length (findnth ?n) = 4 * ?n",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 1, template_hole 0)))),
         template_var 0))),
    ("Abacus_Mopup.mop_bef_length", "length (mopup_a ?n) = 4 * ?n",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 1, template_hole 0)))),
         template_var 0))),
    ("Abacus.length_ci_goto", "length (ci ?ly ?ss (Goto ?n)) = 2",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("Abacus.length_equal", "?xs = ?ys ==> length ?xs = length ?ys",
     template_implication
      ([template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Abacus_Mopup.take_suc", "EX lna. Bk # Bk \<up> ?ln = Bk \<up> lna",
     template_predicate (template_app (template_hole 4, t_empty))),
    ("Abacus_Mopup.mopup_erase_nonempty",
     "mopup_bef_erase_a (?a, ?aa, []) ?lm ?n ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_hole 1))),
             template_var 2),
           template_var 1),
         template_var 0),
       template_hole 0)),
    ("Abacus_Mopup.mopup_erase_nonempty",
     "mopup_bef_erase_b (?a, ?aa, []) ?lm ?n ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_app
                  (template_app (template_hole 2, template_var 3),
                   template_hole 1))),
             template_var 2),
           template_var 1),
         template_var 0),
       template_hole 0)),
    ("Abacus.ci_length", "length (ci ?ns ?n ?ai) div 2 = length_of ?ai",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1),
               template_var 0))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_app (template_hole 0, template_var 0))),
    ("Abacus.div_rounding_down", "Suc (2 * ?q) div 2 = ?q",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))),
               template_var 0))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))),
       template_var 0)),
    ("Abacus.is_even_4", "is_even (4 * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 2, template_hole 1)))),
             template_var 0)),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_hole 0)),
    ("Abacus.compile_mod2",
     "is_even (length (concat (take ?n (tms_of ?ap))))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app (template_hole 4, template_var 0))))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_hole 0)),
    ("Abacus.inv_locate_b_nonempty",
     "inv_locate_b (?as, ?lm) (?n, [], []) ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_hole 1))),
         template_var 0),
       template_hole 0)),
    ("Abacus.inv_on_left_moving_nonempty",
     "inv_on_left_moving (?as, ?am) (?s, [], ?r) ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 4),
               template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1))),
         template_var 0),
       template_hole 0)),
    ("Abacus.inv_on_left_moving_no_empty",
     "inv_on_left_moving (?as, ?lm) (?s, ?l, []) ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 4),
               template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_var 0),
       template_hole 0)),
    ("Abacus.inv_on_left_moving_norm_no_empty",
     "inv_on_left_moving_norm (?as, ?lm) (?s, ?l, []) ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 4),
               template_var 3)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_var 0),
       template_hole 0)),
    ("Abacus_Mopup.exp_ind", "?a \<up> Suc ?x = ?a \<up> ?x @ [?a]",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Abacus.start_of_less",
     "?e < ?as ==> start_of ?ly ?e <= start_of ?ly ?as",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Abacus.x_plus_helpers", "?x + 4 = Suc (?x + 3)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 3, template_hole 2)))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app (template_hole 0, template_hole 2)))))),
    ("Abacus.x_plus_helpers", "?x + 6 = Suc (?x + 5)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)))),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 2,
               template_app (template_hole 3, template_hole 1))))))),
    ("Abacus.x_plus_helpers", "?x + 5 = Suc (?x + 4)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)))),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 2,
               template_app (template_hole 2, template_hole 1))))))),
    ("Abacus.x_plus_helpers", "?x + 7 = Suc (?x + 6)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 3, template_hole 2)))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 0,
               template_app (template_hole 3, template_hole 2))))))),
    ("Abacus.dec_left_move_no_Oc",
     "dec_left_move (?as, ?am) (?s, ?aaa, Oc # ?xs) ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 4)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)))),
         template_var 0),
       template_hole 0)),
    ("Abacus.dec_right_move_no_Oc",
     "dec_right_move (?as, ?am) (?s, ?l, Oc # ?r) ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 4)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)))),
         template_var 0),
       template_hole 0)),
    ("Abacus.inv_after_clear_no_Oc",
     "inv_after_clear (?as, ?lm) (?s, ?aaa, Oc # ?xs) ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 4)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)))),
         template_var 0),
       template_hole 0)),
    ("Abacus.inv_after_left_moving_no_Oc",
     "inv_after_left_moving (?as, ?lm) (?s, ?aaa, Oc # ?xs) ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 4)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)))),
         template_var 0),
       template_hole 0)),
    ("Abacus.inv_check_left_moving_in_middle_no_Bk",
     "inv_check_left_moving_in_middle (?as, ?lm) (?s, ?l, Bk # ?r) ?ires =
      False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 4)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)))),
         template_var 0),
       template_hole 0)),
    ("Abacus.inv_check_left_moving_on_leftmost_no_Oc",
     "inv_check_left_moving_on_leftmost (?as, ?lm) (?s, ?list, Oc # ?r)
       ?ires =
      False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 4)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)))),
         template_var 0),
       template_hole 0)),
    ("Abacus.inv_locate_b_no_Bk",
     "inv_locate_b (?as, ?lm) (?n, [], Bk # ?list) ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 4),
               template_var 3)),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)))),
         template_var 0),
       template_hole 0)),
    ("Abacus.no_inv_on_left_moving_in_middle_B_Oc",
     "inv_on_left_moving_in_middle_B (?as, ?lm) (?s, ?l, Oc # ?r) ?ires =
      False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 4)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)))),
         template_var 0),
       template_hole 0)),
    ("Abacus.no_inv_on_left_moving_norm_Bk",
     "inv_on_left_moving_norm (?as, ?lm) (?s, ?l, Bk # ?r) ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 5),
               template_var 4)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)))),
         template_var 0),
       template_hole 0)),
    ("Abacus.layout_id_cons",
     "layout_of (?ap @ [?p]) = layout_of ?ap @ [length_of ?p]",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4))),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 7, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("Abacus.repeat_Bk",
     "(EX rna. Bk \<up> ?rn = Bk # Bk \<up> rna) | ?rn = 0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("Abacus.x_plus_helpers", "?x + 8 = Suc (?x + 7)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 3,
               template_app (template_hole 3, template_hole 2))))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 0,
               template_app (template_hole 0, template_hole 2))))))),
    ("Abacus.inv_check_left_moving_nonemptyE",
     "inv_check_left_moving (?as, ?lm) (?s, [], Oc # ?xs) ?ires ==> ?RR",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_app
                     (template_app (template_hole 1, template_hole 0),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate (template_var 0))),
    ("Abacus.between_sucs", "[| ?x < Suc ?n; ~ ?x < ?n |] ==> ?x = ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 0)),
        template_negation
         (template_inequation (less_than, template_var 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Abacus_Mopup.mod_2", "is_even ?x | ?x mod 2 = Suc 0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)))),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_hole 2)))),
             template_app (template_hole 0, template_hole 1)))
         )),
    ("Abacus.x_plus_helpers", "?x + 12 = Suc (?x + 11)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))))),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app (template_hole 3, template_hole 1)))))))),
    ("Abacus.x_plus_helpers", "?x + 10 = Suc (?x + 9)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 3, template_hole 1))))),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 2,
               template_app
                (template_hole 3,
                 template_app (template_hole 3, template_hole 1)))))))),
    ("Abacus.x_plus_helpers", "?x + 9 = Suc (?x + 8)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 2, template_hole 1))))),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app (template_hole 2, template_hole 1)))))))),
    ("Abacus.x_plus_helpers", "?x + 13 = Suc (?x + 12)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 3, template_hole 1))))),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 2,
               template_app
                (template_hole 2,
                 template_app (template_hole 3, template_hole 1)))))))),
    ("Abacus.x_plus_helpers", "?x + 11 = Suc (?x + 10)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))))),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 2,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))))))),
    ("Abacus.x_plus_helpers", "14 + ?x = Suc (?x + 13)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app (template_hole 2, template_hole 1))))),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 2,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1)))))))),
    ("Abacus.x_plus_helpers", "15 + ?x = Suc (?x + 14)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 3,
                 template_app (template_hole 3, template_hole 2))))),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 0,
               template_app
                (template_hole 3,
                 template_app (template_hole 3, template_hole 2)))))))),
    ("Abacus.div_rounding_down", "(2 * ?q - Suc 0) div 2 = ?q - 1",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3))),
                 template_var 0)),
             template_app (template_hole 2, template_hole 1))),
         template_app
          (template_hole 5,
           template_app (template_hole 4, template_hole 3))),
       template_app
        (template_app (template_hole 7, template_var 0), template_hole 0))),
    ("Abacus.dec_check_right_move_nonempty",
     "dec_check_right_move (?as, ?am) (?s, ?l, ?r) ?ires ==> ?l ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 2, template_hole 0)))),
    ("Abacus.dec_left_move_nonempty",
     "dec_left_move (?as, ?am) (?s, ?l, ?r) ?ires ==> ?l ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 2, template_hole 0)))),
    ("Abacus.dec_on_right_moving_nonempty",
     "dec_on_right_moving (?as, ?am) (?s, ?l, ?r) ?ires ==> ?l ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 2, template_hole 0)))),
    ("Abacus.x_plus_helpers", "16 + ?x = Suc (?x + 15)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 3, template_hole 2)))))),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_hole 4,
             template_app
              (template_hole 0,
               template_app
                (template_hole 0,
                 template_app (template_hole 0, template_hole 2)))))))),
    ("Abacus_Mopup.mod_ex2", "is_even ?a = (EX q. ?a = 2 * q)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3)))),
         template_hole 2),
       template_app (template_hole 1, t_empty))),
    ("Abacus.length_tms_of_elem_even",
     "?n < length ?ap ==> is_even (length (tms_of ?ap ! ?n))",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_var 1))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_hole 0))),
    ("Abacus_Mopup.mopup_bef_erase",
     "mopup_bef_erase_b (?s, ?l, Oc # ?xs) ?lm ?n ?ires ==> ?l ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 5),
                      template_app
                       (template_app (template_hole 5, template_var 4),
                        template_app
                         (template_app (template_hole 4, template_hole 3),
                          template_var 3)))),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 4, template_hole 0)))),
    ("Abacus.inv_after_clear_Suc_nonempty",
     "inv_after_clear (?as, abc_lm_s ?lm ?n (Suc (abc_lm_v ?lm ?n)))
       (?s, ?b, []) ?ires =
      False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 5),
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 4),
                   template_var 3),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_var 3))))),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_var 0),
       template_hole 0)),
    ("Abacus.inv_after_write_Suc",
     "inv_after_write (?as, abc_lm_s ?am ?n (Suc (abc_lm_v ?am ?n)))
       (?x, ?aaa, []) ?ires =
      False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 5),
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 4),
                   template_var 3),
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_var 3))))),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1))),
         template_var 0),
       template_hole 0)),
    ("Abacus.even_plus_one_odd", "is_even ?x ==> Suc ?x mod 2 = Suc 0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 0),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_hole 2))),
          template_hole 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 0, template_var 0)),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2))),
         template_app (template_hole 0, template_hole 1)))),
    ("Abacus.odd_plus_one_even", "?x mod 2 = Suc 0 ==> is_even (Suc ?x)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 0),
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_hole 2))),
          template_app (template_hole 1, template_hole 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2))),
         template_hole 0))),
    ("Abacus_Mopup.mod_ex1",
     "(?a mod 2 = Suc 0) = (EX q. ?a = Suc (2 * q))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 0),
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4)))),
         template_app (template_hole 3, template_hole 2)),
       template_app (template_hole 1, t_empty))),
    ("Abacus_Mopup.mopup_erase_nonempty",
     "mopup_aft_erase_b (2 * ?n + 3, ?aa, []) ?lm ?n ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5, template_hole 4))),
                         template_var 3)),
                     template_app
                      (template_hole 6,
                       template_app (template_hole 3, template_hole 4)))),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1))),
             template_var 1),
           template_var 3),
         template_var 0),
       template_hole 0)),
    ("Abacus.dec_first_on_right_moving_Bk_nonempty",
     "dec_first_on_right_moving ?n (?as, ?am) (?s, ?l, Bk # ?xs) ?ires ==>
      ?l ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 6),
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 1)))),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 2, template_hole 0)))),
    ("Abacus.length_ci_inc", "length (ci ?ly ?ss (Inc ?n)) = 4 * ?n + 18",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1),
           template_app (template_hole 6, template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 2, template_hole 1)))),
             template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_hole 0,
               template_app
                (template_hole 2,
                 template_app (template_hole 2, template_hole 1)))))))),
    ("Abacus.inv_after_write_Suc",
     "inv_after_write (?as, abc_lm_s ?am ?n (Suc (abc_lm_v ?am ?n)))
       (?x, ?aaa, Bk # ?xs) ?ires =
      False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 6),
               template_app
                (template_app
                  (template_app (template_hole 7, template_var 5),
                   template_var 4),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 5),
                     template_var 4))))),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)))),
         template_var 0),
       template_hole 0)),
    ("Abacus_Mopup.mopup_jump_over2_nonempty",
     "mopup_jump_over2 (2 * ?n + 6, ?l, []) ?lm ?n ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5, template_hole 4))),
                         template_var 3)),
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 3, template_hole 4))))),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_hole 1))),
             template_var 1),
           template_var 3),
         template_var 0),
       template_hole 0)),
    ("Abacus.no_Ocs_dec_after_write",
     "dec_after_write (?as, ?am) (?s, ?aa, ?r) ?ires ==>
      takeWhile (%a. a = Oc) ?aa = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty), template_var 2),
         template_hole 0))),
    ("Abacus.inv_locate_n_b_nonemptyE",
     "[| 0 < abc_lm_v ?am ?n;
         inv_locate_n_b (?as, ?am) (?n, ?aaa, []) ?ires |]
      ==> ?RR",
     template_implication
      ([template_inequation
         (less_than, template_hole 6,
          template_app
           (template_app (template_hole 5, template_var 5),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 5)),
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 2),
                    template_hole 0))),
              template_var 1)
            )],
       template_predicate (template_var 0))),
    ("Abacus_Mopup.mopup_aft_erase_b_no_Oc",
     "mopup_aft_erase_b (2 * ?n + 3, ?l, Oc # ?xs) ?lm ?n ?ires = False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 6, template_hole 5))),
                         template_var 4)),
                     template_app
                      (template_hole 7,
                       template_app (template_hole 4, template_hole 5)))),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 2)))),
             template_var 1),
           template_var 4),
         template_var 0),
       template_hole 0)),
    ("Abacus.fix_add",
     "fetch ?ap (?x + 2 * ?n) ?b = fetch ?ap (2 * ?n + ?x) ?b",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 3),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))),
               template_var 1))),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 5, template_var 3),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0))),
                 template_var 1)),
             template_var 2)),
         template_var 0))),
    ("Abacus.take_Suc_last",
     "Suc ?as <= length ?xs ==>
      take (Suc ?as) ?xs = take ?as ?xs @ [?xs ! ?as]",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 7, template_var 1),
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 7, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0))))),
    ("Abacus.concat_suc",
     "Suc ?as <= length ?xs ==>
      concat (take (Suc ?as) ?xs) = concat (take ?as ?xs) @ ?xs ! ?as",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 6, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Abacus_Mopup.mopup_aft_erase_a_nonempty",
     "mopup_aft_erase_a (Suc (Suc (2 * ?n)), ?l, ?xs) ?lm ?n ?ires ==>
      ?l ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 8,
                            template_app
                             (template_app
                               (template_hole 7,
                                template_app
                                 (template_hole 6,
                                  template_app
                                   (template_hole 5, template_hole 4))),
                              template_var 4)))),
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 2))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 3, template_hole 0)))),
    ("Abacus.length_ci_dec",
     "length (ci ?ly ?ss (Dec ?n ?e)) = 4 * ?n + 32",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 1, template_hole 0)))),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 1, template_hole 0))))))))),
    ("Abacus.map_start_of_layout",
     "map (start_of (layout_of ?xs @ [length_of ?x])) [0..<length ?xs] =
      map (start_of (layout_of ?xs)) [0..<length ?xs]",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 0)),
                 template_hole 3)))),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 1))),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app (template_hole 6, template_var 1))),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 1))))),
    ("Abacus_Mopup.tape_of_nl_cons",
     "<?m # ?lm> =
      (if ?lm = [] then Oc \<up> Suc ?m else Oc \<up> Suc ?m @ Bk # <?lm>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_hole 6)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 1)),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_var 1)),
                   template_hole 3)),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_app (template_hole 10, template_var 0))))
           ))),
    ("Abacus_Mopup.mopup_bef_erase",
     "mopup_bef_erase_a (?s, ?l, []) ?lm ?n ?ires ==>
      mopup_bef_erase_a (?s, ?l, [Bk]) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 4),
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_hole 2))),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_app
                        (template_app (template_hole 1, template_hole 0),
                         template_hole 2)))),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Abacus.inv_stop_indep_fst",
     "inv_stop (?as, ?lm) (?x, ?l, ?r) ?ires ==>
      inv_stop (?as, ?lm) (?y, ?l, ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 1, template_var 4),
                  template_app
                   (template_app (template_hole 0, template_var 3),
                    template_var 2))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2))),
             template_var 1)
           ))),
    ("Abacus.dec_false_1",
     "[| abc_lm_v ?am ?n = 0;
         inv_locate_b (?as, ?am) (?n, ?aaa, Oc # ?xs) ?ires |]
      ==> False",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 5), template_var 4),
          template_hole 7),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("Abacus.inv_locate_n_b_Bk_elim",
     "[| 0 < abc_lm_v ?am ?n;
         inv_locate_n_b (?as, ?am) (?n, ?aaa, Bk # ?xs) ?ires |]
      ==> ?RR",
     template_implication
      ([template_inequation
         (less_than, template_hole 7,
          template_app
           (template_app (template_hole 6, template_var 6),
            template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 6)),
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_app
                     (template_app (template_hole 1, template_hole 0),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate (template_var 0))),
    ("Abacus.dec_right_move_asif_Bk_singleton",
     "dec_right_move (?as, ?am) (?s, ?l, []) ?ires =
      dec_right_move (?as, ?am) (?s, ?l, [Bk]) ?ires",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 4),
               template_var 3)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2))),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 4),
               template_var 3)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_hole 2)))),
         template_var 0))),
    ("Abacus.tpairs_id_cons",
     "tpairs_of (?xs @ [?x]) =
      tpairs_of ?xs @
      [(start_of (layout_of (?xs @ [?x])) (length ?xs), ?x)]",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app (template_hole 9, template_var 1),
           template_app
            (template_app (template_hole 8, template_var 0),
             template_hole 7))),
       template_app
        (template_app
          (template_hole 6,
           template_app (template_hole 10, template_var 1)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 9, template_var 1),
                         template_app
                          (template_app (template_hole 8, template_var 0),
                           template_hole 7)))),
                   template_app (template_hole 1, template_var 1))),
               template_var 0)),
           template_hole 0)))),
    ("Abacus.inv_locate_a_via_crsp",
     "crsp ?ly (?as, ?lm) (?s, ?l, ?r) ?ires ==>
      inv_locate_a (?as, ?lm) (0, ?l, ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 6),
                  template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 4, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 3, template_hole 0),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1))),
             template_var 0)
           ))),
    ("Abacus_Mopup.abc_mopup_measure_induct",
     "(!!n. ~ ?P (?f n) ==> (?f (Suc n), ?f n) : abc_mopup_measure) ==>
      EX n. ?P (?f n)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Abacus.concat_drop_suc_iff",
     "Suc ?n < length ?tps ==>
      concat (drop (Suc ?n) ?tps) =
      ?tps ! Suc ?n @ concat (drop (Suc (Suc ?n)) ?tps)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 6, template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 6, template_var 1))),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 6, template_var 1))),
               template_var 0)))))),
    ("Abacus.at_begin_fst_awtn_Bk",
     "at_begin_fst_awtn (?as, ?am) (?q, ?aaa, []) ?ires ==>
      at_begin_fst_awtn (?as, ?am) (?q, ?aaa, [Bk]) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3)),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_hole 2))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 4),
                   template_var 3)),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 2)))),
             template_var 0)
           ))),
    ("Abacus.at_begin_fst_bwtn_Bk",
     "at_begin_fst_bwtn (?as, ?am) (?q, ?aaa, []) ?ires ==>
      at_begin_fst_bwtn (?as, ?am) (?q, ?aaa, [Bk]) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3)),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_hole 2))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 4),
                   template_var 3)),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 2)))),
             template_var 0)
           ))),
    ("Abacus.at_begin_norm_Bk",
     "at_begin_norm (?as, ?am) (?q, ?aaa, []) ?ires ==>
      at_begin_norm (?as, ?am) (?q, ?aaa, [Bk]) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3)),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_hole 2))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 4),
                   template_var 3)),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 2)))),
             template_var 0)
           ))),
    ("Abacus.dec_after_write_Oc_empty",
     "dec_after_write (?as, ?am) (?s, ?aaa, []) ?ires ==>
      dec_after_write (?as, ?am) (?s', ?aaa, [Oc]) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_hole 2))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 2)))),
             template_var 1)
           ))),
    ("Abacus.inv_stop_Bk_empty",
     "inv_after_left_moving (?as, ?lm) (?s, ?l, []) ?ires ==>
      inv_stop (?as, ?lm) (?s', Bk # ?l, []) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_hole 3))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 6, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 2)),
                   template_hole 3))),
             template_var 1)
           ))),
    ("Abacus.inv_after_left_moving_Bk_empty_via_check",
     "inv_check_left_moving (?as, ?lm) (?s, ?l, []) ?ires ==>
      inv_after_left_moving (?as, ?lm) (?s', Bk # ?l, []) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_hole 3))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 6, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 2)),
                   template_hole 3))),
             template_var 1)
           ))),
    ("Abacus.inv_locate_a_Bk",
     "inv_locate_a (?as, ?am) (?q, ?aaa, []) ?ires ==>
      inv_locate_a (?as, ?am) (?q, ?aaa, [Bk]) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3)),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_hole 2))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 4),
                   template_var 3)),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 2)))),
             template_var 0)
           ))),
    ("Abacus.inv_locate_a",
     "inv_locate_a (?as, ?am) (?q, ?aaa, []) ?ires ==>
      inv_locate_a (?as, ?am) (?q, ?aaa, [Oc]) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3)),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_hole 2))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 4),
                   template_var 3)),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 2)))),
             template_var 0)
           ))),
    ("Abacus.inv_locate_b_Bk",
     "inv_locate_b (?as, ?am) (?q, ?l, []) ?ires ==>
      inv_locate_b (?as, ?am) (?q, ?l, [Bk]) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3)),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_hole 2))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 4),
                   template_var 3)),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 2)))),
             template_var 0)
           ))),
    ("Abacus.inv_on_right_moving_singleton_Bk",
     "inv_on_right_moving (?as, ?lm) (?x, ?l, []) ?ires ==>
      inv_on_right_moving (?as, ?lm) (?y, ?l, [Bk]) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_hole 2))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 2)))),
             template_var 1)
           ))),
    ("Abacus.inv_check_left_moving_Suc_nonempty",
     "inv_check_left_moving (?as, abc_lm_s ?lm ?n (Suc (abc_lm_v ?lm ?n)))
       (?s, ?b, Oc # ?list) ?ires ==>
      ?b ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 6),
                    template_app
                     (template_app
                       (template_app (template_hole 9, template_var 5),
                        template_var 4),
                      template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 7, template_var 5),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 1)))),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 2, template_hole 0)))),
    ("Abacus.inv_on_left_moving_Suc_nonempty",
     "inv_on_left_moving (?as, abc_lm_s ?lm ?n (Suc (abc_lm_v ?lm ?n)))
       (?s, ?b, Oc # ?list) ?ires ==>
      ?b ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 6),
                    template_app
                     (template_app
                       (template_app (template_hole 9, template_var 5),
                        template_var 4),
                      template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 7, template_var 5),
                          template_var 4))))),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 1)))),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 2, template_hole 0)))),
    ("Abacus_Mopup.mopup_left_moving_nonempty_snd",
     "mopup_left_moving (2 * ?n + 5, ?l, ?xs) ?lm ?n ?ires ==> ?l ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_hole 8,
                                template_app
                                 (template_hole 7,
                                  template_app
                                   (template_hole 6, template_hole 5))),
                              template_var 4)),
                          template_app
                           (template_hole 7,
                            template_app
                             (template_hole 4,
                              template_app
                               (template_hole 6, template_hole 5))))),
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_var 2))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 3, template_hole 0)))),
    ("Abacus.length_tp",
     "[| ?ly = layout_of ?ap; ?tp = tm_of ?ap |]
      ==> start_of ?ly (length ?ap) = Suc (length ?tp div 2)",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 11, template_var 1)),
        template_equation
         (template_var 0, template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 7, template_var 2),
           template_app (template_hole 6, template_var 1)),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))))))),
    ("Abacus.abc_step_red2",
     "abc_steps_l (?s, ?lm) ?p (Suc ?n) =
      (let (as', am') = abc_steps_l (?s, ?lm) ?p ?n
       in abc_step_l (as', am') (abc_fetch as' ?p))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2)),
           template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 2)),
               template_var 1),
             template_var 0)),
         template_app (template_hole 2, t_empty)))),
    ("Abacus_Mopup.mopup_inv_start",
     "?n < length ?am ==>
      mopup_inv (Suc 0, Bk # Bk # ?ires, <?am> @ Bk \<up> ?k) ?am ?n ?ires",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 10, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 6)),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 4, template_hole 3),
                           template_app
                            (template_app
                              (template_hole 4, template_hole 3),
                             template_var 1))),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app (template_hole 1, template_var 2)),
                         template_app
                          (template_app (template_hole 0, template_var 0),
                           template_hole 3))))),
                 template_var 2),
               template_var 3),
             template_var 1)
           ))),
    ("Abacus_Mopup.mopup_bef_erase",
     "mopup_bef_erase_b (?s, ?l, []) ?lm ?n ?ires ==>
      mopup_bef_erase_a (?s - Suc 0, Bk # ?l, []) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 4),
                      template_app
                       (template_app (template_hole 7, template_var 3),
                        template_hole 6))),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 4, template_var 4),
                         template_app (template_hole 3, template_hole 2))),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 3)),
                       template_hole 6))),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Abacus_Mopup.mopup_bef_erase_b_Bk_via_a_Oc",
     "mopup_bef_erase_a (?s, ?l, Oc # ?xs) ?lm ?n ?ires ==>
      mopup_bef_erase_b (Suc ?s, ?l, Bk # ?xs) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 5),
                      template_app
                       (template_app (template_hole 5, template_var 4),
                        template_app
                         (template_app (template_hole 4, template_hole 3),
                          template_var 3)))),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 1, template_var 5)),
                     template_app
                      (template_app (template_hole 5, template_var 4),
                       template_app
                        (template_app (template_hole 4, template_hole 0),
                         template_var 3)))),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Abacus.length_tp'",
     "[| ?ly = layout_of ?ap; ?tp = tm_of ?ap |]
      ==> length ?tp = 2 * sum_list (take (length ?ap) (layout_of ?ap))",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 11, template_var 1)),
        template_equation
         (template_var 0, template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app (template_hole 7, template_var 0),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3))),
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1)),
               template_app (template_hole 11, template_var 1))))))),
    ("Abacus.start_of_Suc3",
     "[| ?ly = layout_of ?ap; abc_fetch ?as ?ap = Some (Goto ?n) |]
      ==> start_of ?ly (Suc ?as) = start_of ?ly ?as + 1",
     template_implication
      ([template_equation
         (template_var 3, template_app (template_hole 9, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1), template_var 2),
          template_app
           (template_hole 6,
            template_app (template_hole 5, template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app (template_hole 2, template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1)),
           template_hole 0)))),
    ("Abacus.ci_nth",
     "[| ?ly = layout_of ?aprog; abc_fetch ?as ?aprog = Some ?ins |]
      ==> ci ?ly (start_of ?ly ?as) ?ins = tms_of ?aprog ! ?as",
     template_implication
      ([template_equation
         (template_var 3, template_app (template_hole 8, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1), template_var 2),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1)))),
    ("Abacus.inv_on_left_moving_in_middle_B_Oc_Bk_Bks",
     "inv_on_left_moving_in_middle_B (?as, [?m])
       (?s', Oc # Oc \<up> ?m @ Bk # Bk # ?ires, Bk # Bk \<up> ?rn) ?ires",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 4),
                 template_app
                  (template_app (template_hole 8, template_var 3),
                   template_hole 7))),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_var 3),
                           template_hole 3)),
                       template_app
                        (template_app (template_hole 4, template_hole 0),
                         template_app
                          (template_app (template_hole 4, template_hole 0),
                           template_var 1))))),
                 template_app
                  (template_app (template_hole 4, template_hole 0),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0))))),
           template_var 1)
         )),
    ("Abacus_Mopup.fetch_jump_over2_b",
     "fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) (2 * ?n + 6) Bk =
      (R, 0)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 13,
                 template_app (template_hole 12, template_var 0)),
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 6))),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6))),
                 template_var 0)),
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 4, template_hole 6))))),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_hole 0))),
    ("Abacus.dec_right_move_Bk_Bk_via_clear",
     "dec_after_clear (?as, ?am) (?s, ?l, []) ?ires ==>
      dec_right_move (?as, ?am) (?s', Bk # ?l, [Bk]) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_hole 3))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 6, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_hole 3)))),
             template_var 1)
           ))),
    ("Abacus.dec_left_move_tail",
     "dec_check_right_move (?as, ?am) (?s, ?l, []) ?ires ==>
      dec_left_move (?as, ?am) (?s', tl ?l, [hd ?l]) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_hole 4))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 7, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 2, template_var 2)),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 2)),
                     template_hole 4)))),
             template_var 1)
           ))),
    ("Abacus.inv_on_left_moving_tail",
     "dec_left_move (?as, ?am) (?s, ?l, []) ?ires ==>
      inv_on_left_moving (?as, ?am) (?s', tl ?l, [hd ?l]) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_hole 4))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 7, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 2, template_var 2)),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 2)),
                     template_hole 4)))),
             template_var 1)
           ))),
    ("Abacus.dec_after_clear_tail",
     "dec_on_right_moving (?as, ?am) (?s, ?l, []) ?ires ==>
      dec_after_clear (?as, ?am) (?s', tl ?l, [hd ?l]) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_hole 4))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 7, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 2, template_var 2)),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 2)),
                     template_hole 4)))),
             template_var 1)
           ))),
    ("Abacus.dec_right_move_Bk_via_clear_Bk",
     "dec_after_clear (?as, ?am) (?s, ?l, Bk # ?r) ?ires ==>
      dec_right_move (?as, ?am) (?s', Bk # ?l, ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 3)),
                   template_var 2))),
             template_var 1)
           ))),
    ("Abacus.dec_after_clear_Bk_via_Oc",
     "dec_after_clear (?as, ?am) (?s, ?l, Oc # ?r) ?ires ==>
      dec_after_clear (?as, ?am) (?s', ?l, Bk # ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_app (template_hole 2, template_hole 0),
                     template_var 2)))),
             template_var 1)
           ))),
    ("Abacus.dec_after_write_Oc_via_Bk",
     "dec_after_write (?as, ?am) (?s, ?l, Bk # ?r) ?ires ==>
      dec_after_write (?as, ?am) (?s', ?l, Oc # ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_app (template_hole 2, template_hole 0),
                     template_var 2)))),
             template_var 1)
           ))),
    ("Abacus.dec_on_right_moving_Oc_mv",
     "dec_after_write (?as, ?am) (?s, ?l, Oc # ?r) ?ires ==>
      dec_on_right_moving (?as, ?am) (?s', Oc # ?l, ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 3)),
                   template_var 2))),
             template_var 1)
           ))),
    ("Abacus.dec_on_right_moving_Oc_move",
     "dec_on_right_moving (?as, ?am) (?s, ?l, Oc # ?r) ?ires ==>
      dec_on_right_moving (?as, ?am) (?s', Oc # ?l, ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_app
                     (template_app (template_hole 1, template_hole 0),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 3)),
                   template_var 2))),
             template_var 1)
           ))),
    ("Abacus.dec_right_move_2_check_right_move",
     "dec_right_move (?as, ?am) (?s, ?l, Bk # ?r) ?ires ==>
      dec_check_right_move (?as, ?am) (?s', Bk # ?l, ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 3)),
                   template_var 2))),
             template_var 1)
           ))),
    ("Abacus.inv_after_clear_2_inv_on_right_moving",
     "inv_after_clear (?as, ?lm) (?x, ?l, Bk # ?r) ?ires ==>
      inv_on_right_moving (?as, ?lm) (?y, Bk # ?l, ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 3)),
                   template_var 2))),
             template_var 1)
           ))),
    ("Abacus.inv_stop_Bk_move",
     "inv_after_left_moving (?as, ?lm) (?s, ?l, Bk # ?r) ?ires ==>
      inv_stop (?as, ?lm) (?s', Bk # ?l, ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 3)),
                   template_var 2))),
             template_var 1)
           ))),
    ("Abacus.inv_after_clear_Bk_via_Oc",
     "inv_after_move (?as, ?lm) (?s, ?l, Oc # ?r) ?ires ==>
      inv_after_clear (?as, ?lm) (?s', ?l, Bk # ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_app
                     (template_app (template_hole 3, template_hole 2),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app (template_hole 3, template_hole 0),
                     template_var 2)))),
             template_var 1)
           ))),
    ("Abacus.inv_after_move_Oc_via_write",
     "inv_after_write (?as, ?lm) (?x, ?l, Oc # ?r) ?ires ==>
      inv_after_move (?as, ?lm) (?y, Oc # ?l, ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 3)),
                   template_var 2))),
             template_var 1)
           ))),
    ("Abacus.inv_after_left_moving_Bk_via_check",
     "inv_check_left_moving (?as, ?lm) (?s, ?l, Bk # ?r) ?ires ==>
      inv_after_left_moving (?as, ?lm) (?s', Bk # ?l, ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 3)),
                   template_var 2))),
             template_var 1)
           ))),
    ("Abacus.locate_a_2_locate_a",
     "inv_locate_a (?as, ?am) (?q, ?aaa, Bk # ?xs) ?ires ==>
      inv_locate_a (?as, ?am) (?q, ?aaa, Oc # ?xs) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app
                    (template_app (template_hole 2, template_hole 0),
                     template_var 1)))),
             template_var 0)
           ))),
    ("Abacus.inv_locate_b_Oc_via_a",
     "inv_locate_a (?as, ?lm) (?q, ?l, Oc # ?r) ?ires ==>
      inv_locate_b (?as, ?lm) (?q, Oc # ?l, ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 2)),
                   template_var 1))),
             template_var 0)
           ))),
    ("Abacus.inv_locate_b",
     "inv_locate_b (?as, ?am) (?q, ?aaa, Oc # ?xs) ?ires ==>
      inv_locate_b (?as, ?am) (?q, Oc # ?aaa, ?xs) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_app
                     (template_app (template_hole 1, template_hole 0),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 2)),
                   template_var 1))),
             template_var 0)
           ))),
    ("Abacus.inv_on_right_moving_2_inv_on_right_moving",
     "inv_on_right_moving (?as, ?lm) (?x, ?l, Bk # ?r) ?ires ==>
      inv_after_write (?as, ?lm) (?y, ?l, Oc # ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_app
                     (template_app (template_hole 3, template_hole 2),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app (template_hole 3, template_hole 0),
                     template_var 2)))),
             template_var 1)
           ))),
    ("Abacus.inv_on_right_moving_Oc",
     "inv_on_right_moving (?as, ?lm) (?x, ?l, Oc # ?r) ?ires ==>
      inv_on_right_moving (?as, ?lm) (?y, Oc # ?l, ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_app
                     (template_app (template_hole 1, template_hole 0),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 3)),
                   template_var 2))),
             template_var 1)
           ))),
    ("Abacus_Mopup.mopup_jump_over2_Oc_nonempty",
     "mopup_jump_over2 (2 * ?n + 6, ?l, Oc # ?xs) ?lm ?n ?ires ==>
      ?l ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app
                         (template_app
                           (template_hole 11,
                            template_app
                             (template_app
                               (template_hole 10,
                                template_app
                                 (template_hole 9,
                                  template_app
                                   (template_hole 8, template_hole 7))),
                              template_var 4)),
                          template_app
                           (template_hole 9,
                            template_app
                             (template_hole 8,
                              template_app
                               (template_hole 6, template_hole 7))))),
                      template_app
                       (template_app (template_hole 5, template_var 3),
                        template_app
                         (template_app (template_hole 4, template_hole 3),
                          template_var 2)))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 3, template_hole 0)))),
    ("Abacus_Mopup.mopup_left_moving_nonempty",
     "mopup_left_moving (2 * ?n + 5, ?l, Oc # ?xs) ?lm ?n ?ires ==>
      ?l ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app
                         (template_app
                           (template_hole 11,
                            template_app
                             (template_app
                               (template_hole 10,
                                template_app
                                 (template_hole 9,
                                  template_app
                                   (template_hole 8, template_hole 7))),
                              template_var 4)),
                          template_app
                           (template_hole 9,
                            template_app
                             (template_hole 6,
                              template_app
                               (template_hole 8, template_hole 7))))),
                      template_app
                       (template_app (template_hole 5, template_var 3),
                        template_app
                         (template_app (template_hole 4, template_hole 3),
                          template_var 2)))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 3, template_hole 0)))),
    ("Abacus.tm_append_fetch_first",
     "[| fetch ?A ?s ?b = (?ac, ?ns); ?ns ~= 0 |]
      ==> fetch (?A @ ?B) ?s ?b = (?ac, ?ns)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app (template_hole 4, template_var 2),
            template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 0)),
             template_var 4),
           template_var 3),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 1)))),
    ("Abacus_Mopup.fetch_jump_over1_o",
     "fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) (Suc (2 * ?n)) Oc =
      (R, Suc (2 * ?n))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app (template_hole 10, template_var 0)),
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4))),
                   template_var 0)))),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))),
               template_var 0))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))),
             template_var 0))))),
    ("Abacus.abc_step_red",
     "abc_steps_l (?as, ?am) ?ap ?stp = (?bs, ?bm) ==>
      abc_steps_l (?as, ?am) ?ap (Suc ?stp) =
      abc_step_l (?bs, ?bm) (abc_fetch ?bs ?ap)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 4)),
             template_var 3),
           template_app (template_hole 2, template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3))))),
    ("Abacus.locate_b_2_a",
     "inv_locate_b (?as, ?am) (?q, ?aaa, Bk # ?xs) ?ires ==>
      inv_locate_a (?as, ?am) (Suc ?q, Bk # ?aaa, ?xs) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_app
                     (template_app (template_hole 3, template_hole 2),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_var 5),
                   template_var 4)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 0, template_var 3)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 2)),
                   template_var 1))),
             template_var 0)
           ))),
    ("Abacus.halt_lemma2''",
     "[| ?P (?f ?n); ~ ?P (?f 0) |]
      ==> EX n. ?P (?f n) & (ALL i<n. ~ ?P (?f i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 2, template_app (template_var 1, template_var 0))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_var 2,
                  template_app (template_var 1, template_hole 5))
                )
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Abacus.tpa_states",
     "[| ?tp = concat (take ?as (tms_of ?ap)); ?as <= length ?ap |]
      ==> start_of (layout_of ?ap) ?as = Suc (length ?tp div 2)",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_hole 13,
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app (template_hole 11, template_var 0)))),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 0)),
           template_var 1),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 2)),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (Suc (2 * ?n)) Bk =
      (W1, start_of ?ly ?as + 2 * ?n)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))),
               template_var 1))),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 10, template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))),
             template_var 1))))),
    ("Abacus_Mopup.fetch_jump_over1_b",
     "fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) (Suc (2 * ?n)) Bk =
      (R, Suc (Suc (2 * ?n)))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 11,
                 template_app (template_hole 10, template_var 0)),
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4))),
                   template_var 0)))),
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))),
               template_var 0))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_hole 3,
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))),
               template_var 0)))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (16 + 2 * ?n) Bk =
      (R, start_of ?ly ?e)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_app (template_hole 9, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 5, template_hole 4)))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))),
               template_var 1))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app (template_hole 9, template_var 3),
           template_var 0)))),
    ("Abacus.findnth_inv_layout_of_via_crsp",
     "crsp (layout_of ?ap) (?as, ?lm) (?s, ?l, ?r) ?ires ==>
      findnth_inv (layout_of ?ap) ?n (?as, ?lm) (Suc 0, ?l, ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 7)),
                  template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_var 2))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 6, template_var 7)),
                   template_var 0),
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_hole 0)),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_var 2))),
             template_var 1)
           ))),
    ("Abacus.inv_check_left_moving_in_middle_Bk_Oc",
     "inv_check_left_moving_in_middle (?as, ?lm) (?s, [], Oc # ?r) ?ires ==>
      inv_check_left_moving_in_middle (?as, ?lm) (?s', [Bk], Oc # ?r)
       ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 2, template_hole 0),
                       template_hole 3)),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_var 2)))),
             template_var 1)
           ))),
    ("Abacus.inv_check_left_moving_on_leftmost_Bk_Bk",
     "inv_on_left_moving_in_middle_B (?as, ?lm) (?s, [], Bk # ?r) ?ires ==>
      inv_check_left_moving_on_leftmost (?as, ?lm) (?s', [], Bk # Bk # ?r)
       ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_app
                   (template_app (template_hole 4, template_hole 3),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 6, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 2))))),
             template_var 1)
           ))),
    ("Abacus.inv_on_left_moving_in_middle_B_Bk_Oc",
     "inv_on_left_moving_norm (?as, ?lm) (?s, [], Oc # ?r) ?ires ==>
      inv_on_left_moving_in_middle_B (?as, ?lm) (?s, [], Bk # Oc # ?r)
       ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3)),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_app
                     (template_app (template_hole 3, template_hole 2),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 7, template_var 4),
                   template_var 3)),
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app (template_hole 3, template_hole 0),
                     template_app
                      (template_app (template_hole 3, template_hole 2),
                       template_var 1))))),
             template_var 0)
           ))),
    ("Abacus.dec_first_on_right_moving_Oc",
     "dec_first_on_right_moving ?n (?as, ?am) (?s, ?aaa, Oc # ?xs) ?ires ==>
      dec_first_on_right_moving ?n (?as, ?am) (?s', Oc # ?aaa, ?xs) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 7),
                  template_app
                   (template_app (template_hole 4, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 3, template_var 4),
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_app
                     (template_app (template_hole 1, template_hole 0),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 7),
                 template_app
                  (template_app (template_hole 4, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 3)),
                   template_var 2))),
             template_var 1)
           ))),
    ("Abacus.tm_shift_fetch",
     "[| fetch ?A ?s ?b = (?ac, ?ns); ?ns ~= 0 |]
      ==> fetch (Turing.shift ?A ?off) ?s ?b = (?ac, ?ns + ?off)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 0)),
             template_var 4),
           template_var 3),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (Suc (2 * ?n)) Oc =
      (R, Suc (start_of ?ly ?as) + 2 * ?n)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_hole 4))),
               template_var 1))),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))),
             template_var 1))))),
    ("Abacus.dec_left_move_Bk_tail",
     "dec_check_right_move (?as, ?am) (?s, ?l, Bk # ?r) ?ires ==>
      dec_left_move (?as, ?am) (?s', tl ?l, hd ?l # Bk # ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 7, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 1, template_var 3)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 0, template_var 3)),
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_var 2))))),
             template_var 1)
           ))),
    ("Abacus.dec_check_right_move_Oc_tail",
     "dec_check_right_move (?as, ?am) (?s, ?l, Oc # ?r) ?ires ==>
      dec_after_write (?as, ?am) (?s', tl ?l, hd ?l # Oc # ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 7, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 1, template_var 3)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 0, template_var 3)),
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_var 2))))),
             template_var 1)
           ))),
    ("Abacus.inv_on_left_moving_Bk_tail",
     "dec_left_move (?as, ?am) (?s, ?l, Bk # ?r) ?ires ==>
      inv_on_left_moving (?as, ?am) (?s', tl ?l, hd ?l # Bk # ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 7, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 1, template_var 3)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 0, template_var 3)),
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_var 2))))),
             template_var 1)
           ))),
    ("Abacus.dec_after_clear_Bk_tail",
     "dec_on_right_moving (?as, ?am) (?s, ?l, Bk # ?r) ?ires ==>
      dec_after_clear (?as, ?am) (?s', tl ?l, hd ?l # Bk # ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 7, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 1, template_var 3)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 0, template_var 3)),
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_var 2))))),
             template_var 1)
           ))),
    ("Abacus.inv_check_left_moving_in_middle_2_on_left_moving_in_middle_B",
     "inv_check_left_moving_in_middle (?as, ?lm) (?s, Bk # ?list, Oc # ?r)
       ?ires ==>
      inv_on_left_moving_in_middle_B (?as, ?lm) (?s', ?list, Bk # Oc # ?r)
       ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_hole 2),
                        template_var 3)),
                    template_app
                     (template_app (template_hole 3, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 6, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app
                      (template_app (template_hole 3, template_hole 1),
                       template_var 2))))),
             template_var 1)
           ))),
    ("Abacus.inv_on_left_moving_norm_Oc_Oc_via_middle",
     "inv_check_left_moving_in_middle (?as, ?lm) (?s, Oc # ?list, Oc # ?r)
       ?ires ==>
      inv_on_left_moving_norm (?as, ?lm) (?s', ?list, Oc # Oc # ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_hole 1),
                        template_var 3)),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 2))))),
             template_var 1)
           ))),
    ("Abacus.from_on_left_moving_to_check_left_moving",
     "inv_on_left_moving_in_middle_B (?as, ?lm) (?s, Bk # ?list, Bk # ?r)
       ?ires ==>
      inv_check_left_moving_on_leftmost (?as, ?lm)
       (?s', ?list, Bk # Bk # ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app
                     (template_hole 3,
                      template_app
                       (template_app (template_hole 2, template_hole 1),
                        template_var 3)),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_app (template_hole 2, template_hole 1),
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 2))))),
             template_var 1)
           ))),
    ("Abacus.inv_check_left_moving_in_middle_Oc_Bk",
     "inv_on_left_moving_in_middle_B (?as, ?lm) (?s, Oc # ?list, Bk # ?r)
       ?ires ==>
      inv_check_left_moving_in_middle (?as, ?lm) (?s', ?list, Oc # Bk # ?r)
       ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 3, template_hole 2),
                        template_var 3)),
                    template_app
                     (template_app (template_hole 3, template_hole 1),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 6, template_var 6),
                   template_var 5)),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_app
                    (template_app (template_hole 3, template_hole 2),
                     template_app
                      (template_app (template_hole 3, template_hole 1),
                       template_var 2))))),
             template_var 1)
           ))),
    ("Abacus_Mopup.ariths",
     "[| 0 < ?s; ?s <= 2 * ?n; ?s mod 2 ~= Suc 0 |] ==> ~ ?s <= Suc 0",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_hole 4))),
            template_var 0)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_hole 4))),
              template_app (template_hole 0, template_hole 9))
            )],
       template_negation
        (
           template_inequation
            (less_equals, template_var 1,
             template_app (template_hole 0, template_hole 9))
           ))),
    ("Abacus.inv_check_left_moving_startof_nonempty",
     "inv_check_left_moving (?as, abc_lm_s ?am ?n 0)
       (start_of (layout_of ?aprog) ?as + 2 * ?n + 14, [], Oc # ?xs) ?ires =
      False",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 17,
             template_app
              (template_app (template_hole 16, template_var 5),
               template_app
                (template_app
                  (template_app (template_hole 15, template_var 4),
                   template_var 3),
                 template_hole 14))),
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app
                          (template_hole 11,
                           template_app (template_hole 10, template_var 2)),
                         template_var 5)),
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7, template_hole 6))),
                       template_var 3))),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_hole 5,
                       template_app (template_hole 5, template_hole 6)))))),
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 1)))),
         template_var 0),
       template_hole 0)),
    ("Abacus.map_length_ci",
     "map (length o (%(xa, y). ci (layout_of ?xs @ [length_of ?x]) xa y))
       (tpairs_of ?xs) =
      map (length o (%(x, y). ci (layout_of ?xs) x y)) (tpairs_of ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_app (template_hole 7, t_empty))),
         template_app (template_hole 0, template_var 1)),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_app (template_hole 7, t_empty))),
         template_app (template_hole 0, template_var 1)))),
    ("Abacus_Mopup.fetch_aft_erase_a_o",
     "fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n))
       (Suc (Suc (2 * ?n))) Oc =
      (W0, Suc (2 * ?n + 2))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 12,
                 template_app (template_hole 11, template_var 0)),
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_hole 5))),
                   template_var 0)))),
           template_app
            (template_hole 4,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5))),
                 template_var 0)))),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5))),
                 template_var 0)),
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5))))))),
    ("Abacus.inv_locate_b_2_after_write",
     "inv_locate_b (?as, ?am) (?n, ?aaa, Bk # ?xs) ?ires ==>
      inv_after_write (?as, abc_lm_s ?am ?n (Suc (abc_lm_v ?am ?n)))
       (?s, ?aaa, Oc # ?xs) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_app
                   (template_app (template_hole 7, template_var 3),
                    template_app
                     (template_app (template_hole 6, template_hole 5),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 9, template_var 6),
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_app
                      (template_hole 2,
                       template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 4))))),
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_app
                  (template_app (template_hole 7, template_var 3),
                   template_app
                    (template_app (template_hole 6, template_hole 0),
                     template_var 2)))),
             template_var 1)
           ))),
    ("Abacus.dec_first_on_right_moving_Oc_via_inv_locate_n_b",
     "inv_locate_n_b (?as, ?am) (?n, ?aaa, Oc # ?xs) ?ires ==>
      dec_first_on_right_moving ?n (?as, abc_lm_s ?am ?n (abc_lm_v ?am ?n))
       (?s, Oc # ?aaa, ?xs) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_app
                  (template_app (template_hole 7, template_var 6),
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 4),
                     template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4)))),
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_hole 3),
                       template_var 3)),
                   template_var 2))),
             template_var 1)
           ))),
    ("Abacus_Mopup.drop_tape_of_cons",
     "[| Suc ?q < length ?lm; ?x = ?lm ! ?q |]
      ==> <drop ?q ?lm> = Oc # Oc \<up> ?x @ Bk # <drop (Suc ?q) ?lm>",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 11, template_var 2),
          template_app (template_hole 10, template_var 1)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 2))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 3)),
             template_app
              (template_app (template_hole 4, template_hole 0),
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 11, template_var 2)),
                   template_var 1)))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (Suc (Suc (2 * ?n)))
       Oc =
      (R, start_of ?ly ?as + 2 * ?n + 2)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)))),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_hole 4)))))),
    ("Abacus_Mopup.fetch_aft_erase_a_b",
     "fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n))
       (Suc (Suc (2 * ?n))) Bk =
      (L, Suc (2 * ?n + 4))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 12,
                 template_app (template_hole 11, template_var 0)),
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_hole 5))),
                   template_var 0)))),
           template_app
            (template_hole 4,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5))),
                 template_var 0)))),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5))),
                 template_var 0)),
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 6, template_hole 5)))))))),
    ("Abacus_Mopup.fetch_aft_erase_c_b",
     "fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) (2 * ?n + 4) Bk =
      (R, Suc (2 * ?n + 1))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 13,
                 template_app (template_hole 12, template_var 0)),
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 6))),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6))),
                 template_var 0)),
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app (template_hole 7, template_hole 6))))),
         template_hole 4),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6))),
                 template_var 0)),
             template_hole 0))))),
    ("Abacus.startof_Suc2",
     "abc_fetch ?as ?ap = Some (Dec ?n ?e) ==>
      start_of (layout_of ?ap) (Suc ?as) =
      start_of (layout_of ?ap) ?as + 2 * ?n + 16",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 3),
            template_var 2),
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 2)),
           template_app (template_hole 5, template_var 3)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_var 2)),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0))),
                 template_var 1))),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 1, template_hole 0))))))))),
    ("Abacus_Mopup.mopup_aft_erase_a_via_jump_over1",
     "mopup_jump_over1 (Suc (2 * ?n), ?l, []) ?lm ?n ?ires ==>
      mopup_aft_erase_a (Suc (Suc (2 * ?n)), Bk # ?l, []) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app
                         (template_hole 9,
                          template_app
                           (template_app
                             (template_hole 8,
                              template_app
                               (template_hole 7,
                                template_app
                                 (template_hole 6, template_hole 5))),
                            template_var 3))),
                      template_app
                       (template_app (template_hole 4, template_var 2),
                        template_hole 3))),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_app
                              (template_hole 8,
                               template_app
                                (template_hole 7,
                                 template_app
                                  (template_hole 6, template_hole 5))),
                             template_var 3)))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 2)),
                       template_hole 3))),
                 template_var 1),
               template_var 3),
             template_var 0)
           ))),
    ("Abacus_Mopup.mopup_stop_via_jump_over2",
     "mopup_jump_over2 (2 * ?n + 6, ?l, Bk # ?xs) ?lm ?n ?ires ==>
      mopup_stop (0, Bk # ?l, ?xs) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app
                         (template_app
                           (template_hole 10,
                            template_app
                             (template_app
                               (template_hole 9,
                                template_app
                                 (template_hole 8,
                                  template_app
                                   (template_hole 7, template_hole 6))),
                              template_var 4)),
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 7,
                              template_app
                               (template_hole 5, template_hole 6))))),
                      template_app
                       (template_app (template_hole 4, template_var 3),
                        template_app
                         (template_app (template_hole 3, template_hole 2),
                          template_var 2)))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 11, template_hole 0),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_var 3)),
                       template_var 2))),
                 template_var 1),
               template_var 4),
             template_var 0)
           ))),
    ("Abacus.inv_locate_n_b_Oc_via_at_begin_fst_awtn",
     "[| 0 < abc_lm_v ?am ?n;
         at_begin_fst_awtn (?as, ?am) (?n, ?aaa, Oc # ?xs) ?ires |]
      ==> inv_locate_n_b (?as, ?am) (?n, Oc # ?aaa, ?xs) ?ires",
     template_implication
      ([template_inequation
         (less_than, template_hole 8,
          template_app
           (template_app (template_hole 7, template_var 5),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 2)),
                   template_var 1))),
             template_var 0)
           ))),
    ("Abacus.inv_locate_n_b_Oc_via_at_begin_norm",
     "[| 0 < abc_lm_v ?am ?n;
         at_begin_norm (?as, ?am) (?n, ?aaa, Oc # ?xs) ?ires |]
      ==> inv_locate_n_b (?as, ?am) (?n, Oc # ?aaa, ?xs) ?ires",
     template_implication
      ([template_inequation
         (less_than, template_hole 8,
          template_app
           (template_app (template_hole 7, template_var 5),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 2)),
                   template_var 1))),
             template_var 0)
           ))),
    ("Abacus.inv_locate_n_b_Oc_via_inv_locate_n_a",
     "[| 0 < abc_lm_v ?am ?n;
         inv_locate_a (?as, ?am) (?n, ?aaa, Oc # ?xs) ?ires |]
      ==> inv_locate_n_b (?as, ?am) (?n, Oc # ?aaa, ?xs) ?ires",
     template_implication
      ([template_inequation
         (less_than, template_hole 8,
          template_app
           (template_app (template_hole 7, template_var 5),
            template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 5)),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 5)),
               template_app
                (template_app (template_hole 4, template_var 4),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 2)),
                   template_var 1))),
             template_var 0)
           ))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e))
       (Suc (Suc (Suc (2 * ?n)))) Bk =
      (L, start_of ?ly ?as + 2 * ?n + 3)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_app (template_hole 12, template_var 3),
                 template_app
                  (template_app (template_hole 11, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 10, template_var 1),
                 template_var 0))),
           template_app
            (template_hole 9,
             template_app
              (template_hole 9,
               template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_hole 5))),
                   template_var 1))))),
         template_hole 4),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 11, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5))),
                 template_var 1))),
           template_app
            (template_hole 7,
             template_app (template_hole 0, template_hole 5)))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e))
       (Suc (Suc (Suc (2 * ?n)))) Oc =
      (R, start_of ?ly ?as + 2 * ?n + 2)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_hole 8,
             template_app
              (template_hole 8,
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_hole 4))),
                   template_var 1))))),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_hole 4)))))),
    ("Abacus_Mopup.fetch_aft_erase_b_b",
     "fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) (2 * ?n + 3) Bk =
      (R, Suc (2 * ?n + 3))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 13,
                 template_app (template_hole 12, template_var 0)),
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_hole 8,
                       template_app (template_hole 7, template_hole 6))),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6))),
                 template_var 0)),
             template_app
              (template_hole 8,
               template_app (template_hole 4, template_hole 6)))),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_hole 6))),
                 template_var 0)),
             template_app
              (template_hole 8,
               template_app (template_hole 4, template_hole 6))))))),
    ("Abacus_Mopup.mopup_jump_over1_in_ctx",
     "mopup_jump_over1 (Suc (2 * ?n), ?l, Oc # ?xs) ?lm ?n ?ires ==>
      mopup_jump_over1 (Suc (2 * ?n), Oc # ?l, ?xs) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_hole 7,
                          template_app
                           (template_app
                             (template_hole 6,
                              template_app
                               (template_hole 5,
                                template_app
                                 (template_hole 4, template_hole 3))),
                            template_var 4))),
                      template_app
                       (template_app (template_hole 2, template_var 3),
                        template_app
                         (template_app (template_hole 1, template_hole 0),
                          template_var 2)))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 5,
                               template_app
                                (template_hole 4, template_hole 3))),
                           template_var 4))),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 3)),
                       template_var 2))),
                 template_var 1),
               template_var 4),
             template_var 0)
           ))),
    ("Abacus.locate_b_2_locate_a",
     "[| 0 < ?q;
         inv_locate_b (?as, ?am) (?q - Suc 0, ?aaa, Bk # ?xs) ?ires |]
      ==> inv_locate_a (?as, ?am) (?q, Bk # ?aaa, ?xs) ?ires",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 5),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3)),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 5),
                      template_app (template_hole 4, template_hole 9))),
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 7, template_var 4),
                   template_var 3)),
               template_app
                (template_app (template_hole 6, template_var 5),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 2)),
                   template_var 1))),
             template_var 0)
           ))),
    ("Abacus.fetch_findnth",
     "[| 0 < ?a; ?a < Suc (2 * ?n); ?a mod 2 = Suc 0 |]
      ==> fetch (findnth ?n) ?a Bk = (W1, ?a)",
     template_implication
      ([template_inequation (less_than, template_hole 13, template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 12,
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_hole 8))),
              template_var 0))),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_hole 8))),
          template_app (template_hole 12, template_hole 13))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_var 1),
           template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 1)))),
    ("Abacus_Mopup.tape_of_ex1",
     "EX rna ml.
         Oc \<up> ?a @ Bk \<up> ?rn = <ml> @ Bk \<up> rna |
         Oc \<up> ?a @ Bk \<up> ?rn = Bk # <ml> @ Bk \<up> rna",
     template_predicate (template_app (template_hole 9, t_empty))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (Suc (Suc (2 * ?n)))
       Bk =
      (L, start_of ?ly ?as + 2 * ?n + 13)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_app (template_hole 12, template_var 3),
                 template_app
                  (template_app (template_hole 11, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 10, template_var 1),
                 template_var 0))),
           template_app
            (template_hole 9,
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5))),
                 template_var 1)))),
         template_hole 4),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 11, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5))),
                 template_var 1))),
           template_app
            (template_hole 7,
             template_app
              (template_hole 0,
               template_app
                (template_hole 6,
                 template_app (template_hole 0, template_hole 5)))))))),
    ("Abacus_Mopup.fetch_aft_erase_c_o",
     "fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) (2 * ?n + 4) Oc =
      (W0, Suc (2 * ?n + 2))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 12,
                 template_app (template_hole 11, template_var 0)),
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_hole 5))),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5))),
                 template_var 0)),
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 6, template_hole 5))))),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5))),
                 template_var 0)),
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5))))))),
    ("Abacus_Mopup.fetch_jump_over2_o",
     "fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) (2 * ?n + 6) Oc =
      (L, 2 * ?n + 6)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 12,
                 template_app (template_hole 11, template_var 0)),
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_hole 5))),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5))),
                 template_var 0)),
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app (template_hole 3, template_hole 5))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5))),
               template_var 0)),
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 3, template_hole 5))))))),
    ("Abacus_Mopup.fetch_left_moving_b",
     "fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) (2 * ?n + 5) Bk =
      (L, 2 * ?n + 5)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 12,
                 template_app (template_hole 11, template_var 0)),
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_hole 5))),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5))),
                 template_var 0)),
             template_app
              (template_hole 7,
               template_app
                (template_hole 3,
                 template_app (template_hole 6, template_hole 5))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5))),
               template_var 0)),
           template_app
            (template_hole 7,
             template_app
              (template_hole 3,
               template_app (template_hole 6, template_hole 5))))))),
    ("Abacus_Mopup.fetch_left_moving_o",
     "fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) (2 * ?n + 5) Oc =
      (L, 2 * ?n + 6)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app
                (template_hole 12,
                 template_app (template_hole 11, template_var 0)),
               template_app
                (template_app (template_hole 10, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_hole 5))),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5))),
                 template_var 0)),
             template_app
              (template_hole 7,
               template_app
                (template_hole 3,
                 template_app (template_hole 6, template_hole 5))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5))),
               template_var 0)),
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 3, template_hole 5))))))),
    ("Abacus_Mopup.mopup_jump_over1_2_aft_erase_a",
     "mopup_jump_over1 (Suc (2 * ?n), ?l, Bk # ?xs) ?lm ?n ?ires ==>
      mopup_aft_erase_a (Suc (Suc (2 * ?n)), Bk # ?l, ?xs) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_app
                             (template_hole 7,
                              template_app
                               (template_hole 6,
                                template_app
                                 (template_hole 5, template_hole 4))),
                            template_var 4))),
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_app
                         (template_app (template_hole 2, template_hole 1),
                          template_var 2)))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 5, template_hole 4))),
                             template_var 4)))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_hole 1),
                           template_var 3)),
                       template_var 2))),
                 template_var 1),
               template_var 4),
             template_var 0)
           ))),
    ("Abacus.start_of_Suc1",
     "[| ?ly = layout_of ?ap; abc_fetch ?as ?ap = Some (Inc ?n) |]
      ==> start_of ?ly (Suc ?as) = start_of ?ly ?as + 2 * ?n + 9",
     template_implication
      ([template_equation
         (template_var 3, template_app (template_hole 13, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 1),
            template_var 2),
          template_app
           (template_hole 10,
            template_app (template_hole 9, template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 7, template_var 3),
           template_app (template_hole 6, template_var 1)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 7, template_var 3),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_var 0))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 0,
               template_app
                (template_hole 2,
                 template_app (template_hole 2, template_hole 1)))))))),
    ("Abacus.fetch_findnth",
     "[| 0 < ?a; ?a < Suc (2 * ?n); ?a mod 2 = Suc 0 |]
      ==> fetch (findnth ?n) ?a Oc = (R, Suc ?a)",
     template_implication
      ([template_inequation (less_than, template_hole 13, template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 12,
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_hole 8))),
              template_var 0))),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_hole 8))),
          template_app (template_hole 12, template_hole 13))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_var 1),
           template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 12, template_var 1))))),
    ("Abacus.fetch_findnth",
     "[| 0 < ?a; ?a < Suc (2 * ?n); ?a mod 2 ~= Suc 0 |]
      ==> fetch (findnth ?n) ?a Oc = (R, ?a)",
     template_implication
      ([template_inequation (less_than, template_hole 14, template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 13,
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_hole 9))),
              template_var 0))),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_hole 9))),
              template_app (template_hole 13, template_hole 14))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_var 1),
           template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 1)))),
    ("Abacus_Mopup.ariths",
     "[| 0 < ?s; ?s <= 2 * ?n; ?s mod 2 ~= Suc 0 |]
      ==> ?s - Suc 0 <= 2 * ?n",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_hole 5))),
            template_var 0)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_hole 5))),
              template_app (template_hole 1, template_hole 10))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 1, template_hole 10)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app (template_hole 6, template_hole 5))),
           template_var 0)))),
    ("Abacus_Mopup.Suc_Suc_div",
     "[| 0 < ?s; ?s mod 2 = Suc 0; Suc (Suc ?s) <= 2 * ?n |]
      ==> Suc (Suc (?s div 2)) <= ?n",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_hole 4))),
          template_app (template_hole 3, template_hole 9)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 3, template_var 1)),
          template_app
           (template_app
             (template_hole 1,
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_hole 4))),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4))))),
         template_var 0))),
    ("Abacus.replicateE",
     "[| ~ length ?lm1.0 < length ?am;
         ?am @ 0 \<up> (length ?lm1.0 - length ?am) @ [0] =
         ?lm1.0 @ ?m # ?lm2.0;
         0 < ?m |]
      ==> ?RR",
     template_implication
      ([template_negation
         (
            template_inequation
             (less_than, template_app (template_hole 7, template_var 4),
              template_app (template_hole 7, template_var 3))
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 3),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_hole 3,
                        template_app (template_hole 7, template_var 4)),
                      template_app (template_hole 7, template_var 3))),
                  template_hole 2)),
              template_app
               (template_app (template_hole 1, template_hole 2),
                template_hole 0))),
          template_app
           (template_app (template_hole 5, template_var 4),
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1))),
        template_inequation (less_than, template_hole 2, template_var 2)],
       template_predicate (template_var 0))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 4) Oc =
      (W0, start_of ?ly ?as + 2 * ?n + 3)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 5, template_hole 4))))),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app (template_hole 0, template_hole 4)))))),
    ("Abacus.inv_on_left_moving_tl",
     "[| abc_lm_v ?am ?n = 0;
         inv_locate_b (?as, ?am) (?n, ?aaa, []) ?ires |]
      ==> inv_on_left_moving (?as, abc_lm_s ?am ?n 0)
           (?s, tl ?aaa, [hd ?aaa]) ?ires",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 5),
            template_var 4),
          template_hole 10),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 3),
                    template_var 5)),
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_hole 5))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 8, template_var 3),
                   template_app
                    (template_app
                      (template_app (template_hole 3, template_var 5),
                       template_var 4),
                     template_hole 10))),
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 2, template_var 2)),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app (template_hole 0, template_var 2)),
                     template_hole 5)))),
             template_var 1)
           ))),
    ("Abacus.inv_locate",
     "[| inv_locate_b (?as, ?am) (?q, ?aaa, Bk # ?xs) ?ires;
         EX n. ?xs = Bk \<up> n |]
      ==> inv_locate_a (?as, ?am) (Suc ?q, Bk # ?aaa, ?xs) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_app
                     (template_app (template_hole 6, template_hole 5),
                      template_var 1)))),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 9, template_var 5),
                   template_var 4)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 0, template_var 3)),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_var 2)),
                   template_var 1))),
             template_var 0)
           ))),
    ("Abacus.fetch_findnth",
     "[| 0 < ?a; ?a < Suc (2 * ?n); ?a mod 2 ~= Suc 0 |]
      ==> fetch (findnth ?n) ?a Bk = (R, Suc ?a)",
     template_implication
      ([template_inequation (less_than, template_hole 14, template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 13,
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_hole 9))),
              template_var 0))),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_hole 9))),
              template_app (template_hole 13, template_hole 14))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_var 1),
           template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 13, template_var 1))))),
    ("Abacus_Mopup.ariths",
     "[| 0 < ?s; ?s <= 2 * ?n; ?s mod 2 ~= Suc 0 |]
      ==> (?s - Suc 0) mod 2 = Suc 0",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_hole 5))),
            template_var 0)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_hole 5))),
              template_app (template_hole 1, template_hole 10))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_hole 1, template_hole 10))),
           template_app
            (template_hole 7,
             template_app (template_hole 6, template_hole 5))),
         template_app (template_hole 1, template_hole 10)))),
    ("Abacus_Mopup.mopup_false1",
     "[| 0 < ?s; ?s <= 2 * ?n; ?s mod 2 = Suc 0; ~ Suc ?s <= 2 * ?n |]
      ==> ?RR",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 2),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_hole 4))),
            template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2),
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_hole 4))),
          template_app (template_hole 1, template_hole 9)),
        template_negation
         (
            template_inequation
             (less_equals, template_app (template_hole 1, template_var 2),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_hole 4))),
                template_var 1))
            )],
       template_predicate (template_var 0))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 4) Bk =
      (R, start_of ?ly ?as + 2 * ?n + 4)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_app (template_hole 9, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3))),
                 template_var 1)),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app (template_hole 4, template_hole 3))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 9, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3))),
                 template_var 1))),
           template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 4, template_hole 3))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 6) Bk =
      (L, start_of ?ly ?as + 2 * ?n + 6)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 3, template_hole 4))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 3, template_hole 4))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 6) Oc =
      (L, start_of ?ly ?as + 2 * ?n + 7)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 3, template_hole 4))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 3,
               template_app (template_hole 3, template_hole 4))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 5) Bk =
      (R, start_of ?ly ?as + 2 * ?n + 5)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 3,
                 template_app (template_hole 5, template_hole 4))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 3,
               template_app (template_hole 5, template_hole 4))))))),
    ("Abacus_Mopup.mopup_aft_erase_b_via_a",
     "mopup_aft_erase_a (Suc (Suc (2 * ?n)), ?l, Oc # ?xs) ?lm ?n ?ires ==>
      mopup_aft_erase_b (Suc (Suc (Suc (2 * ?n))), ?l, Bk # ?xs) ?lm ?n
       ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app
                         (template_hole 9,
                          template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_hole 8,
                                template_app
                                 (template_hole 7,
                                  template_app
                                   (template_hole 6, template_hole 5))),
                              template_var 4)))),
                      template_app
                       (template_app (template_hole 4, template_var 3),
                        template_app
                         (template_app (template_hole 3, template_hole 2),
                          template_var 2)))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 7,
                                   template_app
                                    (template_hole 6, template_hole 5))),
                               template_var 4))))),
                     template_app
                      (template_app (template_hole 4, template_var 3),
                       template_app
                        (template_app (template_hole 3, template_hole 0),
                         template_var 2)))),
                 template_var 1),
               template_var 4),
             template_var 0)
           ))),
    ("Abacus_Mopup.mopup_aft_erase_a_via_c",
     "mopup_aft_erase_c (2 * ?n + 4, ?l, []) ?lm ?n ?ires ==>
      mopup_aft_erase_a (Suc (Suc (2 * ?n)), Bk # ?l, []) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app
                         (template_app
                           (template_hole 10,
                            template_app
                             (template_app
                               (template_hole 9,
                                template_app
                                 (template_hole 8,
                                  template_app
                                   (template_hole 7, template_hole 6))),
                              template_var 3)),
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 7,
                              template_app
                               (template_hole 7, template_hole 6))))),
                      template_app
                       (template_app (template_hole 5, template_var 2),
                        template_hole 4))),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_hole 2,
                         template_app
                          (template_hole 2,
                           template_app
                            (template_app
                              (template_hole 9,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 7, template_hole 6))),
                             template_var 3)))),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 2)),
                       template_hole 4))),
                 template_var 1),
               template_var 3),
             template_var 0)
           ))),
    ("Abacus_Mopup.fetch_mopup_a_shift",
     "[| 0 < ?q; ?q <= ?n |]
      ==> fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) (2 * ?q) Bk =
          (R, 2 * ?q - 1)",
     template_implication
      ([template_inequation (less_than, template_hole 16, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 12,
                   template_app (template_hole 11, template_var 0)),
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_hole 5))),
                     template_var 0)))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 5))),
               template_var 1)),
           template_hole 4),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 5))),
                 template_var 1)),
             template_hole 0))))),
    ("Abacus_Mopup.mopup_a_nth",
     "[| ?q < ?n; ?x < 4 |]
      ==> mopup_a ?n ! (4 * ?q + ?x) = mopup_a (Suc ?q) ! (4 * ?q + ?x)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 8,
            template_app
             (template_hole 7,
              template_app (template_hole 7, template_hole 6))))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 7, template_hole 6)))),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 0, template_var 2))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 7, template_hole 6)))),
                 template_var 2)),
             template_var 0))))),
    ("Abacus.start_of_Suc2",
     "[| ?ly = layout_of ?ap; abc_fetch ?as ?ap = Some (Dec ?n ?e) |]
      ==> start_of ?ly (Suc ?as) = start_of ?ly ?as + 2 * ?n + 16",
     template_implication
      ([template_equation
         (template_var 4, template_app (template_hole 12, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 2),
            template_var 3),
          template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 4),
           template_app (template_hole 5, template_var 2)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 6, template_var 4),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0))),
                 template_var 1))),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 1, template_hole 0))))))))),
    ("Abacus.div_apart",
     "[| is_even ?x; is_even ?y |]
      ==> (?x + ?y) div 2 = ?x div 2 + ?y div 2",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_hole 3))),
          template_hole 2),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 0),
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_hole 3))),
          template_hole 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_hole 3)))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3))))))),
    ("Abacus.inv_locate_a_Bk_via_b",
     "[| inv_locate_b (?as, ?am) (?q, ?aaa, Bk # ?xs) ?ires;
         \<nexists>n. ?xs = Bk \<up> n |]
      ==> inv_locate_a (?as, ?am) (Suc ?q, Bk # ?aaa, ?xs) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_app
                   (template_app (template_hole 8, template_var 2),
                    template_app
                     (template_app (template_hole 7, template_hole 6),
                      template_var 1)))),
              template_var 0)
            ),
        template_negation
         (template_predicate (template_app (template_hole 4, t_empty)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 10, template_var 5),
                   template_var 4)),
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 0, template_var 3)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_var 2)),
                   template_var 1))),
             template_var 0)
           ))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 7) Bk =
      (L, start_of ?ly ?as + 2 * ?n + 10)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 3,
                 template_app (template_hole 3, template_hole 4))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 3,
                 template_app (template_hole 5, template_hole 4)))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 8) Bk =
      (W1, start_of ?ly ?as + 2 * ?n + 7)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 5, template_hole 4)))))),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 0,
               template_app (template_hole 0, template_hole 4))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 10) Bk =
      (R, start_of ?ly ?as + 2 * ?n + 4)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 5, template_hole 4)))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 5, template_hole 4))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 8) Oc =
      (R, start_of ?ly ?as + 2 * ?n + 8)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_app (template_hole 9, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3))),
                 template_var 1)),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_hole 4,
                   template_app (template_hole 4, template_hole 3)))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 9, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3))),
                 template_var 1))),
           template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_hole 4,
                 template_app (template_hole 4, template_hole 3)))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 12) Bk =
      (R, start_of ?ly ?as + 2 * ?n + 12)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 3, template_hole 4)))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app (template_hole 3, template_hole 4)))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 12) Oc =
      (L, start_of ?ly ?as + 2 * ?n + 10)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 3, template_hole 4)))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 3,
                 template_app (template_hole 5, template_hole 4)))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 10) Oc =
      (W0, start_of ?ly ?as + 2 * ?n + 9)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 5, template_hole 4)))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 3,
               template_app
                (template_hole 5,
                 template_app (template_hole 5, template_hole 4)))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 9) Bk =
      (L, start_of ?ly ?as + 2 * ?n + 9)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 5, template_hole 4)))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 3,
               template_app
                (template_hole 5,
                 template_app (template_hole 5, template_hole 4)))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 9) Oc =
      (R, start_of ?ly ?as + 2 * ?n + 8)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 5, template_hole 4)))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app (template_hole 5, template_hole 4)))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 11) Bk =
      (L, start_of ?ly ?as + 2 * ?n + 11)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 5, template_hole 4)))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 3,
               template_app
                (template_hole 3,
                 template_app (template_hole 5, template_hole 4)))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 11) Oc =
      (L, start_of ?ly ?as + 2 * ?n + 10)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 5, template_hole 4)))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 3,
                 template_app (template_hole 5, template_hole 4)))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (14 + 2 * ?n) Bk =
      (L, start_of ?ly ?as + 2 * ?n + 14)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 5, template_hole 4))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 4))),
               template_var 1))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app (template_hole 5, template_hole 4)))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (14 + 2 * ?n) Oc =
      (L, start_of ?ly ?as + 2 * ?n + 13)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 5, template_hole 4))))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_hole 4))),
               template_var 1))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 7,
             template_app
              (template_hole 5,
               template_app
                (template_hole 6,
                 template_app (template_hole 5, template_hole 4)))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (15 + 2 * ?n) Bk =
      (R, start_of ?ly ?as + 2 * ?n + 15)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 6, template_hole 5))))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 3, template_hole 5))),
               template_var 1))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 3, template_hole 5))),
                 template_var 1))),
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 6,
                 template_app (template_hole 6, template_hole 5)))))))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (15 + 2 * ?n) Oc =
      (L, start_of ?ly ?as + 2 * ?n + 13)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_hole 6,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 6, template_hole 5))))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 7,
                   template_app (template_hole 3, template_hole 5))),
               template_var 1))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 7,
                     template_app (template_hole 3, template_hole 5))),
                 template_var 1))),
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 3,
                 template_app (template_hole 6, template_hole 5)))))))),
    ("Abacus_Mopup.mopup_left_moving_via_aft_erase_a_emptylst",
     "mopup_aft_erase_a (Suc (Suc (2 * ?n)), ?l, []) ?lm ?n ?ires ==>
      mopup_left_moving (5 + 2 * ?n, tl ?l, [hd ?l]) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app
                       (template_hole 13,
                        template_app
                         (template_hole 12,
                          template_app
                           (template_hole 12,
                            template_app
                             (template_app
                               (template_hole 11,
                                template_app
                                 (template_hole 10,
                                  template_app
                                   (template_hole 9, template_hole 8))),
                              template_var 3)))),
                      template_app
                       (template_app (template_hole 7, template_var 2),
                        template_hole 6))),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_hole 10,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 9, template_hole 8)))),
                         template_app
                          (template_app
                            (template_hole 11,
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 9, template_hole 8))),
                           template_var 3))),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 2, template_var 2)),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app (template_hole 0, template_var 2)),
                         template_hole 6)))),
                 template_var 1),
               template_var 3),
             template_var 0)
           ))),
    ("Abacus_Mopup.mopup_aft_erase_c_via_b",
     "mopup_aft_erase_b (2 * ?n + 3, ?l, []) ?lm ?n ?ires ==>
      mopup_aft_erase_c (4 + 2 * ?n, Bk # ?l, []) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app
                         (template_app
                           (template_hole 10,
                            template_app
                             (template_app
                               (template_hole 9,
                                template_app
                                 (template_hole 8,
                                  template_app
                                   (template_hole 7, template_hole 6))),
                              template_var 3)),
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 5, template_hole 6)))),
                      template_app
                       (template_app (template_hole 4, template_var 2),
                        template_hole 3))),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 7, template_hole 6)))),
                         template_app
                          (template_app
                            (template_hole 9,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_hole 7, template_hole 6))),
                           template_var 3))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 2)),
                       template_hole 3))),
                 template_var 1),
               template_var 3),
             template_var 0)
           ))),
    ("Abacus_Mopup.mopup_aft_erase_c_aft_erase_a",
     "mopup_aft_erase_c (2 * ?n + 4, ?l, Bk # ?xs) ?lm ?n ?ires ==>
      mopup_aft_erase_a (Suc (Suc (2 * ?n)), Bk # ?l, ?xs) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_hole 8,
                                template_app
                                 (template_hole 7,
                                  template_app
                                   (template_hole 6, template_hole 5))),
                              template_var 4)),
                          template_app
                           (template_hole 7,
                            template_app
                             (template_hole 6,
                              template_app
                               (template_hole 6, template_hole 5))))),
                      template_app
                       (template_app (template_hole 4, template_var 3),
                        template_app
                         (template_app (template_hole 3, template_hole 2),
                          template_var 2)))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 0,
                         template_app
                          (template_hole 0,
                           template_app
                            (template_app
                              (template_hole 8,
                               template_app
                                (template_hole 7,
                                 template_app
                                  (template_hole 6, template_hole 5))),
                             template_var 4)))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_var 3)),
                       template_var 2))),
                 template_var 1),
               template_var 4),
             template_var 0)
           ))),
    ("Abacus_Mopup.mopup_inv_step",
     "[| ?n < length ?lm; mopup_inv (?s, ?l, ?r) ?lm ?n ?ires |]
      ==> mopup_inv
           (step0 (?s, ?l, ?r) (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)))
           ?lm ?n ?ires",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app (template_hole 14, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app (template_hole 12, template_var 3),
                      template_app
                       (template_app (template_hole 11, template_var 2),
                        template_var 1))),
                  template_var 4),
                template_var 5),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app (template_hole 12, template_var 3),
                         template_app
                          (template_app (template_hole 11, template_var 2),
                           template_var 1))),
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_hole 7, template_var 5)),
                           template_app
                            (template_app
                              (template_hole 6, template_hole 5),
                             template_app
                              (template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 2, template_hole 1))),
                               template_var 5)))),
                       template_hole 0))),
                 template_var 4),
               template_var 5),
             template_var 0)
           ))),
    ("Abacus.x_is_2n_arith",
     "[| ?x < Suc (Suc (2 * ?n)); Suc ?x mod 2 = Suc 0; ~ ?x < 2 * ?n |]
      ==> ?x = 2 * ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 8,
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_hole 4))),
                template_var 0)))),
        template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 8, template_var 1)),
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_hole 4))),
          template_app (template_hole 8, template_hole 1)),
        template_negation
         (
            template_inequation
             (less_than, template_var 1,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_hole 4))),
                template_var 0))
            )],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_hole 4))),
           template_var 0)))),
    ("Abacus.fetch_Dec",
     "fetch (ci ?ly (start_of ?ly ?as) (Dec ?n ?e)) (2 * ?n + 13) Bk =
      (R, start_of ?ly ?as + 2 * ?n + 16)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 9, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 3, template_hole 4)))))),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 6,
                     template_app (template_hole 5, template_hole 4))),
                 template_var 1))),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_hole 5,
                 template_app
                  (template_hole 5,
                   template_app (template_hole 5, template_hole 4))))))))),
    ("Abacus.inv_on_left_moving_in_middle_B_Oc_Bk_Bks_rev",
     "?lm1.0 ~= [] ==>
      inv_on_left_moving_in_middle_B (?as, ?lm1.0 @ [?m])
       (?s', Oc # Oc \<up> ?m @ Bk # <rev ?lm1.0> @ Bk # Bk # ?ires,
        Bk # Bk \<up> ?rn)
       ?ires",
     template_implication
      ([template_negation
         (template_equation (template_var 5, template_hole 13))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_var 4),
                   template_app
                    (template_app (template_hole 10, template_var 5),
                     template_app
                      (template_app (template_hole 9, template_var 3),
                       template_hole 13)))),
               template_app
                (template_app (template_hole 8, template_var 2),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_app (template_hole 3, template_var 3),
                             template_hole 5)),
                         template_app
                          (template_app (template_hole 6, template_hole 2),
                           template_app
                            (template_app
                              (template_hole 4,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 0, template_var 5))),
                             template_app
                              (template_app
                                (template_hole 6, template_hole 2),
                               template_app
                                (template_app
                                  (template_hole 6, template_hole 2),
                                 template_var 1))))))),
                   template_app
                    (template_app (template_hole 6, template_hole 2),
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_hole 2))))),
             template_var 1)
           ))),
    ("Abacus_Mopup.mopup_aft_erase_b_via_c",
     "mopup_aft_erase_c (2 * ?n + 4, ?l, Oc # ?xs) ?lm ?n ?ires ==>
      mopup_aft_erase_b (Suc (Suc (Suc (2 * ?n))), ?l, Bk # ?xs) ?lm ?n
       ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app
                         (template_app
                           (template_hole 10,
                            template_app
                             (template_app
                               (template_hole 9,
                                template_app
                                 (template_hole 8,
                                  template_app
                                   (template_hole 7, template_hole 6))),
                              template_var 4)),
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 7,
                              template_app
                               (template_hole 7, template_hole 6))))),
                      template_app
                       (template_app (template_hole 5, template_var 3),
                        template_app
                         (template_app (template_hole 4, template_hole 3),
                          template_var 2)))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_hole 1,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 7, template_hole 6))),
                               template_var 4))))),
                     template_app
                      (template_app (template_hole 5, template_var 3),
                       template_app
                        (template_app (template_hole 4, template_hole 0),
                         template_var 2)))),
                 template_var 1),
               template_var 4),
             template_var 0)
           ))),
    ("Abacus_Mopup.mopup_inv_steps",
     "[| ?n < length ?lm; mopup_inv (?s, ?l, ?r) ?lm ?n ?ires |]
      ==> mopup_inv
           (steps0 (?s, ?l, ?r) (mopup_a ?n @ Turing.shift mopup_b (2 * ?n))
             ?stp)
           ?lm ?n ?ires",
     template_implication
      ([template_inequation
         (less_than, template_var 6,
          template_app (template_hole 14, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app (template_hole 12, template_var 4),
                      template_app
                       (template_app (template_hole 11, template_var 3),
                        template_var 2))),
                  template_var 5),
                template_var 6),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_app (template_hole 12, template_var 4),
                           template_app
                            (template_app
                              (template_hole 11, template_var 3),
                             template_var 2))),
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app
                            (template_app
                              (template_hole 8,
                               template_app
                                (template_hole 7, template_var 6)),
                             template_app
                              (template_app
                                (template_hole 6, template_hole 5),
                               template_app
                                (template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 3,
                                     template_app
(template_hole 2, template_hole 1))),
                                 template_var 6)))),
                         template_hole 0)),
                     template_var 0)),
                 template_var 5),
               template_var 6),
             template_var 1)
           ))),
    ("Abacus.tm_append",
     "[| ?n < length ?tps; ?tp = ?tps ! ?n |]
      ==> EX tp1 tp2.
             concat ?tps = tp1 @ ?tp @ tp2 &
             tp1 = concat (take ?n ?tps) &
             tp2 = concat (drop (Suc ?n) ?tps)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 9, template_var 1)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 7, template_var 1),
            template_var 2))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Abacus.inv_on_left_moving_Bk_tl",
     "[| inv_locate_b (?as, ?am) (?n, ?aaa, Bk # ?xs) ?ires;
         abc_lm_v ?am ?n = 0 |]
      ==> inv_on_left_moving (?as, abc_lm_s ?am ?n 0)
           (?s, tl ?aaa, hd ?aaa # Bk # ?xs) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_app (template_hole 11, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_app
                   (template_app (template_hole 9, template_var 3),
                    template_app
                     (template_app (template_hole 8, template_hole 7),
                      template_var 2)))),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 4),
          template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 11, template_var 6),
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 4),
                     template_hole 4))),
               template_app
                (template_app (template_hole 10, template_var 0),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app (template_hole 1, template_var 3)),
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 0, template_var 3)),
                     template_app
                      (template_app (template_hole 8, template_hole 7),
                       template_var 2))))),
             template_var 1)
           ))),
    ("Abacus.tm_append_first_step_eq",
     "[| step (?s, ?l, ?r) (?A, ?off) = (?s', ?l', ?r'); ?s' ~= 0 |]
      ==> step (?s, ?l, ?r) (?A @ ?B, ?off) = (?s', ?l', ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 6, template_var 8),
                template_app
                 (template_app (template_hole 5, template_var 7),
                  template_var 6))),
            template_app
             (template_app (template_hole 4, template_var 5),
              template_var 4)),
          template_app
           (template_app (template_hole 6, template_var 3),
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1))),
        template_negation
         (template_equation (template_var 3, template_hole 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 8),
               template_app
                (template_app (template_hole 5, template_var 7),
                 template_var 6))),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 0)),
             template_var 4)),
         template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1))))),
    ("Abacus.halt_lemma2'",
     "[| wf ?LE;
         ALL n.
            ~ ?P (?f n) & ?Q (?f n) -->
            ?Q (?f (Suc n)) & (?f (Suc n), ?f n) : ?LE;
         ?Q (?f 0) |]
      ==> EX n. ?P (?f n)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_var 0,
              template_app (template_var 1, template_hole 1))
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Abacus.start_of_lessE",
     "[| abc_fetch ?as ?ap = Some (Dec ?n ?e);
         start_of (layout_of ?ap) ?as < start_of (layout_of ?ap) ?e;
         start_of (layout_of ?ap) ?e
         <= Suc (start_of (layout_of ?ap) ?as + 2 * ?n) |]
      ==> ?RR",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 12, template_var 4),
            template_var 3),
          template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1))),
        template_inequation
         (less_than,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 3)),
            template_var 4),
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 3)),
            template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 3)),
            template_var 1),
          template_app
           (template_hole 5,
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_var 3)),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_hole 0))),
                template_var 2))))],
       template_predicate (template_var 0))),
    ("Abacus_Mopup.mopup_aft_erase_b_2_aft_erase_c",
     "mopup_aft_erase_b (2 * ?n + 3, ?l, Bk # ?xs) ?lm ?n ?ires ==>
      mopup_aft_erase_c (4 + 2 * ?n, Bk # ?l, ?xs) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_hole 8,
                                template_app
                                 (template_hole 7,
                                  template_app
                                   (template_hole 6, template_hole 5))),
                              template_var 4)),
                          template_app
                           (template_hole 7,
                            template_app
                             (template_hole 4, template_hole 5)))),
                      template_app
                       (template_app (template_hole 3, template_var 3),
                        template_app
                         (template_app (template_hole 2, template_hole 1),
                          template_var 2)))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 6,
                               template_app
                                (template_hole 6, template_hole 5)))),
                         template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_hole 7,
                               template_app
                                (template_hole 6, template_hole 5))),
                           template_var 4))),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_hole 1),
                           template_var 3)),
                       template_var 2))),
                 template_var 1),
               template_var 4),
             template_var 0)
           ))),
    ("Abacus.start_of_ge",
     "[| abc_fetch ?as ?ap = Some (Dec ?n ?e); ?ly = layout_of ?ap;
         ?as < ?e |]
      ==> start_of ?ly ?as + 2 * ?n + 16 <= start_of ?ly ?e",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 12, template_var 4),
            template_var 3),
          template_app
           (template_hole 11,
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1))),
        template_equation
         (template_var 0, template_app (template_hole 8, template_var 3)),
        template_inequation (less_than, template_var 4, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_var 4)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0))),
                 template_var 2))),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 1, template_hole 0)))))),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_var 1)))),
    ("Abacus.inv_on_left_moving_in_middle_B_Bk",
     "[| inv_on_left_moving_norm (?as, ?lm) (?s, ?l, Oc # ?r) ?ires;
         hd ?l = Bk; ?l ~= [] |]
      ==> inv_on_left_moving_in_middle_B (?as, ?lm)
           (?s, tl ?l, Bk # Oc # ?r) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_app
                     (template_app (template_hole 9, template_hole 8),
                      template_var 1)))),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 6, template_var 2), template_hole 5),
        template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 12, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 11, template_var 3),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app (template_hole 0, template_var 2)),
                   template_app
                    (template_app (template_hole 9, template_hole 5),
                     template_app
                      (template_app (template_hole 9, template_hole 8),
                       template_var 1))))),
             template_var 0)
           ))),
    ("Abacus.inv_on_left_moving_norm_Oc_Oc",
     "[| inv_on_left_moving_norm (?as, ?lm) (?s, ?l, Oc # ?r) ?ires;
         hd ?l = Oc; ?l ~= [] |]
      ==> inv_on_left_moving_norm (?as, ?lm) (?s, tl ?l, Oc # Oc # ?r)
           ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_app
                   (template_app (template_hole 8, template_var 2),
                    template_app
                     (template_app (template_hole 7, template_hole 6),
                      template_var 1)))),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 4, template_var 2), template_hole 6),
        template_negation
         (template_equation (template_var 2, template_hole 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_var 5),
                   template_var 4)),
               template_app
                (template_app (template_hole 9, template_var 3),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 0, template_var 2)),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_var 1))))),
             template_var 0)
           ))),
    ("Abacus_Mopup.mopup_left_moving_emptylist",
     "mopup_left_moving (2 * ?n + 5, ?l, []) ?lm ?n ?ires ==>
      mopup_left_moving (2 * ?n + 5, tl ?l, [hd ?l]) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app
                         (template_app
                           (template_hole 10,
                            template_app
                             (template_app
                               (template_hole 9,
                                template_app
                                 (template_hole 8,
                                  template_app
                                   (template_hole 7, template_hole 6))),
                              template_var 3)),
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 5,
                              template_app
                               (template_hole 7, template_hole 6))))),
                      template_app
                       (template_app (template_hole 4, template_var 2),
                        template_hole 3))),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app
                            (template_app
                              (template_hole 9,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 7, template_hole 6))),
                             template_var 3)),
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 7, template_hole 6))))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app (template_hole 2, template_var 2)),
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app (template_hole 0, template_var 2)),
                         template_hole 3)))),
                 template_var 1),
               template_var 3),
             template_var 0)
           ))),
    ("Abacus_Mopup.erase2jumpover2",
     "[| ?q < length ?list;
         ALL rn.
            <drop ?q ?list> @ Bk # Bk \<up> ?n ~=
            Oc #
            Oc \<up> ?list ! ?q @
            Bk # <drop (Suc ?q) ?list> @ Bk \<up> rn |]
      ==> ?RR",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 12, template_var 2)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("Abacus.tm_append_first_steps_eq",
     "[| steps (?s, ?l, ?r) (?A, ?off) ?stp = (?s', ?l', ?r'); ?s' ~= 0 |]
      ==> steps (?s, ?l, ?r) (?A @ ?B, ?off) ?stp = (?s', ?l', ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 9),
                  template_app
                   (template_app (template_hole 5, template_var 8),
                    template_var 7))),
              template_app
               (template_app (template_hole 4, template_var 6),
                template_var 5)),
            template_var 4),
          template_app
           (template_app (template_hole 6, template_var 3),
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1))),
        template_negation
         (template_equation (template_var 3, template_hole 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 9),
                 template_app
                  (template_app (template_hole 5, template_var 8),
                   template_var 7))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 0)),
               template_var 5)),
           template_var 4),
         template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1))))),
    ("Abacus_Mopup.mopup_left_moving_via_aft_erase_a",
     "mopup_aft_erase_a (Suc (Suc (2 * ?n)), ?l, Bk # ?xs) ?lm ?n ?ires ==>
      mopup_left_moving (5 + 2 * ?n, tl ?l, hd ?l # Bk # ?xs) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app
                       (template_hole 13,
                        template_app
                         (template_hole 12,
                          template_app
                           (template_hole 12,
                            template_app
                             (template_app
                               (template_hole 11,
                                template_app
                                 (template_hole 10,
                                  template_app
                                   (template_hole 9, template_hole 8))),
                              template_var 4)))),
                      template_app
                       (template_app (template_hole 7, template_var 3),
                        template_app
                         (template_app (template_hole 6, template_hole 5),
                          template_var 2)))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app
                            (template_hole 10,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 9, template_hole 8)))),
                         template_app
                          (template_app
                            (template_hole 11,
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 9, template_hole 8))),
                           template_var 4))),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 1, template_var 3)),
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 0, template_var 3)),
                         template_app
                          (template_app (template_hole 6, template_hole 5),
                           template_var 2))))),
                 template_var 1),
               template_var 4),
             template_var 0)
           ))),
    ("Abacus_Mopup.fetch_bef_erase_a_o",
     "[| 0 < ?s; ?s <= 2 * ?n; ?s mod 2 = Suc 0 |]
      ==> fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) ?s Oc =
          (W0, ?s + 1)",
     template_implication
      ([template_inequation (less_than, template_hole 19, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_hole 17,
              template_app
               (template_hole 16,
                template_app (template_hole 15, template_hole 14))),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 12, template_var 1),
            template_app
             (template_hole 16,
              template_app (template_hole 15, template_hole 14))),
          template_app (template_hole 11, template_hole 19))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_var 0)),
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app
                      (template_hole 17,
                       template_app
                        (template_hole 16,
                         template_app
                          (template_hole 15, template_hole 14))),
                     template_var 0)))),
             template_var 1),
           template_hole 4),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("Abacus.dec_after_clear_Bk_strip_hd",
     "dec_first_on_right_moving ?n (?as, abc_lm_s ?am ?n (abc_lm_v ?am ?n))
       (?s, ?l, Bk # ?xs) ?ires ==>
      dec_after_clear (?as, abc_lm_s ?am ?n (abc_lm_v ?am ?n - Suc 0))
       (?s', tl ?l, hd ?l # Bk # ?xs) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 7),
                  template_app
                   (template_app (template_hole 12, template_var 6),
                    template_app
                     (template_app
                       (template_app (template_hole 11, template_var 5),
                        template_var 7),
                      template_app
                       (template_app (template_hole 10, template_var 5),
                        template_var 7)))),
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_app
                   (template_app (template_hole 8, template_var 3),
                    template_app
                     (template_app (template_hole 7, template_hole 6),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 12, template_var 6),
                   template_app
                    (template_app
                      (template_app (template_hole 11, template_var 5),
                       template_var 7),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 10, template_var 5),
                           template_var 7)),
                       template_app (template_hole 3, template_hole 2))))),
               template_app
                (template_app (template_hole 9, template_var 0),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 1, template_var 3)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 0, template_var 3)),
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_var 2))))),
             template_var 1)
           ))),
    ("Abacus.crsp_abc_step_via_stop",
     "[| abc_lm_v ?lm ?n = 0;
         inv_stop (?as, abc_lm_s ?lm ?n (abc_lm_v ?lm ?n))
          (start_of ?ly ?e, ?lb, ?rb) ?ires |]
      ==> crsp ?ly (abc_step_l (?as, ?lm) (Some (Dec ?n ?e)))
           (start_of ?ly ?e, ?lb, ?rb) ?ires",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 11, template_var 7),
            template_var 6),
          template_hole 10),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 5),
                    template_app
                     (template_app
                       (template_app (template_hole 7, template_var 7),
                        template_var 6),
                      template_app
                       (template_app (template_hole 11, template_var 7),
                        template_var 6)))),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 4),
                      template_var 3)),
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 4),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 8, template_var 5),
                       template_var 7)),
                   template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 3)))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 4),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_var 1))),
             template_var 0)
           ))),
    ("Abacus.tm_shift_eq_step",
     "[| step0 (?s, ?l, ?r) ?A = (?s', ?l', ?r'); ?s' ~= 0 |]
      ==> step (?s + ?off, ?l, ?r) (Turing.shift ?A ?off, ?off) =
          (?s' + ?off, ?l', ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 7),
                template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 5))),
            template_app
             (template_app (template_hole 5, template_var 4),
              template_hole 4)),
          template_app
           (template_app (template_hole 7, template_var 3),
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1))),
        template_negation
         (template_equation (template_var 3, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 1, template_var 7),
                   template_var 0)),
               template_app
                (template_app (template_hole 6, template_var 6),
                 template_var 5))),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1))))),
    ("Abacus_Mopup.mopup_aft_erase_b_via_c_helper",
     "EX rna ml.
         Oc \<up> ?a @ Bk # <?list> @ Bk \<up> ?rn = <ml> @ Bk \<up> rna |
         Oc \<up> ?a @ Bk # <?list> @ Bk \<up> ?rn =
         Bk # <ml> @ Bk \<up> rna",
     template_predicate (template_app (template_hole 9, t_empty))),
    ("Abacus.more_Ocs_dec_after_clear2",
     "dec_after_clear (?as, abc_lm_s ?am ?n (abc_lm_v ?am ?n - Suc 0))
       (start_of (layout_of ?aprog) ?as + 2 * ?n + 9, ?aa, []) ?ires ==>
      Suc 0 < length (takeWhile (%a. a = Oc) ?aa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 21, template_var 5),
                    template_app
                     (template_app
                       (template_app (template_hole 20, template_var 4),
                        template_var 3),
                      template_app
                       (template_app
                         (template_hole 19,
                          template_app
                           (template_app (template_hole 18, template_var 4),
                            template_var 3)),
                        template_app
                         (template_hole 17, template_hole 16))))),
                template_app
                 (template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_app
                           (template_hole 14,
                            template_app
                             (template_app
                               (template_hole 13,
                                template_app
                                 (template_hole 12, template_var 2)),
                              template_var 5)),
                          template_app
                           (template_app
                             (template_hole 11,
                              template_app
                               (template_hole 10,
                                template_app
                                 (template_hole 9, template_hole 8))),
                            template_var 3))),
                      template_app
                       (template_hole 10,
                        template_app
                         (template_hole 7,
                          template_app
                           (template_hole 9,
                            template_app
                             (template_hole 9, template_hole 8)))))),
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_hole 5))),
              template_var 0)
            )],
       template_inequation
        (less_than, template_app (template_hole 17, template_hole 16),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty), template_var 1))))),
    ("Abacus_Mopup.fetch_bef_erase_a_b",
     "[| 0 < ?s; ?s <= 2 * ?n; ?s mod 2 = Suc 0 |]
      ==> fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) ?s Bk =
          (R, ?s + 2)",
     template_implication
      ([template_inequation (less_than, template_hole 18, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app
             (template_hole 16,
              template_app
               (template_hole 15,
                template_app (template_hole 14, template_hole 13))),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 1),
            template_app
             (template_hole 15,
              template_app (template_hole 14, template_hole 13))),
          template_app (template_hole 10, template_hole 18))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)),
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app
                        (template_hole 15,
                         template_app
                          (template_hole 14, template_hole 13))),
                     template_var 0)))),
             template_var 1),
           template_hole 3),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app
              (template_hole 15,
               template_app (template_hole 14, template_hole 13))))))),
    ("Abacus_Mopup.mopup_jump_over2_context",
     "mopup_jump_over2 (2 * ?n + 6, ?l, Oc # ?xs) ?lm ?n ?ires ==>
      mopup_jump_over2 (2 * ?n + 6, tl ?l, hd ?l # Oc # ?xs) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app
                         (template_app
                           (template_hole 10,
                            template_app
                             (template_app
                               (template_hole 9,
                                template_app
                                 (template_hole 8,
                                  template_app
                                   (template_hole 7, template_hole 6))),
                              template_var 4)),
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 7,
                              template_app
                               (template_hole 5, template_hole 6))))),
                      template_app
                       (template_app (template_hole 4, template_var 3),
                        template_app
                         (template_app (template_hole 3, template_hole 2),
                          template_var 2)))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app
                            (template_app
                              (template_hole 9,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 7, template_hole 6))),
                             template_var 4)),
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 7,
                             template_app
                              (template_hole 5, template_hole 6))))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app (template_hole 1, template_var 3)),
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app (template_hole 0, template_var 3)),
                         template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_var 2))))),
                 template_var 1),
               template_var 4),
             template_var 0)
           ))),
    ("Abacus_Mopup.mopup_left_moving_hd_Bk",
     "mopup_left_moving (2 * ?n + 5, ?l, Bk # ?xs) ?lm ?n ?ires ==>
      mopup_left_moving (2 * ?n + 5, tl ?l, hd ?l # Bk # ?xs) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app
                         (template_app
                           (template_hole 10,
                            template_app
                             (template_app
                               (template_hole 9,
                                template_app
                                 (template_hole 8,
                                  template_app
                                   (template_hole 7, template_hole 6))),
                              template_var 4)),
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 5,
                              template_app
                               (template_hole 7, template_hole 6))))),
                      template_app
                       (template_app (template_hole 4, template_var 3),
                        template_app
                         (template_app (template_hole 3, template_hole 2),
                          template_var 2)))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app
                            (template_app
                              (template_hole 9,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 7, template_hole 6))),
                             template_var 4)),
                         template_app
                          (template_hole 8,
                           template_app
                            (template_hole 5,
                             template_app
                              (template_hole 7, template_hole 6))))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app (template_hole 1, template_var 3)),
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app (template_hole 0, template_var 3)),
                         template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_var 2))))),
                 template_var 1),
               template_var 4),
             template_var 0)
           ))),
    ("Abacus_Mopup.mopup_jump_over2_via_left_moving",
     "mopup_left_moving (2 * ?n + 5, ?l, Oc # ?xs) ?lm ?n ?ires ==>
      mopup_jump_over2 (2 * ?n + 6, tl ?l, hd ?l # Oc # ?xs) ?lm ?n ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app
                         (template_app
                           (template_hole 11,
                            template_app
                             (template_app
                               (template_hole 10,
                                template_app
                                 (template_hole 9,
                                  template_app
                                   (template_hole 8, template_hole 7))),
                              template_var 4)),
                          template_app
                           (template_hole 9,
                            template_app
                             (template_hole 6,
                              template_app
                               (template_hole 8, template_hole 7))))),
                      template_app
                       (template_app (template_hole 5, template_var 3),
                        template_app
                         (template_app (template_hole 4, template_hole 3),
                          template_var 2)))),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app
                          (template_hole 11,
                           template_app
                            (template_app
                              (template_hole 10,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_hole 8, template_hole 7))),
                             template_var 4)),
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_hole 6, template_hole 7))))),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app (template_hole 1, template_var 3)),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app (template_hole 0, template_var 3)),
                         template_app
                          (template_app (template_hole 4, template_hole 3),
                           template_var 2))))),
                 template_var 1),
               template_var 4),
             template_var 0)
           ))),
    ("Abacus.tm_shift_eq_steps",
     "[| steps0 (?s, ?l, ?r) ?A ?stp = (?s', ?l', ?r'); ?s' ~= 0 |]
      ==> steps (?s + ?off, ?l, ?r) (Turing.shift ?A ?off, ?off) ?stp =
          (?s' + ?off, ?l', ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 8),
                  template_app
                   (template_app (template_hole 6, template_var 7),
                    template_var 6))),
              template_app
               (template_app (template_hole 5, template_var 5),
                template_hole 4)),
            template_var 4),
          template_app
           (template_app (template_hole 7, template_var 3),
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1))),
        template_negation
         (template_equation (template_var 3, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 1, template_var 8),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 6, template_var 7),
                   template_var 6))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 0)),
               template_var 0)),
           template_var 4),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1))))),
    ("Abacus.crsp_steps",
     "[| ?ly = layout_of ?ap; ?tp = tm_of ?ap;
         crsp ?ly (?as, ?lm) (?s, ?l, ?r) ?ires |]
      ==> EX stp.
             crsp ?ly (abc_steps_l (?as, ?lm) ?ap ?n)
              (steps0 (?s, ?l, ?r) ?tp stp) ?ires",
     template_implication
      ([template_equation
         (template_var 9, template_app (template_hole 11, template_var 8)),
        template_equation
         (template_var 7, template_app (template_hole 9, template_var 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 9),
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2))),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Abacus.halt_lemma2'''",
     "[| ALL n.
            ~ ?P (?f n) & ?Q (?f n) -->
            ?Q (?f (Suc n)) & (?f (Suc n), ?f n) : ?LE;
         ?Q (?f 0); ALL i<?na. ~ ?P (?f i) |]
      ==> ?Q (?f ?na)",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate
         (
            template_app
             (template_var 2,
              template_app (template_var 3, template_hole 1))
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_var 2, template_app (template_var 3, template_var 0))
           ))),
    ("Abacus_Mopup.erase2jumpover1",
     "[| ?q < length ?list;
         ALL rn.
            <drop ?q ?list> ~=
            Oc #
            Oc \<up> ?list ! ?q @
            Bk # <drop (Suc ?q) ?list> @ Bk \<up> rn |]
      ==> <drop ?q ?list> = Oc # Oc \<up> ?list ! ?q",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 12, template_var 0)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_hole 5))))),
    ("Abacus.inv_after_move_2_inv_on_left_moving_B",
     "inv_after_move (?as, ?lm) (?s, ?l, []) ?ires ==>
      (?l = [] --> inv_on_left_moving (?as, ?lm) (?s', [], [Bk]) ?ires) &
      (?l ~= [] -->
       inv_on_left_moving (?as, ?lm) (?s', tl ?l, [hd ?l]) ?ires)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_hole 9))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_hole 9)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 12, template_var 5),
                         template_var 4)),
                     template_app
                      (template_app (template_hole 11, template_var 0),
                       template_app
                        (template_app (template_hole 10, template_hole 9),
                         template_app
                          (template_app (template_hole 4, template_hole 3),
                           template_hole 9)))),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_hole 9))),
               template_app
                (template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 12, template_var 5),
                       template_var 4)),
                   template_app
                    (template_app (template_hole 11, template_var 0),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app (template_hole 1, template_var 2)),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app (template_hole 0, template_var 2)),
                         template_hole 9)))),
                 template_var 1)))
           ))),
    ("Abacus_Mopup.fetch_bef_erase_b_b",
     "[| ?n < length ?lm; 0 < ?s; ?s <= 2 * ?n; is_even ?s |]
      ==> fetch (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) ?s Bk =
          (R, ?s - 1)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 19, template_var 1)),
        template_inequation (less_than, template_hole 18, template_var 0),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 16,
              template_app
               (template_hole 15,
                template_app (template_hole 14, template_hole 13))),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 0),
            template_app
             (template_hole 15,
              template_app (template_hole 14, template_hole 13))),
          template_hole 18)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_var 2)),
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app
                        (template_hole 15,
                         template_app
                          (template_hole 14, template_hole 13))),
                     template_var 2)))),
             template_var 0),
           template_hole 4),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Abacus_Mopup.mopup_false2",
     "[| 0 < ?s; ?s <= 2 * ?n; ?s mod 2 = Suc 0; Suc ?s ~= 2 * ?n;
         ~ Suc (Suc ?s) <= 2 * ?n |]
      ==> ?RR",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 2),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_hole 4))),
            template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2),
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_hole 4))),
          template_app (template_hole 1, template_hole 9)),
        template_negation
         (
            template_equation
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_hole 4))),
                template_var 1))
            ),
        template_negation
         (
            template_inequation
             (less_equals,
              template_app
               (template_hole 1,
                template_app (template_hole 1, template_var 2)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_hole 4))),
                template_var 1))
            )],
       template_predicate (template_var 0))),
    ("Abacus.t_split",
     "[| ?ly = layout_of ?aprog; abc_fetch ?as ?aprog = Some ?ins |]
      ==> EX tp1 tp2.
             concat (tms_of ?aprog) =
             tp1 @ ci ?ly (start_of ?ly ?as) ?ins @ tp2 &
             tp1 = concat (take ?as (tms_of ?aprog)) &
             tp2 = concat (drop (Suc ?as) (tms_of ?aprog))",
     template_implication
      ([template_equation
         (template_var 3, template_app (template_hole 14, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 12, template_var 1),
            template_var 2),
          template_app (template_hole 11, template_var 0))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Abacus.halt_lemma2",
     "[| wf ?LE; ?Q (?f 0); ~ ?P (?f 0);
         ALL n.
            ~ ?P (?f n) & ?Q (?f n) -->
            ?Q (?f (Suc n)) & (?f (Suc n), ?f n) : ?LE |]
      ==> EX n. ?P (?f n) & ?Q (?f n)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_predicate
         (
            template_app
             (template_var 2,
              template_app (template_var 1, template_hole 8))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_var 0,
                  template_app (template_var 1, template_hole 8))
                )
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Abacus.tm_append_second_fetch0_eq",
     "[| is_even (length ?A); ?off = length ?A div 2;
         fetch ?B ?s ?b = (?ac, 0); ?s ~= 0 |]
      ==> fetch (?A @ Turing.shift ?B ?off) (?s + ?off) ?b = (?ac, 0)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 5)),
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_hole 9))),
          template_hole 8),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 12, template_var 5)),
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_hole 9)))),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2),
            template_var 1),
          template_app
           (template_app (template_hole 4, template_var 0),
            template_hole 8)),
        template_negation
         (template_equation (template_var 2, template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 2, template_var 5),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 4))),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 4)),
           template_var 1),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 8)))),
    ("Abacus.more_Oc_dec_on_right_moving",
     "[| dec_on_right_moving (?as, ?am) (?s, ?aa, Bk # ?xs) ?ires;
         Suc (length (takeWhile (%a. a = Oc) (tl ?aa))) ~=
         length (takeWhile (%a. a = Oc) ?aa) |]
      ==> Suc (length (takeWhile (%a. a = Oc) (tl ?aa)))
          < length (takeWhile (%a. a = Oc) ?aa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_app
                   (template_app (template_hole 11, template_var 2),
                    template_app
                     (template_app (template_hole 10, template_hole 9),
                      template_var 1)))),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, t_empty),
                    template_app (template_hole 1, template_var 2)))),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, t_empty), template_var 2)))
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 1, template_var 2)))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, t_empty), template_var 2))))),
    ("Abacus.tm_append_second_fetch_eq",
     "[| is_even (length ?A); ?off = length ?A div 2;
         fetch ?B ?s ?b = (?ac, ?ns); ?ns ~= 0 |]
      ==> fetch (?A @ Turing.shift ?B ?off) (?s + ?off) ?b =
          (?ac, ?ns + ?off)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 6)),
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_hole 9))),
          template_hole 8),
        template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 12, template_var 6)),
            template_app
             (template_hole 11,
              template_app (template_hole 10, template_hole 9)))),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 2, template_var 6),
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 5))),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 5)),
           template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 5))))),
    ("Abacus.more_Ocs_dec_after_clear",
     "dec_after_clear (?as, abc_lm_s ?am ?n (abc_lm_v ?am ?n - Suc 0))
       (start_of (layout_of ?aprog) ?as + 2 * ?n + 9, ?aa, Bk # ?xs)
       ?ires ==>
      length ?xs - Suc 0
      < length ?xs + length (takeWhile (%a. a = Oc) ?aa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 23,
                  template_app
                   (template_app (template_hole 22, template_var 6),
                    template_app
                     (template_app
                       (template_app (template_hole 21, template_var 5),
                        template_var 4),
                      template_app
                       (template_app
                         (template_hole 20,
                          template_app
                           (template_app (template_hole 19, template_var 5),
                            template_var 4)),
                        template_app
                         (template_hole 18, template_hole 17))))),
                template_app
                 (template_app
                   (template_hole 16,
                    template_app
                     (template_app
                       (template_hole 15,
                        template_app
                         (template_app
                           (template_hole 15,
                            template_app
                             (template_app
                               (template_hole 14,
                                template_app
                                 (template_hole 13, template_var 3)),
                              template_var 6)),
                          template_app
                           (template_app
                             (template_hole 12,
                              template_app
                               (template_hole 11,
                                template_app
                                 (template_hole 10, template_hole 9))),
                            template_var 4))),
                      template_app
                       (template_hole 11,
                        template_app
                         (template_hole 8,
                          template_app
                           (template_hole 10,
                            template_app
                             (template_hole 10, template_hole 9)))))),
                  template_app
                   (template_app (template_hole 7, template_var 2),
                    template_app
                     (template_app (template_hole 6, template_hole 5),
                      template_var 1)))),
              template_var 0)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 20,
             template_app (template_hole 3, template_var 1)),
           template_app (template_hole 18, template_hole 17)),
         template_app
          (template_app
            (template_hole 15,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty),
               template_var 2)))))),
    ("Abacus.fewer_Ocs_dec_on_right_moving",
     "[| dec_on_right_moving (?as, ?lm) (?s, ?aa, []) ?ires;
         length (takeWhile (%a. a = Oc) (tl ?aa)) ~=
         length (takeWhile (%a. a = Oc) ?aa) - Suc 0 |]
      ==> length (takeWhile (%a. a = Oc) (tl ?aa))
          < length (takeWhile (%a. a = Oc) ?aa) - Suc 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_var 4),
                    template_var 3)),
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_app
                   (template_app (template_hole 12, template_var 1),
                    template_hole 11))),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, t_empty),
                  template_app (template_hole 4, template_var 1))),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, t_empty),
                      template_var 1))),
                template_app (template_hole 2, template_hole 1)))
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, t_empty),
             template_app (template_hole 4, template_var 1))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, t_empty), template_var 1))),
           template_app (template_hole 2, template_hole 1))))),
    ("Abacus.inv_after_move_2_inv_on_left_moving",
     "inv_after_move (?as, ?lm) (?s, ?l, Bk # ?r) ?ires ==>
      (?l = [] -->
       inv_on_left_moving (?as, ?lm) (?s', [], Bk # Bk # ?r) ?ires) &
      (?l ~= [] -->
       inv_on_left_moving (?as, ?lm) (?s', tl ?l, hd ?l # Bk # ?r) ?ires)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 11, template_var 4),
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_app
                     (template_app (template_hole 9, template_hole 8),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_hole 4)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 12, template_var 6),
                         template_var 5)),
                     template_app
                      (template_app (template_hole 11, template_var 0),
                       template_app
                        (template_app (template_hole 10, template_hole 4),
                         template_app
                          (template_app (template_hole 9, template_hole 8),
                           template_app
                            (template_app
                              (template_hole 9, template_hole 8),
                             template_var 2))))),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_hole 4))),
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 12, template_var 6),
                       template_var 5)),
                   template_app
                    (template_app (template_hole 11, template_var 0),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app (template_hole 1, template_var 3)),
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app (template_hole 0, template_var 3)),
                         template_app
                          (template_app (template_hole 9, template_hole 8),
                           template_var 2))))),
                 template_var 1)))
           ))),
    ("Abacus.inv_check_left_moving_Oc_cases",
     "inv_check_left_moving (?as, ?lm) (?s, ?l, Oc # ?r) ?ires ==>
      (?l = [] -->
       inv_on_left_moving (?as, ?lm) (?s', [], Bk # Oc # ?r) ?ires) &
      (?l ~= [] -->
       inv_on_left_moving (?as, ?lm) (?s', tl ?l, hd ?l # Oc # ?r) ?ires)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 12, template_var 4),
                  template_app
                   (template_app (template_hole 11, template_var 3),
                    template_app
                     (template_app (template_hole 10, template_hole 9),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 3),
                     template_hole 5)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 13, template_var 6),
                         template_var 5)),
                     template_app
                      (template_app (template_hole 12, template_var 0),
                       template_app
                        (template_app (template_hole 11, template_hole 5),
                         template_app
                          (template_app (template_hole 10, template_hole 3),
                           template_app
                            (template_app
                              (template_hole 10, template_hole 9),
                             template_var 2))))),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 6, template_var 3),
                     template_hole 5))),
               template_app
                (template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 13, template_var 6),
                       template_var 5)),
                   template_app
                    (template_app (template_hole 12, template_var 0),
                     template_app
                      (template_app
                        (template_hole 11,
                         template_app (template_hole 1, template_var 3)),
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app (template_hole 0, template_var 3)),
                         template_app
                          (template_app (template_hole 10, template_hole 9),
                           template_var 2))))),
                 template_var 1)))
           ))),
    ("Abacus.inv_on_left_moving_2_check_left_moving",
     "inv_on_left_moving (?as, ?lm) (?s, ?l, Bk # ?r) ?ires ==>
      (?l = [] -->
       inv_check_left_moving (?as, ?lm) (?s', [], Bk # Bk # ?r) ?ires) &
      (?l ~= [] -->
       inv_check_left_moving (?as, ?lm) (?s', tl ?l, hd ?l # Bk # ?r)
        ?ires)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 11, template_var 4),
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_app
                     (template_app (template_hole 9, template_hole 8),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_hole 4)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 12, template_var 6),
                         template_var 5)),
                     template_app
                      (template_app (template_hole 11, template_var 0),
                       template_app
                        (template_app (template_hole 10, template_hole 4),
                         template_app
                          (template_app (template_hole 9, template_hole 8),
                           template_app
                            (template_app
                              (template_hole 9, template_hole 8),
                             template_var 2))))),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_hole 4))),
               template_app
                (template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 12, template_var 6),
                       template_var 5)),
                   template_app
                    (template_app (template_hole 11, template_var 0),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app (template_hole 1, template_var 3)),
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app (template_hole 0, template_var 3)),
                         template_app
                          (template_app (template_hole 9, template_hole 8),
                           template_var 2))))),
                 template_var 1)))
           ))),
    ("Abacus.inv_on_left_moving_Oc_cases",
     "inv_on_left_moving (?as, ?lm) (?s, ?l, Oc # ?r) ?ires ==>
      (?l = [] -->
       inv_on_left_moving (?as, ?lm) (?s, [], Bk # Oc # ?r) ?ires) &
      (?l ~= [] -->
       inv_on_left_moving (?as, ?lm) (?s, tl ?l, hd ?l # Oc # ?r) ?ires)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_app
                     (template_app (template_hole 9, template_hole 8),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_hole 4)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 13,
                       template_app
                        (template_app (template_hole 12, template_var 5),
                         template_var 4)),
                     template_app
                      (template_app (template_hole 11, template_var 3),
                       template_app
                        (template_app (template_hole 10, template_hole 4),
                         template_app
                          (template_app (template_hole 9, template_hole 3),
                           template_app
                            (template_app
                              (template_hole 9, template_hole 8),
                             template_var 1))))),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_hole 4))),
               template_app
                (template_app
                  (template_app
                    (template_hole 13,
                     template_app
                      (template_app (template_hole 12, template_var 5),
                       template_var 4)),
                   template_app
                    (template_app (template_hole 11, template_var 3),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app (template_hole 1, template_var 2)),
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app (template_hole 0, template_var 2)),
                         template_app
                          (template_app (template_hole 9, template_hole 8),
                           template_var 1))))),
                 template_var 0)))
           ))),
    ("Abacus.step_eq_fetch'",
     "[| ?ly = layout_of ?ap; ?tp = tm_of ?ap;
         abc_fetch ?as ?ap = Some ?ins; start_of ?ly ?as <= ?s;
         ?s < start_of ?ly (Suc ?as) |]
      ==> fetch ?tp ?s ?b =
          fetch (ci ?ly (start_of ?ly ?as) ?ins) (Suc ?s - start_of ?ly ?as)
           ?b",
     template_implication
      ([template_equation
         (template_var 6, template_app (template_hole 13, template_var 5)),
        template_equation
         (template_var 4, template_app (template_hole 11, template_var 5)),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 3), template_var 5),
          template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 6, template_var 6), template_var 3),
          template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_app (template_hole 6, template_var 6),
            template_app (template_hole 4, template_var 3)))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 6),
                   template_app
                    (template_app (template_hole 6, template_var 6),
                     template_var 3)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 4, template_var 1)),
               template_app
                (template_app (template_hole 6, template_var 6),
                 template_var 3))),
           template_var 0)))),
    ("Abacus.step_eq_fetch",
     "[| ?ly = layout_of ?ap; ?tp = tm_of ?ap;
         abc_fetch ?as ?ap = Some ?ins;
         fetch (ci ?ly (start_of ?ly ?as) ?ins) (Suc ?s - start_of ?ly ?as)
          ?b =
         (?ac, ?ns);
         ?ns ~= 0 |]
      ==> fetch ?tp ?s ?b = (?ac, ?ns)",
     template_implication
      ([template_equation
         (template_var 8, template_app (template_hole 15, template_var 7)),
        template_equation
         (template_var 6, template_app (template_hole 13, template_var 7)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 5),
            template_var 7),
          template_app (template_hole 10, template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_app (template_hole 7, template_var 8),
                    template_app
                     (template_app (template_hole 6, template_var 8),
                      template_var 5)),
                  template_var 4)),
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_var 3)),
                template_app
                 (template_app (template_hole 6, template_var 8),
                  template_var 5))),
            template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 8, template_var 6),
             template_var 3),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Abacus.crsp_step_goto",
     "[| ?ly = layout_of ?ap; crsp ?ly (?as, ?lm) (?s, ?l, ?r) ?ires |]
      ==> EX stp>0.
             crsp ?ly (abc_step_l (?as, ?lm) (Some (Goto ?n)))
              (steps (?s, ?l, ?r)
                (ci ?ly (start_of ?ly ?as) (Goto ?n),
                 start_of ?ly ?as - Suc 0)
                stp)
              ?ires",
     template_implication
      ([template_equation
         (template_var 8, template_app (template_hole 17, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 16, template_var 8),
                  template_app
                   (template_app (template_hole 15, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 14, template_var 4),
                  template_app
                   (template_app (template_hole 13, template_var 3),
                    template_var 2))),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Abacus.crsp_step",
     "[| ?ly = layout_of ?ap; ?tp = tm_of ?ap;
         crsp ?ly (?as, ?lm) (?s, ?l, ?r) ?ires;
         abc_fetch ?as ?ap = Some ?ins |]
      ==> EX stp>0.
             crsp ?ly (abc_step_l (?as, ?lm) (Some ?ins))
              (steps0 (?s, ?l, ?r) ?tp stp) ?ires",
     template_implication
      ([template_equation
         (template_var 9, template_app (template_hole 16, template_var 8)),
        template_equation
         (template_var 7, template_app (template_hole 14, template_var 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 9),
                  template_app
                   (template_app (template_hole 12, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 11, template_var 4),
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 6), template_var 8),
          template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Abacus_Mopup.mopup_bef_erase_a_2_a",
     "[| ?n < length ?lm; 0 < ?s; ?s mod 2 = Suc 0;
         mopup_bef_erase_a (?s, ?l, Bk # ?xs) ?lm ?n ?ires;
         Suc (Suc ?s) <= 2 * ?n |]
      ==> mopup_bef_erase_a (Suc (Suc ?s), Bk # ?l, ?xs) ?lm ?n ?ires",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app (template_hole 14, template_var 4)),
        template_inequation (less_than, template_hole 13, template_var 3),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 3),
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_hole 8))),
          template_app (template_hole 7, template_hole 13)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_app
                       (template_app (template_hole 4, template_var 2),
                        template_app
                         (template_app (template_hole 3, template_hole 2),
                          template_var 1)))),
                  template_var 4),
                template_var 5),
              template_var 0)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app (template_hole 7, template_var 3)),
          template_app
           (template_app
             (template_hole 0,
              template_app
               (template_hole 10,
                template_app (template_hole 9, template_hole 8))),
            template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_hole 7,
                         template_app (template_hole 7, template_var 3))),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_var 2)),
                       template_var 1))),
                 template_var 4),
               template_var 5),
             template_var 0)
           ))),
    ("Abacus.findnth_correct",
     "[| ?ly = layout_of ?ap; crsp ?ly (?as, ?lm) (?s, ?l, ?r) ?ires |]
      ==> EX stp l' r'.
             steps0 (Suc 0, ?l, ?r) (findnth ?n) stp =
             (Suc (2 * ?n), l', r') &
             inv_locate_a (?as, ?lm) (?n, l', r') ?ires",
     template_implication
      ([template_equation
         (template_var 8, template_app (template_hole 18, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 17, template_var 8),
                  template_app
                   (template_app (template_hole 16, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 15, template_var 4),
                  template_app
                   (template_app (template_hole 14, template_var 3),
                    template_var 2))),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Abacus_Mopup.mopup_halt",
     "[| ?n < length ?lm; mopup_inv (Suc 0, ?l, ?r) ?lm ?n ?ires;
         ?f =
         (%stp. (steps0 (Suc 0, ?l, ?r)
                  (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) stp,
                 ?n));
         ?P = (%(c, n). is_final c) |]
      ==> EX stp. ?P (?f stp)",
     template_implication
      ([template_inequation
         (less_than, template_var 6,
          template_app (template_hole 21, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 20,
                    template_app
                     (template_app
                       (template_hole 19,
                        template_app (template_hole 18, template_hole 17)),
                      template_app
                       (template_app (template_hole 16, template_var 4),
                        template_var 3))),
                  template_var 5),
                template_var 6),
              template_var 2)
            ),
        template_equation (template_var 1, t_empty),
        template_equation
         (template_var 0, template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Abacus_Mopup.mopup_bef_erase",
     "[| ?n < length ?lm; 0 < ?s; ?s <= 2 * ?n; ?s mod 2 = Suc 0;
         ~ Suc (Suc ?s) <= 2 * ?n;
         mopup_bef_erase_a (?s, ?l, []) ?lm ?n ?ires |]
      ==> mopup_jump_over1 (?s', Bk # ?l, []) ?lm ?n ?ires",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app (template_hole 17, template_var 4)),
        template_inequation (less_than, template_hole 16, template_var 3),
        template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app
             (template_hole 14,
              template_app
               (template_hole 13,
                template_app (template_hole 12, template_hole 11))),
            template_var 5)),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 3),
            template_app
             (template_hole 13,
              template_app (template_hole 12, template_hole 11))),
          template_app (template_hole 8, template_hole 16)),
        template_negation
         (
            template_inequation
             (less_equals,
              template_app
               (template_hole 8,
                template_app (template_hole 8, template_var 3)),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_hole 11))),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_app
                       (template_app (template_hole 4, template_var 2),
                        template_hole 3))),
                  template_var 4),
                template_var 5),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 1, template_hole 0),
                           template_var 2)),
                       template_hole 3))),
                 template_var 4),
               template_var 5),
             template_var 1)
           ))),
    ("Abacus.crsp_step_inc",
     "[| ?ly = layout_of ?ap; crsp ?ly (?as, ?lm) (?s, ?l, ?r) ?ires;
         abc_fetch ?as ?ap = Some (Inc ?n) |]
      ==> EX stp>0.
             crsp ?ly (abc_step_l (?as, ?lm) (Some (Inc ?n)))
              (steps (?s, ?l, ?r)
                (ci ?ly (start_of ?ly ?as) (Inc ?n),
                 start_of ?ly ?as - Suc 0)
                stp)
              ?ires",
     template_implication
      ([template_equation
         (template_var 8, template_app (template_hole 19, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 18, template_var 8),
                  template_app
                   (template_app (template_hole 17, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 16, template_var 4),
                  template_app
                   (template_app (template_hole 15, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 13, template_var 6),
            template_var 7),
          template_app
           (template_hole 12,
            template_app (template_hole 11, template_var 0)))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Abacus_Mopup.mopup_bef_erase",
     "[| ?n < length ?lm; 0 < ?s; ?s <= 2 * ?n; ?s mod 2 ~= Suc 0;
         mopup_bef_erase_b (?s, ?l, Bk # ?xs) ?lm ?n ?ires; ?r = Bk # ?xs |]
      ==> mopup_bef_erase_a (?s - Suc 0, Bk # ?l, ?xs) ?lm ?n ?ires",
     template_implication
      ([template_inequation
         (less_than, template_var 6,
          template_app (template_hole 18, template_var 5)),
        template_inequation (less_than, template_hole 17, template_var 4),
        template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app
             (template_hole 15,
              template_app
               (template_hole 14,
                template_app (template_hole 13, template_hole 12))),
            template_var 6)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 9, template_var 4),
                template_app
                 (template_hole 14,
                  template_app (template_hole 13, template_hole 12))),
              template_app (template_hole 8, template_hole 17))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 4),
                      template_app
                       (template_app (template_hole 5, template_var 3),
                        template_app
                         (template_app (template_hole 4, template_hole 3),
                          template_var 2)))),
                  template_var 5),
                template_var 6),
              template_var 1)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app (template_hole 0, template_var 4),
                         template_app (template_hole 8, template_hole 17))),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 4, template_hole 3),
                           template_var 3)),
                       template_var 2))),
                 template_var 5),
               template_var 6),
             template_var 1)
           ))),
    ("Abacus.append_append_fetch",
     "[| is_even (length ?tp1.0); is_even (length ?tp);
         length ?tp1.0 div 2 < ?a &
         ?a <= length ?tp1.0 div 2 + length ?tp div 2 |]
      ==> fetch (?tp1.0 @ ?tp @ ?tp2.0) ?a ?b =
          fetch ?tp (?a - length ?tp1.0 div 2) ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 4)),
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_hole 10))),
          template_hole 9),
        template_equation
         (template_app
           (template_app
             (template_hole 14,
              template_app (template_hole 13, template_var 3)),
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_hole 10))),
          template_hole 9),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 6,
                        template_app (template_hole 13, template_var 4)),
                      template_app
                       (template_hole 12,
                        template_app
                         (template_hole 11, template_hole 10)))),
                  template_var 2)),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_hole 6,
                        template_app (template_hole 13, template_var 4)),
                      template_app
                       (template_hole 12,
                        template_app
                         (template_hole 11, template_hole 10)))),
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app (template_hole 13, template_var 3)),
                    template_app
                     (template_hole 12,
                      template_app (template_hole 11, template_hole 10))))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1))),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 13, template_var 4)),
                 template_app
                  (template_hole 12,
                   template_app (template_hole 11, template_hole 10))))),
           template_var 0)))),
    ("Abacus.tm_append_second_step_eq",
     "[| step0 (?s, ?l, ?r) ?B = (?s', ?l', ?r'); ?s' ~= 0;
         ?off = length ?A div 2; is_even (length ?A) |]
      ==> step0 (?s + ?off, ?l, ?r) (?A @ Turing.shift ?B ?off) =
          (?s' + ?off, ?l', ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 15,
              template_app
               (template_app (template_hole 14, template_var 8),
                template_app
                 (template_app (template_hole 13, template_var 7),
                  template_var 6))),
            template_app
             (template_app (template_hole 12, template_var 5),
              template_hole 11)),
          template_app
           (template_app (template_hole 14, template_var 4),
            template_app
             (template_app (template_hole 13, template_var 3),
              template_var 2))),
        template_negation
         (template_equation (template_var 4, template_hole 11)),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0)),
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_hole 4)))),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 7, template_var 0)),
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_hole 4))),
          template_hole 11)],
       template_equation
        (template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 2, template_var 8),
                   template_var 1)),
               template_app
                (template_app (template_hole 13, template_var 7),
                 template_var 6))),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 1))),
             template_hole 11)),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 13, template_var 3),
             template_var 2))))),
    ("Abacus.tm_append_second_halt_eq",
     "[| steps0 (Suc 0, ?l, ?r) ?B ?stp = (0, ?l', ?r'); tm_wf0 ?B;
         ?off = length ?A div 2; is_even (length ?A) |]
      ==> steps0 (Suc ?off, ?l, ?r) (?A @ Turing.shift ?B ?off) ?stp =
          (0, ?l', ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_hole 12)),
                  template_app
                   (template_app (template_hole 11, template_var 7),
                    template_var 6))),
              template_app
               (template_app (template_hole 10, template_var 5),
                template_hole 12)),
            template_var 4),
          template_app
           (template_app (template_hole 14, template_hole 12),
            template_app
             (template_app (template_hole 11, template_var 3),
              template_var 2))),
        template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 10, template_var 5),
                template_hole 12))
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 0)),
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_hole 3)))),
        template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 6, template_var 0)),
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_hole 3))),
          template_hole 12)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 14,
                   template_app (template_hole 13, template_var 1)),
                 template_app
                  (template_app (template_hole 11, template_var 7),
                   template_var 6))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 1))),
               template_hole 12)),
           template_var 4),
         template_app
          (template_app (template_hole 14, template_hole 12),
           template_app
            (template_app (template_hole 11, template_var 3),
             template_var 2))))),
    ("Abacus_Mopup.mopup_bef_erase_a_2_jump_over",
     "[| ?n < length ?lm; 0 < ?s; ?s mod 2 = Suc 0; ?s <= 2 * ?n;
         mopup_bef_erase_a (?s, ?l, Bk # ?xs) ?lm ?n ?ires;
         ~ Suc (Suc ?s) <= 2 * ?n |]
      ==> mopup_jump_over1 (?s', Bk # ?l, ?xs) ?lm ?n ?ires",
     template_implication
      ([template_inequation
         (less_than, template_var 6,
          template_app (template_hole 16, template_var 5)),
        template_inequation (less_than, template_hole 15, template_var 4),
        template_equation
         (template_app
           (template_app (template_hole 13, template_var 4),
            template_app
             (template_hole 12,
              template_app (template_hole 11, template_hole 10))),
          template_app (template_hole 9, template_hole 15)),
        template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 12,
                template_app (template_hole 11, template_hole 10))),
            template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 4),
                      template_app
                       (template_app (template_hole 4, template_var 3),
                        template_app
                         (template_app (template_hole 3, template_hole 2),
                          template_var 2)))),
                  template_var 5),
                template_var 6),
              template_var 1)
            ),
        template_negation
         (
            template_inequation
             (less_equals,
              template_app
               (template_hole 9,
                template_app (template_hole 9, template_var 4)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_hole 10))),
                template_var 6))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_hole 2),
                           template_var 3)),
                       template_var 2))),
                 template_var 5),
               template_var 6),
             template_var 1)
           ))),
    ("Abacus.crsp_step_in",
     "[| ?ly = layout_of ?ap; ?tp = tm_of ?ap;
         crsp ?ly (?as, ?lm) (?s, ?l, ?r) ?ires;
         abc_fetch ?as ?ap = Some ?ins |]
      ==> EX stp>0.
             crsp ?ly (abc_step_l (?as, ?lm) (Some ?ins))
              (steps (?s, ?l, ?r)
                (ci ?ly (start_of ?ly ?as) ?ins, start_of ?ly ?as - 1) stp)
              ?ires",
     template_implication
      ([template_equation
         (template_var 9, template_app (template_hole 20, template_var 8)),
        template_equation
         (template_var 7, template_app (template_hole 18, template_var 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 17, template_var 9),
                  template_app
                   (template_app (template_hole 16, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 15, template_var 4),
                  template_app
                   (template_app (template_hole 14, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 12, template_var 6),
            template_var 8),
          template_app (template_hole 11, template_var 0))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Abacus.step_eq_in",
     "[| ?ly = layout_of ?ap; ?tp = tm_of ?ap;
         abc_fetch ?as ?ap = Some ?ins;
         step (?s, ?l, ?r)
          (ci ?ly (start_of ?ly ?as) ?ins, start_of ?ly ?as - 1) =
         (?s', ?l', ?r');
         ?s' ~= 0 |]
      ==> step0 (?s, ?l, ?r) ?tp = (?s', ?l', ?r')",
     template_implication
      ([template_equation
         (template_var 10, template_app (template_hole 17, template_var 9)),
        template_equation
         (template_var 8, template_app (template_hole 15, template_var 9)),
        template_equation
         (template_app
           (template_app (template_hole 13, template_var 7),
            template_var 9),
          template_app (template_hole 12, template_var 6)),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 5),
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3))),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_app (template_hole 6, template_var 10),
                    template_app
                     (template_app (template_hole 5, template_var 10),
                      template_var 7)),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 5, template_var 10),
                    template_var 7)),
                template_hole 3))),
          template_app
           (template_app (template_hole 9, template_var 2),
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0))),
        template_negation
         (template_equation (template_var 2, template_hole 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 5),
               template_app
                (template_app (template_hole 8, template_var 4),
                 template_var 3))),
           template_app
            (template_app (template_hole 7, template_var 8),
             template_hole 0)),
         template_app
          (template_app (template_hole 9, template_var 2),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_var 0))))),
    ("Abacus.crsp_steps2",
     "[| ?ly = layout_of ?ap; ?tp = tm_of ?ap;
         crsp ?ly (0, ?lm) (Suc 0, ?l, ?r) ?ires; ?as < length ?ap;
         abc_steps_l (0, ?lm) ?ap ?stp = (?as, ?am) |]
      ==> EX stpa>=?stp.
             crsp ?ly (?as, ?am) (steps0 (Suc 0, ?l, ?r) ?tp stpa) ?ires",
     template_implication
      ([template_equation
         (template_var 9, template_app (template_hole 17, template_var 8)),
        template_equation
         (template_var 7, template_app (template_hole 15, template_var 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 14, template_var 9),
                  template_app
                   (template_app (template_hole 13, template_hole 12),
                    template_var 6)),
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_hole 12)),
                  template_app
                   (template_app (template_hole 9, template_var 5),
                    template_var 4))),
              template_var 3)
            ),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 8)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_var 6)),
              template_var 8),
            template_var 1),
          template_app
           (template_app (template_hole 13, template_var 2),
            template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Abacus.crsp_step_dec",
     "[| ?ly = layout_of ?ap; crsp ?ly (?as, ?lm) (?s, ?l, ?r) ?ires;
         abc_fetch ?as ?ap = Some (Dec ?n ?e) |]
      ==> EX stp>0.
             crsp ?ly (abc_step_l (?as, ?lm) (Some (Dec ?n ?e)))
              (steps (?s, ?l, ?r)
                (ci ?ly (start_of ?ly ?as) (Dec ?n ?e),
                 start_of ?ly ?as - Suc 0)
                stp)
              ?ires",
     template_implication
      ([template_equation
         (template_var 9, template_app (template_hole 19, template_var 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 18, template_var 9),
                  template_app
                   (template_app (template_hole 17, template_var 7),
                    template_var 6)),
                template_app
                 (template_app (template_hole 16, template_var 5),
                  template_app
                   (template_app (template_hole 15, template_var 4),
                    template_var 3))),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 13, template_var 7),
            template_var 8),
          template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 11, template_var 1),
              template_var 0)))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Abacus.tm_append_second_steps_eq",
     "[| steps0 (?s, ?l, ?r) ?B ?stp = (?s', ?l', ?r'); ?s' ~= 0;
         ?off = length ?A div 2; is_even (length ?A) |]
      ==> steps0 (?s + ?off, ?l, ?r) (?A @ Turing.shift ?B ?off) ?stp =
          (?s' + ?off, ?l', ?r')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 9),
                  template_app
                   (template_app (template_hole 13, template_var 8),
                    template_var 7))),
              template_app
               (template_app (template_hole 12, template_var 6),
                template_hole 11)),
            template_var 5),
          template_app
           (template_app (template_hole 14, template_var 4),
            template_app
             (template_app (template_hole 13, template_var 3),
              template_var 2))),
        template_negation
         (template_equation (template_var 4, template_hole 11)),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0)),
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_hole 4)))),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 7, template_var 0)),
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_hole 4))),
          template_hole 11)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 2, template_var 9),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 13, template_var 8),
                   template_var 7))),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 1))),
               template_hole 11)),
           template_var 5),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 13, template_var 3),
             template_var 2))))),
    ("Abacus.dec_first_on_right_moving_dec_after_clear_cases",
     "dec_first_on_right_moving ?n (?as, abc_lm_s ?am ?n (abc_lm_v ?am ?n))
       (?s, ?l, []) ?ires ==>
      (?l = [] -->
       dec_after_clear (?as, abc_lm_s ?am ?n (abc_lm_v ?am ?n - Suc 0))
        (?s', [], [Bk]) ?ires) &
      (?l ~= [] -->
       dec_after_clear (?as, abc_lm_s ?am ?n (abc_lm_v ?am ?n - Suc 0))
        (?s', tl ?l, [hd ?l]) ?ires)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 18, template_var 6),
                  template_app
                   (template_app (template_hole 17, template_var 5),
                    template_app
                     (template_app
                       (template_app (template_hole 16, template_var 4),
                        template_var 6),
                      template_app
                       (template_app (template_hole 15, template_var 4),
                        template_var 6)))),
                template_app
                 (template_app (template_hole 14, template_var 3),
                  template_app
                   (template_app (template_hole 13, template_var 2),
                    template_hole 12))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 2),
                     template_hole 12)),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 17, template_var 5),
                         template_app
                          (template_app
                            (template_app
                              (template_hole 16, template_var 4),
                             template_var 6),
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_app
                                  (template_hole 15, template_var 4),
                                 template_var 6)),
                             template_app
                              (template_hole 6, template_hole 5))))),
                     template_app
                      (template_app (template_hole 14, template_var 0),
                       template_app
                        (template_app (template_hole 13, template_hole 12),
                         template_app
                          (template_app (template_hole 4, template_hole 3),
                           template_hole 12)))),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 9, template_var 2),
                     template_hole 12))),
               template_app
                (template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 17, template_var 5),
                       template_app
                        (template_app
                          (template_app (template_hole 16, template_var 4),
                           template_var 6),
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_app
                                (template_hole 15, template_var 4),
                               template_var 6)),
                           template_app
                            (template_hole 6, template_hole 5))))),
                   template_app
                    (template_app (template_hole 14, template_var 0),
                     template_app
                      (template_app
                        (template_hole 13,
                         template_app (template_hole 1, template_var 2)),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app (template_hole 0, template_var 2)),
                         template_hole 12)))),
                 template_var 1)))
           ))),
    ("Abacus_Mopup.mopup_correct",
     "[| ?n < length ?am; ?am ! ?n = ?rs |]
      ==> EX stp i j.
             steps0 (Suc 0, Bk # Bk # ?ires, <?am> @ Bk \<up> ?k)
              (mopup_a ?n @ Turing.shift mopup_b (2 * ?n)) stp =
             (0, Bk \<up> i @ Bk # Bk # ?ires,
              Oc # Oc \<up> ?rs @ Bk \<up> j)",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 24, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 22, template_var 3),
            template_var 4),
          template_var 2)],
       template_predicate (template_app (template_hole 21, t_empty)))),
    ("Abacus.tinc_correct",
     "[| ?ly = layout_of ?ap; inv_locate_a (?as, ?lm) (?n, ?l, ?r) ?ires;
         ?lm' = abc_lm_s ?lm ?n (Suc (abc_lm_v ?lm ?n)) |]
      ==> EX stp l' r'.
             steps0 (Suc 0, ?l, ?r) tinc_b stp = (10, l', r') &
             inv_stop (?as, ?lm') (10, l', r') ?ires",
     template_implication
      ([template_equation
         (template_var 8, template_app (template_hole 20, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app (template_hole 18, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 17, template_var 4),
                  template_app
                   (template_app (template_hole 16, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_app (template_hole 15, template_var 5),
              template_var 4),
            template_app
             (template_hole 14,
              template_app
               (template_app (template_hole 13, template_var 5),
                template_var 4))))],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Abacus.compile_correct_unhalt",
     "[| ?ly = layout_of ?ap; ?tp = tm_of ?ap;
         crsp ?ly (0, ?lm) (1, ?l, ?r) ?ires; ?off = length ?tp div 2;
         ALL stp.
            case abc_steps_l (0, ?lm) ?ap stp of
            (as, am) => as < length ?ap |]
      ==> ALL stp.
             ~ is_final
                (steps0 (1, ?l, ?r) (?tp @ Turing.shift (mopup ?n) ?off)
                  stp)",
     template_implication
      ([template_equation
         (template_var 8, template_app (template_hole 26, template_var 7)),
        template_equation
         (template_var 6, template_app (template_hole 24, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 23, template_var 8),
                  template_app
                   (template_app (template_hole 22, template_hole 21),
                    template_var 5)),
                template_app
                 (template_app (template_hole 20, template_hole 19),
                  template_app
                   (template_app (template_hole 18, template_var 4),
                    template_var 3))),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 16,
              template_app (template_hole 15, template_var 6)),
            template_app
             (template_hole 14,
              template_app (template_hole 13, template_hole 12)))),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("Abacus.tp_correct'",
     "[| ?ly = layout_of ?ap; ?tp = tm_of ?ap;
         crsp ?ly (0, ?lm) (Suc 0, ?l, ?r) ?ires;
         abc_steps_l (0, ?lm) ?ap ?stp = (length ?ap, ?am) |]
      ==> EX stp k.
             steps0 (Suc 0, ?l, ?r) ?tp stp =
             (start_of ?ly (length ?ap), Bk # Bk # ?ires,
              <?am> @ Bk \<up> k)",
     template_implication
      ([template_equation
         (template_var 8, template_app (template_hole 21, template_var 7)),
        template_equation
         (template_var 6, template_app (template_hole 19, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 18, template_var 8),
                  template_app
                   (template_app (template_hole 17, template_hole 16),
                    template_var 5)),
                template_app
                 (template_app
                   (template_hole 15,
                    template_app (template_hole 14, template_hole 16)),
                  template_app
                   (template_app (template_hole 13, template_var 4),
                    template_var 3))),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 17, template_hole 16),
                  template_var 5)),
              template_var 7),
            template_var 1),
          template_app
           (template_app
             (template_hole 17,
              template_app (template_hole 10, template_var 7)),
            template_var 0))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Abacus.crsp_step_dec_b_e",
     "[| ?ly = layout_of ?ap; inv_locate_a (?as, ?lm) (?n, ?l, ?r) ?ires;
         abc_lm_v ?lm ?n = 0; abc_fetch ?as ?ap = Some (Dec ?n ?e) |]
      ==> EX stp>0.
             crsp ?ly (abc_step_l (?as, ?lm) (Some (Dec ?n ?e)))
              (steps (start_of ?ly ?as + 2 * ?n, ?l, ?r)
                (ci ?ly (start_of ?ly ?as) (Dec ?n ?e),
                 start_of ?ly ?as - Suc 0)
                stp)
              ?ires",
     template_implication
      ([template_equation
         (template_var 8, template_app (template_hole 27, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 26,
                  template_app
                   (template_app (template_hole 25, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 24, template_var 4),
                  template_app
                   (template_app (template_hole 23, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 21, template_var 5),
            template_var 4),
          template_hole 20),
        template_equation
         (template_app
           (template_app (template_hole 18, template_var 6),
            template_var 7),
          template_app
           (template_hole 17,
            template_app
             (template_app (template_hole 16, template_var 4),
              template_var 0)))],
       template_predicate (template_app (template_hole 15, t_empty)))),
    ("Abacus.steps_eq_in",
     "[| ?ly = layout_of ?ap; ?tp = tm_of ?ap;
         crsp ?ly (?as, ?lm) (?s, ?l, ?r) ?ires;
         abc_fetch ?as ?ap = Some ?ins;
         steps (?s, ?l, ?r)
          (ci ?ly (start_of ?ly ?as) ?ins, start_of ?ly ?as - 1) ?stp =
         (?s', ?l', ?r');
         ?s' ~= 0 |]
      ==> steps0 (?s, ?l, ?r) ?tp ?stp = (?s', ?l', ?r')",
     template_implication
      ([template_equation
         (template_var 13,
          template_app (template_hole 19, template_var 12)),
        template_equation
         (template_var 11,
          template_app (template_hole 17, template_var 12)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 16, template_var 13),
                  template_app
                   (template_app (template_hole 15, template_var 10),
                    template_var 9)),
                template_app
                 (template_app (template_hole 14, template_var 8),
                  template_app
                   (template_app (template_hole 13, template_var 7),
                    template_var 6))),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 10),
            template_var 12),
          template_app (template_hole 10, template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 14, template_var 8),
                  template_app
                   (template_app (template_hole 13, template_var 7),
                    template_var 6))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app
                     (template_app (template_hole 6, template_var 13),
                      template_app
                       (template_app (template_hole 5, template_var 13),
                        template_var 10)),
                    template_var 4)),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 5, template_var 13),
                      template_var 10)),
                  template_hole 3))),
            template_var 3),
          template_app
           (template_app (template_hole 14, template_var 2),
            template_app
             (template_app (template_hole 13, template_var 1),
              template_var 0))),
        template_negation
         (template_equation (template_var 2, template_hole 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 14, template_var 8),
                 template_app
                  (template_app (template_hole 13, template_var 7),
                   template_var 6))),
             template_app
              (template_app (template_hole 7, template_var 11),
               template_hole 0)),
           template_var 3),
         template_app
          (template_app (template_hole 14, template_var 2),
           template_app
            (template_app (template_hole 13, template_var 1),
             template_var 0))))),
    ("Abacus.steps_start_of_invb_inv_locate_a1",
     "[| ?r = [] | hd ?r = Bk; inv_locate_a (?as, ?lm) (?n, ?l, ?r) ?ires |]
      ==> EX stp la ra.
             steps (start_of ?ly ?as + 2 * ?n, ?l, ?r)
              (ci ?ly (start_of ?ly ?as) (Dec ?n ?e),
               start_of ?ly ?as - Suc 0)
              stp =
             (Suc (start_of ?ly ?as + 2 * ?n), la, ra) &
             inv_locate_b (?as, ?lm) (?n, la, ra) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 27,
                template_app
                 (template_app (template_hole 26, template_var 7),
                  template_hole 25)),
              template_app
               (template_app
                 (template_hole 24,
                  template_app (template_hole 23, template_var 7)),
                template_hole 22))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app (template_hole 20, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 19, template_var 4),
                  template_app
                   (template_app (template_hole 18, template_var 3),
                    template_var 7))),
              template_var 2)
            )],
       template_predicate (template_app (template_hole 17, t_empty)))),
    ("Abacus.crsp_step_inc_pre",
     "[| ?ly = layout_of ?ap; crsp ?ly (?as, ?lm) (?s, ?l, ?r) ?ires;
         abc_step_l (?as, ?lm) (Some (Inc ?n)) = (?asa, ?lma) |]
      ==> EX stp k.
             steps0 (Suc 0, ?l, ?r)
              (findnth ?n @ Turing.shift tinc_b (2 * ?n)) stp =
             (2 * ?n + 10, Bk # Bk # ?ires, <?lma> @ Bk \<up> k) &
             0 < stp",
     template_implication
      ([template_equation
         (template_var 10, template_app (template_hole 31, template_var 9)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 30, template_var 10),
                  template_app
                   (template_app (template_hole 29, template_var 8),
                    template_var 7)),
                template_app
                 (template_app (template_hole 28, template_var 6),
                  template_app
                   (template_app (template_hole 27, template_var 5),
                    template_var 4))),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 25,
              template_app
               (template_app (template_hole 29, template_var 8),
                template_var 7)),
            template_app
             (template_hole 24,
              template_app (template_hole 23, template_var 2))),
          template_app
           (template_app (template_hole 29, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 22, t_empty)))),
    ("Abacus.steps_start_of_invb_inv_locate_a2",
     "[| inv_locate_a (?as, ?lm) (?n, ?l, ?r) ?ires;
         ?r ~= [] & hd ?r ~= Bk |]
      ==> EX stp la ra.
             steps (start_of ?ly ?as + 2 * ?n, ?l, ?r)
              (ci ?ly (start_of ?ly ?as) (Dec ?n ?e),
               start_of ?ly ?as - Suc 0)
              stp =
             (Suc (start_of ?ly ?as + 2 * ?n), la, ra) &
             inv_locate_b (?as, ?lm) (?n, la, ra) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 27,
                  template_app
                   (template_app (template_hole 26, template_var 7),
                    template_var 6)),
                template_app
                 (template_app (template_hole 25, template_var 5),
                  template_app
                   (template_app (template_hole 24, template_var 4),
                    template_var 3))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 21, template_var 3),
                    template_hole 20))),
              template_app
               (template_hole 22,
                template_app
                 (template_app
                   (template_hole 19,
                    template_app (template_hole 18, template_var 3)),
                  template_hole 17)))
            )],
       template_predicate (template_app (template_hole 16, t_empty)))),
    ("Abacus.crsp_abc_step_l_start_of",
     "[| inv_stop (?as, abc_lm_s ?lm ?n (abc_lm_v ?lm ?n - Suc 0))
          (start_of (layout_of ?ap) ?as + 2 * ?n + 16, ?a, ?b) ?ires;
         0 < abc_lm_v ?lm ?n; abc_fetch ?as ?ap = Some (Dec ?n ?e) |]
      ==> crsp (layout_of ?ap) (abc_step_l (?as, ?lm) (Some (Dec ?n ?e)))
           (start_of (layout_of ?ap) ?as + 2 * ?n + 16, ?a, ?b) ?ires",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 21, template_var 7),
                    template_app
                     (template_app
                       (template_app (template_hole 20, template_var 6),
                        template_var 5),
                      template_app
                       (template_app
                         (template_hole 19,
                          template_app
                           (template_app (template_hole 18, template_var 6),
                            template_var 5)),
                        template_app
                         (template_hole 17, template_hole 16))))),
                template_app
                 (template_app
                   (template_hole 15,
                    template_app
                     (template_app
                       (template_hole 14,
                        template_app
                         (template_app
                           (template_hole 14,
                            template_app
                             (template_app
                               (template_hole 13,
                                template_app
                                 (template_hole 12, template_var 4)),
                              template_var 7)),
                          template_app
                           (template_app
                             (template_hole 11,
                              template_app
                               (template_hole 10,
                                template_app
                                 (template_hole 9, template_hole 8))),
                            template_var 5))),
                      template_app
                       (template_hole 10,
                        template_app
                         (template_hole 9,
                          template_app
                           (template_hole 9,
                            template_app
                             (template_hole 9,
                              template_app
                               (template_hole 9, template_hole 8))))))),
                  template_app
                   (template_app (template_hole 7, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_inequation
         (less_than, template_hole 16,
          template_app
           (template_app (template_hole 18, template_var 6),
            template_var 5)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 7), template_var 4),
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 5),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 12, template_var 4)),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 21, template_var 7),
                       template_var 6)),
                   template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 0)))),
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_app
                          (template_hole 14,
                           template_app
                            (template_app
                              (template_hole 13,
                               template_app
                                (template_hole 12, template_var 4)),
                             template_var 7)),
                         template_app
                          (template_app
                            (template_hole 11,
                             template_app
                              (template_hole 10,
                               template_app
                                (template_hole 9, template_hole 8))),
                           template_var 5))),
                     template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 9, template_hole 8))))))),
                 template_app
                  (template_app (template_hole 7, template_var 3),
                   template_var 2))),
             template_var 1)
           ))),
    ("Abacus.crsp_step_dec_b",
     "[| ?ly = layout_of ?ap; crsp ?ly (?as, ?lm) (?s, ?l, ?r) ?ires;
         inv_locate_a (?as, ?lm) (?n, ?la, ?ra) ?ires;
         abc_fetch ?as ?ap = Some (Dec ?n ?e) |]
      ==> EX stp>0.
             crsp ?ly (abc_step_l (?as, ?lm) (Some (Dec ?n ?e)))
              (steps (start_of ?ly ?as + 2 * ?n, ?la, ?ra)
                (ci ?ly (start_of ?ly ?as) (Dec ?n ?e),
                 start_of ?ly ?as - Suc 0)
                stp)
              ?ires",
     template_implication
      ([template_equation
         (template_var 11,
          template_app (template_hole 25, template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 24, template_var 11),
                  template_app
                   (template_app (template_hole 23, template_var 9),
                    template_var 8)),
                template_app
                 (template_app (template_hole 22, template_var 7),
                  template_app
                   (template_app (template_hole 21, template_var 6),
                    template_var 5))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 23, template_var 9),
                    template_var 8)),
                template_app
                 (template_app (template_hole 22, template_var 3),
                  template_app
                   (template_app (template_hole 21, template_var 2),
                    template_var 1))),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_app (template_hole 18, template_var 9),
            template_var 10),
          template_app
           (template_hole 17,
            template_app
             (template_app (template_hole 16, template_var 3),
              template_var 0)))],
       template_predicate (template_app (template_hole 15, t_empty)))),
    ("Abacus.tinc_correct_pre",
     "[| ?ly = layout_of ?ap; inv_locate_a (?as, ?lm) (?n, ?l, ?r) ?ires;
         ?lm' = abc_lm_s ?lm ?n (Suc (abc_lm_v ?lm ?n));
         ?f = steps0 (Suc 0, ?l, ?r) tinc_b; ?P = (%(s, l, r). s = 10);
         ?Q = (%(s, l, r). inc_inv ?n (?as, ?lm) (s, l, r) ?ires) |]
      ==> EX stp. ?P (?f stp) & ?Q (?f stp)",
     template_implication
      ([template_equation
         (template_var 11,
          template_app (template_hole 23, template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 21, template_var 9),
                    template_var 8)),
                template_app
                 (template_app (template_hole 20, template_var 7),
                  template_app
                   (template_app (template_hole 19, template_var 6),
                    template_var 5))),
              template_var 4)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_app (template_hole 18, template_var 8),
              template_var 7),
            template_app
             (template_hole 17,
              template_app
               (template_app (template_hole 16, template_var 8),
                template_var 7)))),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 14,
              template_app
               (template_app
                 (template_hole 20,
                  template_app (template_hole 17, template_hole 13)),
                template_app
                 (template_app (template_hole 19, template_var 6),
                  template_var 5))),
            template_app
             (template_app (template_hole 12, template_hole 11),
              template_hole 13))),
        template_equation
         (template_var 1, template_app (template_hole 9, t_empty)),
        template_equation
         (template_var 0, template_app (template_hole 9, t_empty))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Abacus.tm_append_steps",
     "[| steps0 (?s, ?l, ?r) ?A ?stpa = (Suc (length ?A div 2), ?la, ?ra);
         steps0 (Suc 0, ?la, ?ra) ?B ?stpb = (?sb, ?lb, ?rb); ?sb ~= 0;
         ?off = length ?A div 2; is_even (length ?A) |]
      ==> steps0 (?s, ?l, ?r) (?A @ Turing.shift ?B ?off) (?stpa + ?stpb) =
          (?sb + ?off, ?lb, ?rb)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app (template_hole 15, template_var 12),
                  template_app
                   (template_app (template_hole 14, template_var 11),
                    template_var 10))),
              template_app
               (template_app (template_hole 13, template_var 9),
                template_hole 12)),
            template_var 8),
          template_app
           (template_app
             (template_hole 15,
              template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app (template_hole 9, template_var 9)),
                  template_app
                   (template_hole 8,
                    template_app (template_hole 7, template_hole 6))))),
            template_app
             (template_app (template_hole 14, template_var 7),
              template_var 6))),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 16,
                template_app
                 (template_app
                   (template_hole 15,
                    template_app (template_hole 11, template_hole 12)),
                  template_app
                   (template_app (template_hole 14, template_var 7),
                    template_var 6))),
              template_app
               (template_app (template_hole 13, template_var 5),
                template_hole 12)),
            template_var 4),
          template_app
           (template_app (template_hole 15, template_var 3),
            template_app
             (template_app (template_hole 14, template_var 2),
              template_var 1))),
        template_negation
         (template_equation (template_var 3, template_hole 12)),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 9)),
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_hole 6)))),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 9, template_var 9)),
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_hole 6))),
          template_hole 12)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, template_var 12),
                 template_app
                  (template_app (template_hole 14, template_var 11),
                   template_var 10))),
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 2, template_var 9),
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 0))),
               template_hole 12)),
           template_app
            (template_app (template_hole 0, template_var 8),
             template_var 4)),
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 14, template_var 2),
             template_var 1))))),
    ("Abacus.findnth_correct_pre",
     "[| ?ly = layout_of ?ap; crsp ?ly (?as, ?lm) (?s, ?l, ?r) ?ires;
         0 < ?n; ?f = (%stp. (steps0 (Suc 0, ?l, ?r) (findnth ?n) stp, ?n));
         ?P = (%((s, l, r), n). s = Suc (2 * n));
         ?Q =
         (%((s, l, r), n). findnth_inv ?ly n (?as, ?lm) (s, l, r) ?ires) |]
      ==> EX stp. ?P (?f stp) & ?Q (?f stp)",
     template_implication
      ([template_equation
         (template_var 11,
          template_app (template_hole 24, template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 23, template_var 11),
                  template_app
                   (template_app (template_hole 22, template_var 9),
                    template_var 8)),
                template_app
                 (template_app (template_hole 21, template_var 7),
                  template_app
                   (template_app (template_hole 20, template_var 6),
                    template_var 5))),
              template_var 4)
            ),
        template_inequation (less_than, template_hole 18, template_var 3),
        template_equation (template_var 2, t_empty),
        template_equation
         (template_var 1,
          template_app
           (template_hole 10, template_app (template_hole 9, t_empty))),
        template_equation
         (template_var 0,
          template_app
           (template_hole 10, template_app (template_hole 9, t_empty)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Abacus_Mopup.mopup_bef_erase_a_implies_two",
     "[| ?n < length ?lm; 0 < ?s; ?s <= 2 * ?n; ?s mod 2 = Suc 0;
         mopup_bef_erase_a (?s, ?l, Oc # ?xs) ?lm ?n ?ires; ?r = Oc # ?xs |]
      ==> (Suc ?s <= 2 * ?n -->
           mopup_bef_erase_b (Suc ?s, ?l, Bk # ?xs) ?lm ?n ?ires) &
          (~ Suc ?s <= 2 * ?n -->
           mopup_jump_over1 (Suc ?s, ?l, Bk # ?xs) ?lm ?n ?ires)",
     template_implication
      ([template_inequation
         (less_than, template_var 6,
          template_app (template_hole 21, template_var 5)),
        template_inequation (less_than, template_hole 20, template_var 4),
        template_inequation
         (less_equals, template_var 4,
          template_app
           (template_app
             (template_hole 18,
              template_app
               (template_hole 17,
                template_app (template_hole 16, template_hole 15))),
            template_var 6)),
        template_equation
         (template_app
           (template_app (template_hole 13, template_var 4),
            template_app
             (template_hole 17,
              template_app (template_hole 16, template_hole 15))),
          template_app (template_hole 12, template_hole 20)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 10, template_var 4),
                      template_app
                       (template_app (template_hole 9, template_var 3),
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_var 2)))),
                  template_var 5),
                template_var 6),
              template_var 1)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 8, template_hole 7),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 19,
                       template_app (template_hole 12, template_var 4)),
                     template_app
                      (template_app
                        (template_hole 18,
                         template_app
                          (template_hole 17,
                           template_app
                            (template_hole 16, template_hole 15))),
                       template_var 6))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app
                            (template_hole 10,
                             template_app
                              (template_hole 12, template_var 4)),
                           template_app
                            (template_app (template_hole 9, template_var 3),
                             template_app
                              (template_app
                                (template_hole 8, template_hole 2),
                               template_var 2)))),
                       template_var 5),
                     template_var 6),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_hole 19,
                       template_app (template_hole 12, template_var 4)),
                     template_app
                      (template_app
                        (template_hole 18,
                         template_app
                          (template_hole 17,
                           template_app
                            (template_hole 16, template_hole 15))),
                       template_var 6)))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_hole 0,
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app (template_hole 12, template_var 4)),
                         template_app
                          (template_app (template_hole 9, template_var 3),
                           template_app
                            (template_app
                              (template_hole 8, template_hole 2),
                             template_var 2)))),
                     template_var 5),
                   template_var 6),
                 template_var 1)))
           ))),
    ("Abacus.crsp_step_dec_b_e_pre",
     "[| ?ly = layout_of ?ap; inv_locate_b (?as, ?lm) (?n, ?la, ?ra) ?ires;
         abc_lm_v ?lm ?n = 0; abc_fetch ?as ?ap = Some (Dec ?n ?e) |]
      ==> EX stp lb rb.
             steps (Suc (start_of ?ly ?as) + 2 * ?n, ?la, ?ra)
              (ci ?ly (start_of ?ly ?as) (Dec ?n ?e),
               start_of ?ly ?as - Suc 0)
              stp =
             (start_of ?ly ?e, lb, rb) &
             dec_inv_1 ?ly ?n ?e (?as, ?lm) (start_of ?ly ?e, lb, rb)
              ?ires",
     template_implication
      ([template_equation
         (template_var 8, template_app (template_hole 27, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 26,
                  template_app
                   (template_app (template_hole 25, template_var 6),
                    template_var 5)),
                template_app
                 (template_app (template_hole 24, template_var 4),
                  template_app
                   (template_app (template_hole 23, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app (template_hole 21, template_var 5),
            template_var 4),
          template_hole 20),
        template_equation
         (template_app
           (template_app (template_hole 18, template_var 6),
            template_var 7),
          template_app
           (template_hole 17,
            template_app
             (template_app (template_hole 16, template_var 4),
              template_var 0)))],
       template_predicate (template_app (template_hole 15, t_empty)))),
    ("Abacus.crsp_step_dec_b_suc",
     "[| ?ly = layout_of ?ap; crsp ?ly (?as, ?lm) (?s, ?l, ?r) ?ires;
         inv_locate_a (?as, ?lm) (?n, ?la, ?ra) ?ires;
         abc_fetch ?as ?ap = Some (Dec ?n ?e); 0 < abc_lm_v ?lm ?n |]
      ==> EX stp>0.
             crsp ?ly (abc_step_l (?as, ?lm) (Some (Dec ?n ?e)))
              (steps (start_of ?ly ?as + 2 * ?n, ?la, ?ra)
                (ci (layout_of ?ap) (start_of ?ly ?as) (Dec ?n ?e),
                 start_of ?ly ?as - Suc 0)
                stp)
              ?ires",
     template_implication
      ([template_equation
         (template_var 11,
          template_app (template_hole 26, template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 25, template_var 11),
                  template_app
                   (template_app (template_hole 24, template_var 9),
                    template_var 8)),
                template_app
                 (template_app (template_hole 23, template_var 7),
                  template_app
                   (template_app (template_hole 22, template_var 6),
                    template_var 5))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app (template_hole 24, template_var 9),
                    template_var 8)),
                template_app
                 (template_app (template_hole 23, template_var 3),
                  template_app
                   (template_app (template_hole 22, template_var 2),
                    template_var 1))),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_app (template_hole 19, template_var 9),
            template_var 10),
          template_app
           (template_hole 18,
            template_app
             (template_app (template_hole 17, template_var 3),
              template_var 0))),
        template_inequation
         (less_than, template_hole 15,
          template_app
           (template_app (template_hole 14, template_var 8),
            template_var 3))],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Abacus.compile_correct_halt",
     "[| ?ly = layout_of ?ap; ?tp = tm_of ?ap;
         crsp ?ly (0, ?lm) (Suc 0, ?l, ?r) ?ires;
         abc_steps_l (0, ?lm) ?ap ?stp = (length ?ap, ?am); ?n < length ?am;
         abc_lm_v ?am ?n = ?rs; ?off = length ?tp div 2 |]
      ==> EX stp i j.
             steps0 (Suc 0, ?l, ?r) (?tp @ Turing.shift (mopup ?n) ?off)
              stp =
             (0, Bk \<up> i @ Bk # Bk # ?ires,
              Oc \<up> Suc ?rs @ Bk \<up> j)",
     template_implication
      ([template_equation
         (template_var 11,
          template_app (template_hole 32, template_var 10)),
        template_equation
         (template_var 9, template_app (template_hole 30, template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 29, template_var 11),
                  template_app
                   (template_app (template_hole 28, template_hole 27),
                    template_var 8)),
                template_app
                 (template_app
                   (template_hole 26,
                    template_app (template_hole 25, template_hole 27)),
                  template_app
                   (template_app (template_hole 24, template_var 7),
                    template_var 6))),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 28, template_hole 27),
                  template_var 8)),
              template_var 10),
            template_var 4),
          template_app
           (template_app
             (template_hole 28,
              template_app (template_hole 21, template_var 10)),
            template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 19, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 17, template_var 3),
            template_var 2),
          template_var 1),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 16,
              template_app (template_hole 15, template_var 9)),
            template_app
             (template_hole 14,
              template_app (template_hole 13, template_hole 12))))],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("Abacus.crsp_step_dec_b_e_pre'",
     "[| ?ly = layout_of ?ap; inv_locate_b (?as, ?lm) (?n, ?la, ?ra) ?ires;
         abc_fetch ?as ?ap = Some (Dec ?n ?e); abc_lm_v ?lm ?n = 0;
         ?f =
         (%stp. (steps (Suc (start_of ?ly ?as) + 2 * ?n, ?la, ?ra)
                  (ci ?ly (start_of ?ly ?as) (Dec ?n ?e),
                   start_of ?ly ?as - Suc 0)
                  stp,
                 start_of ?ly ?as, ?n));
         ?P = (%((s, l, r), ss, x). s = start_of ?ly ?e);
         ?Q =
         (%((s, l, r), ss, x).
             dec_inv_1 ?ly x ?e (?as, ?lm) (s, l, r) ?ires) |]
      ==> EX stp. ?P (?f stp) & ?Q (?f stp)",
     template_implication
      ([template_equation
         (template_var 11,
          template_app (template_hole 33, template_var 10)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 32,
                  template_app
                   (template_app (template_hole 31, template_var 9),
                    template_var 8)),
                template_app
                 (template_app (template_hole 30, template_var 7),
                  template_app
                   (template_app (template_hole 29, template_var 6),
                    template_var 5))),
              template_var 4)
            ),
        template_equation
         (template_app
           (template_app (template_hole 27, template_var 9),
            template_var 10),
          template_app
           (template_hole 26,
            template_app
             (template_app (template_hole 25, template_var 7),
              template_var 3))),
        template_equation
         (template_app
           (template_app (template_hole 23, template_var 8),
            template_var 7),
          template_hole 22),
        template_equation (template_var 2, t_empty),
        template_equation
         (template_var 1,
          template_app
           (template_hole 6, template_app (template_hole 5, t_empty))),
        template_equation
         (template_var 0,
          template_app
           (template_hole 6, template_app (template_hole 5, t_empty)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Abacus.crsp_step_dec_b_suc_pre",
     "[| ?ly = layout_of ?ap; crsp ?ly (?as, ?lm) (?s, ?l, ?r) ?ires;
         inv_locate_a (?as, ?lm) (?n, ?la, ?ra) ?ires;
         abc_fetch ?as ?ap = Some (Dec ?n ?e); 0 < abc_lm_v ?lm ?n;
         ?f =
         (%stp. (steps (start_of ?ly ?as + 2 * ?n, ?la, ?ra)
                  (ci ?ly (start_of ?ly ?as) (Dec ?n ?e),
                   start_of ?ly ?as - Suc 0)
                  stp,
                 start_of ?ly ?as, ?n));
         ?P = (%((s, l, r), ss, x). s = start_of ?ly ?as + 2 * ?n + 16);
         ?Q =
         (%((s, l, r), ss, x).
             dec_inv_2 ?ly x ?e (?as, ?lm) (s, l, r) ?ires) |]
      ==> EX stp. ?P (?f stp) & ?Q (?f stp)",
     template_implication
      ([template_equation
         (template_var 14,
          template_app (template_hole 35, template_var 13)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 34, template_var 14),
                  template_app
                   (template_app (template_hole 33, template_var 12),
                    template_var 11)),
                template_app
                 (template_app (template_hole 32, template_var 10),
                  template_app
                   (template_app (template_hole 31, template_var 9),
                    template_var 8))),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 30,
                  template_app
                   (template_app (template_hole 33, template_var 12),
                    template_var 11)),
                template_app
                 (template_app (template_hole 32, template_var 6),
                  template_app
                   (template_app (template_hole 31, template_var 5),
                    template_var 4))),
              template_var 7)
            ),
        template_equation
         (template_app
           (template_app (template_hole 28, template_var 12),
            template_var 13),
          template_app
           (template_hole 27,
            template_app
             (template_app (template_hole 26, template_var 6),
              template_var 3))),
        template_inequation
         (less_than, template_hole 24,
          template_app
           (template_app (template_hole 23, template_var 11),
            template_var 6)),
        template_equation (template_var 2, t_empty),
        template_equation
         (template_var 1,
          template_app
           (template_hole 7, template_app (template_hole 6, t_empty))),
        template_equation
         (template_var 0,
          template_app
           (template_hole 7, template_app (template_hole 6, t_empty)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Abacus.start_of_ineq1",
     "[| abc_fetch ?as ?aprog = Some (Dec ?n ?e); ?ly = layout_of ?aprog |]
      ==> start_of ?ly ?e ~= Suc (start_of ?ly ?as + 2 * ?n) &
          start_of ?ly ?e ~= Suc (Suc (start_of ?ly ?as + 2 * ?n)) &
          start_of ?ly ?e ~= start_of ?ly ?as + 2 * ?n + 3 &
          start_of ?ly ?e ~= start_of ?ly ?as + 2 * ?n + 4 &
          start_of ?ly ?e ~= start_of ?ly ?as + 2 * ?n + 5 &
          start_of ?ly ?e ~= start_of ?ly ?as + 2 * ?n + 6 &
          start_of ?ly ?e ~= start_of ?ly ?as + 2 * ?n + 7 &
          start_of ?ly ?e ~= start_of ?ly ?as + 2 * ?n + 8 &
          start_of ?ly ?e ~= start_of ?ly ?as + 2 * ?n + 9 &
          start_of ?ly ?e ~= start_of ?ly ?as + 2 * ?n + 10 &
          start_of ?ly ?e ~= start_of ?ly ?as + 2 * ?n + 11 &
          start_of ?ly ?e ~= start_of ?ly ?as + 2 * ?n + 12 &
          start_of ?ly ?e ~= start_of ?ly ?as + 2 * ?n + 13 &
          start_of ?ly ?e ~= start_of ?ly ?as + 2 * ?n + 14 &
          start_of ?ly ?e ~= start_of ?ly ?as + 2 * ?n + 15",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 15, template_var 4),
            template_var 3),
          template_app
           (template_hole 14,
            template_app
             (template_app (template_hole 13, template_var 2),
              template_var 1))),
        template_equation
         (template_var 0, template_app (template_hole 11, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 0),
                       template_var 1)),
                   template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 7, template_var 0),
                           template_var 4)),
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2, template_hole 1))),
                         template_var 2)))))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 7, template_var 0),
                         template_var 1)),
                     template_app
                      (template_hole 6,
                       template_app
                        (template_hole 6,
                         template_app
                          (template_app
                            (template_hole 5,
                             template_app
                              (template_app
                                (template_hole 7, template_var 0),
                               template_var 4)),
                           template_app
                            (template_app
                              (template_hole 4,
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 2, template_hole 1))),
                             template_var 2))))))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 7, template_var 0),
                           template_var 1)),
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_hole 7, template_var 0),
                                 template_var 4)),
                             template_app
                              (template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 2, template_hole 1))),
                               template_var 2))),
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 0, template_hole 1)))))),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_app (template_hole 7, template_var 0),
                             template_var 1)),
                         template_app
                          (template_app
                            (template_hole 5,
                             template_app
                              (template_app
                                (template_hole 5,
                                 template_app
                                  (template_app
                                    (template_hole 7, template_var 0),
                                   template_var 4)),
                               template_app
                                (template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 3,
                                     template_app
(template_hole 2, template_hole 1))),
                                 template_var 2))),
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 2, template_hole 1))))))),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_app
                                (template_hole 7, template_var 0),
                               template_var 1)),
                           template_app
                            (template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_app
(template_hole 7, template_var 0),
                                     template_var 4)),
                                 template_app
                                  (template_app
                                    (template_hole 4,
                                     template_app
(template_hole 3, template_app (template_hole 2, template_hole 1))),
                                   template_var 2))),
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 2, template_hole 1))))))),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_app
                              (template_hole 8,
                               template_app
                                (template_app
                                  (template_hole 7, template_var 0),
                                 template_var 1)),
                             template_app
                              (template_app
                                (template_hole 5,
                                 template_app
                                  (template_app
                                    (template_hole 5,
                                     template_app
(template_app (template_hole 7, template_var 0), template_var 4)),
                                   template_app
                                    (template_app
(template_hole 4,
 template_app
  (template_hole 3, template_app (template_hole 2, template_hole 1))),
                                     template_var 2))),
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 0,
                                     template_hole 1))))))),
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_app
                                (template_hole 8,
                                 template_app
                                  (template_app
                                    (template_hole 7, template_var 0),
                                   template_var 1)),
                               template_app
                                (template_app
                                  (template_hole 5,
                                   template_app
                                    (template_app
(template_hole 5,
 template_app
  (template_app (template_hole 7, template_var 0), template_var 4)),
                                     template_app
(template_app
  (template_hole 4,
   template_app
    (template_hole 3, template_app (template_hole 2, template_hole 1))),
 template_var 2))),
                                 template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 0,
                                     template_app
(template_hole 0, template_hole 1))))))),
                         template_app
                          (template_app
                            (template_hole 10,
                             template_app
                              (template_hole 9,
                               template_app
                                (template_app
                                  (template_hole 8,
                                   template_app
                                    (template_app
(template_hole 7, template_var 0),
                                     template_var 1)),
                                 template_app
                                  (template_app
                                    (template_hole 5,
                                     template_app
(template_app
  (template_hole 5,
   template_app
    (template_app (template_hole 7, template_var 0), template_var 4)),
 template_app
  (template_app
    (template_hole 4,
     template_app
      (template_hole 3, template_app (template_hole 2, template_hole 1))),
   template_var 2))),
                                   template_app
                                    (template_hole 3,
                                     template_app
(template_hole 2,
 template_app
  (template_hole 2, template_app (template_hole 2, template_hole 1)))))))),
                           template_app
                            (template_app
                              (template_hole 10,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_app
                                    (template_hole 8,
                                     template_app
(template_app (template_hole 7, template_var 0), template_var 1)),
                                   template_app
                                    (template_app
(template_hole 5,
 template_app
  (template_app
    (template_hole 5,
     template_app
      (template_app (template_hole 7, template_var 0), template_var 4)),
   template_app
    (template_app
      (template_hole 4,
       template_app
        (template_hole 3, template_app (template_hole 2, template_hole 1))),
     template_var 2))),
                                     template_app
(template_hole 3,
 template_app
  (template_hole 0,
   template_app
    (template_hole 2,
     template_app (template_hole 2, template_hole 1)))))))),
                             template_app
                              (template_app
                                (template_hole 10,
                                 template_app
                                  (template_hole 9,
                                   template_app
                                    (template_app
(template_hole 8,
 template_app
  (template_app (template_hole 7, template_var 0), template_var 1)),
                                     template_app
(template_app
  (template_hole 5,
   template_app
    (template_app
      (template_hole 5,
       template_app
        (template_app (template_hole 7, template_var 0), template_var 4)),
     template_app
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_var 2))),
 template_app
  (template_hole 3,
   template_app
    (template_hole 2,
     template_app
      (template_hole 0,
       template_app (template_hole 2, template_hole 1)))))))),
                               template_app
                                (template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 9,
                                     template_app
(template_app
  (template_hole 8,
   template_app
    (template_app (template_hole 7, template_var 0), template_var 1)),
 template_app
  (template_app
    (template_hole 5,
     template_app
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 7, template_var 0), template_var 4)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_var 2))),
   template_app
    (template_hole 3,
     template_app
      (template_hole 0,
       template_app
        (template_hole 0,
         template_app (template_hole 2, template_hole 1)))))))),
                                 template_app
                                  (template_app
                                    (template_hole 10,
                                     template_app
(template_hole 9,
 template_app
  (template_app
    (template_hole 8,
     template_app
      (template_app (template_hole 7, template_var 0), template_var 1)),
   template_app
    (template_app
      (template_hole 5,
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 7, template_var 0),
             template_var 4)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_var 2))),
     template_app
      (template_hole 3,
       template_app
        (template_hole 2,
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_hole 1)))))))),
                                   template_app
                                    (template_app
(template_hole 10,
 template_app
  (template_hole 9,
   template_app
    (template_app
      (template_hole 8,
       template_app
        (template_app (template_hole 7, template_var 0), template_var 1)),
     template_app
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 7, template_var 0),
               template_var 4)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_var 2))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 0,
           template_app
            (template_hole 2,
             template_app (template_hole 0, template_hole 1)))))))),
                                     template_app
(template_app
  (template_hole 10,
   template_app
    (template_hole 9,
     template_app
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_var 4)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_var 2))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_hole 0,
               template_app (template_hole 0, template_hole 1)))))))),
 template_app
  (template_hole 9,
   template_app
    (template_app
      (template_hole 8,
       template_app
        (template_app (template_hole 7, template_var 0), template_var 1)),
     template_app
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 7, template_var 0),
               template_var 4)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_var 2))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 0,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0, template_hole 1)))))))))))))))))))))
           ))),
    ("Abacus.start_of_ineq2",
     "[| abc_fetch ?as ?aprog = Some (Dec ?n ?e); ?ly = layout_of ?aprog |]
      ==> Suc (start_of ?ly ?as + 2 * ?n) ~= start_of ?ly ?e &
          Suc (Suc (start_of ?ly ?as + 2 * ?n)) ~= start_of ?ly ?e &
          start_of ?ly ?as + 2 * ?n + 3 ~= start_of ?ly ?e &
          start_of ?ly ?as + 2 * ?n + 4 ~= start_of ?ly ?e &
          start_of ?ly ?as + 2 * ?n + 5 ~= start_of ?ly ?e &
          start_of ?ly ?as + 2 * ?n + 6 ~= start_of ?ly ?e &
          start_of ?ly ?as + 2 * ?n + 7 ~= start_of ?ly ?e &
          start_of ?ly ?as + 2 * ?n + 8 ~= start_of ?ly ?e &
          start_of ?ly ?as + 2 * ?n + 9 ~= start_of ?ly ?e &
          start_of ?ly ?as + 2 * ?n + 10 ~= start_of ?ly ?e &
          start_of ?ly ?as + 2 * ?n + 11 ~= start_of ?ly ?e &
          start_of ?ly ?as + 2 * ?n + 12 ~= start_of ?ly ?e &
          start_of ?ly ?as + 2 * ?n + 13 ~= start_of ?ly ?e &
          start_of ?ly ?as + 2 * ?n + 14 ~= start_of ?ly ?e &
          start_of ?ly ?as + 2 * ?n + 15 ~= start_of ?ly ?e",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 15, template_var 4),
            template_var 3),
          template_app
           (template_hole 14,
            template_app
             (template_app (template_hole 13, template_var 2),
              template_var 1))),
        template_equation
         (template_var 0, template_app (template_hole 11, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app (template_hole 5, template_var 0),
                             template_var 4)),
                         template_app
                          (template_app
                            (template_hole 4,
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 2, template_hole 1))),
                           template_var 2)))),
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_var 1)))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 5, template_var 0),
                                 template_var 4)),
                             template_app
                              (template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 2, template_hole 1))),
                               template_var 2))))),
                     template_app
                      (template_app (template_hole 5, template_var 0),
                       template_var 1)))),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_app
                                (template_hole 6,
                                 template_app
                                  (template_app
                                    (template_hole 5, template_var 0),
                                   template_var 4)),
                               template_app
                                (template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 3,
                                     template_app
(template_hole 2, template_hole 1))),
                                 template_var 2))),
                           template_app
                            (template_hole 3,
                             template_app
                              (template_hole 0, template_hole 1)))),
                       template_app
                        (template_app (template_hole 5, template_var 0),
                         template_var 1)))),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_hole 8,
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 6,
                                   template_app
                                    (template_app
(template_hole 5, template_var 0),
                                     template_var 4)),
                                 template_app
                                  (template_app
                                    (template_hole 4,
                                     template_app
(template_hole 3, template_app (template_hole 2, template_hole 1))),
                                   template_var 2))),
                             template_app
                              (template_hole 3,
                               template_app
                                (template_hole 2,
                                 template_app
                                  (template_hole 2, template_hole 1))))),
                         template_app
                          (template_app (template_hole 5, template_var 0),
                           template_var 1)))),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_app
                                (template_hole 6,
                                 template_app
                                  (template_app
                                    (template_hole 6,
                                     template_app
(template_app (template_hole 5, template_var 0), template_var 4)),
                                   template_app
                                    (template_app
(template_hole 4,
 template_app
  (template_hole 3, template_app (template_hole 2, template_hole 1))),
                                     template_var 2))),
                               template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 0,
                                   template_app
                                    (template_hole 2, template_hole 1))))),
                           template_app
                            (template_app (template_hole 5, template_var 0),
                             template_var 1)))),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_hole 9,
                           template_app
                            (template_app
                              (template_hole 8,
                               template_app
                                (template_app
                                  (template_hole 6,
                                   template_app
                                    (template_app
(template_hole 6,
 template_app
  (template_app (template_hole 5, template_var 0), template_var 4)),
                                     template_app
(template_app
  (template_hole 4,
   template_app
    (template_hole 3, template_app (template_hole 2, template_hole 1))),
 template_var 2))),
                                 template_app
                                  (template_hole 3,
                                   template_app
                                    (template_hole 2,
                                     template_app
(template_hole 0, template_hole 1))))),
                             template_app
                              (template_app
                                (template_hole 5, template_var 0),
                               template_var 1)))),
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_app
                                (template_hole 8,
                                 template_app
                                  (template_app
                                    (template_hole 6,
                                     template_app
(template_app
  (template_hole 6,
   template_app
    (template_app (template_hole 5, template_var 0), template_var 4)),
 template_app
  (template_app
    (template_hole 4,
     template_app
      (template_hole 3, template_app (template_hole 2, template_hole 1))),
   template_var 2))),
                                   template_app
                                    (template_hole 3,
                                     template_app
(template_hole 0, template_app (template_hole 0, template_hole 1))))),
                               template_app
                                (template_app
                                  (template_hole 5, template_var 0),
                                 template_var 1)))),
                         template_app
                          (template_app
                            (template_hole 10,
                             template_app
                              (template_hole 9,
                               template_app
                                (template_app
                                  (template_hole 8,
                                   template_app
                                    (template_app
(template_hole 6,
 template_app
  (template_app
    (template_hole 6,
     template_app
      (template_app (template_hole 5, template_var 0), template_var 4)),
   template_app
    (template_app
      (template_hole 4,
       template_app
        (template_hole 3, template_app (template_hole 2, template_hole 1))),
     template_var 2))),
                                     template_app
(template_hole 3,
 template_app
  (template_hole 2,
   template_app
    (template_hole 2, template_app (template_hole 2, template_hole 1)))))),
                                 template_app
                                  (template_app
                                    (template_hole 5, template_var 0),
                                   template_var 1)))),
                           template_app
                            (template_app
                              (template_hole 10,
                               template_app
                                (template_hole 9,
                                 template_app
                                  (template_app
                                    (template_hole 8,
                                     template_app
(template_app
  (template_hole 6,
   template_app
    (template_app
      (template_hole 6,
       template_app
        (template_app (template_hole 5, template_var 0), template_var 4)),
     template_app
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_var 2))),
 template_app
  (template_hole 3,
   template_app
    (template_hole 0,
     template_app
      (template_hole 2,
       template_app (template_hole 2, template_hole 1)))))),
                                   template_app
                                    (template_app
(template_hole 5, template_var 0),
                                     template_var 1)))),
                             template_app
                              (template_app
                                (template_hole 10,
                                 template_app
                                  (template_hole 9,
                                   template_app
                                    (template_app
(template_hole 8,
 template_app
  (template_app
    (template_hole 6,
     template_app
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 0), template_var 4)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1))),
         template_var 2))),
   template_app
    (template_hole 3,
     template_app
      (template_hole 2,
       template_app
        (template_hole 0,
         template_app (template_hole 2, template_hole 1)))))),
                                     template_app
(template_app (template_hole 5, template_var 0), template_var 1)))),
                               template_app
                                (template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 9,
                                     template_app
(template_app
  (template_hole 8,
   template_app
    (template_app
      (template_hole 6,
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 0),
             template_var 4)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1))),
           template_var 2))),
     template_app
      (template_hole 3,
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app (template_hole 2, template_hole 1)))))),
 template_app
  (template_app (template_hole 5, template_var 0), template_var 1)))),
                                 template_app
                                  (template_app
                                    (template_hole 10,
                                     template_app
(template_hole 9,
 template_app
  (template_app
    (template_hole 8,
     template_app
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 0),
               template_var 4)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 1))),
             template_var 2))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_hole 2,
             template_app (template_hole 0, template_hole 1)))))),
   template_app
    (template_app (template_hole 5, template_var 0), template_var 1)))),
                                   template_app
                                    (template_app
(template_hole 10,
 template_app
  (template_hole 9,
   template_app
    (template_app
      (template_hole 8,
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_var 4)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_var 2))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 0,
             template_app
              (template_hole 2,
               template_app (template_hole 0, template_hole 1)))))),
     template_app
      (template_app (template_hole 5, template_var 0), template_var 1)))),
                                     template_app
(template_app
  (template_hole 10,
   template_app
    (template_hole 9,
     template_app
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_var 4)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_var 2))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_hole 0,
                 template_app (template_hole 0, template_hole 1)))))),
       template_app
        (template_app (template_hole 5, template_var 0), template_var 1)))),
 template_app
  (template_hole 9,
   template_app
    (template_app
      (template_hole 8,
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_var 4)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_var 2))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 0,
             template_app
              (template_hole 0,
               template_app (template_hole 0, template_hole 1)))))),
     template_app
      (template_app (template_hole 5, template_var 0),
       template_var 1)))))))))))))))))
           )))]
