   [("Recs.Quo0", "Quo 0 ?y = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Recs.ldec_zero", "ldec 0 ?n = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Recs.inside_False", "inside 0 ?n = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Recs.enclen_length", "enclen (lenc ?xs) = length ?xs",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Recs.constn_lemma", "rec_eval (constn ?n) ?xs = ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_var 1)),
    ("Recs.nth", "(?x # ?xs) ! 0 = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0),
       template_var 1)),
    ("Recs.Quo_div", "Quo ?x ?y = ?y div ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Recs.enclen_lemma", "rec_eval rec_enclen [?z] = enclen ?z",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Recs.fact_lemma", "rec_eval rec_fact [?x] = fact ?x",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Recs.triangle_lemma", "rec_eval rec_triangle [?x] = triangle ?x",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("Recs.if_zero_one", "(0 < (if ?P then 1 else 0)) = ?P",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0),
           template_hole 2)),
       template_var 0)),
    ("Recs.nth", "(?x # ?y # ?xs) ! 1 = ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_hole 0),
       template_var 1)),
    ("Recs.pdec1_lemma", "rec_eval rec_pdec1 [?z] = pdec1 ?z",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Recs.pdec2_lemma", "rec_eval rec_pdec2 [?z] = pdec2 ?z",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Recs.pred_lemma", "rec_eval rec_predecessor [?x] = ?x - 1",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Recs.setprod_one", "(PROD i<=?n. Suc 0) = Suc 0",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 2, template_hole 1))),
    ("Recs.setprod_one", "(PROD i<?n. Suc 0) = Suc 0",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 2, template_hole 1))),
    ("Recs.inside_length", "inside (lenc ?xs) ?s = (?s < length ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Recs.if_zero_one", "((if ?P then 1 else 0) = 0) = (~ ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2),
             template_hole 1)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Recs.if_zero_one", "(if ?P then 0 else 1) = (if ~ ?P then 1 else 0)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 0), template_hole 2),
         template_hole 1),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 0, template_var 0)),
           template_hole 1),
         template_hole 2))),
    ("Recs.fact_aux_lemma", "rec_eval rec_fact_aux [?x, ?y] = fact ?x",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app (template_hole 0, template_var 1))),
    ("Recs.Iter_comm", "Iter ?f ?n (?f ?x) = ?f (Iter ?f ?n ?x)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app (template_var 2, template_var 0)),
       template_app
        (template_var 2,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Recs.Quo3", "?n * Quo ?n ?m = ?m - ?m mod ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Recs.add_lemma", "rec_eval rec_add [?x, ?y] = ?x + ?y",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Recs.ldec_lemma", "rec_eval rec_ldec [?z, ?n] = ldec ?z ?n",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Recs.minus_lemma", "rec_eval rec_minus [?x, ?y] = ?x - ?y",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Recs.mult_lemma", "rec_eval rec_mult [?x, ?y] = ?x * ?y",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Recs.power_lemma", "rec_eval rec_power [?x, ?y] = ?x ^ ?y",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Recs.Quo_rec_quo", "rec_eval rec_quo [?y, ?x] = Quo ?x ?y",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Recs.quo_lemma", "rec_eval rec_quo [?y, ?x] = ?y div ?x",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Recs.Quo2", "?b * Quo ?b ?a + ?a mod ?b = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_var 0)),
    ("Recs.lenc_lemma",
     "rec_eval (rec_lenc ?fs) ?xs = lenc (map (%f. rec_eval f ?xs) ?fs)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Recs.not_lemma", "rec_eval rec_not [?x] = (if ?x = 0 then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_hole 3))
            )],
       template_dunno)),
    ("Recs.sign_lemma",
     "rec_eval rec_sign [?x] = (if ?x = 0 then 0 else 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_hole 3))
            )],
       template_dunno)),
    ("Recs.enclen_penc",
     "enclen (penc (Suc ?x) (lenc ?xs)) = Suc (enclen (lenc ?xs))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0)))),
       template_app
        (template_hole 1,
         template_app
          (template_hole 4,
           template_app (template_hole 0, template_var 0))))),
    ("Recs.penc_lemma", "rec_eval rec_penc [?m, ?n] = penc ?m ?n",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Recs.nth", "(?x # ?y # ?z # ?xs) ! 2 = ?z",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))),
       template_var 1)),
    ("Recs.inside_iter", "inside ?z ?n = (0 < Iter pdec2 ?n ?z)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 0),
           template_var 1)))),
    ("Recs.list_encode_inverse",
     "ldec (lenc ?xs) ?n = (if ?n < length ?xs then ?xs ! ?n else 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 6, template_app (template_hole 5, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app (template_hole 2, template_var 1))),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Recs.eq_lemma",
     "rec_eval rec_eq [?x, ?y] = (if ?x = ?y then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_hole 3)))
            )],
       template_dunno)),
    ("Recs.inside_lemma",
     "rec_eval rec_inside [?z, ?n] = (if inside ?z ?n then 1 else 0)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4))),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 1),
         template_hole 0))),
    ("Recs.le_lemma",
     "rec_eval rec_le [?x, ?y] = (if ?x <= ?y then 1 else 0)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4))),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 1),
         template_hole 0))),
    ("Recs.less_lemma",
     "rec_eval rec_less [?x, ?y] = (if ?x < ?y then 1 else 0)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4))),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 1),
         template_hole 0))),
    ("Recs.nth", "(?x # ?y # ?z # ?u # ?xs) ! 3 = ?u",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0))))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))),
       template_var 1)),
    ("Recs.BMax_rec_eq3",
     "BMax_rec ?R ?x = Max (Set.filter ?R {..?x} Un {0})",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1), template_var 0),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 3, template_var 0))),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Recs.ldec_iter", "ldec ?z ?n = pdec1 (Iter pdec2 ?n ?z) - 1",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, t_empty), template_var 0),
                 template_var 1)))),
         template_hole 0))),
    ("Recs.max_triangle_lemma",
     "rec_eval rec_max_triangle [?x] = Max_triangle ?x",
     template_equation
      (template_app
        (template_app (template_hole 8, template_hole 7),
         template_app
          (template_app (template_hole 6, template_var 0),
           template_hole 5)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 0))),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0))))),
    ("Recs.noteq_lemma",
     "rec_eval rec_noteq [?x, ?y] = (if ?x ~= ?y then 1 else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_hole 4)))
            )],
       template_dunno)),
    ("Recs.fst_prod_decode", "pdec1 ?z = ?z - triangle (Max_triangle ?z)",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 0))),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 0))))))),
    ("Recs.BMax_rec_eq1",
     "BMax_rec ?R ?x = (GREATEST z. ?R z & z <= ?x | z = 0)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Recs.swap_lemma",
     "rec_eval (rec_swap ?f) [?x, ?y] = rec_eval ?f [?y, ?x]",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))),
       template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0))))),
    ("Recs.if_lemma",
     "rec_eval rec_if [?z, ?x, ?y] = (if 0 < ?z then ?x else ?y)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3)))),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Recs.ifz_lemma",
     "rec_eval rec_ifz [?z, ?x, ?y] = (if ?z = 0 then ?x else ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app
                   (template_app (template_hole 3, template_var 0),
                    template_hole 2))))
            )],
       template_dunno)),
    ("Recs.setprod_lessThan_Suc",
     "prod ?f {..<Suc ?n} = prod ?f {..<?n} * ?f ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, t_empty),
             template_app (template_hole 2, template_var 0))),
         template_app (template_var 1, template_var 0)))),
    ("Recs.snd_prod_decode", "pdec2 ?z = Max_triangle ?z - pdec1 ?z",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 0))),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))),
         template_app
          (template_hole 2,
           template_app (template_hole 5, template_var 0))))),
    ("Recs.BMax_rec_eq2",
     "BMax_rec ?R ?x = Max ({z. z <= ?x & ?R z} Un {0})",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))))),
    ("Recs.setprod_atMost_Suc",
     "prod ?f {..Suc ?n} = prod ?f {..?n} * ?f (Suc ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, t_empty),
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_var 1,
           template_app (template_hole 1, template_var 0))))),
    ("Recs.conj_lemma",
     "rec_eval rec_conj [?x, ?y] = (if ?x = 0 | ?y = 0 then 0 else 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_hole 4)))
            )],
       template_dunno)),
    ("Recs.disj_lemma",
     "rec_eval rec_disj [?x, ?y] = (if ?x = 0 & ?y = 0 then 0 else 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_hole 4)))
            )],
       template_dunno)),
    ("Recs.imp_lemma",
     "rec_eval rec_imp [?x, ?y] = (if 0 < ?x & ?y = 0 then 0 else 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_hole 5)))
            )],
       template_dunno)),
    ("Recs.iter_lemma",
     "rec_eval (rec_iter ?f) [?n, ?x] = Iter (%x. rec_eval ?f [x]) ?n ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app
          (template_app (template_hole 0, t_empty), template_var 1),
         template_var 0))),
    ("Recs.setsum_eq_zero", "(sum ?f {..?n} = 0) = (ALL i<=?n. ?f i = 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 4, template_var 0))),
         template_hole 3),
       template_app (template_hole 2, t_empty))),
    ("Recs.setsum_eq_zero", "(sum ?f {..<?n} = 0) = (ALL i<?n. ?f i = 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 4, template_var 0))),
         template_hole 3),
       template_app (template_hole 2, t_empty))),
    ("Recs.setprod_eq_zero", "(prod ?f {..?n} = 0) = (EX i<=?n. ?f i = 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 4, template_var 0))),
         template_hole 3),
       template_app (template_hole 2, t_empty))),
    ("Recs.setprod_eq_zero", "(prod ?f {..<?n} = 0) = (EX i<?n. ?f i = 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 4, template_var 0))),
         template_hole 3),
       template_app (template_hole 2, t_empty))),
    ("Recs.accum1_lemma",
     "rec_eval (rec_accum1 ?f) [?x, ?y] =
      (PROD z<=?x. rec_eval ?f [z, ?y])",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 0, template_var 1)))),
    ("Recs.sigma1_lemma",
     "rec_eval (rec_sigma1 ?f) [?x, ?y] = (SUM z<=?x. rec_eval ?f [z, ?y])",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 0, template_var 1)))),
    ("Recs.max1_lemma",
     "rec_eval (rec_max1 ?f) [?x, ?y] =
      BMax_rec (%u. rec_eval ?f [u, ?y] = 0) ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_app
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("Recs.Max_triangle_greatest",
     "Max_triangle ?z = (GREATEST k. triangle k <= ?z & k <= ?z | k = 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_var 0))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 7, template_hole 6),
             template_var 0))),
       template_app (template_hole 4, t_empty))),
    ("Recs.accum2_lemma",
     "rec_eval (rec_accum2 ?f) [?x, ?y1.0, ?y2.0] =
      (PROD z<=?x. rec_eval ?f [z, ?y1.0, ?y2.0])",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 3)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)))),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 0, template_var 2)))),
    ("Recs.sigma2_lemma",
     "rec_eval (rec_sigma2 ?f) [?x, ?y1.0, ?y2.0] =
      (SUM z<=?x. rec_eval ?f [z, ?y1.0, ?y2.0])",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 3)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)))),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 0, template_var 2)))),
    ("Recs.max2_lemma",
     "rec_eval (rec_max2 ?f) [?x, ?y1.0, ?y2.0] =
      BMax_rec (%u. rec_eval ?f [u, ?y1.0, ?y2.0] = 0) ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 3)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)))),
       template_app
        (template_app (template_hole 1, t_empty), template_var 2))),
    ("Recs.w_aux",
     "Max_triangle (triangle ?k + ?m) = Max_triangle_aux ?k ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 1, template_var 1)),
                 template_var 0)))),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 1, template_var 1)),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0))),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("Recs.all1_lemma",
     "rec_eval (rec_all1 ?f) [?x, ?y] =
      (if ALL z<=?x. 0 < rec_eval ?f [z, ?y] then 1 else 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 2)),
         template_app
          (template_app (template_hole 8, template_var 1),
           template_app
            (template_app (template_hole 8, template_var 0),
             template_hole 7))),
       template_app
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_hole 0),
         template_hole 1))),
    ("Recs.all1_less_lemma",
     "rec_eval (rec_all1_less ?f) [?x, ?y] =
      (if ALL z<?x. 0 < rec_eval ?f [z, ?y] then 1 else 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 2)),
         template_app
          (template_app (template_hole 7, template_var 1),
           template_app
            (template_app (template_hole 7, template_var 0),
             template_hole 6))),
       template_app
        (template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_hole 0),
         template_hole 1))),
    ("Recs.ex1_lemma",
     "rec_eval (rec_ex1 ?f) [?x, ?y] =
      (if EX z<=?x. 0 < rec_eval ?f [z, ?y] then 1 else 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 2)),
         template_app
          (template_app (template_hole 8, template_var 1),
           template_app
            (template_app (template_hole 8, template_var 0),
             template_hole 7))),
       template_app
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_hole 0),
         template_hole 1))),
    ("Recs.accum3_lemma",
     "rec_eval (rec_accum3 ?f) [?x, ?y1.0, ?y2.0, ?y3.0] =
      (PROD z<=?x. rec_eval ?f [z, ?y1.0, ?y2.0, ?y3.0])",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 4)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2))))),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 0, template_var 3)))),
    ("Recs.all2_lemma",
     "rec_eval (rec_all2 ?f) [?x, ?y1.0, ?y2.0] =
      (if ALL z<=?x. 0 < rec_eval ?f [z, ?y1.0, ?y2.0] then 1 else 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 3)),
         template_app
          (template_app (template_hole 8, template_var 2),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_app
              (template_app (template_hole 8, template_var 0),
               template_hole 7)))),
       template_app
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_hole 0),
         template_hole 1))),
    ("Recs.all2_less_lemma",
     "rec_eval (rec_all2_less ?f) [?x, ?y1.0, ?y2.0] =
      (if ALL z<?x. 0 < rec_eval ?f [z, ?y1.0, ?y2.0] then 1 else 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 3)),
         template_app
          (template_app (template_hole 7, template_var 2),
           template_app
            (template_app (template_hole 7, template_var 1),
             template_app
              (template_app (template_hole 7, template_var 0),
               template_hole 6)))),
       template_app
        (template_app
          (template_app
            (template_hole 5, template_app (template_hole 4, t_empty)),
           template_hole 0),
         template_hole 1))),
    ("Recs.ex2_lemma",
     "rec_eval (rec_ex2 ?f) [?x, ?y1.0, ?y2.0] =
      (if EX z<=?x. 0 < rec_eval ?f [z, ?y1.0, ?y2.0] then 1 else 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 3)),
         template_app
          (template_app (template_hole 8, template_var 2),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_app
              (template_app (template_hole 8, template_var 0),
               template_hole 7)))),
       template_app
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_hole 0),
         template_hole 1))),
    ("Recs.all3_lemma",
     "rec_eval (rec_all3 ?f) [?x, ?y1.0, ?y2.0, ?y3.0] =
      (if ALL z<=?x. 0 < rec_eval ?f [z, ?y1.0, ?y2.0, ?y3.0] then 1
       else 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app (template_hole 9, template_var 4)),
         template_app
          (template_app (template_hole 8, template_var 3),
           template_app
            (template_app (template_hole 8, template_var 2),
             template_app
              (template_app (template_hole 8, template_var 1),
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_hole 7))))),
       template_app
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_hole 0),
         template_hole 1)))]
