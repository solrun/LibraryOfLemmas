   [("Recursive.abc_steps_zero", "abc_steps_l ?asm ?ap 0 = ?asm",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 1)),
    ("Recursive.abc_list_crsp_simp1",
     "abc_list_crsp (?lm @ 0 \<up> ?m) ?lm",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))),
           template_var 1)
         )),
    ("Recursive.length_mvbox", "length (mv_box ?m ?n) = 3",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("Recursive.rec_ci_not_null", "rec_ci ?f ~= ([], ?a, ?b)",
     template_negation
      (
         template_equation
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Recursive.length_empty_boxes", "length (empty_boxes ?n) = 2 * ?n",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_var 0))),
    ("Recursive.length_tm_even", "is_even (length (tm_of ?ap))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_hole 0)),
    ("Recursive.abc_fetch", "abc_fetch 3 (mv_box ?m ?n) = None",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2))),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Recursive.less_then_max_plus3", "?n < max (?n + 3) ?x",
     template_inequation
      (less_than, template_var 1,
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)))),
         template_var 0))),
    ("Recursive.mopup_ge2", "2 <= ?x + length (mopup ?n)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5, template_app (template_hole 4, template_hole 3)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Recursive.length_addition", "length (addition ?a ?b ?c) = 7",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 1, template_hole 0))))),
    ("Recursive.abc_fetch",
     "abc_fetch (Suc 0) (mv_box ?m ?n) = Some (Inc ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app (template_hole 4, template_hole 3)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Recursive.suc_less_plus_3", "Suc ?n < max (?n + 3) ?x",
     template_inequation
      (less_than, template_app (template_hole 5, template_var 1),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)))),
         template_var 0))),
    ("Recursive.start_of_all_le",
     "start_of (layout_of ?ap) ?as
      <= start_of (layout_of ?ap) (length ?ap)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 1)))),
    ("Recursive.wf_tm_from_recf", "?tp = tm_of_rec ?recf ==> tm_wf0 ?tp",
     template_implication
      ([template_equation
         (template_var 1, template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Recursive.length_mvboxes", "length (mv_boxes ?aa ?ba ?n) = 3 * ?n",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0))),
         template_var 0))),
    ("Recursive.ci_even", "is_even (length (ci ?ly ?y ?i))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1),
               template_var 0))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_hole 0)),
    ("Recursive.abc_comp_commute", "?A [+] ?B [+] ?C = ?A [+] (?B [+] ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Recursive.abs_fetch",
     "abc_fetch (Suc 0) (addition ?m ?n ?p) = Some (Inc ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app (template_hole 4, template_hole 3)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 1)))),
    ("Recursive.abc_fetch", "abc_fetch 2 (mv_box ?m ?n) = Some (Goto 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_hole 4))),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("Recursive.length_under_max", "length ?xs < max (length ?xs + 3) ?fft",
     template_inequation
      (less_than, template_app (template_hole 5, template_var 1),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 5, template_var 1)),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)))),
         template_var 0))),
    ("Recursive.exp_suc", "?a \<up> Suc ?b = ?a \<up> ?b @ [?a]",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Recursive.abc_fetch", "abc_fetch 0 (mv_box ?m ?n) = Some (Dec ?m 3)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Recursive.abs_fetch",
     "abc_fetch 2 (addition ?m ?n ?p) = Some (Inc ?p)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app (template_hole 4, template_hole 3))),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Recursive.abs_fetch",
     "abc_fetch 3 (addition ?m ?n ?p) = Some (Goto 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app (template_hole 5, template_hole 4))),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app (template_hole 1, template_hole 0)))),
    ("Recursive.abc_list_crsp_lm_v",
     "abc_list_crsp ?lma ?lmb ==> abc_lm_v ?lma ?n = abc_lm_v ?lmb ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Recursive.list_crsp_simp2",
     "abc_list_crsp (?lm1.0 @ 0 \<up> ?n) ?lm2.0 ==>
      abc_list_crsp ?lm1.0 ?lm2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_hole 0))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), template_var 0)
           ))),
    ("Recursive.abc_comp_null", "(?A [+] ?B = []) = (?A = [] & ?B = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 1))
           ))),
    ("Recursive.shift_append",
     "Turing.shift (?xs @ ?ys) ?n =
      Turing.shift ?xs ?n @ Turing.shift ?ys ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Recursive.abs_fetch",
     "abc_fetch 5 (addition ?m ?n ?p) = Some (Inc ?m)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3)))),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 2)))),
    ("Recursive.all_le_start_of",
     "list_all (%(acn, s). s <= start_of (layout_of ?ap) (length ?ap))
       (tm_of ?ap)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Recursive.less_then_max_plus2", "?n + 2 < max (?n + 3) ?x",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_hole 4,
               template_app (template_hole 0, template_hole 2)))),
         template_var 0))),
    ("Recursive.le_max_insert",
     "?ffp <= max ?x0.0 (Max (insert ?ffp (?x1.0 ` ?x2.0 ` set ?gs)))",
     template_inequation
      (less_equals, template_var 4,
       template_app
        (template_app (template_hole 5, template_var 3),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_app (template_hole 0, template_var 0)))))))),
    ("Recursive.footprint_ge",
     "rec_ci ?a = (?p, ?arity, ?fp) ==> ?arity < ?fp",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 3),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Recursive.length_start_of_tm",
     "start_of (layout_of ?ap) (length ?ap) =
      Suc (length (tm_of ?ap) div 2)",
     template_equation
      (template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 0)),
         template_app (template_hole 7, template_var 0)),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Recursive.rec_exec_pr_0_simps",
     "rec_exec (Pr ?n ?f ?g) (?xs @ [0]) = rec_exec ?f ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))),
       template_app
        (template_app (template_hole 5, template_var 2), template_var 0))),
    ("Recursive.replicate_Suc_iff_anywhere",
     "?x # ?x \<up> ?b @ ?ys = ?x \<up> Suc ?b @ ?ys",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 2)),
         template_var 0))),
    ("Recursive.abs_fetch",
     "abc_fetch 0 (addition ?m ?n ?p) = Some (Dec ?m 4)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 1, template_hole 0))))))),
    ("Recursive.abc_list_crsp_lm_s",
     "abc_list_crsp ?lma ?lmb ==>
      abc_list_crsp (abc_lm_s ?lma ?m ?n) (abc_lm_s ?lmb ?m ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Recursive.mopup_even", "is_even (2 * ?x + length (mopup ?n))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, template_hole 3))),
                 template_var 1)),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)))),
         template_app
          (template_hole 5,
           template_app (template_hole 4, template_hole 3))),
       template_hole 0)),
    ("Recursive.abs_fetch",
     "abc_fetch 6 (addition ?m ?n ?p) = Some (Goto 4)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_hole 3)))),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_hole 0,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 5, template_hole 3))))))),
    ("Recursive.start_of_eq",
     "length ?ap < ?as ==>
      start_of (layout_of ?ap) ?as = start_of (layout_of ?ap) (length ?ap)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 3, template_var 1))))),
    ("Recursive.replicate_merge_anywhere",
     "?x \<up> ?a @ ?x \<up> ?b @ ?ys = ?x \<up> (?a + ?b) @ ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 2)),
         template_var 0))),
    ("Recursive.abs_fetch",
     "abc_fetch 4 (addition ?m ?n ?p) = Some (Dec ?p 7)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 5, template_hole 4)))),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_hole 6,
             template_app
              (template_hole 0,
               template_app (template_hole 0, template_hole 4))))))),
    ("Recursive.zip_pre",
     "length ?ys <= length ?ap ==>
      zip ?ys ?ap = zip ?ys (take (length ?ys) ?ap)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 4, template_var 1)),
             template_var 0))))),
    ("Recursive.length_shift_mopup",
     "length (Turing.shift (mopup ?n) ?ss) = 4 * ?n + 12",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 2, template_hole 1)))),
             template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_hole 2,
               template_app (template_hole 0, template_hole 1))))))),
    ("Recursive.sum_list_ci_even",
     "is_even (sum_list (map (length o (%(x, y). ci ?ly x y)) ?zs))",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app (template_hole 5, t_empty))),
               template_var 0))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1))),
       template_hole 0)),
    ("Recursive.list_double_update_2",
     "?lm[?a := ?x, ?b := ?y, ?a := z] = ?lm[?b := ?y, ?a := z]",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2)),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_hole 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_hole 0))),
    ("Recursive.terminate_s_reverse",
     "[| terminate s ?xs; !!n. ?xs = [n] ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Recursive.terminate_z_reverse",
     "[| terminate z ?xs; !!n. ?xs = [n] ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_hole 4),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Recursive.max_less_suc_suc",
     "max ?n (Suc ?n) < Suc (Suc (max (?n + 3) ?x + ?anything - Suc 0))",
     template_inequation
      (less_than,
       template_app
        (template_app (template_hole 7, template_var 2),
         template_app (template_hole 6, template_var 2)),
       template_app
        (template_hole 6,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 4, template_var 2),
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2, template_hole 1)))),
                     template_var 1)),
                 template_var 0)),
             template_app (template_hole 6, template_hole 0)))))),
    ("Recursive.param_pattern",
     "[| terminate ?f ?xs; rec_ci ?f = (?p, ?arity, ?fp) |]
      ==> length ?xs = ?arity",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app (template_hole 4, template_var 4),
          template_app
           (template_app (template_hole 3, template_var 2),
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_equation
        (template_app (template_hole 0, template_var 3), template_var 1))),
    ("Recursive.update_zero_to_zero",
     "[| ?am ! ?n = 0; ?n < length ?am |] ==> ?am[?n := 0] = ?am",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 1), template_var 0),
          template_hole 4),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_hole 4),
         template_var 1))),
    ("Recursive.cn_merge_gs_tl_app",
     "cn_merge_gs (?gs @ [?g]) ?pstr =
      cn_merge_gs ?gs ?pstr [+] cn_merge_gs [?g] (?pstr + length ?gs)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3))),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 3)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2)))))),
    ("Recursive.wf_tm_from_abacus",
     "?tp = tm_of ?ap ==>
      tm_wf0 (?tp @ Turing.shift (mopup ?n) (length ?tp div 2))",
     template_implication
      ([template_equation
         (template_var 2, template_app (template_hole 11, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 2),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app (template_hole 6, template_var 0)),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app (template_hole 4, template_var 2)),
                       template_app
                        (template_hole 3,
                         template_app
                          (template_hole 2, template_hole 1)))))),
               template_hole 0))
           ))),
    ("Recursive.length_le_max_insert_rec_ci",
     "length ?gs <= ?ffp ==>
      length ?gs
      <= max ?x1.0 (Max (insert ?ffp (?x2.0 ` ?x3.0 ` set ?gs)))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 4),
          template_var 3)],
       template_inequation
        (less_equals, template_app (template_hole 6, template_var 4),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app (template_hole 0, template_var 4))))))))),
    ("Recursive.tms_of_at_index",
     "?k < length ?ap ==>
      tms_of ?ap ! ?k =
      ci (layout_of ?ap) (start_of (layout_of ?ap) ?k) (?ap ! ?k)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 2, template_var 0)),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Recursive.mopup_div_2",
     "?b <= Suc ?x ==> ?b <= (2 * ?x + length (mopup ?n)) div 2",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 8, template_var 1))],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app (template_hole 3, template_hole 2))),
                   template_var 1)),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)))),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2)))))),
    ("Recursive.mopup_le6",
     "(?a, ?b) : set (mopup_a ?n) ==> ?b <= 2 * ?n + 6",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)))
            )],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1))),
               template_var 0)),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 0, template_hole 1))))))),
    ("Recursive.terminate_id_reverse",
     "[| terminate (recf.id ?m ?n) ?xs;
         [| ?n < ?m; length ?xs = ?m |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_inequation (less_than, template_var 2, template_var 3)],
          template_implication
           ([template_equation
              (template_app (template_hole 0, template_var 1),
               template_var 3)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Recursive.suc_suc_max_simp",
     "Suc (Suc (max (?xs + 3) ?fft - Suc (Suc ?xs))) =
      max (?xs + 3) ?fft - ?xs",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_hole 0)))),
                 template_var 0)),
             template_app
              (template_hole 6,
               template_app (template_hole 6, template_var 1))))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0)))),
             template_var 0)),
         template_var 1))),
    ("Recursive.abc_append_first_step_eq_pre",
     "?st < length ?A ==>
      abc_step_l (?st, ?lm) (abc_fetch ?st (?A @ ?B)) =
      abc_step_l (?st, ?lm) (abc_fetch ?st ?A)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2))))),
    ("Recursive.empty_boxes_correct",
     "?n <= length ?lm ==>
      {%nl. nl = ?lm} empty_boxes ?n {%nl. nl = 0 \<up> ?n @ drop ?n ?lm}",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 7, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 4, template_var 1)),
             t_empty)
           ))),
    ("Recursive.concat_in",
     "?i < length (concat ?xs) ==>
      EX k<length ?xs. concat ?xs ! ?i : set (?xs ! k)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 8,
            template_app (template_hole 7, template_var 0)))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Recursive.in_tms",
     "?i < length (tm_of ?ap) ==>
      EX k<length ?ap. tm_of ?ap ! ?i : set (tms_of ?ap ! k)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 9,
            template_app (template_hole 8, template_var 0)))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Recursive.tms_any_less",
     "[| ?k < length ?ap; (?a, ?b) : set (tms_of ?ap ! ?k) |]
      ==> ?b <= start_of (layout_of ?ap) (length ?ap)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app (template_hole 3, template_var 2)),
                  template_var 3)))
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app (template_hole 8, template_var 2))))),
    ("Recursive.suc_max_simp",
     "Suc (max (?n + 3) ?fft - Suc (Suc (Suc ?n))) =
      max (?n + 3) ?fft - Suc (Suc ?n)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0)))),
               template_var 0)),
           template_app
            (template_hole 6,
             template_app
              (template_hole 6,
               template_app (template_hole 6, template_var 1))))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0)))),
             template_var 0)),
         template_app
          (template_hole 6,
           template_app (template_hole 6, template_var 1))))),
    ("Recursive.abc_Hoare_haltE",
     "{%nl. nl = ?lm1.0} ?p {%nl. nl = ?lm2.0} ==>
      EX stp. abc_steps_l (0, ?lm1.0) ?p stp = (length ?p, ?lm2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, t_empty), template_var 1),
              t_empty)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Recursive.mv_box_inv_init",
     "[| ?m < length ?initlm; ?n < length ?initlm; ?m ~= ?n |]
      ==> mv_box_inv (0, ?initlm) ?m ?n ?initlm",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 1)),
                 template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Recursive.shift_le2",
     "(?a, ?b) : set (Turing.shift (mopup ?n) ?x) ==>
      ?b <= (2 * ?x + length (mopup ?n)) div 2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_var 1)),
                  template_var 0)))
            )],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 1))),
                   template_var 0)),
               template_app
                (template_hole 0,
                 template_app (template_hole 8, template_var 1)))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_hole 1)))))),
    ("Recursive.abc_list_crsp_simp",
     "[| abc_list_crsp ?lma ?lmb; ?m < length ?lma; ?m < length ?lmb |]
      ==> abc_list_crsp (?lma[?m := ?n]) (?lmb[?m := ?n])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 1, template_var 3)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Recursive.length_ci",
     "[| ?k < length ?ap; length (ci ?ly ?y (?ap ! ?k)) = 2 * ?qa |]
      ==> layout_of ?ap ! ?k = ?qa",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 10, template_var 3)),
        template_equation
         (template_app
           (template_hole 8,
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 4))),
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_hole 2))),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_var 4),
         template_var 0))),
    ("Recursive.abc_append_frist_steps_halt_eq",
     "abc_steps_l (0, ?lm) ?A ?n = (length ?A, ?lm') ==>
      EX n'. abc_steps_l (0, ?lm) (?A @ ?B) n' = (length ?A, ?lm')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 4)),
              template_var 3),
            template_var 2),
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 2, template_var 3)),
            template_var 1))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Recursive.abc_list_crsp_elim",
     "[| abc_list_crsp ?lma ?lmb;
         EX n. ?lma = ?lmb @ 0 \<up> n | ?lmb = ?lma @ 0 \<up> n ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 5, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("Recursive.arith_as_simp",
     "[| Suc ?n <= ?ba - ?aa; ?aa < ?ba |]
      ==> (?ba < Suc (?aa + (?ba - Suc (?aa + ?n) + ?n))) = False",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 1, template_var 0),
                         template_var 2)))),
                 template_var 2)))),
         template_hole 0))),
    ("Recursive.rec_exec_pr_Suc_simps",
     "rec_exec (Pr ?n ?f ?g) (?xs @ [Suc ?y]) =
      rec_exec ?g (?xs @ [?y, rec_exec (Pr ?n ?f ?g) (?xs @ [?y])])",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))),
       template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app (template_hole 4, template_var 4),
                         template_var 3),
                       template_var 2)),
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_hole 0)))),
               template_hole 0)))))),
    ("Recursive.butlast_last",
     "length ?lm1.0 = ?aa ==>
      (?lm1.0 @
       (0::?'a) \<up> ?n @
       last ?lm2.0 # ?lm3.0 @ butlast ?lm2.0 @ (0::?'a) # ?lm4.0) !
      (?aa + ?n) =
      last ?lm2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 5), template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 5),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_hole 4)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 2)),
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 1, template_var 2)),
                       template_app
                        (template_app (template_hole 3, template_hole 4),
                         template_var 0))))))),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 3)),
         template_app (template_hole 2, template_var 2)))),
    ("Recursive.list_all_add_6E",
     "list_all (%(acn, s). s <= Suc ?q) ?xs ==>
      list_all (%(acn, s). s <= ?q + (2 * ?n + 6)) ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9, template_app (template_hole 8, t_empty)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9, template_app (template_hole 8, t_empty)),
             template_var 1)
           ))),
    ("Recursive.findnth_le",
     "(?a, ?b)
      : set (Turing.shift (findnth ?n)
              (start_of (layout_of ?ap) ?k - Suc 0)) ==>
      ?b <= Suc (start_of (layout_of ?ap) ?k + 2 * ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 4),
                  template_var 3)),
              template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 2)),
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app
                         (template_hole 9,
                          template_app (template_hole 8, template_var 1)),
                        template_var 0)),
                    template_app (template_hole 7, template_hole 6)))))
            )],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_hole 0))),
               template_var 2)))))),
    ("Recursive.empty_one_box_correct",
     "{%nl. nl = 0 \<up> ?n @ ?x # ?lm} [Dec ?n 2, Goto 0]
      {%nl. nl = 0 # 0 \<up> ?n @ ?lm}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 12, t_empty),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)))),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 1, template_hole 8)),
                 template_hole 0))),
           t_empty)
         )),
    ("Recursive.abc_append_frist_steps_eq_pre",
     "[| abc_notfinal (abc_steps_l (0, ?lm) ?A ?n) ?A; ?A ~= [] |]
      ==> abc_steps_l (0, ?lm) (?A @ ?B) ?n = abc_steps_l (0, ?lm) ?A ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_hole 5),
                        template_var 3)),
                    template_var 2),
                  template_var 1)),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 3)),
             template_var 2),
           template_var 1)))),
    ("Recursive.put_in_tape_small_enough0",
     "0 < ?rsx ==>
      EX y. (?xs @ ?x # ?rsx # ?anything)
            [Suc (length ?xs) := ?rsx - Suc 0] = ?xs @ ?x # y # ?anything &
            y <= ?rsx",
     template_implication
      ([template_inequation (less_than, template_hole 10, template_var 3)],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Recursive.abc_append_frist_steps_halt_eq'",
     "[| abc_steps_l (0, ?lm) ?A ?n = (length ?A, ?lm'); ?A ~= [] |]
      ==> EX n'. abc_steps_l (0, ?lm) (?A @ ?B) n' = (length ?A, ?lm')",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_var 4)),
              template_var 3),
            template_var 2),
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 5, template_var 3)),
            template_var 1)),
        template_negation
         (template_equation (template_var 3, template_hole 2))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Recursive.abc_list_crsp_step",
     "[| abc_list_crsp ?lma ?lmb; abc_step_l (?aa, ?lma) ?i = (?a, ?lma');
         abc_step_l (?aa, ?lmb) ?i = (?a', ?lmb') |]
      ==> ?a' = ?a & abc_list_crsp ?lma' ?lmb'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 7),
              template_var 6)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 5),
                template_var 7)),
            template_var 4),
          template_app
           (template_app (template_hole 2, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 5),
                template_var 6)),
            template_var 4),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 3)),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 0))
           ))),
    ("Recursive.addition_inv_init",
     "[| ?m ~= ?n; max ?m ?n < ?p; ?p < length ?lm; ?lm ! ?p = 0 |]
      ==> addition_inv (0, ?lm) ?m ?n ?p ?lm",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 0), template_var 1),
          template_hole 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_hole 2),
                       template_var 0)),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Recursive.insert_dominated",
     "length ?gs <= ?ffp ==>
      length ?gs +
      (max ?xs (Max (insert ?ffp (?x1.0 ` ?x2.0 ` set ?gs))) - length ?gs) =
      max ?xs (Max (insert ?ffp (?x1.0 ` ?x2.0 ` set ?gs)))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 9, template_var 4),
          template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 9, template_var 4)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_app
                        (template_app (template_hole 1, template_var 0),
                         template_app
                          (template_hole 0, template_var 4))))))),
             template_app (template_hole 9, template_var 4))),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app (template_hole 0, template_var 4))))))))),
    ("Recursive.find_exponent_rec_exec",
     "[| ?args @ [rec_exec ?f ?args] = ?lm @ 0 \<up> ?n;
         length ?args < length ?lm |]
      ==> EX m. ?lm = ?args @ rec_exec ?f ?args # 0 \<up> m",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 3),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 3)),
              template_hole 5)),
          template_app
           (template_app (template_hole 8, template_var 1),
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3))),
        template_inequation
         (less_than, template_app (template_hole 1, template_var 3),
          template_app (template_hole 1, template_var 1))],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Recursive.abc_list_crsp_simp2",
     "[| abc_list_crsp ?lma ?lmb; ?m < length ?lma; ~ ?m < length ?lmb |]
      ==> abc_list_crsp (?lma[?m := ?n])
           (?lmb @ 0 \<up> (?m - length ?lmb) @ [?n])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 8, template_var 3)),
        template_negation
         (
            template_inequation
             (less_than, template_var 1,
              template_app (template_hole 8, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_app (template_hole 8, template_var 2))),
                     template_hole 2)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           ))),
    ("Recursive.abc_list_crsp_simp3",
     "[| abc_list_crsp ?lma ?lmb; ~ ?m < length ?lma; ?m < length ?lmb |]
      ==> abc_list_crsp (?lma @ 0 \<up> (?m - length ?lma) @ [?n])
           (?lmb[?m := ?n])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_inequation
             (less_than, template_var 1,
              template_app (template_hole 7, template_var 3))
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app (template_hole 4, template_var 1),
                           template_app (template_hole 7, template_var 3))),
                       template_hole 3)),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_hole 1)))),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Recursive.start_of_suc_inc",
     "[| ?k < length ?ap; ?ap ! ?k = Inc ?n |]
      ==> start_of (layout_of ?ap) (Suc ?k) =
          start_of (layout_of ?ap) ?k + 2 * ?n + 9",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 13, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 1),
            template_var 2),
          template_app (template_hole 10, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 1)),
           template_app (template_hole 6, template_var 2)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 7, template_var 1)),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_hole 1))),
                 template_var 0))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 0,
               template_app
                (template_hole 2,
                 template_app (template_hole 2, template_hole 1)))))))),
    ("Recursive.compile_s_correct'",
     "{%nl. nl = ?n # 0 \<up> 2 @ ?anything}
      addition 0 (Suc 0) 2 [+] [Inc (Suc 0)]
      {%nl. nl = ?n # Suc ?n # 0 # ?anything}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 14, t_empty),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_hole 6),
                     template_app (template_hole 3, template_hole 6)),
                   template_app
                    (template_hole 9,
                     template_app (template_hole 8, template_hole 7)))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 3, template_hole 6))),
                 template_hole 0))),
           t_empty)
         )),
    ("Recursive.terminate_cn_reverse",
     "[| terminate (Cn ?n ?f ?gs) ?xs;
         [| terminate ?f (map (%g. rec_exec g ?xs) ?gs);
            ALL g:set ?gs. terminate g ?xs; length ?xs = ?n |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_app (template_hole 6, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 7, template_var 3),
                 template_app
                  (template_app (template_hole 5, t_empty), template_var 2))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 2)),
                   t_empty)
                 )],
            template_implication
             ([template_equation
                (template_app (template_hole 0, template_var 1),
                 template_var 4)],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("Recursive.mv_box_halt_cond",
     "[| ?m ~= ?n; mv_box_inv (?a, ?b) ?m ?n ?lm; ?a = 3 |]
      ==> ?b = ?lm[?n := ?lm ! ?m + ?lm ! ?n, ?m := 0]",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 2),
                      template_var 1)),
                  template_var 4),
                template_var 3),
              template_var 0)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_hole 7,
            template_app (template_hole 6, template_hole 5)))],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 3),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 0),
                       template_var 4)),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 3)))),
             template_var 4),
           template_hole 0)))),
    ("Recursive.recursive_compile_to_tm_correct3",
     "terminate ?recf ?args ==>
      {%tp. tp = ([Bk, Bk], <?args>)} tm_of_rec ?recf
      {%tp. EX k l.
               tp = (Bk \<up> k, <rec_exec ?recf ?args> @ Bk \<up> l)}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, t_empty),
               template_app (template_hole 5, template_var 1)),
             t_empty)
           ))),
    ("Recursive.start_of_suc_dec",
     "[| ?k < length ?ap; ?ap ! ?k = Dec ?n ?e |]
      ==> start_of (layout_of ?ap) (Suc ?k) =
          start_of (layout_of ?ap) ?k + 2 * ?n + 16",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 12, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 10, template_var 2),
            template_var 3),
          template_app
           (template_app (template_hole 9, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app (template_hole 6, template_var 2)),
           template_app (template_hole 5, template_var 3)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_var 2)),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_hole 0))),
                 template_var 1))),
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_hole 1,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 1, template_hole 0))))))))),
    ("Recursive.mv_box_correct",
     "[| max ?m ?n < length ?lm; ?m ~= ?n |]
      ==> {%nl. nl = ?lm} mv_box ?m ?n
          {%nl. nl = ?lm[?n := ?lm ! ?m + ?lm ! ?n, ?m := 0]}",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 10, template_var 2),
            template_var 1),
          template_app (template_hole 9, template_var 0)),
        template_negation
         (template_equation (template_var 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             t_empty)
           ))),
    ("Recursive.abc_list_crsp_steps",
     "[| abc_steps_l (0, ?lm @ 0 \<up> ?m) ?aprog ?stp = (?a, ?lm');
         ?aprog ~= [] |]
      ==> EX lma.
             abc_steps_l (0, ?lm) ?aprog ?stp = (?a, lma) &
             abc_list_crsp ?lm' lma",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_app
                   (template_app (template_hole 7, template_var 5),
                    template_app
                     (template_app (template_hole 6, template_var 4),
                      template_hole 8)))),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 9, template_var 1),
            template_var 0)),
        template_negation
         (template_equation (template_var 3, template_hole 3))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Recursive.findnth_state_all_le1",
     "[| ?k < length ?ap; ?ap ! ?k = Inc ?n;
         (?a, ?b)
         : set (Turing.shift (findnth ?n)
                 (start_of (layout_of ?ap) ?k - Suc 0)) |]
      ==> ?b <= start_of (layout_of ?ap) (length ?ap)",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 14, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 12, template_var 3),
            template_var 4),
          template_app (template_hole 11, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 2)),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app
                         (template_hole 4,
                          template_app (template_hole 3, template_var 3)),
                        template_var 4)),
                    template_app (template_hole 2, template_hole 1)))))
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 3)),
           template_app (template_hole 14, template_var 3))))),
    ("Recursive.put_in_tape_small_enough1",
     "[| ?y <= ?rsx; 0 < ?y |]
      ==> EX ya.
             (?xs @ ?x # ?y # ?anything)[Suc (length ?xs) := ?y - Suc 0] =
             ?xs @ ?x # ya # ?anything &
             ya <= ?rsx",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation (less_than, template_hole 9, template_var 4)],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Recursive.compile_append_dummy_correct",
     "[| rec_ci ?f = (?ap, ?ary, ?fp); terminate ?f ?args |]
      ==> {%nl. nl = ?args} ?ap [+] dummy_abc (length ?args)
          {%nl. EX m. nl = ?args @ rec_exec ?f ?args # 0 \<up> m}",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 4),
          template_app
           (template_app (template_hole 13, template_var 3),
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1))),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 10, t_empty),
               template_app
                (template_app (template_hole 8, template_var 3),
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 0)))),
             t_empty)
           ))),
    ("Recursive.findnth_state_all_le2",
     "[| ?k < length ?ap; ?ap ! ?k = Dec ?n ?e;
         (?a, ?b)
         : set (Turing.shift (findnth ?n)
                 (start_of (layout_of ?ap) ?k - Suc 0)) |]
      ==> ?b <= start_of (layout_of ?ap) (length ?ap)",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app (template_hole 14, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 12, template_var 4),
            template_var 5),
          template_app
           (template_app (template_hole 11, template_var 3),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app (template_hole 6, template_var 3)),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app
                         (template_hole 4,
                          template_app (template_hole 3, template_var 4)),
                        template_var 5)),
                    template_app (template_hole 2, template_hole 1)))))
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 4)),
           template_app (template_hole 14, template_var 4))))),
    ("Recursive.index_at_zero_elem",
     "(?xs @
       ?x #
       ?re #
       (0::?'a) \<up> (max (length ?xs + 3) (max ?fft ?gft) -
                       Suc (Suc (length ?xs))) @
       (0::?'a) # ?anything) !
      max (length ?xs + 3) (max ?fft ?gft) =
      (0::?'a)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_var 5),
             template_app
              (template_app (template_hole 10, template_var 4),
               template_app
                (template_app (template_hole 10, template_var 3),
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_app
                                (template_hole 7,
                                 template_app
                                  (template_app
                                    (template_hole 6,
                                     template_app
(template_hole 5, template_var 5)),
                                   template_app
                                    (template_hole 4,
                                     template_app
(template_hole 3, template_hole 2)))),
                               template_app
                                (template_app
                                  (template_hole 7, template_var 2),
                                 template_var 1))),
                           template_app
                            (template_hole 1,
                             template_app
                              (template_hole 1,
                               template_app
                                (template_hole 5, template_var 5))))),
                       template_hole 0)),
                   template_app
                    (template_app (template_hole 10, template_hole 0),
                     template_var 0)))))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app (template_hole 5, template_var 5)),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_hole 2)))),
           template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1))),
       template_hole 0)),
    ("Recursive.list_all_suc_many",
     "list_all (%(acn, s). s <= Suc (Suc (Suc (Suc (Suc (Suc (2 * ?n)))))))
       ?xs ==>
      list_all
       (%(acn, s).
           s <= Suc (Suc (Suc (Suc (Suc (Suc (Suc (Suc (2 * ?n)))))))))
       ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7, template_app (template_hole 6, t_empty)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 6, t_empty)),
             template_var 0)
           ))),
    ("Recursive.mv_box_inv_halt",
     "[| max ?m ?n < length ?initlm; ?m ~= ?n |]
      ==> EX stp.
             case abc_steps_l (0, ?initlm) (mv_box ?m ?n) stp of
             (as, lm) => as = 3 & mv_box_inv (as, lm) ?m ?n ?initlm",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 14, template_var 2),
            template_var 1),
          template_app (template_hole 13, template_var 0)),
        template_negation
         (template_equation (template_var 2, template_var 1))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Recursive.recursive_compile_correct_norm'",
     "[| rec_ci ?f = (?ap, ?arity, ?ft); terminate ?f ?args |]
      ==> EX stp rl.
             abc_steps_l (0, ?args) ?ap stp = (length ?ap, rl) &
             abc_list_crsp (?args @ [rec_exec ?f ?args]) rl",
     template_implication
      ([template_equation
         (template_app (template_hole 16, template_var 4),
          template_app
           (template_app (template_hole 15, template_var 3),
            template_app
             (template_app (template_hole 14, template_var 2),
              template_var 1))),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 4),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 12, t_empty)))),
    ("Recursive.compile_id_correct'",
     "?n < length ?args ==>
      {%nl. nl = ?args @ 0 \<up> 2 @ ?anything}
      addition ?n (length ?args) (Suc (length ?args))
      {%nl. nl =
            ?args @
            rec_exec (recf.id (length ?args) ?n) ?args # 0 # ?anything}",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 13, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, t_empty),
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 2),
                   template_app (template_hole 13, template_var 1)),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 13, template_var 1)))),
             t_empty)
           ))),
    ("Recursive.mv_box_correct'",
     "[| max ?m ?n < length ?lm; ?m ~= ?n |]
      ==> EX stp.
             abc_steps_l (0, ?lm) (mv_box ?m ?n) stp =
             (3, ?lm[?n := ?lm ! ?m + ?lm ! ?n, ?m := 0])",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 15, template_var 2),
            template_var 1),
          template_app (template_hole 14, template_var 0)),
        template_negation
         (template_equation (template_var 2, template_var 1))],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("Recursive.adjust_paras",
     "length ?xs = ?n ==>
      {%nl. nl = ?xs @ ?x # ?y # ?anything}
      [Inc ?n, Dec (Suc ?n) 3, Goto (Suc 0)]
      {%nl. nl = ?xs @ Suc ?x # 0 # ?anything}",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 4), template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 13, t_empty),
               template_app
                (template_app
                  (template_hole 9,
                   template_app (template_hole 8, template_var 3)),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_var 3)),
                       template_app
                        (template_hole 5,
                         template_app (template_hole 4, template_hole 3)))),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_hole 2,
                         template_app (template_hole 6, template_hole 1))),
                     template_hole 0)))),
             t_empty)
           ))),
    ("Recursive.inc_state_all_le",
     "[| ?k < length ?ap; ?ap ! ?k = Inc ?n;
         (?a, ?b)
         : set (Turing.shift (Turing.shift tinc_b (2 * ?n))
                 (start_of (layout_of ?ap) ?k - Suc 0)) |]
      ==> ?b <= start_of (layout_of ?ap) (length ?ap)",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 18, template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 16, template_var 3),
            template_var 4),
          template_app (template_hole 15, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 11, template_hole 10),
                      template_app
                       (template_app
                         (template_hole 9,
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 7, template_hole 6))),
                        template_var 2))),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app
                         (template_hole 4,
                          template_app (template_hole 3, template_var 3)),
                        template_var 4)),
                    template_app (template_hole 2, template_hole 1)))))
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 3)),
           template_app (template_hole 18, template_var 3))))),
    ("Recursive.last_0",
     "[| Suc ?n <= ?ba - ?aa; length ?lm2.0 = Suc ?n;
         length ?lm3.0 = ?ba - Suc (?aa + ?n) |]
      ==> (last ?lm2.0 # ?lm3.0 @ butlast ?lm2.0 @ 0 # ?lm4.0) !
          (?ba - ?aa) =
          0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_var 5),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_var 3)),
        template_equation
         (template_app (template_hole 7, template_var 2),
          template_app (template_hole 10, template_var 5)),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app
           (template_app (template_hole 9, template_var 4),
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 5))))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2)),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 2)),
                   template_app
                    (template_app (template_hole 4, template_hole 0),
                     template_var 0))))),
           template_app
            (template_app (template_hole 9, template_var 4),
             template_var 3)),
         template_hole 0))),
    ("Recursive.adjust_paras'",
     "length ?xs = ?n ==>
      {%nl. nl = ?xs @ ?x # ?y # ?anything}
      [Inc ?n] [+] [Dec (Suc ?n) 2, Goto 0]
      {%nl. nl = ?xs @ Suc ?x # 0 # ?anything}",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 4), template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 14, t_empty),
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app (template_hole 8, template_var 3)),
                     template_hole 7)),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 3)),
                       template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_hole 2)))),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app (template_hole 1, template_hole 0)),
                     template_hole 7)))),
             t_empty)
           ))),
    ("Recursive.abc_list_crsp_simp4",
     "[| abc_list_crsp ?lma ?lmb; ~ ?m < length ?lma; ~ ?m < length ?lmb |]
      ==> abc_list_crsp (?lma @ 0 \<up> (?m - length ?lma) @ [?n])
           (?lmb @ 0 \<up> (?m - length ?lmb) @ [?n])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_inequation
             (less_than, template_var 1,
              template_app (template_hole 6, template_var 3))
            ),
        template_negation
         (
            template_inequation
             (less_than, template_var 1,
              template_app (template_hole 6, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_var 1),
                           template_app (template_hole 6, template_var 3))),
                       template_hole 2)),
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_hole 0)))),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_app (template_hole 6, template_var 2))),
                     template_hole 2)),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0))))
           ))),
    ("Recursive.dec_state_all_le",
     "[| ?k < length ?ap; ?ap ! ?k = Dec ?n ?e;
         (?a, ?b)
         : set (Turing.shift (Turing.shift tdec_b (2 * ?n))
                 (start_of (layout_of ?ap) ?k - Suc 0)) |]
      ==> ?b <= start_of (layout_of ?ap) (length ?ap)",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app (template_hole 18, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 16, template_var 4),
            template_var 5),
          template_app
           (template_app (template_hole 15, template_var 3),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 11, template_hole 10),
                      template_app
                       (template_app
                         (template_hole 9,
                          template_app
                           (template_hole 8,
                            template_app
                             (template_hole 7, template_hole 6))),
                        template_var 3))),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app
                         (template_hole 4,
                          template_app (template_hole 3, template_var 4)),
                        template_var 5)),
                    template_app (template_hole 2, template_hole 1)))))
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 4)),
           template_app (template_hole 18, template_var 4))))),
    ("Recursive.recursive_compile_correct",
     "[| terminate ?recf ?args; rec_ci ?recf = (?ap, ?arity, ?fp) |]
      ==> {%nl. nl = ?args @ 0 \<up> (?fp - ?arity) @ ?anything} ?ap
          {%nl. nl =
                ?args @
                rec_exec ?recf ?args #
                0 \<up> (?fp - Suc ?arity) @ ?anything}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 5),
              template_var 4)
            ),
        template_equation
         (template_app (template_hole 11, template_var 5),
          template_app
           (template_app (template_hole 10, template_var 3),
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 8, t_empty), template_var 3),
             t_empty)
           ))),
    ("Recursive.recursive_compile_to_tm_correct2",
     "terminate ?recf ?args ==>
      EX stp m l.
         steps0 (Suc 0, [Bk, Bk], <?args>) (tm_of_rec ?recf) stp =
         (0, Bk \<up> Suc (Suc m),
          Oc \<up> Suc (rec_exec ?recf ?args) @ Bk \<up> l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 16, t_empty)))),
    ("Recursive.addition_correct",
     "[| ?m ~= ?n; max ?m ?n < ?p; ?p < length ?lm; ?lm ! ?p = 0 |]
      ==> {%a. a = ?lm} addition ?m ?n ?p
          {%nl. addition_inv (7, nl) ?m ?n ?p ?lm}",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 11, template_var 3),
            template_var 2),
          template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 10, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 0), template_var 1),
          template_hole 8)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, t_empty),
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 2),
                 template_var 1)),
             t_empty)
           ))),
    ("Recursive.compile_s_correct",
     "[| rec_ci s = (?ap, ?arity, ?fp); rec_exec s [?n] = ?r |]
      ==> {%nl. nl = ?n # 0 \<up> (?fp - ?arity) @ ?anything} ?ap
          {%nl. nl = ?n # ?r # 0 \<up> (?fp - Suc ?arity) @ ?anything}",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_hole 13),
          template_app
           (template_app (template_hole 12, template_var 5),
            template_app
             (template_app (template_hole 11, template_var 4),
              template_var 3))),
        template_equation
         (template_app
           (template_app (template_hole 9, template_hole 13),
            template_app
             (template_app (template_hole 8, template_var 2),
              template_hole 7)),
          template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty), template_var 5),
             t_empty)
           ))),
    ("Recursive.compile_z_correct",
     "[| rec_ci z = (?ap, ?arity, ?fp); rec_exec z [?n] = ?r |]
      ==> {%nl. nl = ?n # 0 \<up> (?fp - ?arity) @ ?anything} ?ap
          {%nl. nl = ?n # ?r # 0 \<up> (?fp - Suc ?arity) @ ?anything}",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_hole 13),
          template_app
           (template_app (template_hole 12, template_var 5),
            template_app
             (template_app (template_hole 11, template_var 4),
              template_var 3))),
        template_equation
         (template_app
           (template_app (template_hole 9, template_hole 13),
            template_app
             (template_app (template_hole 8, template_var 2),
              template_hole 7)),
          template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty), template_var 5),
             t_empty)
           ))),
    ("Recursive.mv_box_correct_simp",
     "[| length ?xs = ?n; ?ft = max (?n + 3) (max ?fft ?gft) |]
      ==> {%nl. nl = ?xs @ 0 # 0 \<up> (?ft - ?n) @ ?anything} mv_box ?n ?ft
          {%nl. nl = ?xs @ 0 # 0 \<up> (?ft - ?n) @ ?anything}",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 5), template_var 4),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_app (template_hole 11, template_var 4),
                template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_hole 8)))),
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, t_empty),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3)),
             t_empty)
           ))),
    ("Recursive.cn_merge_gs_split",
     "[| ?i < length ?gs; rec_ci (?gs ! ?i) = (?ga, ?gb, ?gc) |]
      ==> cn_merge_gs (map rec_ci ?gs) ?p =
          cn_merge_gs (map rec_ci (take ?i ?gs)) ?p [+]
          (?ga [+] mv_box ?gb (?p + ?i)) [+]
          cn_merge_gs (map rec_ci (drop (Suc ?i) ?gs)) (?p + Suc ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app (template_hole 14, template_var 4)),
        template_equation
         (template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 11, template_var 4),
              template_var 5)),
          template_app
           (template_app (template_hole 10, template_var 3),
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 12),
               template_var 4)),
           template_var 0),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_hole 12),
                       template_app
                        (template_app (template_hole 4, template_var 5),
                         template_var 4))),
                   template_var 0)),
               template_app
                (template_app (template_hole 5, template_var 3),
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 5))))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 12),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 5)),
                   template_var 4))),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 0, template_var 5))))))),
    ("Recursive.mn_unhalt_case",
     "[| rec_ci (Mn ?n ?f) = (?ap, ?ar, ?ft) & length ?args = ?ar;
         ALL i.
            terminate ?f (?args @ [i]) & 0 < rec_exec ?f (?args @ [i]) |]
      ==> {%nl. nl = ?args @ 0 \<up> (?ft - ?ar) @ ?anything} ?ap \<up>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_hole 17,
                      template_app
                       (template_app (template_hole 16, template_var 6),
                        template_var 5))),
                  template_app
                   (template_app (template_hole 15, template_var 4),
                    template_app
                     (template_app (template_hole 14, template_var 3),
                      template_var 2)))),
              template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, template_var 1)),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty), template_var 4)
           ))),
    ("Recursive.find_exponent_complex",
     "[| ?args @ [rec_exec ?f ?args] = ?lm @ 0 \<up> ?n;
         ~ length ?args < length ?lm |]
      ==> EX m. (?lm @ 0 \<up> (length ?args - length ?lm) @ [Suc 0])
                [length ?args := 0] =
                ?args @ rec_exec ?f ?args # 0 \<up> m",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 12, template_var 3),
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 3)),
              template_hole 9)),
          template_app
           (template_app (template_hole 12, template_var 1),
            template_app
             (template_app (template_hole 8, template_var 0),
              template_hole 7))),
        template_negation
         (
            template_inequation
             (less_than, template_app (template_hole 4, template_var 3),
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Recursive.rec_ci_SucSuc_n",
     "[| rec_ci ?g = (?gap, ?gar, ?gft);
         ALL y<?x.
            terminate ?g (?xs @ [y, rec_exec (Pr ?n ?f ?g) (?xs @ [y])]);
         length ?xs = ?n; Suc ?y <= ?x |]
      ==> ?gar = Suc (Suc ?n)",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 8),
          template_app
           (template_app (template_hole 14, template_var 7),
            template_app
             (template_app (template_hole 13, template_var 6),
              template_var 5))),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_equation
         (template_app (template_hole 2, template_var 3), template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 0, template_var 0),
          template_var 4)],
       template_equation
        (template_var 6,
         template_app
          (template_hole 0,
           template_app (template_hole 0, template_var 2))))),
    ("Recursive.addition_correct'",
     "[| ?m ~= ?n; max ?m ?n < ?p; ?p < length ?lm; ?lm ! ?p = 0 |]
      ==> EX stp.
             case abc_steps_l (0, ?lm) (addition ?m ?n ?p) stp of
             (as, lm') => as = 7 & addition_inv (as, lm') ?m ?n ?p ?lm",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 13, template_var 3),
            template_var 2),
          template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 12, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 0),
            template_var 1),
          template_hole 10)],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Recursive.save_init_rs",
     "[| length ?xs = ?n; ?ft = max (?n + 3) (max ?fft ?gft) |]
      ==> {%nl. nl = ?xs @ rec_exec ?f ?xs # 0 \<up> (?ft - ?n) @ ?anything}
          mv_box ?n (Suc ?n)
          {%nl. nl =
                ?xs @
                0 # rec_exec ?f ?xs # 0 \<up> (?ft - Suc ?n) @ ?anything}",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 6), template_var 5),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 14,
              template_app
               (template_app (template_hole 13, template_var 5),
                template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_hole 10)))),
            template_app
             (template_app (template_hole 14, template_var 3),
              template_var 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 9, t_empty),
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_app (template_hole 0, template_var 5))),
             t_empty)
           ))),
    ("Recursive.butlast_elem",
     "[| Suc ?n <= ?ba - ?aa; ?aa < ?ba; length ?lm1.0 = ?aa;
         length ?lm2.0 = Suc ?n; length ?lm3.0 = ?ba - Suc (?aa + ?n) |]
      ==> (?lm1.0 @
           (0::?'a) \<up> ?n @
           last ?lm2.0 # ?lm3.0 @ butlast ?lm2.0 @ (0::?'a) # ?lm4.0) !
          (?ba + ?n) =
          (0::?'a)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 13, template_var 6),
          template_app
           (template_app (template_hole 12, template_var 5),
            template_var 4)),
        template_inequation (less_than, template_var 4, template_var 5),
        template_equation
         (template_app (template_hole 9, template_var 3), template_var 4),
        template_equation
         (template_app (template_hole 9, template_var 2),
          template_app (template_hole 13, template_var 6)),
        template_equation
         (template_app (template_hole 9, template_var 1),
          template_app
           (template_app (template_hole 12, template_var 5),
            template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 8, template_var 4),
                template_var 6))))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 3),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 6),
                     template_hole 3)),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, template_var 2)),
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app (template_hole 0, template_var 2)),
                       template_app
                        (template_app (template_hole 2, template_hole 3),
                         template_var 0))))))),
           template_app
            (template_app (template_hole 8, template_var 5),
             template_var 6)),
         template_hole 3))),
    ("Recursive.compile_id_correct",
     "[| ?n < ?m; length ?xs = ?m;
         rec_ci (recf.id ?m ?n) = (?ap, ?arity, ?fp);
         rec_exec (recf.id ?m ?n) ?xs = ?r |]
      ==> {%nl. nl = ?xs @ 0 \<up> (?fp - ?arity) @ ?anything} ?ap
          {%nl. nl = ?xs @ ?r # 0 \<up> (?fp - Suc ?arity) @ ?anything}",
     template_implication
      ([template_inequation (less_than, template_var 7, template_var 6),
        template_equation
         (template_app (template_hole 14, template_var 5), template_var 6),
        template_equation
         (template_app
           (template_hole 12,
            template_app
             (template_app (template_hole 11, template_var 6),
              template_var 7)),
          template_app
           (template_app (template_hole 10, template_var 4),
            template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2))),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 11, template_var 6),
                template_var 7)),
            template_var 5),
          template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, t_empty), template_var 4),
             t_empty)
           ))),
    ("Recursive.mv_box_max_plus_3_correct",
     "length ?xs = ?n ==>
      {%nl. nl =
            ?xs @
            ?x # 0 \<up> (max (?n + 3) (max ?fft ?gft) - ?n) @ ?anything}
      mv_box ?n (max (?n + 3) (max ?fft ?gft))
      {%nl. nl =
            ?xs @
            0 \<up> (max (?n + 3) (max ?fft ?gft) - ?n) @ ?x # ?anything}",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 5), template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 12, t_empty),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 4),
                       template_app
                        (template_hole 4,
                         template_app (template_hole 3, template_hole 2)))),
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 1)))),
             t_empty)
           ))),
    ("Recursive.terminate_mn_reverse",
     "[| terminate (Mn ?n ?f) ?xs;
         !!r. [| length ?xs = ?n; terminate ?f (?xs @ [r]);
                 rec_exec ?f (?xs @ [r]) = 0;
                 ALL i<r.
                    terminate ?f (?xs @ [i]) &
                    0 < rec_exec ?f (?xs @ [i]) |]
              ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("Recursive.mv_boxes_correct2",
     "[| ?n <= ?aa - ?ba; ?ba < ?aa; length ?lm1.0 = ?ba;
         length ?lm2.0 = ?aa - ?ba - ?n; length ?lm3.0 = ?n |]
      ==> {%nl. nl = ?lm1.0 @ 0 \<up> ?n @ ?lm2.0 @ ?lm3.0 @ ?lm4.0}
          mv_boxes ?aa ?ba ?n
          {%nl. nl = ?lm1.0 @ ?lm3.0 @ ?lm2.0 @ 0 \<up> ?n @ ?lm4.0}",
     template_implication
      ([template_inequation
         (less_equals, template_var 6,
          template_app
           (template_app (template_hole 9, template_var 5),
            template_var 4)),
        template_inequation (less_than, template_var 4, template_var 5),
        template_equation
         (template_app (template_hole 6, template_var 3), template_var 4),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 9, template_var 5),
                template_var 4)),
            template_var 6)),
        template_equation
         (template_app (template_hole 6, template_var 1), template_var 6)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 4),
                 template_var 6)),
             t_empty)
           ))),
    ("Recursive.mv_boxes_correct",
     "[| ?aa + ?n <= ?ba; ?aa < ?ba; length ?lm1.0 = ?aa;
         length ?lm2.0 = ?n; length ?lm3.0 = ?ba - ?aa - ?n |]
      ==> {%nl. nl = ?lm1.0 @ ?lm2.0 @ ?lm3.0 @ 0 \<up> ?n @ ?lm4.0}
          mv_boxes ?aa ?ba ?n
          {%nl. nl = ?lm1.0 @ 0 \<up> ?n @ ?lm3.0 @ ?lm2.0 @ ?lm4.0}",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 10, template_var 6),
            template_var 5),
          template_var 4),
        template_inequation (less_than, template_var 6, template_var 4),
        template_equation
         (template_app (template_hole 7, template_var 3), template_var 6),
        template_equation
         (template_app (template_hole 7, template_var 2), template_var 5),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 6, template_var 4),
                template_var 6)),
            template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 4),
                 template_var 5)),
             t_empty)
           ))),
    ("Recursive.mv_box_ok_suc_simp",
     "length ?xs = ?n ==>
      {%nl. nl =
            ?xs @
            rec_exec ?f ?xs #
            0 \<up> (max (?n + 3) (max ?fft ?gft) - Suc ?n) @
            ?x # ?anything}
      mv_box ?n (Suc ?n)
      {%nl. nl =
            ?xs @
            0 #
            rec_exec ?f ?xs #
            0 \<up> (max (?n + 3) (max ?fft ?gft) - Suc (Suc ?n)) @
            ?x # ?anything}",
     template_implication
      ([template_equation
         (template_app (template_hole 15, template_var 6), template_var 5)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 14, t_empty),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_app (template_hole 2, template_var 5))),
             t_empty)
           ))),
    ("Recursive.loop_back",
     "[| length ?A = length ?gap + 4; length ?xs = ?n |]
      ==> EX stp.
             abc_steps_l (length ?A, ?xs @ ?m # 0 # ?x # ?anything)
              (?A @
               [Dec (Suc (Suc ?n)) 0, Inc (Suc ?n), Goto (length ?gap + 4)])
              stp =
             (0, ?xs @ ?m # ?x # 0 # ?anything)",
     template_implication
      ([template_equation
         (template_app (template_hole 20, template_var 6),
          template_app
           (template_app
             (template_hole 19,
              template_app (template_hole 18, template_var 5)),
            template_app
             (template_hole 17,
              template_app
               (template_hole 16,
                template_app (template_hole 16, template_hole 15))))),
        template_equation
         (template_app (template_hole 14, template_var 4), template_var 3)],
       template_predicate (template_app (template_hole 13, t_empty)))),
    ("Recursive.loop_back'",
     "[| length ?A = length ?gap + 4; length ?xs = ?n; ?x <= ?y |]
      ==> EX stp.
             abc_steps_l (length ?A, ?xs @ ?m # (?y - ?x) # ?x # ?anything)
              (?A @
               [Dec (Suc (Suc ?n)) 0, Inc (Suc ?n), Goto (length ?gap + 4)])
              stp =
             (length ?A, ?xs @ ?m # ?y # 0 # ?anything)",
     template_implication
      ([template_equation
         (template_app (template_hole 22, template_var 7),
          template_app
           (template_app
             (template_hole 21,
              template_app (template_hole 20, template_var 6)),
            template_app
             (template_hole 19,
              template_app
               (template_hole 18,
                template_app (template_hole 18, template_hole 17))))),
        template_equation
         (template_app (template_hole 16, template_var 5), template_var 4),
        template_inequation (less_equals, template_var 3, template_var 2)],
       template_predicate (template_app (template_hole 14, t_empty)))),
    ("Recursive.update_butlast_eq0",
     "[| Suc ?n <= ?ba - ?aa; ?aa < ?ba; length ?lm1.0 = ?aa;
         length ?lm2.0 = Suc ?n; length ?lm3.0 = ?ba - Suc (?aa + ?n) |]
      ==> (?lm1.0 @
           0 \<up> ?n @ last ?lm2.0 # ?lm3.0 @ butlast ?lm2.0 @ 0 # ?lm4.0)
          [?ba + ?n := last ?lm2.0, ?aa + ?n := 0] =
          ?lm1.0 @ 0 # 0 \<up> ?n @ ?lm3.0 @ ?lm2.0 @ ?lm4.0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 13, template_var 6),
          template_app
           (template_app (template_hole 12, template_var 5),
            template_var 4)),
        template_inequation (less_than, template_var 4, template_var 5),
        template_equation
         (template_app (template_hole 9, template_var 3), template_var 4),
        template_equation
         (template_app (template_hole 9, template_var 2),
          template_app (template_hole 13, template_var 6)),
        template_equation
         (template_app (template_hole 9, template_var 1),
          template_app
           (template_app (template_hole 12, template_var 5),
            template_app
             (template_hole 13,
              template_app
               (template_app (template_hole 8, template_var 4),
                template_var 6))))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app (template_hole 5, template_var 3),
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app (template_hole 4, template_var 6),
                             template_hole 3)),
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_hole 1, template_var 2)),
                           template_app
                            (template_app (template_hole 5, template_var 1),
                             template_app
                              (template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 0, template_var 2)),
                               template_app
                                (template_app
                                  (template_hole 2, template_hole 3),
                                 template_var 0))))))),
                   template_app
                    (template_app (template_hole 8, template_var 5),
                     template_var 6)),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app (template_hole 8, template_var 4),
               template_var 6)),
           template_hole 3),
         template_app
          (template_app (template_hole 5, template_var 3),
           template_app
            (template_app (template_hole 2, template_hole 3),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 6),
                   template_hole 3)),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 0)))))))),
    ("Recursive.exists_smaller_in_list1",
     "[| ?m ~= ?n; ?m < length ?initlm; ?n < length ?initlm;
         Suc (?k + ?l) = ?initlm ! ?m + ?initlm ! ?n; ?k < ?initlm ! ?m |]
      ==> EX ka la.
             ?initlm[?m := ?k, ?n := ?l, ?n := Suc ?l] = ?initlm
             [?m := ka, ?n := la] &
             ka + la = ?initlm ! ?m + ?initlm ! ?n & ka <= ?initlm ! ?m",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_inequation
         (less_than, template_var 4,
          template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)),
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 4)),
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 3))),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 4))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Recursive.abc_lm_s_simp0",
     "length ?xs = ?n ==>
      abc_lm_s
       (?xs @
        ?x #
        rec_exec (Pr ?n ?f ?g) (?xs @ [?x]) #
        0 \<up> (max (?n + 3) (max ?fft ?gft) - Suc (Suc ?n)) @
        0 # ?anything)
       (max (?n + 3) (max ?fft ?gft)) 0 =
      ?xs @
      ?x #
      rec_exec (Pr ?n ?f ?g) (?xs @ [?x]) #
      0 \<up> (max (?n + 3) (max ?fft ?gft) - Suc ?n) @ ?anything",
     template_implication
      ([template_equation
         (template_app (template_hole 16, template_var 7), template_var 6)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_var 7),
                 template_app
                  (template_app (template_hole 12, template_var 5),
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app
                          (template_hole 11,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 10, template_var 6),
                               template_var 4),
                             template_var 3)),
                         template_app
                          (template_app (template_hole 13, template_var 7),
                           template_app
                            (template_app
                              (template_hole 12, template_var 5),
                             template_hole 9)))),
                     template_app
                      (template_app
                        (template_hole 13,
                         template_app
                          (template_app
                            (template_hole 8,
                             template_app
                              (template_app
                                (template_hole 7,
                                 template_app
                                  (template_app
                                    (template_hole 6,
                                     template_app
(template_app (template_hole 5, template_var 6),
 template_app
  (template_hole 4, template_app (template_hole 3, template_hole 2)))),
                                   template_app
                                    (template_app
(template_hole 6, template_var 2),
                                     template_var 1))),
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 1, template_var 6)))),
                           template_hole 0)),
                       template_app
                        (template_app (template_hole 12, template_hole 0),
                         template_var 0)))))),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 6),
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_hole 2)))),
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_var 1))),
           template_hole 0),
         template_app
          (template_app (template_hole 13, template_var 7),
           template_app
            (template_app (template_hole 12, template_var 5),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_app (template_hole 10, template_var 6),
                         template_var 4),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 13, template_var 7),
                     template_app
                      (template_app (template_hole 12, template_var 5),
                       template_hole 9)))),
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 5, template_var 6),
                                 template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 3, template_hole 2)))),
                             template_app
                              (template_app
                                (template_hole 6, template_var 2),
                               template_var 1))),
                         template_app (template_hole 1, template_var 6))),
                     template_hole 0)),
                 template_var 0))))))),
    ("Recursive.abc_steps_prop",
     "[| max ?m ?n < length ?initlm; ?m ~= ?n |]
      ==> ~ (case abc_steps_l (0, ?initlm) (mv_box ?m ?n) ?na of
             (as, lm) => %m. as = 3)
             ?m &
          mv_box_inv (abc_steps_l (0, ?initlm) (mv_box ?m ?n) ?na) ?m ?n
           ?initlm -->
          mv_box_inv (abc_steps_l (0, ?initlm) (mv_box ?m ?n) (Suc ?na)) ?m
           ?n ?initlm &
          ((abc_steps_l (0, ?initlm) (mv_box ?m ?n) (Suc ?na), ?m),
           abc_steps_l (0, ?initlm) (mv_box ?m ?n) ?na, ?m)
          : mv_box_LE",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 19, template_var 3),
            template_var 2),
          template_app (template_hole 18, template_var 1)),
        template_negation
         (template_equation (template_var 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_hole 17,
                     template_app
                      (template_app
                        (template_app (template_hole 13, t_empty),
                         template_app
                          (template_app
                            (template_app
                              (template_hole 9,
                               template_app
                                (template_app
                                  (template_hole 8, template_hole 7),
                                 template_var 1)),
                             template_app
                              (template_app
                                (template_hole 6, template_var 3),
                               template_var 2)),
                           template_var 0)),
                       template_var 3))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 9,
                               template_app
                                (template_app
                                  (template_hole 8, template_hole 7),
                                 template_var 1)),
                             template_app
                              (template_app
                                (template_hole 6, template_var 3),
                               template_var 2)),
                           template_var 0)),
                       template_var 3),
                     template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 9,
                               template_app
                                (template_app
                                  (template_hole 8, template_hole 7),
                                 template_var 1)),
                             template_app
                              (template_app
                                (template_hole 6, template_var 3),
                               template_var 2)),
                           template_app (template_hole 4, template_var 0))),
                       template_var 3),
                     template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_hole 1,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 9,
                                 template_app
                                  (template_app
                                    (template_hole 8, template_hole 7),
                                   template_var 1)),
                               template_app
                                (template_app
                                  (template_hole 6, template_var 3),
                                 template_var 2)),
                             template_app
                              (template_hole 4, template_var 0))),
                         template_var 3)),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 9,
                               template_app
                                (template_app
                                  (template_hole 8, template_hole 7),
                                 template_var 1)),
                             template_app
                              (template_app
                                (template_hole 6, template_var 3),
                               template_var 2)),
                           template_var 0)),
                       template_var 3))),
                 template_hole 0)))
           ))),
    ("Recursive.recursive_compile_to_tm_correct1",
     "[| rec_ci ?recf = (?ap, ?ary, ?fp); terminate ?recf ?args;
         ?tp = tm_of (?ap [+] dummy_abc (length ?args)) |]
      ==> EX stp m l.
             steps0 (Suc 0, Bk # Bk # ?ires, <?args> @ Bk \<up> ?rn)
              (?tp @ Turing.shift (mopup (length ?args)) (length ?tp div 2))
              stp =
             (0, Bk \<up> m @ Bk # Bk # ?ires,
              Oc \<up> Suc (rec_exec ?recf ?args) @ Bk \<up> l)",
     template_implication
      ([template_equation
         (template_app (template_hole 31, template_var 7),
          template_app
           (template_app (template_hole 30, template_var 6),
            template_app
             (template_app (template_hole 29, template_var 5),
              template_var 4))),
        template_predicate
         (
            template_app
             (template_app (template_hole 28, template_var 7),
              template_var 3)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_hole 26,
            template_app
             (template_app (template_hole 25, template_var 6),
              template_app
               (template_hole 24,
                template_app (template_hole 23, template_var 3)))))],
       template_predicate (template_app (template_hole 22, t_empty)))),
    ("Recursive.exists_smaller_in_list0",
     "[| ?m ~= ?n; ?m < length ?initlm; ?n < length ?initlm;
         ?k + ?l = ?initlm ! ?m + ?initlm ! ?n; ?k <= ?initlm ! ?m;
         0 < ?k |]
      ==> EX ka la.
             ?initlm[?m := ?k, ?n := ?l, ?m := ?k - Suc 0] = ?initlm
             [?m := ka, ?n := la] &
             Suc (ka + la) = ?initlm ! ?m + ?initlm ! ?n &
             ka < ?initlm ! ?m",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_inequation
         (less_than, template_var 4,
          template_app (template_hole 10, template_var 2)),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 10, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 1), template_var 0),
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 4)),
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 3))),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 8, template_var 2),
            template_var 4)),
        template_inequation (less_than, template_hole 6, template_var 1)],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Recursive.exists_small_list_elem7",
     "[| ?m ~= ?n; ?p < length ?lm; ?lm ! ?p = 0; ?m < ?p; ?n < ?p;
         ?x < ?lm ! ?m |]
      ==> EX xa<=?lm ! ?m.
             ?lm[?m := Suc ?x, ?n := ?lm ! ?n + ?lm ! ?m,
                 ?p := ?lm ! ?m - Suc ?x] =
             ?lm[?m := xa, ?n := ?lm ! ?n + ?lm ! ?m, ?p := ?lm ! ?m - xa]",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 10, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 1), template_var 2),
          template_hole 8),
        template_inequation (less_than, template_var 4, template_var 2),
        template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 9, template_var 1),
            template_var 4))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Recursive.exists_small_list_elem4",
     "[| ?m ~= ?n; ?p < length ?lm; ?lm ! ?p = 0; ?m < ?p; ?n < ?p;
         ?x < ?lm ! ?m |]
      ==> EX xa<=?lm ! ?m.
             ?lm[?m := ?x, ?n := ?lm ! ?n + ?lm ! ?m - ?x,
                 ?p := ?lm ! ?m - ?x] =
             ?lm[?m := xa, ?n := ?lm ! ?n + ?lm ! ?m - xa,
                 ?p := ?lm ! ?m - xa]",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 2),
          template_hole 7),
        template_inequation (less_than, template_var 4, template_var 2),
        template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 4))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Recursive.mn_unhalt_case'",
     "[| rec_ci ?f = (?a, ?b, ?c);
         ALL i. terminate ?f (?args @ [i]) & 0 < rec_exec ?f (?args @ [i]);
         ?B =
         [Dec (Suc (length ?args)) (length ?a + 5),
          Dec (Suc (length ?args)) (length ?a + 3), Goto (Suc (length ?a)),
          Inc (length ?args), Goto 0] |]
      ==> {%nl. nl =
                ?args @
                0 \<up> (max (Suc (length ?args)) ?c - length ?args) @
                ?anything}
          ?a @ ?B \<up>",
     template_implication
      ([template_equation
         (template_app (template_hole 31, template_var 6),
          template_app
           (template_app (template_hole 30, template_var 5),
            template_app
             (template_app (template_hole 29, template_var 4),
              template_var 3))),
        template_predicate (template_app (template_hole 28, t_empty)),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 18,
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_hole 16,
                    template_app (template_hole 15, template_var 2))),
                template_app
                 (template_app
                   (template_hole 14,
                    template_app (template_hole 13, template_var 5)),
                  template_app
                   (template_hole 12,
                    template_app
                     (template_hole 11,
                      template_app (template_hole 10, template_hole 9)))))),
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app
                   (template_hole 17,
                    template_app
                     (template_hole 16,
                      template_app (template_hole 15, template_var 2))),
                  template_app
                   (template_app
                     (template_hole 14,
                      template_app (template_hole 13, template_var 5)),
                    template_app
                     (template_hole 12,
                      template_app (template_hole 11, template_hole 9))))),
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_hole 8,
                    template_app
                     (template_hole 16,
                      template_app (template_hole 13, template_var 5)))),
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_hole 7,
                      template_app (template_hole 15, template_var 2))),
                  template_app
                   (template_app
                     (template_hole 18,
                      template_app (template_hole 8, template_hole 21)),
                    template_hole 6))))))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 1))
           ))),
    ("Recursive.update_butlast_eq1",
     "[| Suc (length ?lm1.0 + ?n) <= ?ba; length ?lm2.0 = Suc ?n;
         length ?lm3.0 = ?ba - Suc (length ?lm1.0 + ?n);
         ~ ?ba - Suc (length ?lm1.0) < ?ba - Suc (length ?lm1.0 + ?n);
         ~ ?ba + ?n - length ?lm1.0 < ?n |]
      ==> 0 \<up> ?n @ (last ?lm2.0 # ?lm3.0 @ butlast ?lm2.0 @ 0 # ?lm4.0)
          [?ba - length ?lm1.0 := last ?lm2.0, 0 := 0] =
          0 # 0 \<up> ?n @ ?lm3.0 @ ?lm2.0 @ ?lm4.0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 15,
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 5)),
              template_var 4)),
          template_var 3),
        template_equation
         (template_app (template_hole 11, template_var 2),
          template_app (template_hole 15, template_var 4)),
        template_equation
         (template_app (template_hole 11, template_var 1),
          template_app
           (template_app (template_hole 10, template_var 3),
            template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_hole 14,
                  template_app (template_hole 13, template_var 5)),
                template_var 4)))),
        template_negation
         (
            template_inequation
             (less_than,
              template_app
               (template_app (template_hole 10, template_var 3),
                template_app
                 (template_hole 15,
                  template_app (template_hole 13, template_var 5))),
              template_app
               (template_app (template_hole 10, template_var 3),
                template_app
                 (template_hole 15,
                  template_app
                   (template_app
                     (template_hole 14,
                      template_app (template_hole 13, template_var 5)),
                    template_var 4))))
            ),
        template_negation
         (
            template_inequation
             (less_than,
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 14, template_var 3),
                    template_var 4)),
                template_app (template_hole 13, template_var 5)),
              template_var 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 4),
               template_hole 4)),
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app (template_hole 1, template_var 2)),
                         template_app
                          (template_app (template_hole 6, template_var 1),
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_hole 0, template_var 2)),
                             template_app
                              (template_app
                                (template_hole 2, template_hole 4),
                               template_var 0))))),
                     template_app
                      (template_app (template_hole 10, template_var 3),
                       template_app (template_hole 13, template_var 5))),
                   template_app (template_hole 1, template_var 2))),
               template_hole 4),
             template_hole 4)),
         template_app
          (template_app (template_hole 2, template_hole 4),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 4),
                 template_hole 4)),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_var 0))))))),
    ("Recursive.exists_small_list_elem6",
     "[| ?m ~= ?n; ?p < length ?lm; ?lm ! ?p = 0; ?m < ?p; ?n < ?p;
         ?x < ?lm ! ?m |]
      ==> EX xa<?lm ! ?m.
             ?lm[?m := ?x, ?n := ?lm ! ?n + ?lm ! ?m,
                 ?p := ?lm ! ?m - Suc ?x, ?m := Suc ?x] =
             ?lm[?m := Suc xa, ?n := ?lm ! ?n + ?lm ! ?m,
                 ?p := ?lm ! ?m - Suc xa]",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 2),
          template_hole 7),
        template_inequation (less_than, template_var 4, template_var 2),
        template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 4))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Recursive.exists_small_list_elem3",
     "[| ?m ~= ?n; ?p < length ?lm; ?lm ! ?p = 0; ?m < ?p; ?n < ?p;
         ?x < ?lm ! ?m |]
      ==> EX xa<?lm ! ?m.
             ?lm[?m := ?x, ?n := ?lm ! ?n + ?lm ! ?m - ?x,
                 ?p := ?lm ! ?m - Suc ?x, ?p := ?lm ! ?m - ?x] =
             ?lm[?m := xa, ?n := ?lm ! ?n + ?lm ! ?m - xa,
                 ?p := ?lm ! ?m - xa]",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 2),
          template_hole 7),
        template_inequation (less_than, template_var 4, template_var 2),
        template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 4))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Recursive.update_butlast_eq2",
     "[| Suc ?n <= ?aa - length ?lm1.0; length ?lm1.0 < ?aa;
         length ?lm2.0 = ?aa - Suc (length ?lm1.0 + ?n);
         length ?lm3.0 = Suc ?n;
         ~ ?aa - Suc (length ?lm1.0) < ?aa - Suc (length ?lm1.0 + ?n);
         ~ ?aa + ?n - length ?lm1.0 < ?n |]
      ==> butlast ?lm3.0 @ (0 # ?lm2.0 @ 0 \<up> ?n @ last ?lm3.0 # ?lm4.0)
          [0 := last ?lm3.0, ?aa - length ?lm1.0 := 0] =
          ?lm3.0 @ ?lm2.0 @ 0 # 0 \<up> ?n @ ?lm4.0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 15, template_var 5),
          template_app
           (template_app (template_hole 14, template_var 4),
            template_app (template_hole 13, template_var 3))),
        template_inequation
         (less_than, template_app (template_hole 13, template_var 3),
          template_var 4),
        template_equation
         (template_app (template_hole 10, template_var 2),
          template_app
           (template_app (template_hole 14, template_var 4),
            template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_hole 9,
                  template_app (template_hole 13, template_var 3)),
                template_var 5)))),
        template_equation
         (template_app (template_hole 10, template_var 1),
          template_app (template_hole 15, template_var 5)),
        template_negation
         (
            template_inequation
             (less_than,
              template_app
               (template_app (template_hole 14, template_var 4),
                template_app
                 (template_hole 15,
                  template_app (template_hole 13, template_var 3))),
              template_app
               (template_app (template_hole 14, template_var 4),
                template_app
                 (template_hole 15,
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app (template_hole 13, template_var 3)),
                    template_var 5))))
            ),
        template_negation
         (
            template_inequation
             (less_than,
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 9, template_var 4),
                    template_var 5)),
                template_app (template_hole 13, template_var 3)),
              template_var 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_app
                          (template_app (template_hole 6, template_var 2),
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 1, template_var 5),
                                 template_hole 2)),
                             template_app
                              (template_app
                                (template_hole 3,
                                 template_app
                                  (template_hole 0, template_var 1)),
                               template_var 0))))),
                     template_hole 2),
                   template_app (template_hole 0, template_var 1))),
               template_app
                (template_app (template_hole 14, template_var 4),
                 template_app (template_hole 13, template_var 3))),
             template_hole 2)),
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 1, template_var 5),
                     template_hole 2)),
                 template_var 0))))))),
    ("Recursive.clean_paras",
     "length ?gs <= ?ffp ==>
      {%nl. nl =
            map (%i. rec_exec i ?xs) ?gs @
            0 \<up> (max (Suc (length ?xs))
                      (Max (insert ?ffp
                             ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) -
                     length ?gs) @
            rec_exec (Cn (length ?xs) ?f ?gs) ?xs #
            0 \<up> length ?gs @ ?xs @ ?anything}
      empty_boxes (length ?gs)
      {%nl. nl =
            0 \<up> max (Suc (length ?xs))
                     (Max (insert ?ffp
                            ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) @
            rec_exec (Cn (length ?xs) ?f ?gs) ?xs #
            0 \<up> length ?gs @ ?xs @ ?anything}",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 22, template_var 4),
          template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 21, t_empty),
               template_app
                (template_hole 0,
                 template_app (template_hole 22, template_var 4))),
             t_empty)
           ))),
    ("Recursive.restore_new_paras",
     "length ?gs <= ?ffp ==>
      {%nl. nl =
            0 \<up> max (Suc (length ?xs))
                     (Max (insert ?ffp
                            ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) @
            map (%i. rec_exec i ?xs) ?gs @ 0 # ?xs @ ?anything}
      mv_boxes
       (max (Suc (length ?xs))
         (Max (insert ?ffp ((%(aprog, p, n). n) ` rec_ci ` set ?gs))))
       0 (length ?gs)
      {%nl. nl =
            map (%i. rec_exec i ?xs) ?gs @
            0 \<up> max (Suc (length ?xs))
                     (Max (insert ?ffp
                            ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) @
            0 # ?xs @ ?anything}",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 20, template_var 3),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 19, t_empty),
               template_app
                (template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app
                        (template_hole 15,
                         template_app
                          (template_hole 14,
                           template_app
                            (template_hole 13, template_var 1))),
                       template_app
                        (template_hole 12,
                         template_app
                          (template_app (template_hole 11, template_var 2),
                           template_app
                            (template_app
                              (template_hole 10,
                               template_app (template_hole 9, t_empty)),
                             template_app
                              (template_app
                                (template_hole 7, template_hole 6),
                               template_app
                                (template_hole 5, template_var 3))))))),
                   template_hole 4),
                 template_app (template_hole 20, template_var 3))),
             t_empty)
           ))),
    ("Recursive.contract_dec_ft_length_plus_7",
     "[| ?ft = max (?n + 3) (max ?fft ?gft); length ?xs = ?n |]
      ==> {%nl. nl =
                ?xs @
                (?x - Suc ?y) #
                rec_exec (Pr ?n ?f ?g) (?xs @ [?x - Suc ?y]) #
                0 \<up> (?ft - Suc (Suc ?n)) @ Suc ?y # ?anything}
          [Dec ?ft (length ?gap + 7)]
          {%nl. nl =
                ?xs @
                (?x - Suc ?y) #
                rec_exec (Pr ?n ?f ?g) (?xs @ [?x - Suc ?y]) #
                0 \<up> (?ft - Suc (Suc ?n)) @ ?y # ?anything}",
     template_implication
      ([template_equation
         (template_var 10,
          template_app
           (template_app
             (template_hole 20,
              template_app
               (template_app (template_hole 19, template_var 9),
                template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_hole 16)))),
            template_app
             (template_app (template_hole 20, template_var 8),
              template_var 7))),
        template_equation
         (template_app (template_hole 15, template_var 6), template_var 9)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 14, t_empty),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 10),
                     template_app
                      (template_app
                        (template_hole 19,
                         template_app (template_hole 1, template_var 0)),
                       template_app
                        (template_hole 18,
                         template_app
                          (template_hole 17,
                           template_app
                            (template_hole 17, template_hole 16)))))),
                 template_hole 0)),
             t_empty)
           ))),
    ("Recursive.exists_small_list_elem1",
     "[| ?m ~= ?n; ?p < length ?lm; ?lm ! ?p = 0; ?m < ?p; ?n < ?p;
         ?x <= ?lm ! ?m; 0 < ?x |]
      ==> EX xa<?lm ! ?m.
             ?lm[?m := ?x, ?n := ?lm ! ?n + ?lm ! ?m - ?x,
                 ?p := ?lm ! ?m - ?x, ?m := ?x - Suc 0] =
             ?lm[?m := xa, ?n := ?lm ! ?n + ?lm ! ?m - Suc xa,
                 ?p := ?lm ! ?m - Suc xa]",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 10, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 1), template_var 2),
          template_hole 8),
        template_inequation (less_than, template_var 4, template_var 2),
        template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 9, template_var 1),
            template_var 4)),
        template_inequation (less_than, template_hole 8, template_var 0)],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Recursive.exists_small_list_elem5",
     "[| ?m ~= ?n; ?p < length ?lm; ?lm ! ?p = 0; ?m < ?p; ?n < ?p;
         ?x <= ?lm ! ?m; ?lm ! ?m ~= ?x |]
      ==> EX xa<?lm ! ?m.
             ?lm[?m := ?x, ?n := ?lm ! ?n + ?lm ! ?m, ?p := ?lm ! ?m - ?x,
                 ?p := ?lm ! ?m - Suc ?x] =
             ?lm[?m := xa, ?n := ?lm ! ?n + ?lm ! ?m,
                 ?p := ?lm ! ?m - Suc xa]",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 10, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 9, template_var 1), template_var 2),
          template_hole 8),
        template_inequation (less_than, template_var 4, template_var 2),
        template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 9, template_var 1),
            template_var 4)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 9, template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Recursive.exists_small_list_elem2",
     "[| ?m ~= ?n; ?p < length ?lm; ?lm ! ?p = 0; ?m < ?p; ?n < ?p;
         ?x < ?lm ! ?m |]
      ==> EX xa<?lm ! ?m.
             ?lm[?m := ?x, ?n := ?lm ! ?n + ?lm ! ?m - Suc ?x,
                 ?p := ?lm ! ?m - Suc ?x, ?n := ?lm ! ?n + ?lm ! ?m - ?x] =
             ?lm[?m := xa, ?n := ?lm ! ?n + ?lm ! ?m - xa,
                 ?p := ?lm ! ?m - Suc xa]",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 1), template_var 2),
          template_hole 7),
        template_inequation (less_than, template_var 4, template_var 2),
        template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 8, template_var 1),
            template_var 4))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Recursive.save_paras",
     "{%nl. nl =
            ?xs @
            0 \<up> (max (Suc (length ?xs))
                      (Max (insert ?ffp
                             ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) -
                     length ?xs) @
            map (%i. rec_exec i ?xs) ?gs @
            0 \<up> Suc (length ?xs) @ ?anything}
      mv_boxes 0
       (Suc (max (Suc (length ?xs))
              (Max (insert ?ffp ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) +
             length ?gs))
       (length ?xs)
      {%nl. nl =
            0 \<up> max (Suc (length ?xs))
                     (Max (insert ?ffp
                            ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) @
            map (%i. rec_exec i ?xs) ?gs @ 0 # ?xs @ ?anything}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 22, t_empty),
             template_app
              (template_app
                (template_app (template_hole 3, template_hole 6),
                 template_app
                  (template_hole 16,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_hole 17,
                           template_app
                            (template_hole 16,
                             template_app
                              (template_hole 15, template_var 3))),
                         template_app
                          (template_hole 14,
                           template_app
                            (template_app
                              (template_hole 13, template_var 2),
                             template_app
                              (template_app
                                (template_hole 12,
                                 template_app (template_hole 11, t_empty)),
                               template_app
                                (template_app
                                  (template_hole 9, template_hole 8),
                                 template_app
                                  (template_hole 7, template_var 1))))))),
                     template_app (template_hole 1, template_var 1)))),
               template_app (template_hole 15, template_var 3))),
           t_empty)
         )),
    ("Recursive.terminate_pr_reverse",
     "[| terminate (Pr ?n ?f ?g) ?xs;
         !!x xs.
            [| ?xs = xs @ [x];
               ALL y<x.
                  terminate ?g
                   (xs @
                    [y, if y = 0 then rec_exec ?f (butlast (xs @ [y]))
                        else rec_exec ?g
                              (butlast (xs @ [y]) @
                               [last (xs @ [y]) - 1,
                                rec_exec (Pr ?n ?f ?g)
                                 (butlast (xs @ [y]) @
                                  [last (xs @ [y]) - 1])])]);
               terminate ?f xs; length xs = ?n |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app
                   (template_app (template_hole 18, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate (template_var 0))),
    ("Recursive.addition_halt_lemma",
     "[| ?m ~= ?n; max ?m ?n < ?p; ?p < length ?lm |]
      ==> ALL na.
             ~ (case abc_steps_l (0, ?lm) (addition ?m ?n ?p) na of
                (as, lm') => %(m, p). as = 7)
                (?m, ?p) &
             addition_inv (abc_steps_l (0, ?lm) (addition ?m ?n ?p) na) ?m
              ?n ?p ?lm -->
             addition_inv
              (abc_steps_l (0, ?lm) (addition ?m ?n ?p) (Suc na)) ?m ?n ?p
              ?lm &
             ((abc_steps_l (0, ?lm) (addition ?m ?n ?p) (Suc na), ?m, ?p),
              abc_steps_l (0, ?lm) (addition ?m ?n ?p) na, ?m, ?p)
             : addition_LE",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 20, template_var 3),
            template_var 2),
          template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 19, template_var 0))],
       template_predicate (template_app (template_hole 18, t_empty)))),
    ("Recursive.zero_case_rec_exec",
     "[| length ?xs < ?gf; ?gf <= ?ft; ?n < length ?gs |]
      ==> (rec_exec (?gs ! ?n) ?xs #
           0 \<up> (?ft - Suc (length ?xs)) @
           map (%i. rec_exec i ?xs) (take ?n ?gs) @
           0 \<up> (length ?gs - ?n) @ 0 # 0 \<up> length ?xs @ ?anything)
          [?ft + ?n - length ?xs := rec_exec (?gs ! ?n) ?xs, 0 := 0] =
          0 \<up> (?ft - length ?xs) @
          map (%i. rec_exec i ?xs) (take ?n ?gs) @
          rec_exec (?gs ! ?n) ?xs #
          0 \<up> (length ?gs - Suc ?n) @
          0 # 0 \<up> length ?xs @ ?anything",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 15, template_var 5),
          template_var 4),
        template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 13, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_app
                            (template_hole 9,
                             template_app
                              (template_app
                                (template_hole 8, template_var 1),
                               template_var 2)),
                           template_var 5)),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_app
                                  (template_hole 5, template_var 3),
                                 template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 15, template_var 5)))),
                             template_hole 3)),
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_app (template_hole 2, t_empty),
                               template_app
                                (template_app
                                  (template_hole 1, template_var 2),
                                 template_var 1))),
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_app
                                  (template_hole 6,
                                   template_app
                                    (template_app
(template_hole 5, template_app (template_hole 13, template_var 1)),
                                     template_var 2)),
                                 template_hole 3)),
                             template_app
                              (template_app
                                (template_hole 10, template_hole 3),
                               template_app
                                (template_app
                                  (template_hole 7,
                                   template_app
                                    (template_app
(template_hole 6, template_app (template_hole 15, template_var 5)),
                                     template_hole 3)),
                                 template_var 0))))))),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 2)),
                     template_app (template_hole 15, template_var 5))),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_var 2)),
                   template_var 5))),
             template_hole 3),
           template_hole 3),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_app (template_hole 15, template_var 5))),
               template_hole 3)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 2, t_empty),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 8, template_var 1),
                       template_var 2)),
                   template_var 5)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app (template_hole 13, template_var 1)),
                         template_app (template_hole 4, template_var 2))),
                     template_hole 3)),
                 template_app
                  (template_app (template_hole 10, template_hole 3),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 15, template_var 5)),
                         template_hole 3)),
                     template_var 0))))))))),
    ("Recursive.restore_rs",
     "{%nl. nl =
            0 \<up> max (Suc (length ?xs))
                     (Max (insert ?ffp
                            ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) @
            rec_exec (Cn (length ?xs) ?f ?gs) ?xs #
            0 \<up> length ?gs @ ?xs @ ?anything}
      mv_box
       (max (Suc (length ?xs))
         (Max (insert ?ffp ((%(aprog, p, n). n) ` rec_ci ` set ?gs))))
       (length ?xs)
      {%nl. nl =
            0 \<up> length ?xs @
            rec_exec (Cn (length ?xs) ?f ?gs) ?xs #
            0 \<up> (max (Suc (length ?xs))
                      (Max (insert ?ffp
                             ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) -
                     length ?xs) @
            0 \<up> length ?gs @ ?xs @ ?anything}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 21, t_empty),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_hole 16,
                       template_app (template_hole 15, template_var 4))),
                   template_app
                    (template_hole 14,
                     template_app
                      (template_app (template_hole 13, template_var 3),
                       template_app
                        (template_app
                          (template_hole 12,
                           template_app (template_hole 11, t_empty)),
                         template_app
                          (template_app (template_hole 9, template_hole 8),
                           template_app
                            (template_hole 7, template_var 2))))))),
               template_app (template_hole 15, template_var 4))),
           t_empty)
         )),
    ("Recursive.restore_orgin_paras",
     "{%nl. nl =
            0 \<up> length ?xs @
            rec_exec (Cn (length ?xs) ?f ?gs) ?xs #
            0 \<up> (max (Suc (length ?xs))
                      (Max (insert ?ffp
                             ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) -
                     length ?xs) @
            0 \<up> length ?gs @ ?xs @ ?anything}
      mv_boxes
       (Suc (max (Suc (length ?xs))
              (Max (insert ?ffp ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) +
             length ?gs))
       0 (length ?xs)
      {%nl. nl =
            ?xs @
            rec_exec (Cn (length ?xs) ?f ?gs) ?xs #
            0 \<up> (max (Suc (length ?xs))
                      (Max (insert ?ffp
                             ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) +
                     length ?gs) @
            ?anything}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 22, t_empty),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_hole 11,
                     template_app
                      (template_app
                        (template_hole 0,
                         template_app
                          (template_app
                            (template_hole 12,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 18, template_var 4))),
                           template_app
                            (template_hole 10,
                             template_app
                              (template_app
                                (template_hole 9, template_var 1),
                               template_app
                                (template_app
                                  (template_hole 8,
                                   template_app (template_hole 7, t_empty)),
                                 template_app
                                  (template_app
                                    (template_hole 5, template_hole 4),
                                   template_app
                                    (template_hole 3, template_var 2))))))),
                       template_app (template_hole 2, template_var 2)))),
                 template_hole 17),
               template_app (template_hole 18, template_var 4))),
           t_empty)
         )),
    ("Recursive.compile_cn_gs_correct",
     "[| ALL g:set ?gs.
            terminate g ?xs &
            (ALL x xa xb.
                rec_ci g = (x, xa, xb) -->
                (ALL xc.
                    {%nl. nl = ?xs @ 0 \<up> (xb - xa) @ xc} x
                    {%nl. nl =
                          ?xs @
                          rec_exec g ?xs # 0 \<up> (xb - Suc xa) @ xc}));
         ?ft =
         max (Suc (length ?xs))
          (Max (insert ?ffp ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) |]
      ==> {%nl. nl = ?xs @ 0 # 0 \<up> (?ft + length ?gs) @ ?anything}
          cn_merge_gs (map rec_ci ?gs) ?ft
          {%nl. nl =
                ?xs @
                0 \<up> (?ft - length ?xs) @
                map (%i. rec_exec i ?xs) ?gs @
                0 \<up> Suc (length ?xs) @ ?anything}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 34,
                template_app (template_hole 33, template_var 4)),
              t_empty)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_hole 14,
                template_app (template_hole 11, template_var 3))),
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 1),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, t_empty)),
                  template_app
                   (template_app (template_hole 5, template_hole 26),
                    template_app (template_hole 33, template_var 4)))))))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 22, t_empty),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 26),
                     template_var 4)),
                 template_var 2)),
             t_empty)
           ))),
    ("Recursive.mn_correct",
     "[| rec_ci ?rf = (?fap, ?far, ?fft); 0 < ?rsx; length ?xs = ?arity;
         ?B =
         [Dec (Suc ?arity) (length ?fap + 5),
          Dec (Suc ?arity) (length ?fap + 3), Goto (Suc (length ?fap)),
          Inc ?arity, Goto 0];
         ?f =
         (%stp. (abc_steps_l (length ?fap, ?xs @ ?x # ?rsx # ?anything)
                  (?fap @ ?B) stp,
                 length ?fap, ?arity));
         ?P = (%((as, lm), ss, arity). as = 0);
         ?Q =
         (%((as, lm), ss, arity).
             mn_ind_inv (as, lm) (length ?fap) ?x ?rsx ?anything ?xs) |]
      ==> EX stp. ?P (?f stp) & ?Q (?f stp)",
     template_implication
      ([template_equation
         (template_app (template_hole 33, template_var 12),
          template_app
           (template_app (template_hole 32, template_var 11),
            template_app
             (template_app (template_hole 31, template_var 10),
              template_var 9))),
        template_inequation (less_than, template_hole 29, template_var 8),
        template_equation
         (template_app (template_hole 27, template_var 7), template_var 6),
        template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 25,
              template_app
               (template_app
                 (template_hole 24,
                  template_app (template_hole 23, template_var 6)),
                template_app
                 (template_app
                   (template_hole 22,
                    template_app (template_hole 21, template_var 11)),
                  template_app
                   (template_hole 20,
                    template_app
                     (template_hole 19,
                      template_app
                       (template_hole 18, template_hole 17)))))),
            template_app
             (template_app
               (template_hole 25,
                template_app
                 (template_app
                   (template_hole 24,
                    template_app (template_hole 23, template_var 6)),
                  template_app
                   (template_app
                     (template_hole 22,
                      template_app (template_hole 21, template_var 11)),
                    template_app
                     (template_hole 20,
                      template_app (template_hole 19, template_hole 17))))),
              template_app
               (template_app
                 (template_hole 25,
                  template_app
                   (template_hole 16,
                    template_app
                     (template_hole 23,
                      template_app (template_hole 21, template_var 11)))),
                template_app
                 (template_app
                   (template_hole 25,
                    template_app (template_hole 15, template_var 6)),
                  template_app
                   (template_app
                     (template_hole 25,
                      template_app (template_hole 16, template_hole 29)),
                    template_hole 14)))))),
        template_equation (template_var 4, t_empty),
        template_equation
         (template_var 1,
          template_app
           (template_hole 5, template_app (template_hole 4, t_empty))),
        template_equation
         (template_var 0,
          template_app
           (template_hole 5, template_app (template_hole 4, t_empty)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Recursive.compile_cn_gs_correct'",
     "[| ALL g:set (take ?n ?gs).
            terminate g ?xs &
            (ALL x xa xb.
                rec_ci g = (x, xa, xb) -->
                (ALL xc.
                    {%nl. nl = ?xs @ 0 \<up> (xb - xa) @ xc} x
                    {%nl. nl =
                          ?xs @
                          rec_exec g ?xs # 0 \<up> (xb - Suc xa) @ xc}));
         ?ft =
         max (Suc (length ?xs))
          (Max (insert ?ffp ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) |]
      ==> {%nl. nl = ?xs @ 0 # 0 \<up> (?ft + length ?gs) @ ?anything}
          cn_merge_gs (map rec_ci (take ?n ?gs)) ?ft
          {%nl. nl =
                ?xs @
                0 \<up> (?ft - length ?xs) @
                map (%i. rec_exec i ?xs) (take ?n ?gs) @
                0 \<up> (length ?gs - ?n) @
                0 \<up> Suc (length ?xs) @ ?anything}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 35,
                template_app
                 (template_hole 34,
                  template_app
                   (template_app (template_hole 33, template_var 5),
                    template_var 4))),
              t_empty)
            ),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 12,
              template_app
               (template_hole 14,
                template_app (template_hole 11, template_var 3))),
            template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 9, template_var 1),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app (template_hole 7, t_empty)),
                  template_app
                   (template_app (template_hole 5, template_hole 26),
                    template_app (template_hole 34, template_var 4)))))))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 22, t_empty),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_hole 26),
                     template_app
                      (template_app (template_hole 33, template_var 5),
                       template_var 4))),
                 template_var 2)),
             t_empty)
           ))),
    ("Recursive.save_rs",
     "[| ?far = length ?gs;
         ?ffp
         <= max (Suc (length ?xs))
             (Max (insert ?ffp ((%(aprog, p, n). n) ` rec_ci ` set ?gs)));
         ?far < ?ffp |]
      ==> {%nl. nl =
                map (%i. rec_exec i ?xs) ?gs @
                rec_exec (Cn (length ?xs) ?f ?gs) ?xs #
                0 \<up> max (Suc (length ?xs))
                         (Max (insert ?ffp
                                ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) @
                ?xs @ ?anything}
          mv_box ?far
           (max (Suc (length ?xs))
             (Max (insert ?ffp ((%(aprog, p, n). n) ` rec_ci ` set ?gs))))
          {%nl. nl =
                map (%i. rec_exec i ?xs) ?gs @
                0 \<up> (max (Suc (length ?xs))
                          (Max (insert ?ffp
                                 ((%(aprog, p, n). n) `
                                  rec_ci ` set ?gs))) -
                         length ?gs) @
                rec_exec (Cn (length ?xs) ?f ?gs) ?xs #
                0 \<up> length ?gs @ ?xs @ ?anything}",
     template_implication
      ([template_equation
         (template_var 5, template_app (template_hole 24, template_var 4)),
        template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app
             (template_hole 22,
              template_app
               (template_hole 21,
                template_app (template_hole 20, template_var 2))),
            template_app
             (template_hole 19,
              template_app
               (template_app (template_hole 18, template_var 3),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, t_empty)),
                  template_app
                   (template_app (template_hole 14, template_hole 13),
                    template_app (template_hole 12, template_var 4))))))),
        template_inequation (less_than, template_var 5, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 10, t_empty),
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_app
                  (template_app
                    (template_hole 22,
                     template_app
                      (template_hole 21,
                       template_app (template_hole 20, template_var 2))),
                   template_app
                    (template_hole 19,
                     template_app
                      (template_app (template_hole 18, template_var 3),
                       template_app
                        (template_app
                          (template_hole 17,
                           template_app (template_hole 16, t_empty)),
                         template_app
                          (template_app
                            (template_hole 14, template_hole 13),
                           template_app
                            (template_hole 12, template_var 4)))))))),
             t_empty)
           ))),
    ("Recursive.cn_unhalt_case",
     "[| rec_ci (Cn ?n ?f ?gs) = (?ap, ?ar, ?ft) & length ?args = ?ar;
         ?i < length ?gs;
         rec_ci (?gs ! ?i) = (?gap, ?gar, ?gft) & ?gar = length ?args;
         !!anything.
            {%nl. nl = ?args @ 0 \<up> (?gft - ?gar) @ anything} ?gap \<up>;
         !!apj arj ftj j anything.
            [| j < ?i; rec_ci (?gs ! j) = (apj, arj, ftj) |]
            ==> {%nl. nl = ?args @ 0 \<up> (ftj - arj) @ anything} apj
                {%nl. nl =
                      ?args @
                      rec_exec (?gs ! j) ?args #
                      0 \<up> (ftj - Suc arj) @ anything};
         ALL j<?i. terminate (?gs ! j) ?args |]
      ==> {%nl. nl = ?args @ 0 \<up> (?ft - ?ar) @ ?anything} ?ap \<up>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app
                   (template_hole 25,
                    template_app
                     (template_hole 24,
                      template_app
                       (template_app
                         (template_app (template_hole 23, template_var 11),
                          template_var 10),
                        template_var 9))),
                  template_app
                   (template_app (template_hole 22, template_var 8),
                    template_app
                     (template_app (template_hole 21, template_var 7),
                      template_var 6)))),
              template_app
               (template_app
                 (template_hole 20,
                  template_app (template_hole 19, template_var 5)),
                template_var 7))
            ),
        template_inequation
         (less_than, template_var 4,
          template_app (template_hole 17, template_var 9)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app
                   (template_hole 25,
                    template_app
                     (template_hole 24,
                      template_app
                       (template_app (template_hole 16, template_var 9),
                        template_var 4))),
                  template_app
                   (template_app (template_hole 22, template_var 3),
                    template_app
                     (template_app (template_hole 21, template_var 2),
                      template_var 1)))),
              template_app
               (template_app (template_hole 20, template_var 2),
                template_app (template_hole 19, template_var 5)))
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 14, t_empty), template_var 8)
           ))),
    ("Recursive.mn_loop",
     "[| ?B =
         [Dec (Suc ?arity) (length ?fap + 5),
          Dec (Suc ?arity) (length ?fap + 3), Goto (Suc (length ?fap)),
          Inc ?arity, Goto 0];
         ?ft = max (Suc ?arity) ?fft; length ?xs = ?arity;
         ?far = Suc ?arity;
         ALL xc.
            {%nl. nl = ?xs @ ?x # 0 \<up> (?fft - ?far) @ xc} ?fap
            {%nl. nl =
                  ?xs @
                  ?x #
                  rec_exec ?f (?xs @ [?x]) #
                  0 \<up> (?fft - Suc ?far) @ xc};
         0 < rec_exec ?f (?xs @ [?x]); rec_ci ?f = (?fap, ?far, ?fft) |]
      ==> EX stp>0.
             abc_steps_l
              (0, ?xs @ ?x # 0 \<up> (?ft - Suc ?arity) @ ?anything)
              (?fap @ ?B) stp =
             (0, ?xs @ Suc ?x # 0 \<up> (?ft - Suc ?arity) @ ?anything)",
     template_implication
      ([template_equation
         (template_var 9,
          template_app
           (template_app
             (template_hole 35,
              template_app
               (template_app
                 (template_hole 34,
                  template_app (template_hole 33, template_var 8)),
                template_app
                 (template_app
                   (template_hole 32,
                    template_app (template_hole 31, template_var 7)),
                  template_app
                   (template_hole 30,
                    template_app
                     (template_hole 29,
                      template_app
                       (template_hole 28, template_hole 27)))))),
            template_app
             (template_app
               (template_hole 35,
                template_app
                 (template_app
                   (template_hole 34,
                    template_app (template_hole 33, template_var 8)),
                  template_app
                   (template_app
                     (template_hole 32,
                      template_app (template_hole 31, template_var 7)),
                    template_app
                     (template_hole 30,
                      template_app (template_hole 29, template_hole 27))))),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_hole 26,
                    template_app
                     (template_hole 33,
                      template_app (template_hole 31, template_var 7)))),
                template_app
                 (template_app
                   (template_hole 35,
                    template_app (template_hole 25, template_var 8)),
                  template_app
                   (template_app
                     (template_hole 35,
                      template_app (template_hole 26, template_hole 24)),
                    template_hole 23)))))),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 21,
              template_app (template_hole 33, template_var 8)),
            template_var 5)),
        template_equation
         (template_app (template_hole 20, template_var 4), template_var 8),
        template_equation
         (template_var 3, template_app (template_hole 33, template_var 8)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_inequation
         (less_than, template_hole 24,
          template_app
           (template_app (template_hole 12, template_var 1),
            template_app
             (template_app (template_hole 16, template_var 4),
              template_app
               (template_app (template_hole 15, template_var 2),
                template_hole 11)))),
        template_equation
         (template_app (template_hole 8, template_var 1),
          template_app
           (template_app (template_hole 7, template_var 7),
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 5)))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Recursive.mn_loop_correct",
     "[| ?B =
         [Dec (Suc ?arity) (length ?fap + 5),
          Dec (Suc ?arity) (length ?fap + 3), Goto (Suc (length ?fap)),
          Inc ?arity, Goto 0];
         ?ft = max (Suc ?arity) ?fft; length ?xs = ?arity;
         ALL i<=?x.
            ALL xc.
               {%nl. nl = ?xs @ i # 0 \<up> (?fft - ?far) @ xc} ?fap
               {%nl. nl =
                     ?xs @
                     i #
                     rec_exec ?f (?xs @ [i]) #
                     0 \<up> (?fft - Suc ?far) @ xc};
         ALL i<=?x. 0 < rec_exec ?f (?xs @ [i]);
         rec_ci ?f = (?fap, ?far, ?fft); ?far = Suc ?arity |]
      ==> EX stp.
             abc_steps_l
              (0, ?xs @ 0 # 0 \<up> (?ft - Suc ?arity) @ ?anything)
              (?fap @ ?B) stp =
             (0, ?xs @ Suc ?x # 0 \<up> (?ft - Suc ?arity) @ ?anything)",
     template_implication
      ([template_equation
         (template_var 9,
          template_app
           (template_app
             (template_hole 37,
              template_app
               (template_app
                 (template_hole 36,
                  template_app (template_hole 35, template_var 8)),
                template_app
                 (template_app
                   (template_hole 34,
                    template_app (template_hole 33, template_var 7)),
                  template_app
                   (template_hole 32,
                    template_app
                     (template_hole 31,
                      template_app
                       (template_hole 30, template_hole 29)))))),
            template_app
             (template_app
               (template_hole 37,
                template_app
                 (template_app
                   (template_hole 36,
                    template_app (template_hole 35, template_var 8)),
                  template_app
                   (template_app
                     (template_hole 34,
                      template_app (template_hole 33, template_var 7)),
                    template_app
                     (template_hole 32,
                      template_app (template_hole 31, template_hole 29))))),
              template_app
               (template_app
                 (template_hole 37,
                  template_app
                   (template_hole 28,
                    template_app
                     (template_hole 35,
                      template_app (template_hole 33, template_var 7)))),
                template_app
                 (template_app
                   (template_hole 37,
                    template_app (template_hole 27, template_var 8)),
                  template_app
                   (template_app
                     (template_hole 37,
                      template_app (template_hole 28, template_hole 26)),
                    template_hole 25)))))),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 23,
              template_app (template_hole 35, template_var 8)),
            template_var 5)),
        template_equation
         (template_app (template_hole 22, template_var 4), template_var 8),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_equation
         (template_app (template_hole 7, template_var 1),
          template_app
           (template_app (template_hole 6, template_var 7),
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 5))),
        template_equation
         (template_var 2, template_app (template_hole 35, template_var 8))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Recursive.mp_up_all_le",
     "list_all (%(acn, s). s <= ?q + (2 * ?n + 6))
       [(R, Suc (Suc (2 * ?n + ?q))), (R, Suc (2 * ?n + ?q)),
        (L, 5 + 2 * ?n + ?q), (W0, Suc (Suc (Suc (2 * ?n + ?q)))),
        (R, 4 + 2 * ?n + ?q), (W0, Suc (Suc (Suc (2 * ?n + ?q)))),
        (R, Suc (Suc (2 * ?n + ?q))), (W0, Suc (Suc (Suc (2 * ?n + ?q)))),
        (L, 5 + 2 * ?n + ?q), (L, 6 + 2 * ?n + ?q), (R, 0),
        (L, 6 + 2 * ?n + ?q)]",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 16, template_app (template_hole 15, t_empty)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 13,
                         template_app
                          (template_app
                            (template_hole 12,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 10, template_hole 9))),
                           template_var 0)),
                       template_var 1))))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 13,
                         template_app
                          (template_app
                            (template_hole 12,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 10, template_hole 9))),
                           template_var 0)),
                       template_var 1)))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_hole 3),
                     template_app
                      (template_app
                        (template_hole 13,
                         template_app
                          (template_app
                            (template_hole 13,
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 10, template_hole 9)))),
                           template_app
                            (template_app
                              (template_hole 12,
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 10, template_hole 9))),
                             template_var 0))),
                       template_var 1))),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 6, template_hole 2),
                       template_app
                        (template_hole 4,
                         template_app
                          (template_hole 4,
                           template_app
                            (template_hole 4,
                             template_app
                              (template_app
                                (template_hole 13,
                                 template_app
                                  (template_app
                                    (template_hole 12,
                                     template_app
(template_hole 11, template_app (template_hole 10, template_hole 9))),
                                   template_var 0)),
                               template_var 1)))))),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 6, template_hole 5),
                         template_app
                          (template_app
                            (template_hole 13,
                             template_app
                              (template_app
                                (template_hole 13,
                                 template_app
                                  (template_hole 11,
                                   template_app
                                    (template_hole 10,
                                     template_app
(template_hole 10, template_hole 9)))),
                               template_app
                                (template_app
                                  (template_hole 12,
                                   template_app
                                    (template_hole 11,
                                     template_app
(template_hole 10, template_hole 9))),
                                 template_var 0))),
                           template_var 1))),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 6, template_hole 2),
                           template_app
                            (template_hole 4,
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_app
                                    (template_hole 13,
                                     template_app
(template_app
  (template_hole 12,
   template_app
    (template_hole 11, template_app (template_hole 10, template_hole 9))),
 template_var 0)),
                                   template_var 1)))))),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 6, template_hole 5),
                             template_app
                              (template_hole 4,
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_app
                                    (template_hole 13,
                                     template_app
(template_app
  (template_hole 12,
   template_app
    (template_hole 11, template_app (template_hole 10, template_hole 9))),
 template_var 0)),
                                   template_var 1))))),
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_app
                                (template_hole 6, template_hole 2),
                               template_app
                                (template_hole 4,
                                 template_app
                                  (template_hole 4,
                                   template_app
                                    (template_hole 4,
                                     template_app
(template_app
  (template_hole 13,
   template_app
    (template_app
      (template_hole 12,
       template_app
        (template_hole 11,
         template_app (template_hole 10, template_hole 9))),
     template_var 0)),
 template_var 1)))))),
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_app
                                  (template_hole 6, template_hole 3),
                                 template_app
                                  (template_app
                                    (template_hole 13,
                                     template_app
(template_app
  (template_hole 13,
   template_app
    (template_hole 11,
     template_app
      (template_hole 8, template_app (template_hole 10, template_hole 9)))),
 template_app
  (template_app
    (template_hole 12,
     template_app
      (template_hole 11, template_app (template_hole 10, template_hole 9))),
   template_var 0))),
                                   template_var 1))),
                             template_app
                              (template_app
                                (template_hole 7,
                                 template_app
                                  (template_app
                                    (template_hole 6, template_hole 3),
                                   template_app
                                    (template_app
(template_hole 13,
 template_app
  (template_app
    (template_hole 13,
     template_app
      (template_hole 11,
       template_app
        (template_hole 10,
         template_app (template_hole 8, template_hole 9)))),
   template_app
    (template_app
      (template_hole 12,
       template_app
        (template_hole 11,
         template_app (template_hole 10, template_hole 9))),
     template_var 0))),
                                     template_var 1))),
                               template_app
                                (template_app
                                  (template_hole 7,
                                   template_app
                                    (template_app
(template_hole 6, template_hole 5),
                                     template_hole 1)),
                                 template_app
                                  (template_app
                                    (template_hole 7,
                                     template_app
(template_app (template_hole 6, template_hole 3),
 template_app
  (template_app
    (template_hole 13,
     template_app
      (template_app
        (template_hole 13,
         template_app
          (template_hole 11,
           template_app
            (template_hole 10,
             template_app (template_hole 8, template_hole 9)))),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_hole 11,
             template_app (template_hole 10, template_hole 9))),
         template_var 0))),
   template_var 1))),
                                   template_hole 0)))))))))))))
         )),
    ("Recursive.mn_loop_correct'",
     "[| ?B =
         [Dec (Suc ?arity) (length ?fap + 5),
          Dec (Suc ?arity) (length ?fap + 3), Goto (Suc (length ?fap)),
          Inc ?arity, Goto 0];
         ?ft = max (Suc ?arity) ?fft; length ?xs = ?arity;
         ALL i<=?x.
            ALL xc.
               {%nl. nl = ?xs @ i # 0 \<up> (?fft - ?far) @ xc} ?fap
               {%nl. nl =
                     ?xs @
                     i #
                     rec_exec ?f (?xs @ [i]) #
                     0 \<up> (?fft - Suc ?far) @ xc};
         ALL i<=?x. 0 < rec_exec ?f (?xs @ [i]);
         rec_ci ?f = (?fap, ?far, ?fft); ?far = Suc ?arity |]
      ==> EX stp>?x.
             abc_steps_l
              (0, ?xs @ 0 # 0 \<up> (?ft - Suc ?arity) @ ?anything)
              (?fap @ ?B) stp =
             (0, ?xs @ Suc ?x # 0 \<up> (?ft - Suc ?arity) @ ?anything)",
     template_implication
      ([template_equation
         (template_var 9,
          template_app
           (template_app
             (template_hole 38,
              template_app
               (template_app
                 (template_hole 37,
                  template_app (template_hole 36, template_var 8)),
                template_app
                 (template_app
                   (template_hole 35,
                    template_app (template_hole 34, template_var 7)),
                  template_app
                   (template_hole 33,
                    template_app
                     (template_hole 32,
                      template_app
                       (template_hole 31, template_hole 30)))))),
            template_app
             (template_app
               (template_hole 38,
                template_app
                 (template_app
                   (template_hole 37,
                    template_app (template_hole 36, template_var 8)),
                  template_app
                   (template_app
                     (template_hole 35,
                      template_app (template_hole 34, template_var 7)),
                    template_app
                     (template_hole 33,
                      template_app (template_hole 32, template_hole 30))))),
              template_app
               (template_app
                 (template_hole 38,
                  template_app
                   (template_hole 29,
                    template_app
                     (template_hole 36,
                      template_app (template_hole 34, template_var 7)))),
                template_app
                 (template_app
                   (template_hole 38,
                    template_app (template_hole 28, template_var 8)),
                  template_app
                   (template_app
                     (template_hole 38,
                      template_app (template_hole 29, template_hole 27)),
                    template_hole 26)))))),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 24,
              template_app (template_hole 36, template_var 8)),
            template_var 5)),
        template_equation
         (template_app (template_hole 23, template_var 4), template_var 8),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_equation
         (template_app (template_hole 8, template_var 1),
          template_app
           (template_app (template_hole 7, template_var 7),
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 5))),
        template_equation
         (template_var 2, template_app (template_hole 36, template_var 8))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Recursive.compile_cn_correct",
     "[| terminate ?f (map (%g. rec_exec g ?xs) ?gs);
         !!ap arity fp anything.
            rec_ci ?f = (ap, arity, fp) ==>
            {%nl. nl =
                  map (%g. rec_exec g ?xs) ?gs @
                  0 \<up> (fp - arity) @ anything}
            ap {%nl. nl =
                     map (%g. rec_exec g ?xs) ?gs @
                     rec_exec ?f (map (%g. rec_exec g ?xs) ?gs) #
                     0 \<up> (fp - Suc arity) @ anything};
         ALL g:set ?gs.
            terminate g ?xs &
            (ALL x xa xb.
                rec_ci g = (x, xa, xb) -->
                (ALL xc.
                    {%nl. nl = ?xs @ 0 \<up> (xb - xa) @ xc} x
                    {%nl. nl =
                          ?xs @
                          rec_exec g ?xs # 0 \<up> (xb - Suc xa) @ xc}));
         rec_ci (Cn ?n ?f ?gs) = (?ap, ?arity, ?fp); length ?xs = ?n |]
      ==> {%nl. nl = ?xs @ 0 \<up> (?fp - ?arity) @ ?anything} ?ap
          {%nl. nl =
                ?xs @
                rec_exec (Cn ?n ?f ?gs) ?xs #
                0 \<up> (?fp - Suc ?arity) @ ?anything}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 27, template_var 7),
              template_app
               (template_app (template_hole 26, t_empty), template_var 5))
            ),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 5)),
              t_empty)
            ),
        template_equation
         (template_app
           (template_hole 20,
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_var 7),
              template_var 5)),
          template_app
           (template_app (template_hole 19, template_var 3),
            template_app
             (template_app (template_hole 18, template_var 2),
              template_var 1))),
        template_equation
         (template_app (template_hole 0, template_var 6), template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 17, t_empty), template_var 3),
             t_empty)
           ))),
    ("Recursive.compile_mn_correct",
     "[| length ?xs = ?n; terminate ?f (?xs @ [?r]);
         !!ap arity fp anything.
            rec_ci ?f = (ap, arity, fp) ==>
            {%nl. nl = ?xs @ ?r # 0 \<up> (fp - arity) @ anything} ap
            {%nl. nl = ?xs @ ?r # 0 # 0 \<up> (fp - Suc arity) @ anything};
         rec_exec ?f (?xs @ [?r]) = 0;
         ALL i<?r.
            terminate ?f (?xs @ [i]) &
            (ALL x xa xb.
                rec_ci ?f = (x, xa, xb) -->
                (ALL xc.
                    {%nl. nl = ?xs @ i # 0 \<up> (xb - xa) @ xc} x
                    {%nl. nl =
                          ?xs @
                          i #
                          rec_exec ?f (?xs @ [i]) #
                          0 \<up> (xb - Suc xa) @ xc})) &
            0 < rec_exec ?f (?xs @ [i]);
         rec_ci (Mn ?n ?f) = (?ap, ?arity, ?fp) |]
      ==> {%nl. nl = ?xs @ 0 \<up> (?fp - ?arity) @ ?anything} ?ap
          {%nl. nl =
                ?xs @
                rec_exec (Mn ?n ?f) ?xs #
                0 \<up> (?fp - Suc ?arity) @ ?anything}",
     template_implication
      ([template_equation
         (template_app (template_hole 25, template_var 7), template_var 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 5),
              template_app
               (template_app (template_hole 23, template_var 7),
                template_app
                 (template_app (template_hole 22, template_var 4),
                  template_hole 21)))
            ),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 5),
            template_app
             (template_app (template_hole 23, template_var 7),
              template_app
               (template_app (template_hole 22, template_var 4),
                template_hole 21))),
          template_hole 9),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_equation
         (template_app
           (template_hole 16,
            template_app
             (template_app (template_hole 0, template_var 6),
              template_var 5)),
          template_app
           (template_app (template_hole 15, template_var 3),
            template_app
             (template_app (template_hole 14, template_var 2),
              template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 13, t_empty), template_var 3),
             t_empty)
           ))),
    ("Recursive.compile_mn_correct'",
     "[| ?B =
         [Dec (Suc ?arity) (length ?fap + 5),
          Dec (Suc ?arity) (length ?fap + 3), Goto (Suc (length ?fap)),
          Inc ?arity, Goto 0];
         ?ft = max (Suc ?arity) ?fft; length ?xs = ?arity;
         terminate ?f (?xs @ [?r]);
         !!anything.
            {%nl. nl = ?xs @ ?r # 0 \<up> (?fft - ?far) @ anything} ?fap
            {%nl. nl = ?xs @ ?r # 0 # 0 \<up> (?fft - Suc ?far) @ anything};
         ALL i<?r.
            ALL xc.
               {%nl. nl = ?xs @ i # 0 \<up> (?fft - ?far) @ xc} ?fap
               {%nl. nl =
                     ?xs @
                     i #
                     rec_exec ?f (?xs @ [i]) #
                     0 \<up> (?fft - Suc ?far) @ xc};
         ALL i<?r. 0 < rec_exec ?f (?xs @ [i]);
         rec_exec ?f (?xs @ [?r]) = 0; rec_ci ?f = (?fap, ?far, ?fft) |]
      ==> {%nl. nl =
                ?xs @ 0 \<up> (max (Suc ?arity) ?fft - ?arity) @ ?anything}
          ?fap @ ?B
          {%nl. nl =
                ?xs @
                rec_exec (Mn ?arity ?f) ?xs #
                0 \<up> (max (Suc ?arity) ?fft - Suc ?arity) @ ?anything}",
     template_implication
      ([template_equation
         (template_var 9,
          template_app
           (template_app
             (template_hole 35,
              template_app
               (template_app
                 (template_hole 34,
                  template_app (template_hole 33, template_var 8)),
                template_app
                 (template_app
                   (template_hole 32,
                    template_app (template_hole 31, template_var 7)),
                  template_app
                   (template_hole 30,
                    template_app
                     (template_hole 29,
                      template_app
                       (template_hole 28, template_hole 27)))))),
            template_app
             (template_app
               (template_hole 35,
                template_app
                 (template_app
                   (template_hole 34,
                    template_app (template_hole 33, template_var 8)),
                  template_app
                   (template_app
                     (template_hole 32,
                      template_app (template_hole 31, template_var 7)),
                    template_app
                     (template_hole 30,
                      template_app (template_hole 29, template_hole 27))))),
              template_app
               (template_app
                 (template_hole 35,
                  template_app
                   (template_hole 26,
                    template_app
                     (template_hole 33,
                      template_app (template_hole 31, template_var 7)))),
                template_app
                 (template_app
                   (template_hole 35,
                    template_app (template_hole 25, template_var 8)),
                  template_app
                   (template_app
                     (template_hole 35,
                      template_app (template_hole 26, template_hole 24)),
                    template_hole 23)))))),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 21,
              template_app (template_hole 33, template_var 8)),
            template_var 5)),
        template_equation
         (template_app (template_hole 20, template_var 4), template_var 8),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 3),
              template_app
               (template_app (template_hole 18, template_var 4),
                template_app
                 (template_app (template_hole 17, template_var 2),
                  template_hole 16)))
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 3),
            template_app
             (template_app (template_hole 18, template_var 4),
              template_app
               (template_app (template_hole 17, template_var 2),
                template_hole 16))),
          template_hole 24),
        template_equation
         (template_app (template_hole 4, template_var 3),
          template_app
           (template_app (template_hole 3, template_var 7),
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 5)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 14, t_empty),
               template_app
                (template_app (template_hole 1, template_var 7),
                 template_var 9)),
             t_empty)
           ))),
    ("Recursive.compile_pr_correct",
     "[| ALL y<?x.
            terminate ?g (?xs @ [y, rec_exec (Pr ?n ?f ?g) (?xs @ [y])]) &
            (ALL x xa xb.
                rec_ci ?g = (x, xa, xb) -->
                (ALL xc.
                    {%nl. nl =
                          ?xs @
                          y #
                          rec_exec (Pr ?n ?f ?g) (?xs @ [y]) #
                          0 \<up> (xb - xa) @ xc}
                    x {%nl. nl =
                            ?xs @
                            y #
                            rec_exec (Pr ?n ?f ?g) (?xs @ [y]) #
                            rec_exec ?g
                             (?xs @
                              [y, rec_exec (Pr ?n ?f ?g) (?xs @ [y])]) #
                            0 \<up> (xb - Suc xa) @ xc}));
         terminate ?f ?xs;
         !!ap arity fp anything.
            rec_ci ?f = (ap, arity, fp) ==>
            {%nl. nl = ?xs @ 0 \<up> (fp - arity) @ anything} ap
            {%nl. nl =
                  ?xs @
                  rec_exec ?f ?xs # 0 \<up> (fp - Suc arity) @ anything};
         length ?xs = ?n; rec_ci (Pr ?n ?f ?g) = (?ap, ?arity, ?fp) |]
      ==> {%nl. nl = ?xs @ ?x # 0 \<up> (?fp - ?arity) @ ?anything} ?ap
          {%nl. nl =
                ?xs @
                ?x #
                rec_exec (Pr ?n ?f ?g) (?xs @ [?x]) #
                0 \<up> (?fp - Suc ?arity) @ ?anything}",
     template_implication
      ([template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 4),
              template_var 6)
            ),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_equation
         (template_app (template_hole 0, template_var 6), template_var 5),
        template_equation
         (template_app
           (template_hole 14,
            template_app
             (template_app
               (template_app (template_hole 18, template_var 5),
                template_var 4),
              template_var 7)),
          template_app
           (template_app (template_hole 13, template_var 3),
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 10, t_empty), template_var 3),
             t_empty)
           ))),
    ("Recursive.pr_loop_correct",
     "[| ?y <= ?x; length ?xs = ?n; rec_ci ?g = (?gap, ?gar, ?gft);
         ALL y<?x.
            terminate ?g (?xs @ [y, rec_exec (Pr ?n ?f ?g) (?xs @ [y])]);
         ALL y<?x.
            ALL anything.
               {%nl. nl =
                     ?xs @
                     y #
                     rec_exec (Pr ?n ?f ?g) (?xs @ [y]) #
                     0 \<up> (?gft - ?gar) @ anything}
               ?gap
               {%nl. nl =
                     ?xs @
                     y #
                     rec_exec (Pr ?n ?f ?g) (?xs @ [y]) #
                     rec_exec ?g
                      (?xs @ [y, rec_exec (Pr ?n ?f ?g) (?xs @ [y])]) #
                     0 \<up> (?gft - Suc ?gar) @ anything} |]
      ==> {%nl. nl =
                ?xs @
                (?x - ?y) #
                rec_exec (Pr ?n ?f ?g) (?xs @ [?x - ?y]) #
                0 \<up> (max (?n + 3) (max ?fft ?gft) - Suc (Suc ?n)) @
                ?y # ?anything}
          [Dec (max (?n + 3) (max ?fft ?gft)) (length ?gap + 7)] [+]
          (?gap [+] [Inc ?n, Dec (Suc ?n) 3, Goto (Suc 0)]) @
          [Dec (Suc (Suc ?n)) 0, Inc (Suc ?n), Goto (length ?gap + 4)]
          {%nl. nl =
                ?xs @
                ?x #
                rec_exec (Pr ?n ?f ?g) (?xs @ [?x]) #
                0 \<up> (max (?n + 3) (max ?fft ?gft) - Suc ?n) @
                ?anything}",
     template_implication
      ([template_inequation (less_equals, template_var 10, template_var 9),
        template_equation
         (template_app (template_hole 34, template_var 8), template_var 7),
        template_equation
         (template_app (template_hole 32, template_var 6),
          template_app
           (template_app (template_hole 31, template_var 5),
            template_app
             (template_app (template_hole 30, template_var 4),
              template_var 3))),
        template_predicate (template_app (template_hole 29, t_empty)),
        template_predicate (template_app (template_hole 29, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 19, t_empty),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_hole 13,
                                   template_app
                                    (template_app
(template_hole 12, template_var 7),
                                     template_app
(template_hole 11, template_app (template_hole 10, template_hole 9)))),
                                 template_app
                                  (template_app
                                    (template_hole 13, template_var 1),
                                   template_var 3))),
                             template_app
                              (template_app
                                (template_hole 12,
                                 template_app
                                  (template_hole 4, template_var 5)),
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 10,
                                     template_hole 9)))))),
                         template_hole 3)),
                     template_app
                      (template_app (template_hole 7, template_var 5),
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 2, template_var 7)),
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_app
                                (template_hole 5,
                                 template_app
                                  (template_hole 14, template_var 7)),
                               template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 10, template_hole 9)))),
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_hole 14, template_hole 15))),
                             template_hole 3)))))),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 5,
                         template_app
                          (template_hole 14,
                           template_app
                            (template_hole 14, template_var 7))),
                       template_hole 15)),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_hole 2,
                         template_app (template_hole 14, template_var 7))),
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_hole 1,
                           template_app
                            (template_app
                              (template_hole 12,
                               template_app
                                (template_hole 4, template_var 5)),
                             template_app
                              (template_hole 11,
                               template_app
                                (template_hole 0,
                                 template_app
                                  (template_hole 0, template_hole 9)))))),
                       template_hole 3))))),
             t_empty)
           ))),
    ("Recursive.pr_loop",
     "[| ?code =
         [Dec (max (?n + 3) (max ?fft ?gft)) (length ?gap + 7)] [+]
         (?gap [+] [Inc ?n, Dec (Suc ?n) 3, Goto (Suc 0)]) @
         [Dec (Suc (Suc ?n)) 0, Inc (Suc ?n), Goto (length ?gap + 4)];
         length ?xs = ?n;
         ALL y<?x.
            ALL anything.
               {%nl. nl =
                     ?xs @
                     y #
                     rec_exec (Pr ?n ?f ?g) (?xs @ [y]) #
                     0 \<up> (?gft - ?gar) @ anything}
               ?gap
               {%nl. nl =
                     ?xs @
                     y #
                     rec_exec (Pr ?n ?f ?g) (?xs @ [y]) #
                     rec_exec ?g
                      (?xs @ [y, rec_exec (Pr ?n ?f ?g) (?xs @ [y])]) #
                     0 \<up> (?gft - Suc ?gar) @ anything};
         rec_ci ?g = (?gap, ?gar, ?gft);
         ALL y<?x.
            terminate ?g (?xs @ [y, rec_exec (Pr ?n ?f ?g) (?xs @ [y])]);
         ?ft = max (?n + 3) (max ?fft ?gft); Suc ?y <= ?x |]
      ==> EX stp.
             abc_steps_l
              (0, ?xs @
                  (?x - Suc ?y) #
                  rec_exec (Pr ?n ?f ?g) (?xs @ [?x - Suc ?y]) #
                  0 \<up> (?ft - Suc (Suc ?n)) @ Suc ?y # ?anything)
              ?code stp =
             (0, ?xs @
                 (?x - ?y) #
                 rec_exec (Pr ?n ?f ?g) (?xs @ [?x - ?y]) #
                 0 \<up> (?ft - Suc (Suc ?n)) @ ?y # ?anything)",
     template_implication
      ([template_equation
         (template_var 12,
          template_app
           (template_app
             (template_hole 40,
              template_app
               (template_app
                 (template_hole 39,
                  template_app
                   (template_app
                     (template_hole 38,
                      template_app
                       (template_app
                         (template_hole 37,
                          template_app
                           (template_app
                             (template_hole 36,
                              template_app
                               (template_app
                                 (template_hole 35, template_var 11),
                                template_app
                                 (template_hole 34,
                                  template_app
                                   (template_hole 33, template_hole 32)))),
                            template_app
                             (template_app
                               (template_hole 36, template_var 10),
                              template_var 9))),
                        template_app
                         (template_app
                           (template_hole 35,
                            template_app
                             (template_hole 31, template_var 8)),
                          template_app
                           (template_hole 34,
                            template_app
                             (template_hole 33,
                              template_app
                               (template_hole 33, template_hole 32)))))),
                    template_hole 30)),
                template_app
                 (template_app (template_hole 39, template_var 8),
                  template_app
                   (template_app
                     (template_hole 38,
                      template_app (template_hole 29, template_var 11)),
                    template_app
                     (template_app
                       (template_hole 38,
                        template_app
                         (template_app
                           (template_hole 37,
                            template_app
                             (template_hole 28, template_var 11)),
                          template_app
                           (template_hole 34,
                            template_app
                             (template_hole 33, template_hole 32)))),
                      template_app
                       (template_app
                         (template_hole 38,
                          template_app
                           (template_hole 27,
                            template_app
                             (template_hole 28, template_hole 26))),
                        template_hole 30)))))),
            template_app
             (template_app
               (template_hole 38,
                template_app
                 (template_app
                   (template_hole 37,
                    template_app
                     (template_hole 28,
                      template_app (template_hole 28, template_var 11))),
                  template_hole 26)),
              template_app
               (template_app
                 (template_hole 38,
                  template_app
                   (template_hole 29,
                    template_app (template_hole 28, template_var 11))),
                template_app
                 (template_app
                   (template_hole 38,
                    template_app
                     (template_hole 27,
                      template_app
                       (template_app
                         (template_hole 35,
                          template_app (template_hole 31, template_var 8)),
                        template_app
                         (template_hole 34,
                          template_app
                           (template_hole 25,
                            template_app
                             (template_hole 25, template_hole 32)))))),
                  template_hole 30))))),
        template_equation
         (template_app (template_hole 23, template_var 7), template_var 11),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_equation
         (template_app (template_hole 8, template_var 4),
          template_app
           (template_app (template_hole 7, template_var 8),
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 9))),
        template_predicate (template_app (template_hole 22, t_empty)),
        template_equation
         (template_var 2,
          template_app
           (template_app
             (template_hole 36,
              template_app
               (template_app (template_hole 35, template_var 11),
                template_app
                 (template_hole 34,
                  template_app (template_hole 33, template_hole 32)))),
            template_app
             (template_app (template_hole 36, template_var 10),
              template_var 9))),
        template_inequation
         (less_equals, template_app (template_hole 28, template_var 1),
          template_var 6)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Recursive.compile_pr_correct'",
     "[| ALL y<?x.
            terminate ?g (?xs @ [y, rec_exec (Pr ?n ?f ?g) (?xs @ [y])]);
         ALL y<?x.
            ALL anything.
               {%nl. nl =
                     ?xs @
                     y #
                     rec_exec (Pr ?n ?f ?g) (?xs @ [y]) #
                     0 \<up> (?gft - ?gar) @ anything}
               ?gap
               {%nl. nl =
                     ?xs @
                     y #
                     rec_exec (Pr ?n ?f ?g) (?xs @ [y]) #
                     rec_exec ?g
                      (?xs @ [y, rec_exec (Pr ?n ?f ?g) (?xs @ [y])]) #
                     0 \<up> (?gft - Suc ?gar) @ anything};
         terminate ?f ?xs;
         !!anything.
            {%nl. nl = ?xs @ 0 \<up> (?fft - ?far) @ anything} ?fap
            {%nl. nl =
                  ?xs @
                  rec_exec ?f ?xs # 0 \<up> (?fft - Suc ?far) @ anything};
         length ?xs = ?n; rec_ci ?f = (?fap, ?far, ?fft);
         rec_ci ?g = (?gap, ?gar, ?gft) |]
      ==> {%nl. nl =
                ?xs @
                ?x #
                0 \<up> (max (?n + 3) (max ?fft ?gft) - ?n) @ ?anything}
          mv_box ?n (max (?n + 3) (max ?fft ?gft)) [+]
          (?fap [+]
           (mv_box ?n (Suc ?n) [+]
            ([Dec (max (?n + 3) (max ?fft ?gft)) (length ?gap + 7)] [+]
             (?gap [+] [Inc ?n, Dec (Suc ?n) 3, Goto (Suc 0)]) @
             [Dec (Suc (Suc ?n)) 0, Inc (Suc ?n), Goto (length ?gap + 4)])))
          {%nl. nl =
                ?xs @
                ?x #
                rec_exec (Pr ?n ?f ?g) (?xs @ [?x]) #
                0 \<up> (max (?n + 3) (max ?fft ?gft) - Suc ?n) @
                ?anything}",
     template_implication
      ([template_predicate (template_app (template_hole 37, t_empty)),
        template_predicate (template_app (template_hole 37, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 34, template_var 7),
              template_var 9)
            ),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_equation
         (template_app (template_hole 19, template_var 9), template_var 8),
        template_equation
         (template_app (template_hole 17, template_var 7),
          template_app
           (template_app (template_hole 16, template_var 1),
            template_app
             (template_app (template_hole 15, template_var 2),
              template_var 3))),
        template_equation
         (template_app (template_hole 17, template_var 10),
          template_app
           (template_app (template_hole 16, template_var 4),
            template_app
             (template_app (template_hole 15, template_var 5),
              template_var 6)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 27, t_empty),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 8),
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_app (template_hole 13, template_var 8),
                           template_app
                            (template_hole 12,
                             template_app
                              (template_hole 11, template_hole 10)))),
                       template_app
                        (template_app (template_hole 14, template_var 3),
                         template_var 6)))),
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 8, template_var 8),
                         template_app (template_hole 22, template_var 8))),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_hole 9,
                             template_app
                              (template_app
                                (template_hole 6,
                                 template_app
                                  (template_app
                                    (template_hole 5,
                                     template_app
(template_app
  (template_hole 14,
   template_app
    (template_app (template_hole 13, template_var 8),
     template_app
      (template_hole 12,
       template_app (template_hole 11, template_hole 10)))),
 template_app
  (template_app (template_hole 14, template_var 3), template_var 6))),
                                   template_app
                                    (template_app
(template_hole 13, template_app (template_hole 4, template_var 4)),
                                     template_app
(template_hole 12,
 template_app
  (template_hole 11, template_app (template_hole 11, template_hole 10)))))),
                               template_hole 3)),
                           template_app
                            (template_app (template_hole 9, template_var 4),
                             template_app
                              (template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 2, template_var 8)),
                               template_app
                                (template_app
                                  (template_hole 6,
                                   template_app
                                    (template_app
(template_hole 5, template_app (template_hole 22, template_var 8)),
                                     template_app
(template_hole 12, template_app (template_hole 11, template_hole 10)))),
                                 template_app
                                  (template_app
                                    (template_hole 6,
                                     template_app
(template_hole 1, template_app (template_hole 22, template_hole 23))),
                                   template_hole 3)))))),
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app
                              (template_hole 5,
                               template_app
                                (template_hole 22,
                                 template_app
                                  (template_hole 22, template_var 8))),
                             template_hole 23)),
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 2,
                               template_app
                                (template_hole 22, template_var 8))),
                           template_app
                            (template_app
                              (template_hole 6,
                               template_app
                                (template_hole 1,
                                 template_app
                                  (template_app
                                    (template_hole 13,
                                     template_app
(template_hole 4, template_var 4)),
                                   template_app
                                    (template_hole 12,
                                     template_app
(template_hole 0, template_app (template_hole 0, template_hole 10)))))),
                             template_hole 3)))))))),
             t_empty)
           ))),
    ("Recursive.compile_cn_correct'",
     "[| !!anything r.
            rec_exec ?f (map (%g. rec_exec g ?xs) ?gs) =
            rec_exec (Cn (length ?xs) ?f ?gs) ?xs ==>
            {%nl. nl =
                  map (%g. rec_exec g ?xs) ?gs @
                  0 \<up> (?ffp - ?far) @ anything}
            ?fap
            {%nl. nl =
                  map (%g. rec_exec g ?xs) ?gs @
                  rec_exec (Cn (length ?xs) ?f ?gs) ?xs #
                  0 \<up> (?ffp - Suc ?far) @ anything};
         rec_ci ?f = (?fap, ?far, ?ffp);
         terminate ?f (map (%g. rec_exec g ?xs) ?gs);
         ALL g:set ?gs.
            terminate g ?xs &
            (ALL x xa xb.
                rec_ci g = (x, xa, xb) -->
                (ALL xc.
                    {%nl. nl = ?xs @ 0 \<up> (xb - xa) @ xc} x
                    {%nl. nl =
                          ?xs @
                          rec_exec g ?xs # 0 \<up> (xb - Suc xa) @ xc})) |]
      ==> {%nl. nl =
                ?xs @
                0 #
                0 \<up> (max (Suc (length ?xs))
                          (Max (insert ?ffp
                                 ((%(aprog, p, n). n) `
                                  rec_ci ` set ?gs))) +
                         length ?gs) @
                ?anything}
          cn_merge_gs (map rec_ci ?gs)
           (max (Suc (length ?xs))
             (Max (insert ?ffp
                    ((%(aprog, p, n). n) ` rec_ci ` set ?gs)))) [+]
          (mv_boxes 0
            (Suc (max (Suc (length ?xs))
                   (Max (insert ?ffp
                          ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) +
                  length ?gs))
            (length ?xs) [+]
           (mv_boxes
             (max (Suc (length ?xs))
               (Max (insert ?ffp ((%(aprog, p, n). n) ` rec_ci ` set ?gs))))
             0 (length ?gs) [+]
            (?fap [+]
             (mv_box ?far
               (max (Suc (length ?xs))
                 (Max (insert ?ffp
                        ((%(aprog, p, n). n) ` rec_ci ` set ?gs)))) [+]
              (empty_boxes (length ?gs) [+]
               (mv_box
                 (max (Suc (length ?xs))
                   (Max (insert ?ffp
                          ((%(aprog, p, n). n) ` rec_ci ` set ?gs))))
                 (length ?xs) [+]
                mv_boxes
                 (Suc (max (Suc (length ?xs))
                        (Max (insert ?ffp
                               ((%(aprog, p, n). n) ` rec_ci ` set ?gs))) +
                       length ?gs))
                 0 (length ?xs)))))))
          {%nl. nl =
                ?xs @
                rec_exec (Cn (length ?xs) ?f ?gs) ?xs #
                0 \<up> (max (Suc (length ?xs))
                          (Max (insert ?ffp
                                 ((%(aprog, p, n). n) `
                                  rec_ci ` set ?gs))) +
                         length ?gs) @
                ?anything}",
     template_implication
      ([template_predicate (template_app (template_hole 42, t_empty)),
        template_equation
         (template_app (template_hole 25, template_var 6),
          template_app
           (template_app (template_hole 24, template_var 1),
            template_app
             (template_app (template_hole 23, template_var 2),
              template_var 3))),
        template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 6),
              template_app
               (template_app (template_hole 37, t_empty), template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app (template_hole 20, template_var 4)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 34, t_empty),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 25),
                         template_var 4)),
                     template_app
                      (template_app
                        (template_hole 13,
                         template_app
                          (template_hole 27,
                           template_app
                            (template_hole 35, template_var 5))),
                       template_app
                        (template_hole 12,
                         template_app
                          (template_app (template_hole 11, template_var 3),
                           template_app
                            (template_app
                              (template_hole 10,
                               template_app (template_hole 9, t_empty)),
                             template_app
                              (template_app
                                (template_hole 7, template_hole 25),
                               template_app
                                (template_hole 20, template_var 4)))))))),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app (template_hole 2, template_hole 29),
                         template_app
                          (template_hole 27,
                           template_app
                            (template_app
                              (template_hole 14,
                               template_app
                                (template_app
                                  (template_hole 13,
                                   template_app
                                    (template_hole 27,
                                     template_app
(template_hole 35, template_var 5))),
                                 template_app
                                  (template_hole 12,
                                   template_app
                                    (template_app
(template_hole 11, template_var 3),
                                     template_app
(template_app (template_hole 10, template_app (template_hole 9, t_empty)),
 template_app
  (template_app (template_hole 7, template_hole 25),
   template_app (template_hole 20, template_var 4))))))),
                             template_app
                              (template_hole 6, template_var 4)))),
                       template_app (template_hole 35, template_var 5))),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_hole 13,
                                 template_app
                                  (template_hole 27,
                                   template_app
                                    (template_hole 35, template_var 5))),
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_app
                                    (template_hole 11, template_var 3),
                                   template_app
                                    (template_app
(template_hole 10, template_app (template_hole 9, t_empty)),
                                     template_app
(template_app (template_hole 7, template_hole 25),
 template_app (template_hole 20, template_var 4))))))),
                           template_hole 29),
                         template_app (template_hole 6, template_var 4))),
                     template_app
                      (template_app (template_hole 5, template_var 1),
                       template_app
                        (template_app
                          (template_hole 5,
                           template_app
                            (template_app (template_hole 1, template_var 2),
                             template_app
                              (template_app
                                (template_hole 13,
                                 template_app
                                  (template_hole 27,
                                   template_app
                                    (template_hole 35, template_var 5))),
                               template_app
                                (template_hole 12,
                                 template_app
                                  (template_app
                                    (template_hole 11, template_var 3),
                                   template_app
                                    (template_app
(template_hole 10, template_app (template_hole 9, t_empty)),
                                     template_app
(template_app (template_hole 7, template_hole 25),
 template_app (template_hole 20, template_var 4)))))))),
                         template_app
                          (template_app
                            (template_hole 5,
                             template_app
                              (template_hole 0,
                               template_app
                                (template_hole 6, template_var 4))),
                           template_app
                            (template_app
                              (template_hole 5,
                               template_app
                                (template_app
                                  (template_hole 1,
                                   template_app
                                    (template_app
(template_hole 13,
 template_app
  (template_hole 27, template_app (template_hole 35, template_var 5))),
                                     template_app
(template_hole 12,
 template_app
  (template_app (template_hole 11, template_var 3),
   template_app
    (template_app
      (template_hole 10, template_app (template_hole 9, t_empty)),
     template_app
      (template_app (template_hole 7, template_hole 25),
       template_app (template_hole 20, template_var 4))))))),
                                 template_app
                                  (template_hole 35, template_var 5))),
                             template_app
                              (template_app
                                (template_app
                                  (template_hole 2,
                                   template_app
                                    (template_hole 27,
                                     template_app
(template_app
  (template_hole 14,
   template_app
    (template_app
      (template_hole 13,
       template_app
        (template_hole 27,
         template_app (template_hole 35, template_var 5))),
     template_app
      (template_hole 12,
       template_app
        (template_app (template_hole 11, template_var 3),
         template_app
          (template_app
            (template_hole 10, template_app (template_hole 9, t_empty)),
           template_app
            (template_app (template_hole 7, template_hole 25),
             template_app (template_hole 20, template_var 4))))))),
 template_app (template_hole 6, template_var 4)))),
                                 template_hole 29),
                               template_app
                                (template_hole 35, template_var 5)))))))))),
             t_empty)
           )))]
