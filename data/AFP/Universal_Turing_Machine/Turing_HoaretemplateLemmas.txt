   [("Turing_Hoare.refl_assert", "?P \<mapsto> ?P",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Turing_Hoare.is_final_holds",
     "is_final ?c ==> ?Q holds_for steps ?c ?p ?n = ?Q holds_for ?c",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 3)))),
    ("Turing_Hoare.Hoare_consequence",
     "[| ?P' \<mapsto> ?P; {?P} ?p {?Q}; ?Q \<mapsto> ?Q' |]
      ==> {?P'} ?p {?Q'}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 0)
           ))),
    ("Turing_Hoare.Hoare_plus_unhalt",
     "[| {?P} ?A {?Q}; {?Q} ?B \<up>; tm_wf0 ?A |]
      ==> {?P} ?A |+| ?B \<up>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Turing_Hoare.Hoare_plus_halt",
     "[| {?P} ?A {?Q}; {?Q} ?B {?S}; tm_wf0 ?A |] ==> {?P} ?A |+| ?B {?S}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 3),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 0)
           ))),
    ("Turing_Hoare.Hoare_unhaltI",
     "(!!l r n. ?P (l, r) ==> ~ is_final (steps0 (1, l, r) ?p n)) ==>
      {?P} ?p \<up>",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Turing_Hoare.Hoare_haltI",
     "(!!l r.
          ?P (l, r) ==>
          EX n. is_final (steps0 (1, l, r) ?p n) &
                ?Q holds_for steps0 (1, l, r) ?p n) ==>
      {?P} ?p {?Q}",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           )))]
