   [("PCFG.Proc_CFG_Exit_no_sourcenode",
     "?prog \<turnstile> Exit -?et\<rightarrow>\<^sub>p ?n' ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_hole 1),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("PCFG.Proc_CFG_Entry_no_targetnode",
     "?prog \<turnstile> ?n -?et\<rightarrow>\<^sub>p Entry ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_predicate (template_hole 0))),
    ("PCFG.Entry_label_incr", "Entry = ?n \<oplus> ?i ==> ?n = Entry",
     template_implication
      ([template_equation
         (template_hole 1,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 1, template_hole 1))),
    ("PCFG.Exit_label_incr", "Exit = ?n \<oplus> ?i ==> ?n = Exit",
     template_implication
      ([template_equation
         (template_hole 1,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_equation (template_var 1, template_hole 1))),
    ("PCFG.label_incr_Entry", "?n \<oplus> ?i = Entry ==> ?n = Entry",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_hole 0)],
       template_equation (template_var 1, template_hole 0))),
    ("PCFG.label_incr_Exit", "?n \<oplus> ?i = Exit ==> ?n = Exit",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 0),
          template_hole 0)],
       template_equation (template_var 1, template_hole 0))),
    ("PCFG.Proc_CFG_IEdge_intra_kind",
     "?prog \<turnstile> ?n -IEdge ?et\<rightarrow>\<^sub>p ?n' ==>
      intra_kind ?et",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("PCFG.label_incr_ge", "Label ?l = ?n \<oplus> ?i ==> ?i <= ?l",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation (less_equals, template_var 0, template_var 2))),
    ("PCFG.Proc_CFG_targetlabel_less_num_nodes",
     "?prog \<turnstile> ?n -?et\<rightarrow>\<^sub>p Label ?l ==>
      ?l < #:?prog",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_than, template_var 0,
         template_app (template_hole 0, template_var 3)))),
    ("PCFG.Proc_CFG_sourcelabel_less_num_nodes",
     "?prog \<turnstile> Label ?l -?et\<rightarrow>\<^sub>p ?n' ==>
      ?l < #:?prog",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 2, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_than, template_var 2,
         template_app (template_hole 0, template_var 3)))),
    ("PCFG.label_incr_inj", "?n \<oplus> ?c = ?n' \<oplus> ?c ==> ?n = ?n'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_equation (template_var 2, template_var 0))),
    ("PCFG.label_incr_start_Node_smaller",
     "Label ?l = ?n \<oplus> ?i ==> ?n = Label (?l - ?i)",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_equation
        (template_var 1,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("PCFG.label_incr_start_Node_smaller_rev",
     "?n \<oplus> ?i = Label ?l ==> ?n = Label (?l - ?i)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_var 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("PCFG.label_incr_0",
     "[| Label 0 = ?n \<oplus> ?i; 0 < ?i |] ==> False",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_hole 3),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate (template_hole 0))),
    ("PCFG.label_incr_0_rev",
     "[| ?n \<oplus> ?i = Label 0; 0 < ?i |] ==> False",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 1), template_var 0),
          template_app (template_hole 3, template_hole 2)),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate (template_hole 0))),
    ("PCFG.label_incr_simp",
     "?n \<oplus> ?i = ?m \<oplus> ?i + ?j ==> ?n = ?m \<oplus> ?j",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)))],
       template_equation
        (template_var 3,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("PCFG.label_incr_simp_rev",
     "?m \<oplus> ?j + ?i = ?n \<oplus> ?i ==> ?m \<oplus> ?j = ?n",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_var 0))),
    ("PCFG.Proc_CFG_Call_target_0",
     "?prog \<turnstile> ?n -CEdge
                              (?p, ?es,
                               ?rets)\<rightarrow>\<^sub>p Label 0 ==>
      ?n = Entry",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3),
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_var 0)))),
              template_app (template_hole 3, template_hole 2))
            )],
       template_equation (template_var 3, template_hole 0))),
    ("PCFG.Proc_CFG_Call_containsCall",
     "?prog \<turnstile> ?n -CEdge
                              (?p, ?es, ?rets)\<rightarrow>\<^sub>p ?n' ==>
      containsCall ?procs ?prog [] ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 6),
                  template_var 5),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2)))),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 6),
               template_hole 0),
             template_var 4)
           ))),
    ("PCFG.Proc_CFG_edge_det",
     "[| ?prog \<turnstile> ?n -?et\<rightarrow>\<^sub>p ?n';
         ?prog \<turnstile> ?n -?et'\<rightarrow>\<^sub>p ?n' |]
      ==> ?et = ?et'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 0),
              template_var 1)
            )],
       template_equation (template_var 2, template_var 0))),
    ("PCFG.Proc_CFG_Call_Intra_edge_not_same_source",
     "[| ?prog \<turnstile> ?n -CEdge
                                 (?p, ?es, ?rets)\<rightarrow>\<^sub>p ?n';
         ?prog \<turnstile> ?n -IEdge ?et\<rightarrow>\<^sub>p ?n'' |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 7),
                  template_var 6),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3)))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 7),
                  template_var 6),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("PCFG.Proc_CFG_Call_Intra_edge_not_same_target",
     "[| ?prog \<turnstile> ?n -CEdge
                                 (?p, ?es, ?rets)\<rightarrow>\<^sub>p ?n';
         ?prog \<turnstile> ?n'' -IEdge ?et\<rightarrow>\<^sub>p ?n' |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 7),
                  template_var 6),
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 5),
                    template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3)))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 7),
                  template_var 1),
                template_app (template_hole 1, template_var 0)),
              template_var 2)
            )],
       template_predicate (template_hole 0))),
    ("PCFG.Proc_CFG_Exit_edge",
     "(!!l et.
          [| ?prog \<turnstile> Label l -IEdge et\<rightarrow>\<^sub>p Exit;
             l <= #:?prog |]
          ==> ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("PCFG.Proc_CFG_Call_Labels",
     "?prog \<turnstile> ?n -CEdge
                              (?p, ?es, ?rets)\<rightarrow>\<^sub>p ?n' ==>
      EX l. ?n = Label l & ?n' = Label (Suc l)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4),
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("PCFG.Proc_CFG_Call_follows_id_edge",
     "[| ?prog \<turnstile> ?n -CEdge
                                 (?p, ?es, ?rets)\<rightarrow>\<^sub>p ?n';
         ?prog \<turnstile> ?n' -IEdge ?et\<rightarrow>\<^sub>p ?n'' |]
      ==> ?et = \<Up>id",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 7),
                  template_var 6),
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 5),
                    template_app
                     (template_app (template_hole 4, template_var 4),
                      template_var 3)))),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 7),
                  template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 1, template_app (template_hole 1, template_hole 0)))),
    ("PCFG.Proc_CFG_Call_targetnode_no_Call_sourcenode",
     "[| ?prog \<turnstile> ?n -CEdge
                                 (?p, ?es, ?rets)\<rightarrow>\<^sub>p ?n';
         ?prog \<turnstile> ?n' -CEdge
                                  (?p', ?es',
                                   ?rets')\<rightarrow>\<^sub>p ?n'' |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 9),
                  template_var 8),
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 7),
                    template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 5)))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 9),
                  template_var 4),
                template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_app
                     (template_app (template_hole 1, template_var 2),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate (template_hole 0))),
    ("PCFG.Proc_CFG_EntryD",
     "?prog \<turnstile> Entry -?et\<rightarrow>\<^sub>p ?n' ==>
      ?n' = Exit & ?et = IEdge (%s. False)\<^sub>\<surd> |
      ?n' = Label 0 & ?et = IEdge (%s. True)\<^sub>\<surd>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 2),
                  template_hole 11),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_var 0),
                     template_hole 7)),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_app
                    (template_hole 5,
                     template_app (template_hole 4, t_empty))))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_var 0),
                   template_app (template_hole 2, template_hole 1))),
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_app
                  (template_hole 5,
                   template_app (template_hole 4, t_empty)))))
           ))),
    ("PCFG.containsCall_empty_Proc_CFG_Call_edge",
     "[| containsCall ?procs ?prog [] ?p;
         !!l es rets l'.
            ?prog \<turnstile> Label
                                l -CEdge
                                    (?p, es,
                                     rets)\<rightarrow>\<^sub>p Label l' ==>
            ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2),
                template_hole 8),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("PCFG.containsCall_indirection",
     "[| containsCall ?procs ?prog ?qs ?q; containsCall ?procs ?c ?ps ?p;
         (?q, ?ins, ?outs, ?c) : set ?procs |]
      ==> containsCall ?procs ?prog (?qs @ ?q # ?ps) ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 8),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_app
                     (template_app (template_hole 3, template_var 0),
                      template_var 4)))),
              template_app (template_hole 2, template_var 8))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 8),
                 template_var 7),
               template_app
                (template_app (template_hole 1, template_var 6),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 3))),
             template_var 2)
           ))),
    ("PCFG.containsCall_in_proc",
     "[| containsCall ?procs ?prog ?qs ?q;
         (?q, ?ins, ?outs, ?c) : set ?procs; containsCall ?procs ?c [] ?p |]
      ==> containsCall ?procs ?prog (?qs @ [?q]) ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 1)))),
              template_app (template_hole 3, template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 7),
                  template_var 1),
                template_hole 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 8, template_var 7),
                 template_var 6),
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_hole 2))),
             template_var 0)
           ))),
    ("PCFG.Proc_CFG_Call_nodes_eq",
     "[| ?prog \<turnstile> ?n -CEdge
                                 (?p, ?es, ?rets)\<rightarrow>\<^sub>p ?n';
         ?prog \<turnstile> ?n -CEdge
                                 (?p', ?es',
                                  ?rets')\<rightarrow>\<^sub>p ?n'' |]
      ==> ?n' = ?n'' & ?p = ?p' & ?es = ?es' & ?rets = ?rets'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 9),
                  template_var 8),
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 7),
                    template_app
                     (template_app (template_hole 5, template_var 6),
                      template_var 5)))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 9),
                  template_var 8),
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_var 1)))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 2, template_var 7),
                   template_var 3)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 1, template_var 6),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 1))))
           ))),
    ("PCFG.Proc_CFG_Call_nodes_eq'",
     "[| ?prog \<turnstile> ?n -CEdge
                                 (?p, ?es, ?rets)\<rightarrow>\<^sub>p ?n';
         ?prog \<turnstile> ?n'' -CEdge
                                   (?p', ?es',
                                    ?rets')\<rightarrow>\<^sub>p ?n' |]
      ==> ?n = ?n'' & ?p = ?p' & ?es = ?es' & ?rets = ?rets'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 9),
                  template_var 8),
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 7),
                    template_app
                     (template_app (template_hole 5, template_var 6),
                      template_var 5)))),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 9),
                  template_var 3),
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_var 0)))),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 8),
                 template_var 3)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 2, template_var 7),
                   template_var 2)),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 1, template_var 6),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 5),
                   template_var 0))))
           ))),
    ("PCFG.WCFG_deterministic",
     "[| ?prog \<turnstile> ?n\<^sub>1 -?et\<^sub>1\<rightarrow>\<^sub>p ?n\<^sub>1';
         ?prog \<turnstile> ?n\<^sub>2 -?et\<^sub>2\<rightarrow>\<^sub>p ?n\<^sub>2';
         ?n\<^sub>1 = ?n\<^sub>2; ?n\<^sub>1' ~= ?n\<^sub>2' |]
      ==> EX Q Q'.
             ?et\<^sub>1 = IEdge (Q)\<^sub>\<surd> &
             ?et\<^sub>2 = IEdge (Q')\<^sub>\<surd> &
             (ALL s. (Q s --> ~ Q' s) & (Q' s --> ~ Q s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 6),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_equation (template_var 5, template_var 2),
        template_negation
         (template_equation (template_var 3, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("PCFG.containsCallcases",
     "containsCall ?procs ?prog ?ps ?p ==>
      ?ps = [] & containsCall ?procs ?prog ?ps ?p |
      (EX q ins outs c ps'.
          ?ps = ps' @ [q] &
          (q, ins, outs, c) : set ?procs &
          containsCall ?procs c [] ?p & containsCall ?procs ?prog ps' q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 14, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app (template_hole 11, template_var 1),
                     template_hole 10)),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 14, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 9, t_empty))
           ))),
    ("PCFG.containsCallE",
     "[| containsCall ?procs ?prog ?ps ?p;
         [| ?ps = []; containsCall ?procs ?prog ?ps ?p |]
         ==> ?P ?procs ?prog ?ps ?p;
         !!q ins outs c es' rets' ps'.
            [| ?ps = ps' @ [q]; (q, ins, outs, c) : set ?procs;
               containsCall ?procs c [] ?p;
               containsCall ?procs ?prog ps' q |]
            ==> ?P ?procs ?prog ?ps ?p |]
      ==> ?P ?procs ?prog ?ps ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 14, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 2, template_hole 12)],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 14, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1)
                 )],
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app (template_var 0, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1)
                ))),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_var 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("PCFG.containsCall_induct",
     "[| !!procs ps p. ?P procs Skip ps p;
         !!procs V e ps p. ?P procs (V:=e) ps p;
         !!procs c\<^sub>1 c\<^sub>2 ps p.
            [| ?P procs c\<^sub>1 ps p; ?P procs c\<^sub>2 ps p |]
            ==> ?P procs (c\<^sub>1;; c\<^sub>2) ps p;
         !!procs b c\<^sub>1 c\<^sub>2 ps p.
            [| ?P procs c\<^sub>1 ps p; ?P procs c\<^sub>2 ps p |]
            ==> ?P procs (if (b) c\<^sub>1 else c\<^sub>2) ps p;
         !!procs b c ps p. ?P procs c ps p ==> ?P procs (while (b) c) ps p;
         !!procs q es' rets' ps p.
            (!!x xa xb xc.
                [| ps = q # xc; (q, x, xa, xb) : set procs |]
                ==> ?P procs xb xc p) ==>
            ?P procs (Call q es' rets') ps p |]
      ==> ?P ?a0.0 ?a1.0 ?a2.0 ?a3.0",
     template_implication
      ([template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_var 4, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           )))]
