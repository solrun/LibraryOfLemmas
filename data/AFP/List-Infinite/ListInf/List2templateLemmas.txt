   [("List2.list_ord_Nil", "list_ord ?ord []",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("List2.list_asc_upto", "list_asc [?m..?n]",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("List2.list_strict_asc_upt", "list_strict_asc [?m..<?n]",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("List2.f_image_empty", "?xs `\<^sup>f {} = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("List2.map_id", "map id ?xs = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("List2.nths_UNIV", "nths ?xs UNIV = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("List2.map_list_Nil", "map_list [] ?xs = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("List2.sublist_list_Nil", "sublist_list ?xs [] = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("List2.sublist_list_if_Nil_left", "sublist_list_if [] ?ys = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("List2.sublist_list_if_Nil_right", "sublist_list_if ?xs [] = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("List2.list_ord_one", "list_ord ?ord [?x]",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("List2.f_range_eq_set", "f_range ?xs = set ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("List2.list_ord_le_sorted_eq", "list_asc ?xs = sorted ?xs",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("List2.map2_Nil", "List2.map2 ?f [] ?ys = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_hole 0)),
    ("List2.list_strict_asc_distinct",
     "list_strict_asc ?xs ==> distinct ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("List2.list_strict_asc_imp_list_asc",
     "list_strict_asc ?xs ==> list_asc ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("List2.list_strict_desc_distinct",
     "list_strict_desc ?xs ==> distinct ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("List2.list_strict_desc_imp_list_desc",
     "list_strict_desc ?xs ==> list_desc ?xs",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("List2.sublist_list_length",
     "length (sublist_list ?xs ?ys) = length ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("List2.map_list_length", "length (map_list ?fs ?xs) = length ?fs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("List2.drop_eq_tl", "?xs \<up> Suc 0 = tl ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("List2.length_take_le", "length (?xs \<down> ?n) <= length ?xs",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("List2.length_Cons", "length (?x # ?xs) = Suc (length ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("List2.map2_length", "length (List2.map2 ?f ?xs ?ys) = length ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("List2.f_image_eq_set_nths", "?xs `\<^sup>f ?A = set (nths ?xs ?A)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List2.map_id_subst", "?P (map id ?xs) ==> ?P ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 1,
              template_app
               (template_app (template_hole 1, template_hole 0),
                template_var 0))
            )],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("List2.replicate_Cons_length",
     "length (?x # ?a\<^bsup>?n\<^esup>) = Suc ?n",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app (template_hole 0, template_var 1))),
    ("List2.f_image_eq_set_sublist_list_if",
     "?xs `\<^sup>f set ?ys = set (sublist_list_if ?xs ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List2.map_list_empty_conv", "(map_list ?fs ?xs = []) = (?fs = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 1, template_hole 0))),
    ("List2.sublist_list_is_Nil_conv",
     "(sublist_list ?xs ?ys = []) = (?ys = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("List2.append_eq_Cons", "[?x] @ ?xs = ?x # ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("List2.length_snoc", "length (?xs @ [?x]) = Suc (length ?xs)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_hole 0, template_app (template_hole 4, template_var 1)))),
    ("List2.set_sublist_list_if_eq_set_sublist",
     "set (sublist_list_if ?xs ?ys) = set (nths ?xs (set ?ys))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("List2.map2_empty_conv", "(List2.map2 ?f ?xs ?ys = []) = (?xs = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 2),
       template_equation (template_var 1, template_hole 0))),
    ("List2.map_one", "map ?f [?x] = [?f ?x]",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 1, template_var 0)),
         template_hole 0))),
    ("List2.map_eq_map_list_replicate",
     "map_list ?f\<^bsup>length ?xs\<^esup> ?xs = map ?f ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("List2.map2_map_list_conv",
     "List2.map2 ?f ?xs ?ys = map_list (map ?f ?xs) ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("List2.filter_list_all", "list_all ?P ?xs ==> filter ?P ?xs = ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("List2.length_greater_imp_not_empty", "?n < length ?xs ==> ?xs ~= []",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("List2.drop_not_empty_conv",
     "(?xs \<up> ?n ~= []) = (?n < length ?xs)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("List2.map_list_not_empty_conv",
     "(map_list ?fs ?xs ~= []) = (?fs ~= [])",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0),
             template_hole 2)
           ),
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("List2.map_list_take",
     "map_list ?fs ?xs \<down> ?n = map_list (?fs \<down> ?n) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("List2.zip_takeR", "zip ?xs ?ys \<down> ?n = zip ?xs (?ys \<down> ?n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List2.zip_takeL", "zip ?xs ?ys \<down> ?n = zip (?xs \<down> ?n) ?ys",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("List2.length_ge_Suc_imp_not_empty",
     "Suc ?n <= length ?xs ==> ?xs ~= []",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("List2.map2_not_empty_conv",
     "(List2.map2 ?f ?xs ?ys ~= []) = (?xs ~= [])",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 2)
           ),
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("List2.replicate_snoc",
     "?x\<^bsup>?n\<^esup> @ [?x] = ?x\<^bsup>Suc ?n\<^esup>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("List2.sublist_list_nths_eq",
     "list_strict_asc ?ys ==> sublist_list_if ?xs ?ys = nths ?xs (set ?ys)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("List2.f_image_mono",
     "?A <= ?B ==> ?xs `\<^sup>f ?A <= ?xs `\<^sup>f ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("List2.hd_eq_first", "?xs ~= [] ==> ?xs ! 0 = hd ?xs",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 1),
         template_app (template_hole 0, template_var 0)))),
    ("List2.nths_all", "{..<length ?xs} <= ?I ==> nths ?xs ?I = ?xs",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 1)),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("List2.sublist_list_if_length",
     "length (sublist_list_if ?xs ?ys) =
      length (filter (%i. i < length ?xs) ?ys)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("List2.f_image_Un",
     "?xs `\<^sup>f (?A Un ?B) = ?xs `\<^sup>f ?A Un ?xs `\<^sup>f ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("List2.list_drop_eq_conv",
     "(?xs = ?ys) = (ALL n. ?xs \<up> n = ?ys \<up> n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("List2.list_take_eq_conv",
     "(?xs = ?ys) = (ALL n. ?xs \<down> n = ?ys \<down> n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("List2.nths_empty_conv",
     "(nths ?xs ?I = []) = (ALL i:?I. length ?xs <= i)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 0), t_empty))),
    ("List2.sublist_list_if_is_Nil_conv",
     "(sublist_list_if ?xs ?ys = []) = list_all ((<=) (length ?xs)) ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, t_empty), template_var 0))),
    ("List2.zip_eq_Nil", "(zip ?xs ?ys = []) = (?xs = [] | ?ys = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_hole 5),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("List2.sublist_list_if_sublist_list_filter_conv",
     "sublist_list_if ?xs ?ys =
      sublist_list ?xs (filter (%i. i < length ?xs) ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("List2.sublist_list_append",
     "sublist_list ?xs (?ys @ ?zs) =
      sublist_list ?xs ?ys @ sublist_list ?xs ?zs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("List2.sublist_list_if_append",
     "sublist_list_if ?xs (?ys @ ?zs) =
      sublist_list_if ?xs ?ys @ sublist_list_if ?xs ?zs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("List2.map_list_drop",
     "map_list ?fs ?xs \<up> ?n = map_list (?fs \<up> ?n) (?xs \<up> ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List2.map_list_take_take",
     "map_list ?fs ?xs \<down> ?n =
      map_list (?fs \<down> ?n) (?xs \<down> ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List2.map2_take",
     "List2.map2 ?f ?xs ?ys \<down> ?n =
      List2.map2 ?f (?xs \<down> ?n) ?ys",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_var 0))),
    ("List2.zip_take",
     "zip ?xs ?ys \<down> ?n = zip (?xs \<down> ?n) (?ys \<down> ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List2.f_rangeI", "?n < length ?xs ==> ?xs ! ?n : f_range ?xs",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("List2.map_list_Cons_Cons",
     "map_list (?f # ?fs) (?x # ?xs) = ?f ?x # map_list ?fs ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 3, template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("List2.map2_replicate",
     "List2.map2 ?f ?x\<^bsup>?n\<^esup> ?y\<^bsup>?n\<^esup> =
      (?f ?x ?y)\<^bsup>?n\<^esup>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_var 3, template_var 1),
           template_var 0)))),
    ("List2.zip_swap", "map2 (%y x. (x, y)) ?ys ?xs = zip ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("List2.map_last", "?xs ~= [] ==> last (map ?f ?xs) = ?f (last ?xs)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_var 0,
           template_app (template_hole 0, template_var 1))))),
    ("List2.sublist_list_eq_imp_length_eq",
     "sublist_list ?xs ?ys = sublist_list ?xs ?zs ==>
      length ?ys = length ?zs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("List2.list_all_conv",
     "list_all ?P ?xs = (ALL i<length ?xs. ?P (?xs ! i))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app (template_hole 4, t_empty))),
    ("List2.take_not_empty_conv",
     "(?xs \<down> ?n ~= []) = (0 < ?n & ?xs ~= [])",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0),
             template_hole 3)
           ),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 3)))
           ))),
    ("List2.map2_drop",
     "List2.map2 ?f ?xs ?ys \<up> ?n =
      List2.map2 ?f (?xs \<up> ?n) (?ys \<up> ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("List2.map2_take_take",
     "List2.map2 ?f ?xs ?ys \<down> ?n =
      List2.map2 ?f (?xs \<down> ?n) (?ys \<down> ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("List2.take_hd", "?xs ~= [] ==> ?xs \<down> Suc 0 = [hd ?xs]",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_hole 5)))),
    ("List2.nth_tl_eq_nth_Suc2",
     "?n < length ?xs ==> tl ?xs ! ?n = ?xs ! Suc ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("List2.last_take",
     "?n < length ?xs ==> last (?xs \<down> Suc ?n) = ?xs ! ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("List2.nth_append1", "?n < length ?xs ==> (?xs @ ?ys) ! ?n = ?xs ! ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("List2.nth_0_drop", "?n <= length ?xs ==> ?xs \<up> ?n ! 0 = ?xs ! ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 1)))),
    ("List2.f_image_insert_eq2",
     "length ?xs <= ?n ==> ?xs `\<^sup>f insert ?n ?A = ?xs `\<^sup>f ?A",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("List2.nths_cut_less_eq",
     "length ?xs <= ?n ==> nths ?xs (?I \<down>< ?n) = nths ?xs ?I",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("List2.map_list_xs_take",
     "length ?fs <= ?n ==>
      map_list ?fs (?xs \<down> ?n) = map_list ?fs ?xs",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("List2.zip_not_empty_conv",
     "(zip ?xs ?ys ~= []) = (?xs ~= [] & ?ys ~= [])",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0),
             template_hole 5)
           ),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_hole 2))),
             template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("List2.replicate_pred_Cons_length",
     "0 < ?n ==> length (?x # ?a\<^bsup>?n - Suc 0\<^esup>) = ?n",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 2)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app (template_hole 0, template_hole 6))),
               template_var 0))),
         template_var 2))),
    ("List2.upt_append", "?m <= ?n ==> [0..<?m] @ [?m..<?n] = [0..<?n]",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("List2.last_nth",
     "?xs ~= [] ==> last ?xs = ?xs ! (length ?xs - Suc 0)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_app (template_hole 1, template_hole 0)))))),
    ("List2.take_first", "?xs ~= [] ==> ?xs \<down> Suc 0 = [?xs ! 0]",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 2)),
           template_hole 5)))),
    ("List2.nth_tl_eq_nth_Suc",
     "Suc ?n <= length ?xs ==> tl ?xs ! ?n = ?xs ! Suc ?n",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 4, template_var 1))))),
    ("List2.sublist_list_if_sublist_list_eq",
     "list_all (%i. i < length ?xs) ?ys ==>
      sublist_list_if ?xs ?ys = sublist_list ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List2.list_ord_Cons_imp",
     "[| list_ord ?ord ?xs; ?ord ?x (hd ?xs) |]
      ==> list_ord ?ord (?x # ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("List2.subset_f_image_iff",
     "(?B <= ?xs `\<^sup>f ?A) = (EX A'<=?A. ?B = ?xs `\<^sup>f A')",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("List2.nths_singleton2",
     "nths ?xs {?y} = (if ?y < length ?xs then [?xs ! ?y] else [])",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app
          (template_app (template_hole 7, template_var 0),
           template_hole 6)),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 3, template_var 1))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)),
         template_hole 0))),
    ("List2.map2_Cons_Cons",
     "List2.map2 ?f (?x # ?xs) (?y # ?ys) =
      ?f ?x ?y # List2.map2 ?f ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_var 4, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 2),
           template_var 0)))),
    ("List2.sublist_list_nth",
     "?n < length ?ys ==> sublist_list ?xs ?ys ! ?n = ?xs ! (?ys ! ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("List2.map2_ys_take",
     "length ?xs <= ?n ==>
      List2.map2 ?f ?xs (?ys \<down> ?n) = List2.map2 ?f ?xs ?ys",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 3),
          template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 3),
           template_var 0)))),
    ("List2.filter_filter_eq",
     "list_all (%x. ?P x = ?Q x) ?xs ==> filter ?P ?xs = filter ?Q ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty), template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List2.f_image_is_empty",
     "(?xs `\<^sup>f ?A = {}) = ({x: ?A. x < length ?xs} = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 8, template_var 1), template_var 0),
         template_hole 7),
       template_equation
        (template_app (template_hole 5, t_empty), template_hole 0))),
    ("List2.list_ord_Cons",
     "list_ord ?ord (?x # ?xs) =
      (?xs = [] | ?ord ?x (hd ?xs) & list_ord ?ord ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_var 2, template_var 1),
                   template_app (template_hole 0, template_var 0))),
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_var 0)))
           ))),
    ("List2.replicate_le_diff",
     "?m <= ?n ==>
      ?x\<^bsup>?m\<^esup> @ ?x\<^bsup>?n - ?m\<^esup> =
      ?x\<^bsup>?n\<^esup>",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("List2.drop_take_1",
     "?n < length ?xs ==> ?xs \<up> ?n \<down> Suc 0 = [?xs ! ?n]",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_hole 4)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_hole 0)))),
    ("List2.nth_append2",
     "length ?xs <= ?n ==> (?xs @ ?ys) ! ?n = ?ys ! (?n - length ?xs)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 4, template_var 2)))))),
    ("List2.f_image_eq_set_sublist_list",
     "list_all (%i. i < length ?xs) ?ys ==>
      ?xs `\<^sup>f set ?ys = set (sublist_list ?xs ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty), template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("List2.f_image_eq_set",
     "ALL n<length ?xs. n : ?A ==> ?xs `\<^sup>f ?A = set ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("List2.f_imageI",
     "[| ?n : ?A; ?n < length ?xs |] ==> ?xs ! ?n : ?xs `\<^sup>f ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("List2.f_range_eqI",
     "[| ?x = ?xs ! ?n; ?n < length ?xs |] ==> ?x : f_range ?xs",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("List2.f_image_subset_iff",
     "(?xs `\<^sup>f ?A <= ?B) =
      (ALL n:?A. n < length ?xs --> ?xs ! n : ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 5, template_var 1), t_empty))),
    ("List2.f_image_iff",
     "(?x : ?xs `\<^sup>f ?A) = (EX n:?A. n < length ?xs & ?x = ?xs ! n)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 5, template_var 0), t_empty))),
    ("List2.eq_replicate_conv",
     "(ALL i<length ?xs. ?xs ! i = ?m) =
      (?xs = ?m\<^bsup>length ?xs\<^esup>)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 1)),
           template_var 0)))),
    ("List2.map_list_Cons_if",
     "map_list ?fs (?x # ?xs) =
      (if ?fs = [] then [] else hd ?fs ?x # map_list (tl ?fs) ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_hole 4)),
               template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)))
           ))),
    ("List2.f_image_insert_eq1",
     "?n < length ?xs ==>
      ?xs `\<^sup>f insert ?n ?A = insert (?xs ! ?n) (?xs `\<^sup>f ?A)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("List2.map2_rev",
     "length ?xs = length ?ys ==>
      rev (List2.map2 ?f ?xs ?ys) = List2.map2 ?f (rev ?xs) (rev ?ys)",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 2)),
           template_app (template_hole 0, template_var 1))))),
    ("List2.set_sublist_list_eq_set_sublist",
     "list_all (%i. i < length ?xs) ?ys ==>
      set (sublist_list ?xs ?ys) = set (nths ?xs (set ?ys))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty), template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)))))),
    ("List2.nths_take_eq",
     "[| finite ?I; Max ?I < ?n |]
      ==> nths (?xs \<down> ?n) ?I = nths ?xs ?I",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_inequation
         (less_than, template_app (template_hole 3, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("List2.list_ord_snoc",
     "list_ord ?ord (?xs @ [?x]) =
      (?xs = [] | ?ord (last ?xs) ?x & list_ord ?ord ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_hole 4)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 4)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_var 2,
                     template_app (template_hole 0, template_var 1)),
                   template_var 0)),
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1)))
           ))),
    ("List2.map_list_Cons_not_empty",
     "?fs ~= [] ==>
      map_list ?fs (?x # ?xs) = hd ?fs ?x # map_list (tl ?fs) ?xs",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 2)),
             template_var 0))))),
    ("List2.f_image_insert_if",
     "?xs `\<^sup>f insert ?n ?A =
      (if ?n < length ?xs then insert (?xs ! ?n) (?xs `\<^sup>f ?A)
       else ?xs `\<^sup>f ?A)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 2, template_var 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_var 0)))),
    ("List2.list_take_drop_eq_conv",
     "(?xs = ?ys) =
      (EX n. ?xs \<down> n = ?ys \<down> n & ?xs \<up> n = ?ys \<up> n)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app (template_hole 3, t_empty))),
    ("List2.list_ord_all_conv",
     "list_ord ?ord ?xs =
      (ALL n<length ?xs - 1. ?ord (?xs ! n) (?xs ! Suc n))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app (template_hole 7, t_empty))),
    ("List2.filter_snoc",
     "filter ?P (?xs @ [?x]) =
      (if ?P ?x then filter ?P ?xs @ [?x] else filter ?P ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1))),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 1)))),
    ("List2.nths_drop_eq",
     "?n <= iMin ?I ==> nths (?xs \<up> ?n) {j. j + ?n : ?I} = nths ?xs ?I",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_app (template_hole 2, t_empty)),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_var 1)))),
    ("List2.take_drop_eq_sublist_list",
     "?m + ?n <= length ?xs ==>
      ?xs \<up> ?m \<down> ?n = sublist_list ?xs [?m..<?m + ?n]",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 6, template_var 2), template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1)))))),
    ("List2.take_drop_eq_sublist_list_if",
     "?m + ?n <= length ?xs ==>
      ?xs \<up> ?m \<down> ?n = sublist_list_if ?xs [?m..<?m + ?n]",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 6, template_var 2), template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1)))))),
    ("List2.list_take_drop_imp_eq",
     "[| ?xs \<down> ?n = ?ys \<down> ?n; ?xs \<up> ?n = ?ys \<up> ?n |]
      ==> ?xs = ?ys",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("List2.map2_Cons_if",
     "List2.map2 ?f ?xs (?y # ?ys) =
      (if ?xs = [] then []
       else ?f (hd ?xs) ?y # List2.map2 ?f (tl ?xs) ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_hole 4)),
               template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_var 3,
                     template_app (template_hole 1, template_var 2)),
                   template_var 1)),
               template_app
                (template_app
                  (template_app (template_hole 8, template_var 3),
                   template_app (template_hole 0, template_var 2)),
                 template_var 0)))
           ))),
    ("List2.map_list_append_append",
     "length ?fs1.0 = length ?xs1.0 ==>
      map_list (?fs1.0 @ ?fs2.0) (?xs1.0 @ ?xs2.0) =
      map_list ?fs1.0 ?xs1.0 @ map_list ?fs2.0 ?xs2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 3),
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("List2.map2_zip_conv",
     "length ?xs <= length ?ys ==> List2.map2 ?f ?xs ?ys = map2 ?f ?xs ?ys",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 0),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("List2.sublist_list_if_sublist_list_eq2",
     "ALL n<length ?ys. ?ys ! n < length ?xs ==>
      sublist_list_if ?xs ?ys = sublist_list ?xs ?ys",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("List2.last_take2",
     "[| 0 < ?n; ?n <= length ?xs |]
      ==> last (?xs \<down> ?n) = ?xs ! (?n - Suc 0)",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 1),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_hole 8)))))),
    ("List2.insert_f_image",
     "[| ?n : ?A; ?n < length ?xs |]
      ==> insert (?xs ! ?n) (?xs `\<^sup>f ?A) = ?xs `\<^sup>f ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("List2.hd_zip",
     "[| ?xs ~= []; ?ys ~= [] |] ==> hd (zip ?xs ?ys) = (hd ?xs, hd ?ys)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("List2.map_eq_map_list_take2",
     "[| length ?fs = length ?xs; list_all (%x. x = ?f) ?fs |]
      ==> map_list ?fs ?xs = map ?f ?xs",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, t_empty), template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("List2.list_ord_imp",
     "[| !!x y. ?ord x y ==> ?ord' x y; list_ord ?ord ?xs |]
      ==> list_ord ?ord' ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("List2.list_asc_trans",
     "list_asc ?xs = (ALL j<length ?xs. ALL i<j. ?xs ! i <= ?xs ! j)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app (template_hole 5, t_empty))),
    ("List2.list_asc_trans_le",
     "list_asc ?xs = (ALL j<length ?xs. ALL i<=j. ?xs ! i <= ?xs ! j)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app (template_hole 6, t_empty))),
    ("List2.list_desc_trans",
     "list_desc ?xs = (ALL j<length ?xs. ALL i<j. ?xs ! j <= ?xs ! i)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app (template_hole 5, t_empty))),
    ("List2.list_desc_trans_le",
     "list_desc ?xs = (ALL j<length ?xs. ALL i<=j. ?xs ! j <= ?xs ! i)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app (template_hole 6, t_empty))),
    ("List2.list_strict_asc_trans",
     "list_strict_asc ?xs = (ALL j<length ?xs. ALL i<j. ?xs ! i < ?xs ! j)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app (template_hole 5, t_empty))),
    ("List2.list_strict_desc_trans",
     "list_strict_desc ?xs =
      (ALL j<length ?xs. ALL i<j. ?xs ! j < ?xs ! i)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app (template_hole 5, t_empty))),
    ("List2.sublist_list_if_snoc",
     "sublist_list_if ?xs (?ys @ [?y]) =
      sublist_list_if ?xs ?ys @
      (if ?y < length ?xs then [?xs ! ?y] else [])",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 2),
         template_app
          (template_app (template_hole 9, template_var 1),
           template_app
            (template_app (template_hole 8, template_var 0),
             template_hole 7))),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 10, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app (template_hole 3, template_var 2))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               template_hole 0)),
           template_hole 0)))),
    ("List2.map2_Cons_not_empty",
     "?xs ~= [] ==>
      List2.map2 ?f ?xs (?y # ?ys) =
      ?f (hd ?xs) ?y # List2.map2 ?f (tl ?xs) ?ys",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 3),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_var 2,
                 template_app (template_hole 1, template_var 3)),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app (template_hole 0, template_var 3)),
             template_var 0))))),
    ("List2.rev_f_imageI",
     "[| ?n : ?A; ?n < length ?xs; ?x = ?xs ! ?n |]
      ==> ?x : ?xs `\<^sup>f ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 4, template_var 1)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("List2.f_image_eqI",
     "[| ?x = ?xs ! ?n; ?n : ?A; ?n < length ?xs |]
      ==> ?x : ?xs `\<^sup>f ?A",
     template_implication
      ([template_equation
         (template_var 3,
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("List2.set_sublist_list_if",
     "set (sublist_list_if ?xs ?ys) =
      {?xs ! i |i. i < length ?xs & i : set ?ys}",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app (template_hole 9, template_var 1), template_var 0)),
       template_app (template_hole 8, t_empty))),
    ("List2.f_image_Collect",
     "?xs `\<^sup>f {n. ?P n} = {?xs ! n |n. ?P n & n < length ?xs}",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app (template_hole 7, t_empty)),
       template_app (template_hole 6, t_empty))),
    ("List2.list_eq_iff",
     "(?xs = ?ys) =
      (length ?xs = length ?ys & (ALL i<length ?xs. ?xs ! i = ?ys ! i))",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 1)),
                 template_app (template_hole 5, template_var 0))),
             template_app (template_hole 4, t_empty))
           ))),
    ("List2.list_strict_asc_trans_le",
     "list_strict_asc ?xs ==>
      ALL j<length ?xs. ALL i<=j. ?xs ! i <= ?xs ! j",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("List2.f_image_subsetI",
     "(!!n. n : ?A & n < length ?xs ==> ?xs ! n : ?B) ==>
      ?xs `\<^sup>f ?A <= ?B",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("List2.nths_disjoint_Un",
     "[| finite ?A; Max ?A < iMin ?B |]
      ==> nths ?xs (?A Un ?B) = nths ?xs ?A @ nths ?xs ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("List2.map_list_nth",
     "[| ?n < length ?fs; ?n < length ?xs |]
      ==> map_list ?fs ?xs ! ?n = (?fs ! ?n) (?xs ! ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("List2.map2_append_append",
     "length ?xs1.0 = length ?ys1.0 ==>
      List2.map2 ?f (?xs1.0 @ ?xs2.0) (?ys1.0 @ ?ys2.0) =
      List2.map2 ?f ?xs1.0 ?ys1.0 @ List2.map2 ?f ?xs2.0 ?ys2.0",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 4),
          template_app (template_hole 5, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 4),
               template_var 3)),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0))))),
    ("List2.nths_disjoint_insert_left",
     "[| finite ?I; ?x < iMin ?I |]
      ==> nths ?xs (insert ?x ?I) = nths ?xs {?x} @ nths ?xs ?I",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 0))),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 2))))),
    ("List2.nths_disjoint_insert_right",
     "[| finite ?I; Max ?I < ?x |]
      ==> nths ?xs (insert ?x ?I) = nths ?xs ?I @ nths ?xs {?x}",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 0)))))),
    ("List2.map_eq_map_list_take",
     "[| length ?fs <= length ?xs; list_all (%x. x = ?f) ?fs |]
      ==> map_list ?fs ?xs = map ?f (?xs \<down> length ?fs)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 7, template_var 2),
          template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app
              (template_hole 0,
               template_app (template_hole 7, template_var 2)),
             template_var 1))))),
    ("List2.map_list_snoc",
     "length ?fs < length ?xs ==>
      map_list (?fs @ [?f]) ?xs =
      map_list ?fs ?xs @ [?f (?xs ! length ?fs)]",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 10, template_var 2),
          template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4))),
           template_var 1),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_var 0,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_app (template_hole 10, template_var 2)))),
             template_hole 0))))),
    ("List2.map2_nth",
     "[| ?n < length ?xs; ?n < length ?ys |]
      ==> List2.map2 ?f ?xs ?ys ! ?n = ?f (?xs ! ?n) (?ys ! ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 2),
               template_var 1)),
           template_var 3),
         template_app
          (template_app
            (template_var 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 3))))),
    ("List2.f_rangeE",
     "[| ?x : f_range ?xs; !!n. [| n < length ?xs; ?x = ?xs ! n |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 5))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("List2.list_ord_append",
     "list_ord ?ord (?xs @ ?ys) =
      (list_ord ?ord ?xs &
       (?ys = [] |
        list_ord ?ord ?ys & (?xs = [] | ?ord (last ?xs) (hd ?ys))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 7, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_hole 2)),
                   template_app
                    (template_app
                      (template_var 2,
                       template_app (template_hole 1, template_var 1)),
                     template_app (template_hole 0, template_var 0))))))
           ))),
    ("List2.map_list_snoc_snoc",
     "length ?fs = length ?xs ==>
      map_list (?fs @ [?f]) (?xs @ [?x]) = map_list ?fs ?xs @ [?f ?x]",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 3),
          template_app (template_hole 11, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 3),
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_hole 6))),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 9, template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 1, template_var 0)),
             template_hole 0))))),
    ("List2.replicate_le_diff2",
     "[| ?k <= ?m; ?m <= ?n |]
      ==> ?x\<^bsup>?m - ?k\<^esup> @ ?x\<^bsup>?n - ?m\<^esup> =
          ?x\<^bsup>?n - ?k\<^esup>",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3)),
           template_var 0)))),
    ("List2.list_ord_distinct",
     "[| irrefl {(a, b). ?ord a b}; trans {(x, y). ?ord x y};
         list_ord ?ord ?xs |]
      ==> distinct ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_hole 4, template_app (template_hole 3, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app
               (template_hole 4, template_app (template_hole 3, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("List2.map2_snoc",
     "length ?xs < length ?ys ==>
      List2.map2 ?f (?xs @ [?x]) ?ys =
      List2.map2 ?f ?xs ?ys @ [?f ?x (?ys ! length ?xs)]",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 10, template_var 3),
          template_app (template_hole 9, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 7, template_var 1),
             template_app
              (template_app (template_hole 6, template_var 3),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 4))),
           template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 1),
                 template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_var 1, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_app (template_hole 10, template_var 3)))),
             template_hole 0))))),
    ("List2.map2_append1_take_drop",
     "length ?xs1.0 <= length ?ys ==>
      List2.map2 ?f (?xs1.0 @ ?xs2.0) ?ys =
      List2.map2 ?f ?xs1.0 (?ys \<down> length ?xs1.0) @
      List2.map2 ?f ?xs2.0 (?ys \<up> length ?xs1.0)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 7, template_var 3),
          template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 3),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 7, template_var 3)),
                 template_var 2))),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 7, template_var 3)),
               template_var 2)))))),
    ("List2.map2_append2_take_drop",
     "length ?ys1.0 <= length ?xs ==>
      List2.map2 ?f ?xs (?ys1.0 @ ?ys2.0) =
      List2.map2 ?f (?xs \<down> length ?ys1.0) ?ys1.0 @
      List2.map2 ?f (?xs \<up> length ?ys1.0) ?ys2.0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 7, template_var 3),
          template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_var 2),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 7, template_var 3)),
                   template_var 2)),
               template_var 3)),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 7, template_var 3)),
                 template_var 2)),
             template_var 0))))),
    ("List2.sublist_list_if_nth",
     "?n < length (filter (%i. i < length ?xs) ?ys) ==>
      sublist_list_if ?xs ?ys ! ?n =
      ?xs ! (filter (%i. i < length ?xs) ?ys ! ?n)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, t_empty), template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 5, t_empty), template_var 0)),
             template_var 2))))),
    ("List2.map2_snoc_snoc",
     "length ?xs = length ?ys ==>
      List2.map2 ?f (?xs @ [?x]) (?ys @ [?y]) =
      List2.map2 ?f ?xs ?ys @ [?f ?x ?y]",
     template_implication
      ([template_equation
         (template_app (template_hole 12, template_var 4),
          template_app (template_hole 11, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 9, template_var 2),
             template_app
              (template_app (template_hole 8, template_var 4),
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_hole 6))),
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app (template_hole 4, template_var 0),
               template_hole 3))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 9, template_var 2),
                 template_var 4),
               template_var 3)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_var 2, template_var 1),
                 template_var 0)),
             template_hole 0))))),
    ("List2.f_imageE",
     "[| ?x : ?xs `\<^sup>f ?A;
         !!n. [| ?x = ?xs ! n; n : ?A; n < length ?xs |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("List2.set_sublist_list",
     "list_all (%i. i < length ?xs) ?ys ==>
      set (sublist_list ?xs ?ys) =
      {?xs ! i |i. i < length ?xs & i : set ?ys}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, t_empty), template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0)),
         template_app (template_hole 6, t_empty)))),
    ("List2.list_ord_trans_imp",
     "[| trans {(x, y). ?ord x y}; list_ord ?ord ?xs; ?j < length ?xs;
         ?i < ?j |]
      ==> ?ord (?xs ! ?i) (?xs ! ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_hole 5, template_app (template_hole 4, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 1, template_var 2)),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_var 3,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("List2.list_ord_trans",
     "trans {(x, y). ?ord x y} ==>
      list_ord ?ord ?xs =
      (ALL j<length ?xs. ALL i<j. ?ord (?xs ! i) (?xs ! j))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_hole 8, template_app (template_hole 7, t_empty)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 1), template_var 0),
         template_app (template_hole 4, t_empty)))),
    ("List2.append_constant_length_induct",
     "[| !!ys. ?k = 0 | length ys < ?k ==> ?P ys;
         !!xs ys. [| length xs = ?k; ?P ys |] ==> ?P (xs @ ys) |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("List2.map2_eq_conv",
     "length ?xs <= length ?ys ==>
      (List2.map2 ?f ?xs ?ys = List2.map2 ?g ?xs ?ys) =
      (ALL i<length ?xs. ?f (?xs ! i) (?ys ! i) = ?g (?xs ! i) (?ys ! i))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_var 3),
          template_app (template_hole 9, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 6, template_var 0),
               template_var 3),
             template_var 2)),
         template_app (template_hole 5, t_empty)))),
    ("List2.filter_nth",
     "?n < length (filter ?P ?xs) ==>
      filter ?P ?xs ! ?n =
      ?xs !
      (LEAST k.
          k < length ?xs &
          ?n < card {i. i <= k & i < length ?xs & ?P (?xs ! i)})",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 8,
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 5, template_var 0),
           template_app (template_hole 4, t_empty))))),
    ("List2.list_ord_trans_refl_le",
     "[| trans {(x, y). ?ord x y}; refl {(x, y). ?ord x y} |]
      ==> list_ord ?ord ?xs =
          (ALL j<length ?xs. ALL i<=j. ?ord (?xs ! i) (?xs ! j))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_hole 11, template_app (template_hole 10, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_app
               (template_hole 11, template_app (template_hole 10, t_empty)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_app (template_hole 5, t_empty)))),
    ("List2.append_constant_length_induct_aux",
     "[| length ?xs div ?k = ?n; !!ys. ?k = 0 | length ys < ?k ==> ?P ys;
         !!xs ys. [| length xs = ?k; ?P ys |] ==> ?P (xs @ ys) |]
      ==> ?P ?xs",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 3)),
            template_var 2),
          template_var 1),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_var 0, template_var 3)))),
    ("List2.list_ord_distinct_aux",
     "[| irrefl {(a, b). ?ord a b}; trans {(x, y). ?ord x y};
         list_ord ?ord ?xs; ?i < length ?xs; ?j < length ?xs; ?i < ?j |]
      ==> ?xs ! ?i ~= ?xs ! ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_hole 8, template_app (template_hole 7, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_hole 8, template_app (template_hole 7, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("List2.map2_cong",
     "[| ?xs1.0 = ?xs2.0; ?ys1.0 = ?ys2.0; length ?xs2.0 <= length ?ys2.0;
         !!x y. [| x : set ?xs2.0; y : set ?ys2.0 |] ==> ?f x y = ?g x y |]
      ==> List2.map2 ?f ?xs1.0 ?ys1.0 = List2.map2 ?g ?xs2.0 ?ys2.0",
     template_implication
      ([template_equation (template_var 5, template_var 4),
        template_equation (template_var 3, template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 10, template_var 4),
          template_app (template_hole 9, template_var 2)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 5),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 0),
             template_var 4),
           template_var 2)))),
    ("List2.list_ord_trans_refl_le_imp",
     "[| trans {(x, y). ?ord x y}; !!x y. ?ord x y ==> ?ord' x y;
         refl {(x, y). ?ord' x y}; list_ord ?ord ?xs |]
      ==> ALL j<length ?xs. ALL i<=j. ?ord' (?xs ! i) (?xs ! j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 12,
              template_app
               (template_hole 11, template_app (template_hole 10, t_empty)))
            ),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_app
               (template_hole 11, template_app (template_hole 10, t_empty)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 5, t_empty))))]
