   [("Util_NatInf.idiv_0", "0 div ?a = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Util_NatInf.idiv_by_0", "?a div 0 = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Util_NatInf.imod_infinity", "\<infinity> mod ?n = \<infinity>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Util_NatInf.imod_0", "0 mod ?a = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Util_NatInf.imod_by_0", "?a mod 0 = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Util_NatInf.imod_infinity_right", "?n mod \<infinity> = ?n",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Util_NatInf.iadd_0_right_enat", "?a + enat 0 = ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_var 0)),
    ("Util_NatInf.iadd_0_enat", "enat 0 + ?a = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_var 0)),
    ("Util_NatInf.imod_by_0_enat", "?a mod enat 0 = ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_var 0)),
    ("Util_NatInf.imult_0_right_enat", "?a * enat 0 = enat 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Util_NatInf.imult_0_enat", "enat 0 * ?a = enat 0",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Util_NatInf.idiv_by_0_enat", "?a div enat 0 = enat 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)),
       template_app (template_hole 1, template_hole 0))),
    ("Util_NatInf.idiv_0_enat", "enat 0 div ?a = enat 0",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Util_NatInf.imod_0_enat", "enat 0 mod ?a = enat 0",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Util_NatInf.imod_1", "enat ?m mod eSuc 0 = 0",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_hole 0)),
       template_hole 0)),
    ("Util_NatInf.imod_1_enat", "enat ?m mod eSuc (enat 0) = enat 0",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_hole 0))),
       template_app (template_hole 2, template_hole 0))),
    ("Util_NatInf.ineq0_conv_enat", "(?n ~= enat 0) = (enat 0 < ?n)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, template_hole 1))),
       template_app
        (template_app
          (template_hole 0,
           template_app (template_hole 2, template_hole 1)),
         template_var 0))),
    ("Util_NatInf.iless_eSuc0_enat", "(?n < eSuc (enat 0)) = (?n = enat 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_hole 1)))
            )],
       template_equation
        (template_var 0, template_app (template_hole 2, template_hole 1)))),
    ("Util_NatInf.imult_infinity_if",
     "\<infinity> * ?n = (if ?n = 0 then 0 else \<infinity>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_hole 2),
              template_var 0)
            )],
       template_dunno)),
    ("Util_NatInf.imult_infinity_right_if",
     "?n * \<infinity> = (if ?n = 0 then 0 else \<infinity>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_dunno)),
    ("Util_NatInf.idiv_infinity_if",
     "?n div \<infinity> = (if ?n = \<infinity> then \<infinity> else 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 2)
            )],
       template_dunno)),
    ("Util_NatInf.idiv_enat_enat", "enat ?a div enat ?b = enat (?a div ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Util_NatInf.imod_enat_enat", "enat ?a mod enat ?b = enat (?a mod ?b)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Util_NatInf.idiv_infinity_if_enat",
     "?n div \<infinity> =
      (if ?n = \<infinity> then \<infinity> else enat 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_dunno)),
    ("Util_NatInf.idiv_imult2_eq", "?a div (?b * ?c) = ?a div ?b div ?c",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Util_NatInf.imod_idiv_equality", "?m div ?n * ?n + ?m mod ?n = ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Util_NatInf.imult_infinity_if_enat",
     "\<infinity> * ?n = (if ?n = enat 0 then enat 0 else \<infinity>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 0)
            )],
       template_dunno)),
    ("Util_NatInf.imult_infinity_right_if_enat",
     "?n * \<infinity> = (if ?n = enat 0 then enat 0 else \<infinity>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_dunno)),
    ("Util_NatInf.imod_iadd_self2",
     "(?m + enat ?n) mod enat ?n = ?m mod enat ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Util_NatInf.imod_iadd_self1",
     "(enat ?n + ?m) mod enat ?n = ?m mod enat ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0)),
         template_app (template_hole 0, template_var 1)),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Util_NatInf.idiv_imod_equality",
     "?m div ?n * ?n + ?m mod ?n + ?k = ?m + ?k",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1)),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 2), template_var 0))),
    ("Util_NatInf.imult_is_0_enat",
     "(?m * ?n = enat 0) = (?m = enat 0 | ?n = enat 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_app (template_hole 2, template_hole 1)),
       template_dunno)),
    ("Util_NatInf.enat_0_less_mult_iff_enat",
     "(enat 0 < ?m * ?n) = (enat 0 < ?m & enat 0 < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app (template_hole 3, template_hole 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2)),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_hole 2)),
           template_var 0)))),
    ("Util_NatInf.diff_eq_conv_nat",
     "(?x - ?y = ?z) = (if ?y < ?x then ?x = ?y + ?z else ?z = 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 2), template_var 1),
         template_var 0),
       template_dunno)),
    ("Util_NatInf.imult_is_infinity_enat",
     "(?a * ?b = \<infinity>) =
      (?a = \<infinity> & ?b ~= enat 0 | ?b = \<infinity> & ?a ~= enat 0)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_hole 5),
       template_dunno)),
    ("Util_NatInf.idiff_eq_conv",
     "(?x - ?y = ?z) =
      (if ?y < ?x then ?x = ?y + ?z
       else if ?x ~= \<infinity> then ?z = 0 else ?z = \<infinity>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_var 0),
       template_dunno)),
    ("Util_NatInf.idiff_eq_conv_enat",
     "(?x - ?y = ?z) =
      (if ?y < ?x then ?x = ?y + ?z
       else if ?x ~= \<infinity> then ?z = enat 0 else ?z = \<infinity>)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 7, template_var 2), template_var 1),
         template_var 0),
       template_dunno))]
