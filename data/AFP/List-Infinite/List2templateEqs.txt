   [("List2.f_image_empty", "?xs `\<^sup>f {} = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("List2.map_id", "map id ?xs = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("List2.nths_UNIV", "nths ?xs UNIV = ?xs",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("List2.map_list_Nil", "map_list [] ?xs = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("List2.sublist_list_Nil", "sublist_list ?xs [] = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("List2.sublist_list_if_Nil_left", "sublist_list_if [] ?ys = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("List2.sublist_list_if_Nil_right", "sublist_list_if ?xs [] = []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("List2.f_range_eq_set", "f_range ?xs = set ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("List2.list_ord_le_sorted_eq", "list_asc ?xs = sorted ?xs",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("List2.map2_Nil", "List2.map2 ?f [] ?ys = []",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_var 0),
       template_hole 0)),
    ("List2.sublist_list_length",
     "length (sublist_list ?xs ?ys) = length ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("List2.map_list_length", "length (map_list ?fs ?xs) = length ?fs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("List2.drop_eq_tl", "?xs \<up> Suc 0 = tl ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app (template_hole 2, template_hole 1)),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("List2.length_Cons", "length (?x # ?xs) = Suc (length ?xs)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("List2.map2_length", "length (List2.map2 ?f ?xs ?ys) = length ?xs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("List2.f_image_eq_set_nths", "?xs `\<^sup>f ?A = set (nths ?xs ?A)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List2.replicate_Cons_length",
     "length (?x # ?a\<^bsup>?n\<^esup>) = Suc ?n",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app (template_hole 0, template_var 1))),
    ("List2.f_image_eq_set_sublist_list_if",
     "?xs `\<^sup>f set ?ys = set (sublist_list_if ?xs ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("List2.map_list_empty_conv", "(map_list ?fs ?xs = []) = (?fs = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 1, template_hole 0))),
    ("List2.sublist_list_is_Nil_conv",
     "(sublist_list ?xs ?ys = []) = (?ys = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("List2.append_eq_Cons", "[?x] @ ?xs = ?x # ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("List2.length_snoc", "length (?xs @ [?x]) = Suc (length ?xs)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_hole 0, template_app (template_hole 4, template_var 1)))),
    ("List2.set_sublist_list_if_eq_set_sublist",
     "set (sublist_list_if ?xs ?ys) = set (nths ?xs (set ?ys))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("List2.map2_empty_conv", "(List2.map2 ?f ?xs ?ys = []) = (?xs = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0),
         template_hole 2),
       template_equation (template_var 1, template_hole 0))),
    ("List2.map_one", "map ?f [?x] = [?f ?x]",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 1, template_var 0)),
         template_hole 0))),
    ("List2.map_eq_map_list_replicate",
     "map_list ?f\<^bsup>length ?xs\<^esup> ?xs = map ?f ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("List2.map2_map_list_conv",
     "List2.map2 ?f ?xs ?ys = map_list (map ?f ?xs) ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("List2.drop_not_empty_conv",
     "(?xs \<up> ?n ~= []) = (?n < length ?xs)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("List2.map_list_not_empty_conv",
     "(map_list ?fs ?xs ~= []) = (?fs ~= [])",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0),
             template_hole 2)
           ),
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("List2.map_list_take",
     "map_list ?fs ?xs \<down> ?n = map_list (?fs \<down> ?n) ?xs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("List2.zip_takeR", "zip ?xs ?ys \<down> ?n = zip ?xs (?ys \<down> ?n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List2.zip_takeL", "zip ?xs ?ys \<down> ?n = zip (?xs \<down> ?n) ?ys",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("List2.map2_not_empty_conv",
     "(List2.map2 ?f ?xs ?ys ~= []) = (?xs ~= [])",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 2)
           ),
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("List2.replicate_snoc",
     "?x\<^bsup>?n\<^esup> @ [?x] = ?x\<^bsup>Suc ?n\<^esup>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("List2.sublist_list_if_length",
     "length (sublist_list_if ?xs ?ys) =
      length (filter (%i. i < length ?xs) ?ys)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)))),
    ("List2.f_image_Un",
     "?xs `\<^sup>f (?A Un ?B) = ?xs `\<^sup>f ?A Un ?xs `\<^sup>f ?B",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("List2.list_drop_eq_conv",
     "(?xs = ?ys) = (ALL n. ?xs \<up> n = ?ys \<up> n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("List2.list_take_eq_conv",
     "(?xs = ?ys) = (ALL n. ?xs \<down> n = ?ys \<down> n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app (template_hole 1, t_empty))),
    ("List2.nths_empty_conv",
     "(nths ?xs ?I = []) = (ALL i:?I. length ?xs <= i)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 0), t_empty))),
    ("List2.sublist_list_if_is_Nil_conv",
     "(sublist_list_if ?xs ?ys = []) = list_all ((<=) (length ?xs)) ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, t_empty), template_var 0))),
    ("List2.zip_eq_Nil", "(zip ?xs ?ys = []) = (?xs = [] | ?ys = [])",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_hole 5),
       template_dunno)),
    ("List2.sublist_list_if_sublist_list_filter_conv",
     "sublist_list_if ?xs ?ys =
      sublist_list ?xs (filter (%i. i < length ?xs) ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, t_empty), template_var 0)))),
    ("List2.sublist_list_append",
     "sublist_list ?xs (?ys @ ?zs) =
      sublist_list ?xs ?ys @ sublist_list ?xs ?zs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("List2.sublist_list_if_append",
     "sublist_list_if ?xs (?ys @ ?zs) =
      sublist_list_if ?xs ?ys @ sublist_list_if ?xs ?zs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("List2.map_list_drop",
     "map_list ?fs ?xs \<up> ?n = map_list (?fs \<up> ?n) (?xs \<up> ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List2.map_list_take_take",
     "map_list ?fs ?xs \<down> ?n =
      map_list (?fs \<down> ?n) (?xs \<down> ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List2.map2_take",
     "List2.map2 ?f ?xs ?ys \<down> ?n =
      List2.map2 ?f (?xs \<down> ?n) ?ys",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_var 0))),
    ("List2.zip_take",
     "zip ?xs ?ys \<down> ?n = zip (?xs \<down> ?n) (?ys \<down> ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("List2.map_list_Cons_Cons",
     "map_list (?f # ?fs) (?x # ?xs) = ?f ?x # map_list ?fs ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_var 3, template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("List2.map2_replicate",
     "List2.map2 ?f ?x\<^bsup>?n\<^esup> ?y\<^bsup>?n\<^esup> =
      (?f ?x ?y)\<^bsup>?n\<^esup>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_var 3, template_var 1),
           template_var 0)))),
    ("List2.zip_swap", "map2 (%y x. (x, y)) ?ys ?xs = zip ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("List2.list_all_conv",
     "list_all ?P ?xs = (ALL i<length ?xs. ?P (?xs ! i))",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app (template_hole 4, t_empty))),
    ("List2.take_not_empty_conv",
     "(?xs \<down> ?n ~= []) = (0 < ?n & ?xs ~= [])",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0),
             template_hole 3)
           ),
       template_dunno)),
    ("List2.map2_drop",
     "List2.map2 ?f ?xs ?ys \<up> ?n =
      List2.map2 ?f (?xs \<up> ?n) (?ys \<up> ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("List2.map2_take_take",
     "List2.map2 ?f ?xs ?ys \<down> ?n =
      List2.map2 ?f (?xs \<down> ?n) (?ys \<down> ?n)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("List2.zip_not_empty_conv",
     "(zip ?xs ?ys ~= []) = (?xs ~= [] & ?ys ~= [])",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0),
             template_hole 5)
           ),
       template_dunno)),
    ("List2.subset_f_image_iff",
     "(?B <= ?xs `\<^sup>f ?A) = (EX A'<=?A. ?B = ?xs `\<^sup>f A')",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app (template_hole 3, t_empty))),
    ("List2.nths_singleton2",
     "nths ?xs {?y} = (if ?y < length ?xs then [?xs ! ?y] else [])",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app
          (template_app (template_hole 7, template_var 0),
           template_hole 6)),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_app (template_hole 3, template_var 1))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)),
         template_hole 0))),
    ("List2.map2_Cons_Cons",
     "List2.map2 ?f (?x # ?xs) (?y # ?ys) =
      ?f ?x ?y # List2.map2 ?f ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_var 4, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 2),
           template_var 0)))),
    ("List2.f_image_is_empty",
     "(?xs `\<^sup>f ?A = {}) = ({x: ?A. x < length ?xs} = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 8, template_var 1), template_var 0),
         template_hole 7),
       template_equation
        (template_app (template_hole 5, t_empty), template_hole 0))),
    ("List2.list_ord_Cons",
     "list_ord ?ord (?x # ?xs) =
      (?xs = [] | ?ord ?x (hd ?xs) & list_ord ?ord ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("List2.f_image_subset_iff",
     "(?xs `\<^sup>f ?A <= ?B) =
      (ALL n:?A. n < length ?xs --> ?xs ! n : ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 5, template_var 1), t_empty))),
    ("List2.f_image_iff",
     "(?x : ?xs `\<^sup>f ?A) = (EX n:?A. n < length ?xs & ?x = ?xs ! n)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 5, template_var 0), t_empty))),
    ("List2.eq_replicate_conv",
     "(ALL i<length ?xs. ?xs ! i = ?m) =
      (?xs = ?m\<^bsup>length ?xs\<^esup>)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_var 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 1)),
           template_var 0)))),
    ("List2.map_list_Cons_if",
     "map_list ?fs (?x # ?xs) =
      (if ?fs = [] then [] else hd ?fs ?x # map_list (tl ?fs) ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("List2.list_ord_snoc",
     "list_ord ?ord (?xs @ [?x]) =
      (?xs = [] | ?ord (last ?xs) ?x & list_ord ?ord ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_hole 4)))
            )],
       template_dunno)),
    ("List2.f_image_insert_if",
     "?xs `\<^sup>f insert ?n ?A =
      (if ?n < length ?xs then insert (?xs ! ?n) (?xs `\<^sup>f ?A)
       else ?xs `\<^sup>f ?A)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_hole 2, template_var 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 6, template_var 2),
           template_var 0)))),
    ("List2.list_take_drop_eq_conv",
     "(?xs = ?ys) =
      (EX n. ?xs \<down> n = ?ys \<down> n & ?xs \<up> n = ?ys \<up> n)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app (template_hole 3, t_empty))),
    ("List2.list_ord_all_conv",
     "list_ord ?ord ?xs =
      (ALL n<length ?xs - 1. ?ord (?xs ! n) (?xs ! Suc n))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1), template_var 0),
       template_app (template_hole 7, t_empty))),
    ("List2.filter_snoc",
     "filter ?P (?xs @ [?x]) =
      (if ?P ?x then filter ?P ?xs @ [?x] else filter ?P ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1))),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 1)))),
    ("List2.map2_Cons_if",
     "List2.map2 ?f ?xs (?y # ?ys) =
      (if ?xs = [] then []
       else ?f (hd ?xs) ?y # List2.map2 ?f (tl ?xs) ?ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("List2.list_asc_trans",
     "list_asc ?xs = (ALL j<length ?xs. ALL i<j. ?xs ! i <= ?xs ! j)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app (template_hole 5, t_empty))),
    ("List2.list_asc_trans_le",
     "list_asc ?xs = (ALL j<length ?xs. ALL i<=j. ?xs ! i <= ?xs ! j)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app (template_hole 6, t_empty))),
    ("List2.list_desc_trans",
     "list_desc ?xs = (ALL j<length ?xs. ALL i<j. ?xs ! j <= ?xs ! i)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app (template_hole 5, t_empty))),
    ("List2.list_desc_trans_le",
     "list_desc ?xs = (ALL j<length ?xs. ALL i<=j. ?xs ! j <= ?xs ! i)",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app (template_hole 6, t_empty))),
    ("List2.list_strict_asc_trans",
     "list_strict_asc ?xs = (ALL j<length ?xs. ALL i<j. ?xs ! i < ?xs ! j)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app (template_hole 5, t_empty))),
    ("List2.list_strict_desc_trans",
     "list_strict_desc ?xs =
      (ALL j<length ?xs. ALL i<j. ?xs ! j < ?xs ! i)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app (template_hole 5, t_empty))),
    ("List2.sublist_list_if_snoc",
     "sublist_list_if ?xs (?ys @ [?y]) =
      sublist_list_if ?xs ?ys @
      (if ?y < length ?xs then [?xs ! ?y] else [])",
     template_equation
      (template_app
        (template_app (template_hole 10, template_var 2),
         template_app
          (template_app (template_hole 9, template_var 1),
           template_app
            (template_app (template_hole 8, template_var 0),
             template_hole 7))),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 10, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app (template_hole 3, template_var 2))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               template_hole 0)),
           template_hole 0)))),
    ("List2.set_sublist_list_if",
     "set (sublist_list_if ?xs ?ys) =
      {?xs ! i |i. i < length ?xs & i : set ?ys}",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app (template_hole 9, template_var 1), template_var 0)),
       template_app (template_hole 8, t_empty))),
    ("List2.f_image_Collect",
     "?xs `\<^sup>f {n. ?P n} = {?xs ! n |n. ?P n & n < length ?xs}",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app (template_hole 7, t_empty)),
       template_app (template_hole 6, t_empty))),
    ("List2.list_eq_iff",
     "(?xs = ?ys) =
      (length ?xs = length ?ys & (ALL i<length ?xs. ?xs ! i = ?ys ! i))",
     template_bimplication
      (template_equation (template_var 1, template_var 0), template_dunno)),
    ("List2.list_ord_append",
     "list_ord ?ord (?xs @ ?ys) =
      (list_ord ?ord ?xs &
       (?ys = [] |
        list_ord ?ord ?ys & (?xs = [] | ?ord (last ?xs) (hd ?ys))))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_dunno))]
