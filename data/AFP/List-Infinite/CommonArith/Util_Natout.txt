Loading theory "Draft.Util_Nat" (required by "Draft.Util_NatMoreTemplates")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Util_NatMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Util_NatMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Util_NatMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.124s elapsed time, 0.511s cpu time, 0.041s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Util_NatMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "Draft.Util_Nat"
### 0.191s elapsed time, 0.779s cpu time, 0.041s GC time
?m + Suc ?n = Suc (?m + ?n)
?m + 1 = Suc ?m
?b - ?a - Suc 0 = ?b - Suc ?a
(?k * ?m = ?k * ?n) = (?m = ?n | ?k = 0)
(?m * ?k = ?n * ?k) = (?m = ?n | ?k = 0)
0 < ?k ==> (?k * ?m = ?k * ?n) = (?m = ?n)
0 < ?k ==> (?m * ?k = ?n * ?k) = (?m = ?n)
?i + ?j < ?k ==> ?i < ?k
?i + ?j < ?k ==> ?j < ?k
(0 < ?n - ?m) = (?m < ?n)
((0::?'a) < ?b - ?a) = (?a < ?b)
((0::?'a) <= ?b - ?a) = (?a <= ?b)
?a <= ?b ==> ?c <= ?b + ?c - ?a
?k <= ?n ==> ?m + ?k - ?n <= ?m
?k < ?n ==> ?m < ?n + ?m - ?k
[| ?k < ?n; 0 < ?m |] ==> ?m + ?k - ?n < ?m
(?j - ?k <= ?i) = (?j <= ?i + ?k)
?k <= ?j ==> (?i <= ?j - ?k) = (?i + ?k <= ?j)
(?i < ?j - ?k) = (?i + ?k < ?j)
?j - ?k < ?i ==> ?j < ?i + ?k
0 < ?i ==> (?j - ?k < ?i) = (?j < ?i + ?k)
[| ?i <= ?k; ?j <= ?k |] ==> (?k - ?j <= ?i) = (?k - ?i <= ?j)
[| 0 < ?i; ?k - ?i < ?j |] ==> ?k - ?j < ?i
[| 0 < ?i; 0 < ?j |] ==> (?k - ?j < ?i) = (?k - ?i < ?j)
?i < ?j - ?m ==> ?i < ?j
?i <= ?j - ?m ==> ?i <= ?j
[| ?i < ?j - ?m; ?n <= ?m |] ==> ?i < ?j - ?n
[| ?i <= ?j - ?m; ?n <= ?m |] ==> ?i <= ?j - ?n
?j < ?k ==> ?j - ?n < ?k
?j <= ?k ==> ?j - ?n <= ?k
(?m < Suc ?n) = (?m <= ?n)
0 < ?n ==> (?m < ?n) = (?m <= ?n - Suc 0)
?m < ?n ==> ?m <= ?n - Suc 0
[| 0 < ?n; ?m <= ?n - Suc 0 |] ==> ?m < ?n
(Suc ?m <= ?n) = (?m < ?n)
0 < ?m ==> (?m - Suc 0 < ?n) = (?m <= ?n)
?m - Suc 0 < ?n ==> ?m <= ?n
[| 0 < ?m; ?m <= ?n |] ==> ?m - Suc 0 < ?n
[| 0 < ?n; ?n + ?i - ?j = ?n |] ==> ?i = ?j
?n < ?m ==> ?n + (?m - Suc ?n) = ?m - Suc 0
(?k + ?m < ?k + ?n) = (?m < ?n)
(?k + ?m <= ?k + ?n) = (?m <= ?n)
(?b + ?a = ?c + ?a) = (?b = ?c)
(?a + ?b = ?a + ?c) = (?b = ?c)
[| ?k <= ?m; ?k <= ?n |] ==> (?m - ?k = ?n - ?k) = (?m = ?n)
[| ?k <= ?m; ?k <= ?n |] ==> (?m - ?k < ?n - ?k) = (?m < ?n)
[| ?k <= ?m; ?k <= ?n |] ==> (?m - ?k <= ?n - ?k) = (?m <= ?n)
?k - ?m < ?k - ?n ==> ?n < ?m
?n - ?k < ?m - ?k ==> ?n < ?m
[| ?k - ?m <= ?k - ?n; ?m < ?k |] ==> ?n <= ?m
[| ?k - ?m <= ?k - ?n; ?n <= ?k |] ==> ?n <= ?m
[| ?m - ?k <= ?n - ?k; ?k < ?m |] ==> ?m <= ?n
[| ?m - ?k <= ?n - ?k; ?k <= ?n |] ==> ?m <= ?n
[| ?k <= ?m; ?k <= ?n |] ==> (?m - ?k = ?n - ?k) = (?m = ?n)
[| ?m <= ?k; ?n <= ?k |] ==> (?k - ?m = ?k - ?n) = (?m = ?n)
[| ?k - ?m = ?k - ?n; ?m < ?k |] ==> ?m = ?n
[| ?k - ?m = ?k - ?n; ?n < ?k |] ==> ?m = ?n
[| ?m - ?k = ?n - ?k; ?k < ?m |] ==> ?m = ?n
[| ?m - ?k = ?n - ?k; ?k < ?n |] ==> ?m = ?n
(?b + ?a = ?c + ?a) = (?b = ?c)
(?a + ?b = ?a + ?c) = (?b = ?c)
?m <= ?n ==> ?m - ?l <= ?n - ?l
?m = ?n ==> ?m - ?k = ?n - ?k
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.240s elapsed time, 0.928s cpu time, 0.041s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Util_NatMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.334s elapsed time, 1.224s cpu time, 0.122s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Util_NatMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
### theory "HOL-Library.BigO"
### 0.761s elapsed time, 2.331s cpu time, 0.297s GC time
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 0.783s elapsed time, 2.273s cpu time, 0.217s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.821s elapsed time, 4.207s cpu time, 0.828s GC time
Loading theory "Draft.Templates" (required by "Draft.Util_NatMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.063s elapsed time, 0.115s cpu time, 0.053s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Util_NatMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.442s elapsed time, 0.447s cpu time, 0.000s GC time
Loading theory "Draft.Util_NatMoreTemplates"
val templateLemmas =
   [("Util_Nat.add_1_Suc_conv", "?m + 1 = Suc ?m",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Util_Nat.gr_implies_gr0", "?m < ?n ==> 0 < ?n",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation (less_than, template_hole 0, template_var 0))),
    ("Util_Nat.ord_zero_less_diff", "((0::?'a) < ?b - ?a) = (?a < ?b)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 0), template_var 1))),
    ("Util_Nat.ord_zero_le_diff", "((0::?'a) <= ?b - ?a) = (?a <= ?b)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 0), template_var 1))),
    ("Util_Nat.less_add1", "0 < ?j ==> ?i < ?i + ?j",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1)],
       template_inequation
        (less_than, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Util_Nat.less_add2", "0 < ?j ==> ?i < ?j + ?i",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1)],
       template_inequation
        (less_than, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Util_Nat.gr0_imp_self_le_mult2", "0 < ?k ==> ?m <= ?k * ?m",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Util_Nat.gr0_imp_self_le_mult1", "0 < ?k ==> ?m <= ?m * ?k",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1)],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Util_Nat.sgn_mono", "?a <= ?b ==> sgn ?a <= sgn ?b",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Util_Nat.le_imp_diff_le", "?j <= ?k ==> ?j - ?n <= ?k",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("Util_Nat.less_diff_imp_less", "?i < ?j - ?m ==> ?i < ?j",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_inequation (less_than, template_var 2, template_var 1))),
    ("Util_Nat.add_lessD2", "?i + ?j < ?k ==> ?j < ?k",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_var 0)],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Util_Nat.le_diff_imp_le", "?i <= ?j - ?m ==> ?i <= ?j",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_inequation (less_equals, template_var 2, template_var 1))),
    ("Util_Nat.sub_Suc0_sub_Suc_conv", "?b - ?a - Suc 0 = ?b - Suc ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_hole 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Util_Nat.Suc_less_pred_conv", "(Suc ?m < ?n) = (?m < ?n - Suc 0)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 2, template_hole 0))))),
    ("Util_Nat.less_imp_le_pred", "?m < ?n ==> ?m <= ?n - Suc 0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))))),
    ("Util_Nat.sgn_abs", "?x ~= (0::?'a) ==> \<bar>sgn ?x\<bar> = (1::?'a)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Util_Nat.pred_less_imp_le", "?m - Suc 0 < ?n ==> ?m <= ?n",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app (template_hole 2, template_hole 1)),
          template_var 0)],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("Util_Nat.sgn_mult_abs",
     "\<bar>?x\<bar> * \<bar>sgn ?a\<bar> = \<bar>?x * sgn ?a\<bar>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Util_Nat.mult_pred_right", "?m * (?n - Suc 0) = ?m * ?n - ?m",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_var 1))),
    ("Util_Nat.mult_pred", "(?m - Suc 0) * ?n = ?m * ?n - ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_hole 0))),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Util_Nat.eq_imp_diff_eq", "?m = ?n ==> ?m - ?k = ?n - ?k",
     template_implication
      ([template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Util_Nat.add_less_mono2", "?i < ?j ==> ?k + ?i < ?k + ?j",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Util_Nat.less_add_diff", "?k < ?n ==> ?m < ?n + ?m - ?k",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than, template_var 0,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("Util_Nat.add_le_mono2", "?i <= ?j ==> ?k + ?i <= ?k + ?j",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Util_Nat.add_diff_le", "?k <= ?n ==> ?m + ?k - ?n <= ?m",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Util_Nat.Suc_le_imp_le_pred", "Suc ?m <= ?n ==> ?m <= ?n - Suc 0",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 2, template_hole 0))))),
    ("Util_Nat.diff_less_imp_less_add", "?j - ?k < ?i ==> ?j < ?i + ?k",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_inequation
        (less_than, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Util_Nat.add_le_imp_le_diff1", "?i + ?k <= ?j ==> ?i <= ?j - ?k",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Util_Nat.add_le_imp_le_diff2", "?k + ?i <= ?j ==> ?i <= ?j - ?k",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Util_Nat.nat_diff_left_cancel_less", "?k - ?m < ?k - ?n ==> ?n < ?m",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Util_Nat.nat_diff_right_cancel_less", "?n - ?k < ?m - ?k ==> ?n < ?m",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Util_Nat.nat_leSuc0_conv", "(?n <= Suc 0) = (?n = 0 | ?n = Suc 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_hole 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 3, template_hole 2)))
           ))),
    ("Util_Nat.less_imp_Suc_mult_le", "?m < ?n ==> Suc ?m * ?k <= ?n * ?k",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Util_Nat.greater_le_neq_conv", "(?a < ?n) = (ALL x<=?a. ?n ~= x)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Util_Nat.less_ge_neq_conv", "(?n < ?a) = (ALL x>=?a. ?n ~= x)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Util_Nat.ge_less_neq_conv", "(?a <= ?n) = (ALL x<?a. ?n ~= x)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Util_Nat.le_greater_neq_conv", "(?n <= ?a) = (ALL x>?a. ?n ~= x)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Util_Nat.nat_lessSucSuc0_conv",
     "(?n < Suc (Suc 0)) = (?n = 0 | ?n = Suc 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_hole 3,
                template_app (template_hole 3, template_hole 2)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_hole 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 3, template_hole 2)))
           ))),
    ("Util_Nat.Suc_diff_Suc", "?m < ?n ==> Suc (?n - Suc ?m) = ?n - ?m",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Util_Nat.abs_imp_sgn_abs",
     "\<bar>?a\<bar> = \<bar>?b\<bar> ==>
      \<bar>sgn ?a\<bar> = \<bar>sgn ?b\<bar>",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Util_Nat.nat_grSuc0_conv", "(Suc 0 < ?n) = (?n ~= 0 & ?n ~= Suc 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_hole 4, template_hole 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_hole 3))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 4, template_hole 3))))
           ))),
    ("Util_Nat.pred_less_eq_le",
     "0 < ?m ==> (?m - Suc 0 < ?n) = (?m <= ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 1, template_hole 4))),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Util_Nat.less_eq_le_pred",
     "0 < ?n ==> (?m < ?n) = (?m <= ?n - Suc 0)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_hole 4)))))),
    ("Util_Nat.diff_less_self", "[| 0 < ?i; 0 < ?j |] ==> ?i - ?j < ?i",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Util_Nat.leq_pos_imp_abs_leq",
     "[| (0::?'a) <= ?a; ?a <= ?b |] ==> \<bar>?a\<bar> <= \<bar>?b\<bar>",
     template_implication
      ([template_inequation (less_equals, template_hole 1, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Util_Nat.leq_neg_imp_abs_geq",
     "[| ?a <= (0::?'a); ?b <= ?a |] ==> \<bar>?a\<bar> <= \<bar>?b\<bar>",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_hole 1),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Util_Nat.nat_geSucSuc0_conv",
     "(Suc (Suc 0) <= ?n) = (?n ~= 0 & ?n ~= Suc 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 4, template_hole 3))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_hole 3))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_app (template_hole 4, template_hole 3))))
           ))),
    ("Util_Nat.diff_less_conv",
     "0 < ?i ==> (?j - ?k < ?i) = (?j < ?i + ?k)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Util_Nat.mult_cancel1_gr0",
     "0 < ?k ==> (?k * ?m = ?k * ?n) = (?m = ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Util_Nat.mult_cancel2_gr0",
     "0 < ?k ==> (?m * ?k = ?n * ?k) = (?m = ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_equation (template_var 1, template_var 0)))),
    ("Util_Nat.mult_le_cancel1_gr0",
     "0 < ?k ==> (?k * ?m <= ?k * ?n) = (?m <= ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Util_Nat.mult_le_cancel2_gr0",
     "0 < ?k ==> (?m * ?k <= ?n * ?k) = (?m <= ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Util_Nat.Suc_le_pred_conv",
     "0 < ?n ==> (Suc ?m <= ?n) = (?m <= ?n - Suc 0)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 1, template_hole 4)))))),
    ("Util_Nat.diff_add_inverse_Suc",
     "?n < ?m ==> ?n + (?m - Suc ?n) = ?m - Suc 0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))))),
    ("Util_Nat.diff_diff_right",
     "?k <= ?j ==> ?i - (?j - ?k) = ?i + ?k - ?j",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1)))),
    ("Util_Nat.le_imp_pred_less",
     "[| 0 < ?m; ?m <= ?n |] ==> ?m - Suc 0 < ?n",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_hole 3)),
         template_var 0))),
    ("Util_Nat.le_pred_imp_less",
     "[| 0 < ?n; ?m <= ?n - Suc 0 |] ==> ?m < ?n",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 1),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_app (template_hole 0, template_hole 3)))],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Util_Nat.diff_less_imp_swap",
     "[| 0 < ?i; ?k - ?i < ?j |] ==> ?k - ?j < ?i",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 2),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 0, template_var 1), template_var 2),
          template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("Util_Nat.diff_cancel_imp_eq",
     "[| 0 < ?n; ?n + ?i - ?j = ?n |] ==> ?i = ?j",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2),
        template_equation
         (template_app
           (template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1)),
            template_var 0),
          template_var 2)],
       template_equation (template_var 1, template_var 0))),
    ("Util_Nat.add_diff_less",
     "[| ?k < ?n; 0 < ?m |] ==> ?m + ?k - ?n < ?m",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1),
         template_var 0))),
    ("Util_Nat.pred_Suc_mono",
     "[| ?m < Suc ?n; 0 < ?m |] ==> ?m - Suc 0 < ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 0)),
        template_inequation (less_than, template_hole 1, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 2, template_hole 1)),
         template_var 0))),
    ("Util_Nat.less_diff_le_imp_less",
     "[| ?i < ?j - ?m; ?n <= ?m |] ==> ?i < ?j - ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_than, template_var 3,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Util_Nat.le_diff_le_imp_le",
     "[| ?i <= ?j - ?m; ?n <= ?m |] ==> ?i <= ?j - ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Util_Nat.nat_diff_left_cancel_eq1",
     "[| ?k - ?m = ?k - ?n; ?m < ?k |] ==> ?m = ?n",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 0)),
        template_inequation (less_than, template_var 1, template_var 2)],
       template_equation (template_var 1, template_var 0))),
    ("Util_Nat.nat_diff_left_cancel_eq2",
     "[| ?k - ?m = ?k - ?n; ?n < ?k |] ==> ?m = ?n",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 0)),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation (template_var 1, template_var 0))),
    ("Util_Nat.nat_diff_right_cancel_eq1",
     "[| ?m - ?k = ?n - ?k; ?k < ?m |] ==> ?m = ?n",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1)),
        template_inequation (less_than, template_var 1, template_var 2)],
       template_equation (template_var 2, template_var 0))),
    ("Util_Nat.nat_diff_right_cancel_eq2",
     "[| ?m - ?k = ?n - ?k; ?k < ?n |] ==> ?m = ?n",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1)),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation (template_var 2, template_var 0))),
    ("Util_Nat.nat_diff_left_cancel_le1",
     "[| ?k - ?m <= ?k - ?n; ?m < ?k |] ==> ?n <= ?m",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 0)),
        template_inequation (less_than, template_var 1, template_var 2)],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Util_Nat.nat_diff_left_cancel_le2",
     "[| ?k - ?m <= ?k - ?n; ?n <= ?k |] ==> ?n <= ?m",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0)),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Util_Nat.nat_diff_right_cancel_le1",
     "[| ?m - ?k <= ?n - ?k; ?k < ?m |] ==> ?m <= ?n",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1)),
        template_inequation (less_than, template_var 1, template_var 2)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Util_Nat.nat_diff_right_cancel_le2",
     "[| ?m - ?k <= ?n - ?k; ?k <= ?n |] ==> ?m <= ?n",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Util_Nat.pred_mono",
     "[| ?m < ?n; 0 < ?m |] ==> ?m - Suc 0 < ?n - Suc 0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0),
        template_inequation (less_than, template_hole 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_hole 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_hole 2))))),
    ("Util_Nat.abs_range",
     "[| (0::?'a) <= ?a; - ?a <= ?x; ?x <= ?a |] ==> \<bar>?x\<bar> <= ?a",
     template_implication
      ([template_inequation (less_equals, template_hole 2, template_var 1),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_var 0),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("Util_Nat.diff_less_swap",
     "[| 0 < ?i; 0 < ?j |] ==> (?k - ?j < ?i) = (?k - ?i < ?j)",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_inequation (less_than, template_hole 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1)))),
    ("Util_Nat.less_imp_Suc_mult_pred_less",
     "[| ?m < ?n; 0 < ?k |] ==> Suc ?m * ?k - Suc 0 < ?n * ?k",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_hole 3, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 0)),
           template_app (template_hole 0, template_hole 3)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Util_Nat.le_diff_swap",
     "[| ?i <= ?k; ?j <= ?k |] ==> (?k - ?j <= ?i) = (?k - ?i <= ?j)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Util_Nat.eq_diff_left_iff",
     "[| ?m <= ?k; ?n <= ?k |] ==> (?k - ?m = ?k - ?n) = (?m = ?n)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_equation (template_var 2, template_var 0))))]:
   (string * thm * template) list
### theory "Draft.Util_NatMoreTemplates"
### 0.286s elapsed time, 0.420s cpu time, 0.056s GC time
val it = (): unit
