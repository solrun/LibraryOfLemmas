   [("Util_Set.empty_imp_not_in", "?x ~: {}",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)
             )
         )),
    ("Util_Set.conj_disj_absorb", "(?P & ?Q | ?Q) = ?Q",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_var 0)),
    ("Util_Set.comp2_conv", "?f1.0 o ?f2.0 = (%x. ?f1.0 (?f2.0 x))",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       t_empty)),
    ("Util_Set.in_imp_not_empty", "?x : ?A ==> ?A ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Util_Set.not_ex_in_conv", "(\<nexists>x. x : ?A) = (?A = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4, template_app (template_hole 3, t_empty))
            )],
       template_equation (template_var 0, template_hole 0))),
    ("Util_Set.Collect_is_subset", "{x: ?A. ?P x} <= ?A",
     template_inequation
      (less_equals, template_app (template_hole 2, t_empty),
       template_var 1)),
    ("Util_Set.comp3_conv",
     "?f1.0 o ?f2.0 o ?f3.0 = (%x. ?f1.0 (?f2.0 (?f3.0 x)))",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       t_empty)),
    ("Util_Set.mem_Collect_eq_not", "(?a ~: {x. ?P x}) = (~ ?P ?a)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, t_empty))),
       template_app
        (template_hole 2, template_app (template_var 0, template_var 1)))),
    ("Util_Set.all_imp_ball", "ALL x. ?P x ==> ALL x:?A. ?P x",
     template_implication
      ([template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), t_empty)
           ))),
    ("Util_Set.not_empty_imp_ex", "?A ~= {} ==> EX x. x : ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Util_Set.ex_imp_not_empty", "EX x. x : ?A ==> ?A ~= {}",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Util_Set.bex_imp_ex", "EX x:?A. ?P x ==> EX x. ?P x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1), t_empty)
            )],
       template_predicate (template_app (template_hole 0, t_empty)))),
    ("Util_Set.Collect_not_imp_not_in", "~ ?P ?a ==> ?a ~: {x. ?P x}",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_var 1, template_var 0))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, t_empty))
               )
           ))),
    ("Util_Set.Collect_not_in_imp_not", "?a ~: {x. ?P x} ==> ~ ?P ?a",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_app (template_hole 0, t_empty))
                )
            )],
       template_negation
        (
           template_predicate
            (template_app (template_var 0, template_var 1))
           ))),
    ("Util_Set.Let_swap", "?f (Let ?a ?g) = (let x = ?a in ?f (?g x))",
     template_equation
      (template_app
        (template_var 2,
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Util_Set.disj_eq_distribL",
     "((?a | ?b) = (?a | ?c)) = (?a | ?b = ?c)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("Util_Set.disj_eq_distribR",
     "((?a | ?c) = (?b | ?c)) = (?a = ?b | ?c)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Util_Set.if_P_both",
     "[| ?Q ?x; ?Q ?y |] ==> ?Q (if ?P then ?x else ?y)",
     template_implication
      ([template_predicate (template_app (template_var 3, template_var 2)),
        template_predicate (template_app (template_var 3, template_var 1))],
       template_predicate
        (
           template_app
            (template_var 3,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1))
           ))),
    ("Util_Set.if_P'", "[| ?P; ?x = ?z |] ==> (if ?P then ?x else ?y) = ?z",
     template_implication
      ([template_predicate (template_var 3),
        template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("Util_Set.if_not_P'",
     "[| ~ ?P; ?y = ?z |] ==> (if ?P then ?x else ?y) = ?z",
     template_implication
      ([template_negation (template_predicate (template_var 3)),
        template_equation (template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0),
           template_var 2),
         template_var 1))),
    ("Util_Set.if_P_both_in_set",
     "[| ?x : ?s; ?y : ?s |] ==> (if ?P then ?x else ?y) : ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3),
                 template_var 1)),
             template_var 2)
           ))),
    ("Util_Set.ball_subset_imp_ball",
     "[| ALL x:?B. ?P x; ?A <= ?B |] ==> ALL x:?A. ?P x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2), t_empty)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)
           ))),
    ("Util_Set.bex_subset_imp_bex",
     "[| EX x:?A. ?P x; ?A <= ?B |] ==> EX x:?B. ?P x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2), t_empty)
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), t_empty)
           ))),
    ("Util_Set.all_eqI",
     "(!!x. ?P x = ?Q x) ==> (ALL x. ?P x) = (ALL x. ?Q x)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app (template_hole 0, t_empty),
         template_app (template_hole 0, t_empty)))),
    ("Util_Set.ex_eqI",
     "(!!x. ?P x = ?Q x) ==> (EX x. ?P x) = (EX x. ?Q x)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app (template_hole 0, t_empty),
         template_app (template_hole 0, t_empty)))),
    ("Util_Set.all_cong",
     "ALL x. ?f x = ?g x ==> (ALL x. ?P (?f x)) = (ALL x. ?P (?g x))",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 2, t_empty)))),
    ("Util_Set.ex_cong",
     "ALL x. ?f x = ?g x ==> (EX x. ?P (?f x)) = (EX x. ?P (?g x))",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app (template_hole 0, t_empty),
         template_app (template_hole 0, t_empty)))),
    ("Util_Set.ball_all_cong",
     "ALL x. ?f x = ?g x ==> (ALL x:?I. ?P (?f x)) = (ALL x:?I. ?P (?g x))",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), t_empty),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Util_Set.bex_all_cong",
     "ALL x. ?f x = ?g x ==> (EX x:?I. ?P (?f x)) = (EX x:?I. ?P (?g x))",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), t_empty),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("Util_Set.ball_cong2",
     "[| ?I <= ?A; ALL x:?A. ?f x = ?g x |]
      ==> (ALL x:?I. ?P (?f x)) = (ALL x:?I. ?P (?g x))",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 4), t_empty),
         template_app
          (template_app (template_hole 2, template_var 4), t_empty)))),
    ("Util_Set.bex_cong2",
     "[| ?I <= ?A; ALL x:?I. ?f x = ?g x |]
      ==> (EX x:?I. ?P (?f x)) = (EX x:?I. ?P (?g x))",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 4), t_empty),
         template_app
          (template_app (template_hole 0, template_var 4), t_empty)))),
    ("Util_Set.all_imp_eqI",
     "[| ?P = ?P'; !!x. ?P x ==> ?Q x = ?Q' x |]
      ==> (ALL x. ?P x --> ?Q x) = (ALL x. ?P' x --> ?Q' x)",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 1, t_empty)))),
    ("Util_Set.ex_imp_eqI",
     "[| ?P = ?P'; !!x. ?P x ==> ?Q x = ?Q' x |]
      ==> (EX x. ?P x & ?Q x) = (EX x. ?P' x & ?Q' x)",
     template_implication
      ([template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 1, t_empty))))]
