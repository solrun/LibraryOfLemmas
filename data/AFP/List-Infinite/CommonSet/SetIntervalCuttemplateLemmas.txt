   [("SetIntervalCut.set_restriction_fun_is_set_restriction",
     "set_restriction (set_restriction_fun ?P)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("SetIntervalCut.nat_cut_le_finite", "finite (?I \<down>\<le> ?t)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("SetIntervalCut.nat_cut_less_finite", "finite (?I \<down>< ?t)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("SetIntervalCut.cut_ge_empty", "{} \<down>\<ge> ?t = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("SetIntervalCut.cut_greater_empty", "{} \<down>> ?t = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("SetIntervalCut.cut_le_empty", "{} \<down>\<le> ?t = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("SetIntervalCut.cut_less_empty", "{} \<down>< ?t = {}",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("SetIntervalCut.cut_ge_0_all", "?I \<down>\<ge> 0 = ?I",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("SetIntervalCut.cut_less_0_empty", "?I \<down>< 0 = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("SetIntervalCut.cut_ge_subset", "?I \<down>\<ge> ?t <= ?I",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 1)),
    ("SetIntervalCut.cut_greater_subset", "?I \<down>> ?t <= ?I",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 1)),
    ("SetIntervalCut.cut_le_subset", "?I \<down>\<le> ?t <= ?I",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 1)),
    ("SetIntervalCut.cut_less_subset", "?I \<down>< ?t <= ?I",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 1)),
    ("SetIntervalCut.i_cut_ge_set_restriction",
     "set_restriction (%I. I \<down>\<ge> ?t)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("SetIntervalCut.i_cut_greater_set_restriction",
     "set_restriction (%I. I \<down>> ?t)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("SetIntervalCut.i_cut_le_set_restriction",
     "set_restriction (%I. I \<down>\<le> ?t)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("SetIntervalCut.i_cut_less_set_restriction",
     "set_restriction (%I. I \<down>< ?t)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("SetIntervalCut.UNIV_cut_ge", "UNIV \<down>\<ge> ?t = {?t..}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SetIntervalCut.UNIV_cut_greater", "UNIV \<down>> ?t = {?t<..}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SetIntervalCut.UNIV_cut_le", "UNIV \<down>\<le> ?t = {..?t}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SetIntervalCut.UNIV_cut_less", "UNIV \<down>< ?t = {..<?t}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SetIntervalCut.nat_cut_ge_finite_iff",
     "finite (?I \<down>\<ge> ?t) = finite ?I",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("SetIntervalCut.nat_cut_greater_finite_iff",
     "finite (?I \<down>> ?t) = finite ?I",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("SetIntervalCut.nat_cut_ge_card",
     "card (?I \<down>\<ge> ?t) <= card ?I",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("SetIntervalCut.nat_cut_greater_card",
     "card (?I \<down>> ?t) <= card ?I",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("SetIntervalCut.imirror_finite", "finite ?I ==> finite (imirror ?I)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("SetIntervalCut.cut_ge_Diff_conv", "?I \<down>\<ge> ?t = ?I - {..<?t}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.cut_ge_Int_conv", "?I \<down>\<ge> ?t = ?I Int {?t..}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.cut_greater_Diff_conv", "?I \<down>> ?t = ?I - {..?t}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.cut_greater_Int_conv",
     "?I \<down>> ?t = ?I Int {?t<..}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.cut_le_Diff_conv", "?I \<down>\<le> ?t = ?I - {?t<..}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.cut_le_Int_conv", "?I \<down>\<le> ?t = ?I Int {..?t}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.cut_less_Diff_conv", "?I \<down>< ?t = ?I - {?t..}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.cut_less_Int_conv", "?I \<down>< ?t = ?I Int {..<?t}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.atMost_cut_ge", "{..?n} \<down>\<ge> ?t = {?t..?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("SetIntervalCut.lessThan_cut_ge",
     "{..<?n} \<down>\<ge> ?t = {?t..<?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("SetIntervalCut.atMost_cut_greager", "{..?n} \<down>> ?t = {?t<..?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("SetIntervalCut.lessThan_cut_greater",
     "{..<?n} \<down>> ?t = {?t<..<?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("SetIntervalCut.atLeast_cut_le", "{?n..} \<down>\<le> ?t = {?n..?t}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetIntervalCut.greaterThan_cut_le",
     "{?n<..} \<down>\<le> ?t = {?n<..?t}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetIntervalCut.atLeast_cut_less", "{?n..} \<down>< ?t = {?n..<?t}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetIntervalCut.greaterThan_cut_less",
     "{?n<..} \<down>< ?t = {?n<..<?t}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetIntervalCut.nat_cut_le_less_conv",
     "?I \<down>\<le> ?t = ?I \<down>< Suc ?t",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.nat_cut_ge_greater_conv",
     "?I \<down>\<ge> Suc ?t = ?I \<down>> ?t",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetIntervalCut.imirror_singleton", "imirror {?a} = {?a}",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("SetIntervalCut.imirror_is_empty", "(imirror ?I = {}) = (?I = {})",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("SetIntervalCut.cut_ge_finite",
     "finite ?I ==> finite (?I \<down>\<ge> ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SetIntervalCut.cut_greater_finite",
     "finite ?I ==> finite (?I \<down>> ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SetIntervalCut.cut_le_finite",
     "finite ?I ==> finite (?I \<down>\<le> ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SetIntervalCut.cut_less_finite",
     "finite ?I ==> finite (?I \<down>< ?t)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SetIntervalCut.set_restriction_empty",
     "set_restriction ?f ==> ?f {} = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app (template_var 0, template_hole 0), template_hole 0))),
    ("SetIntervalCut.set_restriction_subset",
     "set_restriction ?f ==> ?f ?A <= ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_inequation
        (less_equals, template_app (template_var 1, template_var 0),
         template_var 0))),
    ("SetIntervalCut.nat_mirror_commute",
     "nat_mirror ?n ?l ?r = nat_mirror ?n ?r ?l",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("SetIntervalCut.cut_ge_absorb",
     "?I \<down>\<ge> ?t \<down>\<ge> ?t = ?I \<down>\<ge> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetIntervalCut.cut_greater_absorb",
     "?I \<down>> ?t \<down>> ?t = ?I \<down>> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetIntervalCut.cut_le_absorb",
     "?I \<down>\<le> ?t \<down>\<le> ?t = ?I \<down>\<le> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetIntervalCut.cut_less_absorb",
     "?I \<down>< ?t \<down>< ?t = ?I \<down>< ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetIntervalCut.imirror_eq_mirror_elem_image",
     "imirror ?I = (%x. mirror_elem x ?I) ` ?I",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, t_empty), template_var 0))),
    ("SetIntervalCut.imirror_eq_imirror_bounds",
     "imirror ?I = imirror_bounds ?I (iMin ?I) (Max ?I)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.imirror_imirror_ident",
     "finite ?I ==> imirror (imirror ?I) = ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_hole 0, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("SetIntervalCut.nat_mirror_inj_on",
     "inj_on (%x. nat_mirror x ?l ?r) {..?l + ?r}",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("SetIntervalCut.cut_ge_eq_set_restriction_fun'",
     "(%I. I \<down>\<ge> ?t) = set_restriction_fun ((<=) ?t)",
     template_equation (t_empty, template_app (template_hole 1, t_empty))),
    ("SetIntervalCut.cut_greater_eq_set_restriction_fun'",
     "(%I. I \<down>> ?t) = set_restriction_fun ((<) ?t)",
     template_equation (t_empty, template_app (template_hole 1, t_empty))),
    ("SetIntervalCut.cut_le_eq_set_restriction_fun'",
     "(%I. I \<down>\<le> ?t) = set_restriction_fun (%x. x <= ?t)",
     template_equation (t_empty, template_app (template_hole 1, t_empty))),
    ("SetIntervalCut.cut_less_eq_set_restriction_fun'",
     "(%I. I \<down>< ?t) = set_restriction_fun (%x. x < ?t)",
     template_equation (t_empty, template_app (template_hole 1, t_empty))),
    ("SetIntervalCut.cut_ge_eq_set_restriction_fun",
     "?I \<down>\<ge> ?t = set_restriction_fun ((<=) ?t) ?I",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("SetIntervalCut.cut_greater_eq_set_restriction_fun",
     "?I \<down>> ?t = set_restriction_fun ((<) ?t) ?I",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("SetIntervalCut.cut_le_eq_set_restriction_fun",
     "?I \<down>\<le> ?t = set_restriction_fun (%x. x <= ?t) ?I",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("SetIntervalCut.cut_less_eq_set_restriction_fun",
     "?I \<down>< ?t = set_restriction_fun (%x. x < ?t) ?I",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, t_empty), template_var 1))),
    ("SetIntervalCut.mirror_elem_inj_on",
     "finite ?I ==> inj_on (%x. mirror_elem x ?I) ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)
           ))),
    ("SetIntervalCut.imirror_card",
     "finite ?I ==> card (imirror ?I) = card ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("SetIntervalCut.imirror_Max",
     "finite ?I ==> Max (imirror ?I) = Max ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("SetIntervalCut.imirror_iMin",
     "finite ?I ==> iMin (imirror ?I) = iMin ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("SetIntervalCut.set_restriction_absorb",
     "set_restriction ?f ==> ?f (?f ?A) = ?f ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_var 1, template_app (template_var 1, template_var 0)),
         template_app (template_var 1, template_var 0)))),
    ("SetIntervalCut.cut_ge_bound", "?n : ?i \<down>\<ge> ?t ==> ?t <= ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_inequation (less_equals, template_var 0, template_var 2))),
    ("SetIntervalCut.cut_greater_bound", "?n : ?i \<down>> ?t ==> ?t < ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_inequation (less_than, template_var 0, template_var 2))),
    ("SetIntervalCut.cut_le_bound", "?n : ?I \<down>\<le> ?t ==> ?n <= ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("SetIntervalCut.cut_less_bound", "?n : ?I \<down>< ?t ==> ?n < ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("SetIntervalCut.cut_ge_in_imp", "?x : ?I \<down>\<ge> ?t ==> ?x : ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 1)
           ))),
    ("SetIntervalCut.cut_greater_in_imp", "?x : ?I \<down>> ?t ==> ?x : ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 1)
           ))),
    ("SetIntervalCut.cut_le_in_imp", "?x : ?I \<down>\<le> ?t ==> ?x : ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 1)
           ))),
    ("SetIntervalCut.cut_less_in_imp", "?x : ?I \<down>< ?t ==> ?x : ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 1)
           ))),
    ("SetIntervalCut.cut_greater_ge_conv",
     "?I \<down>> ?t = ?I \<down>\<ge> ?t - {?t}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("SetIntervalCut.cut_less_le_conv",
     "?I \<down>< ?t = ?I \<down>\<le> ?t - {?t}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("SetIntervalCut.cut_ge_Int_right",
     "(?A Int ?B) \<down>\<ge> ?t = ?A Int ?B \<down>\<ge> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_ge_Int_left",
     "(?A Int ?B) \<down>\<ge> ?t = ?A \<down>\<ge> ?t Int ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_var 1))),
    ("SetIntervalCut.cut_cut_ge",
     "?i \<down>\<ge> ?a \<down>\<ge> ?b = ?i \<down>\<ge> max ?a ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_greater_Int_right",
     "(?A Int ?B) \<down>> ?t = ?A Int ?B \<down>> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_greater_Int_left",
     "(?A Int ?B) \<down>> ?t = ?A \<down>> ?t Int ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_var 1))),
    ("SetIntervalCut.cut_cut_greater",
     "?i \<down>> ?a \<down>> ?b = ?i \<down>> max ?a ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_le_Int_right",
     "(?A Int ?B) \<down>\<le> ?t = ?A Int ?B \<down>\<le> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_le_Int_left",
     "(?A Int ?B) \<down>\<le> ?t = ?A \<down>\<le> ?t Int ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_var 1))),
    ("SetIntervalCut.cut_cut_le",
     "?i \<down>\<le> ?a \<down>\<le> ?b = ?i \<down>\<le> min ?a ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_less_Int_right",
     "(?A Int ?B) \<down>< ?t = ?A Int ?B \<down>< ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_less_Int_left",
     "(?A Int ?B) \<down>< ?t = ?A \<down>< ?t Int ?B",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_var 1))),
    ("SetIntervalCut.cut_cut_less",
     "?i \<down>< ?a \<down>< ?b = ?i \<down>< min ?a ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_greater_Min_eq_Diff",
     "?I \<down>> iMin ?I = ?I - {iMin ?I}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           template_hole 0)))),
    ("SetIntervalCut.set_restriction_fun_all_conv",
     "(set_restriction_fun ?P ?A = ?A) = (ALL x:?A. ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("SetIntervalCut.cut_ge_card",
     "finite ?I ==> card (?I \<down>\<ge> ?t) <= card ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("SetIntervalCut.cut_greater_card",
     "finite ?I ==> card (?I \<down>> ?t) <= card ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("SetIntervalCut.cut_le_card",
     "finite ?I ==> card (?I \<down>\<le> ?t) <= card ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("SetIntervalCut.cut_less_card",
     "finite ?I ==> card (?I \<down>< ?t) <= card ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("SetIntervalCut.nat_cut_ge_infinite_not_empty",
     "infinite ?I ==> ?I \<down>\<ge> ?t ~= {}",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("SetIntervalCut.nat_cut_greater_infinite_not_empty",
     "infinite ?I ==> ?I \<down>> ?t ~= {}",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("SetIntervalCut.imirror_not_empty", "?I ~= {} ==> imirror ?I ~= {}",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 1))],
       template_negation
        (
           template_equation
            (template_app (template_hole 0, template_var 0),
             template_hole 1)
           ))),
    ("SetIntervalCut.cut_greater_Min_all",
     "?t < iMin ?I ==> ?I \<down>> ?t = ?I",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("SetIntervalCut.cut_le_Min_empty",
     "?t < iMin ?I ==> ?I \<down>\<le> ?t = {}",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("SetIntervalCut.cut_ge_Min_all",
     "?t <= iMin ?I ==> ?I \<down>\<ge> ?t = ?I",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("SetIntervalCut.cut_less_Min_empty",
     "?t <= iMin ?I ==> ?I \<down>< ?t = {}",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("SetIntervalCut.set_restriction_finite",
     "[| set_restriction ?f; finite ?A |] ==> finite (?f ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 0, template_app (template_var 1, template_var 0))
           ))),
    ("SetIntervalCut.imirror_eq_nat_mirror_image",
     "imirror ?I = (%x. nat_mirror x (iMin ?I) (Max ?I)) ` ?I",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app (template_hole 3, t_empty), template_var 0))),
    ("SetIntervalCut.set_restriction_fun_empty_conv",
     "(set_restriction_fun ?P ?A = {}) = (ALL x:?A. ~ ?P x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("SetIntervalCut.cut_ge_all_iff",
     "(?I \<down>\<ge> ?t = ?I) = (ALL x:?I. ?t <= x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("SetIntervalCut.cut_ge_empty_iff",
     "(?I \<down>\<ge> ?t = {}) = (ALL x:?I. x < ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("SetIntervalCut.cut_greater_all_iff",
     "(?I \<down>> ?t = ?I) = (ALL x:?I. ?t < x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("SetIntervalCut.cut_greater_empty_iff",
     "(?I \<down>> ?t = {}) = (ALL x:?I. x <= ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("SetIntervalCut.cut_le_all_iff",
     "(?I \<down>\<le> ?t = ?I) = (ALL x:?I. x <= ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("SetIntervalCut.cut_le_empty_iff",
     "(?I \<down>\<le> ?t = {}) = (ALL x:?I. ?t < x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("SetIntervalCut.cut_less_all_iff",
     "(?I \<down>< ?t = ?I) = (ALL x:?I. x < ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("SetIntervalCut.cut_less_empty_iff",
     "(?I \<down>< ?t = {}) = (ALL x:?I. ?t <= x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("SetIntervalCut.mirror_elem_imirror",
     "finite ?I ==> mirror_elem ?t (imirror ?I) = mirror_elem ?t ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("SetIntervalCut.cut_le_mono",
     "?t <= ?t' ==> ?I \<down>\<le> ?t <= ?I \<down>\<le> ?t'",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SetIntervalCut.cut_less_mono",
     "?t <= ?t' ==> ?I \<down>< ?t <= ?I \<down>< ?t'",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SetIntervalCut.cut_ge_mono",
     "?t' <= ?t ==> ?I \<down>\<ge> ?t <= ?I \<down>\<ge> ?t'",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("SetIntervalCut.cut_greater_mono",
     "?t' <= ?t ==> ?I \<down>> ?t <= ?I \<down>> ?t'",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("SetIntervalCut.cut_ge_subset_mono",
     "?A <= ?B ==> ?A \<down>\<ge> ?t <= ?B \<down>\<ge> ?t",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_greater_subset_mono",
     "?A <= ?B ==> ?A \<down>> ?t <= ?B \<down>> ?t",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_le_subset_mono",
     "?A <= ?B ==> ?A \<down>\<le> ?t <= ?B \<down>\<le> ?t",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_less_subset_mono",
     "?A <= ?B ==> ?A \<down>< ?t <= ?B \<down>< ?t",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_ge_not_in_imp",
     "?x ~: ?I ==> ?x ~: ?I \<down>\<ge> ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("SetIntervalCut.cut_greater_not_in_imp",
     "?x ~: ?I ==> ?x ~: ?I \<down>> ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("SetIntervalCut.cut_le_not_in_imp",
     "?x ~: ?I ==> ?x ~: ?I \<down>\<le> ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("SetIntervalCut.cut_less_not_in_imp",
     "?x ~: ?I ==> ?x ~: ?I \<down>< ?t",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))
               )
           ))),
    ("SetIntervalCut.cut_ge_not_empty_imp",
     "?I \<down>\<ge> ?t ~= {} ==> ?I ~= {}",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_hole 0)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("SetIntervalCut.cut_greater_not_empty_imp",
     "?I \<down>> ?t ~= {} ==> ?I ~= {}",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_hole 0)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("SetIntervalCut.cut_le_not_empty_imp",
     "?I \<down>\<le> ?t ~= {} ==> ?I ~= {}",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_hole 0)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("SetIntervalCut.cut_less_not_empty_imp",
     "?I \<down>< ?t ~= {} ==> ?I ~= {}",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0),
              template_hole 0)
            )],
       template_negation
        (template_equation (template_var 1, template_hole 0)))),
    ("SetIntervalCut.set_restriction_comp",
     "[| set_restriction ?f; set_restriction ?g |]
      ==> set_restriction (?f o ?g)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SetIntervalCut.nat_mirror_add",
     "nat_mirror (?n + ?k) ?l ?r = nat_mirror ?n ?l ?r - ?k",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1),
             template_var 0)),
         template_var 2))),
    ("SetIntervalCut.set_restriction_fun_singleton",
     "set_restriction_fun ?P {?a} = (if ?P ?a then {?a} else {})",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app (template_var 1, template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1)),
         template_hole 1))),
    ("SetIntervalCut.cut_ge_greater_conv",
     "?I \<down>\<ge> ?t = {?t} Int ?I Un ?I \<down>> ?t",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_le_less_conv",
     "?I \<down>\<le> ?t = {?t} Int ?I Un ?I \<down>< ?t",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.atLeast_cut_ge",
     "{?n..} \<down>\<ge> ?t = (if ?t <= ?n then {?n..} else {?t..})",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("SetIntervalCut.greaterThan_cut_ge",
     "{?n<..} \<down>\<ge> ?t = (if ?t <= ?n then {?n<..} else {?t..})",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app (template_hole 3, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.greaterThan_cut_greater",
     "{?n<..} \<down>> ?t = (if ?t <= ?n then {?n<..} else {?t<..})",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("SetIntervalCut.atMost_cut_le",
     "{..?n} \<down>\<le> ?t = (if ?n <= ?t then {..?n} else {..?t})",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("SetIntervalCut.lessThan_cut_le",
     "{..<?n} \<down>\<le> ?t = (if ?n <= ?t then {..<?n} else {..?t})",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 3, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.atMost_cut_less",
     "{..?n} \<down>< ?t = (if ?n < ?t then {..?n} else {..<?t})",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 3, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.lessThan_cut_less",
     "{..<?n} \<down>< ?t = (if ?n <= ?t then {..<?n} else {..<?t})",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("SetIntervalCut.cut_ge_Diff",
     "(?A - ?B) \<down>\<ge> ?t = ?A \<down>\<ge> ?t - ?B \<down>\<ge> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_ge_Int",
     "(?A Int ?B) \<down>\<ge> ?t =
      ?A \<down>\<ge> ?t Int ?B \<down>\<ge> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_ge_Un",
     "(?A Un ?B) \<down>\<ge> ?t =
      ?A \<down>\<ge> ?t Un ?B \<down>\<ge> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_greater_Diff",
     "(?A - ?B) \<down>> ?t = ?A \<down>> ?t - ?B \<down>> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_greater_Int",
     "(?A Int ?B) \<down>> ?t = ?A \<down>> ?t Int ?B \<down>> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_greater_Un",
     "(?A Un ?B) \<down>> ?t = ?A \<down>> ?t Un ?B \<down>> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_le_Diff",
     "(?A - ?B) \<down>\<le> ?t = ?A \<down>\<le> ?t - ?B \<down>\<le> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_le_Int",
     "(?A Int ?B) \<down>\<le> ?t =
      ?A \<down>\<le> ?t Int ?B \<down>\<le> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_le_Un",
     "(?A Un ?B) \<down>\<le> ?t =
      ?A \<down>\<le> ?t Un ?B \<down>\<le> ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_less_Diff",
     "(?A - ?B) \<down>< ?t = ?A \<down>< ?t - ?B \<down>< ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_less_Int",
     "(?A Int ?B) \<down>< ?t = ?A \<down>< ?t Int ?B \<down>< ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_less_Un",
     "(?A Un ?B) \<down>< ?t = ?A \<down>< ?t Un ?B \<down>< ?t",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.set_restriction_Int_conv",
     "set_restriction ?f = (EX B. ALL A. ?f A = A Int B)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("SetIntervalCut.cut_ge_mem_iff",
     "(?x : ?I \<down>\<ge> ?t) = (?x : ?I & ?t <= ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("SetIntervalCut.cut_greater_mem_iff",
     "(?x : ?I \<down>> ?t) = (?x : ?I & ?t < ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("SetIntervalCut.cut_le_mem_iff",
     "(?x : ?I \<down>\<le> ?t) = (?x : ?I & ?x <= ?t)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("SetIntervalCut.cut_less_mem_iff",
     "(?x : ?I \<down>< ?t) = (?x : ?I & ?x < ?t)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("SetIntervalCut.cut_ge_not_empty_iff",
     "(?I \<down>\<ge> ?t ~= {}) = (EX x:?I. ?t <= x)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("SetIntervalCut.cut_greater_not_empty_iff",
     "(?I \<down>> ?t ~= {}) = (EX x:?I. ?t < x)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("SetIntervalCut.cut_le_not_empty_iff",
     "(?I \<down>\<le> ?t ~= {}) = (EX x:?I. x <= ?t)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("SetIntervalCut.cut_less_not_empty_iff",
     "(?I \<down>< ?t ~= {}) = (EX x:?I. x < ?t)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app (template_hole 1, template_var 1), t_empty))),
    ("SetIntervalCut.set_restriction_in_imp",
     "[| set_restriction ?f; ?x : ?f ?A |] ==> ?x : ?A",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_app (template_var 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("SetIntervalCut.cut_ge_singleton",
     "{?a} \<down>\<ge> ?t = (if ?t <= ?a then {?a} else {})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_hole 2))),
    ("SetIntervalCut.cut_greater_singleton",
     "{?a} \<down>> ?t = (if ?t < ?a then {?a} else {})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_hole 2))),
    ("SetIntervalCut.cut_le_singleton",
     "{?a} \<down>\<le> ?t = (if ?a <= ?t then {?a} else {})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_hole 2))),
    ("SetIntervalCut.cut_less_singleton",
     "{?a} \<down>< ?t = (if ?a < ?t then {?a} else {})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_hole 2))),
    ("SetIntervalCut.set_restriction_Diff",
     "set_restriction ?f ==> ?f (?A - ?B) = ?f ?A - ?f ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_var 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0))))),
    ("SetIntervalCut.set_restriction_Int",
     "set_restriction ?f ==> ?f (?A Int ?B) = ?f ?A Int ?f ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_var 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0))))),
    ("SetIntervalCut.set_restriction_Un",
     "set_restriction ?f ==> ?f (?A Un ?B) = ?f ?A Un ?f ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_equation
        (template_app
          (template_var 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 2, template_var 1)),
           template_app (template_var 2, template_var 0))))),
    ("SetIntervalCut.cut_le_cut_ge_ident",
     "?t2.0 <= ?t1.0 ==>
      ?I \<down>\<le> ?t1.0 Un ?I \<down>\<ge> ?t2.0 = ?I",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_var 0))),
    ("SetIntervalCut.cut_le_cut_greater_ident",
     "?t2.0 <= ?t1.0 ==> ?I \<down>\<le> ?t1.0 Un ?I \<down>> ?t2.0 = ?I",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_var 0))),
    ("SetIntervalCut.cut_less_cut_ge_ident",
     "?t2.0 <= ?t1.0 ==> ?I \<down>< ?t1.0 Un ?I \<down>\<ge> ?t2.0 = ?I",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_var 0))),
    ("SetIntervalCut.nat_mirror_le",
     "?a <= ?b ==> nat_mirror ?b ?l ?r <= nat_mirror ?a ?l ?r",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_ge_Min_greater",
     "?I \<down>\<ge> ?t ~= {} ==> ?t <= iMin (?I \<down>\<ge> ?t)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("SetIntervalCut.cut_greater_Min_greater",
     "?I \<down>> ?t ~= {} ==> ?t < iMin (?I \<down>> ?t)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_inequation
        (less_than, template_var 0,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("SetIntervalCut.nat_cut_le_Max_le",
     "?I \<down>\<le> ?t ~= {} ==> Max (?I \<down>\<le> ?t) <= ?t",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_var 0))),
    ("SetIntervalCut.nat_cut_less_Max_less",
     "?I \<down>< ?t ~= {} ==> Max (?I \<down>< ?t) < ?t",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_var 0))),
    ("SetIntervalCut.nat_mirror_less_imp_less",
     "nat_mirror ?b ?l ?r < nat_mirror ?a ?l ?r ==> ?a < ?b",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2),
            template_var 1),
          template_app
           (template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2),
            template_var 1))],
       template_inequation (less_than, template_var 0, template_var 3))),
    ("SetIntervalCut.set_restriction_card_le",
     "[| set_restriction ?f; finite ?A |] ==> card (?f ?A) <= card ?A",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 0, template_app (template_var 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.set_restriction_mono",
     "[| set_restriction ?f; ?A <= ?B |] ==> ?f ?A <= ?f ?B",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_var 2, template_var 1),
         template_app (template_var 2, template_var 0)))),
    ("SetIntervalCut.insert_eq_cut_less_cut_greater",
     "insert ?n ?I = ?I \<down>< ?n Un {?n} Un ?I \<down>> ?n",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 1)),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_hole 1))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SetIntervalCut.cut_less_Max_eq_Diff",
     "finite ?I ==> ?I \<down>< Max ?I = ?I - {Max ?I}",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 3, template_var 0)),
             template_hole 0))))),
    ("SetIntervalCut.mirror_elem_add",
     "finite ?I ==> mirror_elem (?n + ?k) ?I = mirror_elem ?n ?I - ?k",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("SetIntervalCut.nat_cut_less_le_conv",
     "0 < ?t ==> ?I \<down>< ?t = ?I \<down>\<le> (?t - Suc 0)",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_hole 5)))))),
    ("SetIntervalCut.nat_cut_greater_ge_conv",
     "0 < ?t ==> ?I \<down>> (?t - Suc 0) = ?I \<down>\<ge> ?t",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_hole 5))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SetIntervalCut.cut_less_cut_greater_ident'",
     "?t ~: ?I ==> ?I \<down>< ?t Un ?I \<down>> ?t = ?I",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("SetIntervalCut.cut_le_Min_eq",
     "?I \<down>\<le> ?t ~= {} ==> iMin (?I \<down>\<le> ?t) = iMin ?I",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("SetIntervalCut.cut_less_Min_eq",
     "?I \<down>< ?t ~= {} ==> iMin (?I \<down>< ?t) = iMin ?I",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("SetIntervalCut.set_restrictionI",
     "?f = (%A. {x: A. ?P x}) ==> set_restriction ?f",
     template_implication
      ([template_equation (template_var 1, t_empty)],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("SetIntervalCut.cut_ge_Max_empty",
     "[| finite ?I; Max ?I < ?t |] ==> ?I \<down>\<ge> ?t = {}",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_than, template_app (template_hole 3, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("SetIntervalCut.cut_less_Max_all",
     "[| finite ?I; Max ?I < ?t |] ==> ?I \<down>< ?t = ?I",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_than, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("SetIntervalCut.cut_greater_Max_empty",
     "[| finite ?I; Max ?I <= ?t |] ==> ?I \<down>> ?t = {}",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("SetIntervalCut.cut_le_Max_all",
     "[| finite ?I; Max ?I <= ?t |] ==> ?I \<down>\<le> ?t = ?I",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("SetIntervalCut.in_imp_mirror_elem_in",
     "[| finite ?I; ?n : ?I |] ==> mirror_elem ?n ?I : imirror ?I",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SetIntervalCut.set_restriction_commute",
     "[| set_restriction ?f; set_restriction ?g |]
      ==> ?f (?g ?I) = ?g (?f ?I)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 2)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_var 2, template_app (template_var 1, template_var 0)),
         template_app
          (template_var 1,
           template_app (template_var 2, template_var 0))))),
    ("SetIntervalCut.set_restriction_not_in_imp",
     "[| set_restriction ?f; ?x ~: ?A |] ==> ?x ~: ?f ?A",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)
                )
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app (template_var 2, template_var 0))
               )
           ))),
    ("SetIntervalCut.set_restriction_non_empty_imp",
     "[| set_restriction ?f; ?f ?A ~= {} |] ==> ?A ~= {}",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_negation
         (
            template_equation
             (template_app (template_var 1, template_var 0),
              template_hole 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("SetIntervalCut.cut_greaterI",
     "[| ?x : ?I; ?t < ?x |] ==> ?x : ?I \<down>> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SetIntervalCut.cut_lessI",
     "[| ?x : ?I; ?x < ?t |] ==> ?x : ?I \<down>< ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SetIntervalCut.cut_geI",
     "[| ?x : ?I; ?t <= ?x |] ==> ?x : ?I \<down>\<ge> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SetIntervalCut.cut_leI",
     "[| ?x : ?I; ?x <= ?t |] ==> ?x : ?I \<down>\<le> ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SetIntervalCut.cut_ge_greater_conv_if",
     "?I \<down>\<ge> ?t =
      (if ?t : ?I then insert ?t (?I \<down>> ?t) else ?I \<down>> ?t)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_le_less_conv_if",
     "?I \<down>\<le> ?t =
      (if ?t : ?I then insert ?t (?I \<down>< ?t) else ?I \<down>< ?t)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.atLeastAtMost_cut_ge",
     "{?m..?n} \<down>\<ge> ?t = (if ?t <= ?m then {?m..?n} else {?t..?n})",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 1)))),
    ("SetIntervalCut.atLeastLessThan_cut_ge",
     "{?m..<?n} \<down>\<ge> ?t =
      (if ?t <= ?m then {?m..<?n} else {?t..<?n})",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 1)))),
    ("SetIntervalCut.greaterThanAtMost_cut_ge",
     "{?m<..?n} \<down>\<ge> ?t =
      (if ?t <= ?m then {?m<..?n} else {?t..?n})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SetIntervalCut.greaterThanLessThan_cut_ge",
     "{?m<..<?n} \<down>\<ge> ?t =
      (if ?t <= ?m then {?m<..<?n} else {?t..<?n})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SetIntervalCut.atLeastAtMost_cut_greater",
     "{?m..?n} \<down>> ?t = (if ?t < ?m then {?m..?n} else {?t<..?n})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SetIntervalCut.atLeastLessThan_cut_greater",
     "{?m..<?n} \<down>> ?t = (if ?t < ?m then {?m..<?n} else {?t<..<?n})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SetIntervalCut.greaterThanAtMost_cut_greater",
     "{?m<..?n} \<down>> ?t = (if ?t <= ?m then {?m<..?n} else {?t<..?n})",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 1)))),
    ("SetIntervalCut.greaterThanLessThan_cut_greater",
     "{?m<..<?n} \<down>> ?t =
      (if ?t <= ?m then {?m<..<?n} else {?t<..<?n})",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 1)))),
    ("SetIntervalCut.atLeastAtMost_cut_le",
     "{?m..?n} \<down>\<le> ?t = (if ?n <= ?t then {?m..?n} else {?m..?t})",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("SetIntervalCut.atLeastLessThan_cut_le",
     "{?m..<?n} \<down>\<le> ?t =
      (if ?n <= ?t then {?m..<?n} else {?m..?t})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("SetIntervalCut.greaterThanAtMost_cut_le",
     "{?m<..?n} \<down>\<le> ?t =
      (if ?n <= ?t then {?m<..?n} else {?m<..?t})",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("SetIntervalCut.greaterThanLessThan_cut_le",
     "{?m<..<?n} \<down>\<le> ?t =
      (if ?n <= ?t then {?m<..<?n} else {?m<..?t})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("SetIntervalCut.atLeastAtMost_cut_less",
     "{?m..?n} \<down>< ?t = (if ?n < ?t then {?m..?n} else {?m..<?t})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("SetIntervalCut.atLeastLessThan_cut_less",
     "{?m..<?n} \<down>< ?t = (if ?n <= ?t then {?m..<?n} else {?m..<?t})",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("SetIntervalCut.greaterThanAtMost_cut_less",
     "{?m<..?n} \<down>< ?t = (if ?n < ?t then {?m<..?n} else {?m<..<?t})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("SetIntervalCut.greaterThanLessThan_cut_less",
     "{?m<..<?n} \<down>< ?t =
      (if ?n <= ?t then {?m<..<?n} else {?m<..<?t})",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("SetIntervalCut.imirror_bounds_Un",
     "imirror_bounds (?A Un ?B) ?l ?r =
      imirror_bounds ?A ?l ?r Un imirror_bounds ?B ?l ?r",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("SetIntervalCut.nat_mirror_nat_mirror_ident",
     "?n <= ?l + ?r ==> nat_mirror (nat_mirror ?n ?l ?r) ?l ?r = ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 1),
           template_var 0),
         template_var 2))),
    ("SetIntervalCut.imirror_iff",
     "(?n : imirror ?I) = (EX x:?I. ?n = iMin ?I + Max ?I - x)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app (template_hole 6, template_var 0)),
       template_app
        (template_app (template_hole 5, template_var 0), t_empty))),
    ("SetIntervalCut.imirror_bounds_iff",
     "(?n : imirror_bounds ?I ?l ?r) = (EX x:?I. ?n = ?l + ?r - x)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 3, template_var 2), t_empty))),
    ("SetIntervalCut.set_restrictionD_spec",
     "set_restriction ?f ==> EX P. ?f ?A = {x: ?A. P x}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("SetIntervalCut.mirror_elem_Max",
     "[| finite ?I; ?I ~= {} |] ==> mirror_elem (Max ?I) ?I = iMin ?I",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.mirror_elem_Min",
     "[| finite ?I; ?I ~= {} |] ==> mirror_elem (iMin ?I) ?I = Max ?I",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalCut.insert_Int_conv_if",
     "?A Int insert ?x ?B =
      (if ?x : ?A then insert ?x (?A Int ?B) else ?A Int ?B)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("SetIntervalCut.cut_greater_ge_conv_if",
     "?I \<down>> ?t =
      (if ?t : ?I then ?I \<down>\<ge> ?t - {?t} else ?I \<down>\<ge> ?t)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_less_le_conv_if",
     "?I \<down>< ?t =
      (if ?t : ?I then ?I \<down>\<le> ?t - {?t} else ?I \<down>\<le> ?t)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1), template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 0),
               template_var 1)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_less_Min_not_empty",
     "[| ?I ~= {}; iMin ?I < ?t |] ==> ?I \<down>< ?t ~= {}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_inequation
         (less_than, template_app (template_hole 1, template_var 1),
          template_var 0)],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 3)
           ))),
    ("SetIntervalCut.cut_le_Min_not_empty",
     "[| ?I ~= {}; iMin ?I <= ?t |] ==> ?I \<down>\<le> ?t ~= {}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_var 0)],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 3)
           ))),
    ("SetIntervalCut.imirror_cut_ge",
     "finite ?I ==>
      imirror ?I \<down>\<ge> mirror_elem ?t ?I =
      imirror_bounds (?I \<down>\<le> ?t) (iMin ?I) (Max ?I)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 1))))),
    ("SetIntervalCut.imirror_cut_less",
     "finite ?I ==>
      imirror ?I \<down>< mirror_elem ?t ?I =
      imirror_bounds (?I \<down>> ?t) (iMin ?I) (Max ?I)",
     template_implication
      ([template_predicate
         (template_app (template_hole 8, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 1))))),
    ("SetIntervalCut.set_restrictionD",
     "set_restriction ?f ==> EX P. ALL A. ?f A = {x: A. P x}",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("SetIntervalCut.cut_ge_Max_eq",
     "[| finite ?I; ?I \<down>\<ge> ?t ~= {} |]
      ==> Max (?I \<down>\<ge> ?t) = Max ?I",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("SetIntervalCut.cut_greater_Max_eq",
     "[| finite ?I; ?I \<down>> ?t ~= {} |]
      ==> Max (?I \<down>> ?t) = Max ?I",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("SetIntervalCut.imirror_iMin_Max",
     "[| finite ?I; ?n : imirror ?I |] ==> iMin ?I <= ?n & ?n <= Max ?I",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_var 0)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("SetIntervalCut.nat_mirror_less_conv",
     "?a < ?l + ?r ==>
      (nat_mirror ?b ?l ?r < nat_mirror ?a ?l ?r) = (?a < ?b)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_var 0)))),
    ("SetIntervalCut.nat_mirror_le_conv",
     "?a <= ?l + ?r ==>
      (nat_mirror ?b ?l ?r <= nat_mirror ?a ?l ?r) = (?a <= ?b)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_var 0)))),
    ("SetIntervalCut.mirror_elem_mirror_elem_ident",
     "[| finite ?I; ?n <= iMin ?I + Max ?I |]
      ==> mirror_elem (mirror_elem ?n ?I) ?I = ?n",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            template_app (template_hole 2, template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1),
         template_var 0))),
    ("SetIntervalCut.cut_le_Max_le",
     "[| finite (?I \<down>\<le> ?t); ?I \<down>\<le> ?t ~= {} |]
      ==> Max (?I \<down>\<le> ?t) <= ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_var 0))),
    ("SetIntervalCut.cut_less_Max_less",
     "[| finite (?I \<down>< ?t); ?I \<down>< ?t ~= {} |]
      ==> Max (?I \<down>< ?t) < ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_inequation
        (less_than,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_var 0))),
    ("SetIntervalCut.Collect_minI_ex_cut",
     "EX k:?I. ?P k ==> EX x:?I. ?P x & (ALL y:?I \<down>< x. ~ ?P y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1), t_empty)
           ))),
    ("SetIntervalCut.imirror_bounds_imirror_bounds_ident",
     "[| finite ?I; Max ?I <= ?l + ?r |]
      ==> imirror_bounds (imirror_bounds ?I ?l ?r) ?l ?r = ?I",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 1),
           template_var 0),
         template_var 2))),
    ("SetIntervalCut.nat_mirror_less",
     "[| ?a < ?b; ?a < ?l + ?r |]
      ==> nat_mirror ?b ?l ?r < nat_mirror ?a ?l ?r",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_than, template_var 3,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0)))),
    ("SetIntervalCut.cut_geE",
     "[| ?x : ?I \<down>\<ge> ?t; [| ?x : ?I; ?t <= ?x |] ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)
               )],
          template_implication
           ([template_inequation
              (less_equals, template_var 1, template_var 3)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("SetIntervalCut.cut_greaterE",
     "[| ?x : ?I \<down>> ?t; [| ?x : ?I; ?t < ?x |] ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)
               )],
          template_implication
           ([template_inequation
              (less_than, template_var 1, template_var 3)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("SetIntervalCut.cut_leE",
     "[| ?x : ?I \<down>\<le> ?t; [| ?x : ?I; ?x <= ?t |] ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)
               )],
          template_implication
           ([template_inequation
              (less_equals, template_var 3, template_var 1)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("SetIntervalCut.cut_lessE",
     "[| ?x : ?I \<down>< ?t; [| ?x : ?I; ?x < ?t |] ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)
               )],
          template_implication
           ([template_inequation
              (less_than, template_var 3, template_var 1)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("SetIntervalCut.cut_greater_Max_not_empty",
     "[| ?I ~= {}; finite ?I; ?t < Max ?I |] ==> ?I \<down>> ?t ~= {}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 1, template_var 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 4)
           ))),
    ("SetIntervalCut.cut_ge_Max_not_empty",
     "[| ?I ~= {}; finite ?I; ?t <= Max ?I |] ==> ?I \<down>\<ge> ?t ~= {}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 1, template_var 1))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_hole 4)
           ))),
    ("SetIntervalCut.imirror_mem_conv",
     "[| finite ?I; ?n <= iMin ?I + Max ?I |]
      ==> (mirror_elem ?n ?I : imirror ?I) = (?n : ?I)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1)),
            template_app (template_hole 4, template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 1)))),
    ("SetIntervalCut.cut_less_cut_greater_ident",
     "[| ?t2.0 <= ?t1.0; ?I Int {?t1.0..?t2.0} = {} |]
      ==> ?I \<down>< ?t1.0 Un ?I \<down>> ?t2.0 = ?I",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 0),
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 2)),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_var 0))),
    ("SetIntervalCut.Collect_minI_cut",
     "[| ?k : ?I; ?P ?k |]
      ==> EX x:?I. ?P x & (ALL y:?I \<down>< x. ~ ?P y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1), t_empty)
           ))),
    ("SetIntervalCut.imirror_cut_greater'",
     "[| finite ?I; ?t : ?I |]
      ==> imirror ?I \<down>> mirror_elem ?t ?I =
          imirror_bounds (?I \<down>< ?t) (iMin ?I) (Max ?I)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 1))))),
    ("SetIntervalCut.imirror_cut_le'",
     "[| finite ?I; ?t : ?I |]
      ==> imirror ?I \<down>\<le> mirror_elem ?t ?I =
          imirror_bounds (?I \<down>\<ge> ?t) (iMin ?I) (Max ?I)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 1))))),
    ("SetIntervalCut.nat_mirror_diff",
     "[| ?k <= ?n; ?n <= ?l + ?r |]
      ==> nat_mirror (?n - ?k) ?l ?r = nat_mirror ?n ?l ?r + ?k",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3)),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3)))),
    ("SetIntervalCut.mirror_elem_diff",
     "[| finite ?I; ?k <= ?n; ?n : ?I |]
      ==> mirror_elem (?n - ?k) ?I = mirror_elem ?n ?I + ?k",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_var 1)))),
    ("SetIntervalCut.mirror_elem_eq_conv'",
     "[| finite ?I; ?a : ?I; ?b : ?I |]
      ==> (mirror_elem ?a ?I = mirror_elem ?b ?I) = (?a = ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_equation (template_var 1, template_var 0)))),
    ("SetIntervalCut.mirror_elem_less_conv",
     "[| finite ?I; ?a : ?I; ?b : ?I |]
      ==> (mirror_elem ?b ?I < mirror_elem ?a ?I) = (?a < ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.mirror_elem_le_conv",
     "[| finite ?I; ?a : ?I; ?b : ?I |]
      ==> (mirror_elem ?b ?I <= mirror_elem ?a ?I) = (?a <= ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.i_cut_absorb_disj",
     "?cut_op = (\<down><) |
      ?cut_op = (\<down>\<le>) |
      ?cut_op = (\<down>>) | ?cut_op = (\<down>\<ge>) ==>
      ?cut_op (?cut_op ?I ?t) ?t = ?cut_op ?I ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_hole 4)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_hole 3)),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_hole 2)),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_hole 1))))
            )],
       template_equation
        (template_app
          (template_app
            (template_var 2,
             template_app
              (template_app (template_var 2, template_var 1),
               template_var 0)),
           template_var 0),
         template_app
          (template_app (template_var 2, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.Collect_minI_ex2_cut",
     "{k: ?I. ?P k} ~= {} ==>
      EX x:?I. ?P x & (ALL y:?I \<down>< x. ~ ?P y)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 6, t_empty), template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1), t_empty)
           ))),
    ("SetIntervalCut.nat_mirror_eq_conv",
     "[| ?a <= ?l + ?r; ?b <= ?l + ?r |]
      ==> (nat_mirror ?a ?l ?r = nat_mirror ?b ?l ?r) = (?a = ?b)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_var 1))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1)),
         template_equation (template_var 3, template_var 0)))),
    ("SetIntervalCut.i_cut_set_restriction_disj",
     "[| ?cut_op = (\<down><) |
         ?cut_op = (\<down>\<le>) |
         ?cut_op = (\<down>>) | ?cut_op = (\<down>\<ge>);
         ?f = (%I. ?cut_op I ?t) |]
      ==> set_restriction ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_hole 5)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_hole 4)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 2),
                      template_hole 3)),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_hole 2))))
            ),
        template_equation (template_var 1, t_empty)],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("SetIntervalCut.cut_ge_image",
     "[| SetInterval2.strict_mono_on ?f ?A; ?I <= ?A; ?n : ?A |]
      ==> (?f ` ?I) \<down>\<ge> ?f ?n = ?f ` ?I \<down>\<ge> ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app (template_var 3, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("SetIntervalCut.cut_greater_image",
     "[| SetInterval2.strict_mono_on ?f ?A; ?I <= ?A; ?n : ?A |]
      ==> (?f ` ?I) \<down>> ?f ?n = ?f ` ?I \<down>> ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app (template_var 3, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("SetIntervalCut.cut_le_image",
     "[| SetInterval2.strict_mono_on ?f ?A; ?I <= ?A; ?n : ?A |]
      ==> (?f ` ?I) \<down>\<le> ?f ?n = ?f ` ?I \<down>\<le> ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app (template_var 3, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("SetIntervalCut.cut_less_image",
     "[| SetInterval2.strict_mono_on ?f ?A; ?I <= ?A; ?n : ?A |]
      ==> (?f ` ?I) \<down>< ?f ?n = ?f ` ?I \<down>< ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app (template_var 3, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("SetIntervalCut.imirror_cut_greater",
     "[| finite ?I; ?t <= iMin ?I + Max ?I |]
      ==> imirror ?I \<down>> mirror_elem ?t ?I =
          imirror_bounds (?I \<down>< ?t) (iMin ?I) (Max ?I)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1)),
            template_app (template_hole 6, template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app (template_hole 7, template_var 1)),
           template_app (template_hole 6, template_var 1))))),
    ("SetIntervalCut.imirror_cut_le",
     "[| finite ?I; ?t <= iMin ?I + Max ?I |]
      ==> imirror ?I \<down>\<le> mirror_elem ?t ?I =
          imirror_bounds (?I \<down>\<ge> ?t) (iMin ?I) (Max ?I)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1)),
            template_app (template_hole 6, template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app (template_hole 7, template_var 1)),
           template_app (template_hole 6, template_var 1))))),
    ("SetIntervalCut.set_restriction_card",
     "[| set_restriction ?f; finite ?A |]
      ==> card (?f ?A) = card ?A - card {a: ?A. ?f {a} = {}}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app
          (template_hole 7, template_app (template_var 1, template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 7, template_var 0)),
           template_app
            (template_hole 7, template_app (template_hole 5, t_empty)))))),
    ("SetIntervalCut.mirror_elem_eq_conv",
     "[| ?a <= iMin ?I + Max ?I; ?b <= iMin ?I + Max ?I |]
      ==> (mirror_elem ?a ?I = mirror_elem ?b ?I) = (?a = ?b)",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1)),
            template_app (template_hole 3, template_var 1))),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1)),
            template_app (template_hole 3, template_var 1)))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_equation (template_var 2, template_var 0)))),
    ("SetIntervalCut.i_cut_subset_mono_disj",
     "[| ?cut_op = (\<down><) |
         ?cut_op = (\<down>\<le>) |
         ?cut_op = (\<down>>) | ?cut_op = (\<down>\<ge>);
         ?A <= ?B |]
      ==> ?cut_op ?A ?t <= ?cut_op ?B ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_hole 4)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_hole 3)),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_hole 2)),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_hole 1))))
            ),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_var 3, template_var 2), template_var 0),
         template_app
          (template_app (template_var 3, template_var 1),
           template_var 0)))),
    ("SetIntervalCut.i_cut_Diff_disj",
     "?cut_op = (\<down><) |
      ?cut_op = (\<down>\<le>) |
      ?cut_op = (\<down>>) | ?cut_op = (\<down>\<ge>) ==>
      ?cut_op (?A - ?B) ?t = ?cut_op ?A ?t - ?cut_op ?B ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_hole 5)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_hole 4)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_hole 3)),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_hole 2))))
            )],
       template_equation
        (template_app
          (template_app
            (template_var 3,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_var 3, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_var 3, template_var 1),
             template_var 0))))),
    ("SetIntervalCut.i_cut_Int_disj",
     "?cut_op = (\<down><) |
      ?cut_op = (\<down>\<le>) |
      ?cut_op = (\<down>>) | ?cut_op = (\<down>\<ge>) ==>
      ?cut_op (?A Int ?B) ?t = ?cut_op ?A ?t Int ?cut_op ?B ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_hole 5)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_hole 4)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_hole 3)),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_hole 2))))
            )],
       template_equation
        (template_app
          (template_app
            (template_var 3,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_var 3, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_var 3, template_var 1),
             template_var 0))))),
    ("SetIntervalCut.i_cut_Un_disj",
     "?cut_op = (\<down><) |
      ?cut_op = (\<down>\<le>) |
      ?cut_op = (\<down>>) | ?cut_op = (\<down>\<ge>) ==>
      ?cut_op (?A Un ?B) ?t = ?cut_op ?A ?t Un ?cut_op ?B ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_hole 5)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_hole 4)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 3),
                      template_hole 3)),
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_hole 2))))
            )],
       template_equation
        (template_app
          (template_app
            (template_var 3,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_var 3, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_var 3, template_var 1),
             template_var 0))))),
    ("SetIntervalCut.imirror_bounds_Max",
     "[| finite ?I; ?I ~= {}; Max ?I <= ?l + ?r |]
      ==> Max (imirror_bounds ?I ?l ?r) = ?l + ?r - iMin ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 7)),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 2))))),
    ("SetIntervalCut.imirror_bounds_iMin",
     "[| finite ?I; ?I ~= {}; iMin ?I <= ?l + ?r |]
      ==> iMin (imirror_bounds ?I ?l ?r) = ?l + ?r - Max ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 7)),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 2))))),
    ("SetIntervalCut.imirror_bounds_Int",
     "[| ?A <= {..?l + ?r}; ?B <= {..?l + ?r} |]
      ==> imirror_bounds (?A Int ?B) ?l ?r =
          imirror_bounds ?A ?l ?r Int imirror_bounds ?B ?l ?r",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1))),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2),
             template_var 1))))),
    ("SetIntervalCut.imirror_bounds_elem_conv",
     "[| finite ?I; ?n <= ?l + ?r; Max ?I <= ?l + ?r |]
      ==> (nat_mirror ?n ?l ?r : imirror_bounds ?I ?l ?r) = (?n : ?I)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 3),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 3)))),
    ("SetIntervalCut.i_cut_commute_disj",
     "[| ?cut_op1.0 = (\<down><) |
         ?cut_op1.0 = (\<down>\<le>) |
         ?cut_op1.0 = (\<down>>) | ?cut_op1.0 = (\<down>\<ge>);
         ?cut_op2.0 = (\<down><) |
         ?cut_op2.0 = (\<down>\<le>) |
         ?cut_op2.0 = (\<down>>) | ?cut_op2.0 = (\<down>\<ge>) |]
      ==> ?cut_op2.0 (?cut_op1.0 ?I ?t1.0) ?t2.0 =
          ?cut_op1.0 (?cut_op2.0 ?I ?t2.0) ?t1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_hole 4)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_hole 3)),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 4),
                      template_hole 2)),
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_hole 1))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_hole 4)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_hole 3)),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_hole 2)),
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_hole 1))))
            )],
       template_equation
        (template_app
          (template_app
            (template_var 3,
             template_app
              (template_app (template_var 4, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_var 4,
             template_app
              (template_app (template_var 3, template_var 2),
               template_var 0)),
           template_var 1))))]
