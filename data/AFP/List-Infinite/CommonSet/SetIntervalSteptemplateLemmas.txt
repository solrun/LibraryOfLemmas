   [("SetIntervalStep.inext_empty", "inext ?n {} = ?n",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("SetIntervalStep.inext_nth_UNIV", "UNIV \<rightarrow> ?a = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("SetIntervalStep.iprev_empty", "iprev ?n {} = ?n",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("SetIntervalStep.nat_CommuteWithIntervalCut2_4_eq",
     "CommuteWithIntervalCut4 ?fun = CommuteWithIntervalCut2 ?fun",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SetIntervalStep.inext_mono", "?n <= inext ?n ?I",
     template_inequation
      (less_equals, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetIntervalStep.iprev_mono", "iprev ?n ?I <= ?n",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 1)),
    ("SetIntervalStep.cut_ge_CommuteWithIntervalCut4",
     "CommuteWithIntervalCut4 (%I. I \<down>\<ge> ?t)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("SetIntervalStep.cut_greater_CommuteWithIntervalCut4",
     "CommuteWithIntervalCut4 (%I. I \<down>> ?t)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("SetIntervalStep.cut_le_CommuteWithIntervalCut4",
     "CommuteWithIntervalCut4 (%I. I \<down>\<le> ?t)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("SetIntervalStep.cut_less_CommuteWithIntervalCut4",
     "CommuteWithIntervalCut4 (%I. I \<down>< ?t)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("SetIntervalStep.inext_UNIV", "inext ?n UNIV = Suc ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("SetIntervalStep.CommuteWithIntervalCut4_imp_2",
     "CommuteWithIntervalCut4 ?fun ==> CommuteWithIntervalCut2 ?fun",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("SetIntervalStep.iprev_iMin", "iprev (iMin ?I) ?I = iMin ?I",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("SetIntervalStep.inext_singleton", "inext ?n {?a} = ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 1)),
    ("SetIntervalStep.inext_nth_singleton", "{?a} \<rightarrow> ?n = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_var 1)),
    ("SetIntervalStep.iprev_singleton", "iprev ?n {?a} = ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 1)),
    ("SetIntervalStep.iprev_nth_singleton", "{?a} \<leftarrow> ?n = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         template_var 0),
       template_var 1)),
    ("SetIntervalStep.inext_nth_surj_on", "surj_on (inext_nth ?I) UNIV ?I",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_hole 0),
           template_var 0)
         )),
    ("SetIntervalStep.iprev_UNIV", "iprev ?n UNIV = ?n - Suc 0",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("SetIntervalStep.inext_nth_atLeast",
     "{?n..} \<rightarrow> ?a = ?n + ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetIntervalStep.inext_nth_Suc_mono",
     "?I \<rightarrow> ?n <= ?I \<rightarrow> Suc ?n",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalStep.iprev_nth_Suc_mono",
     "?I \<leftarrow> Suc ?n <= ?I \<leftarrow> ?n",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("SetIntervalStep.inext_in_iff", "(inext ?n ?I : ?I) = (?n : ?I)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("SetIntervalStep.iprev_in_iff", "(iprev ?n ?I : ?I) = (?n : ?I)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("SetIntervalStep.inext_closed", "?n : ?I ==> inext ?n ?I : ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 0)
           ))),
    ("SetIntervalStep.iprev_closed", "?n : ?I ==> iprev ?n ?I : ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 0)
           ))),
    ("SetIntervalStep.inext_in_imp_in", "inext ?n ?I : ?I ==> ?n : ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("SetIntervalStep.iprev_in_imp_in", "iprev ?n ?I : ?I ==> ?n : ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("SetIntervalStep.inext_Max",
     "finite ?I ==> inext (Max ?I) ?I = Max ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalStep.iprev_nth_surj_on",
     "finite ?I ==> surj_on (iprev_nth ?I) UNIV ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_hole 0),
             template_var 0)
           ))),
    ("SetIntervalStep.inext_nth_lessThan",
     "?a < ?n ==> {..<?n} \<rightarrow> ?a = ?a",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_var 1))),
    ("SetIntervalStep.inext_nth_atMost",
     "?a <= ?n ==> {..?n} \<rightarrow> ?a = ?a",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_var 1))),
    ("SetIntervalStep.inext_nth_closed",
     "?I ~= {} ==> ?I \<rightarrow> ?n : ?I",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 1)
           ))),
    ("SetIntervalStep.not_in_inext_fix", "?n ~: ?I ==> inext ?n ?I = ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("SetIntervalStep.not_in_iprev_fix", "?n ~: ?I ==> iprev ?n ?I = ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("SetIntervalStep.iprev_le_iMin", "?n <= iMin ?I ==> iprev ?n ?I = ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("SetIntervalStep.inext_neq_iMin_infin",
     "infinite ?I ==> inext ?n ?I ~= iMin ?I",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SetIntervalStep.iprev_inext_infin",
     "infinite ?I ==> iprev (inext ?n ?I) ?I = ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1),
         template_var 0))),
    ("SetIntervalStep.inext_atMost", "?t < ?n ==> inext ?t {..?n} = Suc ?t",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("SetIntervalStep.inext_nth_mono",
     "?a <= ?b ==> ?I \<rightarrow> ?a <= ?I \<rightarrow> ?b",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SetIntervalStep.iprev_nth_mono",
     "?a <= ?b ==> ?I \<leftarrow> ?b <= ?I \<leftarrow> ?a",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("SetIntervalStep.inext_atLeast",
     "?n <= ?t ==> inext ?t {?n..} = Suc ?t",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalStep.iprev_atLeast'",
     "?n <= ?t ==> iprev (Suc ?t) {?n..} = ?t",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("SetIntervalStep.in_imp_ex_inext_nth",
     "?x : ?I ==> EX n. ?x = ?I \<rightarrow> n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("SetIntervalStep.iprev_neq_imp_iMin",
     "iprev ?n ?I ~= ?n ==> iMin ?I < ?n",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("SetIntervalStep.inext_min_step2",
     "~ (EX k:?I. ?n < k & k < inext ?n ?I)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 3, template_var 1), t_empty)
             )
         )),
    ("SetIntervalStep.iprev_min_step2",
     "~ (EX x:?I. iprev ?n ?I < x & x < ?n)",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_app (template_hole 3, template_var 1), t_empty)
             )
         )),
    ("SetIntervalStep.iprev_nth_atMost",
     "?a <= ?n ==> {..?n} \<leftarrow> ?a = ?n - ?a",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SetIntervalStep.inext_lessThan",
     "Suc ?t < ?n ==> inext ?t {..<?n} = Suc ?t",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 3, template_var 1)))),
    ("SetIntervalStep.inext_nth_card_Max_aux",
     "card ?I = Suc ?n ==> ?I \<rightarrow> ?n = Max ?I",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("SetIntervalStep.iprev_nth_card_greater_iMin",
     "Suc ?n < card ?I ==> iMin ?I < ?I \<leftarrow> ?n",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("SetIntervalStep.inext_nth_card_less_Max",
     "Suc ?n < card ?I ==> ?I \<rightarrow> ?n < Max ?I",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalStep.inext_neq_imp_less",
     "?n ~= inext ?n ?I ==> ?n < inext ?n ?I",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 1,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.iprev_neq_imp_greater",
     "?n ~= iprev ?n ?I ==> iprev ?n ?I < ?n",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 1,
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_var 1))),
    ("SetIntervalStep.less_card_cut_less_imp_inext_nth_less",
     "?n < card (?I \<down>< ?t) ==> ?I \<rightarrow> ?n < ?t",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("SetIntervalStep.inext_all_le_fix",
     "ALL x:?I. x <= ?n ==> inext ?n ?I = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("SetIntervalStep.iprev_all_ge_fix",
     "ALL x:?I. ?n <= x ==> iprev ?n ?I = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("SetIntervalStep.iprev_greater_conv",
     "(?n : ?I & iMin ?I < ?n) = (iprev ?n ?I < ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("SetIntervalStep.iprev_nth_lessThan",
     "?a < ?n ==> {..<?n} \<leftarrow> ?a = ?n - Suc ?a",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("SetIntervalStep.iprev_atLeast",
     "?n < ?t ==> iprev ?t {?n..} = ?t - Suc 0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app (template_hole 3, template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))))),
    ("SetIntervalStep.iprev_cut_less_conv",
     "?n < ?t ==> iprev ?n (?I \<down>< ?t) = iprev ?n ?I",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("SetIntervalStep.iprev_lessThan",
     "?t < ?n ==> iprev ?t {..<?n} = ?t - Suc 0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_hole 0))))),
    ("SetIntervalStep.inext_cut_greater_conv",
     "?t < ?n ==> inext ?n (?I \<down>> ?t) = inext ?n ?I",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.iprev_cut_le_conv",
     "?n <= ?t ==> iprev ?n (?I \<down>\<le> ?t) = iprev ?n ?I",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("SetIntervalStep.iprev_atMost",
     "?t <= ?n ==> iprev ?t {..?n} = ?t - Suc 0",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_hole 0))))),
    ("SetIntervalStep.inext_cut_ge_conv",
     "?t <= ?n ==> inext ?n (?I \<down>\<ge> ?t) = inext ?n ?I",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.subset_inext_in_iff",
     "?A <= ?B ==> (inext ?n ?A : ?B) = (?n : ?B)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("SetIntervalStep.subset_iprev_in_iff",
     "?A <= ?B ==> (iprev ?n ?A : ?B) = (?n : ?B)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("SetIntervalStep.inext_iprev",
     "iMin ?I ~= ?n ==> inext (iprev ?n ?I) ?I = ?n",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1),
         template_var 0))),
    ("SetIntervalStep.inext_cut_le_fix",
     "?t < inext ?n ?I ==> inext ?n (?I \<down>\<le> ?t) = ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_var 1))),
    ("SetIntervalStep.iprev_cut_ge_fix",
     "iprev ?n ?I < ?t ==> iprev ?n (?I \<down>\<ge> ?t) = ?n",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 2))),
    ("SetIntervalStep.inext_cut_less_fix",
     "?t <= inext ?n ?I ==> inext ?n (?I \<down>< ?t) = ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_var 1))),
    ("SetIntervalStep.iprev_cut_greater_fix",
     "iprev ?n ?I <= ?t ==> iprev ?n (?I \<down>> ?t) = ?n",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 2))),
    ("SetIntervalStep.iprev_fix_iff",
     "(?n ~: ?I | iMin ?I = ?n) = (iprev ?n ?I = ?n)",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_var 1))
           ),
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("SetIntervalStep.inext_image2",
     "strict_mono ?f ==> inext (?f ?n) (?f ` ?I) = ?f (inext ?n ?I)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_var 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("SetIntervalStep.iprev_image2",
     "strict_mono ?f ==> iprev (?f ?n) (?f ` ?I) = ?f (iprev ?n ?I)",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 2, template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_var 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("SetIntervalStep.inext_nth_gr_Min_conv_infinite",
     "infinite ?I ==> (iMin ?I < ?I \<rightarrow> ?n) = (0 < ?n)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 0),
           template_var 0)))),
    ("SetIntervalStep.inext_neq_iMin",
     "EX x:?I. ?n < x ==> inext ?n ?I ~= iMin ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SetIntervalStep.inext_nth_card_less_Max'",
     "?n < card ?I - Suc 0 ==> ?I \<rightarrow> ?n < Max ?I",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 0)),
            template_app (template_hole 3, template_hole 2)))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalStep.iprev_nth_closed",
     "[| finite ?I; ?I ~= {} |] ==> ?I \<leftarrow> ?n : ?I",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 1)
           ))),
    ("SetIntervalStep.inext_ge_Max",
     "[| finite ?I; Max ?I <= ?n |] ==> inext ?n ?I = ?n",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("SetIntervalStep.subset_inext_closed",
     "[| ?n : ?B; ?A <= ?B |] ==> inext ?n ?A : ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("SetIntervalStep.subset_iprev_closed",
     "[| ?n : ?B; ?A <= ?B |] ==> iprev ?n ?A : ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("SetIntervalStep.inext_mono2_infin",
     "[| ?n : ?I; infinite ?I |] ==> ?n < inext ?n ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.subset_inext_in_imp_in",
     "[| inext ?n ?A : ?B; ?A <= ?B |] ==> ?n : ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("SetIntervalStep.subset_iprev_in_imp_in",
     "[| iprev ?n ?A : ?B; ?A <= ?B |] ==> ?n : ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), template_var 0)
           ))),
    ("SetIntervalStep.inext_nth_surj_aux1",
     "{x: ?I. \<nexists>n. ?I \<rightarrow> n = x} = {}",
     template_equation
      (template_app (template_hole 7, t_empty), template_hole 0)),
    ("SetIntervalStep.inext_nth_mono2_infin",
     "infinite ?I ==>
      (?I \<rightarrow> ?a < ?I \<rightarrow> ?b) = (?a < ?b)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.iprev_cut_greater_conv",
     "?t < iprev ?n ?I ==> iprev ?n (?I \<down>> ?t) = iprev ?n ?I",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.inext_cut_less_conv",
     "inext ?n ?I < ?t ==> inext ?n (?I \<down>< ?t) = inext ?n ?I",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 1)))),
    ("SetIntervalStep.inext_nth_cut_less_conv",
     "?I \<rightarrow> ?n < ?t ==>
      ?I \<down>< ?t \<rightarrow> ?n = ?I \<rightarrow> ?n",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 1)))),
    ("SetIntervalStep.iprev_cut_ge_conv",
     "?t <= iprev ?n ?I ==> iprev ?n (?I \<down>\<ge> ?t) = iprev ?n ?I",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.inext_cut_le_conv",
     "inext ?n ?I <= ?t ==> inext ?n (?I \<down>\<le> ?t) = inext ?n ?I",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 1)))),
    ("SetIntervalStep.inext_neq_imp_Max",
     "?n ~= inext ?n ?I ==> ?n < Max ?I | infinite ?I",
     template_implication
      ([template_negation
         (
            template_equation
             (template_var 1,
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 1, template_var 0))),
             template_app
              (template_hole 6,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SetIntervalStep.in_imp_ex_iprev_nth",
     "[| finite ?I; ?x : ?I |] ==> EX n. ?x = ?I \<leftarrow> n",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("SetIntervalStep.inext_min_step",
     "[| ?n < ?k; ?k < inext ?n ?I |] ==> ?k ~: ?I",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)
               )
           ))),
    ("SetIntervalStep.iprev_min_step",
     "[| iprev ?n ?I < ?k; ?k < ?n |] ==> ?k ~: ?I",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_var 0),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)
               )
           ))),
    ("SetIntervalStep.inext_nth_cut_less_eq",
     "?n < card (?I \<down>< ?t) ==>
      ?I \<down>< ?t \<rightarrow> ?n = ?I \<rightarrow> ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("SetIntervalStep.iprev_mono2_if_neq_iMin",
     "[| ?n : ?I; iMin ?I ~= ?n |] ==> iprev ?n ?I < ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("SetIntervalStep.inext_eq_infin",
     "[| inext ?a ?I = inext ?b ?I; infinite ?I |] ==> ?a = ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 1)),
        template_negation
         (
            template_predicate
             (template_app (template_hole 0, template_var 1))
            )],
       template_equation (template_var 2, template_var 0))),
    ("SetIntervalStep.inext_less_conv",
     "(?n : ?I & (?n < Max ?I | infinite ?I)) = (?n < inext ?n ?I)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app (template_hole 3, template_var 0))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)))),
       template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.inext_fix_iff",
     "(?n ~: ?I | finite ?I & Max ?I = ?n) = (inext ?n ?I = ?n)",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_var 1)))
           ),
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("SetIntervalStep.remove_Min_inext_nth_Suc_conv_infinite",
     "infinite ?I ==>
      (?I - {iMin ?I}) \<rightarrow> ?n = ?I \<rightarrow> Suc ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 1)),
                 template_hole 1))),
           template_var 0),
         template_app
          (template_app (template_hole 5, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("SetIntervalStep.cut_less_inext_nth_card_eq1",
     "?n < card ?I | infinite ?I ==>
      card (?I \<down>< (?I \<rightarrow> ?n)) = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app (template_hole 5, template_var 0))),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         template_var 1))),
    ("SetIntervalStep.inext_nth_Suc_mono2",
     "EX x:?I. ?I \<rightarrow> ?n < x ==>
      ?I \<rightarrow> ?n < ?I \<rightarrow> Suc ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("SetIntervalStep.iprev_inext",
     "?n ~= Max ?I | infinite ?I ==> iprev (inext ?n ?I) ?I = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_app (template_hole 3, template_var 0)))),
              template_app
               (template_hole 5,
                template_app (template_hole 2, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 0),
         template_var 1))),
    ("SetIntervalStep.iprev_inext_fin",
     "[| finite ?I; ?n ~= Max ?I |] ==> iprev (inext ?n ?I) ?I = ?n",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1),
         template_var 0))),
    ("SetIntervalStep.inext_atLeastAtMost",
     "[| ?m <= ?t; ?t < ?n |] ==> inext ?t {?m..?n} = Suc ?t",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("SetIntervalStep.iprev_atLeastAtMost'",
     "[| ?m <= ?t; ?t < ?n |] ==> iprev (Suc ?t) {?m..?n} = ?t",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("SetIntervalStep.iprev_mono2",
     "[| ?n : ?I; EX x:?I. x < ?n |] ==> iprev ?n ?I < ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("SetIntervalStep.inext_mono2",
     "[| ?n : ?I; EX x:?I. ?n < x |] ==> ?n < inext ?n ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0), t_empty)
            )],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.inext_nth_cut_ge_inext_nth",
     "?I ~= {} ==>
      ?I \<down>\<ge> (?I \<rightarrow> ?a) \<rightarrow> ?b =
      ?I \<rightarrow> (?a + ?b)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1))),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("SetIntervalStep.inext_iprev_nth_Suc",
     "iMin ?I ~= ?I \<leftarrow> ?n ==>
      inext (?I \<leftarrow> Suc ?n) ?I = ?I \<leftarrow> ?n",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_app (template_hole 0, template_var 0))),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.cut_le_inext_nth_card_eq1",
     "?n < card ?I | infinite ?I ==>
      card (?I \<down>\<le> (?I \<rightarrow> ?n)) = Suc ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_app (template_hole 6, template_var 0))),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_app (template_hole 0, template_var 1)))),
    ("SetIntervalStep.iprev_neq_Max",
     "[| finite ?I; EX x:?I. x < ?n |] ==> iprev ?n ?I ~= Max ?I",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SetIntervalStep.cut_le_inext_nth_card_if",
     "card (?I \<down>\<le> (?I \<rightarrow> ?n)) =
      (if ?n < card ?I | infinite ?I then Suc ?n else card ?I)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_app (template_hole 8, template_var 1))),
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)))),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 8, template_var 1)))),
    ("SetIntervalStep.iprev_nth_surj_aux1",
     "finite ?I ==> {x: ?I. \<nexists>n. ?I \<leftarrow> n = x} = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_equation
        (template_app (template_hole 7, t_empty), template_hole 0))),
    ("SetIntervalStep.remove_Min_inext_nth_Suc_conv_finite",
     "Suc 0 < card ?I ==>
      (?I - {iMin ?I}) \<rightarrow> ?n = ?I \<rightarrow> Suc ?n",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 8, template_hole 7),
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_hole 0))),
           template_var 0),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 8, template_var 0))))),
    ("SetIntervalStep.inext_nth_less_less_card_conv",
     "?I \<down>\<ge> ?t ~= {} ==>
      (?I \<rightarrow> ?n < ?t) = (?n < card (?I \<down>< ?t))",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_hole 5)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)))))),
    ("SetIntervalStep.inext_nth_imirror_iprev_nth_conv",
     "[| finite ?I; ?I ~= {} |]
      ==> imirror ?I \<rightarrow> ?n =
          mirror_elem (?I \<leftarrow> ?n) ?I",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1)))),
    ("SetIntervalStep.iprev_nth_imirror_inext_nth_conv",
     "[| finite ?I; ?I ~= {} |]
      ==> imirror ?I \<leftarrow> ?n =
          mirror_elem (?I \<rightarrow> ?n) ?I",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 1)))),
    ("SetIntervalStep.iprev_nth_imirror_inext_nth_conv2",
     "[| finite ?I; ?I ~= {} |]
      ==> mirror_elem (imirror ?I \<rightarrow> ?n) ?I =
          ?I \<leftarrow> ?n",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.inext_nth_imirror_iprev_nth_conv2",
     "[| finite ?I; ?I ~= {} |]
      ==> mirror_elem (imirror ?I \<leftarrow> ?n) ?I =
          ?I \<rightarrow> ?n",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.inext_nth_card_Max_aux'",
     "[| finite ?I; ?I ~= {} |]
      ==> ?I \<rightarrow> (card ?I - Suc 0) = Max ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 7))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app (template_hole 2, template_hole 1))),
         template_app (template_hole 0, template_var 0)))),
    ("SetIntervalStep.cut_le_inext_nth_card_eq2",
     "[| finite ?I; card ?I <= Suc ?n |]
      ==> card (?I \<down>\<le> (?I \<rightarrow> ?n)) = card ?I",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app (template_hole 4, template_var 1)))),
    ("SetIntervalStep.iprev_atLeastAtMost",
     "[| ?m < ?t; ?t <= ?n |] ==> iprev ?t {?m..?n} = ?t - Suc 0",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_hole 0))))),
    ("SetIntervalStep.less_imp_inext_le",
     "[| ?a < ?b; ?a : ?I; ?b : ?I |] ==> inext ?a ?I <= ?b",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("SetIntervalStep.greater_imp_iprev_ge",
     "[| ?b < ?a; ?a : ?I; ?b : ?I |] ==> ?b <= iprev ?a ?I",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_var 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.inext_nth_mono2",
     "EX x:?I. ?I \<rightarrow> ?a < x ==>
      (?I \<rightarrow> ?a < ?I \<rightarrow> ?b) = (?a < ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.inext_imirror_iprev_conv'",
     "[| finite ?I; ?n : ?I |]
      ==> inext (mirror_elem ?n ?I) (imirror ?I) =
          mirror_elem (iprev ?n ?I) ?I",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1)))),
    ("SetIntervalStep.iprev_imirror_inext_conv'",
     "[| finite ?I; ?n : ?I |]
      ==> iprev (mirror_elem ?n ?I) (imirror ?I) =
          mirror_elem (inext ?n ?I) ?I",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1)))),
    ("SetIntervalStep.inext_image",
     "[| ?n : ?I; SetInterval2.strict_mono_on ?f ?I |]
      ==> inext (?f ?n) (?f ` ?I) = ?f (inext ?n ?I)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 0, template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_var 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1))))),
    ("SetIntervalStep.iprev_image",
     "[| ?n : ?I; SetInterval2.strict_mono_on ?f ?I |]
      ==> iprev (?f ?n) (?f ` ?I) = ?f (iprev ?n ?I)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 0, template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_var 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1))))),
    ("SetIntervalStep.inext_mono2_infin_fin",
     "[| ?n : ?I; ?n ~= Max ?I | infinite ?I |] ==> ?n < inext ?n ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_app (template_hole 3, template_var 0)))),
              template_app
               (template_hole 5,
                template_app (template_hole 2, template_var 0)))
            )],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.cut_ge_greater_iprev_conv",
     "[| ?t : ?I; ?t ~= iMin ?I |]
      ==> ?I \<down>\<ge> ?t = ?I \<down>> iprev ?t ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("SetIntervalStep.cut_less_le_iprev_conv",
     "[| ?t : ?I; ?t ~= iMin ?I |]
      ==> ?I \<down>< ?t = ?I \<down>\<le> iprev ?t ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("SetIntervalStep.inext_nth_image",
     "[| ?I ~= {}; SetInterval2.strict_mono_on ?f ?I |]
      ==> (?f ` ?I) \<rightarrow> ?n = ?f (?I \<rightarrow> ?n)",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_var 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("SetIntervalStep.inext_neq_iMin_not_card_1",
     "[| ?I ~= {}; card ?I ~= Suc 0 |] ==> inext ?n ?I ~= iMin ?I",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_hole 2))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SetIntervalStep.inext_nth_atLeastAtMost",
     "[| ?a <= ?n - ?m; ?m <= ?n |]
      ==> {?m..?n} \<rightarrow> ?a = ?m + ?a",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("SetIntervalStep.iprev_nth_atLeastAtMost",
     "[| ?a <= ?n - ?m; ?m <= ?n |] ==> {?m..?n} \<leftarrow> ?a = ?n - ?a",
     template_implication
      ([template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 0)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 2)))),
    ("SetIntervalStep.inext_mono2_fin",
     "[| ?n : ?I; finite ?I; ?n ~= Max ?I |] ==> ?n < inext ?n ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 2, template_var 0))
            )],
       template_inequation
        (less_than, template_var 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.cut_less_inext_nth_card_if",
     "card (?I \<down>< (?I \<rightarrow> ?n)) =
      (if ?n < card ?I | infinite ?I then ?n else card ?I - Suc 0)",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app (template_hole 9, template_var 1),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app (template_hole 10, template_var 1))),
               template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 1)))),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 10, template_var 1)),
           template_app (template_hole 1, template_hole 0))))),
    ("SetIntervalStep.iprev_nth_Suc_mono2",
     "[| finite ?I; EX x:?I. x < ?I \<leftarrow> ?n |]
      ==> ?I \<leftarrow> Suc ?n < ?I \<leftarrow> ?n",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.neq_Max_imp_inext_gr_iMin",
     "[| ?t : ?I; ?t ~= Max ?I | infinite ?I |] ==> iMin ?I < inext ?t ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 1),
                    template_app (template_hole 4, template_var 0)))),
              template_app
               (template_hole 6,
                template_app (template_hole 3, template_var 0)))
            )],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.remove_iMin_eq",
     "[| ?I ~= {}; ?n ~= iMin ?I |] ==> iMin (?I - {?n}) = iMin ?I",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 4))),
         template_app (template_hole 2, template_var 1)))),
    ("SetIntervalStep.inext_nth_insert_Suc",
     "[| ?I ~= {}; ?a < iMin ?I |]
      ==> insert ?a ?I \<rightarrow> Suc ?n = ?I \<rightarrow> ?n",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("SetIntervalStep.inext_nth_card_append_eq1",
     "[| Max ?A < iMin ?B; ?n < card ?A |]
      ==> (?A Un ?B) \<rightarrow> ?n = ?A \<rightarrow> ?n",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("SetIntervalStep.inext_le_mono",
     "[| ?a <= ?b; ?a : ?I; ?b : ?I |] ==> inext ?a ?I <= inext ?b ?I",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.iprev_le_mono",
     "[| ?a <= ?b; ?a : ?I; ?b : ?I |] ==> iprev ?a ?I <= iprev ?b ?I",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.inext_less_mono_rev",
     "[| inext ?a ?I < inext ?b ?I; ?a : ?I; ?b : ?I |] ==> ?a < ?b",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("SetIntervalStep.iprev_less_mono_rev",
     "[| iprev ?a ?I < iprev ?b ?I; ?a : ?I; ?b : ?I |] ==> ?a < ?b",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("SetIntervalStep.iprev_inext_nth_Suc",
     "?I \<rightarrow> ?n ~= Max ?I | infinite ?I ==>
      iprev (?I \<rightarrow> Suc ?n) ?I = ?I \<rightarrow> ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app (template_hole 4, template_var 1),
                        template_var 0)),
                    template_app (template_hole 3, template_var 1)))),
              template_app
               (template_hole 6,
                template_app (template_hole 2, template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app (template_hole 0, template_var 0))),
           template_var 1),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.Max_le_iMin_conv_singleton",
     "[| finite ?I; ?I ~= {} |] ==> (Max ?I <= iMin ?I) = (EX x. ?I = {x})",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, t_empty)))),
    ("SetIntervalStep.cut_less_inext_nth_card_eq2",
     "[| finite ?I; card ?I <= Suc ?n |]
      ==> card (?I \<down>< (?I \<rightarrow> ?n)) = card ?I - Suc 0",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 6, template_var 1)),
           template_app (template_hole 5, template_hole 0))))),
    ("SetIntervalStep.neq_Max_imp_inext_neq_iMin",
     "[| ?t : ?I; ?t ~= Max ?I | infinite ?I |] ==> inext ?t ?I ~= iMin ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_app (template_hole 3, template_var 0)))),
              template_app
               (template_hole 5,
                template_app (template_hole 2, template_var 0)))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_app (template_hole 0, template_var 0))
           ))),
    ("SetIntervalStep.inext_neq_iMin_not_singleton",
     "[| ?I ~= {}; \<nexists>a. ?I = {a} |] ==> inext ?n ?I ~= iMin ?I",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_negation
         (template_predicate (template_app (template_hole 4, t_empty)))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SetIntervalStep.Max_le_iMin_imp_singleton",
     "[| finite ?I; ?I ~= {}; Max ?I <= iMin ?I |] ==> ?I = {iMin ?I}",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 0),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)),
           template_hole 4)))),
    ("SetIntervalStep.inext_nth_card_Max",
     "[| finite ?I; ?I ~= {}; card ?I <= Suc ?n |]
      ==> ?I \<rightarrow> ?n = Max ?I",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("SetIntervalStep.iprev_nth_card_iMin",
     "[| finite ?I; ?I ~= {}; card ?I <= Suc ?n |]
      ==> ?I \<leftarrow> ?n = iMin ?I",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("SetIntervalStep.inext_nth_eq_Min_conv",
     "?I ~= {} ==>
      (?I \<rightarrow> ?n = iMin ?I) = (?n = 0 | (EX a. ?I = {a}))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 8))],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0),
           template_app (template_hole 4, template_var 1)),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_hole 2)),
               template_app (template_hole 1, t_empty))
             )))),
    ("SetIntervalStep.remove_Min_inext_nth_Suc_conv",
     "Suc 0 < card ?I | infinite ?I ==>
      (?I - {iMin ?I}) \<rightarrow> ?n = ?I \<rightarrow> Suc ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_hole 9)),
                  template_app (template_hole 8, template_var 1))),
              template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_hole 0))),
           template_var 0),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 10, template_var 0))))),
    ("SetIntervalStep.iprev_insert_le_iMin",
     "[| finite ?I; ?I ~= {}; ?a <= iMin ?I |]
      ==> iprev (iMin ?I) (insert ?a ?I) = ?a",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_inequation
         (less_equals, template_var 0,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("SetIntervalStep.inext_insert_ge_Max",
     "[| finite ?I; ?I ~= {}; Max ?I <= ?a |]
      ==> inext (Max ?I) (insert ?a ?I) = ?a",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_inequation
         (less_equals, template_app (template_hole 3, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("SetIntervalStep.inext_nth_gr_Min_conv",
     "?I ~= {} ==>
      (iMin ?I < ?I \<rightarrow> ?n) = (0 < ?n & (\<nexists>a. ?I = {a}))",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 8))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 6, template_hole 2),
               template_var 0)),
           template_app
            (template_hole 10, template_app (template_hole 1, t_empty)))))),
    ("SetIntervalStep.inext_imirror_iprev_conv",
     "[| finite ?I; ?n <= iMin ?I + Max ?I |]
      ==> inext (mirror_elem ?n ?I) (imirror ?I) =
          mirror_elem (iprev ?n ?I) ?I",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1)),
            template_app (template_hole 5, template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1)))),
    ("SetIntervalStep.iprev_imirror_inext_conv",
     "[| finite ?I; ?n <= iMin ?I + Max ?I |]
      ==> iprev (mirror_elem ?n ?I) (imirror ?I) =
          mirror_elem (inext ?n ?I) ?I",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1)),
            template_app (template_hole 5, template_var 1)))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 1)))),
    ("SetIntervalStep.iprev_nth_mono2",
     "[| finite ?I; EX x:?I. x < ?I \<leftarrow> ?a |]
      ==> (?I \<leftarrow> ?b < ?I \<leftarrow> ?a) = (?a < ?b)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.cut_greater_ge_inext_conv",
     "[| ?t : ?I; ?t ~= Max ?I | infinite ?I |]
      ==> ?I \<down>> ?t = ?I \<down>\<ge> inext ?t ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_app (template_hole 5, template_var 0)))),
              template_app
               (template_hole 7,
                template_app (template_hole 4, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("SetIntervalStep.cut_le_less_inext_conv",
     "[| ?t : ?I; ?t ~= Max ?I | infinite ?I |]
      ==> ?I \<down>\<le> ?t = ?I \<down>< inext ?t ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_app (template_hole 5, template_var 0)))),
              template_app
               (template_hole 7,
                template_app (template_hole 4, template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("SetIntervalStep.iprev_nth_image",
     "[| finite ?I; ?I ~= {}; SetInterval2.strict_mono_on ?f ?I |]
      ==> (?f ` ?I) \<leftarrow> ?n = ?f (?I \<leftarrow> ?n)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_var 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("SetIntervalStep.iprev_neq_Max_not_card_1",
     "[| finite ?I; ?I ~= {}; card ?I ~= Suc 0 |]
      ==> iprev ?n ?I ~= Max ?I",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_negation
         (
            template_equation
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_hole 2))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SetIntervalStep.inext_nth_card_Max'",
     "[| finite ?I; ?I ~= {}; card ?I - Suc 0 <= ?n |]
      ==> ?I \<rightarrow> ?n = Max ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1)),
            template_app (template_hole 4, template_hole 3)),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("SetIntervalStep.iprev_nth_card_iMin'",
     "[| finite ?I; ?I ~= {}; card ?I - Suc 0 <= ?n |]
      ==> ?I \<leftarrow> ?n = iMin ?I",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1)),
            template_app (template_hole 4, template_hole 3)),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("SetIntervalStep.iprev_nth_iMin_fix",
     "[| ?I ~= {}; ?I \<leftarrow> ?a = iMin ?I; ?a <= ?b |]
      ==> ?I \<leftarrow> ?b = iMin ?I",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 0),
         template_app (template_hole 1, template_var 2)))),
    ("SetIntervalStep.remove_Max_eq",
     "[| finite ?I; ?I ~= {}; ?n ~= Max ?I |] ==> Max (?I - {?n}) = Max ?I",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 4))),
         template_app (template_hole 2, template_var 1)))),
    ("SetIntervalStep.remove_Min_eq",
     "[| finite ?I; ?I ~= {}; ?n ~= Min ?I |] ==> Min (?I - {?n}) = Min ?I",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_hole 4))),
         template_app (template_hole 2, template_var 1)))),
    ("SetIntervalStep.inext_nth_card_append_eq3",
     "[| finite ?A; ?B ~= {}; Max ?A < iMin ?B |]
      ==> (?A Un ?B) \<rightarrow> card ?A = iMin ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_hole 7)),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 4, template_var 0)))),
    ("SetIntervalStep.set_restriction_inext_eq",
     "[| set_restriction ?interval_fun; ?n : ?interval_fun ?I;
         inext ?n ?I : ?interval_fun ?I |]
      ==> inext ?n (?interval_fun ?I) = inext ?n ?I",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_var 2, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_app (template_var 2, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_var 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.iprev_eq_if_neq_iMin",
     "[| iprev ?a ?I = iprev ?b ?I; iMin ?I ~= ?a; iMin ?I ~= ?b |]
      ==> ?a = ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 1)),
        template_negation
         (
            template_equation
             (template_app (template_hole 0, template_var 1),
              template_var 2)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_equation (template_var 2, template_var 0))),
    ("SetIntervalStep.iprev_neq_Max_not_singleton",
     "[| finite ?I; ?I ~= {}; \<nexists>a. ?I = {a} |]
      ==> iprev ?n ?I ~= Max ?I",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_negation
         (template_predicate (template_app (template_hole 4, t_empty)))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_app (template_hole 0, template_var 1))
           ))),
    ("SetIntervalStep.inext_less_mono_infin",
     "[| ?a < ?b; ?a : ?I; ?b : ?I; infinite ?I |]
      ==> inext ?a ?I < inext ?b ?I",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 0))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.inext_le_mono_infin_rev",
     "[| inext ?a ?I <= inext ?b ?I; ?a : ?I; ?b : ?I; infinite ?I |]
      ==> ?a <= ?b",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_hole 0, template_var 1))
            )],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("SetIntervalStep.iprev_inext_nth_pred",
     "?I \<rightarrow> (?n - Suc 0) ~= Max ?I | infinite ?I ==>
      iprev (?I \<rightarrow> ?n) ?I = ?I \<rightarrow> (?n - Suc 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 1),
                        template_app
                         (template_app (template_hole 5, template_var 0),
                          template_app
                           (template_hole 4, template_hole 3)))),
                    template_app (template_hole 2, template_var 1)))),
              template_app
               (template_hole 8,
                template_app (template_hole 1, template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_app (template_hole 4, template_hole 3)))))),
    ("SetIntervalStep.inext_iprev_nth_pred",
     "[| finite ?I; iMin ?I ~= ?I \<leftarrow> (?n - Suc 0) |]
      ==> inext (?I \<leftarrow> ?n) ?I = ?I \<leftarrow> (?n - Suc 0)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (
            template_equation
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_app (template_hole 2, template_hole 1))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 2, template_hole 1)))))),
    ("SetIntervalStep.inext_eq",
     "[| inext ?a ?I = inext ?b ?I; EX x:?I. ?a < x; EX x:?I. ?b < x |]
      ==> ?a = ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1), t_empty)
            )],
       template_equation (template_var 2, template_var 0))),
    ("SetIntervalStep.iprev_eq",
     "[| iprev ?a ?I = iprev ?b ?I; EX x:?I. x < ?a; EX x:?I. x < ?b |]
      ==> ?a = ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1), t_empty)
            )],
       template_equation (template_var 2, template_var 0))),
    ("SetIntervalStep.inext_eq_infin_fin",
     "[| inext ?a ?I = inext ?b ?I;
         ?a ~= Max ?I & ?b ~= Max ?I | infinite ?I |]
      ==> ?a = ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 5, template_var 0),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 6, template_var 2),
                        template_app (template_hole 1, template_var 1)))),
                  template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 6, template_var 0),
                      template_app (template_hole 1, template_var 1))))),
              template_app
               (template_hole 2,
                template_app (template_hole 0, template_var 1)))
            )],
       template_equation (template_var 2, template_var 0))),
    ("SetIntervalStep.inext_induct",
     "[| ?P (iMin ?I); !!n. [| n : ?I; ?P n |] ==> ?P (inext n ?I);
         ?n : ?I |]
      ==> ?P ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 2,
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_var 2, template_var 0)))),
    ("SetIntervalStep.inext_nth_Max_fix",
     "[| finite ?I; ?I ~= {}; ?I \<rightarrow> ?a = Max ?I; ?a <= ?b |]
      ==> ?I \<rightarrow> ?b = Max ?I",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 4)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 2)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 0),
         template_app (template_hole 1, template_var 2)))),
    ("SetIntervalStep.iprev_less_mono_if_neq_iMin",
     "[| ?a < ?b; ?a : ?I; ?b : ?I; iMin ?I ~= ?a |]
      ==> iprev ?a ?I < iprev ?b ?I",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.iprev_less_mono",
     "[| ?a < ?b; ?a : ?I; ?b : ?I; EX x:?I. x < ?a |]
      ==> iprev ?a ?I < iprev ?b ?I",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0), t_empty)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.inext_less_mono",
     "[| ?a < ?b; ?a : ?I; ?b : ?I; EX x:?I. ?b < x |]
      ==> inext ?a ?I < inext ?b ?I",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0), t_empty)
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.inext_eq_fin",
     "[| inext ?a ?I = inext ?b ?I; finite ?I; ?a ~= Max ?I; ?b ~= Max ?I |]
      ==> ?a = ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_var 1)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_negation
         (
            template_equation
             (template_var 2,
              template_app (template_hole 0, template_var 1))
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 0, template_var 1))
            )],
       template_equation (template_var 2, template_var 0))),
    ("SetIntervalStep.set_restriction_inext_singleton_eq",
     "[| set_restriction ?interval_fun; ?n : ?interval_fun ?I;
         inext ?n ?I : ?interval_fun ?I |]
      ==> {inext ?n (?interval_fun ?I)} = ?interval_fun {inext ?n ?I}",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_var 2, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app (template_var 2, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app (template_var 2, template_var 0))),
           template_hole 0),
         template_app
          (template_var 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_hole 0))))),
    ("SetIntervalStep.nat_Suc_predicate_change_exists",
     "[| ?a <= ?b; ~ ?P ?a; ?P ?b |]
      ==> EX n>=?a. n < ?b & ~ ?P n & ?P (Suc n)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 2))
            ),
        template_predicate (template_app (template_var 0, template_var 1))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("SetIntervalStep.iprev_le_mono_rev",
     "[| iprev ?a ?I <= iprev ?b ?I; ?a : ?I; ?b : ?I;
         iMin ?I ~= iprev ?b ?I |]
      ==> ?a <= ?b",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 4, template_var 0),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 0, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 1))
            )],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("SetIntervalStep.inext_append_eq3",
     "[| finite ?A; ?A ~= {}; ?B ~= {}; Max ?A < iMin ?B |]
      ==> inext (Max ?A) (?A Un ?B) = iMin ?B",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_negation
         (template_equation (template_var 0, template_hole 6)),
        template_inequation
         (less_than, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 4, template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 3, template_var 0)))),
    ("SetIntervalStep.iprev_append_eq3",
     "[| finite ?A; ?A ~= {}; ?B ~= {}; Max ?A < iMin ?B |]
      ==> iprev (iMin ?B) (?A Un ?B) = Max ?A",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 6)),
        template_negation
         (template_equation (template_var 0, template_hole 6)),
        template_inequation
         (less_than, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 4, template_var 1)))),
    ("SetIntervalStep.inext_le_mono_rev",
     "[| inext ?a ?I <= inext ?b ?I; ?a : ?I; ?b : ?I;
         EX x:?I. inext ?a ?I < x |]
      ==> ?a <= ?b",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 3, template_var 0),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1), t_empty)
            )],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("SetIntervalStep.nat_pred_predicate_change_exists",
     "[| ?a <= ?b; ~ ?P ?b; ?P ?a |]
      ==> EX n<=?b. ?a < n & ~ ?P n & ?P (n - Suc 0)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 1))
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("SetIntervalStep.inext_less_mono_infin_fin",
     "[| ?a < ?b; ?a : ?I; ?b : ?I; ?b ~= Max ?I | infinite ?I |]
      ==> inext ?a ?I < inext ?b ?I",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_app (template_hole 2, template_var 0)))),
              template_app
               (template_hole 4,
                template_app (template_hole 1, template_var 0)))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.min_step_inext2",
     "[| ?x < ?y; ?x : ?I; ?y : ?I; ~ (EX k:?I. ?x < k & k < ?y) |]
      ==> inext ?x ?I = ?y",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 0), t_empty)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("SetIntervalStep.min_step_iprev2",
     "[| ?x < ?y; ?x : ?I; ?y : ?I; ~ (EX k:?I. ?x < k & k < ?y) |]
      ==> iprev ?y ?I = ?x",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 0), t_empty)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("SetIntervalStep.iprev_induct",
     "[| ?P (Max ?I); !!n. [| n : ?I; ?P n |] ==> ?P (iprev n ?I);
         finite ?I; ?n : ?I |]
      ==> ?P ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 2,
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 0, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_var 2, template_var 0)))),
    ("SetIntervalStep.inext_less_mono_fin",
     "[| ?a < ?b; ?a : ?I; ?b : ?I; finite ?I; ?b ~= Max ?I |]
      ==> inext ?a ?I < inext ?b ?I",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 1, template_var 0))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetIntervalStep.inext_nth_append_eq1",
     "[| finite ?A; ?A ~= {}; Max ?A < iMin ?B;
         ?A \<rightarrow> ?n ~= Max ?A |]
      ==> (?A Un ?B) \<rightarrow> ?n = ?A \<rightarrow> ?n",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 6)),
        template_inequation
         (less_than, template_app (template_hole 4, template_var 2),
          template_app (template_hole 3, template_var 1)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("SetIntervalStep.inext_le_mono_infin_fin_rev",
     "[| inext ?a ?I <= inext ?b ?I; ?a : ?I; ?b : ?I;
         inext ?a ?I ~= Max ?I | infinite ?I |]
      ==> ?a <= ?b",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 6, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_hole 3,
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 6, template_var 2),
                        template_var 1)),
                    template_app (template_hole 1, template_var 1)))),
              template_app
               (template_hole 3,
                template_app (template_hole 0, template_var 1)))
            )],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("SetIntervalStep.inext_le_mono_fin_rev",
     "[| inext ?a ?I <= inext ?b ?I; ?a : ?I; ?b : ?I; finite ?I;
         inext ?a ?I ~= Max ?I |]
      ==> ?a <= ?b",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 5, template_var 0),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_app (template_hole 0, template_var 1))
            )],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("SetIntervalStep.iprev_append_eq1",
     "[| finite ?A; ?A ~= {}; ?B ~= {}; Max ?A < iMin ?B; ?n : ?A |]
      ==> iprev ?n (?A Un ?B) = iprev ?n ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 7)),
        template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("SetIntervalStep.inext_append_eq2",
     "[| finite ?A; ?A ~= {}; ?B ~= {}; Max ?A < iMin ?B; ?n : ?B |]
      ==> inext ?n (?A Un ?B) = inext ?n ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 7)),
        template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("SetIntervalStep.min_step_inext",
     "[| ?x < ?y; ?x : ?I; ?y : ?I; !!k. [| ?x < k; k < ?y |] ==> k ~: ?I |]
      ==> inext ?x ?I = ?y",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("SetIntervalStep.min_step_iprev",
     "[| ?x < ?y; ?x : ?I; ?y : ?I; !!k. [| ?x < k; k < ?y |] ==> k ~: ?I |]
      ==> iprev ?y ?I = ?x",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 2))),
    ("SetIntervalStep.nat_Suc_predicate_change_exists2",
     "[| ?a <= ?b; ~ ?P ?a; ?P ?b |]
      ==> EX n>=?a. n < ?b & ~ ?P n & (ALL k<=?b. n < k --> ?P k)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 2))
            ),
        template_predicate (template_app (template_var 0, template_var 1))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("SetIntervalStep.nat_pred_predicate_change_exists2",
     "[| ?a <= ?b; ~ ?P ?b; ?P ?a |]
      ==> EX n>?a. n <= ?b & ~ ?P n & (ALL k>=?a. k < n --> ?P k)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 1))
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("SetIntervalStep.inext_nth_card_append_eq2",
     "[| finite ?A; ?A ~= {}; ?B ~= {}; Max ?A < iMin ?B; card ?A <= ?n |]
      ==> (?A Un ?B) \<rightarrow> ?n = ?B \<rightarrow> (?n - card ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 9)),
        template_negation
         (template_equation (template_var 1, template_hole 9)),
        template_inequation
         (less_than, template_app (template_hole 7, template_var 2),
          template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 4, template_var 2)))))),
    ("SetIntervalStep.nat_Suc_predicate_change_exists2_all",
     "[| ?a <= ?b; ~ ?P ?a; ALL k>=?b. ?P k |]
      ==> EX n>=?a. n < ?b & ~ ?P n & (ALL k>n. ?P k)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 2))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("SetIntervalStep.nat_pred_predicate_change_exists2_all",
     "[| ?a <= ?b; ~ ?P ?b; ALL k<=?a. ?P k |]
      ==> EX n>?a. n <= ?b & ~ ?P n & (ALL k<n. ?P k)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 1))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("SetIntervalStep.between_empty_imp_inext_eq",
     "[| ?n : ?A; ?n < inext ?n ?A; ?n : ?B; inext ?n ?A : ?B;
         ?B \<down>> ?n \<down>< inext ?n ?A = {} |]
      ==> inext ?n ?B = inext ?n ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 2,
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 2)),
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)),
          template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_var 1)))),
    ("SetIntervalStep.between_empty_imp_iprev_eq",
     "[| ?n : ?A; iprev ?n ?A < ?n; ?n : ?B; iprev ?n ?A : ?B;
         ?B \<down>> iprev ?n ?A \<down>< ?n = {} |]
      ==> iprev ?n ?B = iprev ?n ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than,
          template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 0),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1))),
            template_var 2),
          template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_var 1)))),
    ("SetIntervalStep.inext_nth_card_append",
     "[| finite ?A; ?A ~= {}; ?B ~= {}; Max ?A < iMin ?B |]
      ==> (?A Un ?B) \<rightarrow> ?n =
          (if ?n < card ?A then ?A \<rightarrow> ?n
           else ?B \<rightarrow> (?n - card ?A))",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 9)),
        template_negation
         (template_equation (template_var 1, template_hole 9)),
        template_inequation
         (less_than, template_app (template_hole 7, template_var 2),
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app (template_hole 1, template_var 2))))))),
    ("SetIntervalStep.inext_predicate_change_exists",
     "[| ?a <= ?b; ?a : ?I; ?b : ?I; ~ ?P ?a; ?P ?b |]
      ==> EX n:?I. ?a <= n & n < ?b & ~ ?P n & ?P (inext n ?I)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 3))
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("SetIntervalStep.iprev_predicate_change_exists",
     "[| ?a <= ?b; ?a : ?I; ?b : ?I; ~ ?P ?b; ?P ?a |]
      ==> EX n:?I. ?a < n & n <= ?b & ~ ?P n & ?P (iprev n ?I)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 2))
            ),
        template_predicate (template_app (template_var 0, template_var 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("SetIntervalStep.inext_append_eq1",
     "[| finite ?A; ?A ~= {}; ?B ~= {}; Max ?A < iMin ?B; ?n : ?A;
         ?n ~= Max ?A |]
      ==> inext ?n (?A Un ?B) = inext ?n ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 7)),
        template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 5, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("SetIntervalStep.iprev_append_eq2",
     "[| finite ?A; ?A ~= {}; ?B ~= {}; Max ?A < iMin ?B; ?n : ?B;
         ?n ~= iMin ?B |]
      ==> iprev ?n (?A Un ?B) = iprev ?n ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 7)),
        template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_inequation
         (less_than, template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("SetIntervalStep.inext_append",
     "[| finite ?A; ?A ~= {}; ?B ~= {}; Max ?A < iMin ?B |]
      ==> inext ?n (?A Un ?B) =
          (if ?n : ?B then inext ?n ?B
           else if ?n = Max ?A then iMin ?B else inext ?n ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_inequation
         (less_than, template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 3, template_var 0),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 1)),
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_app (template_hole 6, template_var 2))),
                   template_app (template_hole 5, template_var 1)),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 2)))
             )))),
    ("SetIntervalStep.iprev_append",
     "[| finite ?A; ?A ~= {}; ?B ~= {}; Max ?A < iMin ?B |]
      ==> iprev ?n (?A Un ?B) =
          (if ?n : ?A then iprev ?n ?A
           else if ?n = iMin ?B then Max ?A else iprev ?n ?B)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_inequation
         (less_than, template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 3, template_var 0),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 2)),
               template_app
                (template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 4, template_var 0),
                       template_app (template_hole 5, template_var 1))),
                   template_app (template_hole 6, template_var 2)),
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 1)))
             )))),
    ("SetIntervalStep.inext_predicate_change_exists_aux",
     "[| ?c = card (?I \<down>\<ge> ?a \<down>< ?b); ?a < ?b; ?a : ?I;
         ?b : ?I; ~ ?P ?a; ?P ?b |]
      ==> EX n:?I \<down>\<ge> ?a \<down>< ?b. ~ ?P n & ?P (inext n ?I)",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_hole 8,
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2)),
              template_var 1))),
        template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 3)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 2))
            ),
        template_predicate (template_app (template_var 0, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 6, template_var 3),
                     template_var 2)),
                 template_var 1)),
             t_empty)
           ))),
    ("SetIntervalStep.inext_predicate_change_exists2_all",
     "[| ?a <= ?b; ?a : ?I; ?b : ?I; ~ ?P ?a;
         ALL k:?I \<down>\<ge> ?b. ?P k |]
      ==> EX n:?I. ?a <= n & n < ?b & ~ ?P n & (ALL k:?I \<down>> n. ?P k)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("SetIntervalStep.iprev_predicate_change_exists2_all",
     "[| ?a <= ?b; ?a : ?I; ?b : ?I; ~ ?P ?b;
         ALL k:?I \<down>\<le> ?a. ?P k |]
      ==> EX n:?I. ?a < n & n <= ?b & ~ ?P n & (ALL k:?I \<down>< n. ?P k)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 3)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("SetIntervalStep.inext_predicate_change_exists2",
     "[| ?a <= ?b; ?a : ?I; ?b : ?I; ~ ?P ?a; ?P ?b |]
      ==> EX n:?I.
             ?a <= n &
             n < ?b & ~ ?P n & (ALL k:?I. n < k & k <= ?b --> ?P k)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 3))
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1), t_empty)
           ))),
    ("SetIntervalStep.iprev_predicate_change_exists2",
     "[| ?a <= ?b; ?a : ?I; ?b : ?I; ~ ?P ?b; ?P ?a |]
      ==> EX n:?I.
             ?a < n &
             n <= ?b & ~ ?P n & (ALL k:?I. ?a <= k & k < n --> ?P k)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (template_app (template_var 0, template_var 2))
            ),
        template_predicate (template_app (template_var 0, template_var 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1), t_empty)
           )))]
