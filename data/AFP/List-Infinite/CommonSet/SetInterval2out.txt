Loading theory "Draft.Util_MinMax" (required by "Draft.SetInterval2MoreTemplates" via "Draft.SetInterval2")
Loading theory "Draft.Util_Nat" (required by "Draft.SetInterval2MoreTemplates" via "Draft.SetInterval2" via "Draft.Util_Div")
Loading theory "Draft.Util_Set" (required by "Draft.SetInterval2MoreTemplates" via "Draft.SetInterval2")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.SetInterval2MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "Draft.Util_MinMax"
### 0.052s elapsed time, 0.241s cpu time, 0.000s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.SetInterval2MoreTemplates" via "Draft.SetInterval2")
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "Draft.Util_Set"
### 0.114s elapsed time, 0.481s cpu time, 0.037s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.SetInterval2MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Library.Function_Algebras"
### 0.120s elapsed time, 0.500s cpu time, 0.037s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.SetInterval2MoreTemplates" via "Draft.SetInterval2" via "Draft.Util_NatInf" via "HOL-Library.Extended_Nat" via "HOL-Library.Countable")
### theory "Draft.Util_Nat"
### 0.146s elapsed time, 0.608s cpu time, 0.037s GC time
Loading theory "Draft.Util_Div" (required by "Draft.SetInterval2MoreTemplates" via "Draft.SetInterval2")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  enumerate :: "'a set => nat => 'a"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Infinite_Set"
### 0.293s elapsed time, 1.145s cpu time, 0.110s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.SetInterval2MoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Nat_Bijection"
### 0.336s elapsed time, 1.321s cpu time, 0.154s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.SetInterval2MoreTemplates" via "Draft.ExtrEqs")
### theory "Draft.Util_Div"
### 0.350s elapsed time, 1.381s cpu time, 0.154s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.SetInterval2MoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.406s elapsed time, 1.596s cpu time, 0.154s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.SetInterval2MoreTemplates" via "Draft.SetInterval2" via "Draft.Util_NatInf" via "HOL-Library.Extended_Nat")
### theory "HOL-Library.Set_Algebras"
### 0.245s elapsed time, 0.952s cpu time, 0.164s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.SetInterval2MoreTemplates" via "Draft.ExtrEqs")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### Additional type variable(s) in locale specification "countable": 'a
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.156s elapsed time, 4.409s cpu time, 0.914s GC time
?m + Suc ?n = Suc (?m + ?n)
?m + 1 = Suc ?m
?b - ?a - Suc 0 = ?b - Suc ?a
(?k * ?m = ?k * ?n) = (?m = ?n | ?k = 0)
(?m * ?k = ?n * ?k) = (?m = ?n | ?k = 0)
0 < ?k ==> (?k * ?m = ?k * ?n) = (?m = ?n)
0 < ?k ==> (?m * ?k = ?n * ?k) = (?m = ?n)
?i + ?j < ?k ==> ?i < ?k
?i + ?j < ?k ==> ?j < ?k
(0 < ?n - ?m) = (?m < ?n)
((0::?'a) < ?b - ?a) = (?a < ?b)
((0::?'a) <= ?b - ?a) = (?a <= ?b)
?a <= ?b ==> ?c <= ?b + ?c - ?a
?k <= ?n ==> ?m + ?k - ?n <= ?m
?k < ?n ==> ?m < ?n + ?m - ?k
[| ?k < ?n; 0 < ?m |] ==> ?m + ?k - ?n < ?m
(?j - ?k <= ?i) = (?j <= ?i + ?k)
?k <= ?j ==> (?i <= ?j - ?k) = (?i + ?k <= ?j)
(?i < ?j - ?k) = (?i + ?k < ?j)
?j - ?k < ?i ==> ?j < ?i + ?k
0 < ?i ==> (?j - ?k < ?i) = (?j < ?i + ?k)
[| ?i <= ?k; ?j <= ?k |] ==> (?k - ?j <= ?i) = (?k - ?i <= ?j)
[| 0 < ?i; ?k - ?i < ?j |] ==> ?k - ?j < ?i
[| 0 < ?i; 0 < ?j |] ==> (?k - ?j < ?i) = (?k - ?i < ?j)
?i < ?j - ?m ==> ?i < ?j
?i <= ?j - ?m ==> ?i <= ?j
[| ?i < ?j - ?m; ?n <= ?m |] ==> ?i < ?j - ?n
[| ?i <= ?j - ?m; ?n <= ?m |] ==> ?i <= ?j - ?n
?j < ?k ==> ?j - ?n < ?k
?j <= ?k ==> ?j - ?n <= ?k
(?m < Suc ?n) = (?m <= ?n)
0 < ?n ==> (?m < ?n) = (?m <= ?n - Suc 0)
?m < ?n ==> ?m <= ?n - Suc 0
[| 0 < ?n; ?m <= ?n - Suc 0 |] ==> ?m < ?n
(Suc ?m <= ?n) = (?m < ?n)
0 < ?m ==> (?m - Suc 0 < ?n) = (?m <= ?n)
?m - Suc 0 < ?n ==> ?m <= ?n
[| 0 < ?m; ?m <= ?n |] ==> ?m - Suc 0 < ?n
[| 0 < ?n; ?n + ?i - ?j = ?n |] ==> ?i = ?j
?n < ?m ==> ?n + (?m - Suc ?n) = ?m - Suc 0
(?k + ?m < ?k + ?n) = (?m < ?n)
(?k + ?m <= ?k + ?n) = (?m <= ?n)
(?b + ?a = ?c + ?a) = (?b = ?c)
(?a + ?b = ?a + ?c) = (?b = ?c)
[| ?k <= ?m; ?k <= ?n |] ==> (?m - ?k = ?n - ?k) = (?m = ?n)
[| ?k <= ?m; ?k <= ?n |] ==> (?m - ?k < ?n - ?k) = (?m < ?n)
[| ?k <= ?m; ?k <= ?n |] ==> (?m - ?k <= ?n - ?k) = (?m <= ?n)
?k - ?m < ?k - ?n ==> ?n < ?m
?n - ?k < ?m - ?k ==> ?n < ?m
[| ?k - ?m <= ?k - ?n; ?m < ?k |] ==> ?n <= ?m
[| ?k - ?m <= ?k - ?n; ?n <= ?k |] ==> ?n <= ?m
[| ?m - ?k <= ?n - ?k; ?k < ?m |] ==> ?m <= ?n
[| ?m - ?k <= ?n - ?k; ?k <= ?n |] ==> ?m <= ?n
[| ?k - ?m = ?k - ?n; ?m < ?k |] ==> ?m = ?n
[| ?k - ?m = ?k - ?n; ?n < ?k |] ==> ?m = ?n
[| ?m - ?k = ?n - ?k; ?k < ?m |] ==> ?m = ?n
[| ?m - ?k = ?n - ?k; ?k < ?n |] ==> ?m = ?n
[| ?k <= ?m; ?k <= ?n |] ==> (?m - ?k = ?n - ?k) = (?m = ?n)
[| ?m <= ?k; ?n <= ?k |] ==> (?k - ?m = ?k - ?n) = (?m = ?n)
(?b + ?a = ?c + ?a) = (?b = ?c)
(?a + ?b = ?a + ?c) = (?b = ?c)
?m <= ?n ==> ?m - ?l <= ?n - ?l
?m = ?n ==> ?m - ?k = ?n - ?k
?b * (?a div ?b) = ?a - ?a mod ?b
(?n mod ?m = 0) = (?n div ?m * ?m = ?n)
?n div ?m * ?m <= ?n
0 < ?m ==> ?n < Suc (?n div ?m) * ?m
?m ~= Suc 0 ==> Suc 0 mod ?m = Suc 0
[| ?m ~= Suc 0; ?P (Suc 0) |] ==> ?P (Suc 0 mod ?m)
?m ~= Suc 0 ==> ?f (Suc 0 mod ?m) = ?f (Suc 0)
### theory "HOL-Library.BigO"
### 1.021s elapsed time, 3.880s cpu time, 0.829s GC time
(Suc ?a mod ?m = Suc ?b mod ?m) = (?a mod ?m = ?b mod ?m)
?a + ?b <= ?n ==>
((?n - ?a) mod ?m = ?b mod ?m) = ((?n - (?a + ?b)) mod ?m = 0)
[| ?a <= ?n; ?b <= ?n |]
==> ((?n - ?a) mod ?m = ?b mod ?m) = ((?n - ?b) mod ?m = ?a mod ?m)
((?a + ?k) mod ?m = (?b + ?k) mod ?m) = (?a mod ?m = ?b mod ?m)
?k <= ?a ==> ((?a - ?k) mod ?m = ?b mod ?m) = (?a mod ?m = (?b + ?k) mod ?m)
[| ?a <= ?b; ?b mod ?m < ?a mod ?m |] ==> ?a div ?m < ?b div ?m
?a <= ?b ==> (?b - ?a) mod ?m = (?b - ?a mod ?m) mod ?m
[| ?x mod ?m = ?y mod ?m; ?x <= ?t; ?y <= ?t |]
==> (?t - ?x) mod ?m = (?t - ?y) mod ?m
(?a mod ?c + ?b mod ?c) mod ?c = (?a + ?b) mod ?c
(?a + ?b) mod ?m =
(if ?a mod ?m + ?b mod ?m < ?m then ?a mod ?m + ?b mod ?m
 else ?a mod ?m + ?b mod ?m - ?m)
(?m + ?b mod ?m - ?a mod ?m) mod ?m =
(if ?a mod ?m <= ?b mod ?m then ?b mod ?m - ?a mod ?m
 else ?m + ?b mod ?m - ?a mod ?m)
?a mod ?m <= ?b mod ?m ==>
(?m + ?b mod ?m - ?a mod ?m) mod ?m = ?b mod ?m - ?a mod ?m
?b mod ?m < ?a mod ?m ==>
(?m + ?b mod ?m - ?a mod ?m) mod ?m = ?m + ?b mod ?m - ?a mod ?m
[| 0 <= ?x; 0 <= ?y |] ==> nat (?x mod ?y) = nat ?x mod nat ?y
int (?a mod ?b) = int ?a mod int ?b
(?a mod - ?m = ?b mod - ?m) = (?a mod ?m = ?b mod ?m)
?a <= ?b ==>
(?b - ?a) mod ?m =
(if ?a mod ?m <= ?b mod ?m then ?b mod ?m - ?a mod ?m
 else ?m + ?b mod ?m - ?a mod ?m)
?a <= ?b ==> (?b - ?a) mod ?m = (?m + ?b mod ?m - ?a mod ?m) mod ?m
[| ?a <= ?b; ?a mod ?m <= ?b mod ?m |]
==> (?b - ?a) mod ?m = ?b mod ?m - ?a mod ?m
[| ?a <= ?b; ?b mod ?m < ?a mod ?m |]
==> (?b - ?a) mod ?m = ?m + ?b mod ?m - ?a mod ?m
?a mod ?m = ?b mod ?m ==> (?b - ?a) mod ?m = 0
?a mod ?m = ?b mod ?m ==> (?b - ?a) mod ?m = 0
(?a mod ?m = ?b mod ?m) = ((?b - ?a) mod ?m = 0)
?a <= ?b ==> (?a mod ?m = ?b mod ?m) = ((?b - ?a) mod ?m = 0)
[| ?a mod ?m ~= ?b mod ?m; ?a <= ?b |] ==> 0 < (?b - ?a) mod ?m
[| (?b - ?a) mod ?m = 0; ?a <= ?b |] ==> ?a mod ?m = ?b mod ?m
(?b - ?a) mod ?m = 0 ==> ?a mod ?m = ?b mod ?m
[| ?x < ?y; ?x mod ?m = ?y mod ?m |] ==> ?x + ?m <= ?y
((?n + ?k) mod ?m = ?n mod ?m) = (?k mod ?m = 0)
0 < ?n ==> (?m - ?n) mod ?m = ?m - ?n
?m <= ?n ==> (?n - ?m) mod ?m = ?n mod ?m
?k * ?m <= ?n ==> (?n - ?k * ?m) mod ?m = ?n mod ?m
?m * ?k <= ?n ==> (?n - ?m * ?k) mod ?m = ?n mod ?m
?a mod ?m = ?b mod ?m ==> ?a * ?k mod (?m * ?k) = ?b * ?k mod (?m * ?k)
?x mod (?m * ?k) = ?y * ?k mod (?m * ?k) ==> ?x mod ?k = 0
?x mod (?m * ?k) = ?y * ?k mod (?m * ?k) ==> ?x div ?k * ?k = ?x
[| ?x mod (?m * ?k) = ?y * ?k mod (?m * ?k); 0 < ?k |]
==> ?x div ?k mod ?m = ?y mod ?m
0 < ?n ==> (?m - ?n) div ?m = 0
(?n - ?m) div ?m = ?n div ?m - Suc 0
(?n - ?k * ?m) div ?m = ?n div ?m - ?k
(?n - ?m * ?k) div ?m = ?n div ?m - ?k
[| ?k * ?m <= ?n; ?n < Suc ?k * ?m |] ==> ?n div ?m = ?k
[| ?n div ?m = ?k; 0 < ?m |] ==> ?k * ?m <= ?n & ?n < Suc ?k * ?m
0 < ?m ==> (?k * ?m <= ?n & ?n < Suc ?k * ?m) = (?n div ?m = ?k)
(?n - ?n mod ?m) div ?m = ?n div ?m
[| ?x <= ?y; ?y - ?x < ?m |] ==> ?x = ?y - (?y - ?x) mod ?m
[| ?x <= ?y; ?m <= ?y - ?x; 0 < ?m |] ==> ?x < ?y - (?y - ?x) mod ?m
?x <= ?y ==> ?x <= ?y - (?y - ?x) mod ?m
(?n - Suc (?n mod ?m)) div ?m = ?n div ?m - Suc 0
[| ?n mod ?m < ?r; ?r <= ?m; ?r <= ?n |]
==> (?n - ?r) mod ?m = ?m + ?n mod ?m - ?r
[| 0 < ?n; ?n mod ?m = 0 |] ==> (?n - Suc 0) mod ?m = ?m - Suc 0
[| ?n mod ?m < ?r; ?r <= ?m + ?n mod ?m |]
==> (?n - ?r) div ?m = ?n div ?m - Suc 0
[| ?n mod ?m = 0; 0 < ?r; ?r <= ?m |]
==> (?n - ?r) div ?m = ?n div ?m - Suc 0
[| ?n mod ?m = 0; ?r < ?m |] ==> (?n - Suc ?r) div ?m = ?n div ?m - Suc 0
?n mod ?m = 0 ==> (?n - Suc 0) div ?m = ?n div ?m - Suc 0
0 < ?n ==>
(?n - Suc 0) mod ?m =
(if ?n mod ?m = 0 then ?m - Suc 0 else ?n mod ?m - Suc 0)
0 < ?n ==> Suc ((?n - Suc 0) mod ?m) mod ?m = ?n mod ?m
[| ?a < ?b; 0 < ?m; ?a mod ?m = ?b mod ?m |]
==> Suc ((?b - Suc ?a) mod ?m) = ?m
(?t - ?r) mod ?m <= ?t
?r <= ?t ==> (?t - (?t - ?r) mod ?m) mod ?m = ?r mod ?m
?r <= ?t ==> (?k * ?m + ?t - (?t - ?r) mod ?m) mod ?m = ?r mod ?m
0 < ?m ==> (?n div ?m <= ?k) = (?n <= Suc ?k * ?m - Suc 0)
(?b - ?a) div ?m =
?b div ?m - ?a div ?m - (if ?a mod ?m <= ?b mod ?m then 0 else Suc 0)
(?b - ?a) div ?m =
?b div ?m - ?a div ?m - (?m + ?a mod ?m - Suc (?b mod ?m)) div ?m
?a mod ?m <= ?b mod ?m ==> (?b - ?a) div ?m = ?b div ?m - ?a div ?m
?b mod ?m < ?a mod ?m ==> (?b - ?a) div ?m = ?b div ?m - Suc (?a div ?m)
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Countable"
### 1.332s elapsed time, 4.673s cpu time, 0.892s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.SetInterval2MoreTemplates" via "Draft.SetInterval2" via "Draft.Util_NatInf" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity" via "HOL-Library.Countable_Complete_Lattices")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Countable_Set"
### 0.365s elapsed time, 0.761s cpu time, 0.061s GC time
Loading theory "HOL-Library.Countable_Complete_Lattices" (required by "Draft.SetInterval2MoreTemplates" via "Draft.SetInterval2" via "Draft.Util_NatInf" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.008s elapsed time, 6.163s cpu time, 1.096s GC time
Loading theory "Draft.Templates" (required by "Draft.SetInterval2MoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.068s elapsed time, 0.172s cpu time, 0.044s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.SetInterval2MoreTemplates")
class countable_complete_lattice = Inf + Sup + lattice + bot + top +
  assumes "ccInf_lower": "!!A x. [| countable A; x : A |] ==> Inf A <= x"
  assumes
    "ccInf_greatest":
      "!!A z. [| countable A; !!x. x : A ==> z <= x |] ==> z <= Inf A"
  assumes "ccSup_upper": "!!A x. [| countable A; x : A |] ==> x <= Sup A"
  assumes
    "ccSup_least":
      "!!A z. [| countable A; !!x. x : A ==> x <= z |] ==> Sup A <= z"
  assumes "ccInf_empty": "Inf {} = top"
  assumes "ccSup_empty": "Sup {} = bot"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.516s elapsed time, 1.066s cpu time, 0.071s GC time
class countable_complete_distrib_lattice = countable_complete_lattice +
  assumes
    "sup_ccInf": "!!B a. countable B ==> sup a (Inf B) = Inf (sup a ` B)"
  assumes
    "inf_ccSup": "!!B a. countable B ==> inf a (Sup B) = Sup (inf a ` B)"
### theory "HOL-Library.Countable_Complete_Lattices"
### 1.552s elapsed time, 2.508s cpu time, 0.196s GC time
Loading theory "HOL-Library.Order_Continuity" (required by "Draft.SetInterval2MoreTemplates" via "Draft.SetInterval2" via "Draft.Util_NatInf" via "HOL-Library.Extended_Nat")
### theory "HOL-Library.Order_Continuity"
### 0.392s elapsed time, 0.432s cpu time, 0.032s GC time
Loading theory "HOL-Library.Extended_Nat" (required by "Draft.SetInterval2MoreTemplates" via "Draft.SetInterval2" via "Draft.Util_NatInf")
class infinity = type +
  fixes infinity :: "'a"
instantiation
  enat :: infinity
  infinity_enat == infinity :: enat
Proofs for inductive predicate(s) "rec_set_enat"
### No equation for constructor "Extended_Nat.infinity_class.infinity"
### in definition of function "the_enat"
consts
  the_enat :: "enat => nat"
instantiation
  enat :: zero_neq_one
  one_enat == one_class.one :: enat
  zero_enat == zero_class.zero :: enat
instantiation
  enat :: comm_monoid_add
  plus_enat == plus :: enat => enat => enat
instantiation
  enat :: {comm_semiring_1,semiring_no_zero_divisors}
  times_enat == times :: enat => enat => enat
instantiation
  enat :: minus
  minus_enat == minus :: enat => enat => enat
instantiation
  enat :: linordered_ab_semigroup_add
  less_eq_enat == less_eq :: enat => enat => bool
  less_enat == less :: enat => enat => bool
instantiation
  enat :: {order_bot,order_top}
  top_enat == top :: enat
  bot_enat == bot :: enat
structure Cancel_Enat_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
instantiation
  enat :: complete_lattice
  Inf_enat == Inf :: enat set => enat
  Sup_enat == Sup :: enat set => enat
  sup_enat == sup :: enat => enat => enat
  inf_enat == inf :: enat => enat => enat
### theory "HOL-Library.Extended_Nat"
### 0.475s elapsed time, 0.520s cpu time, 0.061s GC time
Loading theory "Draft.Util_NatInf" (required by "Draft.SetInterval2MoreTemplates" via "Draft.SetInterval2")
instantiation
  enat :: modulo
  modulo_enat == modulo :: enat => enat => enat
  divide_enat == divide :: enat => enat => enat
### theory "Draft.Util_NatInf"
### 0.119s elapsed time, 0.162s cpu time, 0.059s GC time
Loading theory "Draft.SetInterval2" (required by "Draft.SetInterval2MoreTemplates")
locale distrib_lattice
  fixes inf :: "'a => 'a => 'a"
    and less_eq :: "'a => 'a => bool"
    and less :: "'a => 'a => bool"
    and sup :: "'a => 'a => 'a"
  assumes "class.distrib_lattice inf less_eq less sup"
### theory "Draft.SetInterval2"
### 0.922s elapsed time, 1.022s cpu time, 0.107s GC time
Loading theory "Draft.SetInterval2MoreTemplates"
val templateLemmas =
   [("SetInterval2.singleton_finite", "finite {?a}",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("SetInterval2.infinite_atLeast_int", "infinite {?n..}",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("SetInterval2.infinite_atMost_int", "infinite {..?n}",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("SetInterval2.infinite_greaterThan_int", "infinite {?n<..}",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("SetInterval2.infinite_lessThan_int", "infinite {..<?n}",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("SetInterval2.infinite_atLeast", "infinite {?n..}",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("SetInterval2.infinite_greaterThan", "infinite {?n<..}",
     template_negation
      (
         template_predicate
          (
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))
             )
         )),
    ("SetInterval2.surj_on_id", "surj_on id ?A ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0),
           template_var 0)
         )),
    ("SetInterval2.surj_on_empty_right", "surj_on ?f ?A {}",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0),
           template_hole 0)
         )),
    ("SetInterval2.inj_on_singleton", "inj_on ?f {?a}",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("SetInterval2.iMin_atLeast", "iMin {?n..} = ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("SetInterval2.Max_atMost", "Max {..?n} = ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("SetInterval2.iMin_atMost", "iMin {..?n} = 0",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("SetInterval2.add_right_strict_mono", "strict_mono (%x. x + ?n)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("SetInterval2.add_left_strict_mono", "strict_mono ((+) ?n)",
     template_predicate (template_app (template_hole 1, t_empty))),
    ("SetInterval2.strict_mono_on_singleton",
     "SetInterval2.strict_mono_on ?f {?a}",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("SetInterval2.add_right_inj", "inj (%x. x + ?n)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, t_empty), template_hole 0)
         )),
    ("SetInterval2.add_left_inj", "inj ((+) ?n)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, t_empty), template_hole 0)
         )),
    ("SetInterval2.singleton_not_empty", "{?a} ~= {}",
     template_negation
      (
         template_equation
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0),
           template_hole 0)
         )),
    ("SetInterval2.iMin_singleton", "iMin {?a} = ?a",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("SetInterval2.iMin_greaterThan", "iMin {?n<..} = Suc ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SetInterval2.atMost_atLeastAtMost_0_conv", "{..?i} = {0..?i}",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("SetInterval2.atMost_lessThan_conv", "{..?n} = {..<Suc ?n}",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.atLeast_greaterThan_conv", "{Suc ?n..} = {?n<..}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SetInterval2.mono_on_UNIV_mono_conv",
     "SetInterval2.mono_on ?f UNIV = mono ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("SetInterval2.strict_mono_on_UNIV_strict_mono_conv",
     "SetInterval2.strict_mono_on ?f UNIV = strict_mono ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("SetInterval2.nat_card_le_Max", "card ?A <= Suc (Max ?A)",
     template_inequation
      (less_equals, template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.sub_left_inj_on", "inj_on (%x. x - ?k) {?k..}",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 0))
         )),
    ("SetInterval2.sub_right_inj_on", "inj_on ((-) ?k) {..?k}",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 0))
         )),
    ("SetInterval2.card_singleton", "card {?a} = Suc 0",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app (template_hole 1, template_hole 0))),
    ("SetInterval2.greaterThan_insert", "insert ?n {?n<..} = {?n..}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SetInterval2.lessThan_insert", "insert ?n {..<?n} = {..?n}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("SetInterval2.finite_A_int_A_conv", "finite ?A = finite (int ` ?A)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("SetInterval2.iMax_singleton", "iMax {?a} = enat ?a",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("SetInterval2.sub_left_strict_mono_on",
     "SetInterval2.strict_mono_on (%x. x - ?k) {?k..}",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 0))
         )),
    ("SetInterval2.mono_imp_mono_on",
     "mono ?f ==> SetInterval2.mono_on ?f ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("SetInterval2.strict_mono_imp_strict_mono_on",
     "strict_mono ?f ==> SetInterval2.strict_mono_on ?f ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("SetInterval2.strict_mono_imp_inj", "strict_mono ?f ==> inj ?f",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("SetInterval2.atLeastAtMost_atLeastLessThan_conv",
     "{?l..?u} = {?l..<Suc ?u}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.image_Suc_atLeast", "Suc ` {?i..} = {Suc ?i..}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("SetInterval2.atLeastAtMost_greaterThanAtMost_conv",
     "{Suc ?l..?u} = {?l<..?u}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetInterval2.iMax_finite_conv",
     "finite ?I = (iMax ?I ~= \<infinity>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 0),
             template_hole 0)
           ))),
    ("SetInterval2.iMax_infinite_conv",
     "infinite ?I = (iMax ?I = \<infinity>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("SetInterval2.surj_on_empty_left", "surj_on ?f {} ?B = (?B = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_hole 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("SetInterval2.inj_imp_inj_on", "inj ?f ==> inj_on ?f ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("SetInterval2.strict_mono_on_imp_mono_on",
     "SetInterval2.strict_mono_on ?f ?A ==> SetInterval2.mono_on ?f ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("SetInterval2.strict_mono_on_imp_inj_on",
     "SetInterval2.strict_mono_on ?f ?A ==> inj_on ?f ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("SetInterval2.card_gr0_imp_finite", "0 < card ?A ==> finite ?A",
     template_implication
      ([template_inequation
         (less_than, template_hole 2,
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.atLeast_remove", "{?n..} - {?n} = {?n<..}",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("SetInterval2.atMost_remove", "{..?n} - {?n} = {..<?n}",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app (template_hole 0, template_var 0))),
    ("SetInterval2.strict_mono_mono_conv",
     "strict_mono ?f = (mono ?f & inj ?f)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("SetInterval2.infinite_A_int_A_conv",
     "infinite ?A = infinite (int ` ?A)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 4,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("SetInterval2.infinite_insert",
     "infinite (insert ?a ?A) = infinite ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)))),
    ("SetInterval2.singleton_subset_conv", "({?a} <= ?A) = (?a : ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetInterval2.iMin_le", "?k : ?I ==> iMin ?I <= ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_var 1))),
    ("SetInterval2.iMinI", "?k : ?I ==> iMin ?I : ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("SetInterval2.sum_singleton", "sum ?f {?a} = ?f ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_app (template_var 1, template_var 0))),
    ("SetInterval2.card_cartesian_product_singleton_right",
     "card (?A \<times> {?x}) = card ?A",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)),
       template_app (template_hole 0, template_var 1))),
    ("SetInterval2.singleton_image", "?f ` {?a} = {?f ?a}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 1, template_app (template_var 1, template_var 0)),
         template_hole 0))),
    ("SetInterval2.image_Suc_atMost", "Suc ` {..?i} = {Suc 0..Suc ?i}",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app (template_hole 3, template_hole 0)),
         template_app (template_hole 3, template_var 0)))),
    ("SetInterval2.surj_on_image_conv",
     "surj_on ?f ?A ?B = (?B <= ?f ` ?A)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("SetInterval2.singleton_ball", "(ALL x:{?a}. ?P x) = ?P ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         t_empty),
       template_app (template_var 0, template_var 1))),
    ("SetInterval2.singleton_bex", "(EX x:{?a}. ?P x) = ?P ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_hole 0)),
         t_empty),
       template_app (template_var 0, template_var 1))),
    ("SetInterval2.Un_infinite_right",
     "infinite ?T ==> infinite (?S Un ?T)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))
               )
           ))),
    ("SetInterval2.iMin_lessThan", "0 < ?n ==> iMin {..<?n} = 0",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_hole 3))),
    ("SetInterval2.mult_right_strict_mono",
     "0 < ?n ==> strict_mono (%x. x * ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("SetInterval2.mult_left_strict_mono",
     "0 < ?n ==> strict_mono ((*) ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("SetInterval2.subset_imp_Int_subset1", "?A <= ?C ==> ?A Int ?B <= ?C",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_var 1))),
    ("SetInterval2.subset_imp_Int_subset2", "?B <= ?C ==> ?A Int ?B <= ?C",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("SetInterval2.bij_betw_imp_surj_on",
     "bij_betw ?f ?A ?B ==> surj_on ?f ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("SetInterval2.iMin_in", "?I ~= {} ==> iMin ?I : ?I",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("SetInterval2.not_less_iMin", "?k < iMin ?I ==> ?k ~: ?I",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)
               )
           ))),
    ("SetInterval2.card_gr0_imp_not_empty", "0 < card ?A ==> ?A ~= {}",
     template_implication
      ([template_inequation
         (less_than, template_hole 4,
          template_app (template_hole 3, template_var 0))],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("SetInterval2.infinite_image_imp_infinite",
     "infinite (?f ` ?A) ==> infinite ?A",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 1),
                    template_var 0))
                )
            )],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("SetInterval2.image_Suc_lemmas", "Suc ` {?i..?j} = {Suc ?i..Suc ?j}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("SetInterval2.finite_nat_iff_bounded2",
     "finite ?S = (EX k. ALL n:?S. n < k)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("SetInterval2.finite_nat_iff_bounded_le2",
     "finite ?S = (EX k. ALL n:?S. n <= k)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app (template_hole 2, t_empty))),
    ("SetInterval2.strict_mono_on_mono_on_conv",
     "SetInterval2.strict_mono_on ?f ?A =
      (SetInterval2.mono_on ?f ?A & inj_on ?f ?A)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("SetInterval2.singleton_eq_conv", "({?a} = {?b}) = (?a = ?b)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_equation (template_var 1, template_var 0))),
    ("SetInterval2.singleton_subset_singleton_conv",
     "({?a} <= {?b}) = (?a = ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1)),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_hole 1))
            )],
       template_equation (template_var 1, template_var 0))),
    ("SetInterval2.Int_card1", "finite ?A ==> card (?A Int ?B) <= card ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 1)))),
    ("SetInterval2.Int_card2", "finite ?B ==> card (?A Int ?B) <= card ?B",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 1, template_var 1)))),
    ("SetInterval2.finite_subset_atLeastAtMost",
     "finite ?A ==> ?A <= {Min ?A..Max ?A}",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))))),
    ("SetInterval2.Collect_iMin_le", "?P ?k ==> iMin {x. ?P x} <= ?k",
     template_implication
      ([template_predicate (template_app (template_var 1, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, t_empty)),
         template_var 0))),
    ("SetInterval2.iMin_atLeastLessThan", "?m < ?n ==> iMin {?m..<?n} = ?m",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("SetInterval2.mult_right_inj", "0 < ?n ==> inj (%x. x * ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)
           ))),
    ("SetInterval2.mult_left_inj", "0 < ?n ==> inj ((*) ?n)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)
           ))),
    ("SetInterval2.Max_greaterThanAtMost", "?m < ?n ==> Max {?m<..?n} = ?n",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("SetInterval2.atLeastAtMost_subset_atMost",
     "?k <= ?k' ==> {?l..?k} <= {..?k'}",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 0), template_var 2),
         template_app (template_hole 0, template_var 1)))),
    ("SetInterval2.iMin_atLeastAtMost", "?m <= ?n ==> iMin {?m..?n} = ?m",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 1))),
    ("SetInterval2.Max_atLeastAtMost", "?m <= ?n ==> Max {?m..?n} = ?n",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("SetInterval2.iMinI_ex", "EX x. x : ?I ==> iMin ?I : ?I",
     template_implication
      ([template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("SetInterval2.subset_finite_imp_finite",
     "[| finite ?A; ?B <= ?A |] ==> finite ?B",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("SetInterval2.image_add_atLeast",
     "(%n. n + ?k) ` {?i..} = {?i + ?k..}",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 1)))),
    ("SetInterval2.inj_on_finite_image_iff",
     "inj_on ?f ?A ==> finite (?f ` ?A) = finite ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.iMin_greaterThanAtMost",
     "?m < ?n ==> iMin {?m<..?n} = Suc ?m",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("SetInterval2.iMin_in_idem", "?n : ?I ==> min ?n (iMin ?I) = iMin ?I",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.surj_on_diff_right",
     "surj_on ?f ?A ?B ==> surj_on ?f ?A (?B - ?B')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SetInterval2.Collect_not_less_iMin",
     "?k < iMin {x. ?P x} ==> ~ ?P ?k",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 2, template_app (template_hole 1, t_empty)))],
       template_negation
        (
           template_predicate
            (template_app (template_var 0, template_var 1))
           ))),
    ("SetInterval2.image_add_atMost",
     "(%n. n + ?k) ` {..?i} = {?k..?i + ?k}",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_var 1)))),
    ("SetInterval2.Un_infinite_iff",
     "infinite (?S Un ?T) = (infinite ?S | infinite ?T)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("SetInterval2.card_1_singleton_conv",
     "(card ?A = Suc 0) = (EX a. ?A = {a})",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 0)),
         template_app (template_hole 5, template_hole 4)),
       template_app (template_hole 3, t_empty))),
    ("SetInterval2.disjoint_iff_in_not_in1",
     "(?A Int ?B = {}) = (ALL x:?A. x ~: ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 1), t_empty))),
    ("SetInterval2.disjoint_iff_in_not_in2",
     "(?A Int ?B = {}) = (ALL x:?B. x ~: ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 0), t_empty))),
    ("SetInterval2.infinite_Diff_insert",
     "infinite (?A - insert ?a ?B) = infinite (?A - ?B)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("SetInterval2.not_empty_card_gr0_conv",
     "finite ?A ==> (?A ~= {}) = (0 < card ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_hole 3)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("SetInterval2.infinite_imp_not_singleton",
     "infinite ?A ==> \<nexists>a. ?A = {a}",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 0))
            )],
       template_negation
        (template_predicate (template_app (template_hole 3, t_empty))))),
    ("SetInterval2.Max_lessThan", "0 < ?n ==> Max {..<?n} = ?n - Suc 0",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0)],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_hole 5))))),
    ("SetInterval2.iMin_greaterThanLessThan",
     "Suc ?m < ?n ==> iMin {?m<..<?n} = Suc ?m",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 3, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app (template_hole 3, template_var 1)))),
    ("SetInterval2.infinite_not_subset_finite",
     "[| infinite ?A; finite ?B |] ==> ~ ?A <= ?B",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_negation
        (
           template_inequation (less_equals, template_var 1, template_var 0)
           ))),
    ("SetInterval2.MaxI", "[| ?k : ?A; finite ?A |] ==> Max ?A : ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("SetInterval2.mono_on_subset",
     "[| SetInterval2.mono_on ?f ?A; ?B <= ?A |]
      ==> SetInterval2.mono_on ?f ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("SetInterval2.strict_mono_on_subset",
     "[| SetInterval2.strict_mono_on ?f ?A; ?B <= ?A |]
      ==> SetInterval2.strict_mono_on ?f ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("SetInterval2.singleton_Int2_if",
     "?A Int {?a} = (if ?a : ?A then {?a} else {})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2)),
         template_hole 2))),
    ("SetInterval2.singleton_Int1_if",
     "{?a} Int ?A = (if ?a : ?A then {?a} else {})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         template_hole 2))),
    ("SetInterval2.image_add_lemmas",
     "(+) ?k ` {?i..?j} = {?i + ?k..?j + ?k}",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_var 2)))),
    ("SetInterval2.inj_on_infinite_image_iff",
     "inj_on ?f ?A ==> infinite (?f ` ?A) = infinite ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_app
          (template_hole 3,
           template_app (template_hole 0, template_var 0))))),
    ("SetInterval2.infinite_imp_asc_chain",
     "infinite ?S ==> ALL m:?S. EX n:?S. m < n",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), t_empty)
           ))),
    ("SetInterval2.Max_atLeastLessThan",
     "?m < ?n ==> Max {?m..<?n} = ?n - Suc 0",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_hole 0))))),
    ("SetInterval2.wellorder_iMin_lemma",
     "?k : ?I ==> iMin ?I : ?I & iMin ?I <= ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 1, template_var 0)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 0)),
               template_var 1))
           ))),
    ("SetInterval2.card_1_imp_singleton",
     "card ?A = Suc 0 ==> EX a. ?A = {a}",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 0),
          template_app (template_hole 5, template_hole 4))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("SetInterval2.surj_on_imageI",
     "surj_on (?g o ?f) ?A ?B ==> surj_on ?g (?f ` ?A) ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("SetInterval2.not_greater_Max",
     "[| finite ?A; Max ?A < ?k |] ==> ?k ~: ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_than, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)
               )
           ))),
    ("SetInterval2.Max_le_imp_subset_atMost",
     "[| finite ?A; Max ?A <= ?n |] ==> ?A <= {..?n}",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_var 0)],
       template_inequation
        (less_equals, template_var 1,
         template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.MaxI_ex2", "[| ?A ~= {}; finite ?A |] ==> Max ?A : ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("SetInterval2.iMin_the2",
     "iMin ?I = (THE x. x : ?I & (ALL y:?I. x <= y))",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app (template_hole 4, t_empty))),
    ("SetInterval2.surj_on_conv",
     "surj_on ?f ?A ?B = (ALL b:?B. EX a:?A. b = ?f a)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 0), t_empty))),
    ("SetInterval2.subset_singleton_conv",
     "(?A <= {?a}) = (?A = {} | ?A = {?a})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_hole 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)))
           ))),
    ("SetInterval2.iMin_insert",
     "?I ~= {} ==> iMin (insert ?n ?I) = min ?n (iMin ?I)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 2, template_var 1))))),
    ("SetInterval2.Max_greaterThanLessThan",
     "Suc ?m < ?n ==> Max {?m<..<?n} = ?n - Suc 0",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 5, template_var 1),
          template_var 0)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 5, template_hole 0))))),
    ("SetInterval2.partition_Union",
     "?A <= \<Union> ?C ==> \<Union> ((Int) ?A ` ?C) = ?A",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)),
         template_var 1))),
    ("SetInterval2.iMin_Int_ge1",
     "?A Int ?B ~= {} ==> iMin ?A <= iMin (?A Int ?B)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("SetInterval2.iMin_Int_ge2",
     "?A Int ?B ~= {} ==> iMin ?B <= iMin (?A Int ?B)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))))),
    ("SetInterval2.Un_card1",
     "[| finite ?A; finite ?B |] ==> card ?A <= card (?A Un ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("SetInterval2.Un_card2",
     "[| finite ?A; finite ?B |] ==> card ?B <= card (?A Un ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("SetInterval2.Min_le_Max",
     "[| finite ?A; ?A ~= {} |] ==> Min ?A <= Max ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.iMin_le_Max",
     "[| finite ?A; ?A ~= {} |] ==> iMin ?A <= Max ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.iMin_Min_conv",
     "[| finite ?I; ?I ~= {} |] ==> iMin ?I = Min ?I",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.inj_on_imp_infinite_image",
     "[| infinite ?A; inj_on ?f ?A |] ==> infinite (?f ` ?A)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))
               )
           ))),
    ("SetInterval2.surj_on_subset_left",
     "[| surj_on ?f ?A ?B; ?A <= ?A' |] ==> surj_on ?f ?A' ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("SetInterval2.surj_on_subset_right",
     "[| surj_on ?f ?A ?B; ?B' <= ?B |] ==> surj_on ?f ?A ?B'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("SetInterval2.MaxI_ex",
     "[| EX x. x : ?A; finite ?A |] ==> Max ?A : ?A",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("SetInterval2.surj_on_Un_right",
     "surj_on ?f ?A (?B1.0 Un ?B2.0) =
      (surj_on ?f ?A ?B1.0 & surj_on ?f ?A ?B2.0)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2),
           template_var 0)))),
    ("SetInterval2.surj_on_insert_left",
     "surj_on ?f (insert ?a ?A) ?B = surj_on ?f ?A (?B - {?f ?a})",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 4, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_var 3, template_var 2)),
             template_hole 0))))),
    ("SetInterval2.wf_less_interval",
     "wf {(x, y). x : ?I & y : ?I & x < y}",
     template_predicate
      (
         template_app
          (template_hole 5,
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty)))
         )),
    ("SetInterval2.surj_onD2",
     "surj_on ?f ?A ?B ==> ALL b:?B. EX a:?A. b = ?f a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), t_empty)
           ))),
    ("SetInterval2.surj_onI",
     "ALL b:?B. EX a:?A. b = ?f a ==> surj_on ?f ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1),
             template_var 2)
           ))),
    ("SetInterval2.Max_less_iMin_imp_disjoint",
     "[| finite ?A; Max ?A < iMin ?B |] ==> ?A Int ?B = {}",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_than, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("SetInterval2.iMin_neq_imp_greater",
     "[| ?k : ?I; ?k ~= iMin ?I |] ==> iMin ?I < ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 1, template_var 0))
            )],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 0),
         template_var 1))),
    ("SetInterval2.iMin_subset",
     "[| ?A ~= {}; ?A <= ?B |] ==> iMin ?B <= iMin ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("SetInterval2.iMin_gr_iff",
     "?I ~= {} ==> (?n < iMin ?I) = (ALL a:?I. ?n < a)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("SetInterval2.iMin_less_iff",
     "?I ~= {} ==> (iMin ?I < ?n) = (EX a:?I. a < ?n)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("SetInterval2.iMin_ge_iff",
     "?I ~= {} ==> (?n <= iMin ?I) = (ALL a:?I. ?n <= a)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app (template_hole 1, template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("SetInterval2.iMin_le_iff",
     "?I ~= {} ==> (iMin ?I <= ?n) = (EX a:?I. a <= ?n)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("SetInterval2.cartesian_product_infiniteL_imp_infinite",
     "[| infinite ?A; ?B ~= {} |] ==> infinite (?A \<times> ?B)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 1))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1), t_empty))
               )
           ))),
    ("SetInterval2.cartesian_product_infiniteR_imp_infinite",
     "[| infinite ?B; ?A ~= {} |] ==> infinite (?A \<times> ?B)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 4, template_var 1))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0), t_empty))
               )
           ))),
    ("SetInterval2.iMin_the",
     "iMin ?I = (THE x. x : ?I & (ALL y. y : ?I --> x <= y))",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app (template_hole 5, t_empty))),
    ("SetInterval2.surj_on_insert_right",
     "surj_on ?f ?A (insert ?b ?B) =
      (surj_on ?f ?A ?B & surj_on ?f ?A {?b})",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 0))))),
    ("SetInterval2.subset_image_Int",
     "?A <= ?B ==> ?f ` (?A Int ?B) = ?f ` ?A Int ?f ` ?B",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("SetInterval2.iMin_Int_ge",
     "?A Int ?B ~= {} ==> max (iMin ?A) (iMin ?B) <= iMin (?A Int ?B)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_hole 3)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0))))),
    ("SetInterval2.iMin_mono2",
     "[| mono ?f; ?I ~= {} |] ==> iMin (?f ` ?I) = ?f (iMin ?I)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("SetInterval2.wellorder_Max_lemma",
     "[| ?k : ?A; finite ?A |] ==> Max ?A : ?A & ?k <= Max ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 1, template_var 0)),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_hole 1, template_var 0)))
           ))),
    ("SetInterval2.comp_surj_on",
     "[| surj_on ?f ?A ?B; surj_on ?g ?B ?C |] ==> surj_on (?g o ?f) ?A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 4)),
               template_var 3),
             template_var 0)
           ))),
    ("SetInterval2.surj_onD",
     "[| surj_on ?f ?A ?B; ?b : ?B |] ==> EX a:?A. ?b = ?f a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("SetInterval2.Collect_Max_ge",
     "[| finite {x. ?P x}; ?P ?k |] ==> ?k <= Max {x. ?P x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3, template_app (template_hole 2, t_empty))
            ),
        template_predicate (template_app (template_var 1, template_var 0))],
       template_inequation
        (less_equals, template_var 0,
         template_app
          (template_hole 0, template_app (template_hole 2, t_empty))))),
    ("SetInterval2.bij_betw_inj_on_surj_on_conv",
     "bij_betw ?f ?A ?B =
      (inj_on ?f ?A & surj_on ?f ?A ?B & ?f ` ?A <= ?B)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0))))),
    ("SetInterval2.infinite_nat_iff_asc_chain",
     "?S ~= {} ==> infinite ?S = (ALL m:?S. EX n:?S. m < n)",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 0), t_empty)))),
    ("SetInterval2.subset_atMost_Max_le_conv",
     "[| finite ?A; ?A ~= {} |] ==> (?A <= {..?n}) = (Max ?A <= ?n)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("SetInterval2.iMin_mono",
     "[| mono ?f; EX x. x : ?I |] ==> iMin (?f ` ?I) = ?f (iMin ?I)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("SetInterval2.iMinI2",
     "[| ?k : ?I; !!x. x : ?I ==> ?P x |] ==> ?P (iMin ?I)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0, template_app (template_hole 0, template_var 1))
           ))),
    ("SetInterval2.iMin_mono_on2",
     "[| SetInterval2.mono_on ?f ?I; ?I ~= {} |]
      ==> iMin (?f ` ?I) = ?f (iMin ?I)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("SetInterval2.iMin_subset_idem",
     "[| ?B ~= {}; ?B <= ?A |] ==> min (iMin ?B) (iMin ?A) = iMin ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.Collect_not_greater_Max",
     "[| finite {x. ?P x}; Max {x. ?P x} < ?k |] ==> ~ ?P ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4, template_app (template_hole 3, t_empty))
            ),
        template_inequation
         (less_than,
          template_app
           (template_hole 1, template_app (template_hole 3, t_empty)),
          template_var 0)],
       template_negation
        (
           template_predicate
            (template_app (template_var 1, template_var 0))
           ))),
    ("SetInterval2.Max_Int_le1",
     "[| ?A Int ?B ~= {}; finite ?A |] ==> Max (?A Int ?B) <= Max ?A",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_hole 3)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("SetInterval2.Max_Int_le2",
     "[| ?A Int ?B ~= {}; finite ?B |] ==> Max (?A Int ?B) <= Max ?B",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0),
              template_hole 3)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.nat_ex_greater_finite_Max_conv",
     "?A ~= {} ==> (EX x:?A. ?n < x) = (finite ?A --> ?n < Max ?A)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), t_empty),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 0, template_var 1)))))),
    ("SetInterval2.inj_on_union_image_Int",
     "inj_on ?f (?A Un ?B) ==> ?f ` (?A Int ?B) = ?f ` ?A Int ?f ` ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("SetInterval2.iMin_mono_on",
     "[| SetInterval2.mono_on ?f ?I; EX x. x : ?I |]
      ==> iMin (?f ` ?I) = ?f (iMin ?I)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("SetInterval2.iMinI2_ex2",
     "[| ?I ~= {}; !!x. x : ?I ==> ?P x |] ==> ?P (iMin ?I)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0, template_app (template_hole 0, template_var 1))
           ))),
    ("SetInterval2.subset_atMost_imp_Max_le",
     "[| finite ?A; ?A ~= {}; ?A <= {..?n} |] ==> Max ?A <= ?n",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("SetInterval2.Max_neq_imp_less",
     "[| finite ?I; ?k : ?I; ?k ~= Max ?I |] ==> ?k < Max ?I",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 1, template_var 1))
            )],
       template_inequation
        (less_than, template_var 0,
         template_app (template_hole 1, template_var 1)))),
    ("SetInterval2.Min_neq_imp_greater",
     "[| finite ?I; ?k : ?I; ?k ~= Min ?I |] ==> Min ?I < ?k",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            ),
        template_negation
         (
            template_equation
             (template_var 0,
              template_app (template_hole 1, template_var 1))
            )],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 1),
         template_var 0))),
    ("SetInterval2.Max_subset",
     "[| ?A ~= {}; ?A <= ?B; finite ?B |] ==> Max ?A <= Max ?B",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.Min_subset",
     "[| ?A ~= {}; ?A <= ?B; finite ?B |] ==> Min ?B <= Min ?A",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("SetInterval2.iMin_eqI",
     "[| ?k : ?I; !!x. x : ?I ==> ?k <= x |] ==> iMin ?I = ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("SetInterval2.iMinI2_ex",
     "[| EX x. x : ?I; !!x. x : ?I ==> ?P x |] ==> ?P (iMin ?I)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0, template_app (template_hole 0, template_var 1))
           ))),
    ("SetInterval2.enat_induct",
     "[| ?P 0; ?P \<infinity>; !!n. ?P n ==> ?P (eSuc n) |] ==> ?P ?n",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 3)),
        template_predicate (template_app (template_var 1, template_hole 2)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("SetInterval2.iMin_insert_remove",
     "iMin (insert ?n ?I) =
      (if ?I - {?n} = {} then ?n else min ?n (iMin (?I - {?n})))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_app
                        (template_app (template_hole 5, template_var 1),
                         template_hole 1))),
                   template_hole 1)),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 1)))))
           ))),
    ("SetInterval2.iMin_Un",
     "[| ?A ~= {}; ?B ~= {} |]
      ==> iMin (?A Un ?B) = min (iMin ?A) (iMin ?B)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 2, template_var 0))))),
    ("SetInterval2.Max_mono2",
     "[| mono ?f; ?A ~= {}; finite ?A |] ==> Max (?f ` ?A) = ?f (Max ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("SetInterval2.nat_ex_greater_infinite_finite_Max_conv'",
     "(EX x:?A. ?n < x) =
      (finite ?A & ?A ~= {} & ?n < Max ?A | infinite ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, template_var 1)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 2, template_var 1),
                         template_hole 1))),
                   template_app
                    (template_app (template_hole 7, template_var 0),
                     template_app (template_hole 0, template_var 1))))),
             template_app
              (template_hole 3,
               template_app (template_hole 4, template_var 1)))
           ))),
    ("SetInterval2.Collect_minI_ex",
     "EX k:?I. ?P k ==> EX x:?I. ?P x & (ALL y:?I. y < x --> ~ ?P y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1), t_empty)
           ))),
    ("SetInterval2.iMin_union_inter",
     "?A Int ?B ~= {} ==>
      min (iMin (?A Un ?B)) (iMin (?A Int ?B)) = min (iMin ?A) (iMin ?B)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))))),
    ("SetInterval2.card_Int_conv",
     "[| finite ?A; finite ?B |]
      ==> card (?A Int ?B) = card ?A + card ?B - card (?A Un ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 4, template_var 1)),
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("SetInterval2.card_Un_conv",
     "[| finite ?A; finite ?B |]
      ==> card (?A Un ?B) = card ?A + card ?B - card (?A Int ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 4, template_var 1)),
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("SetInterval2.Max_le_Min_conv_singleton",
     "[| finite ?A; ?A ~= {} |] ==> (Max ?A <= Min ?A) = (EX x. ?A = {x})",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, t_empty)))),
    ("SetInterval2.disjoint_in_Un",
     "[| ?A Int ?B = {}; ?x : ?A Un ?B |] ==> ?x ~: ?A | ?x ~: ?B",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 2), template_var 1),
          template_hole 4),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 2))),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_var 1)))
           ))),
    ("SetInterval2.Max_le_Min_imp_singleton",
     "[| finite ?A; ?A ~= {}; Max ?A <= Min ?A |] ==> ?A = {Min ?A}",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 0),
          template_app (template_hole 1, template_var 0))],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)),
           template_hole 4)))),
    ("SetInterval2.Max_mono",
     "[| mono ?f; EX x. x : ?A; finite ?A |]
      ==> Max (?f ` ?A) = ?f (Max ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("SetInterval2.MaxI2",
     "[| ?k : ?A; !!x. x : ?A ==> ?P x; finite ?A |] ==> ?P (Max ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_var 0, template_app (template_hole 0, template_var 1))
           ))),
    ("SetInterval2.Max_mono_on2",
     "[| SetInterval2.mono_on ?f ?A; ?A ~= {}; finite ?A |]
      ==> Max (?f ` ?A) = ?f (Max ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            ),
        template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("SetInterval2.pigeonhole_principle_linorder",
     "card (?f ` ?A) < card ?A ==> EX x:?A. EX y:?A. x < y & ?f x = ?f y",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)),
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), t_empty)
           ))),
    ("SetInterval2.nat_Least_mono",
     "[| ?A ~= {}; incseq ?f |]
      ==> (LEAST x. x : ?f ` ?A) = ?f (LEAST x. x : ?A)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app
          (template_var 0, template_app (template_hole 2, t_empty))))),
    ("SetInterval2.Max_mono_on",
     "[| SetInterval2.mono_on ?f ?A; EX x. x : ?A; finite ?A |]
      ==> Max (?f ` ?A) = ?f (Max ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("SetInterval2.MaxI2_ex2",
     "[| ?A ~= {}; !!x. x : ?A ==> ?P x; finite ?A |] ==> ?P (Max ?A)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_var 0, template_app (template_hole 0, template_var 1))
           ))),
    ("SetInterval2.Max_less_iMin_imp_less",
     "[| finite ?A; Max ?A < iMin ?B; ?a : ?A; ?b : ?B |] ==> ?a < ?b",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_inequation
         (less_than, template_app (template_hole 2, template_var 3),
          template_app (template_hole 1, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("SetInterval2.Max_le_iMin_imp_le",
     "[| finite ?A; Max ?A <= iMin ?B; ?a : ?A; ?b : ?B |] ==> ?a <= ?b",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 3)),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 3),
          template_app (template_hole 1, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 2)
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("SetInterval2.iMin_remove",
     "?n : ?I ==>
      iMin ?I = (if ?I - {?n} = {} then ?n else min ?n (iMin (?I - {?n})))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_implication
        ([template_predicate
           (template_app (template_hole 6, template_var 0))],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_app
                          (template_app (template_hole 2, template_var 1),
                           template_hole 1))),
                     template_hole 1)),
                 template_var 1),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_app
                      (template_app (template_hole 2, template_var 1),
                       template_hole 1)))))
             )))),
    ("SetInterval2.pigeonhole_principle",
     "card (?f ` ?A) < card ?A ==> EX x:?A. EX y:?A. x ~= y & ?f x = ?f y",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)),
          template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 0), t_empty)
           ))),
    ("SetInterval2.Collect_minI",
     "[| ?k : ?I; ?P ?k |]
      ==> EX x:?I. ?P x & (ALL y:?I. y < x --> ~ ?P y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_var 0, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1), t_empty)
           ))),
    ("SetInterval2.Least_imp_le",
     "[| EX x. ?P x; !!x. ?P x ==> ?Q x |]
      ==> (LEAST x. ?Q x) <= (LEAST x. ?P x)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, t_empty),
         template_app (template_hole 0, t_empty)))),
    ("SetInterval2.Max_the2",
     "[| ?A ~= {}; finite ?A |]
      ==> Max ?A = (THE x. x : ?A & (ALL y:?A. y <= x))",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 8)),
        template_predicate
         (template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app (template_hole 4, t_empty)))),
    ("SetInterval2.nat_asc_chain_imp_unbounded",
     "[| ?S ~= {}; ALL m:?S. EX n:?S. m < n |] ==> ALL m. EX n:?S. m <= n",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0), t_empty)
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("SetInterval2.inj_on_image_mem_iff",
     "[| inj_on ?f ?A; ?B <= ?A; ?a : ?A |]
      ==> (?f ?a : ?f ` ?B) = (?a : ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_var 3, template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_var 1)))),
    ("SetInterval2.Max_equality",
     "[| ?k : ?A; finite ?A; !!x. x : ?A ==> x <= ?k |] ==> Max ?A = ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 4, template_var 0)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("SetInterval2.MaxI2_ex",
     "[| EX x. x : ?A; !!x. x : ?A ==> ?P x; finite ?A |] ==> ?P (Max ?A)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_var 0, template_app (template_hole 0, template_var 1))
           ))),
    ("SetInterval2.eSuc_imp_Suc_aux_0",
     "[| !!n. ?P n ==> ?P (eSuc n); ?n0' <= ?n'; ?P (enat ?n') |]
      ==> ?P (enat (Suc ?n'))",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate
         (
            template_app
             (template_var 2,
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_var 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SetInterval2.surj_on_Un_left",
     "surj_on ?f (?A1.0 Un ?A2.0) ?B =
      (EX B1 B2.
          ?B <= B1 Un B2 & surj_on ?f ?A1.0 B1 & surj_on ?f ?A2.0 B2)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 3),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 3, t_empty))),
    ("SetInterval2.image_diff_disjoint_image_Int",
     "?f ` (?A - ?B) Int ?f ` ?B = {} ==>
      ?f ` (?A Int ?B) = ?f ` ?A Int ?f ` ?B",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0))),
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)),
          template_hole 1)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0))))),
    ("SetInterval2.interval_induct",
     "(!!x. ALL y. x : ?I & y : ?I & y < x --> ?P y ==> ?P x) ==> ?P ?a",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("SetInterval2.mod_eq_imp_div_right_inj_on",
     "[| 0 < ?k; ALL x:?I. ALL y:?I. x mod ?k = y mod ?k |]
      ==> inj_on (%x. x div ?k) ?I",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)
           ))),
    ("SetInterval2.mod_eq_div_right_strict_mono_on",
     "[| 0 < ?k; ALL x:?I. ALL y:?I. x mod ?k = y mod ?k |]
      ==> SetInterval2.strict_mono_on (%x. x div ?k) ?I",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)
           ))),
    ("SetInterval2.Max_Int_le",
     "[| ?A Int ?B ~= {}; finite ?A; finite ?B |]
      ==> Max (?A Int ?B) <= min (Max ?A) (Max ?B)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0),
              template_hole 4)
            ),
        template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))))),
    ("SetInterval2.interval_induct_rule",
     "(!!x. (!!y. x : ?I & y : ?I & y < x ==> ?P y) ==> ?P x) ==> ?P ?a",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("SetInterval2.nat_induct'",
     "[| ?P ?n0.0; !!n. [| ?n0.0 <= n; ?P n |] ==> ?P (Suc n);
         ?n0.0 <= ?n |]
      ==> ?P ?n",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate (template_app (template_var 2, template_var 0)))),
    ("SetInterval2.div_right_inj_on",
     "[| 0 < ?k; ALL x:?I. ALL y:?I. x < y --> x + ?k <= y |]
      ==> inj_on (%x. x div ?k) ?I",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)
           ))),
    ("SetInterval2.div_right_strict_mono_on",
     "[| 0 < ?k; ALL x:?I. ALL y:?I. x < y --> x + ?k <= y |]
      ==> SetInterval2.strict_mono_on (%x. x div ?k) ?I",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, t_empty), template_var 0)
           ))),
    ("SetInterval2.pigeonhole_mod",
     "[| 0 < ?m; ?m < card ?A |]
      ==> EX x:?A. EX y:?A. x < y & x mod ?m = y mod ?m",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 1),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), t_empty)
           ))),
    ("SetInterval2.Least_imp_disj_eq",
     "[| EX x. ?P x; !!x. ?P x ==> ?Q x |]
      ==> (LEAST x. ?P x | ?Q x) = (LEAST x. ?Q x)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 1, t_empty)))),
    ("SetInterval2.Max_the",
     "[| ?A ~= {}; finite ?A |]
      ==> Max ?A = (THE x. x : ?A & (ALL y. y : ?A --> y <= x))",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 9)),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_equation
        (template_app (template_hole 6, template_var 0),
         template_app (template_hole 5, t_empty)))),
    ("SetInterval2.Collect_minI_ex2",
     "{k: ?I. ?P k} ~= {} ==> EX x:?I. ?P x & (ALL y:?I. y < x --> ~ ?P y)",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 7, t_empty), template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("SetInterval2.max_Min_eq_Min_max",
     "[| finite ?A; ?A ~= {} |]
      ==> max ?x (Min ?A) = Min {max ?x a |a. a : ?A}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0),
           template_app (template_hole 4, template_var 1)),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("SetInterval2.max_iMin_eq_iMin_max",
     "[| finite ?A; ?A ~= {} |]
      ==> max ?x (iMin ?A) = iMin {max ?x a |a. a : ?A}",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 7))],
       template_equation
        (template_app
          (template_app (template_hole 5, template_var 0),
           template_app (template_hole 4, template_var 1)),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("SetInterval2.Least_disj",
     "[| EX x. ?P x; EX x. ?Q x |]
      ==> (LEAST x. ?P x | ?Q x) = min (LEAST x. ?P x) (LEAST x. ?Q x)",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app
            (template_hole 0, template_app (template_hole 2, t_empty)),
           template_app (template_hole 2, t_empty))))),
    ("SetInterval2.hom_iMin_commute",
     "[| !!x y. ?h (min x y) = min (?h x) (?h y); ?I ~= {} |]
      ==> iMin (?h ` ?I) = ?h (iMin ?I)",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("SetInterval2.Max_less_iMin_conv_less",
     "[| finite ?A; ?A ~= {}; ?B ~= {} |]
      ==> (Max ?A < iMin ?B) = (ALL a:?A. ALL b:?B. a < b)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("SetInterval2.Max_le_iMin_conv_le",
     "[| finite ?A; ?A ~= {}; ?B ~= {} |]
      ==> (Max ?A <= iMin ?B) = (ALL a:?A. ALL b:?B. a <= b)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 5)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1), t_empty)))),
    ("SetInterval2.eSuc_imp_Suc_aux_n0",
     "[| !!n. [| enat ?n0' <= n; ?P n |] ==> ?P (eSuc n); ?n0' <= ?n';
         ?P (enat ?n') |]
      ==> ?P (enat (Suc ?n'))",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty)),
        template_inequation (less_equals, template_var 2, template_var 0),
        template_predicate
         (
            template_app
             (template_var 1,
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_var 1,
             template_app
              (template_hole 3,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("SetInterval2.enat_induct'",
     "[| ?P ?n0.0; ?P \<infinity>;
         !!n. [| ?n0.0 <= n; ?P n |] ==> ?P (eSuc n); ?n0.0 <= ?n |]
      ==> ?P ?n",
     template_implication
      ([template_predicate (template_app (template_var 2, template_var 1)),
        template_predicate (template_app (template_var 2, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_predicate (template_app (template_var 2, template_var 0)))),
    ("SetInterval2.image_nat_induct",
     "[| ?P (?f 0); !!n. ?P (?f n) ==> ?P (?f (Suc n)); surj_on ?f UNIV ?I;
         ?a : ?I |]
      ==> ?P ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 3,
              template_app (template_var 2, template_hole 5))
            ),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_hole 1),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 1)
            )],
       template_predicate (template_app (template_var 3, template_var 0)))),
    ("SetInterval2.less_imp_Max_less_iMin",
     "[| finite ?A; ?A ~= {}; ?B ~= {}; ALL a:?A. ALL b:?B. a < b |]
      ==> Max ?A < iMin ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.le_imp_Max_le_iMin",
     "[| finite ?A; ?A ~= {}; ?B ~= {}; ALL a:?A. ALL b:?B. a <= b |]
      ==> Max ?A <= iMin ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_negation
         (template_equation (template_var 0, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("SetInterval2.Least_le_imp_le_disj",
     "[| EX x. ?P x; !!x y. [| ?P x; ?Q y |] ==> x <= y |]
      ==> (LEAST x. ?P x | ?Q x) = (LEAST x. ?P x)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 1, t_empty)))),
    ("SetInterval2.Least_le_imp_le",
     "[| EX x. ?P x; EX x. ?Q x; !!x y. [| ?P x; ?Q y |] ==> x <= y |]
      ==> (LEAST x. ?P x) <= (LEAST x. ?Q x)",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_inequation
        (less_equals, template_app (template_hole 0, t_empty),
         template_app (template_hole 0, t_empty)))),
    ("SetInterval2.iMinI2_order",
     "[| ?k : ?I; !!y. y : ?I ==> ?k <= y;
         !!x. [| x : ?I; ALL y:?I. x <= y |] ==> ?P x |]
      ==> ?P (iMin ?I)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0, template_app (template_hole 0, template_var 1))
           ))),
    ("SetInterval2.pigeonhole_mod2",
     "[| 0 < ?m; ?m <= ?c; inj_on ?f {..?c} |]
      ==> EX x<=?c. EX y<=?c. x < y & ?f x mod ?m = ?f y mod ?m",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 2),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("SetInterval2.MaxI2_order",
     "[| ?k : ?A; finite ?A; !!y. y : ?A ==> y <= ?k;
         !!x. [| x : ?A; ALL y:?A. y <= x |] ==> ?P x |]
      ==> ?P (Max ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_var 0, template_app (template_hole 0, template_var 1))
           ))),
    ("SetInterval2.card_partition",
     "[| finite ?C; !!c. c : ?C ==> card c = ?k;
         !!c1 c2. [| c1 : ?C; c2 : ?C; c1 ~= c2 |] ==> c1 Int c2 = {} |]
      ==> card (\<Union> ?C) = ?k * card ?C",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("SetInterval2.disjoint_partition_Int",
     "ALL c1:?C. ALL c2:?C. c1 ~= c2 --> c1 Int c2 = {} ==>
      ALL a1:{?A Int c |c. c : ?C}.
         ALL a2:{?A Int c |c. c : ?C}. a1 ~= a2 --> a1 Int a2 = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9, template_app (template_hole 3, t_empty)),
             t_empty)
           )))]:
   (string * thm * template) list
### theory "Draft.SetInterval2MoreTemplates"
### 0.669s elapsed time, 1.447s cpu time, 0.915s GC time
val it = (): unit
