Loading theory "HOL-Eisbach.Eisbach" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction")
Loading theory "CZH_Foundations.CZH_Sets_MIF" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction")
Loading theory "CZH_Foundations.CZH_Utilities" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction")
Loading theory "Conditional_Simplification.CS_Tools" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "Conditional_Simplification.IHOL_CS")
signature PARSE_TOOLS =
  sig
    val is_real_val: ('a, 'b) parse_val -> bool
    val name_term: (term, string) parse_val parser
    val parse_term_val: 'a parser -> (term, 'a) parse_val parser
    val parse_thm_val: 'a parser -> (thm, 'a) parse_val parser
    datatype ('a, 'b) parse_val
    = Parse_Val of 'b * ('a -> unit) | Real_Val of 'a
    val parse_val_cases:
       ('a -> 'b) -> ('b, 'a) parse_val -> 'b * ('b -> unit)
    val the_parse_fun: ('a, 'b) parse_val -> 'a -> unit
    val the_parse_val: ('a, 'b) parse_val -> 'b
    val the_real_val: ('a, 'b) parse_val -> 'a
  end
structure Parse_Tools: PARSE_TOOLS
signature TACTICAL =
  sig
    val ALLGOALS: (int -> tactic) -> tactic
    val APPEND: tactic * tactic -> tactic
    val APPEND': ('a -> tactic) * ('a -> tactic) -> 'a -> tactic
    val ASSERT_SUBGOAL: (int -> tactic) -> int -> tactic
    val CHANGED: tactic -> tactic
    val CHANGED_GOAL: (int -> tactic) -> int -> tactic
    val CHANGED_PROP: tactic -> tactic
    val COND: (thm -> bool) -> tactic -> tactic -> tactic
    val CONVERSION: conv -> int -> tactic
    val CSUBGOAL: (cterm * int -> tactic) -> int -> tactic
    val DETERM: tactic -> tactic
    val EVERY: tactic list -> tactic
    val EVERY': ('a -> tactic) list -> 'a -> tactic
    val EVERY1: (int -> tactic) list -> tactic
    val FILTER: (thm -> bool) -> tactic -> tactic
    val FIRST: tactic list -> tactic
    val FIRST': ('a -> tactic) list -> 'a -> tactic
    val FIRST1: (int -> tactic) list -> tactic
    val FIRSTGOAL: (int -> tactic) -> tactic
    val FIRST_APPEND': ('a -> tactic) list -> 'a -> tactic
    val HEADGOAL: (int -> tactic) -> tactic
    val ORELSE: tactic * tactic -> tactic
    val ORELSE': ('a -> tactic) * ('a -> tactic) -> 'a -> tactic
    val PRIMITIVE: (thm -> thm) -> tactic
    val PRIMSEQ: (thm -> thm Seq.seq) -> tactic
    val RANGE: (int -> tactic) list -> int -> tactic
    val REPEAT: tactic -> tactic
    val REPEAT1: tactic -> tactic
    val REPEAT_ALL_NEW: (int -> tactic) -> int -> tactic
    val REPEAT_DETERM: tactic -> tactic
    val REPEAT_DETERM1: tactic -> tactic
    val REPEAT_DETERM_FIRST: (int -> tactic) -> tactic
    val REPEAT_DETERM_N: int -> tactic -> tactic
    val REPEAT_DETERM_SOME: (int -> tactic) -> tactic
    val REPEAT_FIRST: (int -> tactic) -> tactic
    val REPEAT_SOME: (int -> tactic) -> tactic
    val SINGLE: tactic -> thm -> thm option
    val SOLVED': (int -> tactic) -> int -> tactic
    val SOMEGOAL: (int -> tactic) -> tactic
    val SUBGOAL: (term * int -> tactic) -> int -> tactic
    val THEN: tactic * tactic -> tactic
    val THEN': ('a -> tactic) * ('a -> tactic) -> 'a -> tactic
    val THEN_ALL_NEW: (int -> tactic) * (int -> tactic) -> int -> tactic
    val THEN_ELSE: tactic * (tactic * tactic) -> tactic
    val TRY: tactic -> tactic
    val TRYALL: (int -> tactic) -> tactic
    val all_tac: tactic
    val no_tac: tactic
    val print_tac: Proof.context -> string -> tactic
    type tactic = thm -> thm Seq.seq
  end
structure Tactical: TACTICAL
type tactic = thm -> thm Seq.seq
val FILTER = fn: (thm -> bool) -> tactic -> tactic
val REPEAT1 = fn: tactic -> tactic
val TRYALL = fn: (int -> tactic) -> tactic
val THEN = fn: tactic * tactic -> tactic
val COND = fn: (thm -> bool) -> tactic -> tactic -> tactic
val REPEAT = fn: tactic -> tactic
val ASSERT_SUBGOAL = fn: (int -> tactic) -> int -> tactic
val REPEAT_SOME = fn: (int -> tactic) -> tactic
val ORELSE' = fn: ('a -> tactic) * ('a -> tactic) -> 'a -> tactic
val print_tac = fn: Proof.context -> string -> tactic
val REPEAT_DETERM1 = fn: tactic -> tactic
val CONVERSION = fn: conv -> int -> tactic
val EVERY = fn: tactic list -> tactic
val ORELSE = fn: tactic * tactic -> tactic
val FIRST_APPEND' = fn: ('a -> tactic) list -> 'a -> tactic
val FIRST = fn: tactic list -> tactic
val SOMEGOAL = fn: (int -> tactic) -> tactic
val REPEAT_FIRST = fn: (int -> tactic) -> tactic
val APPEND' = fn: ('a -> tactic) * ('a -> tactic) -> 'a -> tactic
val SINGLE = fn: tactic -> thm -> thm option
val THEN_ELSE = fn: tactic * (tactic * tactic) -> tactic
val no_tac = fn: tactic
val ALLGOALS = fn: (int -> tactic) -> tactic
val THEN' = fn: ('a -> tactic) * ('a -> tactic) -> 'a -> tactic
val SUBGOAL = fn: (term * int -> tactic) -> int -> tactic
val REPEAT_DETERM = fn: tactic -> tactic
val CSUBGOAL = fn: (cterm * int -> tactic) -> int -> tactic
val APPEND = fn: tactic * tactic -> tactic
val PRIMITIVE = fn: (thm -> thm) -> tactic
val THEN_ALL_NEW = fn: (int -> tactic) * (int -> tactic) -> int -> tactic
val REPEAT_ALL_NEW = fn: (int -> tactic) -> int -> tactic
val EVERY1 = fn: (int -> tactic) list -> tactic
val FIRSTGOAL = fn: (int -> tactic) -> tactic
val RANGE = fn: (int -> tactic) list -> int -> tactic
val all_tac = fn: tactic
val FIRST1 = fn: (int -> tactic) list -> tactic
val REPEAT_DETERM_N = fn: int -> tactic -> tactic
val PRIMSEQ = fn: (thm -> thm Seq.seq) -> tactic
val CHANGED_GOAL = fn: (int -> tactic) -> int -> tactic
val TRY = fn: tactic -> tactic
val EVERY' = fn: ('a -> tactic) list -> 'a -> tactic
val HEADGOAL = fn: (int -> tactic) -> tactic
val FIRST' = fn: ('a -> tactic) list -> 'a -> tactic
val CHANGED_PROP = fn: tactic -> tactic
val REPEAT_DETERM_SOME = fn: (int -> tactic) -> tactic
val REPEAT_DETERM_FIRST = fn: (int -> tactic) -> tactic
val SOLVED' = fn: (int -> tactic) -> int -> tactic
val DETERM = fn: tactic -> tactic
val CHANGED = fn: tactic -> tactic
signature CS_STATS = sig val basic_stats: real list -> real list end
structure CS_Stats: CS_STATS
### theory "CZH_Foundations.CZH_Utilities"
### 0.034s elapsed time, 0.133s cpu time, 0.000s GC time
Loading theory "HOL-Cardinals.Fun_More" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
### theory "Conditional_Simplification.CS_Tools"
### 0.035s elapsed time, 0.136s cpu time, 0.000s GC time
Loading theory "Conditional_Simplification.IHOL_CS" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction")
### theory "CZH_Foundations.CZH_Sets_MIF"
### 0.036s elapsed time, 0.139s cpu time, 0.000s GC time
Loading theory "HOL-Cardinals.Order_Relation_More" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation" via "HOL-Cardinals.Wellfounded_More")
signature CS_TIMEIT =
  sig
    val TIMEIT: int -> (thm -> thm Seq.seq) -> tactic
    val mtimeit: int -> Method.text -> Proof.context -> Method.method
    val timing_report: Timing.timing list -> unit
    val timing_stats: Timing.timing list -> Timing.timing list
  end
structure CS_TimeIt: CS_TIMEIT
signature METHOD_CLOSURE =
  sig
    val apply_method:
       Proof.context ->
         string ->
           term list ->
             thm list list ->
               (Proof.context -> Method.method) list ->
                 Proof.context -> thm list -> context_tactic
    val method:
       binding ->
         (binding * typ option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
    val method_cmd:
       binding ->
         (binding * string option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
  end
structure Method_Closure: METHOD_CLOSURE
### theory "HOL-Cardinals.Fun_More"
### 0.095s elapsed time, 0.362s cpu time, 0.029s GC time
Loading theory "HOL-Cardinals.Order_Union" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
signature CS_UM =
  sig
    val match_inst:
       ((thm -> term) ->
          (thm -> bool) ->
            Proof.context -> thm -> term -> Envir.env list -> thm list)
         ->
         (thm -> term) ->
           (thm -> bool) -> Proof.context -> thm -> term -> thm list
    val match_inst_list:
       (thm -> term) ->
         (thm -> bool) ->
           Proof.context -> thm -> term -> Envir.env list -> thm list
    val match_inst_rec:
       (thm -> term) ->
         (thm -> bool) ->
           Proof.context -> thm -> term -> Envir.env list -> thm list
  end
structure CS_UM: CS_UM
structure Eisbach_Rule_Insts: sig end
### theory "HOL-Cardinals.Order_Union"
### 0.107s elapsed time, 0.424s cpu time, 0.000s GC time
Loading theory "HOL-Cardinals.Wellorder_Extension" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals")
signature CS_COND_SIMP =
  sig
    val concl_simp_of_simp: thm -> thm
    val cs_concl:
       Proof.context ->
         int -> bool -> match -> ist -> is_thm list -> Method.method
    val cs_concl_step:
       Proof.context -> bool -> match -> thm list -> Method.method
    val cs_concl_step_tac:
       Proof.context -> bool -> match -> thm list -> int -> tactic
    val cs_concl_tac:
       Proof.context -> bool -> match -> ist -> is_thm list -> int -> tactic
    val cs_intro_search_tac:
       Proof.context -> bool -> thm list -> int -> tactic
    val cs_intro_step_tac:
       Proof.context -> bool -> thm list -> int -> tactic
    val cs_prems:
       Proof.context ->
         int -> bool -> match -> ist -> is_thm list -> Method.method
    val cs_prems_atom_step:
       Proof.context -> match -> thm list -> Method.method
    val cs_prems_atom_step_tac:
       Proof.context -> match -> thm list -> int -> tactic
    val cs_prems_step:
       Proof.context -> bool -> match -> ist -> is_thm list -> Method.method
    val cs_prems_step_tac:
       Proof.context ->
         bool ->
           match ->
             ist -> thm list -> is_thm list -> int -> thm -> thm Seq.seq
    val cs_prems_tac:
       Proof.context ->
         bool -> match -> ist -> thm list -> is_thm list -> tactic
    datatype is_thm = cs_intro of thm list | cs_simp of thm list
    datatype ist = ist_compound | ist_simple
    datatype match = mdefault | mfull
    val prems_simp_of_simp: thm -> thm
    val remdups_tac: Proof.context -> int -> tactic
  end
structure CS_Cond_Simp: CS_COND_SIMP
### theory "Conditional_Simplification.IHOL_CS"
### 0.242s elapsed time, 0.931s cpu time, 0.104s GC time
Loading theory "HOL-Library.FuncSet" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Equipollence")
### theory "HOL-Cardinals.Order_Relation_More"
### 0.263s elapsed time, 1.020s cpu time, 0.104s GC time
Loading theory "HOL-Cardinals.Wellfounded_More" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation")
### theory "HOL-Cardinals.Wellfounded_More"
### 0.029s elapsed time, 0.116s cpu time, 0.000s GC time
Loading theory "HOL-Cardinals.Wellorder_Relation" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
### theory "HOL-Cardinals.Wellorder_Extension"
### 0.071s elapsed time, 0.281s cpu time, 0.000s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.120s elapsed time, 0.467s cpu time, 0.079s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Countable_Set")
### ML warning (line 170 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 187 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 309 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
signature MATCH_METHOD =
  sig
    val focus_params: Proof.context -> term list
    val focus_schematics: Proof.context -> Envir.tenv
  end
structure Match_Method: MATCH_METHOD
val method_evaluate = fn: Method.text -> Proof.context -> thm list -> tactic
### theory "HOL-Cardinals.Wellorder_Relation"
### 0.162s elapsed time, 0.639s cpu time, 0.079s GC time
Loading theory "HOL-Cardinals.Wellorder_Embedding" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
### theory "HOL-Eisbach.Eisbach"
### 0.518s elapsed time, 2.020s cpu time, 0.182s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  enumerate :: "'a set => nat => 'a"
### theory "HOL-Library.FuncSet"
### 0.371s elapsed time, 1.496s cpu time, 0.150s GC time
Loading theory "HOL-Library.Equipollence" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library")
### theory "HOL-Cardinals.Wellorder_Embedding"
### 0.181s elapsed time, 0.732s cpu time, 0.145s GC time
Loading theory "HOL-Cardinals.Wellorder_Constructions" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Infinite_Set"
### 0.279s elapsed time, 1.127s cpu time, 0.145s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Countable_Set" via "HOL-Library.Countable")
### theory "HOL-Library.Nat_Bijection"
### 0.535s elapsed time, 1.980s cpu time, 0.683s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Equipollence"
### 0.455s elapsed time, 1.627s cpu time, 0.670s GC time
Loading theory "HOL-Library.Rewrite" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction")
infix 1 then_cconv
infix 0 else_cconv
type cconv = conv
signature BASIC_CCONV =
  sig
    val CCONVERSION: cconv -> int -> tactic
    type cconv = conv
    val else_cconv: cconv * cconv -> cconv
    val then_cconv: cconv * cconv -> cconv
  end
signature CCONV =
  sig
    val CCONVERSION: cconv -> int -> tactic
    val abs_cconv:
       (cterm * Proof.context -> cconv) -> Proof.context -> cconv
    val all_cconv: cconv
    val arg1_cconv: cconv -> cconv
    val arg_cconv: cconv -> cconv
    type cconv = conv
    val comb_cconv: cconv -> cconv
    val combination_cconv: cconv -> cconv -> cconv
    val concl_cconv: int -> cconv -> cconv
    val else_cconv: cconv * cconv -> cconv
    val fconv_rule: cconv -> thm -> thm
    val first_cconv: cconv list -> cconv
    val fun2_cconv: cconv -> cconv
    val fun_cconv: cconv -> cconv
    val gconv_rule: cconv -> int -> thm -> thm
    val no_cconv: cconv
    val params_cconv:
       int -> (Proof.context -> cconv) -> Proof.context -> cconv
    val prems_cconv: int -> cconv -> cconv
    val rewr_cconv: thm -> cconv
    val rewrs_cconv: thm list -> cconv
    val then_cconv: cconv * cconv -> cconv
    val with_prems_cconv: int -> cconv -> cconv
  end
structure CConv: CCONV
structure Basic_CConv: BASIC_CCONV
val then_cconv = fn: cconv * cconv -> cconv
val CCONVERSION = fn: cconv -> int -> tactic
val else_cconv = fn: cconv * cconv -> cconv
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
infix 1 then_pconv
infix 0 else_pconv
signature REWRITE =
  sig
    val abs_pconv: patconv -> string option * typ -> patconv
    val all_pconv: patconv
    val arg_pconv: patconv -> patconv
    val asm_pconv: patconv -> patconv
    val asms_pconv: patconv -> patconv
    val concl_pconv: patconv -> patconv
    val else_pconv: patconv * patconv -> patconv
    val for_pconv: patconv -> (string option * typ option) list -> patconv
    val forall_pconv: patconv -> string option * typ option -> patconv
    val fun_pconv: patconv -> patconv
    val imp_pconv: patconv -> patconv
    val in_pconv: patconv -> patconv
    val judgment_pconv: patconv -> patconv
    val match_pconv: patconv -> term * (string option * typ) list -> patconv
    val mk_hole: int -> typ -> term
    val params_pconv: patconv -> patconv
    type patconv =
       Proof.context -> Type.tyenv * (string * term) list -> cconv
    datatype ('a, 'b) pattern
    = Asm | At | Concl | For of 'b list | In | Term of 'a
    val rewrite_conv:
       Proof.context ->
         (term * (string * typ) list, string * typ option) pattern list *
         term option
           -> thm list -> conv
    val rewrs_pconv: term option -> thm list -> patconv
    val then_pconv: patconv * patconv -> patconv
  end
structure Rewrite: REWRITE
### theory "HOL-Library.Rewrite"
### 0.228s elapsed time, 0.900s cpu time, 0.114s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.636s elapsed time, 2.349s cpu time, 0.710s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
consts
  shift :: "'a list => 'a stream => 'a stream"
### theory "HOL-Cardinals.Wellorder_Constructions"
### 0.837s elapsed time, 3.145s cpu time, 0.802s GC time
Loading theory "HOL-Cardinals.Cardinal_Order_Relation" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Cardinal_Arithmetic")
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### theory "HOL-Library.Set_Algebras"
### 0.266s elapsed time, 1.045s cpu time, 0.246s GC time
Loading theory "HOL-Cardinals.Ordinal_Arithmetic" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals")
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
locale wo_rel2
  fixes r :: "('a * 'a) set"
    and s :: "('b * 'b) set"
  assumes "wo_rel2 r s"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
### theory "HOL-Library.Stream"
### 1.288s elapsed time, 4.852s cpu time, 1.520s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Countable_Set")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Cardinal_Order_Relation"
### 1.083s elapsed time, 4.065s cpu time, 1.292s GC time
Loading theory "HOL-Cardinals.Cardinal_Arithmetic" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Ordinal_Arithmetic"
### 1.173s elapsed time, 4.411s cpu time, 1.416s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
### Additional type variable(s) in locale specification "countable": 'a
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Cardinal_Arithmetic"
### 0.228s elapsed time, 0.899s cpu time, 0.124s GC time
Loading theory "HOL-Cardinals.Cardinals" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Cardinals"
### 0.258s elapsed time, 1.017s cpu time, 0.099s GC time
Loading theory "Intro_Dest_Elim.IDE_Tools" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "Intro_Dest_Elim.IHOL_IDE")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
signature IDE_UTILITIES =
  sig
    val thm_printer: Proof.context -> bool -> string -> thm list -> unit
  end
structure IDE_Utilities: IDE_UTILITIES
### theory "Intro_Dest_Elim.IDE_Tools"
### 0.051s elapsed time, 0.208s cpu time, 0.070s GC time
Loading theory "Intro_Dest_Elim.IHOL_IDE" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction")
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
signature IDE =
  sig
    val mk_dest: Proof.context -> thm -> thm list
    val mk_elim: Proof.context -> thm -> thm list
    val mk_intro: Proof.context -> thm -> thm list
  end
structure IDE: IDE
### theory "Intro_Dest_Elim.IHOL_IDE"
### 0.060s elapsed time, 0.240s cpu time, 0.000s GC time
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Countable"
### 1.239s elapsed time, 4.647s cpu time, 0.636s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.845s elapsed time, 3.040s cpu time, 0.322s GC time
### theory "HOL-Library.Tree"
### 2.372s elapsed time, 8.601s cpu time, 1.892s GC time
Loading theory "Draft.Templates" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.ExtrEqs")
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.416s elapsed time, 1.356s cpu time, 1.193s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates")
### theory "HOL-Library.Countable_Set"
### 0.740s elapsed time, 2.090s cpu time, 1.237s GC time
Loading theory "ZFC_in_HOL.ZFC_Library" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL")
### theory "ZFC_in_HOL.ZFC_Library"
### 0.368s elapsed time, 0.739s cpu time, 0.000s GC time
Loading theory "ZFC_in_HOL.ZFC_in_HOL" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.582s elapsed time, 1.229s cpu time, 0.137s GC time
instantiation
  V :: zero
  zero_V == zero_class.zero :: V
instantiation
  V :: one
  one_V == one_class.one :: V
instantiation
  V :: distrib_lattice
  inf_V == inf :: V => V => V
  sup_V == sup :: V => V => V
  less_eq_V == less_eq :: V => V => bool
  less_V == less :: V => V => bool
instantiation
  V :: Sup
  Sup_V == Sup :: V set => V
instantiation
  V :: Inf
  Inf_V == Inf :: V set => V
instantiation
  V :: conditionally_complete_lattice
instantiation
  V :: zero_neq_one
instantiation
  V :: zero_less_one
consts
  ord_of_nat :: "nat => V"
### theory "ZFC_in_HOL.ZFC_in_HOL"
### 0.417s elapsed time, 0.537s cpu time, 0.103s GC time
Loading theory "ZFC_in_HOL.ZFC_Cardinals" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses")
### theory "ZFC_in_HOL.ZFC_Cardinals"
### 0.655s elapsed time, 0.748s cpu time, 0.125s GC time
Loading theory "ZFC_in_HOL.Kirby" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "ZFC_in_HOL.Cantor_NF" via "ZFC_in_HOL.Ordinal_Exp")
Loading theory "ZFC_in_HOL.ZFC_Typeclasses" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction")
instantiation
  V :: plus
  plus_V == plus :: V => V => V
instantiation
  V :: monoid_add
instantiation
  V :: times
  times_V == times :: V => V => V
instantiation
  V :: monoid_mult
### Additional type variable(s) in locale specification "embeddable": 'a
### theory "ZFC_in_HOL.Kirby"
### 0.719s elapsed time, 2.093s cpu time, 1.493s GC time
Loading theory "ZFC_in_HOL.Ordinal_Exp" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "ZFC_in_HOL.Cantor_NF")
class embeddable = type +
  assumes "ex_inj": "EX V_of. inj V_of"
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
### theory "ZFC_in_HOL.Ordinal_Exp"
### 0.135s elapsed time, 0.328s cpu time, 0.117s GC time
Loading theory "ZFC_in_HOL.Cantor_NF" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction")
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
consts
  V_of_list :: "('a => V) => 'a list => V"
### Additional type variable(s) in locale specification "small": 'a
class small = type +
  assumes "small": "small UNIV"
Found termination order: "length <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
class countable = embeddable +
  assumes "ex_inj": "EX to_nat. inj to_nat"
### theory "ZFC_in_HOL.Cantor_NF"
### 0.459s elapsed time, 1.016s cpu time, 0.183s GC time
### theory "ZFC_in_HOL.ZFC_Typeclasses"
### 1.441s elapsed time, 3.615s cpu time, 1.793s GC time
Loading theory "CZH_Foundations.CZH_Introduction" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction")
### theory "CZH_Foundations.CZH_Introduction"
### 0.028s elapsed time, 0.028s cpu time, 0.000s GC time
Loading theory "CZH_Foundations.CZH_Sets_Introduction" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets")
### theory "CZH_Foundations.CZH_Sets_Introduction"
### 0.969s elapsed time, 1.065s cpu time, 0.125s GC time
Loading theory "CZH_Foundations.CZH_Sets_Sets" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat")
### theory "CZH_Foundations.CZH_Sets_Sets"
### 0.430s elapsed time, 0.513s cpu time, 0.108s GC time
Loading theory "CZH_Foundations.CZH_Sets_BRelations" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Equipollence" via "CZH_Foundations.CZH_Sets_IF")
Loading theory "CZH_Foundations.CZH_Sets_Nat" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality")
### theory "CZH_Foundations.CZH_Sets_Nat"
### 0.221s elapsed time, 0.511s cpu time, 0.131s GC time
locale vbrelation
  fixes r :: "V"
  assumes "vbrelation r"
locale vsv
  fixes r :: "V"
  assumes "vsv r"
theorem
  vsvI:
    [| vbrelation ?r;
       !!a b c.
          [| <a, b> \<in>\<^sub>\<circ> ?r; <a, c> \<in>\<^sub>\<circ> ?r |]
          ==> b = c |]
    ==> vsv ?r
theorem
  vsvD:
    vsv ?r ==> vbrelation ?r
    [| vsv ?r; <?a, ?b> \<in>\<^sub>\<circ> ?r;
       <?a, ?c> \<in>\<^sub>\<circ> ?r |]
    ==> ?b = ?c
theorem
  vsvE:
    [| vsv ?r;
       [| vbrelation ?r;
          !!a b c.
             [| <a, b> \<in>\<^sub>\<circ> ?r;
                <a, c> \<in>\<^sub>\<circ> ?r |]
             ==> b = c |]
       ==> ?W |]
    ==> ?W
locale vsv
  fixes r :: "V"
  assumes "vsv r"
locale vsv
  fixes r :: "V"
  assumes "vsv r"
locale v11
  fixes r :: "V"
  assumes "v11 r"
theorem v11I: [| vsv ?r; vsv (?r\<inverse>\<^sub>\<circ>) |] ==> v11 ?r
theorem v11D:
          v11 ?r ==> vsv ?r
          v11 ?r ==> vsv (?r\<inverse>\<^sub>\<circ>)
theorem
  v11E:
    [| v11 ?r; [| vsv ?r; vsv (?r\<inverse>\<^sub>\<circ>) |] ==> ?W |]
    ==> ?W
locale v11
  fixes r :: "V"
  assumes "v11 r"
locale v11
  fixes r :: "V"
  assumes "v11 r"
val pure_unfold = fn: Proof.context -> thm list -> thm -> thm
val msg_args = "mk_VLambda: invalid arguments": string
val vsv_VLambda_thm = "vsv (VLambda ?A ?f)": thm
val vsv_VLambda_match =
   Const ("ZFC_Cardinals.VLambda", "V => (V => V) => V") $
     Var (("A", 0), "V") $
     Abs ("a", "V", Var (("f", 0), "V => V") $ Bound 0):
   term
val vdomain_VLambda_thm = "\<D>\<^sub>\<circ> (VLambda ?A ?f) = ?A": thm
val vdomain_VLambda_match =
   Const ("ZFC_Cardinals.VLambda", "V => (V => V) => V") $
     Var (("A", 0), "V") $
     Abs ("a", "V", Var (("f", 0), "V => V") $ Bound 0):
   term
val app_VLambda_thm =
   "?x \<in>\<^sub>\<circ> ?A ==> VLambda ?A ?b\<lparr>?x\<rparr> = ?b ?x":
   thm
val app_VLambda_match =
   Const ("ZFC_Cardinals.VLambda", "V => (V => V) => V") $
     Var (("A", 0), "V") $ Var (("b", 0), "V => V"):
   term
val mk_VLabmda_thm = fn: term -> thm -> Proof.context -> thm -> thm
val mk_VLambda_vsv = fn: Proof.context -> thm -> thm
val mk_VLambda_vdomain = fn: Proof.context -> thm -> thm
val mk_VLambda_app = fn: Proof.context -> thm -> thm
val mk_VLambda_parser = fn:
   Token.T list ->
     ((Facts.ref * Token.src list) * (string * Attrib.binding) list) *
     Token.T list
val process_mk_VLambda_thm = fn:
   (Proof.context -> 'a -> thm) ->
     (binding * Token.src list) * 'a -> Proof.context -> local_theory
val folder_mk_VLambda = fn:
   (string * (binding * Token.src list)) * thm ->
     Proof.context -> local_theory
val process_mk_VLambda = fn:
   (Facts.ref * Token.src list) * (string * (binding * Token.src list)) list
     -> Proof.context -> Proof.context
### theory "CZH_Foundations.CZH_Sets_BRelations"
### 1.834s elapsed time, 3.578s cpu time, 2.159s GC time
Loading theory "CZH_Foundations.CZH_Sets_IF" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Equipollence")
theorem vprojection_vsv: vsv (vprojection ?I ?A ?i)
theorem
  vprojection_vdomain:
    \<D>\<^sub>\<circ> (vprojection ?I ?A ?i) = vproduct ?I ?A
theorem
  vprojection_app:
    ?x \<in>\<^sub>\<circ> vproduct ?I ?A ==>
    vprojection ?I ?A ?i\<lparr>?x\<rparr> = ?x\<lparr>?i\<rparr>
### theory "CZH_Foundations.CZH_Sets_IF"
### 0.389s elapsed time, 0.475s cpu time, 0.103s GC time
Loading theory "CZH_Foundations.CZH_Sets_Equipollence" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality")
Loading theory "CZH_Foundations.CZH_Sets_Ordinals" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_VNHS")
### theory "CZH_Foundations.CZH_Sets_Equipollence"
### 0.072s elapsed time, 0.144s cpu time, 0.000s GC time
Loading theory "CZH_Foundations.CZH_Sets_Cardinality" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences")
### theory "CZH_Foundations.CZH_Sets_Ordinals"
### 0.261s elapsed time, 0.591s cpu time, 0.140s GC time
### theory "CZH_Foundations.CZH_Sets_Cardinality"
### 0.305s elapsed time, 0.567s cpu time, 0.140s GC time
Loading theory "CZH_Foundations.CZH_Sets_FSequences" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations")
locale vfsequence
  fixes xs :: "V"
  assumes "vfsequence xs"
locale vfsequence_pair
  fixes xs\<^sub>1 :: "V"
    and xs\<^sub>2 :: "V"
  assumes "vfsequence_pair xs\<^sub>1 xs\<^sub>2"
locale vfsequence_pair
  fixes xs\<^sub>1 :: "V"
    and xs\<^sub>2 :: "V"
  assumes "vfsequence_pair xs\<^sub>1 xs\<^sub>2"
consts
  vfsequence_of_vlist :: "V list => V"
### theory "CZH_Foundations.CZH_Sets_FSequences"
### 0.620s elapsed time, 0.836s cpu time, 0.283s GC time
Loading theory "CZH_Foundations.CZH_Sets_FBRelations" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP")
locale fbrelation
  fixes r :: "V"
  assumes "fbrelation r"
locale fbrelation_pair
  fixes r\<^sub>1 :: "V"
    and r\<^sub>2 :: "V"
  assumes "fbrelation_pair r\<^sub>1 r\<^sub>2"
### theory "CZH_Foundations.CZH_Sets_FBRelations"
### 0.649s elapsed time, 0.833s cpu time, 0.242s GC time
Loading theory "CZH_Foundations.CZH_Sets_NOP" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction")
Loading theory "CZH_Foundations.CZH_Sets_VNHS" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction" via "CZH_Foundations.CZH_DG_Introduction")
locale pnop
  fixes A :: "V"
    and n :: "V"
    and f :: "V"
  assumes "pnop A n f"
locale nop
  fixes A :: "V"
    and n :: "V"
    and f :: "V"
  assumes "nop A n f"
locale nop_v11
  fixes A :: "V"
    and n :: "V"
    and f :: "V"
  assumes "nop_v11 A n f"
locale nop_onto
  fixes A :: "V"
    and n :: "V"
    and f :: "V"
  assumes "nop_onto A n f"
locale nop_bij
  fixes A :: "V"
    and n :: "V"
    and f :: "V"
  assumes "nop_bij A n f"
locale scalar
  fixes A :: "V"
    and f :: "V"
  assumes "scalar A f"
locale unop
  fixes A :: "V"
    and f :: "V"
  assumes "unop A f"
locale unop_v11
  fixes A :: "V"
    and f :: "V"
  assumes "unop_v11 A f"
locale \<Z>
  fixes \<alpha> :: "V"
  assumes "\<Z> \<alpha>"
locale unop_onto
  fixes A :: "V"
    and f :: "V"
  assumes "unop_onto A f"
locale unop_bij
  fixes A :: "V"
    and f :: "V"
  assumes "unop_bij A f"
### theory "CZH_Foundations.CZH_Sets_VNHS"
### 0.421s elapsed time, 0.908s cpu time, 0.132s GC time
locale pbinop
  fixes A :: "V"
    and f :: "V"
  assumes "pbinop A f"
locale binop
  fixes A :: "V"
    and f :: "V"
  assumes "binop A f"
locale binop_v11
  fixes A :: "V"
    and f :: "V"
  assumes "binop_v11 A f"
locale binop_onto
  fixes A :: "V"
    and f :: "V"
  assumes "binop_onto A f"
locale binop_bij
  fixes A :: "V"
    and f :: "V"
  assumes "binop_bij A f"
### theory "CZH_Foundations.CZH_Sets_NOP"
### 0.714s elapsed time, 1.313s cpu time, 0.269s GC time
Loading theory "CZH_Foundations.CZH_DG_Introduction" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Introduction")
### theory "CZH_Foundations.CZH_DG_Introduction"
### 2.476s elapsed time, 2.729s cpu time, 0.331s GC time
Loading theory "CZH_Foundations.CZH_DG_Digraph" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory" via "Draft.CZH_ECAT_NTCF" via "CZH_Foundations.CZH_SMC_NTSMCF" via "CZH_Foundations.CZH_SMC_Semifunctor" via "CZH_Foundations.CZH_DG_DGHM")
Loading theory "CZH_Foundations.CZH_SMC_Introduction" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory" via "Draft.CZH_ECAT_NTCF" via "CZH_Foundations.CZH_SMC_NTSMCF" via "CZH_Foundations.CZH_SMC_Semifunctor" via "CZH_Foundations.CZH_SMC_Semicategory")
Loading theory "Draft.CZH_ECAT_Introduction" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example")
theorem
  is_arrI:
    [| ?f \<in>\<^sub>\<circ> ?\<CC>\<lparr>Arr\<rparr>;
       ?\<CC>\<lparr>Dom\<rparr>\<lparr>?f\<rparr> = ?a;
       ?\<CC>\<lparr>Cod\<rparr>\<lparr>?f\<rparr> = ?b |]
    ==> ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b
theorem
  is_arrD:
    ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b ==>
    ?f \<in>\<^sub>\<circ> ?\<CC>\<lparr>Arr\<rparr>
    ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b ==>
    ?\<CC>\<lparr>Dom\<rparr>\<lparr>?f\<rparr> = ?a
    ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b ==>
    ?\<CC>\<lparr>Cod\<rparr>\<lparr>?f\<rparr> = ?b
theorem
  is_arrE:
    [| ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
       [| ?f \<in>\<^sub>\<circ> ?\<CC>\<lparr>Arr\<rparr>;
          ?\<CC>\<lparr>Dom\<rparr>\<lparr>?f\<rparr> = ?a;
          ?\<CC>\<lparr>Cod\<rparr>\<lparr>?f\<rparr> = ?b |]
       ==> ?W |]
    ==> ?W
locale digraph
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "digraph \<alpha> \<CC>"
theorem
  digraphI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>Dom\<rparr>);
       vsv (?\<CC>\<lparr>Cod\<rparr>); vcard ?\<CC> = 4\<^sub>\<nat>;
       \<D>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>) =
       ?\<CC>\<lparr>Arr\<rparr>;
       \<R>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>)
       \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       \<D>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>) =
       ?\<CC>\<lparr>Arr\<rparr>;
       \<R>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>)
       \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       ?\<CC>\<lparr>Obj\<rparr> \<subseteq>\<^sub>\<circ> Vset ?\<alpha>;
       !!A B.
          [| A \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
             B \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
             A \<in>\<^sub>\<circ> Vset ?\<alpha>;
             B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
          ==> \<Union>\<^sub>\<circ>
               ((\<lambda>a\<in>\<^sub>\<circ>A.
                    \<Union>\<^sub>\<circ>
                     (VLambda B (Hom ?\<CC> a) `\<^sub>\<circ>
                      B)) `\<^sub>\<circ>
                A)
              \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> digraph ?\<alpha> ?\<CC>
theorem
  digraphD:
    digraph ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    digraph ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    digraph ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>Dom\<rparr>)
    digraph ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>Cod\<rparr>)
    digraph ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 4\<^sub>\<nat>
    digraph ?\<alpha> ?\<CC> ==>
    \<D>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>) =
    ?\<CC>\<lparr>Arr\<rparr>
    digraph ?\<alpha> ?\<CC> ==>
    \<R>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>)
    \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>
    digraph ?\<alpha> ?\<CC> ==>
    \<D>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>) =
    ?\<CC>\<lparr>Arr\<rparr>
    digraph ?\<alpha> ?\<CC> ==>
    \<R>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>)
    \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>
    digraph ?\<alpha> ?\<CC> ==>
    ?\<CC>\<lparr>Obj\<rparr> \<subseteq>\<^sub>\<circ> Vset ?\<alpha>
    [| digraph ?\<alpha> ?\<CC>;
       ?A \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       ?B \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       ?A \<in>\<^sub>\<circ> Vset ?\<alpha>;
       ?B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> \<Union>\<^sub>\<circ>
         ((\<lambda>a\<in>\<^sub>\<circ>?A.
              \<Union>\<^sub>\<circ>
               (VLambda ?B (Hom ?\<CC> a) `\<^sub>\<circ>
                ?B)) `\<^sub>\<circ>
          ?A)
        \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  digraphE:
    [| digraph ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>Dom\<rparr>); vsv (?\<CC>\<lparr>Cod\<rparr>);
          vcard ?\<CC> = 4\<^sub>\<nat>;
          \<D>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>) =
          ?\<CC>\<lparr>Arr\<rparr>;
          \<R>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
          \<D>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>) =
          ?\<CC>\<lparr>Arr\<rparr>;
          \<R>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
          ?\<CC>\<lparr>Obj\<rparr>
          \<subseteq>\<^sub>\<circ> Vset ?\<alpha>;
          !!A B.
             [| A \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
                B \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
                A \<in>\<^sub>\<circ> Vset ?\<alpha>;
                B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
             ==> \<Union>\<^sub>\<circ>
                  ((\<lambda>a\<in>\<^sub>\<circ>A.
                       \<Union>\<^sub>\<circ>
                        (VLambda B (Hom ?\<CC> a) `\<^sub>\<circ>
                         B)) `\<^sub>\<circ>
                   A)
                 \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
### theory "Draft.CZH_ECAT_Introduction"
### 0.579s elapsed time, 1.761s cpu time, 0.097s GC time
### theory "CZH_Foundations.CZH_SMC_Introduction"
### 0.579s elapsed time, 1.763s cpu time, 0.097s GC time
### theory "CZH_Foundations.CZH_DG_Digraph"
### 0.938s elapsed time, 2.200s cpu time, 0.200s GC time
Loading theory "CZH_Foundations.CZH_DG_DGHM" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory" via "Draft.CZH_ECAT_NTCF" via "CZH_Foundations.CZH_SMC_NTSMCF" via "CZH_Foundations.CZH_SMC_Semifunctor")
Loading theory "CZH_Foundations.CZH_DG_Small_Digraph" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory" via "Draft.CZH_ECAT_Small_Category" via "CZH_Foundations.CZH_SMC_Small_Semicategory")
Loading theory "CZH_Foundations.CZH_SMC_Semicategory" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory" via "Draft.CZH_ECAT_NTCF" via "CZH_Foundations.CZH_SMC_NTSMCF" via "CZH_Foundations.CZH_SMC_Semifunctor")
locale semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "semicategory \<alpha> \<CC>"
theorem
  semicategoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>Comp\<rparr>);
       vcard ?\<CC> = 5\<^sub>\<nat>; digraph ?\<alpha> (smc_dg ?\<CC>);
       !!gf. (gf \<in>\<^sub>\<circ> \<D>\<^sub>\<circ>
(?\<CC>\<lparr>Comp\<rparr>)) =
             (EX g f b c a.
                 gf = [g, f]\<^sub>\<circ> &
                 g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
                 f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b);
       !!b c g a f.
          [| g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
          ==> g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              f : a \<mapsto>\<^bsub>?\<CC>\<^esub> c;
       !!c d h b g a f.
          [| h : c \<mapsto>\<^bsub>?\<CC>\<^esub> d;
             g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
          ==> h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              f =
              h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              (g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f) |]
    ==> semicategory ?\<alpha> ?\<CC>
theorem
  semicategoryD:
    semicategory ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    semicategory ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    semicategory ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>Comp\<rparr>)
    semicategory ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 5\<^sub>\<nat>
    semicategory ?\<alpha> ?\<CC> ==> digraph ?\<alpha> (smc_dg ?\<CC>)
    semicategory ?\<alpha> ?\<CC> ==>
    (?gf
     \<in>\<^sub>\<circ> \<D>\<^sub>\<circ> (?\<CC>\<lparr>Comp\<rparr>)) =
    (EX g f b c a.
        ?gf = [g, f]\<^sub>\<circ> &
        g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
        f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b)
    [| semicategory ?\<alpha> ?\<CC>;
       ?g : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?c
    [| semicategory ?\<alpha> ?\<CC>;
       ?h : ?c \<mapsto>\<^bsub>?\<CC>\<^esub> ?d;
       ?g : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f =
        ?h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        (?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f)
locale tiny_digraph
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "tiny_digraph \<alpha> \<CC>"
theorem
  semicategoryE:
    [| semicategory ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>Comp\<rparr>); vcard ?\<CC> = 5\<^sub>\<nat>;
          digraph ?\<alpha> (smc_dg ?\<CC>);
          !!gf. (gf \<in>\<^sub>\<circ> \<D>\<^sub>\<circ>
   (?\<CC>\<lparr>Comp\<rparr>)) =
                (EX g f b c a.
                    gf = [g, f]\<^sub>\<circ> &
                    g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
                    f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b);
          !!b c g a f.
             [| g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
             ==> g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 f : a \<mapsto>\<^bsub>?\<CC>\<^esub> c;
          !!c d h b g a f.
             [| h : c \<mapsto>\<^bsub>?\<CC>\<^esub> d;
                g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
             ==> h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 f =
                 h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 (g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f) |]
       ==> ?W |]
    ==> ?W
theorem
  tiny_digraphI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>Dom\<rparr>);
       vsv (?\<CC>\<lparr>Cod\<rparr>); vcard ?\<CC> = 4\<^sub>\<nat>;
       \<D>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>) =
       ?\<CC>\<lparr>Arr\<rparr>;
       \<R>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>)
       \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       \<D>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>) =
       ?\<CC>\<lparr>Arr\<rparr>;
       \<R>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>)
       \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       ?\<CC>\<lparr>Obj\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>;
       ?\<CC>\<lparr>Arr\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> tiny_digraph ?\<alpha> ?\<CC>
theorem
  tiny_digraphD:
    tiny_digraph ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    tiny_digraph ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    tiny_digraph ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>Dom\<rparr>)
    tiny_digraph ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>Cod\<rparr>)
    tiny_digraph ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 4\<^sub>\<nat>
    tiny_digraph ?\<alpha> ?\<CC> ==>
    \<D>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>) =
    ?\<CC>\<lparr>Arr\<rparr>
    tiny_digraph ?\<alpha> ?\<CC> ==>
    \<R>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>)
    \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>
    tiny_digraph ?\<alpha> ?\<CC> ==>
    \<D>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>) =
    ?\<CC>\<lparr>Arr\<rparr>
    tiny_digraph ?\<alpha> ?\<CC> ==>
    \<R>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>)
    \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>
    tiny_digraph ?\<alpha> ?\<CC> ==>
    ?\<CC>\<lparr>Obj\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>
    tiny_digraph ?\<alpha> ?\<CC> ==>
    ?\<CC>\<lparr>Arr\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  tiny_digraphE:
    [| tiny_digraph ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>Dom\<rparr>); vsv (?\<CC>\<lparr>Cod\<rparr>);
          vcard ?\<CC> = 4\<^sub>\<nat>;
          \<D>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>) =
          ?\<CC>\<lparr>Arr\<rparr>;
          \<R>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
          \<D>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>) =
          ?\<CC>\<lparr>Arr\<rparr>;
          \<R>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
          ?\<CC>\<lparr>Obj\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>;
          ?\<CC>\<lparr>Arr\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
locale semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "semicategory \<alpha> \<CC>"
locale finite_digraph
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "finite_digraph \<alpha> \<CC>"
theorem
  finite_digraphI:
    [| digraph ?\<alpha> ?\<CC>; vfinite (?\<CC>\<lparr>Obj\<rparr>);
       vfinite (?\<CC>\<lparr>Arr\<rparr>) |]
    ==> finite_digraph ?\<alpha> ?\<CC>
theorem
  finite_digraphD:
    finite_digraph ?\<alpha> ?\<CC> ==> digraph ?\<alpha> ?\<CC>
    finite_digraph ?\<alpha> ?\<CC> ==> vfinite (?\<CC>\<lparr>Obj\<rparr>)
    finite_digraph ?\<alpha> ?\<CC> ==> vfinite (?\<CC>\<lparr>Arr\<rparr>)
theorem
  finite_digraphE:
    [| finite_digraph ?\<alpha> ?\<CC>;
       [| digraph ?\<alpha> ?\<CC>; vfinite (?\<CC>\<lparr>Obj\<rparr>);
          vfinite (?\<CC>\<lparr>Arr\<rparr>) |]
       ==> ?W |]
    ==> ?W
### theory "CZH_Foundations.CZH_DG_Small_Digraph"
### 0.770s elapsed time, 2.428s cpu time, 0.461s GC time
locale is_dghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_dghm \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_dghmI:
    [| \<Z> ?\<alpha>; vfsequence ?\<FF>; digraph ?\<alpha> ?\<AA>;
       digraph ?\<alpha> ?\<BB>; vcard ?\<FF> = 4\<^sub>\<nat>;
       ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>;
       ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>;
       vsv (?\<FF>\<lparr>ObjMap\<rparr>);
       vsv (?\<FF>\<lparr>ArrMap\<rparr>);
       \<D>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>) =
       ?\<AA>\<lparr>Obj\<rparr>;
       \<R>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>)
       \<subseteq>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
       \<D>\<^sub>\<circ> (?\<FF>\<lparr>ArrMap\<rparr>) =
       ?\<AA>\<lparr>Arr\<rparr>;
       !!a b f.
          f : a \<mapsto>\<^bsub>?\<AA>\<^esub> b ==>
          ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>b\<rparr> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_dghmD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<Z> ?\<alpha>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vfsequence ?\<FF>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    digraph ?\<alpha> ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    digraph ?\<alpha> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vcard ?\<FF> = 4\<^sub>\<nat>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vsv (?\<FF>\<lparr>ObjMap\<rparr>)
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vsv (?\<FF>\<lparr>ArrMap\<rparr>)
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<D>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>) =
    ?\<AA>\<lparr>Obj\<rparr>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<R>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>)
    \<subseteq>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<D>\<^sub>\<circ> (?\<FF>\<lparr>ArrMap\<rparr>) =
    ?\<AA>\<lparr>Arr\<rparr>
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?f : ?a \<mapsto>\<^bsub>?\<AA>\<^esub> ?b |]
    ==> ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?f\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?b\<rparr>
theorem
  is_monic_arrI:
    [| ?m : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
       !!f g a.
          [| f : a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
             g : a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
             ?m \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f =
             ?m \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> g |]
          ==> f = g |]
    ==> ?m : ?b \<mapsto>\<^sub>m\<^sub>o\<^sub>n\<^bsub>?\<CC>\<^esub> ?c
theorem
  is_dghmE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| \<Z> ?\<alpha>; vfsequence ?\<FF>; digraph ?\<alpha> ?\<AA>;
          digraph ?\<alpha> ?\<BB>; vcard ?\<FF> = 4\<^sub>\<nat>;
          ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>;
          ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>;
          vsv (?\<FF>\<lparr>ObjMap\<rparr>);
          vsv (?\<FF>\<lparr>ArrMap\<rparr>);
          \<D>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>) =
          ?\<AA>\<lparr>Obj\<rparr>;
          \<R>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
          \<D>\<^sub>\<circ> (?\<FF>\<lparr>ArrMap\<rparr>) =
          ?\<AA>\<lparr>Arr\<rparr>;
          !!a b f.
             f : a \<mapsto>\<^bsub>?\<AA>\<^esub> b ==>
             ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>b\<rparr> |]
       ==> ?W |]
    ==> ?W
theorem
  is_monic_arrD:
    ?m : ?b \<mapsto>\<^sub>m\<^sub>o\<^sub>n\<^bsub>?\<CC>\<^esub> ?c ==>
    ?m : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c
    [| ?m : ?b \<mapsto>\<^sub>m\<^sub>o\<^sub>n\<^bsub>?\<CC>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
       ?g : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
       ?m \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f =
       ?m \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?g |]
    ==> ?f = ?g
theorem
  is_monic_arrE:
    [| ?m : ?b \<mapsto>\<^sub>m\<^sub>o\<^sub>n\<^bsub>?\<CC>\<^esub> ?c;
       [| ?m : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
          !!f g a.
             [| f : a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
                g : a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
                ?m \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f =
                ?m \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> g |]
             ==> f = g |]
       ==> ?W |]
    ==> ?W
theorem
  is_idem_arrI:
    [| ?f : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
       ?f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f = ?f |]
    ==> ?f : \<mapsto>\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<CC>\<^esub> ?b
theorem
  is_idem_arrD:
    ?f : \<mapsto>\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<CC>\<^esub> ?b ==>
    ?f : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?b
    ?f : \<mapsto>\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<CC>\<^esub> ?b ==>
    ?f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f = ?f
theorem
  is_idem_arrE:
    [| ?f : \<mapsto>\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<CC>\<^esub> ?b;
       [| ?f : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
          ?f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f = ?f |]
       ==> ?W |]
    ==> ?W
theorem
  obj_terminalI:
    [| ?t \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
            Ex1 (is_arr ?\<CC> a ?t) |]
    ==> obj_terminal ?\<CC> ?t
theorem
  obj_terminalD:
    obj_terminal ?\<CC> ?t ==>
    ?t \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>
    [| obj_terminal ?\<CC> ?t;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> |]
    ==> Ex1 (is_arr ?\<CC> ?a ?t)
theorem
  obj_terminalE:
    [| obj_terminal ?\<CC> ?t;
       [| ?t \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
          !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
               Ex1 (is_arr ?\<CC> a ?t) |]
       ==> ?W |]
    ==> ?W
theorem
  obj_nullI:
    [| obj_initial ?\<CC> ?a; obj_terminal ?\<CC> ?a |]
    ==> obj_null ?\<CC> ?a
theorem obj_nullD:
          obj_null ?\<CC> ?a ==> obj_initial ?\<CC> ?a
          obj_null ?\<CC> ?a ==> obj_terminal ?\<CC> ?a
theorem
  obj_nullE:
    [| obj_null ?\<CC> ?a;
       [| obj_initial ?\<CC> ?a; obj_terminal ?\<CC> ?a |] ==> ?W |]
    ==> ?W
### theory "CZH_Foundations.CZH_SMC_Semicategory"
### 1.907s elapsed time, 5.080s cpu time, 1.198s GC time
Loading theory "CZH_Foundations.CZH_SMC_Small_Semicategory" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory" via "Draft.CZH_ECAT_Small_Category")
Loading theory "Draft.CZH_ECAT_Category" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory" via "Draft.CZH_ECAT_NTCF" via "Draft.CZH_ECAT_Functor")
locale category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "category \<alpha> \<CC>"
theorem
  categoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>CId\<rparr>);
       vcard ?\<CC> = 6\<^sub>\<nat>;
       semicategory ?\<alpha> (cat_smc ?\<CC>);
       \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
       ?\<CC>\<lparr>Obj\<rparr>;
       !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
            ?\<CC>\<lparr>CId\<rparr>\<lparr>a\<rparr> : a \<mapsto>\<^bsub>?\<CC>\<^esub> a;
       !!a b f.
          f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
          ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          f =
          f;
       !!b c f.
          f : b \<mapsto>\<^bsub>?\<CC>\<^esub> c ==>
          f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> =
          f |]
    ==> category ?\<alpha> ?\<CC>
theorem
  categoryD:
    category ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    category ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    category ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>CId\<rparr>)
    category ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 6\<^sub>\<nat>
    category ?\<alpha> ?\<CC> ==> semicategory ?\<alpha> (cat_smc ?\<CC>)
    category ?\<alpha> ?\<CC> ==>
    \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
    ?\<CC>\<lparr>Obj\<rparr>
    [| category ?\<alpha> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> |]
    ==> ?\<CC>\<lparr>CId\<rparr>\<lparr>?a\<rparr> : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?a
    [| category ?\<alpha> ?\<CC>;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?\<CC>\<lparr>CId\<rparr>\<lparr>?b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f =
        ?f
    [| category ?\<alpha> ?\<CC>;
       ?f : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c |]
    ==> ?f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?\<CC>\<lparr>CId\<rparr>\<lparr>?b\<rparr> =
        ?f
theorem
  categoryE:
    [| category ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>CId\<rparr>); vcard ?\<CC> = 6\<^sub>\<nat>;
          semicategory ?\<alpha> (cat_smc ?\<CC>);
          \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
          ?\<CC>\<lparr>Obj\<rparr>;
          !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
               ?\<CC>\<lparr>CId\<rparr>\<lparr>a\<rparr> : a \<mapsto>\<^bsub>?\<CC>\<^esub> a;
          !!a b f.
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
             ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
             f =
             f;
          !!b c f.
             f : b \<mapsto>\<^bsub>?\<CC>\<^esub> c ==>
             f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
             ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> =
             f |]
       ==> ?W |]
    ==> ?W
locale category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "category \<alpha> \<CC>"
locale tiny_semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "tiny_semicategory \<alpha> \<CC>"
theorem
  tiny_semicategoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>Comp\<rparr>);
       vcard ?\<CC> = 5\<^sub>\<nat>;
       tiny_digraph ?\<alpha> (smc_dg ?\<CC>);
       !!gf. (gf \<in>\<^sub>\<circ> \<D>\<^sub>\<circ>
(?\<CC>\<lparr>Comp\<rparr>)) =
             (EX g f b c a.
                 gf = [g, f]\<^sub>\<circ> &
                 g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
                 f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b);
       !!b c g a f.
          [| g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
          ==> g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              f : a \<mapsto>\<^bsub>?\<CC>\<^esub> c;
       !!c d h b g a f.
          [| h : c \<mapsto>\<^bsub>?\<CC>\<^esub> d;
             g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
          ==> h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              f =
              h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              (g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f) |]
    ==> tiny_semicategory ?\<alpha> ?\<CC>
theorem
  tiny_semicategoryD:
    tiny_semicategory ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    tiny_semicategory ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    tiny_semicategory ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>Comp\<rparr>)
    tiny_semicategory ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 5\<^sub>\<nat>
    tiny_semicategory ?\<alpha> ?\<CC> ==>
    tiny_digraph ?\<alpha> (smc_dg ?\<CC>)
    tiny_semicategory ?\<alpha> ?\<CC> ==>
    (?gf
     \<in>\<^sub>\<circ> \<D>\<^sub>\<circ> (?\<CC>\<lparr>Comp\<rparr>)) =
    (EX g f b c a.
        ?gf = [g, f]\<^sub>\<circ> &
        g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
        f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b)
    [| tiny_semicategory ?\<alpha> ?\<CC>;
       ?g : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?c
    [| tiny_semicategory ?\<alpha> ?\<CC>;
       ?h : ?c \<mapsto>\<^bsub>?\<CC>\<^esub> ?d;
       ?g : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f =
        ?h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        (?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f)
theorem
  tiny_semicategoryE:
    [| tiny_semicategory ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>Comp\<rparr>); vcard ?\<CC> = 5\<^sub>\<nat>;
          tiny_digraph ?\<alpha> (smc_dg ?\<CC>);
          !!gf. (gf \<in>\<^sub>\<circ> \<D>\<^sub>\<circ>
   (?\<CC>\<lparr>Comp\<rparr>)) =
                (EX g f b c a.
                    gf = [g, f]\<^sub>\<circ> &
                    g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
                    f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b);
          !!b c g a f.
             [| g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
             ==> g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 f : a \<mapsto>\<^bsub>?\<CC>\<^esub> c;
          !!c d h b g a f.
             [| h : c \<mapsto>\<^bsub>?\<CC>\<^esub> d;
                g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
             ==> h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 f =
                 h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 (g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f) |]
       ==> ?W |]
    ==> ?W
locale tiny_semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "tiny_semicategory \<alpha> \<CC>"
theorem dghm_id_ObjMap_vsv: vsv (dghm_id ?\<CC>\<lparr>ObjMap\<rparr>)
theorem
  dghm_id_ObjMap_vdomain:
    \<D>\<^sub>\<circ> (dghm_id ?\<CC>\<lparr>ObjMap\<rparr>) =
    ?\<CC>\<lparr>Obj\<rparr>
theorem
  dghm_id_ObjMap_app:
    ?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
    dghm_id ?\<CC>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr> = ?x
theorem dghm_id_ArrMap_vsv: vsv (dghm_id ?\<CC>\<lparr>ArrMap\<rparr>)
theorem
  dghm_id_ArrMap_vdomain:
    \<D>\<^sub>\<circ> (dghm_id ?\<CC>\<lparr>ArrMap\<rparr>) =
    ?\<CC>\<lparr>Arr\<rparr>
theorem
  dghm_id_ArrMap_app:
    ?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Arr\<rparr> ==>
    dghm_id ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr> = ?x
locale finite_semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "finite_semicategory \<alpha> \<CC>"
theorem
  finite_semicategoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>Comp\<rparr>);
       vcard ?\<CC> = 5\<^sub>\<nat>;
       finite_digraph ?\<alpha> (smc_dg ?\<CC>);
       !!gf. (gf \<in>\<^sub>\<circ> \<D>\<^sub>\<circ>
(?\<CC>\<lparr>Comp\<rparr>)) =
             (EX g f b c a.
                 gf = [g, f]\<^sub>\<circ> &
                 g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
                 f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b);
       !!b c g a f.
          [| g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
          ==> g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              f : a \<mapsto>\<^bsub>?\<CC>\<^esub> c;
       !!c d h b g a f.
          [| h : c \<mapsto>\<^bsub>?\<CC>\<^esub> d;
             g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
          ==> h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              f =
              h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              (g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f) |]
    ==> finite_semicategory ?\<alpha> ?\<CC>
theorem
  finite_semicategoryD:
    finite_semicategory ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    finite_semicategory ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    finite_semicategory ?\<alpha> ?\<CC> ==>
    vsv (?\<CC>\<lparr>Comp\<rparr>)
    finite_semicategory ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 5\<^sub>\<nat>
    finite_semicategory ?\<alpha> ?\<CC> ==>
    finite_digraph ?\<alpha> (smc_dg ?\<CC>)
    finite_semicategory ?\<alpha> ?\<CC> ==>
    (?gf
     \<in>\<^sub>\<circ> \<D>\<^sub>\<circ> (?\<CC>\<lparr>Comp\<rparr>)) =
    (EX g f b c a.
        ?gf = [g, f]\<^sub>\<circ> &
        g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
        f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b)
    [| finite_semicategory ?\<alpha> ?\<CC>;
       ?g : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?c
    [| finite_semicategory ?\<alpha> ?\<CC>;
       ?h : ?c \<mapsto>\<^bsub>?\<CC>\<^esub> ?d;
       ?g : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f =
        ?h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        (?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f)
theorem
  finite_semicategoryE:
    [| finite_semicategory ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>Comp\<rparr>); vcard ?\<CC> = 5\<^sub>\<nat>;
          finite_digraph ?\<alpha> (smc_dg ?\<CC>);
          !!gf. (gf \<in>\<^sub>\<circ> \<D>\<^sub>\<circ>
   (?\<CC>\<lparr>Comp\<rparr>)) =
                (EX g f b c a.
                    gf = [g, f]\<^sub>\<circ> &
                    g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
                    f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b);
          !!b c g a f.
             [| g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
             ==> g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 f : a \<mapsto>\<^bsub>?\<CC>\<^esub> c;
          !!c d h b g a f.
             [| h : c \<mapsto>\<^bsub>?\<CC>\<^esub> d;
                g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
             ==> h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 f =
                 h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 (g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f) |]
       ==> ?W |]
    ==> ?W
locale finite_semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "finite_semicategory \<alpha> \<CC>"
theorem
  dghm_const_ObjMap_vsv:
    vsv (dghm_const ?\<CC> ?\<DD> ?a ?f\<lparr>ObjMap\<rparr>)
theorem
  dghm_const_ObjMap_vdomain:
    \<D>\<^sub>\<circ>
     (dghm_const ?\<CC> ?\<DD> ?a ?f\<lparr>ObjMap\<rparr>) =
    ?\<CC>\<lparr>Obj\<rparr>
theorem
  dghm_const_ObjMap_app:
    ?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
    dghm_const ?\<CC> ?\<DD> ?a ?f\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr> =
    ?a
theorem
  dghm_const_ArrMap_vsv:
    vsv (dghm_const ?\<CC> ?\<DD> ?a ?f\<lparr>ArrMap\<rparr>)
theorem
  dghm_const_ArrMap_vdomain:
    \<D>\<^sub>\<circ>
     (dghm_const ?\<CC> ?\<DD> ?a ?f\<lparr>ArrMap\<rparr>) =
    ?\<CC>\<lparr>Arr\<rparr>
theorem
  dghm_const_ArrMap_app:
    ?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Arr\<rparr> ==>
    dghm_const ?\<CC> ?\<DD> ?a ?f\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr> =
    ?f
locale category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "category \<alpha> \<CC>"
### theory "CZH_Foundations.CZH_SMC_Small_Semicategory"
### 1.642s elapsed time, 5.358s cpu time, 1.579s GC time
locale is_ft_dghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_ft_dghm \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_ft_dghmI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       !!a b.
          [| a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
             b \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
          ==> v11 (?\<FF>\<lparr>ArrMap\<rparr> \<restriction>\<^sup>l\<^sub>\<circ>
                   Hom ?\<AA> a b) |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ft_dghmD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
       ?b \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
    ==> v11 (?\<FF>\<lparr>ArrMap\<rparr> \<restriction>\<^sup>l\<^sub>\<circ>
             Hom ?\<AA> ?a ?b)
theorem
  is_ft_dghmE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          !!a b.
             [| a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
                b \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
             ==> v11 (?\<FF>\<lparr>ArrMap\<rparr> \<restriction>\<^sup>l\<^sub>\<circ>
                      Hom ?\<AA> a b) |]
       ==> ?W |]
    ==> ?W
locale is_fl_dghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_fl_dghm \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_fl_dghmI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       !!a b.
          [| a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
             b \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
          ==> ?\<FF>\<lparr>ArrMap\<rparr> `\<^sub>\<circ> Hom ?\<AA> a b =
              Hom ?\<BB> (?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr>)
               (?\<FF>\<lparr>ObjMap\<rparr>\<lparr>b\<rparr>) |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_fl_dghmD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
       ?b \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
    ==> ?\<FF>\<lparr>ArrMap\<rparr> `\<^sub>\<circ> Hom ?\<AA> ?a ?b =
        Hom ?\<BB> (?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr>)
         (?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?b\<rparr>)
theorem
  is_fl_dghmE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          !!a b.
             [| a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
                b \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
             ==> ?\<FF>\<lparr>ArrMap\<rparr> `\<^sub>\<circ>
                 Hom ?\<AA> a b =
                 Hom ?\<BB> (?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr>)
                  (?\<FF>\<lparr>ObjMap\<rparr>\<lparr>b\<rparr>) |]
       ==> ?W |]
    ==> ?W
locale is_ff_dghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_ff_dghm \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_ff_dghmI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ff_dghmD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ff_dghmE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_iso_dghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_iso_dghm \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_iso_dghmI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       v11 (?\<FF>\<lparr>ObjMap\<rparr>);
       v11 (?\<FF>\<lparr>ArrMap\<rparr>);
       \<R>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>) =
       ?\<BB>\<lparr>Obj\<rparr>;
       \<R>\<^sub>\<circ> (?\<FF>\<lparr>ArrMap\<rparr>) =
       ?\<BB>\<lparr>Arr\<rparr> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_iso_dghmD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    v11 (?\<FF>\<lparr>ObjMap\<rparr>)
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    v11 (?\<FF>\<lparr>ArrMap\<rparr>)
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<R>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>) =
    ?\<BB>\<lparr>Obj\<rparr>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<R>\<^sub>\<circ> (?\<FF>\<lparr>ArrMap\<rparr>) =
    ?\<BB>\<lparr>Arr\<rparr>
theorem
  is_iso_dghmE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          v11 (?\<FF>\<lparr>ObjMap\<rparr>);
          v11 (?\<FF>\<lparr>ArrMap\<rparr>);
          \<R>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>) =
          ?\<BB>\<lparr>Obj\<rparr>;
          \<R>\<^sub>\<circ> (?\<FF>\<lparr>ArrMap\<rparr>) =
          ?\<BB>\<lparr>Arr\<rparr> |]
       ==> ?W |]
    ==> ?W
locale groupoid
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "groupoid \<alpha> \<CC>"
theorem
  groupoidI:
    [| category ?\<alpha> ?\<CC>;
       !!a b f.
          f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
          f : a \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<CC>\<^esub> b |]
    ==> groupoid ?\<alpha> ?\<CC>
theorem
  groupoidD:
    groupoid ?\<alpha> ?\<CC> ==> category ?\<alpha> ?\<CC>
    [| groupoid ?\<alpha> ?\<CC>;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?f : ?a \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<CC>\<^esub> ?b
theorem
  groupoidE:
    [| groupoid ?\<alpha> ?\<CC>;
       [| category ?\<alpha> ?\<CC>;
          !!a b f.
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
             f : a \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<CC>\<^esub> b |]
       ==> ?W |]
    ==> ?W
### theory "Draft.CZH_ECAT_Category"
### 4.031s elapsed time, 11.215s cpu time, 3.654s GC time
Loading theory "Draft.CZH_ECAT_Small_Category" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory")
locale tiny_category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "tiny_category \<alpha> \<CC>"
theorem
  tiny_categoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>CId\<rparr>);
       vcard ?\<CC> = 6\<^sub>\<nat>;
       tiny_semicategory ?\<alpha> (cat_smc ?\<CC>);
       \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
       ?\<CC>\<lparr>Obj\<rparr>;
       !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
            ?\<CC>\<lparr>CId\<rparr>\<lparr>a\<rparr> : a \<mapsto>\<^bsub>?\<CC>\<^esub> a;
       !!a b f.
          f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
          ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          f =
          f;
       !!b c f.
          f : b \<mapsto>\<^bsub>?\<CC>\<^esub> c ==>
          f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> =
          f |]
    ==> tiny_category ?\<alpha> ?\<CC>
theorem
  tiny_categoryD:
    tiny_category ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    tiny_category ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    tiny_category ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>CId\<rparr>)
    tiny_category ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 6\<^sub>\<nat>
    tiny_category ?\<alpha> ?\<CC> ==>
    tiny_semicategory ?\<alpha> (cat_smc ?\<CC>)
    tiny_category ?\<alpha> ?\<CC> ==>
    \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
    ?\<CC>\<lparr>Obj\<rparr>
    [| tiny_category ?\<alpha> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> |]
    ==> ?\<CC>\<lparr>CId\<rparr>\<lparr>?a\<rparr> : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?a
    [| tiny_category ?\<alpha> ?\<CC>;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?\<CC>\<lparr>CId\<rparr>\<lparr>?b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f =
        ?f
    [| tiny_category ?\<alpha> ?\<CC>;
       ?f : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c |]
    ==> ?f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?\<CC>\<lparr>CId\<rparr>\<lparr>?b\<rparr> =
        ?f
theorem
  tiny_categoryE:
    [| tiny_category ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>CId\<rparr>); vcard ?\<CC> = 6\<^sub>\<nat>;
          tiny_semicategory ?\<alpha> (cat_smc ?\<CC>);
          \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
          ?\<CC>\<lparr>Obj\<rparr>;
          !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
               ?\<CC>\<lparr>CId\<rparr>\<lparr>a\<rparr> : a \<mapsto>\<^bsub>?\<CC>\<^esub> a;
          !!a b f.
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
             ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
             f =
             f;
          !!b c f.
             f : b \<mapsto>\<^bsub>?\<CC>\<^esub> c ==>
             f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
             ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> =
             f |]
       ==> ?W |]
    ==> ?W
locale tiny_category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "tiny_category \<alpha> \<CC>"
locale finite_category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "finite_category \<alpha> \<CC>"
theorem
  finite_categoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>CId\<rparr>);
       vcard ?\<CC> = 6\<^sub>\<nat>;
       finite_semicategory ?\<alpha> (cat_smc ?\<CC>);
       \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
       ?\<CC>\<lparr>Obj\<rparr>;
       !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
            ?\<CC>\<lparr>CId\<rparr>\<lparr>a\<rparr> : a \<mapsto>\<^bsub>?\<CC>\<^esub> a;
       !!a b f.
          f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
          ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          f =
          f;
       !!b c f.
          f : b \<mapsto>\<^bsub>?\<CC>\<^esub> c ==>
          f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> =
          f |]
    ==> finite_category ?\<alpha> ?\<CC>
theorem
  finite_categoryD:
    finite_category ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    finite_category ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    finite_category ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>CId\<rparr>)
    finite_category ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 6\<^sub>\<nat>
    finite_category ?\<alpha> ?\<CC> ==>
    finite_semicategory ?\<alpha> (cat_smc ?\<CC>)
    finite_category ?\<alpha> ?\<CC> ==>
    \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
    ?\<CC>\<lparr>Obj\<rparr>
    [| finite_category ?\<alpha> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> |]
    ==> ?\<CC>\<lparr>CId\<rparr>\<lparr>?a\<rparr> : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?a
    [| finite_category ?\<alpha> ?\<CC>;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?\<CC>\<lparr>CId\<rparr>\<lparr>?b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f =
        ?f
    [| finite_category ?\<alpha> ?\<CC>;
       ?f : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c |]
    ==> ?f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?\<CC>\<lparr>CId\<rparr>\<lparr>?b\<rparr> =
        ?f
theorem
  finite_categoryE:
    [| finite_category ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>CId\<rparr>); vcard ?\<CC> = 6\<^sub>\<nat>;
          finite_semicategory ?\<alpha> (cat_smc ?\<CC>);
          \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
          ?\<CC>\<lparr>Obj\<rparr>;
          !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
               ?\<CC>\<lparr>CId\<rparr>\<lparr>a\<rparr> : a \<mapsto>\<^bsub>?\<CC>\<^esub> a;
          !!a b f.
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
             ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
             f =
             f;
          !!b c f.
             f : b \<mapsto>\<^bsub>?\<CC>\<^esub> c ==>
             f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
             ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> =
             f |]
       ==> ?W |]
    ==> ?W
locale finite_category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "finite_category \<alpha> \<CC>"
### theory "Draft.CZH_ECAT_Small_Category"
### 2.954s elapsed time, 8.427s cpu time, 5.381s GC time
locale iso_digraph
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
  assumes "iso_digraph \<alpha> \<AA> \<BB>"
### theory "CZH_Foundations.CZH_DG_DGHM"
### 9.125s elapsed time, 24.986s cpu time, 10.267s GC time
Loading theory "CZH_Foundations.CZH_DG_TDGHM" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory" via "Draft.CZH_ECAT_NTCF" via "CZH_Foundations.CZH_SMC_NTSMCF")
Loading theory "CZH_Foundations.CZH_DG_Small_DGHM" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Set" via "CZH_Foundations.CZH_SMC_Set" via "CZH_Foundations.CZH_DG_Set" via "CZH_Foundations.CZH_DG_Par" via "CZH_Foundations.CZH_DG_Rel")
Loading theory "CZH_Foundations.CZH_DG_Subdigraph" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Set" via "CZH_Foundations.CZH_SMC_Set" via "CZH_Foundations.CZH_DG_Set" via "CZH_Foundations.CZH_DG_Par")
Loading theory "CZH_Foundations.CZH_SMC_Semifunctor" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory" via "Draft.CZH_ECAT_NTCF" via "CZH_Foundations.CZH_SMC_NTSMCF")
locale is_tm_dghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_tm_dghm \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_tm_dghmI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       digraph ?\<alpha> ?\<AA>; digraph ?\<alpha> ?\<BB>;
       ?\<FF>\<lparr>ObjMap\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>;
       ?\<FF>\<lparr>ArrMap\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tm_dghmD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    digraph ?\<alpha> ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    digraph ?\<alpha> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>ObjMap\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>ArrMap\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  is_tm_dghmE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          digraph ?\<alpha> ?\<AA>; digraph ?\<alpha> ?\<BB>;
          ?\<FF>\<lparr>ObjMap\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>;
          ?\<FF>\<lparr>ArrMap\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
locale subdigraph
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "subdigraph \<alpha> \<BB> \<CC>"
theorem
  subdigraphI:
    [| digraph ?\<alpha> ?\<BB>; digraph ?\<alpha> ?\<CC>;
       !!a. a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> ==>
            a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       !!a b f.
          f : a \<mapsto>\<^bsub>?\<BB>\<^esub> b ==>
          f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
    ==> ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  subdigraphD:
    ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    digraph ?\<alpha> ?\<BB>
    ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    digraph ?\<alpha> ?\<CC>
    [| ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> |]
    ==> ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>
    [| ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       ?f : ?a \<mapsto>\<^bsub>?\<BB>\<^esub> ?b |]
    ==> ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b
theorem
  subdigraphE:
    [| ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| digraph ?\<alpha> ?\<BB>; digraph ?\<alpha> ?\<CC>;
          !!a. a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> ==>
               a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
          !!a b f.
             f : a \<mapsto>\<^bsub>?\<BB>\<^esub> b ==>
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
       ==> ?W |]
    ==> ?W
locale is_tdghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_tdghm \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
locale is_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_semifunctor \<alpha> \<AA> \<BB> \<FF>"
theorem
  dghm_inc_ObjMap_vsv: vsv (dghm_inc ?\<BB> ?\<CC>\<lparr>ObjMap\<rparr>)
theorem
  dghm_inc_ObjMap_vdomain:
    \<D>\<^sub>\<circ> (dghm_inc ?\<BB> ?\<CC>\<lparr>ObjMap\<rparr>) =
    ?\<BB>\<lparr>Obj\<rparr>
theorem
  dghm_inc_ObjMap_app:
    ?x \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> ==>
    dghm_inc ?\<BB> ?\<CC>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr> = ?x
theorem
  dghm_inc_ArrMap_vsv: vsv (dghm_inc ?\<BB> ?\<CC>\<lparr>ArrMap\<rparr>)
theorem
  dghm_inc_ArrMap_vdomain:
    \<D>\<^sub>\<circ> (dghm_inc ?\<BB> ?\<CC>\<lparr>ArrMap\<rparr>) =
    ?\<BB>\<lparr>Arr\<rparr>
theorem
  dghm_inc_ArrMap_app:
    ?x \<in>\<^sub>\<circ> ?\<BB>\<lparr>Arr\<rparr> ==>
    dghm_inc ?\<BB> ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr> = ?x
theorem
  is_semifunctorI:
    [| \<Z> ?\<alpha>; vfsequence ?\<FF>; semicategory ?\<alpha> ?\<AA>;
       semicategory ?\<alpha> ?\<BB>; vcard ?\<FF> = 4\<^sub>\<nat>;
       smcf_dghm ?\<FF> :
       smc_dg
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg
?\<BB>;
       ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>;
       ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>;
       !!b c g a f.
          [| g : b \<mapsto>\<^bsub>?\<AA>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<AA>\<^esub> b |]
          ==> ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>g \<circ>\<^sub>A\<^bsub>?\<AA>\<^esub>
            f\<rparr> =
              ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>g\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
              ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_semifunctorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<Z> ?\<alpha>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vfsequence ?\<FF>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    semicategory ?\<alpha> ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    semicategory ?\<alpha> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vcard ?\<FF> = 4\<^sub>\<nat>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    smcf_dghm ?\<FF> :
    smc_dg
     ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg
                                   ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?g : ?b \<mapsto>\<^bsub>?\<AA>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<AA>\<^esub> ?b |]
    ==> ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?g \<circ>\<^sub>A\<^bsub>?\<AA>\<^esub>
      ?f\<rparr> =
        ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?g\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
        ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?f\<rparr>
locale is_tiny_dghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_tiny_dghm \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_semifunctorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| \<Z> ?\<alpha>; vfsequence ?\<FF>; semicategory ?\<alpha> ?\<AA>;
          semicategory ?\<alpha> ?\<BB>; vcard ?\<FF> = 4\<^sub>\<nat>;
          smcf_dghm ?\<FF> :
          smc_dg
           ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg
   ?\<BB>;
          ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>;
          ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>;
          !!b c g a f.
             [| g : b \<mapsto>\<^bsub>?\<AA>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<AA>\<^esub> b |]
             ==> ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>g \<circ>\<^sub>A\<^bsub>?\<AA>\<^esub>
               f\<rparr> =
                 ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>g\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
                 ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> |]
       ==> ?W |]
    ==> ?W
theorem
  is_tdghmI:
    [| \<Z> ?\<alpha>; vfsequence ?\<NN>;
       ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       vcard ?\<NN> = 5\<^sub>\<nat>; vsv (?\<NN>\<lparr>NTMap\<rparr>);
       \<D>\<^sub>\<circ> (?\<NN>\<lparr>NTMap\<rparr>) =
       ?\<AA>\<lparr>Obj\<rparr>;
       ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>;
       ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>;
       ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>;
       ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB>;
       !!a. a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> ==>
            ?\<NN>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> |]
    ==> ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tiny_dghmI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       tiny_digraph ?\<alpha> ?\<AA>; tiny_digraph ?\<alpha> ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tiny_dghmD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    tiny_digraph ?\<alpha> ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    tiny_digraph ?\<alpha> ?\<BB>
theorem
  is_tdghmD:
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<Z> ?\<alpha>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vfsequence ?\<NN>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vcard ?\<NN> = 5\<^sub>\<nat>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vsv (?\<NN>\<lparr>NTMap\<rparr>)
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<D>\<^sub>\<circ> (?\<NN>\<lparr>NTMap\<rparr>) =
    ?\<AA>\<lparr>Obj\<rparr>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB>
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
    ==> ?\<NN>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr>
theorem
  is_tiny_dghmE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          tiny_digraph ?\<alpha> ?\<AA>; tiny_digraph ?\<alpha> ?\<BB> |]
       ==> ?W |]
    ==> ?W
theorem
  is_tdghmE:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| \<Z> ?\<alpha>; vfsequence ?\<NN>;
          ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          vcard ?\<NN> = 5\<^sub>\<nat>; vsv (?\<NN>\<lparr>NTMap\<rparr>);
          \<D>\<^sub>\<circ> (?\<NN>\<lparr>NTMap\<rparr>) =
          ?\<AA>\<lparr>Obj\<rparr>;
          ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>;
          ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>;
          ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>;
          ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB>;
          !!a. a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> ==>
               ?\<NN>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> |]
       ==> ?W |]
    ==> ?W
locale is_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>\<alpha>\<^esub> \<BB>"
locale fl_subdigraph
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "fl_subdigraph \<alpha> \<BB> \<CC>"
### theory "CZH_Foundations.CZH_DG_Small_DGHM"
### 17.739s elapsed time, 61.847s cpu time, 53.196s GC time
Loading theory "CZH_Foundations.CZH_DG_Rel" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Set" via "CZH_Foundations.CZH_SMC_Set" via "CZH_Foundations.CZH_DG_Set" via "CZH_Foundations.CZH_DG_Par")
theorem
  fl_subdigraphI:
    [| ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       dghm_inc ?\<BB> ?\<CC> :
       ?\<BB> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
    ==> ?\<BB>
        \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  fl_subdigraphD:
    ?\<BB>
    \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>
    ?\<BB>
    \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    dghm_inc ?\<BB> ?\<CC> :
    ?\<BB> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  fl_subdigraphE:
    [| ?\<BB>
       \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| ?\<BB>
          \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>;
          dghm_inc ?\<BB> ?\<CC> :
          ?\<BB> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
       ==> ?W |]
    ==> ?W
locale wide_subdigraph
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "wide_subdigraph \<alpha> \<BB> \<CC>"
theorem
  wide_subdigraphI:
    [| ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
            a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> |]
    ==> ?\<BB>
        \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  wide_subdigraphD:
    ?\<BB>
    \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>
    [| ?\<BB>
       \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> |]
    ==> ?a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>
theorem
  wide_subdigraphE:
    [| ?\<BB>
       \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| ?\<BB>
          \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>;
          !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
               a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> |]
       ==> ?W |]
    ==> ?W
locale semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "semicategory \<alpha> \<CC>"
### theory "CZH_Foundations.CZH_DG_Subdigraph"
### 18.694s elapsed time, 65.598s cpu time, 53.653s GC time
locale arr_Rel
  fixes \<alpha> :: "V"
    and T :: "V"
  assumes "arr_Rel \<alpha> T"
theorem
  arr_RelI:
    [| \<Z> ?\<alpha>; vfsequence ?T; vbrelation (?T\<lparr>ArrVal\<rparr>);
       vcard ?T = 3\<^sub>\<nat>;
       \<D>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
       \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrDom\<rparr>;
       \<R>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
       \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrCod\<rparr>;
       ?T\<lparr>ArrDom\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>;
       ?T\<lparr>ArrCod\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> arr_Rel ?\<alpha> ?T
theorem
  arr_RelD:
    arr_Rel ?\<alpha> ?T ==> \<Z> ?\<alpha>
    arr_Rel ?\<alpha> ?T ==> vfsequence ?T
    arr_Rel ?\<alpha> ?T ==> vbrelation (?T\<lparr>ArrVal\<rparr>)
    arr_Rel ?\<alpha> ?T ==> vcard ?T = 3\<^sub>\<nat>
    arr_Rel ?\<alpha> ?T ==>
    \<D>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
    \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrDom\<rparr>
    arr_Rel ?\<alpha> ?T ==>
    \<R>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
    \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrCod\<rparr>
    arr_Rel ?\<alpha> ?T ==>
    ?T\<lparr>ArrDom\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>
    arr_Rel ?\<alpha> ?T ==>
    ?T\<lparr>ArrCod\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  arr_RelE:
    [| arr_Rel ?\<alpha> ?T;
       [| \<Z> ?\<alpha>; vfsequence ?T;
          vbrelation (?T\<lparr>ArrVal\<rparr>); vcard ?T = 3\<^sub>\<nat>;
          \<D>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
          \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrDom\<rparr>;
          \<R>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
          \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrCod\<rparr>;
          ?T\<lparr>ArrDom\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>;
          ?T\<lparr>ArrCod\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
theorem
  tdghm_dghm_comp_NTMap_vsv:
    vsv ((?\<NN> \<circ>\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>D\<^sub>G\<^sub>H\<^sub>M
          ?\<HH>)\<lparr>NTMap\<rparr>)
theorem
  tdghm_dghm_comp_NTMap_vdomain:
    \<D>\<^sub>\<circ>
     ((?\<NN> \<circ>\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>D\<^sub>G\<^sub>H\<^sub>M
       \<FF>)\<lparr>NTMap\<rparr>) =
    \<AA>\<lparr>Obj\<rparr>
theorem
  tdghm_dghm_comp_NTMap_app:
    ?x \<in>\<^sub>\<circ> \<AA>\<lparr>Obj\<rparr> ==>
    (?\<NN> \<circ>\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>D\<^sub>G\<^sub>H\<^sub>M
     \<FF>)\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    ?\<NN>\<lparr>NTMap\<rparr>\<lparr>\<FF>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr>\<rparr>
theorem dg_Rel_Dom_vsv: vsv (dg_Rel ?\<alpha>\<lparr>Dom\<rparr>)
theorem
  dg_Rel_Dom_vdomain:
    \<D>\<^sub>\<circ> (dg_Rel ?\<alpha>\<lparr>Dom\<rparr>) =
    ZFC_in_HOL.set (Collect (arr_Rel ?\<alpha>))
theorem
  dg_Rel_Dom_app:
    arr_Rel ?\<alpha> ?x ==>
    dg_Rel ?\<alpha>\<lparr>Dom\<rparr>\<lparr>?x\<rparr> =
    ?x\<lparr>ArrDom\<rparr>
theorem dg_Rel_Cod_vsv: vsv (dg_Rel ?\<alpha>\<lparr>Cod\<rparr>)
theorem
  dg_Rel_Cod_vdomain:
    \<D>\<^sub>\<circ> (dg_Rel ?\<alpha>\<lparr>Cod\<rparr>) =
    ZFC_in_HOL.set (Collect (arr_Rel ?\<alpha>))
theorem
  dg_Rel_Cod_app:
    arr_Rel ?\<alpha> ?x ==>
    dg_Rel ?\<alpha>\<lparr>Cod\<rparr>\<lparr>?x\<rparr> =
    ?x\<lparr>ArrCod\<rparr>
theorem
  dghm_dag_Rel_ObjMap_vsv:
    vsv (\<dagger>\<^sub>D\<^sub>G\<^sub>.\<^sub>R\<^sub>e\<^sub>l
          ?\<alpha>\<lparr>ObjMap\<rparr>)
theorem
  dghm_dag_Rel_ObjMap_vdomain:
    \<D>\<^sub>\<circ>
     (\<dagger>\<^sub>D\<^sub>G\<^sub>.\<^sub>R\<^sub>e\<^sub>l
       ?\<alpha>\<lparr>ObjMap\<rparr>) =
    Vset ?\<alpha>
theorem
  dghm_dag_Rel_ObjMap_app:
    ?x \<in>\<^sub>\<circ> Vset ?\<alpha> ==>
    \<dagger>\<^sub>D\<^sub>G\<^sub>.\<^sub>R\<^sub>e\<^sub>l
     ?\<alpha>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr> =
    ?x
theorem
  dghm_dag_Rel_ArrMap_vsv:
    vsv (\<dagger>\<^sub>D\<^sub>G\<^sub>.\<^sub>R\<^sub>e\<^sub>l
          ?\<alpha>\<lparr>ArrMap\<rparr>)
theorem
  dghm_dag_Rel_ArrMap_vdomain:
    \<D>\<^sub>\<circ>
     (\<dagger>\<^sub>D\<^sub>G\<^sub>.\<^sub>R\<^sub>e\<^sub>l
       ?\<alpha>\<lparr>ArrMap\<rparr>) =
    dg_Rel ?\<alpha>\<lparr>Arr\<rparr>
theorem
  dghm_dag_Rel_ArrMap_app:
    arr_Rel ?\<alpha> ?x ==>
    \<dagger>\<^sub>D\<^sub>G\<^sub>.\<^sub>R\<^sub>e\<^sub>l
     ?\<alpha>\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr> =
    ?x\<inverse>\<^sub>R\<^sub>e\<^sub>l
### theory "CZH_Foundations.CZH_DG_Rel"
### 1.341s elapsed time, 4.954s cpu time, 0.711s GC time
Loading theory "CZH_Foundations.CZH_DG_Par" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Set" via "CZH_Foundations.CZH_SMC_Set" via "CZH_Foundations.CZH_DG_Set")
theorem
  dghm_tdghm_comp_NTMap_vsv:
    vsv ((?\<HH> \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M
          ?\<NN>)\<lparr>NTMap\<rparr>)
theorem
  dghm_tdghm_comp_NTMap_vdomain:
    \<D>\<^sub>\<circ>
     ((?\<HH> \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M
       \<NN>)\<lparr>NTMap\<rparr>) =
    \<AA>\<lparr>Obj\<rparr>
theorem
  dghm_tdghm_comp_NTMap_app:
    ?x \<in>\<^sub>\<circ> \<AA>\<lparr>Obj\<rparr> ==>
    (?\<HH> \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M
     \<NN>)\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>\<NN>\<lparr>NTMap\<rparr>\<lparr>?x\<rparr>\<rparr>
### theory "CZH_Foundations.CZH_DG_TDGHM"
### 19.451s elapsed time, 67.959s cpu time, 54.119s GC time
Loading theory "CZH_Foundations.CZH_DG_PDigraph" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory" via "CZH_Foundations.CZH_SMC_PSemicategory")
locale is_ft_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_ft_semifunctor \<alpha> \<AA> \<BB> \<FF>"
locale arr_Par
  fixes \<alpha> :: "V"
    and T :: "V"
  assumes "arr_Par \<alpha> T"
theorem
  arr_ParI:
    [| \<Z> ?\<alpha>; vfsequence ?T; vsv (?T\<lparr>ArrVal\<rparr>);
       vcard ?T = 3\<^sub>\<nat>;
       \<D>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
       \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrDom\<rparr>;
       \<R>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
       \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrCod\<rparr>;
       ?T\<lparr>ArrDom\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>;
       ?T\<lparr>ArrCod\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> arr_Par ?\<alpha> ?T
theorem
  arr_ParD:
    arr_Par ?\<alpha> ?T ==> \<Z> ?\<alpha>
    arr_Par ?\<alpha> ?T ==> vfsequence ?T
    arr_Par ?\<alpha> ?T ==> vsv (?T\<lparr>ArrVal\<rparr>)
    arr_Par ?\<alpha> ?T ==> vcard ?T = 3\<^sub>\<nat>
    arr_Par ?\<alpha> ?T ==>
    \<D>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
    \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrDom\<rparr>
    arr_Par ?\<alpha> ?T ==>
    \<R>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
    \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrCod\<rparr>
    arr_Par ?\<alpha> ?T ==>
    ?T\<lparr>ArrDom\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>
    arr_Par ?\<alpha> ?T ==>
    ?T\<lparr>ArrCod\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  arr_ParE:
    [| arr_Par ?\<alpha> ?T;
       [| \<Z> ?\<alpha>; vfsequence ?T; vsv (?T\<lparr>ArrVal\<rparr>);
          vcard ?T = 3\<^sub>\<nat>;
          \<D>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
          \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrDom\<rparr>;
          \<R>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
          \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrCod\<rparr>;
          ?T\<lparr>ArrDom\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>;
          ?T\<lparr>ArrCod\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
theorem
  is_ft_semifunctorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       smcf_dghm ?\<FF> :
       smc_dg
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
                                  ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ft_semifunctorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    smcf_dghm ?\<FF> :
    smc_dg
     ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
                               ?\<BB>
theorem
  is_ft_semifunctorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          smcf_dghm ?\<FF> :
          smc_dg
           ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
                                     ?\<BB> |]
       ==> ?W |]
    ==> ?W
theorem dg_Par_Dom_vsv: vsv (dg_Par ?\<alpha>\<lparr>Dom\<rparr>)
theorem
  dg_Par_Dom_vdomain:
    \<D>\<^sub>\<circ> (dg_Par ?\<alpha>\<lparr>Dom\<rparr>) =
    ZFC_in_HOL.set (Collect (arr_Par ?\<alpha>))
theorem
  dg_Par_Dom_app:
    arr_Par ?\<alpha> ?x ==>
    dg_Par ?\<alpha>\<lparr>Dom\<rparr>\<lparr>?x\<rparr> =
    ?x\<lparr>ArrDom\<rparr>
theorem dg_Par_Cod_vsv: vsv (dg_Par ?\<alpha>\<lparr>Cod\<rparr>)
theorem
  dg_Par_Cod_vdomain:
    \<D>\<^sub>\<circ> (dg_Par ?\<alpha>\<lparr>Cod\<rparr>) =
    ZFC_in_HOL.set (Collect (arr_Par ?\<alpha>))
theorem
  dg_Par_Cod_app:
    arr_Par ?\<alpha> ?x ==>
    dg_Par ?\<alpha>\<lparr>Cod\<rparr>\<lparr>?x\<rparr> =
    ?x\<lparr>ArrCod\<rparr>
### theory "CZH_Foundations.CZH_DG_Par"
### 0.869s elapsed time, 2.674s cpu time, 0.398s GC time
Loading theory "CZH_Foundations.CZH_DG_Set" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Set" via "CZH_Foundations.CZH_SMC_Set")
locale pdigraph_base
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "pdigraph_base \<alpha> I \<AA>"
theorem
  pdigraph_baseI:
    [| \<Z> ?\<alpha>;
       !!i. i \<in>\<^sub>\<circ> ?I ==> digraph ?\<alpha> (?\<AA> i);
       ?I \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> pdigraph_base ?\<alpha> ?I ?\<AA>
theorem
  pdigraph_baseD:
    pdigraph_base ?\<alpha> ?I ?\<AA> ==> \<Z> ?\<alpha>
    [| pdigraph_base ?\<alpha> ?I ?\<AA>; ?i \<in>\<^sub>\<circ> ?I |]
    ==> digraph ?\<alpha> (?\<AA> ?i)
    pdigraph_base ?\<alpha> ?I ?\<AA> ==>
    ?I \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  pdigraph_baseE:
    [| pdigraph_base ?\<alpha> ?I ?\<AA>;
       [| \<Z> ?\<alpha>;
          !!i. i \<in>\<^sub>\<circ> ?I ==> digraph ?\<alpha> (?\<AA> i);
          ?I \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
theorem dg_prod_Dom_vsv: vsv (dg_prod ?I ?\<AA>\<lparr>Dom\<rparr>)
theorem
  dg_prod_Dom_vdomain:
    \<D>\<^sub>\<circ> (dg_prod ?I ?\<AA>\<lparr>Dom\<rparr>) =
    dg_prod ?I ?\<AA>\<lparr>Arr\<rparr>
theorem
  dg_prod_Dom_app:
    ?x \<in>\<^sub>\<circ> dg_prod ?I ?\<AA>\<lparr>Arr\<rparr> ==>
    dg_prod ?I ?\<AA>\<lparr>Dom\<rparr>\<lparr>?x\<rparr> =
    (\<lambda>i\<in>\<^sub>\<circ>?I.
        ?\<AA> i\<lparr>Dom\<rparr>\<lparr>?x\<lparr>i\<rparr>\<rparr>)
theorem dg_prod_Cod_vsv: vsv (dg_prod ?I ?\<AA>\<lparr>Cod\<rparr>)
theorem
  dg_prod_Cod_vdomain:
    \<D>\<^sub>\<circ> (dg_prod ?I ?\<AA>\<lparr>Cod\<rparr>) =
    dg_prod ?I ?\<AA>\<lparr>Arr\<rparr>
theorem
  dg_prod_Cod_app:
    ?x \<in>\<^sub>\<circ> dg_prod ?I ?\<AA>\<lparr>Arr\<rparr> ==>
    dg_prod ?I ?\<AA>\<lparr>Cod\<rparr>\<lparr>?x\<rparr> =
    (\<lambda>i\<in>\<^sub>\<circ>?I.
        ?\<AA> i\<lparr>Cod\<rparr>\<lparr>?x\<lparr>i\<rparr>\<rparr>)
locale is_ft_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>\<alpha>\<^esub> \<BB>"
locale pdigraph
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "pdigraph \<alpha> I \<AA>"
theorem
  pdigraphI:
    [| pdigraph_base ?\<alpha> ?I ?\<AA>;
       !!J. J \<subseteq>\<^sub>\<circ> ?I ==>
            dg_prod J ?\<AA>\<lparr>Obj\<rparr>
            \<subseteq>\<^sub>\<circ> Vset ?\<alpha>;
       !!J A B.
          [| J \<subseteq>\<^sub>\<circ> ?I;
             A \<subseteq>\<^sub>\<circ> dg_prod J
    ?\<AA>\<lparr>Obj\<rparr>;
             B \<subseteq>\<^sub>\<circ> dg_prod J
    ?\<AA>\<lparr>Obj\<rparr>;
             A \<in>\<^sub>\<circ> Vset ?\<alpha>;
             B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
          ==> \<Union>\<^sub>\<circ>
               ((\<lambda>a\<in>\<^sub>\<circ>A.
                    \<Union>\<^sub>\<circ>
                     (VLambda B (Hom (dg_prod J ?\<AA>) a) `\<^sub>\<circ>
                      B)) `\<^sub>\<circ>
                A)
              \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> pdigraph ?\<alpha> ?I ?\<AA>
theorem
  pdigraphD:
    pdigraph ?\<alpha> ?I ?\<AA> ==> pdigraph_base ?\<alpha> ?I ?\<AA>
    [| pdigraph ?\<alpha> ?I ?\<AA>; ?J \<subseteq>\<^sub>\<circ> ?I |]
    ==> dg_prod ?J ?\<AA>\<lparr>Obj\<rparr>
        \<subseteq>\<^sub>\<circ> Vset ?\<alpha>
    [| pdigraph ?\<alpha> ?I ?\<AA>; ?J \<subseteq>\<^sub>\<circ> ?I;
       ?A \<subseteq>\<^sub>\<circ> dg_prod ?J ?\<AA>\<lparr>Obj\<rparr>;
       ?B \<subseteq>\<^sub>\<circ> dg_prod ?J ?\<AA>\<lparr>Obj\<rparr>;
       ?A \<in>\<^sub>\<circ> Vset ?\<alpha>;
       ?B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> \<Union>\<^sub>\<circ>
         ((\<lambda>a\<in>\<^sub>\<circ>?A.
              \<Union>\<^sub>\<circ>
               (VLambda ?B (Hom (dg_prod ?J ?\<AA>) a) `\<^sub>\<circ>
                ?B)) `\<^sub>\<circ>
          ?A)
        \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  pdigraphE:
    [| pdigraph ?\<alpha> ?I ?\<AA>;
       [| pdigraph_base ?\<alpha> ?I ?\<AA>;
          !!J. J \<subseteq>\<^sub>\<circ> ?I ==>
               dg_prod J ?\<AA>\<lparr>Obj\<rparr>
               \<subseteq>\<^sub>\<circ> Vset ?\<alpha>;
          !!J A B.
             [| J \<subseteq>\<^sub>\<circ> ?I;
                A \<subseteq>\<^sub>\<circ> dg_prod J
       ?\<AA>\<lparr>Obj\<rparr>;
                B \<subseteq>\<^sub>\<circ> dg_prod J
       ?\<AA>\<lparr>Obj\<rparr>;
                A \<in>\<^sub>\<circ> Vset ?\<alpha>;
                B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
             ==> \<Union>\<^sub>\<circ>
                  ((\<lambda>a\<in>\<^sub>\<circ>A.
                       \<Union>\<^sub>\<circ>
                        (VLambda B
                          (Hom (dg_prod J ?\<AA>) a) `\<^sub>\<circ>
                         B)) `\<^sub>\<circ>
                   A)
                 \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
locale finite_pdigraph
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "finite_pdigraph \<alpha> I \<AA>"
theorem
  finite_pdigraphI:
    [| pdigraph_base ?\<alpha> ?I ?\<AA>; vfinite ?I |]
    ==> finite_pdigraph ?\<alpha> ?I ?\<AA>
theorem
  finite_pdigraphD:
    finite_pdigraph ?\<alpha> ?I ?\<AA> ==>
    pdigraph_base ?\<alpha> ?I ?\<AA>
    finite_pdigraph ?\<alpha> ?I ?\<AA> ==> vfinite ?I
theorem
  finite_pdigraphE:
    [| finite_pdigraph ?\<alpha> ?I ?\<AA>;
       [| pdigraph_base ?\<alpha> ?I ?\<AA>; vfinite ?I |] ==> ?W |]
    ==> ?W
locale arr_Set
  fixes \<alpha> :: "V"
    and T :: "V"
  assumes "arr_Set \<alpha> T"
theorem
  arr_SetI:
    [| \<Z> ?\<alpha>; vfsequence ?T; vsv (?T\<lparr>ArrVal\<rparr>);
       vcard ?T = 3\<^sub>\<nat>;
       \<D>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>) =
       ?T\<lparr>ArrDom\<rparr>;
       \<R>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
       \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrCod\<rparr>;
       ?T\<lparr>ArrDom\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>;
       ?T\<lparr>ArrCod\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> arr_Set ?\<alpha> ?T
theorem
  arr_SetD:
    arr_Set ?\<alpha> ?T ==> \<Z> ?\<alpha>
    arr_Set ?\<alpha> ?T ==> vfsequence ?T
    arr_Set ?\<alpha> ?T ==> vsv (?T\<lparr>ArrVal\<rparr>)
    arr_Set ?\<alpha> ?T ==> vcard ?T = 3\<^sub>\<nat>
    arr_Set ?\<alpha> ?T ==>
    \<D>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>) = ?T\<lparr>ArrDom\<rparr>
    arr_Set ?\<alpha> ?T ==>
    \<R>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
    \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrCod\<rparr>
    arr_Set ?\<alpha> ?T ==>
    ?T\<lparr>ArrDom\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>
    arr_Set ?\<alpha> ?T ==>
    ?T\<lparr>ArrCod\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  arr_SetE:
    [| arr_Set ?\<alpha> ?T;
       [| \<Z> ?\<alpha>; vfsequence ?T; vsv (?T\<lparr>ArrVal\<rparr>);
          vcard ?T = 3\<^sub>\<nat>;
          \<D>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>) =
          ?T\<lparr>ArrDom\<rparr>;
          \<R>\<^sub>\<circ> (?T\<lparr>ArrVal\<rparr>)
          \<subseteq>\<^sub>\<circ> ?T\<lparr>ArrCod\<rparr>;
          ?T\<lparr>ArrDom\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>;
          ?T\<lparr>ArrCod\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
theorem dg_Set_Dom_vsv: vsv (dg_Set ?\<alpha>\<lparr>Dom\<rparr>)
theorem
  dg_Set_Dom_vdomain:
    \<D>\<^sub>\<circ> (dg_Set ?\<alpha>\<lparr>Dom\<rparr>) =
    ZFC_in_HOL.set (Collect (arr_Set ?\<alpha>))
theorem
  dg_Set_Dom_app:
    arr_Set ?\<alpha> ?x ==>
    dg_Set ?\<alpha>\<lparr>Dom\<rparr>\<lparr>?x\<rparr> =
    ?x\<lparr>ArrDom\<rparr>
theorem dg_Set_Cod_vsv: vsv (dg_Set ?\<alpha>\<lparr>Cod\<rparr>)
theorem
  dg_Set_Cod_vdomain:
    \<D>\<^sub>\<circ> (dg_Set ?\<alpha>\<lparr>Cod\<rparr>) =
    ZFC_in_HOL.set (Collect (arr_Set ?\<alpha>))
theorem
  dg_Set_Cod_app:
    arr_Set ?\<alpha> ?x ==>
    dg_Set ?\<alpha>\<lparr>Cod\<rparr>\<lparr>?x\<rparr> =
    ?x\<lparr>ArrCod\<rparr>
### theory "CZH_Foundations.CZH_DG_Set"
### 0.595s elapsed time, 1.828s cpu time, 0.251s GC time
locale is_fl_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_fl_semifunctor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_fl_semifunctorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       smcf_dghm ?\<FF> :
       smc_dg
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
  ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_fl_semifunctorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    smcf_dghm ?\<FF> :
    smc_dg
     ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
                                     ?\<BB>
theorem
  is_fl_semifunctorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          smcf_dghm ?\<FF> :
          smc_dg
           ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
     ?\<BB> |]
       ==> ?W |]
    ==> ?W
theorem
  dghm_proj_ObjMap_vsv:
    vsv (\<pi>\<^sub>D\<^sub>G ?I ?\<AA> ?i\<lparr>ObjMap\<rparr>)
theorem
  dghm_proj_ObjMap_vdomain:
    \<D>\<^sub>\<circ>
     (\<pi>\<^sub>D\<^sub>G ?I ?\<AA> ?i\<lparr>ObjMap\<rparr>) =
    dg_prod ?I ?\<AA>\<lparr>Obj\<rparr>
theorem
  dghm_proj_ObjMap_app:
    ?x \<in>\<^sub>\<circ> dg_prod ?I ?\<AA>\<lparr>Obj\<rparr> ==>
    \<pi>\<^sub>D\<^sub>G ?I ?\<AA>
     ?i\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr> =
    ?x\<lparr>?i\<rparr>
theorem
  dghm_proj_ArrMap_vsv:
    vsv (\<pi>\<^sub>D\<^sub>G ?I ?\<AA> ?i\<lparr>ArrMap\<rparr>)
theorem
  dghm_proj_ArrMap_vdomain:
    \<D>\<^sub>\<circ>
     (\<pi>\<^sub>D\<^sub>G ?I ?\<AA> ?i\<lparr>ArrMap\<rparr>) =
    dg_prod ?I ?\<AA>\<lparr>Arr\<rparr>
theorem
  dghm_proj_ArrMap_app:
    ?x \<in>\<^sub>\<circ> dg_prod ?I ?\<AA>\<lparr>Arr\<rparr> ==>
    \<pi>\<^sub>D\<^sub>G ?I ?\<AA>
     ?i\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr> =
    ?x\<lparr>?i\<rparr>
theorem
  dghm_up_ObjMap_vsv:
    vsv (dghm_up ?I ?\<AA> ?\<CC> ?\<phi>\<lparr>ObjMap\<rparr>)
theorem
  dghm_up_ObjMap_vdomain:
    \<D>\<^sub>\<circ>
     (dghm_up ?I ?\<AA> ?\<CC> ?\<phi>\<lparr>ObjMap\<rparr>) =
    ?\<CC>\<lparr>Obj\<rparr>
theorem
  dghm_up_ObjMap_app:
    ?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
    dghm_up ?I ?\<AA> ?\<CC>
     ?\<phi>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr> =
    (\<lambda>i\<in>\<^sub>\<circ>?I.
        ?\<phi> i\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr>)
theorem
  dghm_up_ArrMap_vsv:
    vsv (dghm_up ?I ?\<AA> ?\<CC> ?\<phi>\<lparr>ArrMap\<rparr>)
theorem
  dghm_up_ArrMap_vdomain:
    \<D>\<^sub>\<circ>
     (dghm_up ?I ?\<AA> ?\<CC> ?\<phi>\<lparr>ArrMap\<rparr>) =
    ?\<CC>\<lparr>Arr\<rparr>
theorem
  dghm_up_ArrMap_app:
    ?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Arr\<rparr> ==>
    dghm_up ?I ?\<AA> ?\<CC>
     ?\<phi>\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr> =
    (\<lambda>i\<in>\<^sub>\<circ>?I.
        ?\<phi> i\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr>)
locale is_fl_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>\<alpha>\<^esub> \<BB>"
theorem
  dghm_singleton_ObjMap_vsv:
    vsv (dghm_singleton ?j ?\<CC>\<lparr>ObjMap\<rparr>)
theorem
  dghm_singleton_ObjMap_vdomain:
    \<D>\<^sub>\<circ> (dghm_singleton ?j ?\<CC>\<lparr>ObjMap\<rparr>) =
    ?\<CC>\<lparr>Obj\<rparr>
theorem
  dghm_singleton_ObjMap_app:
    ?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
    dghm_singleton ?j ?\<CC>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr> =
    ZFC_in_HOL.set {<?j, ?x>}
theorem
  dghm_singleton_ArrMap_vsv:
    vsv (dghm_singleton ?j ?\<CC>\<lparr>ArrMap\<rparr>)
theorem
  dghm_singleton_ArrMap_vdomain:
    \<D>\<^sub>\<circ> (dghm_singleton ?j ?\<CC>\<lparr>ArrMap\<rparr>) =
    ?\<CC>\<lparr>Arr\<rparr>
theorem
  dghm_singleton_ArrMap_app:
    ?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Arr\<rparr> ==>
    dghm_singleton ?j ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr> =
    ZFC_in_HOL.set {<?j, ?x>}
locale is_ff_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_ff_semifunctor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_ff_semifunctorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ff_semifunctorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ff_semifunctorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_iso_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_iso_semifunctor \<alpha> \<AA> \<BB> \<FF>"
### theory "CZH_Foundations.CZH_DG_PDigraph"
### 3.649s elapsed time, 8.848s cpu time, 1.376s GC time
theorem
  is_iso_semifunctorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       smcf_dghm ?\<FF> :
       smc_dg
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> smc_dg
                                ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_iso_semifunctorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    smcf_dghm ?\<FF> :
    smc_dg
     ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> smc_dg
                             ?\<BB>
theorem
  is_iso_semifunctorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          smcf_dghm ?\<FF> :
          smc_dg
           ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> smc_dg
                                   ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_iso_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_iso_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>\<alpha>\<^esub> \<BB>"
locale iso_semicategory
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
  assumes "iso_semicategory \<alpha> \<AA> \<BB>"
### theory "CZH_Foundations.CZH_SMC_Semifunctor"
### 24.667s elapsed time, 78.750s cpu time, 55.996s GC time
Loading theory "CZH_Foundations.CZH_SMC_NTSMCF" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory" via "Draft.CZH_ECAT_NTCF")
Loading theory "CZH_Foundations.CZH_SMC_Subsemicategory" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Set" via "CZH_Foundations.CZH_SMC_Set" via "CZH_Foundations.CZH_SMC_Par")
Loading theory "CZH_Foundations.CZH_SMC_PSemicategory" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory")
Loading theory "CZH_Foundations.CZH_SMC_Rel" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Set" via "CZH_Foundations.CZH_SMC_Set" via "CZH_Foundations.CZH_SMC_Par")
locale \<Z>
  fixes \<alpha> :: "V"
  assumes "\<Z> \<alpha>"
locale psemicategory_base
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "psemicategory_base \<alpha> I \<AA>"
theorem
  psemicategory_baseI:
    [| \<Z> ?\<alpha>;
       !!i. i \<in>\<^sub>\<circ> ?I ==> semicategory ?\<alpha> (?\<AA> i);
       ?I \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> psemicategory_base ?\<alpha> ?I ?\<AA>
theorem
  psemicategory_baseD:
    psemicategory_base ?\<alpha> ?I ?\<AA> ==> \<Z> ?\<alpha>
    [| psemicategory_base ?\<alpha> ?I ?\<AA>; ?i \<in>\<^sub>\<circ> ?I |]
    ==> semicategory ?\<alpha> (?\<AA> ?i)
    psemicategory_base ?\<alpha> ?I ?\<AA> ==>
    ?I \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  psemicategory_baseE:
    [| psemicategory_base ?\<alpha> ?I ?\<AA>;
       [| \<Z> ?\<alpha>;
          !!i. i \<in>\<^sub>\<circ> ?I ==>
               semicategory ?\<alpha> (?\<AA> i);
          ?I \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
locale psemicategory_base
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "psemicategory_base \<alpha> I \<AA>"
### theory "CZH_Foundations.CZH_SMC_Rel"
### 1.076s elapsed time, 4.172s cpu time, 0.595s GC time
Loading theory "Draft.CZH_ECAT_Functor" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory" via "Draft.CZH_ECAT_NTCF")
locale psemicategory
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "psemicategory \<alpha> I \<AA>"
theorem
  psemicategoryI:
    [| psemicategory_base ?\<alpha> ?I ?\<AA>;
       !!J. J \<subseteq>\<^sub>\<circ> ?I ==>
            smc_prod J ?\<AA>\<lparr>Obj\<rparr>
            \<subseteq>\<^sub>\<circ> Vset ?\<alpha>;
       !!J A B.
          [| J \<subseteq>\<^sub>\<circ> ?I;
             A \<subseteq>\<^sub>\<circ> smc_prod J
    ?\<AA>\<lparr>Obj\<rparr>;
             B \<subseteq>\<^sub>\<circ> smc_prod J
    ?\<AA>\<lparr>Obj\<rparr>;
             A \<in>\<^sub>\<circ> Vset ?\<alpha>;
             B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
          ==> \<Union>\<^sub>\<circ>
               ((\<lambda>a\<in>\<^sub>\<circ>A.
                    \<Union>\<^sub>\<circ>
                     (VLambda B (Hom (smc_prod J ?\<AA>) a) `\<^sub>\<circ>
                      B)) `\<^sub>\<circ>
                A)
              \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> psemicategory ?\<alpha> ?I ?\<AA>
theorem
  psemicategoryD:
    psemicategory ?\<alpha> ?I ?\<AA> ==>
    psemicategory_base ?\<alpha> ?I ?\<AA>
    [| psemicategory ?\<alpha> ?I ?\<AA>; ?J \<subseteq>\<^sub>\<circ> ?I |]
    ==> smc_prod ?J ?\<AA>\<lparr>Obj\<rparr>
        \<subseteq>\<^sub>\<circ> Vset ?\<alpha>
    [| psemicategory ?\<alpha> ?I ?\<AA>; ?J \<subseteq>\<^sub>\<circ> ?I;
       ?A \<subseteq>\<^sub>\<circ> smc_prod ?J ?\<AA>\<lparr>Obj\<rparr>;
       ?B \<subseteq>\<^sub>\<circ> smc_prod ?J ?\<AA>\<lparr>Obj\<rparr>;
       ?A \<in>\<^sub>\<circ> Vset ?\<alpha>;
       ?B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> \<Union>\<^sub>\<circ>
         ((\<lambda>a\<in>\<^sub>\<circ>?A.
              \<Union>\<^sub>\<circ>
               (VLambda ?B (Hom (smc_prod ?J ?\<AA>) a) `\<^sub>\<circ>
                ?B)) `\<^sub>\<circ>
          ?A)
        \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  psemicategoryE:
    [| psemicategory ?\<alpha> ?I ?\<AA>;
       [| psemicategory_base ?\<alpha> ?I ?\<AA>;
          !!J. J \<subseteq>\<^sub>\<circ> ?I ==>
               smc_prod J ?\<AA>\<lparr>Obj\<rparr>
               \<subseteq>\<^sub>\<circ> Vset ?\<alpha>;
          !!J A B.
             [| J \<subseteq>\<^sub>\<circ> ?I;
                A \<subseteq>\<^sub>\<circ> smc_prod J
       ?\<AA>\<lparr>Obj\<rparr>;
                B \<subseteq>\<^sub>\<circ> smc_prod J
       ?\<AA>\<lparr>Obj\<rparr>;
                A \<in>\<^sub>\<circ> Vset ?\<alpha>;
                B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
             ==> \<Union>\<^sub>\<circ>
                  ((\<lambda>a\<in>\<^sub>\<circ>A.
                       \<Union>\<^sub>\<circ>
                        (VLambda B
                          (Hom (smc_prod J ?\<AA>) a) `\<^sub>\<circ>
                         B)) `\<^sub>\<circ>
                   A)
                 \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
locale psemicategory
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "psemicategory \<alpha> I \<AA>"
locale subsemicategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "subsemicategory \<alpha> \<BB> \<CC>"
locale finite_psemicategory
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "finite_psemicategory \<alpha> I \<AA>"
theorem
  finite_psemicategoryI:
    [| psemicategory_base ?\<alpha> ?I ?\<AA>; vfinite ?I |]
    ==> finite_psemicategory ?\<alpha> ?I ?\<AA>
theorem
  finite_psemicategoryD:
    finite_psemicategory ?\<alpha> ?I ?\<AA> ==>
    psemicategory_base ?\<alpha> ?I ?\<AA>
    finite_psemicategory ?\<alpha> ?I ?\<AA> ==> vfinite ?I
theorem
  finite_psemicategoryE:
    [| finite_psemicategory ?\<alpha> ?I ?\<AA>;
       [| psemicategory_base ?\<alpha> ?I ?\<AA>; vfinite ?I |] ==> ?W |]
    ==> ?W
locale is_ntsmcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_ntsmcf \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
locale psemicategory
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "psemicategory \<alpha> I \<AA>"
theorem
  subsemicategoryI:
    [| semicategory ?\<alpha> ?\<BB>; semicategory ?\<alpha> ?\<CC>;
       smc_dg ?\<BB>
       \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg ?\<CC>;
       !!b c g a f.
          [| g : b \<mapsto>\<^bsub>?\<BB>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<BB>\<^esub> b |]
          ==> g \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub> f =
              g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f |]
    ==> ?\<BB>
        \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  subsemicategoryD:
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    semicategory ?\<alpha> ?\<BB>
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    semicategory ?\<alpha> ?\<CC>
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    smc_dg ?\<BB>
    \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg ?\<CC>
    [| ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       ?g : ?b \<mapsto>\<^bsub>?\<BB>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<BB>\<^esub> ?b |]
    ==> ?g \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub> ?f =
        ?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f
theorem
  subsemicategoryE:
    [| ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| semicategory ?\<alpha> ?\<BB>; semicategory ?\<alpha> ?\<CC>;
          smc_dg ?\<BB>
          \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg
                          ?\<CC>;
          !!b c g a f.
             [| g : b \<mapsto>\<^bsub>?\<BB>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<BB>\<^esub> b |]
             ==> g \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub> f =
                 g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f |]
       ==> ?W |]
    ==> ?W
locale psemicategory
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "psemicategory \<alpha> I \<AA>"
theorem
  is_ntsmcfI:
    [| \<Z> ?\<alpha>; vfsequence ?\<NN>;
       ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       vcard ?\<NN> = 5\<^sub>\<nat>;
       ntsmcf_tdghm ?\<NN> :
       smcf_dghm
        ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M smcf_dghm ?\<GG> :
       smc_dg
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg
?\<BB>;
       ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>;
       ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>;
       ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>;
       ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB>;
       !!a b f.
          f : a \<mapsto>\<^bsub>?\<AA>\<^esub> b ==>
          ?\<NN>\<lparr>NTMap\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
          ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> =
          ?\<GG>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
          ?\<NN>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> |]
    ==> ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
locale semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "semicategory \<alpha> \<CC>"
locale subsemicategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes
    "\<BB>
     \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>\<alpha>\<^esub> \<CC>"
theorem
  is_ntsmcfD:
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<Z> ?\<alpha>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vfsequence ?\<NN>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vcard ?\<NN> = 5\<^sub>\<nat>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ntsmcf_tdghm ?\<NN> :
    smcf_dghm
     ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M smcf_dghm ?\<GG> :
    smc_dg
     ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg
                                   ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB>
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?f : ?a \<mapsto>\<^bsub>?\<AA>\<^esub> ?b |]
    ==> ?\<NN>\<lparr>NTMap\<rparr>\<lparr>?b\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
        ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?f\<rparr> =
        ?\<GG>\<lparr>ArrMap\<rparr>\<lparr>?f\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
        ?\<NN>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr>
theorem
  is_ntsmcfE:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| \<Z> ?\<alpha>; vfsequence ?\<NN>;
          ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          vcard ?\<NN> = 5\<^sub>\<nat>;
          ntsmcf_tdghm ?\<NN> :
          smcf_dghm
           ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M smcf_dghm
                       ?\<GG> :
          smc_dg
           ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg
   ?\<BB>;
          ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>;
          ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>;
          ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>;
          ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB>;
          !!a b f.
             f : a \<mapsto>\<^bsub>?\<AA>\<^esub> b ==>
             ?\<NN>\<lparr>NTMap\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
             ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> =
             ?\<GG>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
             ?\<NN>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> |]
       ==> ?W |]
    ==> ?W
locale semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "semicategory \<alpha> \<CC>"
locale is_ntsmcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes
    "\<NN> : \<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F \<GG> :
     \<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_functor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_functorI:
    [| \<Z> ?\<alpha>; vfsequence ?\<FF>; category ?\<alpha> ?\<AA>;
       category ?\<alpha> ?\<BB>; vcard ?\<FF> = 4\<^sub>\<nat>;
       cf_smcf ?\<FF> :
       cat_smc
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
        ?\<BB>;
       ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>;
       ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>;
       !!c. c \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> ==>
            ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?\<AA>\<lparr>CId\<rparr>\<lparr>c\<rparr>\<rparr> =
            ?\<BB>\<lparr>CId\<rparr>\<lparr>?\<FF>\<lparr>ObjMap\<rparr>\<lparr>c\<rparr>\<rparr> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_functorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<Z> ?\<alpha>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vfsequence ?\<FF>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    category ?\<alpha> ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    category ?\<alpha> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vcard ?\<FF> = 4\<^sub>\<nat>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    cf_smcf ?\<FF> :
    cat_smc
     ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
     ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?c \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
    ==> ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?\<AA>\<lparr>CId\<rparr>\<lparr>?c\<rparr>\<rparr> =
        ?\<BB>\<lparr>CId\<rparr>\<lparr>?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?c\<rparr>\<rparr>
theorem
  is_functorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| \<Z> ?\<alpha>; vfsequence ?\<FF>; category ?\<alpha> ?\<AA>;
          category ?\<alpha> ?\<BB>; vcard ?\<FF> = 4\<^sub>\<nat>;
          cf_smcf ?\<FF> :
          cat_smc
           ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
           ?\<BB>;
          ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>;
          ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>;
          !!c. c \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> ==>
               ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?\<AA>\<lparr>CId\<rparr>\<lparr>c\<rparr>\<rparr> =
               ?\<BB>\<lparr>CId\<rparr>\<lparr>?\<FF>\<lparr>ObjMap\<rparr>\<lparr>c\<rparr>\<rparr> |]
       ==> ?W |]
    ==> ?W
locale is_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> : \<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>\<alpha>\<^esub> \<BB>"
locale fl_subsemicategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "fl_subsemicategory \<alpha> \<BB> \<CC>"
theorem
  fl_subsemicategoryI:
    [| ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       smc_dg ?\<BB>
       \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
                         ?\<CC> |]
    ==> ?\<BB>
        \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  fl_subsemicategoryD:
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    smc_dg ?\<BB>
    \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
                      ?\<CC>
theorem
  fl_subsemicategoryE:
    [| ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| ?\<BB>
          \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
          smc_dg ?\<BB>
          \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
                            ?\<CC> |]
       ==> ?W |]
    ==> ?W
locale wide_subsemicategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "wide_subsemicategory \<alpha> \<BB> \<CC>"
### theory "CZH_Foundations.CZH_SMC_PSemicategory"
### 7.787s elapsed time, 29.550s cpu time, 14.743s GC time
theorem
  wide_subsemicategoryI:
    [| ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       smc_dg ?\<BB>
       \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> smc_dg
                         ?\<CC> |]
    ==> ?\<BB>
        \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  wide_subsemicategoryD:
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    smc_dg ?\<BB>
    \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> smc_dg
                      ?\<CC>
theorem
  wide_subsemicategoryE:
    [| ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| ?\<BB>
          \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
          smc_dg ?\<BB>
          \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> smc_dg
                            ?\<CC> |]
       ==> ?W |]
    ==> ?W
theorem
  ntsmcf_smcf_comp_NTMap_vdomain:
    \<D>\<^sub>\<circ>
     ((?\<NN> \<circ>\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>D\<^sub>G\<^sub>H\<^sub>M
       \<FF>)\<lparr>NTMap\<rparr>) =
    \<AA>\<lparr>Obj\<rparr>
theorem
  ntsmcf_smcf_comp_NTMap_app:
    ?x \<in>\<^sub>\<circ> \<AA>\<lparr>Obj\<rparr> ==>
    (?\<NN> \<circ>\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>D\<^sub>G\<^sub>H\<^sub>M
     \<FF>)\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    ?\<NN>\<lparr>NTMap\<rparr>\<lparr>\<FF>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr>\<rparr>
locale wide_subsemicategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes
    "\<BB>
     \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>\<alpha>\<^esub> \<CC>"
theorem
  smcf_ntsmcf_comp_NTMap_vdomain:
    \<D>\<^sub>\<circ>
     ((?\<HH> \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M
       \<NN>)\<lparr>NTMap\<rparr>) =
    \<AA>\<lparr>Obj\<rparr>
theorem
  smcf_ntsmcf_comp_NTMap_app:
    ?x \<in>\<^sub>\<circ> \<AA>\<lparr>Obj\<rparr> ==>
    (?\<HH> \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M
     \<NN>)\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>\<NN>\<lparr>NTMap\<rparr>\<lparr>?x\<rparr>\<rparr>
### theory "CZH_Foundations.CZH_SMC_Subsemicategory"
### 10.361s elapsed time, 38.379s cpu time, 21.063s GC time
Loading theory "CZH_Foundations.CZH_SMC_Par" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Set" via "CZH_Foundations.CZH_SMC_Set")
### theory "CZH_Foundations.CZH_SMC_NTSMCF"
### 10.336s elapsed time, 38.276s cpu time, 21.009s GC time
locale category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "category \<alpha> \<CC>"
locale \<Z>
  fixes \<alpha> :: "V"
  assumes "\<Z> \<alpha>"
### theory "CZH_Foundations.CZH_SMC_Par"
### 0.898s elapsed time, 1.955s cpu time, 0.343s GC time
Loading theory "CZH_Foundations.CZH_SMC_Set" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Set")
locale is_ft_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_ft_functor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_ft_functorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       cf_smcf ?\<FF> :
       cat_smc
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
    ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ft_functorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    cf_smcf ?\<FF> :
    cat_smc
     ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
 ?\<BB>
theorem
  is_ft_functorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          cf_smcf ?\<FF> :
          cat_smc
           ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
       ?\<BB> |]
       ==> ?W |]
    ==> ?W
### theory "CZH_Foundations.CZH_SMC_Set"
### 0.741s elapsed time, 1.617s cpu time, 0.284s GC time
locale is_ft_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_fl_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_fl_functor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_fl_functorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       cf_smcf ?\<FF> :
       cat_smc
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
          ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_fl_functorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    cf_smcf ?\<FF> :
    cat_smc
     ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
       ?\<BB>
theorem
  is_fl_functorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          cf_smcf ?\<FF> :
          cat_smc
           ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
             ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_fl_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_ff_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_ff_functor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_ff_functorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ff_functorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ff_functorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_iso_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_iso_functor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_iso_functorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       cf_smcf ?\<FF> :
       cat_smc
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> cat_smc
  ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_iso_functorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    cf_smcf ?\<FF> :
    cat_smc
     ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> cat_smc
                                     ?\<BB>
theorem
  is_iso_functorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          cf_smcf ?\<FF> :
          cat_smc
           ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> cat_smc
     ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_iso_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_iso_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>\<alpha>\<^esub> \<BB>"
locale iso_category
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
  assumes "iso_category \<alpha> \<AA> \<BB>"
### theory "Draft.CZH_ECAT_Functor"
### 15.817s elapsed time, 43.225s cpu time, 21.901s GC time
Loading theory "Draft.CZH_ECAT_NTCF" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_PCategory")
Loading theory "Draft.CZH_ECAT_Subcategory" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Set" via "Draft.CZH_ECAT_Par")
Loading theory "Draft.CZH_ECAT_Rel" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Set" via "Draft.CZH_ECAT_Par")
locale \<Z>
  fixes \<alpha> :: "V"
  assumes "\<Z> \<alpha>"
### theory "Draft.CZH_ECAT_Rel"
### 0.824s elapsed time, 2.501s cpu time, 0.179s GC time
locale subcategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "subcategory \<alpha> \<BB> \<CC>"
locale is_ntcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_ntcf \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
theorem
  subcategoryI:
    [| category ?\<alpha> ?\<BB>; category ?\<alpha> ?\<CC>;
       cat_smc ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
                               ?\<CC>;
       !!a. a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> ==>
            ?\<BB>\<lparr>CId\<rparr>\<lparr>a\<rparr> =
            ?\<CC>\<lparr>CId\<rparr>\<lparr>a\<rparr> |]
    ==> ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  subcategoryD:
    ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    category ?\<alpha> ?\<BB>
    ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    category ?\<alpha> ?\<CC>
    ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    cat_smc ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
                            ?\<CC>
    [| ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> |]
    ==> ?\<BB>\<lparr>CId\<rparr>\<lparr>?a\<rparr> =
        ?\<CC>\<lparr>CId\<rparr>\<lparr>?a\<rparr>
theorem
  subcategoryE:
    [| ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| category ?\<alpha> ?\<BB>; category ?\<alpha> ?\<CC>;
          cat_smc ?\<BB>
          \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
                                  ?\<CC>;
          !!a. a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> ==>
               ?\<BB>\<lparr>CId\<rparr>\<lparr>a\<rparr> =
               ?\<CC>\<lparr>CId\<rparr>\<lparr>a\<rparr> |]
       ==> ?W |]
    ==> ?W
theorem
  is_ntcfI:
    [| \<Z> ?\<alpha>; vfsequence ?\<NN>;
       ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       vcard ?\<NN> = 5\<^sub>\<nat>;
       ntcf_ntsmcf ?\<NN> :
       cf_smcf
        ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F cf_smcf ?\<GG> :
       cat_smc
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
        ?\<BB>;
       ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>;
       ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>;
       ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>;
       ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB> |]
    ==> ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ntcfD:
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<Z> ?\<alpha>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vfsequence ?\<NN>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vcard ?\<NN> = 5\<^sub>\<nat>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ntcf_ntsmcf ?\<NN> :
    cf_smcf
     ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F cf_smcf ?\<GG> :
    cat_smc
     ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
     ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB>
theorem
  is_ntcfE:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| \<Z> ?\<alpha>; vfsequence ?\<NN>;
          ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          vcard ?\<NN> = 5\<^sub>\<nat>;
          ntcf_ntsmcf ?\<NN> :
          cf_smcf
           ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F cf_smcf ?\<GG> :
          cat_smc
           ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
           ?\<BB>;
          ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>;
          ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>;
          ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>;
          ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale subcategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "\<BB> \<subseteq>\<^sub>C\<^bsub>\<alpha>\<^esub> \<CC>"
locale is_ntcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes
    "\<NN> : \<FF> \<mapsto>\<^sub>C\<^sub>F \<GG> :
     \<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>\<alpha>\<^esub> \<BB>"
locale fl_subcategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "fl_subcategory \<alpha> \<BB> \<CC>"
theorem
  fl_subcategoryI:
    [| ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       cat_smc ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
                                 ?\<CC> |]
    ==> ?\<BB>
        \<subseteq>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  fl_subcategoryD:
    ?\<BB>
    \<subseteq>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>
    ?\<BB>
    \<subseteq>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    cat_smc ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
                              ?\<CC>
theorem
  fl_subcategoryE:
    [| ?\<BB>
       \<subseteq>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
          cat_smc ?\<BB>
          \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
                                    ?\<CC> |]
       ==> ?W |]
    ==> ?W
locale wide_subcategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "wide_subcategory \<alpha> \<BB> \<CC>"
theorem
  wide_subcategoryI:
    [| ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       cat_smc ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> cat_smc
                                 ?\<CC> |]
    ==> ?\<BB>
        \<subseteq>\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  wide_subcategoryD:
    ?\<BB>
    \<subseteq>\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>
    ?\<BB>
    \<subseteq>\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    cat_smc ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> cat_smc
                              ?\<CC>
theorem
  wide_subcategoryE:
    [| ?\<BB>
       \<subseteq>\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
          cat_smc ?\<BB>
          \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> cat_smc
                                    ?\<CC> |]
       ==> ?W |]
    ==> ?W
locale wide_subcategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes
    "\<BB>
     \<subseteq>\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>\<alpha>\<^esub> \<CC>"
theorem
  ntcf_cf_comp_NTMap_vdomain:
    \<D>\<^sub>\<circ>
     ((?\<NN> \<circ>\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>D\<^sub>G\<^sub>H\<^sub>M
       \<FF>)\<lparr>NTMap\<rparr>) =
    \<AA>\<lparr>Obj\<rparr>
theorem
  ntcf_cf_comp_NTMap_app:
    ?x \<in>\<^sub>\<circ> \<AA>\<lparr>Obj\<rparr> ==>
    (?\<NN> \<circ>\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>D\<^sub>G\<^sub>H\<^sub>M
     \<FF>)\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    ?\<NN>\<lparr>NTMap\<rparr>\<lparr>\<FF>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr>\<rparr>
locale replete_subcategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "replete_subcategory \<alpha> \<BB> \<CC>"
theorem
  replete_subcategoryI:
    [| ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       !!a b f.
          [| a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
             f : a \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<CC>\<^esub> b |]
          ==> f : a \<mapsto>\<^bsub>?\<BB>\<^esub> b |]
    ==> ?\<BB>
        \<subseteq>\<^sub>C\<^sub>.\<^sub>r\<^sub>e\<^sub>p\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  replete_subcategoryD:
    ?\<BB>
    \<subseteq>\<^sub>C\<^sub>.\<^sub>r\<^sub>e\<^sub>p\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>
    [| ?\<BB>
       \<subseteq>\<^sub>C\<^sub>.\<^sub>r\<^sub>e\<^sub>p\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
       ?f : ?a \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?f : ?a \<mapsto>\<^bsub>?\<BB>\<^esub> ?b
theorem
  replete_subcategoryE:
    [| ?\<BB>
       \<subseteq>\<^sub>C\<^sub>.\<^sub>r\<^sub>e\<^sub>p\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| ?\<BB> \<subseteq>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
          !!a b f.
             [| a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
                f : a \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<CC>\<^esub> b |]
             ==> f : a \<mapsto>\<^bsub>?\<BB>\<^esub> b |]
       ==> ?W |]
    ==> ?W
theorem
  cf_ntcf_comp_NTMap_vdomain:
    \<D>\<^sub>\<circ>
     ((?\<HH> \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M
       \<NN>)\<lparr>NTMap\<rparr>) =
    \<AA>\<lparr>Obj\<rparr>
theorem
  cf_ntcf_comp_NTMap_app:
    ?x \<in>\<^sub>\<circ> \<AA>\<lparr>Obj\<rparr> ==>
    (?\<HH> \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M
     \<NN>)\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>\<NN>\<lparr>NTMap\<rparr>\<lparr>?x\<rparr>\<rparr>
theorem
  ntcf_const_ObjMap_vsv:
    vsv (ntcf_const ?\<JJ> ?\<CC> ?f\<lparr>NTMap\<rparr>)
theorem
  ntcf_const_ObjMap_vdomain:
    \<D>\<^sub>\<circ> (ntcf_const ?\<JJ> ?\<CC> ?f\<lparr>NTMap\<rparr>) =
    ?\<JJ>\<lparr>Obj\<rparr>
theorem
  ntcf_const_ObjMap_app:
    ?x \<in>\<^sub>\<circ> ?\<JJ>\<lparr>Obj\<rparr> ==>
    ntcf_const ?\<JJ> ?\<CC> ?f\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> = ?f
locale wide_replete_subcategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "wide_replete_subcategory \<alpha> \<BB> \<CC>"
theorem
  wide_replete_subcategoryI:
    [| ?\<BB>
       \<subseteq>\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       ?\<BB>
       \<subseteq>\<^sub>C\<^sub>.\<^sub>r\<^sub>e\<^sub>p\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
    ==> ?\<BB>
        \<subseteq>\<^sub>C\<^sub>.\<^sub>w\<^sub>r\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  wide_replete_subcategoryD:
    ?\<BB>
    \<subseteq>\<^sub>C\<^sub>.\<^sub>w\<^sub>r\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    ?\<BB>
    \<subseteq>\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>
    ?\<BB>
    \<subseteq>\<^sub>C\<^sub>.\<^sub>w\<^sub>r\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    ?\<BB>
    \<subseteq>\<^sub>C\<^sub>.\<^sub>r\<^sub>e\<^sub>p\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  wide_replete_subcategoryE:
    [| ?\<BB>
       \<subseteq>\<^sub>C\<^sub>.\<^sub>w\<^sub>r\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| ?\<BB>
          \<subseteq>\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>;
          ?\<BB>
          \<subseteq>\<^sub>C\<^sub>.\<^sub>r\<^sub>e\<^sub>p\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
       ==> ?W |]
    ==> ?W
### theory "Draft.CZH_ECAT_Subcategory"
### 6.670s elapsed time, 15.349s cpu time, 2.681s GC time
Loading theory "Draft.CZH_ECAT_Par" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example" via "Draft.CZH_ECAT_Set")
locale is_iso_ntcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_iso_ntcf \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
theorem
  is_iso_ntcfI:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       !!a. a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> ==>
            ?\<NN>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<BB>\<^esub> ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> |]
    ==> ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_iso_ntcfD:
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
    ==> ?\<NN>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<BB>\<^esub> ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr>
theorem
  is_iso_ntcfE:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          !!a. a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> ==>
               ?\<NN>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<BB>\<^esub> ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> |]
       ==> ?W |]
    ==> ?W
### theory "Draft.CZH_ECAT_Par"
### 0.879s elapsed time, 1.915s cpu time, 0.346s GC time
locale iso_functor
  fixes \<alpha> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
  assumes "iso_functor \<alpha> \<FF> \<GG>"
### theory "Draft.CZH_ECAT_NTCF"
### 8.696s elapsed time, 18.619s cpu time, 3.357s GC time
Loading theory "Draft.CZH_ECAT_PCategory" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example")
locale pcategory_base
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "pcategory_base \<alpha> I \<AA>"
theorem
  pcategory_baseI:
    [| \<Z> ?\<alpha>;
       !!i. i \<in>\<^sub>\<circ> ?I ==> category ?\<alpha> (?\<AA> i);
       ?I \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> pcategory_base ?\<alpha> ?I ?\<AA>
theorem
  pcategory_baseD:
    pcategory_base ?\<alpha> ?I ?\<AA> ==> \<Z> ?\<alpha>
    [| pcategory_base ?\<alpha> ?I ?\<AA>; ?i \<in>\<^sub>\<circ> ?I |]
    ==> category ?\<alpha> (?\<AA> ?i)
    pcategory_base ?\<alpha> ?I ?\<AA> ==>
    ?I \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  pcategory_baseE:
    [| pcategory_base ?\<alpha> ?I ?\<AA>;
       [| \<Z> ?\<alpha>;
          !!i. i \<in>\<^sub>\<circ> ?I ==> category ?\<alpha> (?\<AA> i);
          ?I \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
locale pcategory_base
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "pcategory_base \<alpha> I \<AA>"
locale pcategory
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "pcategory \<alpha> I \<AA>"
theorem
  pcategoryI:
    [| pcategory_base ?\<alpha> ?I ?\<AA>;
       !!J. J \<subseteq>\<^sub>\<circ> ?I ==>
            cat_prod J ?\<AA>\<lparr>Obj\<rparr>
            \<subseteq>\<^sub>\<circ> Vset ?\<alpha>;
       !!J A B.
          [| J \<subseteq>\<^sub>\<circ> ?I;
             A \<subseteq>\<^sub>\<circ> cat_prod J
    ?\<AA>\<lparr>Obj\<rparr>;
             B \<subseteq>\<^sub>\<circ> cat_prod J
    ?\<AA>\<lparr>Obj\<rparr>;
             A \<in>\<^sub>\<circ> Vset ?\<alpha>;
             B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
          ==> \<Union>\<^sub>\<circ>
               ((\<lambda>a\<in>\<^sub>\<circ>A.
                    \<Union>\<^sub>\<circ>
                     (VLambda B (Hom (cat_prod J ?\<AA>) a) `\<^sub>\<circ>
                      B)) `\<^sub>\<circ>
                A)
              \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> pcategory ?\<alpha> ?I ?\<AA>
theorem
  pcategoryD:
    pcategory ?\<alpha> ?I ?\<AA> ==> pcategory_base ?\<alpha> ?I ?\<AA>
    [| pcategory ?\<alpha> ?I ?\<AA>; ?J \<subseteq>\<^sub>\<circ> ?I |]
    ==> cat_prod ?J ?\<AA>\<lparr>Obj\<rparr>
        \<subseteq>\<^sub>\<circ> Vset ?\<alpha>
    [| pcategory ?\<alpha> ?I ?\<AA>; ?J \<subseteq>\<^sub>\<circ> ?I;
       ?A \<subseteq>\<^sub>\<circ> cat_prod ?J ?\<AA>\<lparr>Obj\<rparr>;
       ?B \<subseteq>\<^sub>\<circ> cat_prod ?J ?\<AA>\<lparr>Obj\<rparr>;
       ?A \<in>\<^sub>\<circ> Vset ?\<alpha>;
       ?B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> \<Union>\<^sub>\<circ>
         ((\<lambda>a\<in>\<^sub>\<circ>?A.
              \<Union>\<^sub>\<circ>
               (VLambda ?B (Hom (cat_prod ?J ?\<AA>) a) `\<^sub>\<circ>
                ?B)) `\<^sub>\<circ>
          ?A)
        \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  pcategoryE:
    [| pcategory ?\<alpha> ?I ?\<AA>;
       [| pcategory_base ?\<alpha> ?I ?\<AA>;
          !!J. J \<subseteq>\<^sub>\<circ> ?I ==>
               cat_prod J ?\<AA>\<lparr>Obj\<rparr>
               \<subseteq>\<^sub>\<circ> Vset ?\<alpha>;
          !!J A B.
             [| J \<subseteq>\<^sub>\<circ> ?I;
                A \<subseteq>\<^sub>\<circ> cat_prod J
       ?\<AA>\<lparr>Obj\<rparr>;
                B \<subseteq>\<^sub>\<circ> cat_prod J
       ?\<AA>\<lparr>Obj\<rparr>;
                A \<in>\<^sub>\<circ> Vset ?\<alpha>;
                B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
             ==> \<Union>\<^sub>\<circ>
                  ((\<lambda>a\<in>\<^sub>\<circ>A.
                       \<Union>\<^sub>\<circ>
                        (VLambda B
                          (Hom (cat_prod J ?\<AA>) a) `\<^sub>\<circ>
                         B)) `\<^sub>\<circ>
                   A)
                 \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
locale pcategory
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "pcategory \<alpha> I \<AA>"
locale finite_pcategory
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "finite_pcategory \<alpha> I \<AA>"
theorem
  finite_pcategoryI:
    [| pcategory_base ?\<alpha> ?I ?\<AA>; vfinite ?I |]
    ==> finite_pcategory ?\<alpha> ?I ?\<AA>
theorem
  finite_pcategoryD:
    finite_pcategory ?\<alpha> ?I ?\<AA> ==>
    pcategory_base ?\<alpha> ?I ?\<AA>
    finite_pcategory ?\<alpha> ?I ?\<AA> ==> vfinite ?I
theorem
  finite_pcategoryE:
    [| finite_pcategory ?\<alpha> ?I ?\<AA>;
       [| pcategory_base ?\<alpha> ?I ?\<AA>; vfinite ?I |] ==> ?W |]
    ==> ?W
locale pcategory
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "pcategory \<alpha> I \<AA>"
locale pcategory
  fixes \<alpha> :: "V"
    and I :: "V"
    and \<AA> :: "V => V"
  assumes "pcategory \<alpha> I \<AA>"
theorem
  prodfunctor_proj_ObjMap_vsv:
    vsv (prodfunctor_proj ?\<SS> ?I ?\<AA> ?\<DD> ?J
          ?c\<lparr>ObjMap\<rparr>)
theorem
  prodfunctor_proj_ObjMap_vdomain:
    \<D>\<^sub>\<circ>
     (prodfunctor_proj ?\<SS> ?I ?\<AA> ?\<DD> ?J
       ?c\<lparr>ObjMap\<rparr>) =
    cat_prod (?I -\<^sub>\<circ> ?J) ?\<AA>\<lparr>Obj\<rparr>
theorem
  prodfunctor_proj_ObjMap_app:
    ?x \<in>\<^sub>\<circ> cat_prod (?I -\<^sub>\<circ> ?J)
                            ?\<AA>\<lparr>Obj\<rparr> ==>
    prodfunctor_proj ?\<SS> ?I ?\<AA> ?\<DD> ?J
     ?c\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr> =
    ?\<SS>\<lparr>ObjMap\<rparr>\<lparr>?x \<union>\<^sub>\<circ> ?c\<rparr>
theorem
  prodfunctor_proj_ArrMap_vsv:
    vsv (prodfunctor_proj ?\<SS> ?I ?\<AA> ?\<DD> ?J
          ?c\<lparr>ArrMap\<rparr>)
theorem
  prodfunctor_proj_ArrMap_vdomain:
    \<D>\<^sub>\<circ>
     (prodfunctor_proj ?\<SS> ?I ?\<AA> ?\<DD> ?J
       ?c\<lparr>ArrMap\<rparr>) =
    cat_prod (?I -\<^sub>\<circ> ?J) ?\<AA>\<lparr>Arr\<rparr>
theorem
  prodfunctor_proj_ArrMap_app:
    ?x \<in>\<^sub>\<circ> cat_prod (?I -\<^sub>\<circ> ?J)
                            ?\<AA>\<lparr>Arr\<rparr> ==>
    prodfunctor_proj ?\<SS> ?I ?\<AA> ?\<DD> ?J
     ?c\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr> =
    ?\<SS>\<lparr>ArrMap\<rparr>\<lparr>?x \<union>\<^sub>\<circ>
  cat_prod ?J ?\<AA>\<lparr>CId\<rparr>\<lparr>?c\<rparr>\<rparr>
locale category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "category \<alpha> \<CC>"
theorem
  cf_cat_prod_21_of_3_ObjMap_vsv:
    vsv (cf_cat_prod_21_of_3 ?\<AA> ?\<BB> ?\<CC>\<lparr>ObjMap\<rparr>)
theorem
  cf_cat_prod_21_of_3_ObjMap_vdomain:
    \<D>\<^sub>\<circ>
     (cf_cat_prod_21_of_3 ?\<AA> ?\<BB> ?\<CC>\<lparr>ObjMap\<rparr>) =
    (?\<AA> \<times>\<^sub>C\<^sub>3 ?\<BB> \<times>\<^sub>C\<^sub>3 ?\<CC>)\<lparr>Obj\<rparr>
theorem
  cf_cat_prod_21_of_3_ObjMap_app':
    ?x \<in>\<^sub>\<circ> (?\<AA> \<times>\<^sub>C\<^sub>3 ?\<BB> \<times>\<^sub>C\<^sub>3 ?\<CC>)\<lparr>Obj\<rparr> ==>
    cf_cat_prod_21_of_3 ?\<AA> ?\<BB>
     ?\<CC>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr> =
    [[?x\<lparr>[]\<^sub>\<circ>\<rparr>,
      ?x\<lparr>1\<^sub>\<nat>\<rparr>]\<^sub>\<circ>,
     ?x\<lparr>2\<^sub>\<nat>\<rparr>]\<^sub>\<circ>
theorem
  cf_cat_prod_12_of_3_ObjMap_vsv:
    vsv (cf_cat_prod_12_of_3 ?\<AA> ?\<BB> ?\<CC>\<lparr>ObjMap\<rparr>)
theorem
  cf_cat_prod_12_of_3_ObjMap_vdomain:
    \<D>\<^sub>\<circ>
     (cf_cat_prod_12_of_3 ?\<AA> ?\<BB> ?\<CC>\<lparr>ObjMap\<rparr>) =
    (?\<AA> \<times>\<^sub>C\<^sub>3 ?\<BB> \<times>\<^sub>C\<^sub>3 ?\<CC>)\<lparr>Obj\<rparr>
theorem
  cf_cat_prod_12_of_3_ObjMap_app':
    ?x \<in>\<^sub>\<circ> (?\<AA> \<times>\<^sub>C\<^sub>3 ?\<BB> \<times>\<^sub>C\<^sub>3 ?\<CC>)\<lparr>Obj\<rparr> ==>
    cf_cat_prod_12_of_3 ?\<AA> ?\<BB>
     ?\<CC>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr> =
    [?x\<lparr>[]\<^sub>\<circ>\<rparr>,
     [?x\<lparr>1\<^sub>\<nat>\<rparr>,
      ?x\<lparr>2\<^sub>\<nat>\<rparr>]\<^sub>\<circ>]\<^sub>\<circ>
theorem
  cf_cat_prod_21_of_3_ArrMap_vsv:
    vsv (cf_cat_prod_21_of_3 ?\<AA> ?\<BB> ?\<CC>\<lparr>ArrMap\<rparr>)
theorem
  cf_cat_prod_21_of_3_ArrMap_vdomain:
    \<D>\<^sub>\<circ>
     (cf_cat_prod_21_of_3 ?\<AA> ?\<BB> ?\<CC>\<lparr>ArrMap\<rparr>) =
    (?\<AA> \<times>\<^sub>C\<^sub>3 ?\<BB> \<times>\<^sub>C\<^sub>3 ?\<CC>)\<lparr>Arr\<rparr>
theorem
  cf_cat_prod_21_of_3_ArrMap_app':
    ?x \<in>\<^sub>\<circ> (?\<AA> \<times>\<^sub>C\<^sub>3 ?\<BB> \<times>\<^sub>C\<^sub>3 ?\<CC>)\<lparr>Arr\<rparr> ==>
    cf_cat_prod_21_of_3 ?\<AA> ?\<BB>
     ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr> =
    [[?x\<lparr>[]\<^sub>\<circ>\<rparr>,
      ?x\<lparr>1\<^sub>\<nat>\<rparr>]\<^sub>\<circ>,
     ?x\<lparr>2\<^sub>\<nat>\<rparr>]\<^sub>\<circ>
theorem
  cf_cat_prod_12_of_3_ArrMap_vsv:
    vsv (cf_cat_prod_12_of_3 ?\<AA> ?\<BB> ?\<CC>\<lparr>ArrMap\<rparr>)
theorem
  cf_cat_prod_12_of_3_ArrMap_vdomain:
    \<D>\<^sub>\<circ>
     (cf_cat_prod_12_of_3 ?\<AA> ?\<BB> ?\<CC>\<lparr>ArrMap\<rparr>) =
    (?\<AA> \<times>\<^sub>C\<^sub>3 ?\<BB> \<times>\<^sub>C\<^sub>3 ?\<CC>)\<lparr>Arr\<rparr>
theorem
  cf_cat_prod_12_of_3_ArrMap_app':
    ?x \<in>\<^sub>\<circ> (?\<AA> \<times>\<^sub>C\<^sub>3 ?\<BB> \<times>\<^sub>C\<^sub>3 ?\<CC>)\<lparr>Arr\<rparr> ==>
    cf_cat_prod_12_of_3 ?\<AA> ?\<BB>
     ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr> =
    [?x\<lparr>[]\<^sub>\<circ>\<rparr>,
     [?x\<lparr>1\<^sub>\<nat>\<rparr>,
      ?x\<lparr>2\<^sub>\<nat>\<rparr>]\<^sub>\<circ>]\<^sub>\<circ>
theorem
  bnt_proj_fst_NTMap_vsv:
    vsv ((?\<NN>\<^bsub>?\<AA>,?\<BB>\<^esub>(-,?b)
          \<^sub>N\<^sub>T\<^sub>C\<^sub>F)\<lparr>NTMap\<rparr>)
theorem
  bnt_proj_fst_NTMap_vdomain:
    \<D>\<^sub>\<circ>
     ((?\<NN>\<^bsub>?\<AA>,?\<BB>\<^esub>(-,?b)
       \<^sub>N\<^sub>T\<^sub>C\<^sub>F)\<lparr>NTMap\<rparr>) =
    ?\<AA>\<lparr>Obj\<rparr>
theorem
  bnt_proj_fst_NTMap_app:
    ?x \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> ==>
    (?\<NN>\<^bsub>?\<AA>,?\<BB>\<^esub>(-,?b)
     \<^sub>N\<^sub>T\<^sub>C\<^sub>F)\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    ?\<NN>\<lparr>NTMap\<rparr> \<lparr>?x, ?b\<rparr>\<^sub>\<bullet>
theorem
  bnt_proj_snd_NTMap_vsv:
    vsv ((?\<NN>\<^bsub>?\<AA>,?\<BB>\<^esub>(?a,-)
          \<^sub>N\<^sub>T\<^sub>C\<^sub>F)\<lparr>NTMap\<rparr>)
theorem
  bnt_proj_snd_NTMap_vdomain:
    \<D>\<^sub>\<circ>
     ((?\<NN>\<^bsub>?\<AA>,?\<BB>\<^esub>(?a,-)
       \<^sub>N\<^sub>T\<^sub>C\<^sub>F)\<lparr>NTMap\<rparr>) =
    ?\<BB>\<lparr>Obj\<rparr>
theorem
  bnt_proj_snd_NTMap_app:
    ?x \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> ==>
    (?\<NN>\<^bsub>?\<AA>,?\<BB>\<^esub>(?a,-)
     \<^sub>N\<^sub>T\<^sub>C\<^sub>F)\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    ?\<NN>\<lparr>NTMap\<rparr> \<lparr>?a, ?x\<rparr>\<^sub>\<bullet>
### theory "Draft.CZH_ECAT_PCategory"
### 6.765s elapsed time, 8.375s cpu time, 2.224s GC time
Loading theory "Draft.CZH_ECAT_Set" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates" via "Draft.CZH_ECAT_Structure_Example")
theorem vfst_arrow_ArrVal_vsv: vsv (vfst_arrow ?A ?B\<lparr>ArrVal\<rparr>)
theorem
  vfst_arrow_ArrVal_vdomain:
    \<D>\<^sub>\<circ> (vfst_arrow ?A ?B\<lparr>ArrVal\<rparr>) =
    ?A \<times>\<^sub>\<circ> ?B
theorem
  vfst_arrow_ArrVal_app':
    ?x \<in>\<^sub>\<circ> ?A \<times>\<^sub>\<circ> ?B ==>
    vfst_arrow ?A ?B\<lparr>ArrVal\<rparr>\<lparr>?x\<rparr> = vfst ?x
theorem vsnd_arrow_ArrVal_vsv: vsv (vsnd_arrow ?A ?B\<lparr>ArrVal\<rparr>)
theorem
  vsnd_arrow_ArrVal_vdomain:
    \<D>\<^sub>\<circ> (vsnd_arrow ?A ?B\<lparr>ArrVal\<rparr>) =
    ?A \<times>\<^sub>\<circ> ?B
theorem
  vsnd_arrow_ArrVal_app':
    ?x \<in>\<^sub>\<circ> ?A \<times>\<^sub>\<circ> ?B ==>
    vsnd_arrow ?A ?B\<lparr>ArrVal\<rparr>\<lparr>?x\<rparr> = vsnd ?x
theorem
  vprojection_arrow_vsv:
    vsv (vprojection_arrow ?I ?A ?i\<lparr>ArrVal\<rparr>)
theorem
  vprojection_arrow_vdomain:
    \<D>\<^sub>\<circ> (vprojection_arrow ?I ?A ?i\<lparr>ArrVal\<rparr>) =
    vproduct ?I ?A
theorem
  vprojection_arrow_app:
    ?x \<in>\<^sub>\<circ> vproduct ?I ?A ==>
    vprojection_arrow ?I ?A ?i\<lparr>ArrVal\<rparr>\<lparr>?x\<rparr> =
    ?x\<lparr>?i\<rparr>
theorem
  cf_prod_2_Rel_ObjMap_vsv: vsv (cf_prod_2_Rel ?\<AA>\<lparr>ObjMap\<rparr>)
theorem
  cf_prod_2_Rel_ObjMap_vdomain:
    \<D>\<^sub>\<circ> (cf_prod_2_Rel ?\<AA>\<lparr>ObjMap\<rparr>) =
    (?\<AA> \<times>\<^sub>C ?\<AA>)\<lparr>Obj\<rparr>
theorem
  cf_prod_2_Rel_ArrMap_vsv: vsv (cf_prod_2_Rel ?\<AA>\<lparr>ArrMap\<rparr>)
theorem
  cf_prod_2_Rel_ArrMap_vdomain:
    \<D>\<^sub>\<circ> (cf_prod_2_Rel ?\<AA>\<lparr>ArrMap\<rparr>) =
    (?\<AA> \<times>\<^sub>C ?\<AA>)\<lparr>Arr\<rparr>
theorem
  cat_Set_obj_prod_up_ArrVal_vsv:
    vsv (cat_Set_obj_prod_up ?I ?F ?A ?\<phi>\<lparr>ArrVal\<rparr>)
theorem
  cat_Set_obj_prod_up_ArrVal_vdomain:
    \<D>\<^sub>\<circ>
     (cat_Set_obj_prod_up ?I ?F ?A ?\<phi>\<lparr>ArrVal\<rparr>) =
    ?A
theorem
  cat_Set_obj_prod_up_ArrVal_app:
    ?x \<in>\<^sub>\<circ> ?A ==>
    cat_Set_obj_prod_up ?I ?F ?A
     ?\<phi>\<lparr>ArrVal\<rparr>\<lparr>?x\<rparr> =
    (\<lambda>i\<in>\<^sub>\<circ>?I.
        ?\<phi> i\<lparr>ArrVal\<rparr>\<lparr>?x\<rparr>)
### theory "Draft.CZH_ECAT_Set"
### 2.029s elapsed time, 2.398s cpu time, 0.517s GC time
Loading theory "Draft.CZH_ECAT_Structure_Example" (required by "Draft.CZH_ECAT_Structure_ExampleMoreTemplates")
locale dagger_category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "dagger_category \<alpha> \<CC>"
theorem
  dagger_categoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
       category ?\<alpha> (?\<CC>\<lparr>DagCat\<rparr>);
       \<dagger>\<^sub>C ?\<CC> :
       op_cat
        (?\<CC>\<lparr>DagCat\<rparr>) \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>DagCat\<rparr>;
       vcard ?\<CC> = 2\<^sub>\<nat>;
       !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DagCat\<rparr>\<lparr>Obj\<rparr> ==>
            \<dagger>\<^sub>C
             ?\<CC>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> =
            a;
       \<dagger>\<^sub>C ?\<CC> \<^sub>C\<^sub>F\<circ>
       \<dagger>\<^sub>C ?\<CC> =
       dghm_id (?\<CC>\<lparr>DagCat\<rparr>) |]
    ==> dagger_category ?\<alpha> ?\<CC>
theorem
  dagger_categoryD:
    dagger_category ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    dagger_category ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    dagger_category ?\<alpha> ?\<CC> ==>
    category ?\<alpha> (?\<CC>\<lparr>DagCat\<rparr>)
    dagger_category ?\<alpha> ?\<CC> ==>
    \<dagger>\<^sub>C ?\<CC> :
    op_cat
     (?\<CC>\<lparr>DagCat\<rparr>) \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>DagCat\<rparr>
    dagger_category ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 2\<^sub>\<nat>
    [| dagger_category ?\<alpha> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DagCat\<rparr>\<lparr>Obj\<rparr> |]
    ==> \<dagger>\<^sub>C ?\<CC>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> =
        ?a
    dagger_category ?\<alpha> ?\<CC> ==>
    \<dagger>\<^sub>C ?\<CC> \<^sub>C\<^sub>F\<circ>
    \<dagger>\<^sub>C ?\<CC> =
    dghm_id (?\<CC>\<lparr>DagCat\<rparr>)
theorem
  dagger_categoryE:
    [| dagger_category ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          category ?\<alpha> (?\<CC>\<lparr>DagCat\<rparr>);
          \<dagger>\<^sub>C ?\<CC> :
          op_cat
           (?\<CC>\<lparr>DagCat\<rparr>) \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>DagCat\<rparr>;
          vcard ?\<CC> = 2\<^sub>\<nat>;
          !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DagCat\<rparr>\<lparr>Obj\<rparr> ==>
               \<dagger>\<^sub>C
                ?\<CC>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> =
               a;
          \<dagger>\<^sub>C ?\<CC> \<^sub>C\<^sub>F\<circ>
          \<dagger>\<^sub>C ?\<CC> =
          dghm_id (?\<CC>\<lparr>DagCat\<rparr>) |]
       ==> ?W |]
    ==> ?W
locale monoidal_category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "monoidal_category \<alpha> \<CC>"
theorem
  monoidal_categoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
       category ?\<alpha> (?\<CC>\<lparr>Mcat\<rparr>);
       ?\<CC>\<lparr>Mcf\<rparr> :
       ?\<CC>\<lparr>Mcat\<rparr> \<times>\<^sub>C
       ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
       ?\<CC>\<lparr>M\<alpha>\<rparr> : cf_blcomp
    (?\<CC>\<lparr>Mcf\<rparr>) \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o cf_brcomp
               (?\<CC>\<lparr>Mcf\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr>^\<^sub>C\<^sub>3 \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
       ?\<CC>\<lparr>Ml\<rparr> : ?\<CC>\<lparr>Mcf\<rparr>\<^bsub>?\<CC>\<lparr>Mcat\<rparr>,?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                                  (?\<CC>\<lparr>Me\<rparr>,-)
                                  \<^sub>C\<^sub>F \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o dghm_id
                                  (?\<CC>\<lparr>Mcat\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
       ?\<CC>\<lparr>Mr\<rparr> : ?\<CC>\<lparr>Mcf\<rparr>\<^bsub>?\<CC>\<lparr>Mcat\<rparr>,?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                                  (-,?\<CC>\<lparr>Me\<rparr>)
                                  \<^sub>C\<^sub>F \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o dghm_id
                                  (?\<CC>\<lparr>Mcat\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
       vcard ?\<CC> = 6\<^sub>\<nat>;
       ?\<CC>\<lparr>Me\<rparr>
       \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
       !!a b c d.
          [| a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
             b \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
             c \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
             d \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr> |]
          ==> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
              ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>b,
                                     c, d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
              ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
                                     b \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                                     c,
                                     d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
              (?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
b, c\<rparr>\<^sub>\<bullet> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
               ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>d\<rparr>) =
              ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
                                     b, c \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
  d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
              ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                                     b,
                                     c, d\<rparr>\<^sub>\<bullet>;
       !!a b.
          [| a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
             b \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr> |]
          ==> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
              ?\<CC>\<lparr>Ml\<rparr>\<lparr>NTMap\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
              ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
                                     ?\<CC>\<lparr>Me\<rparr>,
                                     b\<rparr>\<^sub>\<bullet> =
              ?\<CC>\<lparr>Mr\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
              ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>b\<rparr> |]
    ==> monoidal_category ?\<alpha> ?\<CC>
theorem
  monoidal_categoryD:
    monoidal_category ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    monoidal_category ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    monoidal_category ?\<alpha> ?\<CC> ==>
    category ?\<alpha> (?\<CC>\<lparr>Mcat\<rparr>)
    monoidal_category ?\<alpha> ?\<CC> ==>
    ?\<CC>\<lparr>Mcf\<rparr> :
    ?\<CC>\<lparr>Mcat\<rparr> \<times>\<^sub>C
    ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>
    monoidal_category ?\<alpha> ?\<CC> ==>
    ?\<CC>\<lparr>M\<alpha>\<rparr> : cf_blcomp
 (?\<CC>\<lparr>Mcf\<rparr>) \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o cf_brcomp
            (?\<CC>\<lparr>Mcf\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr>^\<^sub>C\<^sub>3 \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>
    monoidal_category ?\<alpha> ?\<CC> ==>
    ?\<CC>\<lparr>Ml\<rparr> : ?\<CC>\<lparr>Mcf\<rparr>\<^bsub>?\<CC>\<lparr>Mcat\<rparr>,?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                               (?\<CC>\<lparr>Me\<rparr>,-)
                               \<^sub>C\<^sub>F \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o dghm_id
                               (?\<CC>\<lparr>Mcat\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>
    monoidal_category ?\<alpha> ?\<CC> ==>
    ?\<CC>\<lparr>Mr\<rparr> : ?\<CC>\<lparr>Mcf\<rparr>\<^bsub>?\<CC>\<lparr>Mcat\<rparr>,?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                               (-,?\<CC>\<lparr>Me\<rparr>)
                               \<^sub>C\<^sub>F \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o dghm_id
                               (?\<CC>\<lparr>Mcat\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>
    monoidal_category ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 6\<^sub>\<nat>
    monoidal_category ?\<alpha> ?\<CC> ==>
    ?\<CC>\<lparr>Me\<rparr>
    \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>
    [| monoidal_category ?\<alpha> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
       ?b \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
       ?c \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
       ?d \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr> |]
    ==> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>?a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
        ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>?b, ?c,
                               ?d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
        ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>?a,
                               ?b \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                               ?c,
                               ?d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
        (?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>?a,
                                ?b,
                                ?c\<rparr>\<^sub>\<bullet> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
         ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>?d\<rparr>) =
        ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>?a, ?b,
                               ?c \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                               ?d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
        ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>?a \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                               ?b,
                               ?c, ?d\<rparr>\<^sub>\<bullet>
    [| monoidal_category ?\<alpha> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
       ?b \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr> |]
    ==> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>?a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
        ?\<CC>\<lparr>Ml\<rparr>\<lparr>NTMap\<rparr>\<lparr>?b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
        ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>?a,
                               ?\<CC>\<lparr>Me\<rparr>,
                               ?b\<rparr>\<^sub>\<bullet> =
        ?\<CC>\<lparr>Mr\<rparr>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
        ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>?b\<rparr>
theorem
  monoidal_categoryE:
    [| monoidal_category ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          category ?\<alpha> (?\<CC>\<lparr>Mcat\<rparr>);
          ?\<CC>\<lparr>Mcf\<rparr> :
          ?\<CC>\<lparr>Mcat\<rparr> \<times>\<^sub>C
          ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
          ?\<CC>\<lparr>M\<alpha>\<rparr> : cf_blcomp
       (?\<CC>\<lparr>Mcf\<rparr>) \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o cf_brcomp
                  (?\<CC>\<lparr>Mcf\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr>^\<^sub>C\<^sub>3 \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
          ?\<CC>\<lparr>Ml\<rparr> : ?\<CC>\<lparr>Mcf\<rparr>\<^bsub>?\<CC>\<lparr>Mcat\<rparr>,?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                                     (?\<CC>\<lparr>Me\<rparr>,-)
                                     \<^sub>C\<^sub>F \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o dghm_id
                                     (?\<CC>\<lparr>Mcat\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
          ?\<CC>\<lparr>Mr\<rparr> : ?\<CC>\<lparr>Mcf\<rparr>\<^bsub>?\<CC>\<lparr>Mcat\<rparr>,?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                                     (-,?\<CC>\<lparr>Me\<rparr>)
                                     \<^sub>C\<^sub>F \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o dghm_id
                                     (?\<CC>\<lparr>Mcat\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
          vcard ?\<CC> = 6\<^sub>\<nat>;
          ?\<CC>\<lparr>Me\<rparr>
          \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
          !!a b c d.
             [| a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
                b \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
                c \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
                d \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr> |]
             ==> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                 ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>b,
  c, d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                 ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
  b \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
  c,
  d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                 (?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
   b, c\<rparr>\<^sub>\<bullet> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                  ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>d\<rparr>) =
                 ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
  b, c \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
     d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                 ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
  b,
  c, d\<rparr>\<^sub>\<bullet>;
          !!a b.
             [| a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
                b \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr> |]
             ==> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                 ?\<CC>\<lparr>Ml\<rparr>\<lparr>NTMap\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                 ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
  ?\<CC>\<lparr>Me\<rparr>, b\<rparr>\<^sub>\<bullet> =
                 ?\<CC>\<lparr>Mr\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                 ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>b\<rparr> |]
       ==> ?W |]
    ==> ?W
theorem
  M\<alpha>_Rel_arrow_lr_ArrVal_vsv:
    vsv (M\<alpha>_Rel_arrow_lr ?A ?B ?C\<lparr>ArrVal\<rparr>)
theorem
  M\<alpha>_Rel_arrow_lr_ArrVal_vdomain:
    \<D>\<^sub>\<circ>
     (M\<alpha>_Rel_arrow_lr ?A ?B ?C\<lparr>ArrVal\<rparr>) =
    (?A \<times>\<^sub>\<circ> ?B) \<times>\<^sub>\<circ> ?C
theorem
  M\<alpha>_Rel_arrow_lr_ArrVal_app':
    ?x \<in>\<^sub>\<circ> (?A \<times>\<^sub>\<circ>
                            ?B) \<times>\<^sub>\<circ>
                           ?C ==>
    M\<alpha>_Rel_arrow_lr ?A ?B
     ?C\<lparr>ArrVal\<rparr>\<lparr>?x\<rparr> =
    <vfst (vfst ?x), vsnd (vfst ?x), vsnd ?x>
theorem
  M\<alpha>_Rel_arrow_rl_ArrVal_vsv:
    vsv (M\<alpha>_Rel_arrow_rl ?A ?B ?C\<lparr>ArrVal\<rparr>)
theorem
  M\<alpha>_Rel_arrow_rl_ArrVal_vdomain:
    \<D>\<^sub>\<circ>
     (M\<alpha>_Rel_arrow_rl ?A ?B ?C\<lparr>ArrVal\<rparr>) =
    ?A \<times>\<^sub>\<circ> ?B \<times>\<^sub>\<circ> ?C
theorem
  M\<alpha>_Rel_arrow_rl_ArrVal_app':
    ?x \<in>\<^sub>\<circ> ?A \<times>\<^sub>\<circ>
                           ?B \<times>\<^sub>\<circ> ?C ==>
    M\<alpha>_Rel_arrow_rl ?A ?B
     ?C\<lparr>ArrVal\<rparr>\<lparr>?x\<rparr> =
    <<vfst ?x, vfst (vsnd ?x)>, vsnd (vsnd ?x)>
theorem
  M\<alpha>_Rel_NTMap_vsv: vsv (M\<alpha>_Rel ?\<CC>\<lparr>NTMap\<rparr>)
theorem
  M\<alpha>_Rel_NTMap_vdomain:
    \<D>\<^sub>\<circ> (M\<alpha>_Rel ?\<CC>\<lparr>NTMap\<rparr>) =
    (?\<CC>^\<^sub>C\<^sub>3)\<lparr>Obj\<rparr>
theorem
  M\<alpha>_Rel_NTMap_app':
    ?x \<in>\<^sub>\<circ> (?\<CC>^\<^sub>C\<^sub>3)\<lparr>Obj\<rparr> ==>
    M\<alpha>_Rel ?\<CC>\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    M\<alpha>_Rel_arrow_lr (?x\<lparr>[]\<^sub>\<circ>\<rparr>)
     (?x\<lparr>1\<^sub>\<nat>\<rparr>) (?x\<lparr>2\<^sub>\<nat>\<rparr>)
theorem
  Ml_Rel_components_NTMap_vsv: vsv (Ml_Rel ?\<CC> ?a\<lparr>NTMap\<rparr>)
theorem
  Ml_Rel_components_NTMap_vdomain:
    \<D>\<^sub>\<circ> (Ml_Rel ?\<CC> ?a\<lparr>NTMap\<rparr>) =
    ?\<CC>\<lparr>Obj\<rparr>
theorem
  Ml_Rel_components_NTMap_app:
    ?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
    Ml_Rel ?\<CC> ?a\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    vsnd_arrow (ZFC_in_HOL.set {?a}) ?x
theorem
  Mr_Rel_components_NTMap_vsv: vsv (Mr_Rel ?\<CC> ?b\<lparr>NTMap\<rparr>)
theorem
  Mr_Rel_components_NTMap_vdomain:
    \<D>\<^sub>\<circ> (Mr_Rel ?\<CC> ?b\<lparr>NTMap\<rparr>) =
    ?\<CC>\<lparr>Obj\<rparr>
theorem
  Mr_Rel_components_NTMap_app:
    ?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
    Mr_Rel ?\<CC> ?b\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    vfst_arrow ?x (ZFC_in_HOL.set {?b})
locale dagger_monoidal_category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "dagger_monoidal_category \<alpha> \<CC>"
theorem
  dagger_monoidal_categoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vcard ?\<CC> = 7\<^sub>\<nat>;
       dagger_category ?\<alpha> (dmcat_dagcat ?\<CC>);
       monoidal_category ?\<alpha> (dmcat_mcat ?\<CC>);
       !!c d g a b f.
          [| g : c \<mapsto>\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> d;
             f : a \<mapsto>\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> b |]
          ==> \<dagger>\<^sub>M\<^sub>C
               ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>g \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>DMcf\<rparr>\<^esub>
             f\<rparr> =
              \<dagger>\<^sub>M\<^sub>C
               ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>g\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>DMcf\<rparr>\<^esub>
              \<dagger>\<^sub>M\<^sub>C
               ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr>;
       !!A. A \<in>\<^sub>\<circ> (?\<CC>\<lparr>DMcat\<rparr>^\<^sub>C\<^sub>3)\<lparr>Obj\<rparr> ==>
            \<dagger>\<^sub>M\<^sub>C
             ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DM\<alpha>\<rparr>\<lparr>NTMap\<rparr>\<lparr>A\<rparr>\<rparr> =
            (?\<CC>\<lparr>DM\<alpha>\<rparr>\<lparr>NTMap\<rparr>\<lparr>A\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>;
       !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr> ==>
            \<dagger>\<^sub>M\<^sub>C
             ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DMl\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>\<rparr> =
            (?\<CC>\<lparr>DMl\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>;
       !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr> ==>
            \<dagger>\<^sub>M\<^sub>C
             ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DMr\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>\<rparr> =
            (?\<CC>\<lparr>DMr\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> |]
    ==> dagger_monoidal_category ?\<alpha> ?\<CC>
theorem
  dagger_monoidal_categoryD:
    dagger_monoidal_category ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    dagger_monoidal_category ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    dagger_monoidal_category ?\<alpha> ?\<CC> ==>
    vcard ?\<CC> = 7\<^sub>\<nat>
    dagger_monoidal_category ?\<alpha> ?\<CC> ==>
    dagger_category ?\<alpha> (dmcat_dagcat ?\<CC>)
    dagger_monoidal_category ?\<alpha> ?\<CC> ==>
    monoidal_category ?\<alpha> (dmcat_mcat ?\<CC>)
    [| dagger_monoidal_category ?\<alpha> ?\<CC>;
       ?g : ?c \<mapsto>\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> ?d;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> ?b |]
    ==> \<dagger>\<^sub>M\<^sub>C
         ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?g \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>DMcf\<rparr>\<^esub>
       ?f\<rparr> =
        \<dagger>\<^sub>M\<^sub>C
         ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?g\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>DMcf\<rparr>\<^esub>
        \<dagger>\<^sub>M\<^sub>C
         ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?f\<rparr>
    [| dagger_monoidal_category ?\<alpha> ?\<CC>;
       ?A \<in>\<^sub>\<circ> (?\<CC>\<lparr>DMcat\<rparr>^\<^sub>C\<^sub>3)\<lparr>Obj\<rparr> |]
    ==> \<dagger>\<^sub>M\<^sub>C
         ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DM\<alpha>\<rparr>\<lparr>NTMap\<rparr>\<lparr>?A\<rparr>\<rparr> =
        (?\<CC>\<lparr>DM\<alpha>\<rparr>\<lparr>NTMap\<rparr>\<lparr>?A\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>
    [| dagger_monoidal_category ?\<alpha> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr> |]
    ==> \<dagger>\<^sub>M\<^sub>C
         ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DMl\<rparr>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr>\<rparr> =
        (?\<CC>\<lparr>DMl\<rparr>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>
    [| dagger_monoidal_category ?\<alpha> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr> |]
    ==> \<dagger>\<^sub>M\<^sub>C
         ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DMr\<rparr>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr>\<rparr> =
        (?\<CC>\<lparr>DMr\<rparr>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>
theorem
  dagger_monoidal_categoryE:
    [| dagger_monoidal_category ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vcard ?\<CC> = 7\<^sub>\<nat>;
          dagger_category ?\<alpha> (dmcat_dagcat ?\<CC>);
          monoidal_category ?\<alpha> (dmcat_mcat ?\<CC>);
          !!c d g a b f.
             [| g : c \<mapsto>\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> d;
                f : a \<mapsto>\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> b |]
             ==> \<dagger>\<^sub>M\<^sub>C
                  ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>g \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>DMcf\<rparr>\<^esub>
                f\<rparr> =
                 \<dagger>\<^sub>M\<^sub>C
                  ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>g\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>DMcf\<rparr>\<^esub>
                 \<dagger>\<^sub>M\<^sub>C
                  ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr>;
          !!A. A \<in>\<^sub>\<circ> (?\<CC>\<lparr>DMcat\<rparr>^\<^sub>C\<^sub>3)\<lparr>Obj\<rparr> ==>
               \<dagger>\<^sub>M\<^sub>C
                ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DM\<alpha>\<rparr>\<lparr>NTMap\<rparr>\<lparr>A\<rparr>\<rparr> =
               (?\<CC>\<lparr>DM\<alpha>\<rparr>\<lparr>NTMap\<rparr>\<lparr>A\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>;
          !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr> ==>
               \<dagger>\<^sub>M\<^sub>C
                ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DMl\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>\<rparr> =
               (?\<CC>\<lparr>DMl\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>;
          !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr> ==>
               \<dagger>\<^sub>M\<^sub>C
                ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DMr\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>\<rparr> =
               (?\<CC>\<lparr>DMr\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> |]
       ==> ?W |]
    ==> ?W
locale dagger_monoidal_category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "dagger_monoidal_category \<alpha> \<CC>"
locale dagger_monoidal_category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "dagger_monoidal_category \<alpha> \<CC>"
### theory "Draft.CZH_ECAT_Structure_Example"
### 10.482s elapsed time, 18.666s cpu time, 11.248s GC time
Loading theory "Draft.CZH_ECAT_Structure_ExampleMoreTemplates"
val templateLemmas =
   [("CZH_ECAT_Structure_Example.M\<alpha>_Rel_NTMap_vsv",
     "vsv (M\<alpha>_Rel ?\<CC>\<lparr>NTMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Structure_Example.Ml_Rel_components_NTMap_vsv",
     "vsv (Ml_Rel ?\<CC> ?a\<lparr>NTMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Structure_Example.Mr_Rel_components_NTMap_vsv",
     "vsv (Mr_Rel ?\<CC> ?b\<lparr>NTMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_components",
     "M\<alpha>_Rel ?\<CC>\<lparr>NTDGCod\<rparr> = ?\<CC>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_var 0)),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_arrow_lr_ArrVal_vsv",
     "vsv (M\<alpha>_Rel_arrow_lr ?A ?B ?C\<lparr>ArrVal\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_arrow_rl_ArrVal_vsv",
     "vsv (M\<alpha>_Rel_arrow_rl ?A ?B ?C\<lparr>ArrVal\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Structure_Example.dmcat_dagcat_dmcat_Rel",
     "dmcat_dagcat (dmcat_Rel ?\<alpha> ?a) = dagcat_Rel ?\<alpha>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("CZH_ECAT_Structure_Example.dagcat_Rel_components",
     "dagcat_Rel ?\<alpha>\<lparr>DagCat\<rparr> = cat_Rel ?\<alpha>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("CZH_ECAT_Structure_Example.dagcat_Rel_components",
     "\<dagger>\<^sub>C (dagcat_Rel ?\<alpha>) =
      \<dagger>\<^sub>C\<^sub>.\<^sub>R\<^sub>e\<^sub>l ?\<alpha>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("CZH_ECAT_Structure_Example.Ml_Rel_components",
     "Ml_Rel ?\<CC> ?a\<lparr>NTDGCod\<rparr> = ?\<CC>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0),
       template_var 1)),
    ("CZH_ECAT_Structure_Example.Ml_Rel_components",
     "Ml_Rel ?\<CC> ?a\<lparr>NTDGDom\<rparr> = ?\<CC>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0),
       template_var 1)),
    ("CZH_ECAT_Structure_Example.Mr_Rel_components",
     "Mr_Rel ?\<CC> ?b\<lparr>NTDGCod\<rparr> = ?\<CC>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0),
       template_var 1)),
    ("CZH_ECAT_Structure_Example.Mr_Rel_components",
     "Mr_Rel ?\<CC> ?b\<lparr>NTDGDom\<rparr> = ?\<CC>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0),
       template_var 1)),
    ("CZH_ECAT_Structure_Example.dagger_categoryD",
     "dagger_category ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("CZH_ECAT_Structure_Example.dagger_categoryD",
     "dagger_category ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("CZH_ECAT_Structure_Example.dagger_monoidal_categoryD",
     "dagger_monoidal_category ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("CZH_ECAT_Structure_Example.dagger_monoidal_categoryD",
     "dagger_monoidal_category ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("CZH_ECAT_Structure_Example.monoidal_categoryD",
     "monoidal_category ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("CZH_ECAT_Structure_Example.monoidal_categoryD",
     "monoidal_category ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("CZH_ECAT_Structure_Example.dmcat_mcat_dmcat_Rel",
     "dmcat_mcat (dmcat_Rel ?\<alpha> ?a) = mcat_Rel ?\<alpha> ?a",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_components",
     "M\<alpha>_Rel ?\<CC>\<lparr>NTCod\<rparr> =
      cf_brcomp (cf_prod_2_Rel ?\<CC>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_components",
     "M\<alpha>_Rel ?\<CC>\<lparr>NTDom\<rparr> =
      cf_blcomp (cf_prod_2_Rel ?\<CC>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("CZH_ECAT_Structure_Example.dmcat_dagcat_components",
     "dmcat_dagcat ?\<CC>\<lparr>DagCat\<rparr> =
      ?\<CC>\<lparr>DMcat\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 3, template_var 0), template_hole 0))),
    ("CZH_ECAT_Structure_Example.dmcat_dagcat_components",
     "\<dagger>\<^sub>C (dmcat_dagcat ?\<CC>) =
      \<dagger>\<^sub>M\<^sub>C ?\<CC>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 3, template_var 0), template_hole 0))),
    ("CZH_ECAT_Structure_Example.dmcat_mcat_components",
     "dmcat_mcat ?\<CC>\<lparr>M\<alpha>\<rparr> =
      ?\<CC>\<lparr>DM\<alpha>\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 3, template_var 0), template_hole 0))),
    ("CZH_ECAT_Structure_Example.dmcat_mcat_components",
     "dmcat_mcat ?\<CC>\<lparr>Mcat\<rparr> = ?\<CC>\<lparr>DMcat\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 3, template_var 0), template_hole 0))),
    ("CZH_ECAT_Structure_Example.dmcat_mcat_components",
     "dmcat_mcat ?\<CC>\<lparr>Mcf\<rparr> = ?\<CC>\<lparr>DMcf\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 3, template_var 0), template_hole 0))),
    ("CZH_ECAT_Structure_Example.dmcat_mcat_components",
     "dmcat_mcat ?\<CC>\<lparr>Me\<rparr> = ?\<CC>\<lparr>DMe\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 3, template_var 0), template_hole 0))),
    ("CZH_ECAT_Structure_Example.dmcat_mcat_components",
     "dmcat_mcat ?\<CC>\<lparr>Ml\<rparr> = ?\<CC>\<lparr>DMl\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 3, template_var 0), template_hole 0))),
    ("CZH_ECAT_Structure_Example.dmcat_mcat_components",
     "dmcat_mcat ?\<CC>\<lparr>Mr\<rparr> = ?\<CC>\<lparr>DMr\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 3, template_var 0), template_hole 0))),
    ("CZH_ECAT_Structure_Example.Ml_Rel_components",
     "Ml_Rel ?\<CC> ?a\<lparr>NTCod\<rparr> = dghm_id ?\<CC>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 1))),
    ("CZH_ECAT_Structure_Example.Mr_Rel_components",
     "Mr_Rel ?\<CC> ?b\<lparr>NTCod\<rparr> = dghm_id ?\<CC>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 1))),
    ("CZH_ECAT_Structure_Example.dmcat_Rel_components",
     "dmcat_Rel ?\<alpha> ?a\<lparr>DMcat\<rparr> = cat_Rel ?\<alpha>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 1))),
    ("CZH_ECAT_Structure_Example.dmcat_Rel_components",
     "\<dagger>\<^sub>M\<^sub>C (dmcat_Rel ?\<alpha> ?a) =
      \<dagger>\<^sub>C\<^sub>.\<^sub>R\<^sub>e\<^sub>l ?\<alpha>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 1))),
    ("CZH_ECAT_Structure_Example.mcat_Rel_components",
     "mcat_Rel ?\<alpha> ?a\<lparr>Mcat\<rparr> = cat_Rel ?\<alpha>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 1))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_components",
     "M\<alpha>_Rel ?\<CC>\<lparr>NTDGDom\<rparr> =
      ?\<CC>^\<^sub>C\<^sub>3",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 0),
         template_var 0))),
    ("CZH_ECAT_Structure_Example.dmcat_Rel_components",
     "dmcat_Rel ?\<alpha> ?a\<lparr>DM\<alpha>\<rparr> =
      M\<alpha>_Rel (cat_Rel ?\<alpha>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 1)))),
    ("CZH_ECAT_Structure_Example.dmcat_Rel_components",
     "dmcat_Rel ?\<alpha> ?a\<lparr>DMcf\<rparr> =
      cf_prod_2_Rel (cat_Rel ?\<alpha>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 1)))),
    ("CZH_ECAT_Structure_Example.mcat_Rel_components",
     "mcat_Rel ?\<alpha> ?a\<lparr>M\<alpha>\<rparr> =
      M\<alpha>_Rel (cat_Rel ?\<alpha>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 1)))),
    ("CZH_ECAT_Structure_Example.mcat_Rel_components",
     "mcat_Rel ?\<alpha> ?a\<lparr>Mcf\<rparr> =
      cf_prod_2_Rel (cat_Rel ?\<alpha>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 1)))),
    ("CZH_ECAT_Structure_Example.dagger_monoidal_categoryD",
     "dagger_monoidal_category ?\<alpha> ?\<CC> ==>
      dagger_category ?\<alpha> (dmcat_dagcat ?\<CC>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CZH_ECAT_Structure_Example.dagger_monoidal_categoryD",
     "dagger_monoidal_category ?\<alpha> ?\<CC> ==>
      monoidal_category ?\<alpha> (dmcat_mcat ?\<CC>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CZH_ECAT_Structure_Example.dmcat_Rel_components",
     "dmcat_Rel ?\<alpha> ?a\<lparr>DMe\<rparr> = ZFC_in_HOL.set {?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("CZH_ECAT_Structure_Example.dmcat_Rel_components",
     "dmcat_Rel ?\<alpha> ?a\<lparr>DMl\<rparr> =
      Ml_Rel (cat_Rel ?\<alpha>) ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("CZH_ECAT_Structure_Example.dmcat_Rel_components",
     "dmcat_Rel ?\<alpha> ?a\<lparr>DMr\<rparr> =
      Mr_Rel (cat_Rel ?\<alpha>) ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("CZH_ECAT_Structure_Example.mcat_Rel_components",
     "mcat_Rel ?\<alpha> ?a\<lparr>Me\<rparr> = ZFC_in_HOL.set {?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("CZH_ECAT_Structure_Example.mcat_Rel_components",
     "mcat_Rel ?\<alpha> ?a\<lparr>Ml\<rparr> =
      Ml_Rel (cat_Rel ?\<alpha>) ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("CZH_ECAT_Structure_Example.mcat_Rel_components",
     "mcat_Rel ?\<alpha> ?a\<lparr>Mr\<rparr> =
      Mr_Rel (cat_Rel ?\<alpha>) ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("CZH_ECAT_Structure_Example.dagger_categoryD",
     "dagger_category ?\<alpha> ?\<CC> ==>
      category ?\<alpha> (?\<CC>\<lparr>DagCat\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("CZH_ECAT_Structure_Example.monoidal_categoryD",
     "monoidal_category ?\<alpha> ?\<CC> ==>
      category ?\<alpha> (?\<CC>\<lparr>Mcat\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("CZH_ECAT_Structure_Example.dagger_categoryD",
     "dagger_category ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 2\<^sub>\<nat>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("CZH_ECAT_Structure_Example.dagger_monoidal_categoryD",
     "dagger_monoidal_category ?\<alpha> ?\<CC> ==>
      vcard ?\<CC> = 7\<^sub>\<nat>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 1, template_hole 0))))))),
    ("CZH_ECAT_Structure_Example.monoidal_categoryD",
     "monoidal_category ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 6\<^sub>\<nat>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 5, template_var 0),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0))))))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_arrow_lr_components",
     "M\<alpha>_Rel_arrow_lr ?A ?B ?C\<lparr>ArrCod\<rparr> =
      ?A \<times>\<^sub>\<circ> ?B \<times>\<^sub>\<circ> ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_arrow_lr_components",
     "M\<alpha>_Rel_arrow_lr ?A ?B ?C\<lparr>ArrDom\<rparr> =
      (?A \<times>\<^sub>\<circ> ?B) \<times>\<^sub>\<circ> ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2), t_empty)),
         t_empty))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_arrow_rl_components",
     "M\<alpha>_Rel_arrow_rl ?A ?B ?C\<lparr>ArrCod\<rparr> =
      (?A \<times>\<^sub>\<circ> ?B) \<times>\<^sub>\<circ> ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2), t_empty)),
         t_empty))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_arrow_rl_components",
     "M\<alpha>_Rel_arrow_rl ?A ?B ?C\<lparr>ArrDom\<rparr> =
      ?A \<times>\<^sub>\<circ> ?B \<times>\<^sub>\<circ> ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("CZH_ECAT_Structure_Example.Ml_Rel_components",
     "Ml_Rel ?\<CC> ?a\<lparr>NTDom\<rparr> =
      cf_prod_2_Rel ?\<CC>\<^bsub>?\<CC>,?\<CC>\<^esub>(
      ZFC_in_HOL.set {?a},-)\<^sub>C\<^sub>F",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_hole 5),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_var 1),
           template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("CZH_ECAT_Structure_Example.Mr_Rel_components",
     "Mr_Rel ?\<CC> ?b\<lparr>NTDom\<rparr> =
      cf_prod_2_Rel ?\<CC>\<^bsub>?\<CC>,?\<CC>\<^esub>(
      -,ZFC_in_HOL.set {?b})\<^sub>C\<^sub>F",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_hole 5),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_var 1),
           template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("CZH_ECAT_Structure_Example.dmcat_cs_intros",
     "dagger_monoidal_category ?\<alpha> ?\<CC> ==>
      ?\<CC>\<lparr>DMe\<rparr>
      \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 3)),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 1)),
                 template_hole 0)))
           ))),
    ("CZH_ECAT_Structure_Example.monoidal_categoryD",
     "monoidal_category ?\<alpha> ?\<CC> ==>
      ?\<CC>\<lparr>Me\<rparr>
      \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_hole 3)),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 1)),
                 template_hole 0)))
           ))),
    ("CZH_ECAT_Structure_Example.category_if_dagger_category",
     "[| ?\<CC>' = ?\<CC>\<lparr>DagCat\<rparr>;
         dagger_category ?\<alpha> ?\<CC> |]
      ==> category ?\<alpha> ?\<CC>'",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_hole 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("CZH_ECAT_Structure_Example.Ml_Rel_components",
     "Ml_Rel ?\<CC> ?a\<lparr>NTMap\<rparr> =
      VLambda (?\<CC>\<lparr>Obj\<rparr>)
       (vsnd_arrow (ZFC_in_HOL.set {?a}))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0)),
         template_hole 6),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 8, template_var 1),
             template_hole 4)),
         t_empty))),
    ("CZH_ECAT_Structure_Example.Mr_Rel_components",
     "Mr_Rel ?\<CC> ?b\<lparr>NTMap\<rparr> =
      (\<lambda>A\<in>\<^sub>\<circ>?\<CC>\<lparr>Obj\<rparr>.
          vfst_arrow A (ZFC_in_HOL.set {?b}))",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 1),
             template_var 0)),
         template_hole 6),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 8, template_var 1),
             template_hole 4)),
         t_empty))),
    ("CZH_ECAT_Structure_Example.dagger_categoryD",
     "dagger_category ?\<alpha> ?\<CC> ==>
      \<dagger>\<^sub>C ?\<CC> :
      op_cat
       (?\<CC>\<lparr>DagCat\<rparr>) \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>DagCat\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_hole 1))),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 0))
           ))),
    ("CZH_ECAT_Structure_Example.dagger_categoryD",
     "dagger_category ?\<alpha> ?\<CC> ==>
      \<dagger>\<^sub>C ?\<CC> \<^sub>C\<^sub>F\<circ>
      \<dagger>\<^sub>C ?\<CC> =
      dghm_id (?\<CC>\<lparr>DagCat\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 0))))),
    ("CZH_ECAT_Structure_Example.dmcat_cs_simps",
     "dagger_monoidal_category ?\<alpha> ?\<CC> ==>
      \<dagger>\<^sub>M\<^sub>C ?\<CC> \<^sub>C\<^sub>F\<circ>
      \<dagger>\<^sub>M\<^sub>C ?\<CC> =
      dghm_id (?\<CC>\<lparr>DMcat\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_hole 2)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 0))))),
    ("CZH_ECAT_Structure_Example.Ml_Rel_components_NTMap_vdomain",
     "\<D>\<^sub>\<circ> (Ml_Rel ?\<CC> ?a\<lparr>NTMap\<rparr>) =
      ?\<CC>\<lparr>Obj\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app (template_hole 7, template_var 1), template_hole 0))),
    ("CZH_ECAT_Structure_Example.Mr_Rel_components_NTMap_vdomain",
     "\<D>\<^sub>\<circ> (Mr_Rel ?\<CC> ?b\<lparr>NTMap\<rparr>) =
      ?\<CC>\<lparr>Obj\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app (template_hole 7, template_var 1), template_hole 0))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_NTMap_vdomain",
     "\<D>\<^sub>\<circ> (M\<alpha>_Rel ?\<CC>\<lparr>NTMap\<rparr>) =
      (?\<CC>^\<^sub>C\<^sub>3)\<lparr>Obj\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app (template_hole 4, template_var 0)),
                     template_hole 3)),
                 template_hole 2)))),
         template_app
          (template_app
            (template_hole 8,
             template_app (template_hole 4, template_var 0)),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 0),
             template_var 0)),
         template_hole 0))),
    ("CZH_ECAT_Structure_Example.monoidal_categoryD",
     "monoidal_category ?\<alpha> ?\<CC> ==>
      ?\<CC>\<lparr>Mcf\<rparr> :
      ?\<CC>\<lparr>Mcat\<rparr> \<times>\<^sub>C
      ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 0),
                       template_hole 1)),
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_hole 1))),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 0))
           ))),
    ("CZH_ECAT_Structure_Example.Ml_Rel_components_NTMap_app",
     "?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
      Ml_Rel ?\<CC> ?a\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
      vsnd_arrow (ZFC_in_HOL.set {?a}) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_hole 7)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)),
               template_hole 4)),
           template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))),
           template_var 2)))),
    ("CZH_ECAT_Structure_Example.Mr_Rel_components_NTMap_app",
     "?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
      Mr_Rel ?\<CC> ?b\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
      vfst_arrow ?x (ZFC_in_HOL.set {?b})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_hole 7)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_var 0)),
               template_hole 4)),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("CZH_ECAT_Structure_Example.dagger_categoryD",
     "[| dagger_category ?\<alpha> ?\<CC>;
         ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DagCat\<rparr>\<lparr>Obj\<rparr> |]
      ==> \<dagger>\<^sub>C ?\<CC>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> =
          ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_hole 4)),
                  template_hole 3)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_hole 1)),
               template_hole 0)),
           template_var 0),
         template_var 0))),
    ("CZH_ECAT_Structure_Example.dmcat_cs_simps",
     "[| dagger_monoidal_category ?\<alpha> ?\<CC>;
         ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr> |]
      ==> \<dagger>\<^sub>M\<^sub>C
           ?\<CC>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> =
          ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 5, template_var 1),
                      template_hole 4)),
                  template_hole 3)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_hole 1)),
               template_hole 0)),
           template_var 0),
         template_var 0))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_arrow_lr_ArrVal_vdomain",
     "\<D>\<^sub>\<circ>
       (M\<alpha>_Rel_arrow_lr ?A ?B ?C\<lparr>ArrVal\<rparr>) =
      (?A \<times>\<^sub>\<circ> ?B) \<times>\<^sub>\<circ> ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2), t_empty)),
         t_empty))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_arrow_rl_ArrVal_vdomain",
     "\<D>\<^sub>\<circ>
       (M\<alpha>_Rel_arrow_rl ?A ?B ?C\<lparr>ArrVal\<rparr>) =
      ?A \<times>\<^sub>\<circ> ?B \<times>\<^sub>\<circ> ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_arrow_lr_components",
     "M\<alpha>_Rel_arrow_lr ?A ?B ?C\<lparr>ArrVal\<rparr> =
      (\<lambda>ab_c\<in>\<^sub>\<circ>(?A \<times>\<^sub>\<circ>
  ?B) \<times>\<^sub>\<circ>
 ?C.
          <vfst (vfst ab_c), vsnd (vfst ab_c), vsnd ab_c>)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 5),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 3, template_var 2), t_empty)),
             t_empty)),
         t_empty))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_arrow_rl_components",
     "M\<alpha>_Rel_arrow_rl ?A ?B ?C\<lparr>ArrVal\<rparr> =
      (\<lambda>a_bc\<in>\<^sub>\<circ>?A \<times>\<^sub>\<circ>
 ?B \<times>\<^sub>\<circ> ?C.
          <<vfst a_bc, vfst (vsnd a_bc)>, vsnd (vsnd a_bc)>)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 5),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2), t_empty)),
         t_empty))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_components",
     "M\<alpha>_Rel ?\<CC>\<lparr>NTMap\<rparr> =
      (\<lambda>abc\<in>\<^sub>\<circ>(?\<CC>^\<^sub>C\<^sub>3)\<lparr>Obj\<rparr>.
          M\<alpha>_Rel_arrow_lr (abc\<lparr>[]\<^sub>\<circ>\<rparr>)
           (abc\<lparr>1\<^sub>\<nat>\<rparr>)
           (abc\<lparr>2\<^sub>\<nat>\<rparr>))",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app (template_hole 11, template_var 0)),
         template_hole 10),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_app (template_hole 8, template_var 0),
                   template_var 0),
                 template_var 0)),
             template_hole 7)),
         t_empty))),
    ("CZH_ECAT_Structure_Example.dagcat_cs_intros",
     "[| dagger_category ?\<alpha> ?\<CC>;
         ?\<AA>' = op_cat (?\<CC>\<lparr>DagCat\<rparr>);
         ?\<BB>' = ?\<CC>\<lparr>DagCat\<rparr> |]
      ==> \<dagger>\<^sub>C ?\<CC> :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 2),
              template_hole 2))),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 0))
           ))),
    ("CZH_ECAT_Structure_Example.dmcat_cs_intros",
     "[| dagger_monoidal_category ?\<alpha> ?\<CC>;
         ?\<AA>' = op_cat (?\<CC>\<lparr>DMcat\<rparr>);
         ?\<BB>' = ?\<CC>\<lparr>DMcat\<rparr> |]
      ==> \<dagger>\<^sub>M\<^sub>C ?\<CC> :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 2),
              template_hole 2))),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_hole 0))
           ))),
    ("CZH_ECAT_Structure_Example.monoidal_categoryD",
     "monoidal_category ?\<alpha> ?\<CC> ==>
      ?\<CC>\<lparr>M\<alpha>\<rparr> : cf_blcomp
   (?\<CC>\<lparr>Mcf\<rparr>) \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o cf_brcomp
              (?\<CC>\<lparr>Mcf\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr>^\<^sub>C\<^sub>3 \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 7, template_var 1),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app (template_hole 5, template_var 0),
                             template_hole 4)),
                         template_app
                          (template_app (template_hole 5, template_var 0),
                           template_hole 4)),
                       template_app
                        (template_app (template_hole 5, template_var 0),
                         template_hole 4))),
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_hole 4)),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_hole 2))),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 2))),
             template_app
              (template_app (template_hole 5, template_var 0),
               template_hole 0))
           ))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_arrow_rl_ArrVal_app'",
     "?x \<in>\<^sub>\<circ> ?A \<times>\<^sub>\<circ>
                             ?B \<times>\<^sub>\<circ> ?C ==>
      M\<alpha>_Rel_arrow_rl ?A ?B
       ?C\<lparr>ArrVal\<rparr>\<lparr>?x\<rparr> =
      <<vfst ?x, vfst (vsnd ?x)>, vsnd (vsnd ?x)>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2), t_empty)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1),
                   template_var 0)),
               template_hole 3)),
           template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 3)),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 3)))),
           template_app
            (template_hole 0,
             template_app (template_hole 0, template_var 3)))))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_arrow_lr_ArrVal_app'",
     "?x \<in>\<^sub>\<circ> (?A \<times>\<^sub>\<circ>
                              ?B) \<times>\<^sub>\<circ>
                             ?C ==>
      M\<alpha>_Rel_arrow_lr ?A ?B
       ?C\<lparr>ArrVal\<rparr>\<lparr>?x\<rparr> =
      <vfst (vfst ?x), vsnd (vfst ?x), vsnd ?x>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 7, template_var 2),
                      t_empty)),
                  t_empty)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1),
                   template_var 0)),
               template_hole 3)),
           template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 1, template_var 3))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 3))),
             template_app (template_hole 0, template_var 3)))))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_NTMap_app'",
     "?x \<in>\<^sub>\<circ> (?\<CC>^\<^sub>C\<^sub>3)\<lparr>Obj\<rparr> ==>
      M\<alpha>_Rel ?\<CC>\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
      M\<alpha>_Rel_arrow_lr (?x\<lparr>[]\<^sub>\<circ>\<rparr>)
       (?x\<lparr>1\<^sub>\<nat>\<rparr>)
       (?x\<lparr>2\<^sub>\<nat>\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_app (template_hole 11, template_var 0),
                        template_var 0),
                      template_var 0)),
                  template_hole 10)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 12,
                 template_app (template_hole 8, template_var 0)),
               template_hole 7)),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 12, template_var 1),
                 template_hole 5)),
             template_app
              (template_app (template_hole 12, template_var 1),
               template_app (template_hole 4, template_hole 3))),
           template_app
            (template_app (template_hole 12, template_var 1),
             template_app
              (template_hole 4,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))))))),
    ("CZH_ECAT_Structure_Example.monoidal_categoryD",
     "monoidal_category ?\<alpha> ?\<CC> ==>
      ?\<CC>\<lparr>Mr\<rparr> : ?\<CC>\<lparr>Mcf\<rparr>\<^bsub>?\<CC>\<lparr>Mcat\<rparr>,?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                                 (-,?\<CC>\<lparr>Me\<rparr>)
                                 \<^sub>C\<^sub>F \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o dghm_id
                                 (?\<CC>\<lparr>Mcat\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 7, template_var 1),
                     template_app
                      (template_app (template_hole 6, template_var 0),
                       template_hole 5)),
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 5)),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 6, template_var 0),
                           template_hole 3)),
                       template_app
                        (template_app (template_hole 6, template_var 0),
                         template_hole 5)),
                     template_app
                      (template_app (template_hole 6, template_var 0),
                       template_hole 5)),
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 2))),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_hole 5))),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_hole 0))
           ))),
    ("CZH_ECAT_Structure_Example.monoidal_categoryD",
     "monoidal_category ?\<alpha> ?\<CC> ==>
      ?\<CC>\<lparr>Ml\<rparr> : ?\<CC>\<lparr>Mcf\<rparr>\<^bsub>?\<CC>\<lparr>Mcat\<rparr>,?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                                 (?\<CC>\<lparr>Me\<rparr>,-)
                                 \<^sub>C\<^sub>F \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o dghm_id
                                 (?\<CC>\<lparr>Mcat\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 7, template_var 1),
                     template_app
                      (template_app (template_hole 6, template_var 0),
                       template_hole 5)),
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 5)),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 6, template_var 0),
                           template_hole 3)),
                       template_app
                        (template_app (template_hole 6, template_var 0),
                         template_hole 5)),
                     template_app
                      (template_app (template_hole 6, template_var 0),
                       template_hole 5)),
                   template_app
                    (template_app (template_hole 6, template_var 0),
                     template_hole 2))),
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_hole 5))),
             template_app
              (template_app (template_hole 6, template_var 0),
               template_hole 0))
           ))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_NTMap_app",
     "[| ?ABC = [?A, ?B, ?C]\<^sub>\<circ>;
         ?ABC
         \<in>\<^sub>\<circ> (?\<CC>^\<^sub>C\<^sub>3)\<lparr>Obj\<rparr> |]
      ==> M\<alpha>_Rel ?\<CC>\<lparr>NTMap\<rparr>\<lparr>?ABC\<rparr> =
          M\<alpha>_Rel_arrow_lr ?A ?B ?C",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_var 3)),
                template_var 2)),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_app (template_hole 4, template_var 0),
                        template_var 0),
                      template_var 0)),
                  template_hole 3)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 2, template_var 0)),
               template_hole 1)),
           template_var 4),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1)))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_arrow_rl_ArrVal_app",
     "[| ?a_bc = <?a, ?b, ?c>;
         ?a_bc
         \<in>\<^sub>\<circ> ?A \<times>\<^sub>\<circ>
                             ?B \<times>\<^sub>\<circ> ?C |]
      ==> M\<alpha>_Rel_arrow_rl ?A ?B
           ?C\<lparr>ArrVal\<rparr>\<lparr>?a_bc\<rparr> =
          <<?a, ?b>, ?c>",
     template_implication
      ([template_equation
         (template_var 6,
          template_app
           (template_app (template_hole 6, template_var 5),
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3))),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 6),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2), t_empty)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1),
                   template_var 0)),
               template_hole 0)),
           template_var 6),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 6, template_var 5),
               template_var 4)),
           template_var 3)))),
    ("CZH_ECAT_Structure_Example.M\<alpha>_Rel_arrow_lr_ArrVal_app",
     "[| ?ab_c = <<?a, ?b>, ?c>;
         ?ab_c
         \<in>\<^sub>\<circ> (?A \<times>\<^sub>\<circ>
                              ?B) \<times>\<^sub>\<circ>
                             ?C |]
      ==> M\<alpha>_Rel_arrow_lr ?A ?B
           ?C\<lparr>ArrVal\<rparr>\<lparr>?ab_c\<rparr> =
          <?a, ?b, ?c>",
     template_implication
      ([template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 6, template_var 5),
                template_var 4)),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 6),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 3, template_var 2),
                      t_empty)),
                  t_empty)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1),
                   template_var 0)),
               template_hole 0)),
           template_var 6),
         template_app
          (template_app (template_hole 6, template_var 5),
           template_app
            (template_app (template_hole 6, template_var 4),
             template_var 3))))),
    ("CZH_ECAT_Structure_Example.dagger_monoidal_categoryD",
     "[| dagger_monoidal_category ?\<alpha> ?\<CC>;
         ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr> |]
      ==> \<dagger>\<^sub>M\<^sub>C
           ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DMl\<rparr>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr>\<rparr> =
          (?\<CC>\<lparr>DMl\<rparr>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 8, template_var 1),
                      template_hole 7)),
                  template_hole 6)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_hole 4)),
               template_hole 3)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_hole 2)),
                 template_hole 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_hole 7)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_hole 2)),
                 template_hole 1)),
             template_var 0))))),
    ("CZH_ECAT_Structure_Example.dagger_monoidal_categoryD",
     "[| dagger_monoidal_category ?\<alpha> ?\<CC>;
         ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr> |]
      ==> \<dagger>\<^sub>M\<^sub>C
           ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DMr\<rparr>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr>\<rparr> =
          (?\<CC>\<lparr>DMr\<rparr>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 8, template_var 1),
                      template_hole 7)),
                  template_hole 6)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   template_hole 4)),
               template_hole 3)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_hole 2)),
                 template_hole 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_hole 7)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_hole 2)),
                 template_hole 1)),
             template_var 0))))),
    ("CZH_ECAT_Structure_Example.dagger_monoidal_categoryD",
     "[| dagger_monoidal_category ?\<alpha> ?\<CC>;
         ?A \<in>\<^sub>\<circ> (?\<CC>\<lparr>DMcat\<rparr>^\<^sub>C\<^sub>3)\<lparr>Obj\<rparr> |]
      ==> \<dagger>\<^sub>M\<^sub>C
           ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DM\<alpha>\<rparr>\<lparr>NTMap\<rparr>\<lparr>?A\<rparr>\<rparr> =
          (?\<CC>\<lparr>DM\<alpha>\<rparr>\<lparr>NTMap\<rparr>\<lparr>?A\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_app
                         (template_hole 8,
                          template_app
                           (template_app (template_hole 9, template_var 1),
                            template_hole 7)),
                        template_app
                         (template_app (template_hole 9, template_var 1),
                          template_hole 7)),
                      template_app
                       (template_app (template_hole 9, template_var 1),
                        template_hole 7))),
                  template_hole 6)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   template_hole 4)),
               template_hole 3)),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_hole 2)),
                 template_hole 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 9, template_var 1),
               template_hole 7)),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_hole 2)),
                 template_hole 1)),
             template_var 0))))),
    ("CZH_ECAT_Structure_Example.dagger_monoidal_categoryD",
     "[| dagger_monoidal_category ?\<alpha> ?\<CC>;
         ?g : ?c \<mapsto>\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> ?d;
         ?f : ?a \<mapsto>\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> ?b |]
      ==> \<dagger>\<^sub>M\<^sub>C
           ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?g \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>DMcf\<rparr>\<^esub>
         ?f\<rparr> =
          \<dagger>\<^sub>M\<^sub>C
           ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?g\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>DMcf\<rparr>\<^esub>
          \<dagger>\<^sub>M\<^sub>C
           ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?f\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 6),
                      template_hole 6)),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 6),
                      template_hole 6)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 7, template_var 6),
                   template_hole 4)),
               template_hole 3)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 7, template_var 6),
                     template_hole 2)),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 3)),
               template_var 0))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 7, template_var 6),
                   template_hole 2)),
               template_hole 3)),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 7, template_var 6),
                           template_hole 4)),
                       template_hole 3)),
                   template_var 3))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app (template_hole 7, template_var 6),
                       template_hole 4)),
                   template_hole 3)),
               template_var 0)))))),
    ("CZH_ECAT_Structure_Example.mcat_eqI",
     "[| monoidal_category ?\<alpha> ?\<AA>;
         monoidal_category ?\<alpha> ?\<BB>;
         ?\<AA>\<lparr>Mcat\<rparr> = ?\<BB>\<lparr>Mcat\<rparr>;
         ?\<AA>\<lparr>Mcf\<rparr> = ?\<BB>\<lparr>Mcf\<rparr>;
         ?\<AA>\<lparr>Me\<rparr> = ?\<BB>\<lparr>Me\<rparr>;
         ?\<AA>\<lparr>M\<alpha>\<rparr> = ?\<BB>\<lparr>M\<alpha>\<rparr>;
         ?\<AA>\<lparr>Ml\<rparr> = ?\<BB>\<lparr>Ml\<rparr>;
         ?\<AA>\<lparr>Mr\<rparr> = ?\<BB>\<lparr>Mr\<rparr> |]
      ==> ?\<AA> = ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_hole 5),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 5)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_hole 4),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 4)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_hole 3),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 3)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_hole 2),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 2)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_hole 1),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 1)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 1),
            template_hole 0),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 0))],
       template_equation (template_var 1, template_var 0))),
    ("CZH_ECAT_Structure_Example.dmcat_eqI",
     "[| dagger_monoidal_category ?\<alpha> ?\<AA>;
         dagger_monoidal_category ?\<alpha> ?\<BB>;
         ?\<AA>\<lparr>DMcat\<rparr> = ?\<BB>\<lparr>DMcat\<rparr>;
         \<dagger>\<^sub>M\<^sub>C ?\<AA> =
         \<dagger>\<^sub>M\<^sub>C ?\<BB>;
         ?\<AA>\<lparr>DMcf\<rparr> = ?\<BB>\<lparr>DMcf\<rparr>;
         ?\<AA>\<lparr>DMe\<rparr> = ?\<BB>\<lparr>DMe\<rparr>;
         ?\<AA>\<lparr>DM\<alpha>\<rparr> =
         ?\<BB>\<lparr>DM\<alpha>\<rparr>;
         ?\<AA>\<lparr>DMl\<rparr> = ?\<BB>\<lparr>DMl\<rparr>;
         ?\<AA>\<lparr>DMr\<rparr> = ?\<BB>\<lparr>DMr\<rparr> |]
      ==> ?\<AA> = ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_hole 6),
          template_app
           (template_app (template_hole 7, template_var 0),
            template_hole 6)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_hole 5),
          template_app
           (template_app (template_hole 7, template_var 0),
            template_hole 5)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_hole 4),
          template_app
           (template_app (template_hole 7, template_var 0),
            template_hole 4)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_hole 3),
          template_app
           (template_app (template_hole 7, template_var 0),
            template_hole 3)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_hole 2),
          template_app
           (template_app (template_hole 7, template_var 0),
            template_hole 2)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_hole 1),
          template_app
           (template_app (template_hole 7, template_var 0),
            template_hole 1)),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 1),
            template_hole 0),
          template_app
           (template_app (template_hole 7, template_var 0),
            template_hole 0))],
       template_equation (template_var 1, template_var 0))),
    ("CZH_ECAT_Structure_Example.dagger_categoryI",
     "[| \<Z> ?\<alpha>; vfsequence ?\<CC>;
         category ?\<alpha> (?\<CC>\<lparr>DagCat\<rparr>);
         \<dagger>\<^sub>C ?\<CC> :
         op_cat
          (?\<CC>\<lparr>DagCat\<rparr>) \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>DagCat\<rparr>;
         vcard ?\<CC> = 2\<^sub>\<nat>;
         !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DagCat\<rparr>\<lparr>Obj\<rparr> ==>
              \<dagger>\<^sub>C
               ?\<CC>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> =
              a;
         \<dagger>\<^sub>C ?\<CC> \<^sub>C\<^sub>F\<circ>
         \<dagger>\<^sub>C ?\<CC> =
         dghm_id (?\<CC>\<lparr>DagCat\<rparr>) |]
      ==> dagger_category ?\<alpha> ?\<CC>",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 1)),
        template_predicate
         (template_app (template_hole 20, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 1),
              template_app
               (template_app (template_hole 18, template_var 0),
                template_hole 17))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 16, template_var 1),
                  template_app
                   (template_hole 15,
                    template_app
                     (template_app (template_hole 18, template_var 0),
                      template_hole 17))),
                template_app
                 (template_app (template_hole 18, template_var 0),
                  template_hole 17)),
              template_app
               (template_app (template_hole 18, template_var 0),
                template_hole 14))
            ),
        template_equation
         (template_app (template_hole 12, template_var 0),
          template_app
           (template_hole 11,
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_hole 8)))),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_equation
         (template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 18, template_var 0),
                template_hole 14)),
            template_app
             (template_app (template_hole 18, template_var 0),
              template_hole 14)),
          template_app
           (template_hole 1,
            template_app
             (template_app (template_hole 18, template_var 0),
              template_hole 17)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CZH_ECAT_Structure_Example.dagger_categoryE",
     "[| dagger_category ?\<alpha> ?\<CC>;
         [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
            category ?\<alpha> (?\<CC>\<lparr>DagCat\<rparr>);
            \<dagger>\<^sub>C ?\<CC> :
            op_cat
             (?\<CC>\<lparr>DagCat\<rparr>) \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>DagCat\<rparr>;
            vcard ?\<CC> = 2\<^sub>\<nat>;
            !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DagCat\<rparr>\<lparr>Obj\<rparr> ==>
                 \<dagger>\<^sub>C
                  ?\<CC>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> =
                 a;
            \<dagger>\<^sub>C ?\<CC> \<^sub>C\<^sub>F\<circ>
            \<dagger>\<^sub>C ?\<CC> =
            dghm_id (?\<CC>\<lparr>DagCat\<rparr>) |]
         ==> ?W |]
      ==> ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (template_app (template_hole 20, template_var 2))],
          template_implication
           ([template_predicate
              (template_app (template_hole 19, template_var 1))],
            template_implication
             ([template_predicate
                (
                   template_app
                    (template_app (template_hole 18, template_var 2),
                     template_app
                      (template_app (template_hole 17, template_var 1),
                       template_hole 16))
                   )],
              template_implication
               ([template_predicate
                  (
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 15, template_var 2),
                           template_app
                            (template_hole 14,
                             template_app
                              (template_app
                                (template_hole 17, template_var 1),
                               template_hole 16))),
                         template_app
                          (template_app (template_hole 17, template_var 1),
                           template_hole 16)),
                       template_app
                        (template_app (template_hole 17, template_var 1),
                         template_hole 13))
                     )],
                template_implication
                 ([template_equation
                    (template_app (template_hole 11, template_var 1),
                     template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8, template_hole 7))))],
                  template_implication
                   ([template_predicate
                      (template_app (template_hole 6, t_empty))],
                    template_implication
                     ([template_equation
                        (template_app
                          (template_app
                            (template_hole 1,
                             template_app
                              (template_app
                                (template_hole 17, template_var 1),
                               template_hole 13)),
                           template_app
                            (template_app
                              (template_hole 17, template_var 1),
                             template_hole 13)),
                         template_app
                          (template_hole 0,
                           template_app
                            (template_app
                              (template_hole 17, template_var 1),
                             template_hole 16)))],
                      template_predicate (template_var 0))))))))],
       template_predicate (template_var 0))),
    ("CZH_ECAT_Structure_Example.dmcat_cs_simps",
     "[| dagger_monoidal_category ?\<alpha> ?\<CC>;
         ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr>;
         ?b \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr> |]
      ==> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>CId\<rparr>\<lparr>?a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>DMcf\<rparr>\<^esub>
          ?\<CC>\<lparr>DMl\<rparr>\<lparr>NTMap\<rparr>\<lparr>?b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>
          ?\<CC>\<lparr>DM\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>?a,
                                  ?\<CC>\<lparr>DMe\<rparr>,
                                  ?b\<rparr>\<^sub>\<bullet> =
          ?\<CC>\<lparr>DMr\<rparr>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>DMcf\<rparr>\<^esub>
          ?\<CC>\<lparr>DMcat\<rparr>\<lparr>CId\<rparr>\<lparr>?b\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 14, template_var 2),
                      template_hole 13)),
                  template_hole 12)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 0),
              template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 14, template_var 2),
                      template_hole 13)),
                  template_hole 12)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 14, template_var 2),
                   template_hole 13)),
               template_hole 10)),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_app (template_hole 14, template_var 2),
                           template_hole 7)),
                       template_hole 6)),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 9, template_hole 8),
                         template_app
                          (template_app
                            (template_hole 14,
                             template_app
                              (template_app
                                (template_hole 14,
                                 template_app
                                  (template_app
                                    (template_hole 14, template_var 2),
                                   template_hole 13)),
                               template_hole 5)),
                           template_var 1))),
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_app
                            (template_hole 14,
                             template_app
                              (template_app
                                (template_hole 14, template_var 2),
                               template_hole 4)),
                           template_hole 3)),
                       template_var 0))))),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app (template_hole 14, template_var 2),
                       template_hole 2)),
                   template_hole 3)),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 9, template_hole 8),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 14, template_var 2),
                       template_hole 1))),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 14, template_var 2),
                   template_hole 7)),
               template_hole 6)),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_app (template_hole 14, template_var 2),
                           template_hole 0)),
                       template_hole 3)),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app (template_hole 14, template_var 2),
                       template_hole 13)),
                   template_hole 5)),
               template_var 0)))))),
    ("CZH_ECAT_Structure_Example.monoidal_categoryD",
     "[| monoidal_category ?\<alpha> ?\<CC>;
         ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
         ?b \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr> |]
      ==> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>?a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
          ?\<CC>\<lparr>Ml\<rparr>\<lparr>NTMap\<rparr>\<lparr>?b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
          ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>?a,
                                 ?\<CC>\<lparr>Me\<rparr>,
                                 ?b\<rparr>\<^sub>\<bullet> =
          ?\<CC>\<lparr>Mr\<rparr>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
          ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>?b\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 14, template_var 2),
                      template_hole 13)),
                  template_hole 12)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 0),
              template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 14, template_var 2),
                      template_hole 13)),
                  template_hole 12)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 14, template_var 2),
                   template_hole 13)),
               template_hole 10)),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_app (template_hole 14, template_var 2),
                           template_hole 7)),
                       template_hole 6)),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 9, template_hole 8),
                         template_app
                          (template_app
                            (template_hole 14,
                             template_app
                              (template_app
                                (template_hole 14,
                                 template_app
                                  (template_app
                                    (template_hole 14, template_var 2),
                                   template_hole 13)),
                               template_hole 5)),
                           template_var 1))),
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_app
                            (template_hole 14,
                             template_app
                              (template_app
                                (template_hole 14, template_var 2),
                               template_hole 4)),
                           template_hole 3)),
                       template_var 0))))),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app (template_hole 14, template_var 2),
                       template_hole 2)),
                   template_hole 3)),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 9, template_hole 8),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 14, template_var 2),
                       template_hole 1))),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 14, template_var 2),
                   template_hole 7)),
               template_hole 6)),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_app (template_hole 14, template_var 2),
                           template_hole 0)),
                       template_hole 3)),
                   template_var 1))),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app (template_hole 14, template_var 2),
                       template_hole 13)),
                   template_hole 5)),
               template_var 0)))))),
    ("CZH_ECAT_Structure_Example.monoidal_categoryD",
     "[| monoidal_category ?\<alpha> ?\<CC>;
         ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
         ?b \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
         ?c \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
         ?d \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr> |]
      ==> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>?a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
          ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>?b,
                                 ?c,
                                 ?d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
          ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>?a,
                                 ?b \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                                 ?c,
                                 ?d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
          (?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>?a,
                                  ?b,
                                  ?c\<rparr>\<^sub>\<bullet> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
           ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>?d\<rparr>) =
          ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>?a,
                                 ?b,
                                 ?c \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                                 ?d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
          ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>?a \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                                 ?b,
                                 ?c, ?d\<rparr>\<^sub>\<bullet>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 3),
              template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 12, template_var 4),
                      template_hole 11)),
                  template_hole 10)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 12, template_var 4),
                      template_hole 11)),
                  template_hole 10)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 12, template_var 4),
                      template_hole 11)),
                  template_hole 10)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 0),
              template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 12, template_var 4),
                      template_hole 11)),
                  template_hole 10)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 12, template_var 4),
                   template_hole 11)),
               template_hole 8)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app
                          (template_app (template_hole 12, template_var 4),
                           template_hole 11)),
                       template_hole 8)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 7, template_hole 6),
                         template_app
                          (template_app
                            (template_hole 12,
                             template_app
                              (template_app
                                (template_hole 12,
                                 template_app
                                  (template_app
                                    (template_hole 12, template_var 4),
                                   template_hole 5)),
                               template_hole 4)),
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_app
                                  (template_hole 7, template_hole 6),
                                 template_app
                                  (template_app
                                    (template_hole 12,
                                     template_app
(template_app
  (template_hole 12,
   template_app
    (template_app (template_hole 12, template_var 4), template_hole 11)),
 template_hole 3)),
                                   template_var 3))),
                             template_app
                              (template_app
                                (template_hole 12,
                                 template_app
                                  (template_app
                                    (template_hole 12,
                                     template_app
(template_app (template_hole 12, template_var 4), template_hole 2)),
                                   template_hole 1)),
                               template_app
                                (template_app
                                  (template_hole 7,
                                   template_app
                                    (template_app
(template_hole 7,
 template_app
  (template_app (template_hole 7, template_hole 6), template_var 2)),
                                     template_var 1)),
                                 template_var 0)))))),
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app
                          (template_app
                            (template_hole 12,
                             template_app
                              (template_app
                                (template_hole 12, template_var 4),
                               template_hole 2)),
                           template_hole 1)),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_app
                                  (template_hole 7, template_hole 6),
                                 template_var 3)),
                             template_app
                              (template_app
                                (template_hole 12,
                                 template_app
                                  (template_app
                                    (template_hole 12,
                                     template_app
(template_app (template_hole 12, template_var 4), template_hole 5)),
                                   template_hole 0)),
                               template_app
                                (template_app
                                  (template_hole 7,
                                   template_app
                                    (template_app
(template_hole 7, template_hole 6),
                                     template_var 2)),
                                 template_var 1)))),
                         template_var 0)))))),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app (template_hole 12, template_var 4),
                       template_hole 5)),
                   template_hole 4)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app
                          (template_app
                            (template_hole 12,
                             template_app
                              (template_app
                                (template_hole 12, template_var 4),
                               template_hole 2)),
                           template_hole 1)),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_app
                                  (template_hole 7, template_hole 6),
                                 template_var 3)),
                             template_var 2)),
                         template_var 1)))),
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app
                          (template_app (template_hole 12, template_var 4),
                           template_hole 11)),
                       template_hole 3)),
                   template_var 0))))),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 12, template_var 4),
                   template_hole 11)),
               template_hole 8)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app
                          (template_app (template_hole 12, template_var 4),
                           template_hole 2)),
                       template_hole 1)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 7, template_hole 6),
                             template_var 3)),
                         template_var 2)),
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app
                          (template_app
                            (template_hole 12,
                             template_app
                              (template_app
                                (template_hole 12, template_var 4),
                               template_hole 5)),
                           template_hole 0)),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 7, template_hole 6),
                             template_var 1)),
                         template_var 0)))))),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app (template_hole 12, template_var 4),
                       template_hole 2)),
                   template_hole 1)),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 7, template_hole 6),
                         template_app
                          (template_app
                            (template_hole 12,
                             template_app
                              (template_app
                                (template_hole 12,
                                 template_app
                                  (template_app
                                    (template_hole 12, template_var 4),
                                   template_hole 5)),
                               template_hole 0)),
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_app
                                  (template_hole 7, template_hole 6),
                                 template_var 3)),
                             template_var 2)))),
                     template_var 1)),
                 template_var 0))))))),
    ("CZH_ECAT_Structure_Example.dagger_monoidal_categoryI",
     "[| \<Z> ?\<alpha>; vfsequence ?\<CC>; vcard ?\<CC> = 7\<^sub>\<nat>;
         dagger_category ?\<alpha> (dmcat_dagcat ?\<CC>);
         monoidal_category ?\<alpha> (dmcat_mcat ?\<CC>);
         !!c d g a b f.
            [| g : c \<mapsto>\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> d;
               f : a \<mapsto>\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> b |]
            ==> \<dagger>\<^sub>M\<^sub>C
                 ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>g \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>DMcf\<rparr>\<^esub>
               f\<rparr> =
                \<dagger>\<^sub>M\<^sub>C
                 ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>g\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>DMcf\<rparr>\<^esub>
                \<dagger>\<^sub>M\<^sub>C
                 ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr>;
         !!A. A \<in>\<^sub>\<circ> (?\<CC>\<lparr>DMcat\<rparr>^\<^sub>C\<^sub>3)\<lparr>Obj\<rparr> ==>
              \<dagger>\<^sub>M\<^sub>C
               ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DM\<alpha>\<rparr>\<lparr>NTMap\<rparr>\<lparr>A\<rparr>\<rparr> =
              (?\<CC>\<lparr>DM\<alpha>\<rparr>\<lparr>NTMap\<rparr>\<lparr>A\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>;
         !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr> ==>
              \<dagger>\<^sub>M\<^sub>C
               ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DMl\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>\<rparr> =
              (?\<CC>\<lparr>DMl\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>;
         !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr> ==>
              \<dagger>\<^sub>M\<^sub>C
               ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DMr\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>\<rparr> =
              (?\<CC>\<lparr>DMr\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> |]
      ==> dagger_monoidal_category ?\<alpha> ?\<CC>",
     template_implication
      ([template_predicate
         (template_app (template_hole 30, template_var 1)),
        template_predicate
         (template_app (template_hole 29, template_var 0)),
        template_equation
         (template_app (template_hole 27, template_var 0),
          template_app
           (template_hole 26,
            template_app
             (template_hole 25,
              template_app
               (template_hole 24,
                template_app (template_hole 24, template_hole 23))))),
        template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 1),
              template_app (template_hole 21, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 1),
              template_app (template_hole 19, template_var 0))
            ),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty)),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CZH_ECAT_Structure_Example.dagger_monoidal_categoryE",
     "[| dagger_monoidal_category ?\<alpha> ?\<CC>;
         [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
            vcard ?\<CC> = 7\<^sub>\<nat>;
            dagger_category ?\<alpha> (dmcat_dagcat ?\<CC>);
            monoidal_category ?\<alpha> (dmcat_mcat ?\<CC>);
            !!c d g a b f.
               [| g : c \<mapsto>\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> d;
                  f : a \<mapsto>\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> b |]
               ==> \<dagger>\<^sub>M\<^sub>C
                    ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>g \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>DMcf\<rparr>\<^esub>
                  f\<rparr> =
                   \<dagger>\<^sub>M\<^sub>C
                    ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>g\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>DMcf\<rparr>\<^esub>
                   \<dagger>\<^sub>M\<^sub>C
                    ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr>;
            !!A. A \<in>\<^sub>\<circ> (?\<CC>\<lparr>DMcat\<rparr>^\<^sub>C\<^sub>3)\<lparr>Obj\<rparr> ==>
                 \<dagger>\<^sub>M\<^sub>C
                  ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DM\<alpha>\<rparr>\<lparr>NTMap\<rparr>\<lparr>A\<rparr>\<rparr> =
                 (?\<CC>\<lparr>DM\<alpha>\<rparr>\<lparr>NTMap\<rparr>\<lparr>A\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>;
            !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr> ==>
                 \<dagger>\<^sub>M\<^sub>C
                  ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DMl\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>\<rparr> =
                 (?\<CC>\<lparr>DMl\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub>;
            !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>DMcat\<rparr>\<lparr>Obj\<rparr> ==>
                 \<dagger>\<^sub>M\<^sub>C
                  ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?\<CC>\<lparr>DMr\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>\<rparr> =
                 (?\<CC>\<lparr>DMr\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr>)\<inverse>\<^sub>C\<^bsub>?\<CC>\<lparr>DMcat\<rparr>\<^esub> |]
         ==> ?W |]
      ==> ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 30, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (template_app (template_hole 29, template_var 2))],
          template_implication
           ([template_predicate
              (template_app (template_hole 28, template_var 1))],
            template_implication
             ([template_equation
                (template_app (template_hole 26, template_var 1),
                 template_app
                  (template_hole 25,
                   template_app
                    (template_hole 24,
                     template_app
                      (template_hole 23,
                       template_app
                        (template_hole 23, template_hole 22)))))],
              template_implication
               ([template_predicate
                  (
                     template_app
                      (template_app (template_hole 21, template_var 2),
                       template_app (template_hole 20, template_var 1))
                     )],
                template_implication
                 ([template_predicate
                    (
                       template_app
                        (template_app (template_hole 19, template_var 2),
                         template_app (template_hole 18, template_var 1))
                       )],
                  template_implication
                   ([template_predicate
                      (template_app (template_hole 17, t_empty))],
                    template_implication
                     ([template_predicate
                        (template_app (template_hole 17, t_empty))],
                      template_implication
                       ([template_predicate
                          (template_app (template_hole 17, t_empty))],
                        template_implication
                         ([template_predicate
                            (template_app (template_hole 17, t_empty))],
                          template_predicate (template_var 0))))))))))],
       template_predicate (template_var 0))),
    ("CZH_ECAT_Structure_Example.monoidal_categoryI",
     "[| \<Z> ?\<alpha>; vfsequence ?\<CC>;
         category ?\<alpha> (?\<CC>\<lparr>Mcat\<rparr>);
         ?\<CC>\<lparr>Mcf\<rparr> :
         ?\<CC>\<lparr>Mcat\<rparr> \<times>\<^sub>C
         ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
         ?\<CC>\<lparr>M\<alpha>\<rparr> : cf_blcomp
      (?\<CC>\<lparr>Mcf\<rparr>) \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o cf_brcomp
                 (?\<CC>\<lparr>Mcf\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr>^\<^sub>C\<^sub>3 \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
         ?\<CC>\<lparr>Ml\<rparr> : ?\<CC>\<lparr>Mcf\<rparr>\<^bsub>?\<CC>\<lparr>Mcat\<rparr>,?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                                    (?\<CC>\<lparr>Me\<rparr>,-)
                                    \<^sub>C\<^sub>F \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o dghm_id
                                    (?\<CC>\<lparr>Mcat\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
         ?\<CC>\<lparr>Mr\<rparr> : ?\<CC>\<lparr>Mcf\<rparr>\<^bsub>?\<CC>\<lparr>Mcat\<rparr>,?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                                    (-,?\<CC>\<lparr>Me\<rparr>)
                                    \<^sub>C\<^sub>F \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o dghm_id
                                    (?\<CC>\<lparr>Mcat\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
         vcard ?\<CC> = 6\<^sub>\<nat>;
         ?\<CC>\<lparr>Me\<rparr>
         \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
         !!a b c d.
            [| a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
               b \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
               c \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
               d \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr> |]
            ==> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>b,
 c, d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
 b \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
 c,
 d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                (?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
  b, c\<rparr>\<^sub>\<bullet> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                 ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>d\<rparr>) =
                ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
 b, c \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
    d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
 b,
 c, d\<rparr>\<^sub>\<bullet>;
         !!a b.
            [| a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
               b \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr> |]
            ==> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                ?\<CC>\<lparr>Ml\<rparr>\<lparr>NTMap\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
 ?\<CC>\<lparr>Me\<rparr>, b\<rparr>\<^sub>\<bullet> =
                ?\<CC>\<lparr>Mr\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>b\<rparr> |]
      ==> monoidal_category ?\<alpha> ?\<CC>",
     template_implication
      ([template_predicate
         (template_app (template_hole 37, template_var 1)),
        template_predicate
         (template_app (template_hole 36, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 35, template_var 1),
              template_app
               (template_app (template_hole 34, template_var 0),
                template_hole 33))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 32, template_var 1),
                  template_app
                   (template_app
                     (template_hole 31,
                      template_app
                       (template_app (template_hole 34, template_var 0),
                        template_hole 33)),
                    template_app
                     (template_app (template_hole 34, template_var 0),
                      template_hole 33))),
                template_app
                 (template_app (template_hole 34, template_var 0),
                  template_hole 33)),
              template_app
               (template_app (template_hole 34, template_var 0),
                template_hole 30))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 29, template_var 1),
                      template_app
                       (template_app
                         (template_app
                           (template_hole 28,
                            template_app
                             (template_app
                               (template_hole 34, template_var 0),
                              template_hole 33)),
                          template_app
                           (template_app (template_hole 34, template_var 0),
                            template_hole 33)),
                        template_app
                         (template_app (template_hole 34, template_var 0),
                          template_hole 33))),
                    template_app
                     (template_app (template_hole 34, template_var 0),
                      template_hole 33)),
                  template_app
                   (template_hole 27,
                    template_app
                     (template_app (template_hole 34, template_var 0),
                      template_hole 30))),
                template_app
                 (template_hole 26,
                  template_app
                   (template_app (template_hole 34, template_var 0),
                    template_hole 30))),
              template_app
               (template_app (template_hole 34, template_var 0),
                template_hole 25))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 29, template_var 1),
                      template_app
                       (template_app (template_hole 34, template_var 0),
                        template_hole 33)),
                    template_app
                     (template_app (template_hole 34, template_var 0),
                      template_hole 33)),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_hole 24,
                          template_app
                           (template_app (template_hole 34, template_var 0),
                            template_hole 30)),
                        template_app
                         (template_app (template_hole 34, template_var 0),
                          template_hole 33)),
                      template_app
                       (template_app (template_hole 34, template_var 0),
                        template_hole 33)),
                    template_app
                     (template_app (template_hole 34, template_var 0),
                      template_hole 23))),
                template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 34, template_var 0),
                    template_hole 33))),
              template_app
               (template_app (template_hole 34, template_var 0),
                template_hole 21))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 29, template_var 1),
                      template_app
                       (template_app (template_hole 34, template_var 0),
                        template_hole 33)),
                    template_app
                     (template_app (template_hole 34, template_var 0),
                      template_hole 33)),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_hole 20,
                          template_app
                           (template_app (template_hole 34, template_var 0),
                            template_hole 30)),
                        template_app
                         (template_app (template_hole 34, template_var 0),
                          template_hole 33)),
                      template_app
                       (template_app (template_hole 34, template_var 0),
                        template_hole 33)),
                    template_app
                     (template_app (template_hole 34, template_var 0),
                      template_hole 23))),
                template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 34, template_var 0),
                    template_hole 33))),
              template_app
               (template_app (template_hole 34, template_var 0),
                template_hole 19))
            ),
        template_equation
         (template_app (template_hole 17, template_var 0),
          template_app
           (template_hole 16,
            template_app
             (template_hole 15,
              template_app
               (template_hole 14,
                template_app (template_hole 13, template_hole 12))))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 34, template_var 0),
                  template_hole 23)),
              template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 34,
                    template_app
                     (template_app (template_hole 34, template_var 0),
                      template_hole 33)),
                  template_hole 9)))
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("CZH_ECAT_Structure_Example.monoidal_categoryE",
     "[| monoidal_category ?\<alpha> ?\<CC>;
         [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
            category ?\<alpha> (?\<CC>\<lparr>Mcat\<rparr>);
            ?\<CC>\<lparr>Mcf\<rparr> :
            ?\<CC>\<lparr>Mcat\<rparr> \<times>\<^sub>C
            ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
            ?\<CC>\<lparr>M\<alpha>\<rparr> : cf_blcomp
         (?\<CC>\<lparr>Mcf\<rparr>) \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o cf_brcomp
                    (?\<CC>\<lparr>Mcf\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr>^\<^sub>C\<^sub>3 \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
            ?\<CC>\<lparr>Ml\<rparr> : ?\<CC>\<lparr>Mcf\<rparr>\<^bsub>?\<CC>\<lparr>Mcat\<rparr>,?\<CC>\<lparr>Mcat\<rparr>\<^esub>
 (?\<CC>\<lparr>Me\<rparr>,-)
 \<^sub>C\<^sub>F \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o dghm_id
 (?\<CC>\<lparr>Mcat\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
            ?\<CC>\<lparr>Mr\<rparr> : ?\<CC>\<lparr>Mcf\<rparr>\<^bsub>?\<CC>\<lparr>Mcat\<rparr>,?\<CC>\<lparr>Mcat\<rparr>\<^esub>
 (-,?\<CC>\<lparr>Me\<rparr>)
 \<^sub>C\<^sub>F \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o dghm_id
 (?\<CC>\<lparr>Mcat\<rparr>) : ?\<CC>\<lparr>Mcat\<rparr> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>\<lparr>Mcat\<rparr>;
            vcard ?\<CC> = 6\<^sub>\<nat>;
            ?\<CC>\<lparr>Me\<rparr>
            \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
            !!a b c d.
               [| a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
                  b \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
                  c \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
                  d \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr> |]
               ==> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                   ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>b,
    c, d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                   ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
    b \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
    c,
    d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                   (?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
     b, c\<rparr>\<^sub>\<bullet> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                    ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>d\<rparr>) =
                   ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
    b, c \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
       d\<rparr>\<^sub>\<bullet> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                   ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>O\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
    b,
    c, d\<rparr>\<^sub>\<bullet>;
            !!a b.
               [| a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr>;
                  b \<in>\<^sub>\<circ> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>Obj\<rparr> |]
               ==> ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                   ?\<CC>\<lparr>Ml\<rparr>\<lparr>NTMap\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<lparr>Mcat\<rparr>\<^esub>
                   ?\<CC>\<lparr>M\<alpha>\<rparr>\<lparr>NTMap\<rparr> \<lparr>a,
    ?\<CC>\<lparr>Me\<rparr>, b\<rparr>\<^sub>\<bullet> =
                   ?\<CC>\<lparr>Mr\<rparr>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> \<otimes>\<^sub>H\<^sub>M\<^sub>.\<^sub>A\<^bsub>?\<CC>\<lparr>Mcf\<rparr>\<^esub>
                   ?\<CC>\<lparr>Mcat\<rparr>\<lparr>CId\<rparr>\<lparr>b\<rparr> |]
         ==> ?W |]
      ==> ?W",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 37, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (template_app (template_hole 36, template_var 2))],
          template_implication
           ([template_predicate
              (template_app (template_hole 35, template_var 1))],
            template_implication
             ([template_predicate
                (
                   template_app
                    (template_app (template_hole 34, template_var 2),
                     template_app
                      (template_app (template_hole 33, template_var 1),
                       template_hole 32))
                   )],
              template_implication
               ([template_predicate
                  (
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 31, template_var 2),
                           template_app
                            (template_app
                              (template_hole 30,
                               template_app
                                (template_app
                                  (template_hole 33, template_var 1),
                                 template_hole 32)),
                             template_app
                              (template_app
                                (template_hole 33, template_var 1),
                               template_hole 32))),
                         template_app
                          (template_app (template_hole 33, template_var 1),
                           template_hole 32)),
                       template_app
                        (template_app (template_hole 33, template_var 1),
                         template_hole 29))
                     )],
                template_implication
                 ([template_predicate
                    (
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_hole 28, template_var 2),
                                 template_app
                                  (template_app
                                    (template_app
(template_hole 27,
 template_app
  (template_app (template_hole 33, template_var 1), template_hole 32)),
                                     template_app
(template_app (template_hole 33, template_var 1), template_hole 32)),
                                   template_app
                                    (template_app
(template_hole 33, template_var 1),
                                     template_hole 32))),
                               template_app
                                (template_app
                                  (template_hole 33, template_var 1),
                                 template_hole 32)),
                             template_app
                              (template_hole 26,
                               template_app
                                (template_app
                                  (template_hole 33, template_var 1),
                                 template_hole 29))),
                           template_app
                            (template_hole 25,
                             template_app
                              (template_app
                                (template_hole 33, template_var 1),
                               template_hole 29))),
                         template_app
                          (template_app (template_hole 33, template_var 1),
                           template_hole 24))
                       )],
                  template_implication
                   ([template_predicate
                      (
                         template_app
                          (template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_hole 28, template_var 2),
                                   template_app
                                    (template_app
(template_hole 33, template_var 1),
                                     template_hole 32)),
                                 template_app
                                  (template_app
                                    (template_hole 33, template_var 1),
                                   template_hole 32)),
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 23,
 template_app
  (template_app (template_hole 33, template_var 1), template_hole 29)),
                                     template_app
(template_app (template_hole 33, template_var 1), template_hole 32)),
                                   template_app
                                    (template_app
(template_hole 33, template_var 1),
                                     template_hole 32)),
                                 template_app
                                  (template_app
                                    (template_hole 33, template_var 1),
                                   template_hole 22))),
                             template_app
                              (template_hole 21,
                               template_app
                                (template_app
                                  (template_hole 33, template_var 1),
                                 template_hole 32))),
                           template_app
                            (template_app
                              (template_hole 33, template_var 1),
                             template_hole 20))
                         )],
                    template_implication
                     ([template_predicate
                        (
                           template_app
                            (template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_hole 28, template_var 2),
                                     template_app
(template_app (template_hole 33, template_var 1), template_hole 32)),
                                   template_app
                                    (template_app
(template_hole 33, template_var 1),
                                     template_hole 32)),
                                 template_app
                                  (template_app
                                    (template_app
(template_app
  (template_hole 19,
   template_app
    (template_app (template_hole 33, template_var 1), template_hole 29)),
 template_app
  (template_app (template_hole 33, template_var 1), template_hole 32)),
                                     template_app
(template_app (template_hole 33, template_var 1), template_hole 32)),
                                   template_app
                                    (template_app
(template_hole 33, template_var 1),
                                     template_hole 22))),
                               template_app
                                (template_hole 21,
                                 template_app
                                  (template_app
                                    (template_hole 33, template_var 1),
                                   template_hole 32))),
                             template_app
                              (template_app
                                (template_hole 33, template_var 1),
                               template_hole 18))
                           )],
                      template_implication
                       ([template_equation
                          (template_app (template_hole 16, template_var 1),
                           template_app
                            (template_hole 15,
                             template_app
                              (template_hole 14,
                               template_app
                                (template_hole 13,
                                 template_app
                                  (template_hole 12, template_hole 11)))))],
                        template_implication
                         ([template_predicate
                            (
                               template_app
                                (template_app
                                  (template_hole 10,
                                   template_app
                                    (template_app
(template_hole 33, template_var 1),
                                     template_hole 22)),
                                 template_app
                                  (template_hole 9,
                                   template_app
                                    (template_app
(template_hole 33,
 template_app
  (template_app (template_hole 33, template_var 1), template_hole 32)),
                                     template_hole 8)))
                               )],
                          template_implication
                           ([template_predicate
                              (template_app (template_hole 7, t_empty))],
                            template_implication
                             ([template_predicate
                                (template_app (template_hole 7, t_empty))],
                              template_predicate
                               (template_var 0))))))))))))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.CZH_ECAT_Structure_ExampleMoreTemplates"
### 0.660s elapsed time, 0.945s cpu time, 0.192s GC time
val it = (): unit
