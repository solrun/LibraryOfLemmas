Loading theory "CZH_Foundations.CZH_Sets_MIF" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction")
Loading theory "CZH_Foundations.CZH_Utilities" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction")
Loading theory "Conditional_Simplification.CS_Tools" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "Conditional_Simplification.IHOL_CS")
Loading theory "HOL-Eisbach.Eisbach" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction")
signature PARSE_TOOLS =
  sig
    val is_real_val: ('a, 'b) parse_val -> bool
    val name_term: (term, string) parse_val parser
    val parse_term_val: 'a parser -> (term, 'a) parse_val parser
    val parse_thm_val: 'a parser -> (thm, 'a) parse_val parser
    datatype ('a, 'b) parse_val
    = Parse_Val of 'b * ('a -> unit) | Real_Val of 'a
    val parse_val_cases:
       ('a -> 'b) -> ('b, 'a) parse_val -> 'b * ('b -> unit)
    val the_parse_fun: ('a, 'b) parse_val -> 'a -> unit
    val the_parse_val: ('a, 'b) parse_val -> 'b
    val the_real_val: ('a, 'b) parse_val -> 'a
  end
structure Parse_Tools: PARSE_TOOLS
signature TACTICAL =
  sig
    val ALLGOALS: (int -> tactic) -> tactic
    val APPEND: tactic * tactic -> tactic
    val APPEND': ('a -> tactic) * ('a -> tactic) -> 'a -> tactic
    val ASSERT_SUBGOAL: (int -> tactic) -> int -> tactic
    val CHANGED: tactic -> tactic
    val CHANGED_GOAL: (int -> tactic) -> int -> tactic
    val CHANGED_PROP: tactic -> tactic
    val COND: (thm -> bool) -> tactic -> tactic -> tactic
    val CONVERSION: conv -> int -> tactic
    val CSUBGOAL: (cterm * int -> tactic) -> int -> tactic
    val DETERM: tactic -> tactic
    val EVERY: tactic list -> tactic
    val EVERY': ('a -> tactic) list -> 'a -> tactic
    val EVERY1: (int -> tactic) list -> tactic
    val FILTER: (thm -> bool) -> tactic -> tactic
    val FIRST: tactic list -> tactic
    val FIRST': ('a -> tactic) list -> 'a -> tactic
    val FIRST1: (int -> tactic) list -> tactic
    val FIRSTGOAL: (int -> tactic) -> tactic
    val FIRST_APPEND': ('a -> tactic) list -> 'a -> tactic
    val HEADGOAL: (int -> tactic) -> tactic
    val ORELSE: tactic * tactic -> tactic
    val ORELSE': ('a -> tactic) * ('a -> tactic) -> 'a -> tactic
    val PRIMITIVE: (thm -> thm) -> tactic
    val PRIMSEQ: (thm -> thm Seq.seq) -> tactic
    val RANGE: (int -> tactic) list -> int -> tactic
    val REPEAT: tactic -> tactic
    val REPEAT1: tactic -> tactic
    val REPEAT_ALL_NEW: (int -> tactic) -> int -> tactic
    val REPEAT_DETERM: tactic -> tactic
    val REPEAT_DETERM1: tactic -> tactic
    val REPEAT_DETERM_FIRST: (int -> tactic) -> tactic
    val REPEAT_DETERM_N: int -> tactic -> tactic
    val REPEAT_DETERM_SOME: (int -> tactic) -> tactic
    val REPEAT_FIRST: (int -> tactic) -> tactic
    val REPEAT_SOME: (int -> tactic) -> tactic
    val SINGLE: tactic -> thm -> thm option
    val SOLVED': (int -> tactic) -> int -> tactic
    val SOMEGOAL: (int -> tactic) -> tactic
    val SUBGOAL: (term * int -> tactic) -> int -> tactic
    val THEN: tactic * tactic -> tactic
    val THEN': ('a -> tactic) * ('a -> tactic) -> 'a -> tactic
    val THEN_ALL_NEW: (int -> tactic) * (int -> tactic) -> int -> tactic
    val THEN_ELSE: tactic * (tactic * tactic) -> tactic
    val TRY: tactic -> tactic
    val TRYALL: (int -> tactic) -> tactic
    val all_tac: tactic
    val no_tac: tactic
    val print_tac: Proof.context -> string -> tactic
    type tactic = thm -> thm Seq.seq
  end
structure Tactical: TACTICAL
type tactic = thm -> thm Seq.seq
val FILTER = fn: (thm -> bool) -> tactic -> tactic
val REPEAT1 = fn: tactic -> tactic
val TRYALL = fn: (int -> tactic) -> tactic
val THEN = fn: tactic * tactic -> tactic
val COND = fn: (thm -> bool) -> tactic -> tactic -> tactic
val REPEAT = fn: tactic -> tactic
val ASSERT_SUBGOAL = fn: (int -> tactic) -> int -> tactic
val REPEAT_SOME = fn: (int -> tactic) -> tactic
val ORELSE' = fn: ('a -> tactic) * ('a -> tactic) -> 'a -> tactic
val print_tac = fn: Proof.context -> string -> tactic
val REPEAT_DETERM1 = fn: tactic -> tactic
val CONVERSION = fn: conv -> int -> tactic
val EVERY = fn: tactic list -> tactic
val ORELSE = fn: tactic * tactic -> tactic
val FIRST_APPEND' = fn: ('a -> tactic) list -> 'a -> tactic
val FIRST = fn: tactic list -> tactic
val SOMEGOAL = fn: (int -> tactic) -> tactic
val REPEAT_FIRST = fn: (int -> tactic) -> tactic
val APPEND' = fn: ('a -> tactic) * ('a -> tactic) -> 'a -> tactic
val SINGLE = fn: tactic -> thm -> thm option
val THEN_ELSE = fn: tactic * (tactic * tactic) -> tactic
val no_tac = fn: tactic
val ALLGOALS = fn: (int -> tactic) -> tactic
val THEN' = fn: ('a -> tactic) * ('a -> tactic) -> 'a -> tactic
val SUBGOAL = fn: (term * int -> tactic) -> int -> tactic
val REPEAT_DETERM = fn: tactic -> tactic
val CSUBGOAL = fn: (cterm * int -> tactic) -> int -> tactic
val APPEND = fn: tactic * tactic -> tactic
val PRIMITIVE = fn: (thm -> thm) -> tactic
val THEN_ALL_NEW = fn: (int -> tactic) * (int -> tactic) -> int -> tactic
val REPEAT_ALL_NEW = fn: (int -> tactic) -> int -> tactic
val EVERY1 = fn: (int -> tactic) list -> tactic
val FIRSTGOAL = fn: (int -> tactic) -> tactic
val RANGE = fn: (int -> tactic) list -> int -> tactic
val all_tac = fn: tactic
val FIRST1 = fn: (int -> tactic) list -> tactic
val REPEAT_DETERM_N = fn: int -> tactic -> tactic
val PRIMSEQ = fn: (thm -> thm Seq.seq) -> tactic
val CHANGED_GOAL = fn: (int -> tactic) -> int -> tactic
val TRY = fn: tactic -> tactic
val EVERY' = fn: ('a -> tactic) list -> 'a -> tactic
val HEADGOAL = fn: (int -> tactic) -> tactic
val FIRST' = fn: ('a -> tactic) list -> 'a -> tactic
val CHANGED_PROP = fn: tactic -> tactic
val REPEAT_DETERM_SOME = fn: (int -> tactic) -> tactic
val REPEAT_DETERM_FIRST = fn: (int -> tactic) -> tactic
val SOLVED' = fn: (int -> tactic) -> int -> tactic
val DETERM = fn: tactic -> tactic
val CHANGED = fn: tactic -> tactic
signature CS_STATS = sig val basic_stats: real list -> real list end
structure CS_Stats: CS_STATS
### theory "CZH_Foundations.CZH_Sets_MIF"
### 0.033s elapsed time, 0.127s cpu time, 0.000s GC time
Loading theory "HOL-Cardinals.Fun_More" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
### theory "Conditional_Simplification.CS_Tools"
### 0.037s elapsed time, 0.135s cpu time, 0.000s GC time
Loading theory "Conditional_Simplification.IHOL_CS" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction")
### theory "CZH_Foundations.CZH_Utilities"
### 0.045s elapsed time, 0.158s cpu time, 0.000s GC time
Loading theory "HOL-Cardinals.Order_Relation_More" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation" via "HOL-Cardinals.Wellfounded_More")
signature METHOD_CLOSURE =
  sig
    val apply_method:
       Proof.context ->
         string ->
           term list ->
             thm list list ->
               (Proof.context -> Method.method) list ->
                 Proof.context -> thm list -> context_tactic
    val method:
       binding ->
         (binding * typ option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
    val method_cmd:
       binding ->
         (binding * string option * mixfix) list ->
           binding list ->
             binding list ->
               binding list ->
                 Token.src -> local_theory -> string * local_theory
  end
structure Method_Closure: METHOD_CLOSURE
signature CS_TIMEIT =
  sig
    val TIMEIT: int -> (thm -> thm Seq.seq) -> tactic
    val mtimeit: int -> Method.text -> Proof.context -> Method.method
    val timing_report: Timing.timing list -> unit
    val timing_stats: Timing.timing list -> Timing.timing list
  end
structure CS_TimeIt: CS_TIMEIT
### theory "HOL-Cardinals.Fun_More"
### 0.080s elapsed time, 0.288s cpu time, 0.033s GC time
Loading theory "HOL-Cardinals.Order_Union" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
signature CS_UM =
  sig
    val match_inst:
       ((thm -> term) ->
          (thm -> bool) ->
            Proof.context -> thm -> term -> Envir.env list -> thm list)
         ->
         (thm -> term) ->
           (thm -> bool) -> Proof.context -> thm -> term -> thm list
    val match_inst_list:
       (thm -> term) ->
         (thm -> bool) ->
           Proof.context -> thm -> term -> Envir.env list -> thm list
    val match_inst_rec:
       (thm -> term) ->
         (thm -> bool) ->
           Proof.context -> thm -> term -> Envir.env list -> thm list
  end
structure CS_UM: CS_UM
structure Eisbach_Rule_Insts: sig end
### theory "HOL-Cardinals.Order_Union"
### 0.134s elapsed time, 0.522s cpu time, 0.096s GC time
Loading theory "HOL-Cardinals.Wellorder_Extension" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals")
signature CS_COND_SIMP =
  sig
    val concl_simp_of_simp: thm -> thm
    val cs_concl:
       Proof.context ->
         int -> bool -> match -> ist -> is_thm list -> Method.method
    val cs_concl_step:
       Proof.context -> bool -> match -> thm list -> Method.method
    val cs_concl_step_tac:
       Proof.context -> bool -> match -> thm list -> int -> tactic
    val cs_concl_tac:
       Proof.context -> bool -> match -> ist -> is_thm list -> int -> tactic
    val cs_intro_search_tac:
       Proof.context -> bool -> thm list -> int -> tactic
    val cs_intro_step_tac:
       Proof.context -> bool -> thm list -> int -> tactic
    val cs_prems:
       Proof.context ->
         int -> bool -> match -> ist -> is_thm list -> Method.method
    val cs_prems_atom_step:
       Proof.context -> match -> thm list -> Method.method
    val cs_prems_atom_step_tac:
       Proof.context -> match -> thm list -> int -> tactic
    val cs_prems_step:
       Proof.context -> bool -> match -> ist -> is_thm list -> Method.method
    val cs_prems_step_tac:
       Proof.context ->
         bool ->
           match ->
             ist -> thm list -> is_thm list -> int -> thm -> thm Seq.seq
    val cs_prems_tac:
       Proof.context ->
         bool -> match -> ist -> thm list -> is_thm list -> tactic
    datatype is_thm = cs_intro of thm list | cs_simp of thm list
    datatype ist = ist_compound | ist_simple
    datatype match = mdefault | mfull
    val prems_simp_of_simp: thm -> thm
    val remdups_tac: Proof.context -> int -> tactic
  end
structure CS_Cond_Simp: CS_COND_SIMP
### theory "Conditional_Simplification.IHOL_CS"
### 0.228s elapsed time, 0.857s cpu time, 0.130s GC time
Loading theory "HOL-Library.FuncSet" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Equipollence")
### theory "HOL-Cardinals.Order_Relation_More"
### 0.223s elapsed time, 0.862s cpu time, 0.130s GC time
Loading theory "HOL-Cardinals.Wellfounded_More" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding" via "HOL-Cardinals.Wellorder_Relation")
### theory "HOL-Cardinals.Wellfounded_More"
### 0.032s elapsed time, 0.131s cpu time, 0.000s GC time
Loading theory "HOL-Cardinals.Wellorder_Relation" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions" via "HOL-Cardinals.Wellorder_Embedding")
### theory "HOL-Cardinals.Wellorder_Extension"
### 0.066s elapsed time, 0.258s cpu time, 0.000s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### ML warning (line 170 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 187 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
### ML warning (line 309 of "~~/src/HOL/Eisbach/match_method.ML"):
### Pattern is not exhaustive.
signature MATCH_METHOD =
  sig
    val focus_params: Proof.context -> term list
    val focus_schematics: Proof.context -> Envir.tenv
  end
structure Match_Method: MATCH_METHOD
val method_evaluate = fn: Method.text -> Proof.context -> thm list -> tactic
### theory "HOL-Library.Function_Algebras"
### 0.131s elapsed time, 0.514s cpu time, 0.080s GC time
### theory "HOL-Eisbach.Eisbach"
### 0.457s elapsed time, 1.756s cpu time, 0.210s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Countable_Set")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
### theory "HOL-Cardinals.Wellorder_Relation"
### 0.159s elapsed time, 0.640s cpu time, 0.080s GC time
Loading theory "HOL-Cardinals.Wellorder_Embedding" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic" via "HOL-Cardinals.Wellorder_Constructions")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  enumerate :: "'a set => nat => 'a"
### theory "HOL-Cardinals.Wellorder_Embedding"
### 0.193s elapsed time, 0.779s cpu time, 0.106s GC time
Loading theory "HOL-Cardinals.Wellorder_Constructions" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Ordinal_Arithmetic")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.FuncSet"
### 0.472s elapsed time, 1.892s cpu time, 0.304s GC time
Loading theory "HOL-Library.Equipollence" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library")
### theory "HOL-Library.Infinite_Set"
### 0.327s elapsed time, 1.317s cpu time, 0.224s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Countable_Set" via "HOL-Library.Countable")
### theory "HOL-Library.Nat_Bijection"
### 0.361s elapsed time, 1.462s cpu time, 0.224s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Equipollence"
### 0.451s elapsed time, 1.604s cpu time, 0.662s GC time
Loading theory "HOL-Library.Rewrite" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction")
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
infix 1 then_cconv
infix 0 else_cconv
type cconv = conv
signature BASIC_CCONV =
  sig
    val CCONVERSION: cconv -> int -> tactic
    type cconv = conv
    val else_cconv: cconv * cconv -> cconv
    val then_cconv: cconv * cconv -> cconv
  end
signature CCONV =
  sig
    val CCONVERSION: cconv -> int -> tactic
    val abs_cconv:
       (cterm * Proof.context -> cconv) -> Proof.context -> cconv
    val all_cconv: cconv
    val arg1_cconv: cconv -> cconv
    val arg_cconv: cconv -> cconv
    type cconv = conv
    val comb_cconv: cconv -> cconv
    val combination_cconv: cconv -> cconv -> cconv
    val concl_cconv: int -> cconv -> cconv
    val else_cconv: cconv * cconv -> cconv
    val fconv_rule: cconv -> thm -> thm
    val first_cconv: cconv list -> cconv
    val fun2_cconv: cconv -> cconv
    val fun_cconv: cconv -> cconv
    val gconv_rule: cconv -> int -> thm -> thm
    val no_cconv: cconv
    val params_cconv:
       int -> (Proof.context -> cconv) -> Proof.context -> cconv
    val prems_cconv: int -> cconv -> cconv
    val rewr_cconv: thm -> cconv
    val rewrs_cconv: thm list -> cconv
    val then_cconv: cconv * cconv -> cconv
    val with_prems_cconv: int -> cconv -> cconv
  end
structure CConv: CCONV
structure Basic_CConv: BASIC_CCONV
val then_cconv = fn: cconv * cconv -> cconv
val CCONVERSION = fn: cconv -> int -> tactic
val else_cconv = fn: cconv * cconv -> cconv
infix 1 then_pconv
infix 0 else_pconv
signature REWRITE =
  sig
    val abs_pconv: patconv -> string option * typ -> patconv
    val all_pconv: patconv
    val arg_pconv: patconv -> patconv
    val asm_pconv: patconv -> patconv
    val asms_pconv: patconv -> patconv
    val concl_pconv: patconv -> patconv
    val else_pconv: patconv * patconv -> patconv
    val for_pconv: patconv -> (string option * typ option) list -> patconv
    val forall_pconv: patconv -> string option * typ option -> patconv
    val fun_pconv: patconv -> patconv
    val imp_pconv: patconv -> patconv
    val in_pconv: patconv -> patconv
    val judgment_pconv: patconv -> patconv
    val match_pconv: patconv -> term * (string option * typ) list -> patconv
    val mk_hole: int -> typ -> term
    val params_pconv: patconv -> patconv
    type patconv =
       Proof.context -> Type.tyenv * (string * term) list -> cconv
    datatype ('a, 'b) pattern
    = Asm | At | Concl | For of 'b list | In | Term of 'a
    val rewrite_conv:
       Proof.context ->
         (term * (string * typ) list, string * typ option) pattern list *
         term option
           -> thm list -> conv
    val rewrs_pconv: term option -> thm list -> patconv
    val then_pconv: patconv * patconv -> patconv
  end
structure Rewrite: REWRITE
### theory "HOL-Library.Rewrite"
### 0.255s elapsed time, 0.996s cpu time, 0.187s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.672s elapsed time, 2.455s cpu time, 0.850s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
consts
  shift :: "'a list => 'a stream => 'a stream"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
### theory "HOL-Cardinals.Wellorder_Constructions"
### 0.864s elapsed time, 3.226s cpu time, 0.850s GC time
Loading theory "HOL-Cardinals.Cardinal_Order_Relation" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals" via "HOL-Cardinals.Cardinal_Arithmetic")
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
### theory "HOL-Library.Set_Algebras"
### 0.238s elapsed time, 0.934s cpu time, 0.106s GC time
Loading theory "HOL-Cardinals.Ordinal_Arithmetic" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals")
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
locale wo_rel
  fixes r :: "('a * 'a) set"
  assumes "wo_rel r"
### theory "HOL-Library.Stream"
### 1.206s elapsed time, 4.562s cpu time, 1.159s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Library.Countable_Set")
locale wo_rel2
  fixes r :: "('a * 'a) set"
    and s :: "('b * 'b) set"
  assumes "wo_rel2 r s"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Cardinals.Cardinal_Order_Relation"
### 0.846s elapsed time, 3.323s cpu time, 0.472s GC time
Loading theory "HOL-Cardinals.Cardinal_Arithmetic" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library" via "HOL-Cardinals.Cardinals")
Found termination order: "size <*mlex*> {}"
### Additional type variable(s) in locale specification "countable": 'a
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Ordinal_Arithmetic"
### 0.897s elapsed time, 3.515s cpu time, 0.579s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Cardinal_Arithmetic"
### 0.234s elapsed time, 0.907s cpu time, 0.183s GC time
Loading theory "HOL-Cardinals.Cardinals" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library")
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
### theory "HOL-Cardinals.Cardinals"
### 0.248s elapsed time, 0.985s cpu time, 0.062s GC time
Loading theory "Intro_Dest_Elim.IDE_Tools" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "Intro_Dest_Elim.IHOL_IDE")
signature IDE_UTILITIES =
  sig
    val thm_printer: Proof.context -> bool -> string -> thm list -> unit
  end
structure IDE_Utilities: IDE_UTILITIES
### theory "Intro_Dest_Elim.IDE_Tools"
### 0.029s elapsed time, 0.123s cpu time, 0.000s GC time
Loading theory "Intro_Dest_Elim.IHOL_IDE" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction")
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
signature IDE =
  sig
    val mk_dest: Proof.context -> thm -> thm list
    val mk_elim: Proof.context -> thm -> thm list
    val mk_intro: Proof.context -> thm -> thm list
  end
structure IDE: IDE
### theory "Intro_Dest_Elim.IHOL_IDE"
### 0.078s elapsed time, 0.295s cpu time, 0.043s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Countable"
### 1.253s elapsed time, 4.752s cpu time, 0.657s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL" via "ZFC_in_HOL.ZFC_Library")
### theory "HOL-Library.BigO"
### 0.836s elapsed time, 2.960s cpu time, 0.329s GC time
Found termination order: "size <*mlex*> {}"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### theory "HOL-Library.Tree"
### 2.156s elapsed time, 7.861s cpu time, 1.049s GC time
Loading theory "Draft.Templates" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.074s elapsed time, 0.189s cpu time, 0.053s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CZH_SMC_FUNCTMoreTemplates")
### theory "HOL-Library.Countable_Set"
### 0.418s elapsed time, 1.073s cpu time, 0.135s GC time
Loading theory "ZFC_in_HOL.ZFC_Library" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals" via "ZFC_in_HOL.ZFC_in_HOL")
### theory "ZFC_in_HOL.ZFC_Library"
### 0.355s elapsed time, 0.728s cpu time, 0.038s GC time
Loading theory "ZFC_in_HOL.ZFC_in_HOL" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses" via "ZFC_in_HOL.ZFC_Cardinals")
instantiation
  V :: zero
  zero_V == zero_class.zero :: V
instantiation
  V :: one
  one_V == one_class.one :: V
instantiation
  V :: distrib_lattice
  inf_V == inf :: V => V => V
  sup_V == sup :: V => V => V
  less_eq_V == less_eq :: V => V => bool
  less_V == less :: V => V => bool
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.546s elapsed time, 1.142s cpu time, 0.106s GC time
instantiation
  V :: Sup
  Sup_V == Sup :: V set => V
instantiation
  V :: Inf
  Inf_V == Inf :: V set => V
instantiation
  V :: conditionally_complete_lattice
instantiation
  V :: zero_neq_one
instantiation
  V :: zero_less_one
consts
  ord_of_nat :: "nat => V"
### theory "ZFC_in_HOL.ZFC_in_HOL"
### 0.448s elapsed time, 0.685s cpu time, 0.115s GC time
Loading theory "ZFC_in_HOL.ZFC_Cardinals" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction" via "ZFC_in_HOL.ZFC_Typeclasses")
### theory "ZFC_in_HOL.ZFC_Cardinals"
### 1.086s elapsed time, 1.968s cpu time, 1.227s GC time
Loading theory "ZFC_in_HOL.Kirby" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "ZFC_in_HOL.Cantor_NF" via "ZFC_in_HOL.Ordinal_Exp")
Loading theory "ZFC_in_HOL.ZFC_Typeclasses" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "CZH_Foundations.CZH_Introduction")
instantiation
  V :: plus
  plus_V == plus :: V => V => V
instantiation
  V :: monoid_add
instantiation
  V :: times
  times_V == times :: V => V => V
instantiation
  V :: monoid_mult
### Additional type variable(s) in locale specification "embeddable": 'a
### theory "ZFC_in_HOL.Kirby"
### 0.364s elapsed time, 0.796s cpu time, 0.154s GC time
Loading theory "ZFC_in_HOL.Ordinal_Exp" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction" via "ZFC_in_HOL.Cantor_NF")
class embeddable = type +
  assumes "ex_inj": "EX V_of. inj V_of"
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
### theory "ZFC_in_HOL.Ordinal_Exp"
### 0.104s elapsed time, 0.208s cpu time, 0.000s GC time
Loading theory "ZFC_in_HOL.Cantor_NF" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction")
consts
  V_of_list :: "('a => V) => 'a list => V"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
### Additional type variable(s) in locale specification "small": 'a
class small = type +
  assumes "small": "small UNIV"
Found termination order: "length <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
class countable = embeddable +
  assumes "ex_inj": "EX to_nat. inj to_nat"
### theory "ZFC_in_HOL.Cantor_NF"
### 0.437s elapsed time, 0.944s cpu time, 0.139s GC time
### theory "ZFC_in_HOL.ZFC_Typeclasses"
### 1.457s elapsed time, 3.646s cpu time, 1.819s GC time
Loading theory "CZH_Foundations.CZH_Introduction" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets" via "CZH_Foundations.CZH_Sets_Introduction")
### theory "CZH_Foundations.CZH_Introduction"
### 0.028s elapsed time, 0.029s cpu time, 0.000s GC time
Loading theory "CZH_Foundations.CZH_Sets_Introduction" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat" via "CZH_Foundations.CZH_Sets_Sets")
### theory "CZH_Foundations.CZH_Sets_Introduction"
### 0.988s elapsed time, 1.089s cpu time, 0.138s GC time
Loading theory "CZH_Foundations.CZH_Sets_Sets" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Nat")
### theory "CZH_Foundations.CZH_Sets_Sets"
### 0.437s elapsed time, 0.521s cpu time, 0.113s GC time
Loading theory "CZH_Foundations.CZH_Sets_BRelations" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Equipollence" via "CZH_Foundations.CZH_Sets_IF")
Loading theory "CZH_Foundations.CZH_Sets_Nat" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality")
### theory "CZH_Foundations.CZH_Sets_Nat"
### 0.198s elapsed time, 0.429s cpu time, 0.069s GC time
locale vbrelation
  fixes r :: "V"
  assumes "vbrelation r"
locale vsv
  fixes r :: "V"
  assumes "vsv r"
theorem
  vsvI:
    [| vbrelation ?r;
       !!a b c.
          [| <a, b> \<in>\<^sub>\<circ> ?r; <a, c> \<in>\<^sub>\<circ> ?r |]
          ==> b = c |]
    ==> vsv ?r
theorem
  vsvD:
    vsv ?r ==> vbrelation ?r
    [| vsv ?r; <?a, ?b> \<in>\<^sub>\<circ> ?r;
       <?a, ?c> \<in>\<^sub>\<circ> ?r |]
    ==> ?b = ?c
theorem
  vsvE:
    [| vsv ?r;
       [| vbrelation ?r;
          !!a b c.
             [| <a, b> \<in>\<^sub>\<circ> ?r;
                <a, c> \<in>\<^sub>\<circ> ?r |]
             ==> b = c |]
       ==> ?W |]
    ==> ?W
locale vsv
  fixes r :: "V"
  assumes "vsv r"
locale vsv
  fixes r :: "V"
  assumes "vsv r"
locale v11
  fixes r :: "V"
  assumes "v11 r"
theorem v11I: [| vsv ?r; vsv (?r\<inverse>\<^sub>\<circ>) |] ==> v11 ?r
theorem v11D:
          v11 ?r ==> vsv ?r
          v11 ?r ==> vsv (?r\<inverse>\<^sub>\<circ>)
theorem
  v11E:
    [| v11 ?r; [| vsv ?r; vsv (?r\<inverse>\<^sub>\<circ>) |] ==> ?W |]
    ==> ?W
locale v11
  fixes r :: "V"
  assumes "v11 r"
locale v11
  fixes r :: "V"
  assumes "v11 r"
val pure_unfold = fn: Proof.context -> thm list -> thm -> thm
val msg_args = "mk_VLambda: invalid arguments": string
val vsv_VLambda_thm = "vsv (VLambda ?A ?f)": thm
val vsv_VLambda_match =
   Const ("ZFC_Cardinals.VLambda", "V => (V => V) => V") $
     Var (("A", 0), "V") $
     Abs ("a", "V", Var (("f", 0), "V => V") $ Bound 0):
   term
val vdomain_VLambda_thm = "\<D>\<^sub>\<circ> (VLambda ?A ?f) = ?A": thm
val vdomain_VLambda_match =
   Const ("ZFC_Cardinals.VLambda", "V => (V => V) => V") $
     Var (("A", 0), "V") $
     Abs ("a", "V", Var (("f", 0), "V => V") $ Bound 0):
   term
val app_VLambda_thm =
   "?x \<in>\<^sub>\<circ> ?A ==> VLambda ?A ?b\<lparr>?x\<rparr> = ?b ?x":
   thm
val app_VLambda_match =
   Const ("ZFC_Cardinals.VLambda", "V => (V => V) => V") $
     Var (("A", 0), "V") $ Var (("b", 0), "V => V"):
   term
val mk_VLabmda_thm = fn: term -> thm -> Proof.context -> thm -> thm
val mk_VLambda_vsv = fn: Proof.context -> thm -> thm
val mk_VLambda_vdomain = fn: Proof.context -> thm -> thm
val mk_VLambda_app = fn: Proof.context -> thm -> thm
val mk_VLambda_parser = fn:
   Token.T list ->
     ((Facts.ref * Token.src list) * (string * Attrib.binding) list) *
     Token.T list
val process_mk_VLambda_thm = fn:
   (Proof.context -> 'a -> thm) ->
     (binding * Token.src list) * 'a -> Proof.context -> local_theory
val folder_mk_VLambda = fn:
   (string * (binding * Token.src list)) * thm ->
     Proof.context -> local_theory
val process_mk_VLambda = fn:
   (Facts.ref * Token.src list) * (string * (binding * Token.src list)) list
     -> Proof.context -> Proof.context
### theory "CZH_Foundations.CZH_Sets_BRelations"
### 1.783s elapsed time, 3.400s cpu time, 1.991s GC time
Loading theory "CZH_Foundations.CZH_Sets_IF" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality" via "CZH_Foundations.CZH_Sets_Equipollence")
theorem vprojection_vsv: vsv (vprojection ?I ?A ?i)
theorem
  vprojection_vdomain:
    \<D>\<^sub>\<circ> (vprojection ?I ?A ?i) = vproduct ?I ?A
theorem
  vprojection_app:
    ?x \<in>\<^sub>\<circ> vproduct ?I ?A ==>
    vprojection ?I ?A ?i\<lparr>?x\<rparr> = ?x\<lparr>?i\<rparr>
### theory "CZH_Foundations.CZH_Sets_IF"
### 0.412s elapsed time, 0.517s cpu time, 0.135s GC time
Loading theory "CZH_Foundations.CZH_Sets_Equipollence" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences" via "CZH_Foundations.CZH_Sets_Cardinality")
Loading theory "CZH_Foundations.CZH_Sets_Ordinals" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_VNHS")
### theory "CZH_Foundations.CZH_Sets_Equipollence"
### 0.078s elapsed time, 0.155s cpu time, 0.000s GC time
Loading theory "CZH_Foundations.CZH_Sets_Cardinality" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations" via "CZH_Foundations.CZH_Sets_FSequences")
### theory "CZH_Foundations.CZH_Sets_Ordinals"
### 0.265s elapsed time, 0.573s cpu time, 0.089s GC time
### theory "CZH_Foundations.CZH_Sets_Cardinality"
### 0.337s elapsed time, 0.635s cpu time, 0.176s GC time
Loading theory "CZH_Foundations.CZH_Sets_FSequences" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP" via "CZH_Foundations.CZH_Sets_FBRelations")
locale vfsequence
  fixes xs :: "V"
  assumes "vfsequence xs"
locale vfsequence_pair
  fixes xs\<^sub>1 :: "V"
    and xs\<^sub>2 :: "V"
  assumes "vfsequence_pair xs\<^sub>1 xs\<^sub>2"
locale vfsequence_pair
  fixes xs\<^sub>1 :: "V"
    and xs\<^sub>2 :: "V"
  assumes "vfsequence_pair xs\<^sub>1 xs\<^sub>2"
consts
  vfsequence_of_vlist :: "V list => V"
### theory "CZH_Foundations.CZH_Sets_FSequences"
### 0.593s elapsed time, 0.731s cpu time, 0.184s GC time
Loading theory "CZH_Foundations.CZH_Sets_FBRelations" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction" via "CZH_Foundations.CZH_Sets_NOP")
locale fbrelation
  fixes r :: "V"
  assumes "fbrelation r"
locale fbrelation_pair
  fixes r\<^sub>1 :: "V"
    and r\<^sub>2 :: "V"
  assumes "fbrelation_pair r\<^sub>1 r\<^sub>2"
### theory "CZH_Foundations.CZH_Sets_FBRelations"
### 0.638s elapsed time, 0.753s cpu time, 0.154s GC time
Loading theory "CZH_Foundations.CZH_Sets_NOP" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction")
Loading theory "CZH_Foundations.CZH_Sets_VNHS" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph" via "CZH_Foundations.CZH_DG_Introduction")
locale pnop
  fixes A :: "V"
    and n :: "V"
    and f :: "V"
  assumes "pnop A n f"
locale nop
  fixes A :: "V"
    and n :: "V"
    and f :: "V"
  assumes "nop A n f"
locale nop_v11
  fixes A :: "V"
    and n :: "V"
    and f :: "V"
  assumes "nop_v11 A n f"
locale nop_onto
  fixes A :: "V"
    and n :: "V"
    and f :: "V"
  assumes "nop_onto A n f"
locale nop_bij
  fixes A :: "V"
    and n :: "V"
    and f :: "V"
  assumes "nop_bij A n f"
locale scalar
  fixes A :: "V"
    and f :: "V"
  assumes "scalar A f"
locale unop
  fixes A :: "V"
    and f :: "V"
  assumes "unop A f"
locale unop_v11
  fixes A :: "V"
    and f :: "V"
  assumes "unop_v11 A f"
locale \<Z>
  fixes \<alpha> :: "V"
  assumes "\<Z> \<alpha>"
locale unop_onto
  fixes A :: "V"
    and f :: "V"
  assumes "unop_onto A f"
locale unop_bij
  fixes A :: "V"
    and f :: "V"
  assumes "unop_bij A f"
### theory "CZH_Foundations.CZH_Sets_VNHS"
### 0.440s elapsed time, 0.972s cpu time, 0.185s GC time
locale pbinop
  fixes A :: "V"
    and f :: "V"
  assumes "pbinop A f"
locale binop
  fixes A :: "V"
    and f :: "V"
  assumes "binop A f"
locale binop_v11
  fixes A :: "V"
    and f :: "V"
  assumes "binop_v11 A f"
locale binop_onto
  fixes A :: "V"
    and f :: "V"
  assumes "binop_onto A f"
locale binop_bij
  fixes A :: "V"
    and f :: "V"
  assumes "binop_bij A f"
### theory "CZH_Foundations.CZH_Sets_NOP"
### 0.730s elapsed time, 1.341s cpu time, 0.277s GC time
Loading theory "CZH_Foundations.CZH_DG_Introduction" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph" via "CZH_Foundations.CZH_DG_Digraph")
### theory "CZH_Foundations.CZH_DG_Introduction"
### 2.430s elapsed time, 2.597s cpu time, 0.221s GC time
Loading theory "CZH_Foundations.CZH_DG_Digraph" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM" via "CZH_Foundations.CZH_DG_Small_Digraph")
Loading theory "CZH_Foundations.CZH_SMC_Introduction" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_SMC_Small_Semifunctor" via "CZH_Foundations.CZH_SMC_Semifunctor" via "CZH_Foundations.CZH_SMC_Semicategory")
Loading theory "Draft.CZH_ECAT_Introduction" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "Draft.CZH_ECAT_Small_Functor" via "Draft.CZH_ECAT_Functor" via "Draft.CZH_ECAT_Category")
theorem
  is_arrI:
    [| ?f \<in>\<^sub>\<circ> ?\<CC>\<lparr>Arr\<rparr>;
       ?\<CC>\<lparr>Dom\<rparr>\<lparr>?f\<rparr> = ?a;
       ?\<CC>\<lparr>Cod\<rparr>\<lparr>?f\<rparr> = ?b |]
    ==> ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b
theorem
  is_arrD:
    ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b ==>
    ?f \<in>\<^sub>\<circ> ?\<CC>\<lparr>Arr\<rparr>
    ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b ==>
    ?\<CC>\<lparr>Dom\<rparr>\<lparr>?f\<rparr> = ?a
    ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b ==>
    ?\<CC>\<lparr>Cod\<rparr>\<lparr>?f\<rparr> = ?b
theorem
  is_arrE:
    [| ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
       [| ?f \<in>\<^sub>\<circ> ?\<CC>\<lparr>Arr\<rparr>;
          ?\<CC>\<lparr>Dom\<rparr>\<lparr>?f\<rparr> = ?a;
          ?\<CC>\<lparr>Cod\<rparr>\<lparr>?f\<rparr> = ?b |]
       ==> ?W |]
    ==> ?W
locale digraph
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "digraph \<alpha> \<CC>"
theorem
  digraphI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>Dom\<rparr>);
       vsv (?\<CC>\<lparr>Cod\<rparr>); vcard ?\<CC> = 4\<^sub>\<nat>;
       \<D>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>) =
       ?\<CC>\<lparr>Arr\<rparr>;
       \<R>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>)
       \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       \<D>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>) =
       ?\<CC>\<lparr>Arr\<rparr>;
       \<R>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>)
       \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       ?\<CC>\<lparr>Obj\<rparr> \<subseteq>\<^sub>\<circ> Vset ?\<alpha>;
       !!A B.
          [| A \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
             B \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
             A \<in>\<^sub>\<circ> Vset ?\<alpha>;
             B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
          ==> \<Union>\<^sub>\<circ>
               ((\<lambda>a\<in>\<^sub>\<circ>A.
                    \<Union>\<^sub>\<circ>
                     (VLambda B (Hom ?\<CC> a) `\<^sub>\<circ>
                      B)) `\<^sub>\<circ>
                A)
              \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> digraph ?\<alpha> ?\<CC>
theorem
  digraphD:
    digraph ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    digraph ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    digraph ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>Dom\<rparr>)
    digraph ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>Cod\<rparr>)
    digraph ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 4\<^sub>\<nat>
    digraph ?\<alpha> ?\<CC> ==>
    \<D>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>) =
    ?\<CC>\<lparr>Arr\<rparr>
    digraph ?\<alpha> ?\<CC> ==>
    \<R>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>)
    \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>
    digraph ?\<alpha> ?\<CC> ==>
    \<D>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>) =
    ?\<CC>\<lparr>Arr\<rparr>
    digraph ?\<alpha> ?\<CC> ==>
    \<R>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>)
    \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>
    digraph ?\<alpha> ?\<CC> ==>
    ?\<CC>\<lparr>Obj\<rparr> \<subseteq>\<^sub>\<circ> Vset ?\<alpha>
    [| digraph ?\<alpha> ?\<CC>;
       ?A \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       ?B \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       ?A \<in>\<^sub>\<circ> Vset ?\<alpha>;
       ?B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> \<Union>\<^sub>\<circ>
         ((\<lambda>a\<in>\<^sub>\<circ>?A.
              \<Union>\<^sub>\<circ>
               (VLambda ?B (Hom ?\<CC> a) `\<^sub>\<circ>
                ?B)) `\<^sub>\<circ>
          ?A)
        \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  digraphE:
    [| digraph ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>Dom\<rparr>); vsv (?\<CC>\<lparr>Cod\<rparr>);
          vcard ?\<CC> = 4\<^sub>\<nat>;
          \<D>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>) =
          ?\<CC>\<lparr>Arr\<rparr>;
          \<R>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
          \<D>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>) =
          ?\<CC>\<lparr>Arr\<rparr>;
          \<R>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
          ?\<CC>\<lparr>Obj\<rparr>
          \<subseteq>\<^sub>\<circ> Vset ?\<alpha>;
          !!A B.
             [| A \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
                B \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
                A \<in>\<^sub>\<circ> Vset ?\<alpha>;
                B \<in>\<^sub>\<circ> Vset ?\<alpha> |]
             ==> \<Union>\<^sub>\<circ>
                  ((\<lambda>a\<in>\<^sub>\<circ>A.
                       \<Union>\<^sub>\<circ>
                        (VLambda B (Hom ?\<CC> a) `\<^sub>\<circ>
                         B)) `\<^sub>\<circ>
                   A)
                 \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
### theory "CZH_Foundations.CZH_SMC_Introduction"
### 0.593s elapsed time, 1.813s cpu time, 0.136s GC time
### theory "Draft.CZH_ECAT_Introduction"
### 0.594s elapsed time, 1.814s cpu time, 0.136s GC time
### theory "CZH_Foundations.CZH_DG_Digraph"
### 0.964s elapsed time, 2.286s cpu time, 0.275s GC time
Loading theory "CZH_Foundations.CZH_DG_DGHM" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM")
Loading theory "CZH_Foundations.CZH_DG_Small_Digraph" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM" via "CZH_Foundations.CZH_DG_Small_DGHM")
Loading theory "CZH_Foundations.CZH_SMC_Semicategory" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_SMC_Small_Semifunctor" via "CZH_Foundations.CZH_SMC_Semifunctor")
locale semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "semicategory \<alpha> \<CC>"
theorem
  semicategoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>Comp\<rparr>);
       vcard ?\<CC> = 5\<^sub>\<nat>; digraph ?\<alpha> (smc_dg ?\<CC>);
       !!gf. (gf \<in>\<^sub>\<circ> \<D>\<^sub>\<circ>
(?\<CC>\<lparr>Comp\<rparr>)) =
             (EX g f b c a.
                 gf = [g, f]\<^sub>\<circ> &
                 g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
                 f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b);
       !!b c g a f.
          [| g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
          ==> g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              f : a \<mapsto>\<^bsub>?\<CC>\<^esub> c;
       !!c d h b g a f.
          [| h : c \<mapsto>\<^bsub>?\<CC>\<^esub> d;
             g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
          ==> h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              f =
              h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              (g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f) |]
    ==> semicategory ?\<alpha> ?\<CC>
theorem
  semicategoryD:
    semicategory ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    semicategory ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    semicategory ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>Comp\<rparr>)
    semicategory ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 5\<^sub>\<nat>
    semicategory ?\<alpha> ?\<CC> ==> digraph ?\<alpha> (smc_dg ?\<CC>)
    semicategory ?\<alpha> ?\<CC> ==>
    (?gf
     \<in>\<^sub>\<circ> \<D>\<^sub>\<circ> (?\<CC>\<lparr>Comp\<rparr>)) =
    (EX g f b c a.
        ?gf = [g, f]\<^sub>\<circ> &
        g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
        f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b)
    [| semicategory ?\<alpha> ?\<CC>;
       ?g : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?c
    [| semicategory ?\<alpha> ?\<CC>;
       ?h : ?c \<mapsto>\<^bsub>?\<CC>\<^esub> ?d;
       ?g : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f =
        ?h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        (?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f)
theorem
  semicategoryE:
    [| semicategory ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>Comp\<rparr>); vcard ?\<CC> = 5\<^sub>\<nat>;
          digraph ?\<alpha> (smc_dg ?\<CC>);
          !!gf. (gf \<in>\<^sub>\<circ> \<D>\<^sub>\<circ>
   (?\<CC>\<lparr>Comp\<rparr>)) =
                (EX g f b c a.
                    gf = [g, f]\<^sub>\<circ> &
                    g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
                    f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b);
          !!b c g a f.
             [| g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
             ==> g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 f : a \<mapsto>\<^bsub>?\<CC>\<^esub> c;
          !!c d h b g a f.
             [| h : c \<mapsto>\<^bsub>?\<CC>\<^esub> d;
                g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
             ==> h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 f =
                 h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 (g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f) |]
       ==> ?W |]
    ==> ?W
locale tiny_digraph
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "tiny_digraph \<alpha> \<CC>"
theorem
  tiny_digraphI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>Dom\<rparr>);
       vsv (?\<CC>\<lparr>Cod\<rparr>); vcard ?\<CC> = 4\<^sub>\<nat>;
       \<D>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>) =
       ?\<CC>\<lparr>Arr\<rparr>;
       \<R>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>)
       \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       \<D>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>) =
       ?\<CC>\<lparr>Arr\<rparr>;
       \<R>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>)
       \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       ?\<CC>\<lparr>Obj\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>;
       ?\<CC>\<lparr>Arr\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> tiny_digraph ?\<alpha> ?\<CC>
theorem
  tiny_digraphD:
    tiny_digraph ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    tiny_digraph ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    tiny_digraph ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>Dom\<rparr>)
    tiny_digraph ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>Cod\<rparr>)
    tiny_digraph ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 4\<^sub>\<nat>
    tiny_digraph ?\<alpha> ?\<CC> ==>
    \<D>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>) =
    ?\<CC>\<lparr>Arr\<rparr>
    tiny_digraph ?\<alpha> ?\<CC> ==>
    \<R>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>)
    \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>
    tiny_digraph ?\<alpha> ?\<CC> ==>
    \<D>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>) =
    ?\<CC>\<lparr>Arr\<rparr>
    tiny_digraph ?\<alpha> ?\<CC> ==>
    \<R>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>)
    \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>
    tiny_digraph ?\<alpha> ?\<CC> ==>
    ?\<CC>\<lparr>Obj\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>
    tiny_digraph ?\<alpha> ?\<CC> ==>
    ?\<CC>\<lparr>Arr\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  tiny_digraphE:
    [| tiny_digraph ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>Dom\<rparr>); vsv (?\<CC>\<lparr>Cod\<rparr>);
          vcard ?\<CC> = 4\<^sub>\<nat>;
          \<D>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>) =
          ?\<CC>\<lparr>Arr\<rparr>;
          \<R>\<^sub>\<circ> (?\<CC>\<lparr>Dom\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
          \<D>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>) =
          ?\<CC>\<lparr>Arr\<rparr>;
          \<R>\<^sub>\<circ> (?\<CC>\<lparr>Cod\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
          ?\<CC>\<lparr>Obj\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>;
          ?\<CC>\<lparr>Arr\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
locale semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "semicategory \<alpha> \<CC>"
locale finite_digraph
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "finite_digraph \<alpha> \<CC>"
theorem
  finite_digraphI:
    [| digraph ?\<alpha> ?\<CC>; vfinite (?\<CC>\<lparr>Obj\<rparr>);
       vfinite (?\<CC>\<lparr>Arr\<rparr>) |]
    ==> finite_digraph ?\<alpha> ?\<CC>
theorem
  finite_digraphD:
    finite_digraph ?\<alpha> ?\<CC> ==> digraph ?\<alpha> ?\<CC>
    finite_digraph ?\<alpha> ?\<CC> ==> vfinite (?\<CC>\<lparr>Obj\<rparr>)
    finite_digraph ?\<alpha> ?\<CC> ==> vfinite (?\<CC>\<lparr>Arr\<rparr>)
theorem
  finite_digraphE:
    [| finite_digraph ?\<alpha> ?\<CC>;
       [| digraph ?\<alpha> ?\<CC>; vfinite (?\<CC>\<lparr>Obj\<rparr>);
          vfinite (?\<CC>\<lparr>Arr\<rparr>) |]
       ==> ?W |]
    ==> ?W
### theory "CZH_Foundations.CZH_DG_Small_Digraph"
### 0.803s elapsed time, 2.503s cpu time, 0.399s GC time
locale is_dghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_dghm \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_dghmI:
    [| \<Z> ?\<alpha>; vfsequence ?\<FF>; digraph ?\<alpha> ?\<AA>;
       digraph ?\<alpha> ?\<BB>; vcard ?\<FF> = 4\<^sub>\<nat>;
       ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>;
       ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>;
       vsv (?\<FF>\<lparr>ObjMap\<rparr>);
       vsv (?\<FF>\<lparr>ArrMap\<rparr>);
       \<D>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>) =
       ?\<AA>\<lparr>Obj\<rparr>;
       \<R>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>)
       \<subseteq>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
       \<D>\<^sub>\<circ> (?\<FF>\<lparr>ArrMap\<rparr>) =
       ?\<AA>\<lparr>Arr\<rparr>;
       !!a b f.
          f : a \<mapsto>\<^bsub>?\<AA>\<^esub> b ==>
          ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>b\<rparr> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_monic_arrI:
    [| ?m : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
       !!f g a.
          [| f : a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
             g : a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
             ?m \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f =
             ?m \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> g |]
          ==> f = g |]
    ==> ?m : ?b \<mapsto>\<^sub>m\<^sub>o\<^sub>n\<^bsub>?\<CC>\<^esub> ?c
theorem
  is_monic_arrD:
    ?m : ?b \<mapsto>\<^sub>m\<^sub>o\<^sub>n\<^bsub>?\<CC>\<^esub> ?c ==>
    ?m : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c
    [| ?m : ?b \<mapsto>\<^sub>m\<^sub>o\<^sub>n\<^bsub>?\<CC>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
       ?g : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
       ?m \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f =
       ?m \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?g |]
    ==> ?f = ?g
theorem
  is_monic_arrE:
    [| ?m : ?b \<mapsto>\<^sub>m\<^sub>o\<^sub>n\<^bsub>?\<CC>\<^esub> ?c;
       [| ?m : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
          !!f g a.
             [| f : a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
                g : a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
                ?m \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f =
                ?m \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> g |]
             ==> f = g |]
       ==> ?W |]
    ==> ?W
theorem
  is_dghmD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<Z> ?\<alpha>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vfsequence ?\<FF>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    digraph ?\<alpha> ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    digraph ?\<alpha> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vcard ?\<FF> = 4\<^sub>\<nat>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vsv (?\<FF>\<lparr>ObjMap\<rparr>)
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vsv (?\<FF>\<lparr>ArrMap\<rparr>)
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<D>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>) =
    ?\<AA>\<lparr>Obj\<rparr>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<R>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>)
    \<subseteq>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<D>\<^sub>\<circ> (?\<FF>\<lparr>ArrMap\<rparr>) =
    ?\<AA>\<lparr>Arr\<rparr>
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?f : ?a \<mapsto>\<^bsub>?\<AA>\<^esub> ?b |]
    ==> ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?f\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?b\<rparr>
theorem
  is_dghmE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| \<Z> ?\<alpha>; vfsequence ?\<FF>; digraph ?\<alpha> ?\<AA>;
          digraph ?\<alpha> ?\<BB>; vcard ?\<FF> = 4\<^sub>\<nat>;
          ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>;
          ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>;
          vsv (?\<FF>\<lparr>ObjMap\<rparr>);
          vsv (?\<FF>\<lparr>ArrMap\<rparr>);
          \<D>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>) =
          ?\<AA>\<lparr>Obj\<rparr>;
          \<R>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
          \<D>\<^sub>\<circ> (?\<FF>\<lparr>ArrMap\<rparr>) =
          ?\<AA>\<lparr>Arr\<rparr>;
          !!a b f.
             f : a \<mapsto>\<^bsub>?\<AA>\<^esub> b ==>
             ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>b\<rparr> |]
       ==> ?W |]
    ==> ?W
theorem
  is_idem_arrI:
    [| ?f : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
       ?f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f = ?f |]
    ==> ?f : \<mapsto>\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<CC>\<^esub> ?b
theorem
  is_idem_arrD:
    ?f : \<mapsto>\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<CC>\<^esub> ?b ==>
    ?f : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?b
    ?f : \<mapsto>\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<CC>\<^esub> ?b ==>
    ?f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f = ?f
theorem
  is_idem_arrE:
    [| ?f : \<mapsto>\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<CC>\<^esub> ?b;
       [| ?f : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?b;
          ?f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f = ?f |]
       ==> ?W |]
    ==> ?W
theorem
  obj_terminalI:
    [| ?t \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
            Ex1 (is_arr ?\<CC> a ?t) |]
    ==> obj_terminal ?\<CC> ?t
theorem
  obj_terminalD:
    obj_terminal ?\<CC> ?t ==>
    ?t \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>
    [| obj_terminal ?\<CC> ?t;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> |]
    ==> Ex1 (is_arr ?\<CC> ?a ?t)
theorem
  obj_terminalE:
    [| obj_terminal ?\<CC> ?t;
       [| ?t \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
          !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
               Ex1 (is_arr ?\<CC> a ?t) |]
       ==> ?W |]
    ==> ?W
theorem
  obj_nullI:
    [| obj_initial ?\<CC> ?a; obj_terminal ?\<CC> ?a |]
    ==> obj_null ?\<CC> ?a
theorem obj_nullD:
          obj_null ?\<CC> ?a ==> obj_initial ?\<CC> ?a
          obj_null ?\<CC> ?a ==> obj_terminal ?\<CC> ?a
theorem
  obj_nullE:
    [| obj_null ?\<CC> ?a;
       [| obj_initial ?\<CC> ?a; obj_terminal ?\<CC> ?a |] ==> ?W |]
    ==> ?W
### theory "CZH_Foundations.CZH_SMC_Semicategory"
### 1.893s elapsed time, 5.020s cpu time, 1.099s GC time
Loading theory "CZH_Foundations.CZH_SMC_Small_Semicategory" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_SMC_Small_Semifunctor")
Loading theory "Draft.CZH_ECAT_Category" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "Draft.CZH_ECAT_Small_Functor" via "Draft.CZH_ECAT_Functor")
locale category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "category \<alpha> \<CC>"
theorem
  categoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>CId\<rparr>);
       vcard ?\<CC> = 6\<^sub>\<nat>;
       semicategory ?\<alpha> (cat_smc ?\<CC>);
       \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
       ?\<CC>\<lparr>Obj\<rparr>;
       !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
            ?\<CC>\<lparr>CId\<rparr>\<lparr>a\<rparr> : a \<mapsto>\<^bsub>?\<CC>\<^esub> a;
       !!a b f.
          f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
          ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          f =
          f;
       !!b c f.
          f : b \<mapsto>\<^bsub>?\<CC>\<^esub> c ==>
          f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> =
          f |]
    ==> category ?\<alpha> ?\<CC>
theorem
  categoryD:
    category ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    category ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    category ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>CId\<rparr>)
    category ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 6\<^sub>\<nat>
    category ?\<alpha> ?\<CC> ==> semicategory ?\<alpha> (cat_smc ?\<CC>)
    category ?\<alpha> ?\<CC> ==>
    \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
    ?\<CC>\<lparr>Obj\<rparr>
    [| category ?\<alpha> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> |]
    ==> ?\<CC>\<lparr>CId\<rparr>\<lparr>?a\<rparr> : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?a
    [| category ?\<alpha> ?\<CC>;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?\<CC>\<lparr>CId\<rparr>\<lparr>?b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f =
        ?f
    [| category ?\<alpha> ?\<CC>;
       ?f : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c |]
    ==> ?f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?\<CC>\<lparr>CId\<rparr>\<lparr>?b\<rparr> =
        ?f
theorem
  categoryE:
    [| category ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>CId\<rparr>); vcard ?\<CC> = 6\<^sub>\<nat>;
          semicategory ?\<alpha> (cat_smc ?\<CC>);
          \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
          ?\<CC>\<lparr>Obj\<rparr>;
          !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
               ?\<CC>\<lparr>CId\<rparr>\<lparr>a\<rparr> : a \<mapsto>\<^bsub>?\<CC>\<^esub> a;
          !!a b f.
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
             ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
             f =
             f;
          !!b c f.
             f : b \<mapsto>\<^bsub>?\<CC>\<^esub> c ==>
             f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
             ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> =
             f |]
       ==> ?W |]
    ==> ?W
locale category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "category \<alpha> \<CC>"
locale tiny_semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "tiny_semicategory \<alpha> \<CC>"
theorem
  tiny_semicategoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>Comp\<rparr>);
       vcard ?\<CC> = 5\<^sub>\<nat>;
       tiny_digraph ?\<alpha> (smc_dg ?\<CC>);
       !!gf. (gf \<in>\<^sub>\<circ> \<D>\<^sub>\<circ>
(?\<CC>\<lparr>Comp\<rparr>)) =
             (EX g f b c a.
                 gf = [g, f]\<^sub>\<circ> &
                 g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
                 f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b);
       !!b c g a f.
          [| g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
          ==> g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              f : a \<mapsto>\<^bsub>?\<CC>\<^esub> c;
       !!c d h b g a f.
          [| h : c \<mapsto>\<^bsub>?\<CC>\<^esub> d;
             g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
          ==> h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              f =
              h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              (g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f) |]
    ==> tiny_semicategory ?\<alpha> ?\<CC>
theorem
  tiny_semicategoryD:
    tiny_semicategory ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    tiny_semicategory ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    tiny_semicategory ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>Comp\<rparr>)
    tiny_semicategory ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 5\<^sub>\<nat>
    tiny_semicategory ?\<alpha> ?\<CC> ==>
    tiny_digraph ?\<alpha> (smc_dg ?\<CC>)
    tiny_semicategory ?\<alpha> ?\<CC> ==>
    (?gf
     \<in>\<^sub>\<circ> \<D>\<^sub>\<circ> (?\<CC>\<lparr>Comp\<rparr>)) =
    (EX g f b c a.
        ?gf = [g, f]\<^sub>\<circ> &
        g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
        f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b)
    [| tiny_semicategory ?\<alpha> ?\<CC>;
       ?g : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?c
    [| tiny_semicategory ?\<alpha> ?\<CC>;
       ?h : ?c \<mapsto>\<^bsub>?\<CC>\<^esub> ?d;
       ?g : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f =
        ?h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        (?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f)
theorem
  tiny_semicategoryE:
    [| tiny_semicategory ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>Comp\<rparr>); vcard ?\<CC> = 5\<^sub>\<nat>;
          tiny_digraph ?\<alpha> (smc_dg ?\<CC>);
          !!gf. (gf \<in>\<^sub>\<circ> \<D>\<^sub>\<circ>
   (?\<CC>\<lparr>Comp\<rparr>)) =
                (EX g f b c a.
                    gf = [g, f]\<^sub>\<circ> &
                    g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
                    f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b);
          !!b c g a f.
             [| g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
             ==> g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 f : a \<mapsto>\<^bsub>?\<CC>\<^esub> c;
          !!c d h b g a f.
             [| h : c \<mapsto>\<^bsub>?\<CC>\<^esub> d;
                g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
             ==> h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 f =
                 h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 (g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f) |]
       ==> ?W |]
    ==> ?W
locale tiny_semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "tiny_semicategory \<alpha> \<CC>"
theorem dghm_id_ObjMap_vsv: vsv (dghm_id ?\<CC>\<lparr>ObjMap\<rparr>)
theorem
  dghm_id_ObjMap_vdomain:
    \<D>\<^sub>\<circ> (dghm_id ?\<CC>\<lparr>ObjMap\<rparr>) =
    ?\<CC>\<lparr>Obj\<rparr>
theorem
  dghm_id_ObjMap_app:
    ?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
    dghm_id ?\<CC>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr> = ?x
theorem dghm_id_ArrMap_vsv: vsv (dghm_id ?\<CC>\<lparr>ArrMap\<rparr>)
theorem
  dghm_id_ArrMap_vdomain:
    \<D>\<^sub>\<circ> (dghm_id ?\<CC>\<lparr>ArrMap\<rparr>) =
    ?\<CC>\<lparr>Arr\<rparr>
theorem
  dghm_id_ArrMap_app:
    ?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Arr\<rparr> ==>
    dghm_id ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr> = ?x
locale finite_semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "finite_semicategory \<alpha> \<CC>"
theorem
  finite_semicategoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>Comp\<rparr>);
       vcard ?\<CC> = 5\<^sub>\<nat>;
       finite_digraph ?\<alpha> (smc_dg ?\<CC>);
       !!gf. (gf \<in>\<^sub>\<circ> \<D>\<^sub>\<circ>
(?\<CC>\<lparr>Comp\<rparr>)) =
             (EX g f b c a.
                 gf = [g, f]\<^sub>\<circ> &
                 g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
                 f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b);
       !!b c g a f.
          [| g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
          ==> g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              f : a \<mapsto>\<^bsub>?\<CC>\<^esub> c;
       !!c d h b g a f.
          [| h : c \<mapsto>\<^bsub>?\<CC>\<^esub> d;
             g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
          ==> h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              f =
              h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
              (g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f) |]
    ==> finite_semicategory ?\<alpha> ?\<CC>
theorem
  finite_semicategoryD:
    finite_semicategory ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    finite_semicategory ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    finite_semicategory ?\<alpha> ?\<CC> ==>
    vsv (?\<CC>\<lparr>Comp\<rparr>)
    finite_semicategory ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 5\<^sub>\<nat>
    finite_semicategory ?\<alpha> ?\<CC> ==>
    finite_digraph ?\<alpha> (smc_dg ?\<CC>)
    finite_semicategory ?\<alpha> ?\<CC> ==>
    (?gf
     \<in>\<^sub>\<circ> \<D>\<^sub>\<circ> (?\<CC>\<lparr>Comp\<rparr>)) =
    (EX g f b c a.
        ?gf = [g, f]\<^sub>\<circ> &
        g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
        f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b)
    [| finite_semicategory ?\<alpha> ?\<CC>;
       ?g : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?c
    [| finite_semicategory ?\<alpha> ?\<CC>;
       ?h : ?c \<mapsto>\<^bsub>?\<CC>\<^esub> ?d;
       ?g : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f =
        ?h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        (?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f)
theorem
  finite_semicategoryE:
    [| finite_semicategory ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>Comp\<rparr>); vcard ?\<CC> = 5\<^sub>\<nat>;
          finite_digraph ?\<alpha> (smc_dg ?\<CC>);
          !!gf. (gf \<in>\<^sub>\<circ> \<D>\<^sub>\<circ>
   (?\<CC>\<lparr>Comp\<rparr>)) =
                (EX g f b c a.
                    gf = [g, f]\<^sub>\<circ> &
                    g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c &
                    f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b);
          !!b c g a f.
             [| g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
             ==> g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 f : a \<mapsto>\<^bsub>?\<CC>\<^esub> c;
          !!c d h b g a f.
             [| h : c \<mapsto>\<^bsub>?\<CC>\<^esub> d;
                g : b \<mapsto>\<^bsub>?\<CC>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
             ==> h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 f =
                 h \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
                 (g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f) |]
       ==> ?W |]
    ==> ?W
theorem
  dghm_const_ObjMap_vsv:
    vsv (dghm_const ?\<CC> ?\<DD> ?a ?f\<lparr>ObjMap\<rparr>)
theorem
  dghm_const_ObjMap_vdomain:
    \<D>\<^sub>\<circ>
     (dghm_const ?\<CC> ?\<DD> ?a ?f\<lparr>ObjMap\<rparr>) =
    ?\<CC>\<lparr>Obj\<rparr>
theorem
  dghm_const_ObjMap_app:
    ?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
    dghm_const ?\<CC> ?\<DD> ?a ?f\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr> =
    ?a
theorem
  dghm_const_ArrMap_vsv:
    vsv (dghm_const ?\<CC> ?\<DD> ?a ?f\<lparr>ArrMap\<rparr>)
theorem
  dghm_const_ArrMap_vdomain:
    \<D>\<^sub>\<circ>
     (dghm_const ?\<CC> ?\<DD> ?a ?f\<lparr>ArrMap\<rparr>) =
    ?\<CC>\<lparr>Arr\<rparr>
theorem
  dghm_const_ArrMap_app:
    ?x \<in>\<^sub>\<circ> ?\<CC>\<lparr>Arr\<rparr> ==>
    dghm_const ?\<CC> ?\<DD> ?a ?f\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr> =
    ?f
locale finite_semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "finite_semicategory \<alpha> \<CC>"
locale category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "category \<alpha> \<CC>"
### theory "CZH_Foundations.CZH_SMC_Small_Semicategory"
### 1.641s elapsed time, 5.319s cpu time, 1.584s GC time
locale is_ft_dghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_ft_dghm \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_ft_dghmI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       !!a b.
          [| a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
             b \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
          ==> v11 (?\<FF>\<lparr>ArrMap\<rparr> \<restriction>\<^sup>l\<^sub>\<circ>
                   Hom ?\<AA> a b) |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ft_dghmD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
       ?b \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
    ==> v11 (?\<FF>\<lparr>ArrMap\<rparr> \<restriction>\<^sup>l\<^sub>\<circ>
             Hom ?\<AA> ?a ?b)
theorem
  is_ft_dghmE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          !!a b.
             [| a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
                b \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
             ==> v11 (?\<FF>\<lparr>ArrMap\<rparr> \<restriction>\<^sup>l\<^sub>\<circ>
                      Hom ?\<AA> a b) |]
       ==> ?W |]
    ==> ?W
locale is_fl_dghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_fl_dghm \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_fl_dghmI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       !!a b.
          [| a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
             b \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
          ==> ?\<FF>\<lparr>ArrMap\<rparr> `\<^sub>\<circ> Hom ?\<AA> a b =
              Hom ?\<BB> (?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr>)
               (?\<FF>\<lparr>ObjMap\<rparr>\<lparr>b\<rparr>) |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_fl_dghmD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
       ?b \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
    ==> ?\<FF>\<lparr>ArrMap\<rparr> `\<^sub>\<circ> Hom ?\<AA> ?a ?b =
        Hom ?\<BB> (?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr>)
         (?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?b\<rparr>)
theorem
  is_fl_dghmE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          !!a b.
             [| a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
                b \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
             ==> ?\<FF>\<lparr>ArrMap\<rparr> `\<^sub>\<circ>
                 Hom ?\<AA> a b =
                 Hom ?\<BB> (?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr>)
                  (?\<FF>\<lparr>ObjMap\<rparr>\<lparr>b\<rparr>) |]
       ==> ?W |]
    ==> ?W
locale is_ff_dghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_ff_dghm \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_ff_dghmI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ff_dghmD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ff_dghmE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_iso_dghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_iso_dghm \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_iso_dghmI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       v11 (?\<FF>\<lparr>ObjMap\<rparr>);
       v11 (?\<FF>\<lparr>ArrMap\<rparr>);
       \<R>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>) =
       ?\<BB>\<lparr>Obj\<rparr>;
       \<R>\<^sub>\<circ> (?\<FF>\<lparr>ArrMap\<rparr>) =
       ?\<BB>\<lparr>Arr\<rparr> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_iso_dghmD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    v11 (?\<FF>\<lparr>ObjMap\<rparr>)
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    v11 (?\<FF>\<lparr>ArrMap\<rparr>)
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<R>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>) =
    ?\<BB>\<lparr>Obj\<rparr>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<R>\<^sub>\<circ> (?\<FF>\<lparr>ArrMap\<rparr>) =
    ?\<BB>\<lparr>Arr\<rparr>
theorem
  is_iso_dghmE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          v11 (?\<FF>\<lparr>ObjMap\<rparr>);
          v11 (?\<FF>\<lparr>ArrMap\<rparr>);
          \<R>\<^sub>\<circ> (?\<FF>\<lparr>ObjMap\<rparr>) =
          ?\<BB>\<lparr>Obj\<rparr>;
          \<R>\<^sub>\<circ> (?\<FF>\<lparr>ArrMap\<rparr>) =
          ?\<BB>\<lparr>Arr\<rparr> |]
       ==> ?W |]
    ==> ?W
locale groupoid
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "groupoid \<alpha> \<CC>"
theorem
  groupoidI:
    [| category ?\<alpha> ?\<CC>;
       !!a b f.
          f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
          f : a \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<CC>\<^esub> b |]
    ==> groupoid ?\<alpha> ?\<CC>
theorem
  groupoidD:
    groupoid ?\<alpha> ?\<CC> ==> category ?\<alpha> ?\<CC>
    [| groupoid ?\<alpha> ?\<CC>;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?f : ?a \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<CC>\<^esub> ?b
theorem
  groupoidE:
    [| groupoid ?\<alpha> ?\<CC>;
       [| category ?\<alpha> ?\<CC>;
          !!a b f.
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
             f : a \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<CC>\<^esub> b |]
       ==> ?W |]
    ==> ?W
### theory "Draft.CZH_ECAT_Category"
### 5.057s elapsed time, 14.441s cpu time, 6.656s GC time
Loading theory "Draft.CZH_ECAT_Small_Category" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "Draft.CZH_ECAT_Small_Functor")
locale tiny_category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "tiny_category \<alpha> \<CC>"
theorem
  tiny_categoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>CId\<rparr>);
       vcard ?\<CC> = 6\<^sub>\<nat>;
       tiny_semicategory ?\<alpha> (cat_smc ?\<CC>);
       \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
       ?\<CC>\<lparr>Obj\<rparr>;
       !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
            ?\<CC>\<lparr>CId\<rparr>\<lparr>a\<rparr> : a \<mapsto>\<^bsub>?\<CC>\<^esub> a;
       !!a b f.
          f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
          ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          f =
          f;
       !!b c f.
          f : b \<mapsto>\<^bsub>?\<CC>\<^esub> c ==>
          f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> =
          f |]
    ==> tiny_category ?\<alpha> ?\<CC>
theorem
  tiny_categoryD:
    tiny_category ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    tiny_category ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    tiny_category ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>CId\<rparr>)
    tiny_category ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 6\<^sub>\<nat>
    tiny_category ?\<alpha> ?\<CC> ==>
    tiny_semicategory ?\<alpha> (cat_smc ?\<CC>)
    tiny_category ?\<alpha> ?\<CC> ==>
    \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
    ?\<CC>\<lparr>Obj\<rparr>
    [| tiny_category ?\<alpha> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> |]
    ==> ?\<CC>\<lparr>CId\<rparr>\<lparr>?a\<rparr> : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?a
    [| tiny_category ?\<alpha> ?\<CC>;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?\<CC>\<lparr>CId\<rparr>\<lparr>?b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f =
        ?f
    [| tiny_category ?\<alpha> ?\<CC>;
       ?f : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c |]
    ==> ?f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?\<CC>\<lparr>CId\<rparr>\<lparr>?b\<rparr> =
        ?f
theorem
  tiny_categoryE:
    [| tiny_category ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>CId\<rparr>); vcard ?\<CC> = 6\<^sub>\<nat>;
          tiny_semicategory ?\<alpha> (cat_smc ?\<CC>);
          \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
          ?\<CC>\<lparr>Obj\<rparr>;
          !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
               ?\<CC>\<lparr>CId\<rparr>\<lparr>a\<rparr> : a \<mapsto>\<^bsub>?\<CC>\<^esub> a;
          !!a b f.
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
             ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
             f =
             f;
          !!b c f.
             f : b \<mapsto>\<^bsub>?\<CC>\<^esub> c ==>
             f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
             ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> =
             f |]
       ==> ?W |]
    ==> ?W
locale tiny_category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "tiny_category \<alpha> \<CC>"
locale finite_category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "finite_category \<alpha> \<CC>"
theorem
  finite_categoryI:
    [| \<Z> ?\<alpha>; vfsequence ?\<CC>; vsv (?\<CC>\<lparr>CId\<rparr>);
       vcard ?\<CC> = 6\<^sub>\<nat>;
       finite_semicategory ?\<alpha> (cat_smc ?\<CC>);
       \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
       ?\<CC>\<lparr>Obj\<rparr>;
       !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
            ?\<CC>\<lparr>CId\<rparr>\<lparr>a\<rparr> : a \<mapsto>\<^bsub>?\<CC>\<^esub> a;
       !!a b f.
          f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
          ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          f =
          f;
       !!b c f.
          f : b \<mapsto>\<^bsub>?\<CC>\<^esub> c ==>
          f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> =
          f |]
    ==> finite_category ?\<alpha> ?\<CC>
theorem
  finite_categoryD:
    finite_category ?\<alpha> ?\<CC> ==> \<Z> ?\<alpha>
    finite_category ?\<alpha> ?\<CC> ==> vfsequence ?\<CC>
    finite_category ?\<alpha> ?\<CC> ==> vsv (?\<CC>\<lparr>CId\<rparr>)
    finite_category ?\<alpha> ?\<CC> ==> vcard ?\<CC> = 6\<^sub>\<nat>
    finite_category ?\<alpha> ?\<CC> ==>
    finite_semicategory ?\<alpha> (cat_smc ?\<CC>)
    finite_category ?\<alpha> ?\<CC> ==>
    \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
    ?\<CC>\<lparr>Obj\<rparr>
    [| finite_category ?\<alpha> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> |]
    ==> ?\<CC>\<lparr>CId\<rparr>\<lparr>?a\<rparr> : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?a
    [| finite_category ?\<alpha> ?\<CC>;
       ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b |]
    ==> ?\<CC>\<lparr>CId\<rparr>\<lparr>?b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?f =
        ?f
    [| finite_category ?\<alpha> ?\<CC>;
       ?f : ?b \<mapsto>\<^bsub>?\<CC>\<^esub> ?c |]
    ==> ?f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?\<CC>\<lparr>CId\<rparr>\<lparr>?b\<rparr> =
        ?f
theorem
  finite_categoryE:
    [| finite_category ?\<alpha> ?\<CC>;
       [| \<Z> ?\<alpha>; vfsequence ?\<CC>;
          vsv (?\<CC>\<lparr>CId\<rparr>); vcard ?\<CC> = 6\<^sub>\<nat>;
          finite_semicategory ?\<alpha> (cat_smc ?\<CC>);
          \<D>\<^sub>\<circ> (?\<CC>\<lparr>CId\<rparr>) =
          ?\<CC>\<lparr>Obj\<rparr>;
          !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
               ?\<CC>\<lparr>CId\<rparr>\<lparr>a\<rparr> : a \<mapsto>\<^bsub>?\<CC>\<^esub> a;
          !!a b f.
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b ==>
             ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
             f =
             f;
          !!b c f.
             f : b \<mapsto>\<^bsub>?\<CC>\<^esub> c ==>
             f \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
             ?\<CC>\<lparr>CId\<rparr>\<lparr>b\<rparr> =
             f |]
       ==> ?W |]
    ==> ?W
locale finite_category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "finite_category \<alpha> \<CC>"
### theory "Draft.CZH_ECAT_Small_Category"
### 14.229s elapsed time, 45.473s cpu time, 42.352s GC time
locale iso_digraph
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
  assumes "iso_digraph \<alpha> \<AA> \<BB>"
### theory "CZH_Foundations.CZH_DG_DGHM"
### 21.371s elapsed time, 65.140s cpu time, 50.107s GC time
Loading theory "CZH_Foundations.CZH_DG_TDGHM" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM")
Loading theory "CZH_Foundations.CZH_DG_Small_DGHM" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_DG_Small_TDGHM")
Loading theory "CZH_Foundations.CZH_DG_Subdigraph" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT")
Loading theory "CZH_Foundations.CZH_SMC_Semifunctor" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF" via "CZH_Foundations.CZH_SMC_Small_Semifunctor")
locale is_tm_dghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_tm_dghm \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_tm_dghmI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       digraph ?\<alpha> ?\<AA>; digraph ?\<alpha> ?\<BB>;
       ?\<FF>\<lparr>ObjMap\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>;
       ?\<FF>\<lparr>ArrMap\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tm_dghmD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    digraph ?\<alpha> ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    digraph ?\<alpha> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>ObjMap\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>ArrMap\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>
theorem
  is_tm_dghmE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          digraph ?\<alpha> ?\<AA>; digraph ?\<alpha> ?\<BB>;
          ?\<FF>\<lparr>ObjMap\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha>;
          ?\<FF>\<lparr>ArrMap\<rparr> \<in>\<^sub>\<circ> Vset ?\<alpha> |]
       ==> ?W |]
    ==> ?W
locale subdigraph
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "subdigraph \<alpha> \<BB> \<CC>"
theorem
  subdigraphI:
    [| digraph ?\<alpha> ?\<BB>; digraph ?\<alpha> ?\<CC>;
       !!a. a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> ==>
            a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
       !!a b f.
          f : a \<mapsto>\<^bsub>?\<BB>\<^esub> b ==>
          f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
    ==> ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  subdigraphD:
    ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    digraph ?\<alpha> ?\<BB>
    ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    digraph ?\<alpha> ?\<CC>
    [| ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> |]
    ==> ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>
    [| ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       ?f : ?a \<mapsto>\<^bsub>?\<BB>\<^esub> ?b |]
    ==> ?f : ?a \<mapsto>\<^bsub>?\<CC>\<^esub> ?b
theorem
  subdigraphE:
    [| ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| digraph ?\<alpha> ?\<BB>; digraph ?\<alpha> ?\<CC>;
          !!a. a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> ==>
               a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr>;
          !!a b f.
             f : a \<mapsto>\<^bsub>?\<BB>\<^esub> b ==>
             f : a \<mapsto>\<^bsub>?\<CC>\<^esub> b |]
       ==> ?W |]
    ==> ?W
locale is_tdghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_tdghm \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
locale is_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_semifunctor \<alpha> \<AA> \<BB> \<FF>"
theorem
  dghm_inc_ObjMap_vsv: vsv (dghm_inc ?\<BB> ?\<CC>\<lparr>ObjMap\<rparr>)
theorem
  dghm_inc_ObjMap_vdomain:
    \<D>\<^sub>\<circ> (dghm_inc ?\<BB> ?\<CC>\<lparr>ObjMap\<rparr>) =
    ?\<BB>\<lparr>Obj\<rparr>
theorem
  dghm_inc_ObjMap_app:
    ?x \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> ==>
    dghm_inc ?\<BB> ?\<CC>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr> = ?x
theorem
  dghm_inc_ArrMap_vsv: vsv (dghm_inc ?\<BB> ?\<CC>\<lparr>ArrMap\<rparr>)
theorem
  dghm_inc_ArrMap_vdomain:
    \<D>\<^sub>\<circ> (dghm_inc ?\<BB> ?\<CC>\<lparr>ArrMap\<rparr>) =
    ?\<BB>\<lparr>Arr\<rparr>
theorem
  dghm_inc_ArrMap_app:
    ?x \<in>\<^sub>\<circ> ?\<BB>\<lparr>Arr\<rparr> ==>
    dghm_inc ?\<BB> ?\<CC>\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr> = ?x
theorem
  is_semifunctorI:
    [| \<Z> ?\<alpha>; vfsequence ?\<FF>; semicategory ?\<alpha> ?\<AA>;
       semicategory ?\<alpha> ?\<BB>; vcard ?\<FF> = 4\<^sub>\<nat>;
       smcf_dghm ?\<FF> :
       smc_dg
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg
?\<BB>;
       ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>;
       ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>;
       !!b c g a f.
          [| g : b \<mapsto>\<^bsub>?\<AA>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<AA>\<^esub> b |]
          ==> ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>g \<circ>\<^sub>A\<^bsub>?\<AA>\<^esub>
            f\<rparr> =
              ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>g\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
              ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_semifunctorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<Z> ?\<alpha>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vfsequence ?\<FF>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    semicategory ?\<alpha> ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    semicategory ?\<alpha> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vcard ?\<FF> = 4\<^sub>\<nat>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    smcf_dghm ?\<FF> :
    smc_dg
     ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg
                                   ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?g : ?b \<mapsto>\<^bsub>?\<AA>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<AA>\<^esub> ?b |]
    ==> ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?g \<circ>\<^sub>A\<^bsub>?\<AA>\<^esub>
      ?f\<rparr> =
        ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?g\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
        ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?f\<rparr>
theorem
  is_semifunctorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| \<Z> ?\<alpha>; vfsequence ?\<FF>; semicategory ?\<alpha> ?\<AA>;
          semicategory ?\<alpha> ?\<BB>; vcard ?\<FF> = 4\<^sub>\<nat>;
          smcf_dghm ?\<FF> :
          smc_dg
           ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg
   ?\<BB>;
          ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>;
          ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>;
          !!b c g a f.
             [| g : b \<mapsto>\<^bsub>?\<AA>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<AA>\<^esub> b |]
             ==> ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>g \<circ>\<^sub>A\<^bsub>?\<AA>\<^esub>
               f\<rparr> =
                 ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>g\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
                 ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> |]
       ==> ?W |]
    ==> ?W
locale is_tiny_dghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_tiny_dghm \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_tdghmI:
    [| \<Z> ?\<alpha>; vfsequence ?\<NN>;
       ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       vcard ?\<NN> = 5\<^sub>\<nat>; vsv (?\<NN>\<lparr>NTMap\<rparr>);
       \<D>\<^sub>\<circ> (?\<NN>\<lparr>NTMap\<rparr>) =
       ?\<AA>\<lparr>Obj\<rparr>;
       ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>;
       ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>;
       ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>;
       ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB>;
       !!a. a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> ==>
            ?\<NN>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> |]
    ==> ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tdghmD:
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<Z> ?\<alpha>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vfsequence ?\<NN>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vcard ?\<NN> = 5\<^sub>\<nat>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vsv (?\<NN>\<lparr>NTMap\<rparr>)
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<D>\<^sub>\<circ> (?\<NN>\<lparr>NTMap\<rparr>) =
    ?\<AA>\<lparr>Obj\<rparr>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB>
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
    ==> ?\<NN>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr>
theorem
  is_tdghmE:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| \<Z> ?\<alpha>; vfsequence ?\<NN>;
          ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          vcard ?\<NN> = 5\<^sub>\<nat>; vsv (?\<NN>\<lparr>NTMap\<rparr>);
          \<D>\<^sub>\<circ> (?\<NN>\<lparr>NTMap\<rparr>) =
          ?\<AA>\<lparr>Obj\<rparr>;
          ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>;
          ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>;
          ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>;
          ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB>;
          !!a. a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> ==>
               ?\<NN>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> |]
       ==> ?W |]
    ==> ?W
theorem
  is_tiny_dghmI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       tiny_digraph ?\<alpha> ?\<AA>; tiny_digraph ?\<alpha> ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tiny_dghmD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    tiny_digraph ?\<alpha> ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    tiny_digraph ?\<alpha> ?\<BB>
theorem
  is_tiny_dghmE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          tiny_digraph ?\<alpha> ?\<AA>; tiny_digraph ?\<alpha> ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>\<alpha>\<^esub> \<BB>"
locale fl_subdigraph
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "fl_subdigraph \<alpha> \<BB> \<CC>"
### theory "CZH_Foundations.CZH_DG_Small_DGHM"
### 2.642s elapsed time, 10.370s cpu time, 1.707s GC time
theorem
  fl_subdigraphI:
    [| ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       dghm_inc ?\<BB> ?\<CC> :
       ?\<BB> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
    ==> ?\<BB>
        \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  fl_subdigraphD:
    ?\<BB>
    \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>
    ?\<BB>
    \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    dghm_inc ?\<BB> ?\<CC> :
    ?\<BB> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  fl_subdigraphE:
    [| ?\<BB>
       \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| ?\<BB>
          \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>;
          dghm_inc ?\<BB> ?\<CC> :
          ?\<BB> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
       ==> ?W |]
    ==> ?W
locale wide_subdigraph
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "wide_subdigraph \<alpha> \<BB> \<CC>"
locale semicategory
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "semicategory \<alpha> \<CC>"
theorem
  wide_subdigraphI:
    [| ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
            a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> |]
    ==> ?\<BB>
        \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  wide_subdigraphD:
    ?\<BB>
    \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    ?\<BB> \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>
    [| ?\<BB>
       \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       ?a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> |]
    ==> ?a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>
theorem
  wide_subdigraphE:
    [| ?\<BB>
       \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| ?\<BB>
          \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<CC>;
          !!a. a \<in>\<^sub>\<circ> ?\<CC>\<lparr>Obj\<rparr> ==>
               a \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> |]
       ==> ?W |]
    ==> ?W
theorem
  tdghm_dghm_comp_NTMap_vsv:
    vsv ((?\<NN> \<circ>\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>D\<^sub>G\<^sub>H\<^sub>M
          ?\<HH>)\<lparr>NTMap\<rparr>)
### theory "CZH_Foundations.CZH_DG_Subdigraph"
### 3.592s elapsed time, 13.303s cpu time, 2.304s GC time
theorem
  tdghm_dghm_comp_NTMap_vdomain:
    \<D>\<^sub>\<circ>
     ((?\<NN> \<circ>\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>D\<^sub>G\<^sub>H\<^sub>M
       \<FF>)\<lparr>NTMap\<rparr>) =
    \<AA>\<lparr>Obj\<rparr>
theorem
  tdghm_dghm_comp_NTMap_app:
    ?x \<in>\<^sub>\<circ> \<AA>\<lparr>Obj\<rparr> ==>
    (?\<NN> \<circ>\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>D\<^sub>G\<^sub>H\<^sub>M
     \<FF>)\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    ?\<NN>\<lparr>NTMap\<rparr>\<lparr>\<FF>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr>\<rparr>
theorem
  dghm_tdghm_comp_NTMap_vsv:
    vsv ((?\<HH> \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M
          ?\<NN>)\<lparr>NTMap\<rparr>)
theorem
  dghm_tdghm_comp_NTMap_vdomain:
    \<D>\<^sub>\<circ>
     ((?\<HH> \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M
       \<NN>)\<lparr>NTMap\<rparr>) =
    \<AA>\<lparr>Obj\<rparr>
theorem
  dghm_tdghm_comp_NTMap_app:
    ?x \<in>\<^sub>\<circ> \<AA>\<lparr>Obj\<rparr> ==>
    (?\<HH> \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M
     \<NN>)\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>\<NN>\<lparr>NTMap\<rparr>\<lparr>?x\<rparr>\<rparr>
### theory "CZH_Foundations.CZH_DG_TDGHM"
### 4.160s elapsed time, 14.560s cpu time, 2.600s GC time
Loading theory "CZH_Foundations.CZH_DG_Small_TDGHM" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF")
locale is_ft_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_ft_semifunctor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_ft_semifunctorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       smcf_dghm ?\<FF> :
       smc_dg
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
                                  ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ft_semifunctorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    smcf_dghm ?\<FF> :
    smc_dg
     ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
                               ?\<BB>
theorem
  is_ft_semifunctorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          smcf_dghm ?\<FF> :
          smc_dg
           ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
                                     ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_ft_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_tm_tdghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_tm_tdghm \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
theorem
  is_tm_tdghmI:
    [| \<Z> ?\<alpha>;
       ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
    ==> ?\<NN> :
        ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tm_tdghmD:
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<Z> ?\<alpha>
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tm_tdghmE:
    [| ?\<NN> :
       ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| \<Z> ?\<alpha>;
          ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_fl_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_fl_semifunctor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_fl_semifunctorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       smcf_dghm ?\<FF> :
       smc_dg
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
  ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_fl_semifunctorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    smcf_dghm ?\<FF> :
    smc_dg
     ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
                                     ?\<BB>
theorem
  is_fl_semifunctorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          smcf_dghm ?\<FF> :
          smc_dg
           ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
     ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_tiny_tdghm
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_tiny_tdghm \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
locale is_fl_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>\<alpha>\<^esub> \<BB>"
theorem
  is_tiny_tdghmI:
    [| \<Z> ?\<alpha>;
       ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
    ==> ?\<NN> :
        ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tiny_tdghmD:
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<Z> ?\<alpha>
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tiny_tdghmE:
    [| ?\<NN> :
       ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| \<Z> ?\<alpha>;
          ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<NN> : ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_ff_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_ff_semifunctor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_ff_semifunctorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ff_semifunctorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ff_semifunctorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
       ==> ?W |]
    ==> ?W
### theory "CZH_Foundations.CZH_DG_Small_TDGHM"
### 4.146s elapsed time, 10.795s cpu time, 5.708s GC time
locale is_iso_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_iso_semifunctor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_iso_semifunctorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       smcf_dghm ?\<FF> :
       smc_dg
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> smc_dg
                                ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_iso_semifunctorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    smcf_dghm ?\<FF> :
    smc_dg
     ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> smc_dg
                             ?\<BB>
theorem
  is_iso_semifunctorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          smcf_dghm ?\<FF> :
          smc_dg
           ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> smc_dg
                                   ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_iso_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_iso_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>\<alpha>\<^esub> \<BB>"
locale iso_semicategory
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
  assumes "iso_semicategory \<alpha> \<AA> \<BB>"
### theory "CZH_Foundations.CZH_SMC_Semifunctor"
### 10.549s elapsed time, 28.019s cpu time, 8.912s GC time
Loading theory "CZH_Foundations.CZH_SMC_NTSMCF" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF")
Loading theory "CZH_Foundations.CZH_SMC_Subsemicategory" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT")
Loading theory "CZH_Foundations.CZH_SMC_Small_Semifunctor" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "CZH_Foundations.CZH_SMC_Small_NTSMCF")
Loading theory "Draft.CZH_ECAT_Functor" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF" via "Draft.CZH_ECAT_Small_Functor")
locale is_tm_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_tm_semifunctor \<alpha> \<AA> \<BB> \<FF>"
locale is_ntsmcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_ntsmcf \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
locale subsemicategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "subsemicategory \<alpha> \<BB> \<CC>"
theorem
  is_tm_semifunctorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       smcf_dghm ?\<FF> :
       smc_dg
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> smc_dg
                        ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tm_semifunctorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    smcf_dghm ?\<FF> :
    smc_dg
     ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> smc_dg
                     ?\<BB>
theorem
  is_tm_semifunctorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          smcf_dghm ?\<FF> :
          smc_dg
           ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> smc_dg
                           ?\<BB> |]
       ==> ?W |]
    ==> ?W
theorem
  subsemicategoryI:
    [| semicategory ?\<alpha> ?\<BB>; semicategory ?\<alpha> ?\<CC>;
       smc_dg ?\<BB>
       \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg ?\<CC>;
       !!b c g a f.
          [| g : b \<mapsto>\<^bsub>?\<BB>\<^esub> c;
             f : a \<mapsto>\<^bsub>?\<BB>\<^esub> b |]
          ==> g \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub> f =
              g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f |]
    ==> ?\<BB>
        \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  subsemicategoryD:
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    semicategory ?\<alpha> ?\<BB>
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    semicategory ?\<alpha> ?\<CC>
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    smc_dg ?\<BB>
    \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg ?\<CC>
    [| ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       ?g : ?b \<mapsto>\<^bsub>?\<BB>\<^esub> ?c;
       ?f : ?a \<mapsto>\<^bsub>?\<BB>\<^esub> ?b |]
    ==> ?g \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub> ?f =
        ?g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> ?f
theorem
  subsemicategoryE:
    [| ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| semicategory ?\<alpha> ?\<BB>; semicategory ?\<alpha> ?\<CC>;
          smc_dg ?\<BB>
          \<subseteq>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg
                          ?\<CC>;
          !!b c g a f.
             [| g : b \<mapsto>\<^bsub>?\<BB>\<^esub> c;
                f : a \<mapsto>\<^bsub>?\<BB>\<^esub> b |]
             ==> g \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub> f =
                 g \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub> f |]
       ==> ?W |]
    ==> ?W
locale is_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_functor \<alpha> \<AA> \<BB> \<FF>"
locale is_tm_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>\<alpha>\<^esub> \<BB>"
theorem
  is_ntsmcfI:
    [| \<Z> ?\<alpha>; vfsequence ?\<NN>;
       ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       vcard ?\<NN> = 5\<^sub>\<nat>;
       ntsmcf_tdghm ?\<NN> :
       smcf_dghm
        ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M smcf_dghm ?\<GG> :
       smc_dg
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg
?\<BB>;
       ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>;
       ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>;
       ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>;
       ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB>;
       !!a b f.
          f : a \<mapsto>\<^bsub>?\<AA>\<^esub> b ==>
          ?\<NN>\<lparr>NTMap\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
          ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> =
          ?\<GG>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
          ?\<NN>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> |]
    ==> ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ntsmcfD:
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<Z> ?\<alpha>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vfsequence ?\<NN>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vcard ?\<NN> = 5\<^sub>\<nat>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ntsmcf_tdghm ?\<NN> :
    smcf_dghm
     ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M smcf_dghm ?\<GG> :
    smc_dg
     ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg
                                   ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB>
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?f : ?a \<mapsto>\<^bsub>?\<AA>\<^esub> ?b |]
    ==> ?\<NN>\<lparr>NTMap\<rparr>\<lparr>?b\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
        ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?f\<rparr> =
        ?\<GG>\<lparr>ArrMap\<rparr>\<lparr>?f\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
        ?\<NN>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr>
theorem
  is_ntsmcfE:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| \<Z> ?\<alpha>; vfsequence ?\<NN>;
          ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          vcard ?\<NN> = 5\<^sub>\<nat>;
          ntsmcf_tdghm ?\<NN> :
          smcf_dghm
           ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M smcf_dghm
                       ?\<GG> :
          smc_dg
           ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^bsub>?\<alpha>\<^esub> smc_dg
   ?\<BB>;
          ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>;
          ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>;
          ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>;
          ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB>;
          !!a b f.
             f : a \<mapsto>\<^bsub>?\<AA>\<^esub> b ==>
             ?\<NN>\<lparr>NTMap\<rparr>\<lparr>b\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
             ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> =
             ?\<GG>\<lparr>ArrMap\<rparr>\<lparr>f\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
             ?\<NN>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> |]
       ==> ?W |]
    ==> ?W
locale subsemicategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes
    "\<BB>
     \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>\<alpha>\<^esub> \<CC>"
theorem
  is_functorI:
    [| \<Z> ?\<alpha>; vfsequence ?\<FF>; category ?\<alpha> ?\<AA>;
       category ?\<alpha> ?\<BB>; vcard ?\<FF> = 4\<^sub>\<nat>;
       cf_smcf ?\<FF> :
       cat_smc
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
        ?\<BB>;
       ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>;
       ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>;
       !!c. c \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> ==>
            ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?\<AA>\<lparr>CId\<rparr>\<lparr>c\<rparr>\<rparr> =
            ?\<BB>\<lparr>CId\<rparr>\<lparr>?\<FF>\<lparr>ObjMap\<rparr>\<lparr>c\<rparr>\<rparr> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_functorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<Z> ?\<alpha>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vfsequence ?\<FF>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    category ?\<alpha> ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    category ?\<alpha> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vcard ?\<FF> = 4\<^sub>\<nat>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    cf_smcf ?\<FF> :
    cat_smc
     ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
     ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?c \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
    ==> ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?\<AA>\<lparr>CId\<rparr>\<lparr>?c\<rparr>\<rparr> =
        ?\<BB>\<lparr>CId\<rparr>\<lparr>?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?c\<rparr>\<rparr>
theorem
  is_functorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| \<Z> ?\<alpha>; vfsequence ?\<FF>; category ?\<alpha> ?\<AA>;
          category ?\<alpha> ?\<BB>; vcard ?\<FF> = 4\<^sub>\<nat>;
          cf_smcf ?\<FF> :
          cat_smc
           ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
           ?\<BB>;
          ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>;
          ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>;
          !!c. c \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> ==>
               ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?\<AA>\<lparr>CId\<rparr>\<lparr>c\<rparr>\<rparr> =
               ?\<BB>\<lparr>CId\<rparr>\<lparr>?\<FF>\<lparr>ObjMap\<rparr>\<lparr>c\<rparr>\<rparr> |]
       ==> ?W |]
    ==> ?W
locale is_ntsmcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes
    "\<NN> : \<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F \<GG> :
     \<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> : \<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_tiny_semifunctor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_tiny_semifunctor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_tiny_semifunctorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       smcf_dghm ?\<FF> :
       smc_dg
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> smc_dg
  ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tiny_semifunctorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    smcf_dghm ?\<FF> :
    smc_dg
     ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> smc_dg
                                     ?\<BB>
theorem
  is_tiny_semifunctorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          smcf_dghm ?\<FF> :
          smc_dg
           ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> smc_dg
     ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale fl_subsemicategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "fl_subsemicategory \<alpha> \<BB> \<CC>"
theorem
  fl_subsemicategoryI:
    [| ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       smc_dg ?\<BB>
       \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
                         ?\<CC> |]
    ==> ?\<BB>
        \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  fl_subsemicategoryD:
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    smc_dg ?\<BB>
    \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
                      ?\<CC>
theorem
  fl_subsemicategoryE:
    [| ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| ?\<BB>
          \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
          smc_dg ?\<BB>
          \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> smc_dg
                            ?\<CC> |]
       ==> ?W |]
    ==> ?W
### theory "CZH_Foundations.CZH_SMC_Small_Semifunctor"
### 7.201s elapsed time, 27.316s cpu time, 13.908s GC time
locale category
  fixes \<alpha> :: "V"
    and \<CC> :: "V"
  assumes "category \<alpha> \<CC>"
locale wide_subsemicategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes "wide_subsemicategory \<alpha> \<BB> \<CC>"
theorem
  wide_subsemicategoryI:
    [| ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       smc_dg ?\<BB>
       \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> smc_dg
                         ?\<CC> |]
    ==> ?\<BB>
        \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>
theorem
  wide_subsemicategoryD:
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>
    ?\<BB>
    \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC> ==>
    smc_dg ?\<BB>
    \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> smc_dg
                      ?\<CC>
theorem
  wide_subsemicategoryE:
    [| ?\<BB>
       \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> ?\<CC>;
       [| ?\<BB>
          \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
          smc_dg ?\<BB>
          \<subseteq>\<^sub>D\<^sub>G\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>?\<alpha>\<^esub> smc_dg
                            ?\<CC> |]
       ==> ?W |]
    ==> ?W
theorem
  ntsmcf_smcf_comp_NTMap_vdomain:
    \<D>\<^sub>\<circ>
     ((?\<NN> \<circ>\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>D\<^sub>G\<^sub>H\<^sub>M
       \<FF>)\<lparr>NTMap\<rparr>) =
    \<AA>\<lparr>Obj\<rparr>
theorem
  ntsmcf_smcf_comp_NTMap_app:
    ?x \<in>\<^sub>\<circ> \<AA>\<lparr>Obj\<rparr> ==>
    (?\<NN> \<circ>\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>D\<^sub>G\<^sub>H\<^sub>M
     \<FF>)\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    ?\<NN>\<lparr>NTMap\<rparr>\<lparr>\<FF>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr>\<rparr>
locale wide_subsemicategory
  fixes \<alpha> :: "V"
    and \<BB> :: "V"
    and \<CC> :: "V"
  assumes
    "\<BB>
     \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>w\<^sub>i\<^sub>d\<^sub>e\<^bsub>\<alpha>\<^esub> \<CC>"
theorem
  smcf_ntsmcf_comp_NTMap_vdomain:
    \<D>\<^sub>\<circ>
     ((?\<HH> \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M
       \<NN>)\<lparr>NTMap\<rparr>) =
    \<AA>\<lparr>Obj\<rparr>
theorem
  smcf_ntsmcf_comp_NTMap_app:
    ?x \<in>\<^sub>\<circ> \<AA>\<lparr>Obj\<rparr> ==>
    (?\<HH> \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M
     \<NN>)\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>\<NN>\<lparr>NTMap\<rparr>\<lparr>?x\<rparr>\<rparr>
### theory "CZH_Foundations.CZH_SMC_NTSMCF"
### 8.483s elapsed time, 31.373s cpu time, 15.085s GC time
Loading theory "CZH_Foundations.CZH_SMC_Small_NTSMCF" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF")
### theory "CZH_Foundations.CZH_SMC_Subsemicategory"
### 8.508s elapsed time, 31.462s cpu time, 15.085s GC time
locale is_ft_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_ft_functor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_ft_functorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       cf_smcf ?\<FF> :
       cat_smc
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
    ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ft_functorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    cf_smcf ?\<FF> :
    cat_smc
     ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
 ?\<BB>
theorem
  is_ft_functorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          cf_smcf ?\<FF> :
          cat_smc
           ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
       ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_ft_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_tm_ntsmcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_tm_ntsmcf \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
theorem
  is_tm_ntsmcfI:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ntsmcf_tdghm ?\<NN> :
       smcf_dghm
        ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>m smcf_dghm
      ?\<GG> :
       smc_dg
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> smc_dg
                        ?\<BB> |]
    ==> ?\<NN> :
        ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tm_ntsmcfD:
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ntsmcf_tdghm ?\<NN> :
    smcf_dghm
     ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>m smcf_dghm
   ?\<GG> :
    smc_dg
     ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> smc_dg
                     ?\<BB>
theorem
  is_tm_ntsmcfE:
    [| ?\<NN> :
       ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ntsmcf_tdghm ?\<NN> :
          smcf_dghm
           ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>m smcf_dghm
         ?\<GG> :
          smc_dg
           ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> smc_dg
                           ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_tm_ntsmcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes
    "\<NN> :
     \<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m \<GG> :
     \<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_fl_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_fl_functor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_fl_functorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       cf_smcf ?\<FF> :
       cat_smc
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
          ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_fl_functorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    cf_smcf ?\<FF> :
    cat_smc
     ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
       ?\<BB>
theorem
  is_fl_functorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          cf_smcf ?\<FF> :
          cat_smc
           ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> cat_smc
             ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_fl_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_tiny_ntsmcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_tiny_ntsmcf \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
locale is_ff_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_ff_functor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_ff_functorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ff_functorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ff_functorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>f\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>a\<^sub>i\<^sub>t\<^sub>h\<^sub>f\<^sub>u\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>f\<^sub>u\<^sub>l\<^sub>l\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
       ==> ?W |]
    ==> ?W
theorem
  is_tiny_ntsmcfI:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ntsmcf_tdghm ?\<NN> :
       smcf_dghm
        ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y smcf_dghm
                      ?\<GG> :
       smc_dg
        ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> smc_dg
  ?\<BB> |]
    ==> ?\<NN> :
        ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tiny_ntsmcfD:
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ntsmcf_tdghm ?\<NN> :
    smcf_dghm
     ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y smcf_dghm
                   ?\<GG> :
    smc_dg
     ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> smc_dg
                                     ?\<BB>
theorem
  is_tiny_ntsmcfE:
    [| ?\<NN> :
       ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ntsmcf_tdghm ?\<NN> :
          smcf_dghm
           ?\<FF> \<mapsto>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y smcf_dghm
                         ?\<GG> :
          smc_dg
           ?\<AA> \<mapsto>\<mapsto>\<^sub>D\<^sub>G\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> smc_dg
     ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_iso_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_iso_functor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_iso_functorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       cf_smcf ?\<FF> :
       cat_smc
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> cat_smc
  ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_iso_functorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    cf_smcf ?\<FF> :
    cat_smc
     ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> cat_smc
                                     ?\<BB>
theorem
  is_iso_functorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          cf_smcf ?\<FF> :
          cat_smc
           ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> cat_smc
     ?\<BB> |]
       ==> ?W |]
    ==> ?W
### theory "CZH_Foundations.CZH_SMC_Small_NTSMCF"
### 6.919s elapsed time, 18.121s cpu time, 9.466s GC time
locale is_iso_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_iso_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>\<alpha>\<^esub> \<BB>"
locale iso_category
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
  assumes "iso_category \<alpha> \<AA> \<BB>"
### theory "Draft.CZH_ECAT_Functor"
### 17.165s elapsed time, 51.562s cpu time, 24.975s GC time
Loading theory "Draft.CZH_ECAT_NTCF" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF")
Loading theory "Draft.CZH_ECAT_Small_Functor" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT" via "Draft.CZH_ECAT_Small_NTCF")
locale is_tm_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_tm_functor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_tm_functorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       cf_smcf ?\<FF> :
       cat_smc
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> cat_smc
                                ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tm_functorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    cf_smcf ?\<FF> :
    cat_smc
     ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> cat_smc
                             ?\<BB>
theorem
  is_tm_functorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          cf_smcf ?\<FF> :
          cat_smc
           ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> cat_smc
                                   ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_ntcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_ntcf \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
locale is_tm_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes
    "\<FF> :
     \<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>\<alpha>\<^esub> \<BB>"
theorem
  is_ntcfI:
    [| \<Z> ?\<alpha>; vfsequence ?\<NN>;
       ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       vcard ?\<NN> = 5\<^sub>\<nat>;
       ntcf_ntsmcf ?\<NN> :
       cf_smcf
        ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F cf_smcf ?\<GG> :
       cat_smc
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
        ?\<BB>;
       ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>;
       ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>;
       ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>;
       ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB> |]
    ==> ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_ntcfD:
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    \<Z> ?\<alpha>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vfsequence ?\<NN>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    vcard ?\<NN> = 5\<^sub>\<nat>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ntcf_ntsmcf ?\<NN> :
    cf_smcf
     ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F cf_smcf ?\<GG> :
    cat_smc
     ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
     ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB>
theorem
  is_ntcfE:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| \<Z> ?\<alpha>; vfsequence ?\<NN>;
          ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          vcard ?\<NN> = 5\<^sub>\<nat>;
          ntcf_ntsmcf ?\<NN> :
          cf_smcf
           ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F cf_smcf ?\<GG> :
          cat_smc
           ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<alpha>\<^esub> cat_smc
           ?\<BB>;
          ?\<NN>\<lparr>NTDom\<rparr> = ?\<FF>;
          ?\<NN>\<lparr>NTCod\<rparr> = ?\<GG>;
          ?\<NN>\<lparr>NTDGDom\<rparr> = ?\<AA>;
          ?\<NN>\<lparr>NTDGCod\<rparr> = ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_ntcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes
    "\<NN> : \<FF> \<mapsto>\<^sub>C\<^sub>F \<GG> :
     \<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_tiny_functor
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
  assumes "is_tiny_functor \<alpha> \<AA> \<BB> \<FF>"
theorem
  is_tiny_functorI:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       cf_smcf ?\<FF> :
       cat_smc
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> cat_smc
          ?\<BB> |]
    ==> ?\<FF> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tiny_functorD:
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<FF> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    cf_smcf ?\<FF> :
    cat_smc
     ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> cat_smc
       ?\<BB>
theorem
  is_tiny_functorE:
    [| ?\<FF> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<FF> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          cf_smcf ?\<FF> :
          cat_smc
           ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> cat_smc
             ?\<BB> |]
       ==> ?W |]
    ==> ?W
### theory "Draft.CZH_ECAT_Small_Functor"
### 6.021s elapsed time, 16.302s cpu time, 9.400s GC time
theorem
  ntcf_cf_comp_NTMap_vdomain:
    \<D>\<^sub>\<circ>
     ((?\<NN> \<circ>\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>D\<^sub>G\<^sub>H\<^sub>M
       \<FF>)\<lparr>NTMap\<rparr>) =
    \<AA>\<lparr>Obj\<rparr>
theorem
  ntcf_cf_comp_NTMap_app:
    ?x \<in>\<^sub>\<circ> \<AA>\<lparr>Obj\<rparr> ==>
    (?\<NN> \<circ>\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>D\<^sub>G\<^sub>H\<^sub>M
     \<FF>)\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    ?\<NN>\<lparr>NTMap\<rparr>\<lparr>\<FF>\<lparr>ObjMap\<rparr>\<lparr>?x\<rparr>\<rparr>
theorem
  cf_ntcf_comp_NTMap_vdomain:
    \<D>\<^sub>\<circ>
     ((?\<HH> \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M
       \<NN>)\<lparr>NTMap\<rparr>) =
    \<AA>\<lparr>Obj\<rparr>
theorem
  cf_ntcf_comp_NTMap_app:
    ?x \<in>\<^sub>\<circ> \<AA>\<lparr>Obj\<rparr> ==>
    (?\<HH> \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M\<^sub>-\<^sub>T\<^sub>D\<^sub>G\<^sub>H\<^sub>M
     \<NN>)\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> =
    ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>\<NN>\<lparr>NTMap\<rparr>\<lparr>?x\<rparr>\<rparr>
theorem
  ntcf_const_ObjMap_vsv:
    vsv (ntcf_const ?\<JJ> ?\<CC> ?f\<lparr>NTMap\<rparr>)
theorem
  ntcf_const_ObjMap_vdomain:
    \<D>\<^sub>\<circ> (ntcf_const ?\<JJ> ?\<CC> ?f\<lparr>NTMap\<rparr>) =
    ?\<JJ>\<lparr>Obj\<rparr>
theorem
  ntcf_const_ObjMap_app:
    ?x \<in>\<^sub>\<circ> ?\<JJ>\<lparr>Obj\<rparr> ==>
    ntcf_const ?\<JJ> ?\<CC> ?f\<lparr>NTMap\<rparr>\<lparr>?x\<rparr> = ?f
locale is_iso_ntcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_iso_ntcf \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
theorem
  is_iso_ntcfI:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       !!a. a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> ==>
            ?\<NN>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<BB>\<^esub> ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> |]
    ==> ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_iso_ntcfD:
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> |]
    ==> ?\<NN>\<lparr>NTMap\<rparr>\<lparr>?a\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<BB>\<^esub> ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr>
theorem
  is_iso_ntcfE:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          !!a. a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> ==>
               ?\<NN>\<lparr>NTMap\<rparr>\<lparr>a\<rparr> : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<BB>\<^esub> ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> |]
       ==> ?W |]
    ==> ?W
locale iso_functor
  fixes \<alpha> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
  assumes "iso_functor \<alpha> \<FF> \<GG>"
### theory "Draft.CZH_ECAT_NTCF"
### 10.556s elapsed time, 21.707s cpu time, 10.618s GC time
Loading theory "Draft.CZH_ECAT_Small_NTCF" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT" via "Draft.CZH_DG_FUNCT")
locale is_tm_ntcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_tm_ntcf \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
theorem
  is_tm_ntcfI:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ntcf_ntsmcf ?\<NN> :
       cf_smcf
        ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m cf_smcf
      ?\<GG> :
       cat_smc
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> cat_smc
                                ?\<BB> |]
    ==> ?\<NN> :
        ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tm_ntcfD:
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ntcf_ntsmcf ?\<NN> :
    cf_smcf
     ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m cf_smcf
   ?\<GG> :
    cat_smc
     ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> cat_smc
                             ?\<BB>
theorem
  is_tm_ntcfE:
    [| ?\<NN> :
       ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ntcf_ntsmcf ?\<NN> :
          cf_smcf
           ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m cf_smcf
         ?\<GG> :
          cat_smc
           ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> cat_smc
                                   ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_tm_ntcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes
    "\<NN> : \<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m \<GG> :
     \<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_tm_iso_ntcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_tm_iso_ntcf \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
theorem
  is_tm_iso_ntcfI:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<NN> :
       ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
    ==> ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tm_iso_ntcfD:
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tm_iso_ntcfE:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<NN> :
          ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_tiny_ntcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_tiny_ntcf \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
theorem
  is_tiny_ntcfI:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ntcf_ntsmcf ?\<NN> :
       cf_smcf
        ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y cf_smcf
                      ?\<GG> :
       cat_smc
        ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> cat_smc
          ?\<BB> |]
    ==> ?\<NN> :
        ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
        ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tiny_ntcfD:
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ntcf_ntsmcf ?\<NN> :
    cf_smcf
     ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y cf_smcf
                   ?\<GG> :
    cat_smc
     ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> cat_smc
       ?\<BB>
theorem
  is_tiny_ntcfE:
    [| ?\<NN> :
       ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ntcf_ntsmcf ?\<NN> :
          cf_smcf
           ?\<FF> \<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y cf_smcf
                         ?\<GG> :
          cat_smc
           ?\<AA> \<mapsto>\<mapsto>\<^sub>S\<^sub>M\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> cat_smc
             ?\<BB> |]
       ==> ?W |]
    ==> ?W
locale is_tiny_iso_ntcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes "is_tiny_iso_ntcf \<alpha> \<AA> \<BB> \<FF> \<GG> \<NN>"
theorem
  is_tiny_iso_ntcfI:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       ?\<NN> :
       ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
       ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
    ==> ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tiny_iso_ntcfD:
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>
    ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
    ?\<NN> :
    ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
    ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>
theorem
  is_tiny_iso_ntcfE:
    [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB>;
       [| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>i\<^sub>s\<^sub>o ?\<GG> : ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
          ?\<NN> :
          ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y ?\<GG> :
          ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>i\<^sub>n\<^sub>y\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
       ==> ?W |]
    ==> ?W
### theory "Draft.CZH_ECAT_Small_NTCF"
### 9.190s elapsed time, 16.567s cpu time, 10.105s GC time
Loading theory "Draft.CZH_DG_FUNCT" (required by "Draft.CZH_SMC_FUNCTMoreTemplates" via "Draft.CZH_SMC_FUNCT")
theorem
  dg_FUNCT_Dom_vsv:
    vsv (dg_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Dom\<rparr>)
theorem
  dg_FUNCT_Dom_vdomain:
    \<D>\<^sub>\<circ>
     (dg_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Dom\<rparr>) =
    ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>
theorem
  dg_FUNCT_Cod_vsv:
    vsv (dg_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Cod\<rparr>)
theorem
  dg_FUNCT_Cod_vdomain:
    \<D>\<^sub>\<circ>
     (dg_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Cod\<rparr>) =
    ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>
theorem
  dg_Funct_Dom_vsv:
    vsv (dg_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Dom\<rparr>)
theorem
  dg_Funct_Dom_vdomain:
    \<D>\<^sub>\<circ>
     (dg_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Dom\<rparr>) =
    tm_ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>
theorem
  dg_Funct_Cod_vsv:
    vsv (dg_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Cod\<rparr>)
theorem
  dg_Funct_Cod_vdomain:
    \<D>\<^sub>\<circ>
     (dg_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Cod\<rparr>) =
    tm_ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>
### theory "Draft.CZH_DG_FUNCT"
### 6.310s elapsed time, 6.838s cpu time, 0.734s GC time
Loading theory "Draft.CZH_SMC_FUNCT" (required by "Draft.CZH_SMC_FUNCTMoreTemplates")
locale is_ntcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes
    "\<NN> : \<FF> \<mapsto>\<^sub>C\<^sub>F \<GG> :
     \<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>\<alpha>\<^esub> \<BB>"
locale is_tm_ntcf
  fixes \<alpha> :: "V"
    and \<AA> :: "V"
    and \<BB> :: "V"
    and \<FF> :: "V"
    and \<GG> :: "V"
    and \<NN> :: "V"
  assumes
    "\<NN> : \<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m \<GG> :
     \<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>\<alpha>\<^esub> \<BB>"
### theory "Draft.CZH_SMC_FUNCT"
### 1.307s elapsed time, 1.487s cpu time, 0.247s GC time
Loading theory "Draft.CZH_SMC_FUNCTMoreTemplates"
val templateLemmas =
   [("CZH_SMC_FUNCT.smc_FUNCT_cs_intros", "vfsequence (cf_map ?\<FF>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_intros", "vfsequence (ntcf_arrow ?\<NN>)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("CZH_SMC_FUNCT.smc_FUNCT_Cod_vsv",
     "vsv (smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Cod\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_SMC_FUNCT.smc_FUNCT_Dom_vsv",
     "vsv (smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Dom\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_SMC_FUNCT.smc_FUNCT_Comp_vsv",
     "vsv (smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Comp\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_SMC_FUNCT.smc_Funct_Cod_vsv",
     "vsv (smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Cod\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_SMC_FUNCT.smc_Funct_Dom_vsv",
     "vsv (smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Dom\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_SMC_FUNCT.smc_Funct_Comp_vsv",
     "vsv (smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Comp\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "cf_map ?\<FF>\<lparr>ArrMap\<rparr> = ?\<FF>\<lparr>ArrMap\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_app
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "cf_map ?\<FF>\<lparr>ObjMap\<rparr> = ?\<FF>\<lparr>ObjMap\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_app
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "ntcf_arrow ?\<NN>\<lparr>NTMap\<rparr> = ?\<NN>\<lparr>NTMap\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_app
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "cf_of_cf_map ?\<AA> ?\<BB> ?\<FF>\<lparr>HomCod\<rparr> = ?\<BB>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 0),
       template_var 1)),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "cf_of_cf_map ?\<AA> ?\<BB> ?\<FF>\<lparr>HomDom\<rparr> = ?\<AA>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 0),
       template_var 2)),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "ntcf_of_ntcf_arrow ?\<AA> ?\<BB> ?\<NN>\<lparr>NTDGCod\<rparr> =
      ?\<BB>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 0),
       template_var 1)),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "ntcf_of_ntcf_arrow ?\<AA> ?\<BB> ?\<NN>\<lparr>NTDGDom\<rparr> =
      ?\<AA>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 0),
       template_var 2)),
    ("CZH_SMC_FUNCT.smc_dg_FUNCT",
     "smc_dg (smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>) =
      dg_FUNCT ?\<alpha> ?\<AA> ?\<BB>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("CZH_SMC_FUNCT.smc_dg_Funct",
     "smc_dg (smc_Funct ?\<alpha> ?\<AA> ?\<BB>) =
      dg_Funct ?\<alpha> ?\<AA> ?\<BB>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "cf_of_cf_map ?\<AA> ?\<BB> ?\<FF>\<lparr>ArrMap\<rparr> =
      ?\<FF>\<lparr>ArrMap\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 0),
       template_app
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "cf_of_cf_map ?\<AA> ?\<BB> ?\<FF>\<lparr>ObjMap\<rparr> =
      ?\<FF>\<lparr>ObjMap\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 0),
       template_app
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "ntcf_of_ntcf_arrow ?\<AA> ?\<BB> ?\<NN>\<lparr>NTMap\<rparr> =
      ?\<NN>\<lparr>NTMap\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 0),
       template_app
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("CZH_SMC_FUNCT.smc_FUNCT_composable_arrs_dg_FUNCT",
     "composable_arrs (dg_FUNCT ?\<alpha> ?\<AA> ?\<BB>) =
      composable_arrs (smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("CZH_SMC_FUNCT.smc_Funct_composable_arrs_dg_FUNCT",
     "composable_arrs (dg_Funct ?\<alpha> ?\<AA> ?\<BB>) =
      composable_arrs (smc_Funct ?\<alpha> ?\<AA> ?\<BB>)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "ntcf_of_ntcf_arrow ?\<AA> ?\<BB> ?\<NN>\<lparr>NTCod\<rparr> =
      cf_of_cf_map ?\<AA> ?\<BB> (?\<NN>\<lparr>NTCod\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "ntcf_of_ntcf_arrow ?\<AA> ?\<BB> ?\<NN>\<lparr>NTDom\<rparr> =
      cf_of_cf_map ?\<AA> ?\<BB> (?\<NN>\<lparr>NTDom\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "\<D>\<^sub>\<circ> (cf_map ?\<FF>) = 2\<^sub>\<nat>",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_hole 4)))),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "\<D>\<^sub>\<circ> (ntcf_arrow ?\<NN>) = 3\<^sub>\<nat>",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_hole 4)))),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      cf_of_cf_map ?\<AA> ?\<BB> (cf_map ?\<FF>) = ?\<FF>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ntcf_arrow_id ?\<AA> ?\<BB> (cf_map ?\<FF>) =
      ntcf_arrow (ntcf_id ?\<FF>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ntcf_arrow ?\<NN>\<lparr>NTCod\<rparr> = cf_map ?\<GG>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_hole 1),
         template_app (template_hole 0, template_var 1)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ntcf_arrow ?\<NN>\<lparr>NTDom\<rparr> = cf_map ?\<FF>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_hole 1),
         template_app (template_hole 0, template_var 2)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ntcf_of_ntcf_arrow ?\<AA> ?\<BB> (ntcf_arrow ?\<NN>) = ?\<NN>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("CZH_SMC_FUNCT.semicategory_smc_Funct",
     "[| tiny_category ?\<alpha> ?\<AA>; category ?\<alpha> ?\<BB> |]
      ==> semicategory ?\<alpha> (smc_Funct ?\<alpha> ?\<AA> ?\<BB>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("CZH_SMC_FUNCT.smc_FUNCT_is_arrD",
     "?\<NN> : ?\<FF> \<mapsto>\<^bsub>smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<GG> ==>
      ?\<FF> = cf_map (cf_of_cf_map ?\<AA> ?\<BB> ?\<FF>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_app (template_hole 3, template_var 5),
                        template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 2,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2))))),
    ("CZH_SMC_FUNCT.smc_FUNCT_is_arrD",
     "?\<NN> : ?\<FF> \<mapsto>\<^bsub>smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<GG> ==>
      ?\<GG> = cf_map (cf_of_cf_map ?\<AA> ?\<BB> ?\<GG>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_app (template_hole 3, template_var 5),
                        template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 1,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 1))))),
    ("CZH_SMC_FUNCT.smc_FUNCT_is_arrD",
     "?\<NN> : ?\<FF> \<mapsto>\<^bsub>smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<GG> ==>
      ?\<NN> = ntcf_arrow (ntcf_of_ntcf_arrow ?\<AA> ?\<BB> ?\<NN>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_app (template_hole 3, template_var 5),
                        template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 0))))),
    ("CZH_SMC_FUNCT.smc_Funct_is_arrD",
     "?\<NN> : ?\<FF> \<mapsto>\<^bsub>smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<GG> ==>
      ?\<FF> = cf_map (cf_of_cf_map ?\<AA> ?\<BB> ?\<FF>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_app (template_hole 3, template_var 5),
                        template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 2,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2))))),
    ("CZH_SMC_FUNCT.smc_Funct_is_arrD",
     "?\<NN> : ?\<FF> \<mapsto>\<^bsub>smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<GG> ==>
      ?\<GG> = cf_map (cf_of_cf_map ?\<AA> ?\<BB> ?\<GG>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_app (template_hole 3, template_var 5),
                        template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 1,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 1))))),
    ("CZH_SMC_FUNCT.smc_Funct_is_arrD",
     "?\<NN> : ?\<FF> \<mapsto>\<^bsub>smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<GG> ==>
      ?\<NN> = ntcf_arrow (ntcf_of_ntcf_arrow ?\<AA> ?\<BB> ?\<NN>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_app (template_hole 3, template_var 5),
                        template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 0))))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ntcf_arrow_id ?\<AA> ?\<BB> (cf_map ?\<FF>)\<lparr>NTMap\<rparr> =
      ntcf_id ?\<FF>\<lparr>NTMap\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_app (template_hole 2, template_var 0))),
           template_hole 1),
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 0, template_var 0)),
           template_hole 1)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ntcf_arrow_id ?\<AA> ?\<BB> (cf_map ?\<FF>)\<lparr>NTCod\<rparr> =
      cf_map (ntcf_id ?\<FF>\<lparr>NTCod\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_app (template_hole 2, template_var 0))),
           template_hole 1),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 0)),
             template_hole 1))))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ntcf_arrow_id ?\<AA> ?\<BB> (cf_map ?\<FF>)\<lparr>NTDom\<rparr> =
      cf_map (ntcf_id ?\<FF>\<lparr>NTDom\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_app (template_hole 2, template_var 0))),
           template_hole 1),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 0, template_var 0)),
             template_hole 1))))),
    ("CZH_SMC_FUNCT.smc_FUNCT_is_arrI",
     "?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ntcf_arrow
       ?\<NN> : cf_map
                 ?\<FF> \<mapsto>\<^bsub>smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<^esub> cf_map
        ?\<GG>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 4),
                     template_var 3)),
                 template_app (template_hole 1, template_var 2)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CZH_SMC_FUNCT.smc_Funct_is_arrI",
     "?\<NN> :
      ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ntcf_arrow
       ?\<NN> : cf_map
                 ?\<FF> \<mapsto>\<^bsub>smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<^esub> cf_map
        ?\<GG>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 4),
                     template_var 3)),
                 template_app (template_hole 1, template_var 2)),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      smc_FUNCT ?\<alpha> ?\<AA>
       ?\<BB>\<lparr>Cod\<rparr>\<lparr>ntcf_arrow ?\<NN>\<rparr> =
      cf_map ?\<GG>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 6, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 5),
                     template_var 4),
                   template_var 3)),
               template_hole 2)),
           template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      smc_FUNCT ?\<alpha> ?\<AA>
       ?\<BB>\<lparr>Dom\<rparr>\<lparr>ntcf_arrow ?\<NN>\<rparr> =
      cf_map ?\<FF>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 6, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 5),
                     template_var 4),
                   template_var 3)),
               template_hole 2)),
           template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 2)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<NN> :
      ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      smc_Funct ?\<alpha> ?\<AA>
       ?\<BB>\<lparr>Cod\<rparr>\<lparr>ntcf_arrow ?\<NN>\<rparr> =
      cf_map ?\<GG>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 6, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 5),
                     template_var 4),
                   template_var 3)),
               template_hole 2)),
           template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<NN> :
      ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      smc_Funct ?\<alpha> ?\<AA>
       ?\<BB>\<lparr>Dom\<rparr>\<lparr>ntcf_arrow ?\<NN>\<rparr> =
      cf_map ?\<FF>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 6, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 3, template_var 5),
                     template_var 4),
                   template_var 3)),
               template_hole 2)),
           template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 2)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_components",
     "smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Obj\<rparr> =
      cf_maps ?\<alpha> ?\<AA> ?\<BB>",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 6),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("CZH_SMC_FUNCT.smc_Funct_components",
     "smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Obj\<rparr> =
      tm_cf_maps ?\<alpha> ?\<AA> ?\<BB>",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 6),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_Comp_vdomain",
     "\<D>\<^sub>\<circ>
       (smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Comp\<rparr>) =
      composable_arrs (smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)))),
    ("CZH_SMC_FUNCT.smc_Funct_Comp_vdomain",
     "\<D>\<^sub>\<circ>
       (smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Comp\<rparr>) =
      composable_arrs (smc_Funct ?\<alpha> ?\<AA> ?\<BB>)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
      ==> (cf_map ?\<FF> = cf_map ?\<GG>) = (?\<FF> = ?\<GG>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_bimplication
        (template_equation
          (template_app (template_hole 0, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_components",
     "smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Comp\<rparr> =
      (\<lambda>\<MM>\<NN>\<in>\<^sub>\<circ>composable_arrs
        (dg_FUNCT ?\<alpha> ?\<AA> ?\<BB>).
          \<MM>\<NN>\<lparr>[]\<^sub>\<circ>\<rparr>
          \<bullet>\<^sub>N\<^sub>T\<^sub>C\<^sub>F\<^bsub>?\<AA>,?\<BB>\<^esub> \<MM>\<NN>\<lparr>1\<^sub>\<nat>\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 7),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1),
               template_var 0))),
         t_empty))),
    ("CZH_SMC_FUNCT.smc_FUNCT_Comp",
     "smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Comp\<rparr> =
      (\<lambda>\<GG>\<FF>\<in>\<^sub>\<circ>composable_arrs
        (smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>).
          \<GG>\<FF>\<lparr>[]\<^sub>\<circ>\<rparr>
          \<bullet>\<^sub>N\<^sub>T\<^sub>C\<^sub>F\<^bsub>?\<AA>,?\<BB>\<^esub> \<GG>\<FF>\<lparr>1\<^sub>\<nat>\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 6),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1),
               template_var 0))),
         t_empty))),
    ("CZH_SMC_FUNCT.smc_Funct_components",
     "smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Comp\<rparr> =
      (\<lambda>\<MM>\<NN>\<in>\<^sub>\<circ>composable_arrs
        (dg_Funct ?\<alpha> ?\<AA> ?\<BB>).
          \<MM>\<NN>\<lparr>[]\<^sub>\<circ>\<rparr>
          \<bullet>\<^sub>N\<^sub>T\<^sub>C\<^sub>F\<^bsub>?\<AA>,?\<BB>\<^esub> \<MM>\<NN>\<lparr>1\<^sub>\<nat>\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 7),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1),
               template_var 0))),
         t_empty))),
    ("CZH_SMC_FUNCT.smc_Funct_Comp",
     "smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Comp\<rparr> =
      (\<lambda>\<GG>\<FF>\<in>\<^sub>\<circ>composable_arrs
        (smc_Funct ?\<alpha> ?\<AA> ?\<BB>).
          \<GG>\<FF>\<lparr>[]\<^sub>\<circ>\<rparr>
          \<bullet>\<^sub>N\<^sub>T\<^sub>C\<^sub>F\<^bsub>?\<AA>,?\<BB>\<^esub> \<GG>\<FF>\<lparr>1\<^sub>\<nat>\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 6),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1),
               template_var 0))),
         t_empty))),
    ("CZH_SMC_FUNCT.smc_FUNCT_Cod_vrange",
     "\<R>\<^sub>\<circ>
       (smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Cod\<rparr>)
      \<subseteq>\<^sub>\<circ> smc_FUNCT ?\<alpha> ?\<AA>
                                 ?\<BB>\<lparr>Obj\<rparr>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_SMC_FUNCT.smc_FUNCT_Dom_vrange",
     "\<R>\<^sub>\<circ>
       (smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Dom\<rparr>)
      \<subseteq>\<^sub>\<circ> smc_FUNCT ?\<alpha> ?\<AA>
                                 ?\<BB>\<lparr>Obj\<rparr>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_SMC_FUNCT.smc_Funct_Cod_vrange",
     "\<R>\<^sub>\<circ>
       (smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Cod\<rparr>)
      \<subseteq>\<^sub>\<circ> smc_Funct ?\<alpha> ?\<AA>
                                 ?\<BB>\<lparr>Obj\<rparr>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_SMC_FUNCT.smc_Funct_Dom_vrange",
     "\<R>\<^sub>\<circ>
       (smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Dom\<rparr>)
      \<subseteq>\<^sub>\<circ> smc_Funct ?\<alpha> ?\<AA>
                                 ?\<BB>\<lparr>Obj\<rparr>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      (ntcf_arrow ?\<MM>
       \<bullet>\<^sub>N\<^sub>T\<^sub>C\<^sub>F\<^bsub>?\<AA>,?\<BB>\<^esub> ntcf_arrow
   ?\<NN>)\<lparr>NTMap\<rparr> =
      (?\<MM> \<bullet>\<^sub>N\<^sub>T\<^sub>S\<^sub>M\<^sub>C\<^sub>F
       ?\<NN>)\<lparr>NTMap\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 6, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 5),
                   template_var 4),
                 template_app (template_hole 2, template_var 0)),
               template_app (template_hole 2, template_var 1))),
           template_hole 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_hole 1)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      (ntcf_arrow ?\<MM>
       \<bullet>\<^sub>N\<^sub>T\<^sub>C\<^sub>F\<^bsub>?\<AA>,?\<BB>\<^esub> ntcf_arrow
   ?\<NN>)\<lparr>NTDom\<rparr> =
      cf_map
       ((?\<MM> \<bullet>\<^sub>N\<^sub>T\<^sub>S\<^sub>M\<^sub>C\<^sub>F
         ?\<NN>)\<lparr>NTDom\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 7, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 5),
                   template_var 4),
                 template_app (template_hole 3, template_var 0)),
               template_app (template_hole 3, template_var 1))),
           template_hole 2),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_hole 2))))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      (ntcf_arrow ?\<NN>
       \<bullet>\<^sub>N\<^sub>T\<^sub>C\<^sub>F\<^bsub>?\<AA>,?\<BB>\<^esub> ntcf_arrow
   ?\<MM>)\<lparr>NTCod\<rparr> =
      cf_map
       ((?\<NN> \<bullet>\<^sub>N\<^sub>T\<^sub>S\<^sub>M\<^sub>C\<^sub>F
         ?\<MM>)\<lparr>NTCod\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 7, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 5),
                   template_var 4),
                 template_app (template_hole 3, template_var 1)),
               template_app (template_hole 3, template_var 0))),
           template_hole 2),
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 2))))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_intros",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      cf_map ?\<FF> \<in>\<^sub>\<circ> cf_maps ?\<alpha> ?\<AA> ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 0)),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4, template_app (template_hole 3, t_empty))))
           ))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_intros",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      cf_map ?\<FF> \<in>\<^sub>\<circ> tm_cf_maps ?\<alpha> ?\<AA> ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 0)),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4, template_app (template_hole 3, t_empty))))
           ))),
    ("CZH_SMC_FUNCT.smc_FUNCT_is_arrD",
     "?\<NN> : ?\<FF> \<mapsto>\<^bsub>smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<GG> ==>
      ntcf_of_ntcf_arrow ?\<AA> ?\<BB> ?\<NN> :
      cf_of_cf_map ?\<AA> ?\<BB>
       ?\<FF> \<mapsto>\<^sub>C\<^sub>F cf_of_cf_map ?\<AA> ?\<BB> ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_app (template_hole 3, template_var 5),
                        template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 0))
           ))),
    ("CZH_SMC_FUNCT.smc_Funct_is_arrD",
     "?\<NN> : ?\<FF> \<mapsto>\<^bsub>smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<GG> ==>
      ntcf_of_ntcf_arrow ?\<AA> ?\<BB> ?\<NN> :
      cf_of_cf_map ?\<AA> ?\<BB>
       ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m cf_of_cf_map
                           ?\<AA> ?\<BB> ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_app (template_hole 3, template_var 5),
                        template_var 4),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 3),
                   template_var 2)),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 0))
           ))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "[| ?\<MM> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?\<NN> : ?\<FF>' \<mapsto>\<^sub>C\<^sub>F ?\<GG>' :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
      ==> (ntcf_arrow ?\<MM> = ntcf_arrow ?\<NN>) = (?\<MM> = ?\<NN>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_bimplication
        (template_equation
          (template_app (template_hole 0, template_var 3),
           template_app (template_hole 0, template_var 0)),
         template_equation (template_var 3, template_var 0)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_components",
     "smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Arr\<rparr> =
      ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 6),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("CZH_SMC_FUNCT.smc_Funct_components",
     "smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Arr\<rparr> =
      tm_ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 6),
       template_app
        (template_hole 5, template_app (template_hole 4, t_empty)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_simps",
     "[| ?\<MM> : ?\<GG> \<mapsto>\<^sub>C\<^sub>F ?\<HH> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
      ==> ntcf_arrow ?\<MM>
          \<bullet>\<^sub>N\<^sub>T\<^sub>C\<^sub>F\<^bsub>?\<AA>,?\<BB>\<^esub> ntcf_arrow
      ?\<NN> =
          ntcf_arrow
           (?\<MM> \<bullet>\<^sub>N\<^sub>T\<^sub>S\<^sub>M\<^sub>C\<^sub>F
            ?\<NN>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 6),
               template_var 5),
             template_app (template_hole 1, template_var 2)),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("CZH_SMC_FUNCT.subsemicategory_smc_Funct_smc_FUNCT",
     "[| \<Z> ?\<beta>; ?\<alpha> \<in>\<^sub>\<circ> ?\<beta>;
         tiny_category ?\<alpha> ?\<AA>; category ?\<alpha> ?\<BB> |]
      ==> smc_Funct ?\<alpha> ?\<AA> ?\<BB>
          \<subseteq>\<^sub>S\<^sub>M\<^sub>C\<^bsub>?\<beta>\<^esub> smc_FUNCT
                                 ?\<alpha> ?\<AA> ?\<BB>",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_intros",
     "[| ?\<FF>' = cf_map ?\<FF>;
         ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
      ==> ?\<FF>' \<in>\<^sub>\<circ> cf_maps ?\<alpha> ?\<AA> ?\<BB>",
     template_implication
      ([template_equation
         (template_var 4, template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 4),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3, template_app (template_hole 2, t_empty))))
           ))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_intros",
     "[| ?\<FF>' = cf_map ?\<FF>;
         ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
      ==> ?\<FF>' \<in>\<^sub>\<circ> tm_cf_maps ?\<alpha> ?\<AA> ?\<BB>",
     template_implication
      ([template_equation
         (template_var 4, template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 1),
                template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 4),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3, template_app (template_hole 2, t_empty))))
           ))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?\<FF>' = cf_map ?\<FF>; ?\<AA>' = ?\<AA>; ?\<BB>' = ?\<BB> |]
      ==> cf_of_cf_map ?\<AA> ?\<BB> ?\<FF>' :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_var 2, template_app (template_hole 1, template_var 3)),
        template_equation (template_var 1, template_var 5),
        template_equation (template_var 0, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 6),
                 template_var 1),
               template_var 0),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 4),
               template_var 2))
           ))),
    ("CZH_SMC_FUNCT.smc_FUNCT_components",
     "smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Cod\<rparr> =
      (\<lambda>\<NN>\<in>\<^sub>\<circ>ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>.
          \<NN>\<lparr>NTCod\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_app (template_hole 9, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 8),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))),
         t_empty))),
    ("CZH_SMC_FUNCT.smc_FUNCT_components",
     "smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Dom\<rparr> =
      (\<lambda>\<NN>\<in>\<^sub>\<circ>ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>.
          \<NN>\<lparr>NTDom\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_app (template_hole 9, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 8),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))),
         t_empty))),
    ("CZH_SMC_FUNCT.smc_Funct_components",
     "smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Cod\<rparr> =
      (\<lambda>\<NN>\<in>\<^sub>\<circ>tm_ntcf_arrows ?\<alpha> ?\<AA>
   ?\<BB>.
          \<NN>\<lparr>NTCod\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_app (template_hole 9, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 8),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))),
         t_empty))),
    ("CZH_SMC_FUNCT.smc_Funct_components",
     "smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Dom\<rparr> =
      (\<lambda>\<NN>\<in>\<^sub>\<circ>tm_ntcf_arrows ?\<alpha> ?\<AA>
   ?\<BB>.
          \<NN>\<lparr>NTDom\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_app (template_hole 9, template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 8),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6, template_app (template_hole 5, t_empty))),
         t_empty))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_intros",
     "?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ntcf_arrow ?\<NN>
      \<in>\<^sub>\<circ> ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 0)),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4, template_app (template_hole 3, t_empty))))
           ))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_intros",
     "?\<NN> :
      ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ntcf_arrow ?\<NN>
      \<in>\<^sub>\<circ> tm_ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 0)),
             template_app
              (template_hole 5,
               template_app
                (template_hole 4, template_app (template_hole 3, t_empty))))
           ))),
    ("CZH_SMC_FUNCT.smc_FUNCT_is_arrI'",
     "[| ?\<NN>' = ntcf_arrow ?\<NN>;
         ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?\<FF>' = cf_map ?\<FF>; ?\<GG>' = cf_map ?\<GG> |]
      ==> ?\<NN>' : ?\<FF>' \<mapsto>\<^bsub>smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<GG>'",
     template_implication
      ([template_equation
         (template_var 8, template_app (template_hole 4, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 7)
            ),
        template_equation
         (template_var 1, template_app (template_hole 2, template_var 3)),
        template_equation
         (template_var 0, template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4)),
                 template_var 1),
               template_var 0),
             template_var 8)
           ))),
    ("CZH_SMC_FUNCT.smc_Funct_is_arrI'",
     "[| ?\<NN>' = ntcf_arrow ?\<NN>;
         ?\<NN> :
         ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?\<FF>' = cf_map ?\<FF>; ?\<GG>' = cf_map ?\<GG> |]
      ==> ?\<NN>' : ?\<FF>' \<mapsto>\<^bsub>smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<GG>'",
     template_implication
      ([template_equation
         (template_var 8, template_app (template_hole 4, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 7)
            ),
        template_equation
         (template_var 1, template_app (template_hole 2, template_var 3)),
        template_equation
         (template_var 0, template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4)),
                 template_var 1),
               template_var 0),
             template_var 8)
           ))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_intros",
     "[| ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?\<NN>' = ntcf_arrow ?\<NN>; ?\<AA>' = ?\<AA>; ?\<BB>' = ?\<BB> |]
      ==> ntcf_of_ntcf_arrow ?\<AA> ?\<BB> ?\<NN>' :
          ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_var 2, template_app (template_hole 1, template_var 3)),
        template_equation (template_var 1, template_var 7),
        template_equation (template_var 0, template_var 6)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 8),
                     template_var 1),
                   template_var 0),
                 template_var 5),
               template_var 4),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 7),
                 template_var 6),
               template_var 2))
           ))),
    ("CZH_SMC_FUNCT.smc_FUNCT_Comp_app",
     "[| ?\<MM> : ?\<GG> \<mapsto>\<^bsub>smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<HH>;
         ?\<NN> : ?\<FF> \<mapsto>\<^bsub>smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<GG> |]
      ==> ?\<MM> \<circ>\<^sub>A\<^bsub>smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<^esub>
          ?\<NN> =
          ?\<MM>
          \<bullet>\<^sub>N\<^sub>T\<^sub>C\<^sub>F\<^bsub>?\<AA>,?\<BB>\<^esub> ?\<NN>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_app (template_hole 6, template_var 7),
                        template_var 6),
                      template_var 5)),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_app (template_hole 6, template_var 7),
                        template_var 6),
                      template_var 5)),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 6, template_var 7),
                     template_var 6),
                   template_var 5)),
               template_hole 3)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 6),
               template_var 5),
             template_var 2),
           template_var 0)))),
    ("CZH_SMC_FUNCT.smc_Funct_Comp_app",
     "[| ?\<MM> : ?\<GG> \<mapsto>\<^bsub>smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<HH>;
         ?\<NN> : ?\<FF> \<mapsto>\<^bsub>smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<GG> |]
      ==> ?\<MM> \<circ>\<^sub>A\<^bsub>smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<^esub>
          ?\<NN> =
          ?\<MM>
          \<bullet>\<^sub>N\<^sub>T\<^sub>C\<^sub>F\<^bsub>?\<AA>,?\<BB>\<^esub> ?\<NN>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_app (template_hole 6, template_var 7),
                        template_var 6),
                      template_var 5)),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_app (template_hole 6, template_var 7),
                        template_var 6),
                      template_var 5)),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_app (template_hole 6, template_var 7),
                     template_var 6),
                   template_var 5)),
               template_hole 3)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 6),
               template_var 5),
             template_var 2),
           template_var 0)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_Cod_vdomain",
     "\<D>\<^sub>\<circ>
       (smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Cod\<rparr>) =
      ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app
                          (template_app (template_hole 7, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 6)),
                 template_hole 5)))),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 6)),
       template_app
        (template_hole 9, template_app (template_hole 4, t_empty)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_Dom_vdomain",
     "\<D>\<^sub>\<circ>
       (smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Dom\<rparr>) =
      ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app
                          (template_app (template_hole 7, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 6)),
                 template_hole 5)))),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 6)),
       template_app
        (template_hole 9, template_app (template_hole 4, t_empty)))),
    ("CZH_SMC_FUNCT.smc_Funct_Cod_vdomain",
     "\<D>\<^sub>\<circ>
       (smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Cod\<rparr>) =
      tm_ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app
                          (template_app (template_hole 7, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 6)),
                 template_hole 5)))),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 6)),
       template_app
        (template_hole 9, template_app (template_hole 4, t_empty)))),
    ("CZH_SMC_FUNCT.smc_Funct_Dom_vdomain",
     "\<D>\<^sub>\<circ>
       (smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Dom\<rparr>) =
      tm_ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_hole 10,
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app
                          (template_app (template_hole 7, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 6)),
                 template_hole 5)))),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 6)),
       template_app
        (template_hole 9, template_app (template_hole 4, t_empty)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_Comp_vrange",
     "\<R>\<^sub>\<circ>
       (smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<lparr>Comp\<rparr>)
      \<subseteq>\<^sub>\<circ> ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app
                          (template_app (template_hole 8, template_var 2),
                           template_var 1),
                         template_var 0)),
                     template_hole 7)),
                 template_hole 6)))),
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_app
                (template_app (template_hole 8, template_var 2),
                 template_var 1),
               template_var 0)),
           template_hole 7)),
       template_app
        (template_hole 10, template_app (template_hole 5, t_empty)))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_intros",
     "[| ?\<NN>' = ntcf_arrow ?\<NN>;
         ?\<NN> : ?\<FF> \<mapsto>\<^sub>C\<^sub>F ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
      ==> ?\<NN>' \<in>\<^sub>\<circ> ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>",
     template_implication
      ([template_equation
         (template_var 6, template_app (template_hole 7, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 6, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 6),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3, template_app (template_hole 2, t_empty))))
           ))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_intros",
     "[| ?\<NN>' = ntcf_arrow ?\<NN>;
         ?\<NN> :
         ?\<FF> \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB> |]
      ==> ?\<NN>'
          \<in>\<^sub>\<circ> tm_ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>",
     template_implication
      ([template_equation
         (template_var 6, template_app (template_hole 7, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 6, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 6),
             template_app
              (template_hole 4,
               template_app
                (template_hole 3, template_app (template_hole 2, t_empty))))
           ))),
    ("CZH_SMC_FUNCT.smc_Funct_Comp_vrange",
     "category ?\<alpha> ?\<BB> ==>
      \<R>\<^sub>\<circ>
       (smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<lparr>Comp\<rparr>)
      \<subseteq>\<^sub>\<circ> tm_ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_var 1)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 12,
             template_app
              (template_hole 11,
               template_app
                (template_hole 10,
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 12,
                         template_app
                          (template_app
                            (template_app (template_hole 8, template_var 2),
                             template_var 0),
                           template_var 1)),
                       template_hole 7)),
                   template_hole 6)))),
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_app (template_hole 8, template_var 2),
                   template_var 0),
                 template_var 1)),
             template_hole 7)),
         template_app
          (template_hole 10, template_app (template_hole 5, t_empty))))),
    ("CZH_SMC_FUNCT.smc_FUNCT_is_arrE",
     "[| ?\<NN> : ?\<FF> \<mapsto>\<^bsub>smc_FUNCT ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<GG>;
         !!\<NN>' \<FF>' \<GG>'.
            [| \<NN>' : \<FF>' \<mapsto>\<^sub>C\<^sub>F \<GG>' :
               ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
               ?\<NN> = ntcf_arrow \<NN>'; ?\<FF> = cf_map \<FF>';
               ?\<GG> = cf_map \<GG>' |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_app (template_hole 5, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("CZH_SMC_FUNCT.smc_Funct_is_arrE",
     "[| ?\<NN> : ?\<FF> \<mapsto>\<^bsub>smc_Funct ?\<alpha> ?\<AA> ?\<BB>\<^esub> ?\<GG>;
         !!\<NN>' \<FF>' \<GG>'.
            [| \<NN>' :
               \<FF>' \<mapsto>\<^sub>C\<^sub>F\<^sub>.\<^sub>t\<^sub>m \<GG>' :
               ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
               ?\<NN> = ntcf_arrow \<NN>'; ?\<FF> = cf_map \<FF>';
               ?\<GG> = cf_map \<GG>' |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_app (template_hole 5, template_var 6),
                        template_var 5),
                      template_var 4)),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("CZH_SMC_FUNCT.smc_FUNCT_cs_intros",
     "?\<NN> \<in>\<^sub>\<circ> tm_ntcf_arrows ?\<alpha> ?\<AA> ?\<BB> ==>
      ?\<NN> \<in>\<^sub>\<circ> ntcf_arrows ?\<alpha> ?\<AA> ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, t_empty))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 3),
             template_app
              (template_hole 8,
               template_app
                (template_hole 7, template_app (template_hole 6, t_empty))))
           )))]:
   (string * thm * template) list
### theory "Draft.CZH_SMC_FUNCTMoreTemplates"
### 0.566s elapsed time, 0.782s cpu time, 0.128s GC time
val it = (): unit
