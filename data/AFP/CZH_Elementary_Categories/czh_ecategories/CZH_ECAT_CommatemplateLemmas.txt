   [("CZH_ECAT_Comma.op_cf_commma_obj_flip_vsv",
     "vsv (op_cf_commma_obj_flip ?\<GG> ?\<HH>)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("CZH_ECAT_Comma.cat_cf_obj_comma_Cod_vsv",
     "vsv (?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Cod\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cat_cf_obj_comma_Dom_vsv",
     "vsv (?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Dom\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cat_cf_obj_comma_CId_vsv",
     "vsv (?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>CId\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cat_cf_obj_comma_Comp_vsv",
     "vsv (?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Comp\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cat_comma_Cod_vsv",
     "vsv (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Cod\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cat_comma_Dom_vsv",
     "vsv (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Dom\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cat_comma_CId_vsv",
     "vsv (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>CId\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cat_comma_Comp_vsv",
     "vsv (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Comp\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cat_obj_cf_comma_Cod_vsv",
     "vsv (?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Cod\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cat_obj_cf_comma_Dom_vsv",
     "vsv (?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Dom\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cat_obj_cf_comma_CId_vsv",
     "vsv (?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>CId\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cat_obj_cf_comma_Comp_vsv",
     "vsv (?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Comp\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cf_arr_cf_comma_ArrMap_vsv",
     "vsv (?g \<^sub>A\<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>ArrMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cf_arr_cf_comma_ObjMap_vsv",
     "vsv (?g \<^sub>A\<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>ObjMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cf_cf_arr_comma_ArrMap_vsv",
     "vsv (?\<FF> \<^sub>C\<^sub>F\<down>\<^sub>A ?g\<lparr>ArrMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cf_cf_arr_comma_ObjMap_vsv",
     "vsv (?\<FF> \<^sub>C\<^sub>F\<down>\<^sub>A ?g\<lparr>ObjMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cf_cf_obj_comma_proj_ArrMap_vsv",
     "vsv (?\<FF> \<^sub>C\<^sub>F\<Sqinter>\<^sub>O ?b\<lparr>ArrMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cf_cf_obj_comma_proj_ObjMap_vsv",
     "vsv (?\<FF> \<^sub>C\<^sub>F\<Sqinter>\<^sub>O ?b\<lparr>ObjMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cf_comma_proj_left_ArrMap_vsv",
     "vsv (?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>ArrMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cf_comma_proj_left_ObjMap_vsv",
     "vsv (?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>ObjMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cf_comma_proj_right_ArrMap_vsv",
     "vsv (?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>ArrMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cf_comma_proj_right_ObjMap_vsv",
     "vsv (?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>ObjMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cf_obj_cf_comma_proj_ArrMap_vsv",
     "vsv (?b \<^sub>O\<Sqinter>\<^sub>C\<^sub>F ?\<FF>\<lparr>ArrMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cf_obj_cf_comma_proj_ObjMap_vsv",
     "vsv (?b \<^sub>O\<Sqinter>\<^sub>C\<^sub>F ?\<FF>\<lparr>ObjMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.op_cf_comma_ArrMap_vsv",
     "vsv (op_cf_comma ?\<GG> ?\<HH>\<lparr>ArrMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.op_cf_obj_comma_ArrMap_vsv",
     "vsv (op_cf_obj_comma ?\<FF> ?b\<lparr>ArrMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.op_cf_obj_comma_ObjMap_vsv",
     "vsv (op_cf_obj_comma ?\<FF> ?b\<lparr>ObjMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.op_obj_cf_comma_ArrMap_vsv",
     "vsv (op_obj_cf_comma ?b ?\<FF>\<lparr>ArrMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.op_obj_cf_comma_ObjMap_vsv",
     "vsv (op_obj_cf_comma ?b ?\<FF>\<lparr>ObjMap\<rparr>)",
     template_predicate
      (
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0))
         )),
    ("CZH_ECAT_Comma.cat_comma_components",
     "?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr> =
      cat_comma_Arr ?\<GG> ?\<HH>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CZH_ECAT_Comma.cat_comma_components",
     "?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr> =
      cat_comma_Obj ?\<GG> ?\<HH>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_components",
     "?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>HomCod\<rparr> =
      ?\<GG>\<lparr>HomDom\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 3, template_var 1), template_hole 0))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_components",
     "?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>HomDom\<rparr> =
      ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_components",
     "?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>HomCod\<rparr> =
      ?\<HH>\<lparr>HomDom\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 3, template_var 0), template_hole 0))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_components",
     "?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>HomDom\<rparr> =
      ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CZH_ECAT_Comma.op_cf_comma_components",
     "op_cf_comma ?\<GG> ?\<HH>\<lparr>ObjMap\<rparr> =
      op_cf_commma_obj_flip ?\<GG> ?\<HH>",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CZH_ECAT_Comma.op_cf_comma_components",
     "op_cf_comma ?\<GG> ?\<HH>\<lparr>HomDom\<rparr> =
      op_cat (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CZH_ECAT_Comma.op_cf_comma_components",
     "op_cf_comma ?\<GG> ?\<HH>\<lparr>HomCod\<rparr> =
      (op_cf
        ?\<HH>) \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F (op_cf ?\<GG>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("CZH_ECAT_Comma.cat_comma_components",
     "?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Dom\<rparr> =
      (\<lambda>F\<in>\<^sub>\<circ>cat_comma_Arr ?\<GG> ?\<HH>.
          F\<lparr>[]\<^sub>\<circ>\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         t_empty))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ?\<FF> \<^sub>C\<^sub>F\<Sqinter>\<^sub>O ?b\<lparr>HomCod\<rparr> =
      ?\<AA>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0),
         template_var 3))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ?b \<^sub>O\<Sqinter>\<^sub>C\<^sub>F ?\<FF>\<lparr>HomCod\<rparr> =
      ?\<AA>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_hole 0),
         template_var 3))),
    ("CZH_ECAT_Comma.cat_comma_components",
     "?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Cod\<rparr> =
      (\<lambda>F\<in>\<^sub>\<circ>cat_comma_Arr ?\<GG> ?\<HH>.
          F\<lparr>1\<^sub>\<nat>\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_hole 4),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         t_empty))),
    ("CZH_ECAT_Comma.cf_arr_cf_comma_components",
     "?g \<^sub>A\<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>HomCod\<rparr> =
      (?\<FF>\<lparr>HomCod\<rparr>\<lparr>Dom\<rparr>\<lparr>?g\<rparr>) \<down>\<^sub>C\<^sub>F ?\<FF>",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 2)),
                 template_hole 0)),
             template_var 1)),
         template_var 0))),
    ("CZH_ECAT_Comma.cf_arr_cf_comma_components",
     "?g \<^sub>A\<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>HomDom\<rparr> =
      (?\<FF>\<lparr>HomCod\<rparr>\<lparr>Cod\<rparr>\<lparr>?g\<rparr>) \<down>\<^sub>C\<^sub>F ?\<FF>",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_hole 1)),
                 template_hole 0)),
             template_var 1)),
         template_var 0))),
    ("CZH_ECAT_Comma.cf_cf_arr_comma_components",
     "?\<FF> \<^sub>C\<^sub>F\<down>\<^sub>A ?g\<lparr>HomCod\<rparr> =
      ?\<FF> \<^sub>C\<^sub>F\<down> (?\<FF>\<lparr>HomCod\<rparr>\<lparr>Cod\<rparr>\<lparr>?g\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 2),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_hole 2)),
               template_hole 0)),
           template_var 0)))),
    ("CZH_ECAT_Comma.cf_cf_arr_comma_components",
     "?\<FF> \<^sub>C\<^sub>F\<down>\<^sub>A ?g\<lparr>HomDom\<rparr> =
      ?\<FF> \<^sub>C\<^sub>F\<down> (?\<FF>\<lparr>HomCod\<rparr>\<lparr>Dom\<rparr>\<lparr>?g\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_hole 1)),
               template_hole 0)),
           template_var 0)))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_components",
     "?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>ObjMap\<rparr> =
      (\<lambda>a\<in>\<^sub>\<circ>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>.
          a\<lparr>[]\<^sub>\<circ>\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_hole 4),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_hole 1)),
         t_empty))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ?\<FF> \<^sub>C\<^sub>F\<Sqinter>\<^sub>O ?b\<lparr>HomDom\<rparr> =
      ?\<FF> \<^sub>C\<^sub>F\<down> ?b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      ?b \<^sub>O\<Sqinter>\<^sub>C\<^sub>F ?\<FF>\<lparr>HomDom\<rparr> =
      ?b \<down>\<^sub>C\<^sub>F ?\<FF>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_components",
     "?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>ObjMap\<rparr> =
      (\<lambda>a\<in>\<^sub>\<circ>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>.
          a\<lparr>1\<^sub>\<nat>\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_hole 5),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0)),
             template_hole 2)),
         t_empty))),
    ("CZH_ECAT_Comma.op_cf_commma_obj_flip_vdomain",
     "\<D>\<^sub>\<circ> (op_cf_commma_obj_flip ?\<GG> ?\<HH>) =
      ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0)),
                 template_hole 2)))),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_ECAT_Comma.op_cf_commma_obj_flip_v11",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> v11 (op_cf_commma_obj_flip ?\<GG> ?\<HH>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CZH_ECAT_Comma.cat_comma_Comp_vdomain",
     "\<D>\<^sub>\<circ>
       (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Comp\<rparr>) =
      cat_comma_composable ?\<GG> ?\<HH>",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("CZH_ECAT_Comma.category_cat_comma",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> category ?\<alpha>
           (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CZH_ECAT_Comma.tiny_category_cat_comma",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> tiny_category ?\<alpha>
           (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> |]
      ==> category ?\<alpha> (?\<FF> \<^sub>C\<^sub>F\<down> ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_hole 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> |]
      ==> category ?\<alpha> (?b \<down>\<^sub>C\<^sub>F ?\<FF>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_hole 2)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("CZH_ECAT_Comma.op_cf_comma_ArrMap_v11",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> v11 (op_cf_comma ?\<GG> ?\<HH>\<lparr>ArrMap\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               template_hole 0))
           ))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_components",
     "?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>ArrMap\<rparr> =
      (\<lambda>f\<in>\<^sub>\<circ>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>.
          f\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>[]\<^sub>\<circ>\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 1),
             template_var 0)),
         template_hole 8),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0)),
             template_hole 5)),
         t_empty))),
    ("CZH_ECAT_Comma.cat_cf_obj_comma_Cod_vdomain",
     "\<D>\<^sub>\<circ>
       (?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Cod\<rparr>) =
      ?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Arr\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_ECAT_Comma.cat_cf_obj_comma_Dom_vdomain",
     "\<D>\<^sub>\<circ>
       (?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Dom\<rparr>) =
      ?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Arr\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_ECAT_Comma.cat_comma_Cod_vdomain",
     "\<D>\<^sub>\<circ>
       (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Cod\<rparr>) =
      ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_ECAT_Comma.cat_comma_Dom_vdomain",
     "\<D>\<^sub>\<circ>
       (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Dom\<rparr>) =
      ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_ECAT_Comma.cat_obj_cf_comma_Cod_vdomain",
     "\<D>\<^sub>\<circ>
       (?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Cod\<rparr>) =
      ?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Arr\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_ECAT_Comma.cat_obj_cf_comma_Dom_vdomain",
     "\<D>\<^sub>\<circ>
       (?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Dom\<rparr>) =
      ?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Arr\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 0)),
                     template_hole 2)),
                 template_hole 1)))),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_ArrMap_vdomain",
     "\<D>\<^sub>\<circ>
       (?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>ArrMap\<rparr>) =
      ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_var 0)),
                     template_hole 3)),
                 template_hole 2)))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_ObjMap_vdomain",
     "\<D>\<^sub>\<circ>
       (?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>ObjMap\<rparr>) =
      ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_var 0)),
                     template_hole 3)),
                 template_hole 2)))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_ArrMap_vdomain",
     "\<D>\<^sub>\<circ>
       (?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>ArrMap\<rparr>) =
      ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_var 0)),
                     template_hole 3)),
                 template_hole 2)))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_ObjMap_vdomain",
     "\<D>\<^sub>\<circ>
       (?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>ObjMap\<rparr>) =
      ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_var 0)),
                     template_hole 3)),
                 template_hole 2)))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_ECAT_Comma.op_cf_comma_ArrMap_vdomain",
     "\<D>\<^sub>\<circ> (op_cf_comma ?\<GG> ?\<HH>\<lparr>ArrMap\<rparr>) =
      ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 4, template_var 1),
                         template_var 0)),
                     template_hole 3)),
                 template_hole 2)))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_components'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>HomCod\<rparr> =
          ?\<AA>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_hole 0),
         template_var 4))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_components'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>HomCod\<rparr> =
          ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_hole 0),
         template_var 1))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_components",
     "?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>ArrMap\<rparr> =
      (\<lambda>f\<in>\<^sub>\<circ>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>.
          f\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>1\<^sub>\<nat>\<rparr>)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, template_var 1),
             template_var 0)),
         template_hole 8),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_var 0)),
             template_hole 5)),
         t_empty))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?g : ?c \<mapsto>\<^bsub>?\<BB>\<^esub> ?c' |]
      ==> ?g \<^sub>A\<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>HomCod\<rparr> =
          ?c \<down>\<^sub>C\<^sub>F ?\<FF>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 3)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 3)))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?g : ?c \<mapsto>\<^bsub>?\<BB>\<^esub> ?c' |]
      ==> ?g \<^sub>A\<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>HomDom\<rparr> =
          ?c' \<down>\<^sub>C\<^sub>F ?\<FF>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 3)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 3)))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?g : ?c \<mapsto>\<^bsub>?\<BB>\<^esub> ?c' |]
      ==> ?\<FF> \<^sub>C\<^sub>F\<down>\<^sub>A ?g\<lparr>HomCod\<rparr> =
          ?\<FF> \<^sub>C\<^sub>F\<down> ?c'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 1)))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?g : ?c \<mapsto>\<^bsub>?\<BB>\<^esub> ?c' |]
      ==> ?\<FF> \<^sub>C\<^sub>F\<down>\<^sub>A ?g\<lparr>HomDom\<rparr> =
          ?\<FF> \<^sub>C\<^sub>F\<down> ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 2)))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_is_functor",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH> :
          ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<AA>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               template_var 4),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_is_functor",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH> :
          ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CZH_ECAT_Comma.cat_comma_components'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr> =
          cat_comma_Arr ?\<GG> ?\<HH>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("CZH_ECAT_Comma.cat_comma_components'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr> =
          cat_comma_Obj ?\<GG> ?\<HH>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_components'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>HomDom\<rparr> =
          ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_components'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>HomDom\<rparr> =
          ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_is_tm_functor",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH> :
          ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<AA>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               template_var 4),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_is_tm_functor",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH> :
          ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               template_var 1),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      \<D>\<^sub>\<circ>
       (?\<FF> \<^sub>C\<^sub>F\<Sqinter>\<^sub>O ?b\<lparr>ObjMap\<rparr>) =
      ?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 4, template_var 1),
                           template_var 0)),
                       template_hole 3)),
                   template_hole 2)))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_hole 3)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      \<D>\<^sub>\<circ>
       (?b \<^sub>O\<Sqinter>\<^sub>C\<^sub>F ?\<FF>\<lparr>ArrMap\<rparr>) =
      ?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Arr\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 4, template_var 0),
                           template_var 1)),
                       template_hole 3)),
                   template_hole 2)))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1)),
             template_hole 3)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      \<D>\<^sub>\<circ>
       (?b \<^sub>O\<Sqinter>\<^sub>C\<^sub>F ?\<FF>\<lparr>ObjMap\<rparr>) =
      ?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 4, template_var 0),
                           template_var 1)),
                       template_hole 3)),
                   template_hole 2)))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1)),
             template_hole 3)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      \<D>\<^sub>\<circ> (op_cf_obj_comma ?\<FF> ?b\<lparr>ArrMap\<rparr>) =
      ?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Arr\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 4, template_var 1),
                           template_var 0)),
                       template_hole 3)),
                   template_hole 2)))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_var 0)),
             template_hole 3)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "?\<FF> :
      ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB> ==>
      \<D>\<^sub>\<circ> (op_obj_cf_comma ?b ?\<FF>\<lparr>ArrMap\<rparr>) =
      ?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Arr\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 4, template_var 0),
                           template_var 1)),
                       template_hole 3)),
                   template_hole 2)))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 1)),
             template_hole 3)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_hole 0)))),
    ("CZH_ECAT_Comma.op_cf_comma_is_functor",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> op_cf_comma ?\<GG> ?\<HH> :
          op_cat
           (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>) \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> (op_cf
       ?\<HH>) \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F (op_cf ?\<GG>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 5),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CZH_ECAT_Comma.op_cf_comma_is_iso_functor",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> op_cf_comma ?\<GG> ?\<HH> :
          op_cat
           (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>) \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> (op_cf
 ?\<HH>) \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F (op_cf ?\<GG>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 5),
                 template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 1, template_var 2))),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("CZH_ECAT_Comma.op_cf_comma_proj_left",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> op_cf (?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>) =
          (op_cf
            ?\<HH>) \<Sqinter>\<^sub>C\<^sub>F (op_cf
           ?\<GG>) \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M
          op_cf_comma ?\<GG> ?\<HH>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 4, template_var 0)),
               template_app (template_hole 4, template_var 2))),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("CZH_ECAT_Comma.op_cf_comma_proj_right",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> op_cf (?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>) =
          (op_cf
            ?\<HH>) \<^sub>C\<^sub>F\<Sqinter> (op_cf
           ?\<GG>) \<circ>\<^sub>D\<^sub>G\<^sub>H\<^sub>M
          op_cf_comma ?\<GG> ?\<HH>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 4, template_var 0)),
               template_app (template_hole 4, template_var 2))),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("CZH_ECAT_Comma.cat_comma_components'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Dom\<rparr> =
          (\<lambda>F\<in>\<^sub>\<circ>cat_comma_Arr ?\<GG> ?\<HH>.
              F\<lparr>[]\<^sub>\<circ>\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0)),
           template_hole 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           t_empty)))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_is_functor'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<AA>' = ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH> :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<AA>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 2),
                template_var 4),
              template_var 1)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 1, template_var 3),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 6),
                 template_var 0),
               template_var 5),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1))
           ))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_is_functor'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<AA>' = ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH> |]
      ==> ?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH> :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 2),
                template_var 4),
              template_var 1)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 1, template_var 3),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 6),
                 template_var 0),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1))
           ))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_is_tm_functor'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<GG>\<HH> =
         ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH> :
          ?\<GG>\<HH> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<AA>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 2),
                template_var 4),
              template_var 1)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 1, template_var 3),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 6),
                 template_var 0),
               template_var 5),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1))
           ))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_is_tm_functor'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<GG>\<HH> =
         ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH> |]
      ==> ?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH> :
          ?\<GG>\<HH> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 2),
                template_var 4),
              template_var 1)
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 1, template_var 3),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 6),
                 template_var 0),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1))
           ))),
    ("CZH_ECAT_Comma.cat_comma_components'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Cod\<rparr> =
          (\<lambda>F\<in>\<^sub>\<circ>cat_comma_Arr ?\<GG> ?\<HH>.
              F\<lparr>1\<^sub>\<nat>\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 0)),
           template_hole 4),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           t_empty)))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
         ?\<AA>' = ?\<FF> \<^sub>C\<^sub>F\<down> ?b |]
      ==> ?\<FF> \<^sub>C\<^sub>F\<Sqinter>\<^sub>O ?b :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<AA>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_hole 3)))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 5),
                 template_var 0),
               template_var 4),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
         ?\<AA>' = ?b \<down>\<^sub>C\<^sub>F ?\<FF> |]
      ==> ?b \<^sub>O\<Sqinter>\<^sub>C\<^sub>F ?\<FF> :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<AA>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_hole 3)))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 5),
                 template_var 0),
               template_var 4),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
         ?\<AA>' = ?b \<down>\<^sub>C\<^sub>F ?\<FF> |]
      ==> ?b \<^sub>O\<Sqinter>\<^sub>C\<^sub>F ?\<FF> :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<AA>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_hole 3)))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 5),
                 template_var 0),
               template_var 4),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2))
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
         ?\<FF>b = ?\<FF> \<^sub>C\<^sub>F\<down> ?b |]
      ==> ?\<FF> \<^sub>C\<^sub>F\<Sqinter>\<^sub>O ?b :
          ?\<FF>b \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>t\<^sub>m\<^bsub>?\<alpha>\<^esub> ?\<AA>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_hole 3)))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 1, template_var 2),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 7, template_var 5),
                 template_var 0),
               template_var 4),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_components'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>ObjMap\<rparr> =
          (\<lambda>a\<in>\<^sub>\<circ>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>.
              a\<lparr>[]\<^sub>\<circ>\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 0)),
           template_hole 4),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 0)),
               template_hole 1)),
           t_empty)))),
    ("CZH_ECAT_Comma.cat_cf_obj_comma_Cod_app",
     "[| ?ABF = [?A, ?B, ?F]\<^sub>\<circ>;
         ?ABF
         \<in>\<^sub>\<circ> ?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Arr\<rparr> |]
      ==> ?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Cod\<rparr>\<lparr>?ABF\<rparr> =
          ?B",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 4)),
                template_var 3)),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_var 0)),
                  template_hole 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 0)),
           template_var 5),
         template_var 3))),
    ("CZH_ECAT_Comma.cat_cf_obj_comma_Dom_app",
     "[| ?ABF = [?A, ?B, ?F]\<^sub>\<circ>;
         ?ABF
         \<in>\<^sub>\<circ> ?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Arr\<rparr> |]
      ==> ?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Dom\<rparr>\<lparr>?ABF\<rparr> =
          ?A",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 4)),
                template_var 3)),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_var 0)),
                  template_hole 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 0)),
           template_var 5),
         template_var 4))),
    ("CZH_ECAT_Comma.cat_comma_Cod_app",
     "[| ?ABF = [?A, ?B, ?F]\<^sub>\<circ>;
         ?ABF
         \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Cod\<rparr>\<lparr>?ABF\<rparr> =
          ?B",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 4)),
                template_var 3)),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_var 0)),
                  template_hole 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 0)),
           template_var 5),
         template_var 3))),
    ("CZH_ECAT_Comma.cat_comma_Dom_app",
     "[| ?ABF = [?A, ?B, ?F]\<^sub>\<circ>;
         ?ABF
         \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Dom\<rparr>\<lparr>?ABF\<rparr> =
          ?A",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 4)),
                template_var 3)),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_var 0)),
                  template_hole 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 0)),
           template_var 5),
         template_var 4))),
    ("CZH_ECAT_Comma.cat_obj_cf_comma_Cod_app",
     "[| ?ABF = [?A, ?B, ?F]\<^sub>\<circ>;
         ?ABF
         \<in>\<^sub>\<circ> ?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Arr\<rparr> |]
      ==> ?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Cod\<rparr>\<lparr>?ABF\<rparr> =
          ?B",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 4)),
                template_var 3)),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_var 0)),
                  template_hole 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 0)),
           template_var 5),
         template_var 3))),
    ("CZH_ECAT_Comma.cat_obj_cf_comma_Dom_app",
     "[| ?ABF = [?A, ?B, ?F]\<^sub>\<circ>;
         ?ABF
         \<in>\<^sub>\<circ> ?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Arr\<rparr> |]
      ==> ?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Dom\<rparr>\<lparr>?ABF\<rparr> =
          ?A",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 4)),
                template_var 3)),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_var 0)),
                  template_hole 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 0)),
           template_var 5),
         template_var 4))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_components'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>ObjMap\<rparr> =
          (\<lambda>a\<in>\<^sub>\<circ>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>.
              a\<lparr>1\<^sub>\<nat>\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0)),
           template_hole 5),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 0)),
               template_hole 2)),
           t_empty)))),
    ("CZH_ECAT_Comma.op_cf_commma_obj_flip_app'",
     "?x \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr> ==>
      op_cf_commma_obj_flip ?\<GG> ?\<HH>\<lparr>?x\<rparr> =
      [?x\<lparr>1\<^sub>\<nat>\<rparr>, ?x\<lparr>[]\<^sub>\<circ>\<rparr>,
       ?x\<lparr>2\<^sub>\<nat>\<rparr>]\<^sub>\<circ>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app (template_hole 10, template_var 1),
                      template_var 0)),
                  template_hole 9)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_app
                    (template_app (template_hole 11, template_var 2),
                     template_app (template_hole 4, template_hole 3)))),
               template_app
                (template_app (template_hole 11, template_var 2),
                 template_hole 5))),
           template_app
            (template_app (template_hole 11, template_var 2),
             template_app
              (template_hole 4,
               template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)))))))),
    ("CZH_ECAT_Comma.op_cf_commma_obj_flip_vrange",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> \<R>\<^sub>\<circ> (op_cf_commma_obj_flip ?\<GG> ?\<HH>) =
          (op_cf
            ?\<HH>) \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F (op_cf
                        ?\<GG>)\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 2),
                       template_var 0)),
                   template_hole 3)))),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 1, template_var 2))),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_ArrMap_vrange",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> \<R>\<^sub>\<circ>
           (?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>ArrMap\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<AA>\<lparr>Arr\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 0)),
                       template_hole 2)),
                   template_hole 1)))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)),
             template_hole 2)),
         template_app
          (template_app (template_hole 7, template_var 4),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_ObjMap_vrange",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> \<R>\<^sub>\<circ>
           (?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>ObjMap\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 0)),
                       template_hole 2)),
                   template_hole 1)))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)),
             template_hole 2)),
         template_app
          (template_app (template_hole 7, template_var 4),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_ArrMap_vrange",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> \<R>\<^sub>\<circ>
           (?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>ArrMap\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<BB>\<lparr>Arr\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 0)),
                       template_hole 2)),
                   template_hole 1)))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)),
             template_hole 2)),
         template_app
          (template_app (template_hole 7, template_var 1),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_ObjMap_vrange",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> \<R>\<^sub>\<circ>
           (?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>ObjMap\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 0)),
                       template_hole 2)),
                   template_hole 1)))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)),
             template_hole 2)),
         template_app
          (template_app (template_hole 7, template_var 1),
           template_hole 0)))),
    ("CZH_ECAT_Comma.op_cf_commma_obj_flip_app",
     "[| ?A = [?a, ?b, ?f]\<^sub>\<circ>;
         ?A \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr> |]
      ==> op_cf_commma_obj_flip ?\<GG> ?\<HH>\<lparr>?A\<rparr> =
          [?b, ?a, ?f]\<^sub>\<circ>",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 4)),
                template_var 3)),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 1),
                      template_var 0)),
                  template_hole 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 5),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 3)),
               template_var 4)),
           template_var 2)))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?g : ?c \<mapsto>\<^bsub>?\<BB>\<^esub> ?c' |]
      ==> \<D>\<^sub>\<circ>
           (?g \<^sub>A\<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>ArrMap\<rparr>) =
          ?c' \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Arr\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 4, template_var 0),
                           template_var 3)),
                       template_hole 3)),
                   template_hole 2)))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 3)),
             template_hole 3)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3)),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?g : ?c \<mapsto>\<^bsub>?\<BB>\<^esub> ?c' |]
      ==> \<D>\<^sub>\<circ>
           (?g \<^sub>A\<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>ObjMap\<rparr>) =
          ?c' \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 4, template_var 0),
                           template_var 3)),
                       template_hole 3)),
                   template_hole 2)))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 3)),
             template_hole 3)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3)),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?g : ?c \<mapsto>\<^bsub>?\<BB>\<^esub> ?c' |]
      ==> \<D>\<^sub>\<circ>
           (?\<FF> \<^sub>C\<^sub>F\<down>\<^sub>A ?g\<lparr>ArrMap\<rparr>) =
          ?\<FF> \<^sub>C\<^sub>F\<down> ?c\<lparr>Arr\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 4, template_var 3),
                           template_var 0)),
                       template_hole 3)),
                   template_hole 2)))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 0)),
             template_hole 3)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?g : ?c \<mapsto>\<^bsub>?\<BB>\<^esub> ?c' |]
      ==> \<D>\<^sub>\<circ>
           (?\<FF> \<^sub>C\<^sub>F\<down>\<^sub>A ?g\<lparr>ObjMap\<rparr>) =
          ?\<FF> \<^sub>C\<^sub>F\<down> ?c\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app
                          (template_app (template_hole 4, template_var 3),
                           template_var 0)),
                       template_hole 3)),
                   template_hole 2)))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 0)),
             template_hole 3)),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_components'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>ArrMap\<rparr> =
          (\<lambda>f\<in>\<^sub>\<circ>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>.
              f\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>[]\<^sub>\<circ>\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 2),
               template_var 0)),
           template_hole 8),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 0)),
               template_hole 5)),
           t_empty)))),
    ("CZH_ECAT_Comma.cat_comma_CId_vdomain",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> \<D>\<^sub>\<circ>
           (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>CId\<rparr>) =
          ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 0)),
                       template_hole 2)),
                   template_hole 1)))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)),
             template_hole 2)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cat_comma_Cod_vrange",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> \<R>\<^sub>\<circ>
           (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Cod\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 0)),
                       template_hole 2)),
                   template_hole 1)))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)),
             template_hole 2)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cat_comma_Dom_vrange",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> \<R>\<^sub>\<circ>
           (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Dom\<rparr>)
          \<subseteq>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 3, template_var 2),
                           template_var 0)),
                       template_hole 2)),
                   template_hole 1)))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 0)),
             template_hole 2)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?g : ?c \<mapsto>\<^bsub>?\<BB>\<^esub> ?c';
         ?\<AA>' = ?\<FF> \<^sub>C\<^sub>F\<down> ?c;
         ?\<BB>' = ?\<FF> \<^sub>C\<^sub>F\<down> ?c' |]
      ==> ?\<FF> \<^sub>C\<^sub>F\<down>\<^sub>A ?g :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 1, template_var 5),
            template_var 4)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 1, template_var 5),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 8),
                 template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2))
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?g : ?c \<mapsto>\<^bsub>?\<BB>\<^esub> ?c';
         ?\<AA>' = ?c' \<down>\<^sub>C\<^sub>F ?\<FF>;
         ?\<BB>' = ?c \<down>\<^sub>C\<^sub>F ?\<FF> |]
      ==> ?g \<^sub>A\<down>\<^sub>C\<^sub>F ?\<FF> :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 1, template_var 3),
            template_var 5)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 1, template_var 4),
            template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 8),
                 template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 5))
           ))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_components'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>ArrMap\<rparr> =
          (\<lambda>f\<in>\<^sub>\<circ>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>.
              f\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>1\<^sub>\<nat>\<rparr>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app (template_hole 9, template_var 2),
               template_var 0)),
           template_hole 8),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 0)),
               template_hole 5)),
           t_empty)))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_ObjMap_app",
     "[| ?A = [?a, ?b, ?f]\<^sub>\<circ>;
         [?a, ?b, ?f]\<^sub>\<circ>
         \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>?A\<rparr> =
          ?a",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 4)),
                template_var 3)),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_var 4)),
                      template_var 3)),
                  template_var 2)),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_var 0)),
                  template_hole 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_hole 0)),
           template_var 5),
         template_var 4))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_ObjMap_app",
     "[| ?A = [?a, ?b, ?f]\<^sub>\<circ>;
         [?a, ?b, ?f]\<^sub>\<circ>
         \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr> |]
      ==> ?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>?A\<rparr> =
          ?b",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 4)),
                template_var 3)),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_var 4)),
                      template_var 3)),
                  template_var 2)),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_var 0)),
                  template_hole 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_hole 0)),
           template_var 5),
         template_var 3))),
    ("CZH_ECAT_Comma.cat_comma_ObjD",
     "[| [?a, ?b, ?f]\<^sub>\<circ>
         \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_hole 6,
                        template_app
                         (template_app (template_hole 6, template_hole 5),
                          template_var 8)),
                      template_var 7)),
                  template_var 6)),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4)),
                  template_hole 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 8),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_hole 1)))
           ))),
    ("CZH_ECAT_Comma.cat_comma_ObjD",
     "[| [?a, ?b, ?f]\<^sub>\<circ>
         \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_hole 6,
                        template_app
                         (template_app (template_hole 6, template_hole 5),
                          template_var 8)),
                      template_var 7)),
                  template_var 6)),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4)),
                  template_hole 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 7),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 1)))
           ))),
    ("CZH_ECAT_Comma.op_cf_comma_ArrMap_vrange",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> \<R>\<^sub>\<circ>
           (op_cf_comma ?\<GG> ?\<HH>\<lparr>ArrMap\<rparr>) =
          (op_cf
            ?\<HH>) \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F (op_cf
                        ?\<GG>)\<lparr>Arr\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 5, template_var 2),
                           template_var 0)),
                       template_hole 4)),
                   template_hole 3)))),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 0)),
             template_hole 4)),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 1, template_var 2))),
           template_hole 0)))),
    ("CZH_ECAT_Comma.cat_comma_ArrI",
     "[| ?F \<in>\<^sub>\<circ> cat_comma_Hom ?\<GG> ?\<HH> ?A ?B;
         ?A \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>;
         ?B \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr> |]
      ==> ?F \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 3),
                      template_var 2),
                    template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2)),
                  template_hole 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 3),
                      template_var 2)),
                  template_hole 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 4),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2)),
                 template_hole 0)))
           ))),
    ("CZH_ECAT_Comma.cat_comma_ArrD",
     "[| [?A, ?B, ?F]\<^sub>\<circ>
         \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?A \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 7, template_hole 6),
                          template_var 8)),
                      template_var 7)),
                  template_var 6)),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4)),
                  template_hole 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 8),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 5),
                     template_var 4)),
                 template_hole 0)))
           ))),
    ("CZH_ECAT_Comma.cat_comma_ArrD",
     "[| [?A, ?B, ?F]\<^sub>\<circ>
         \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?B \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 7, template_hole 6),
                          template_var 8)),
                      template_var 7)),
                  template_var 6)),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4)),
                  template_hole 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 7),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 5),
                     template_var 4)),
                 template_hole 0)))
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
         ?\<AA>' = op_cat (?\<FF> \<^sub>C\<^sub>F\<down> ?b);
         ?\<BB>' = ?b \<down>\<^sub>C\<^sub>F (op_cf ?\<FF>) |]
      ==> op_cf_obj_comma ?\<FF> ?b :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_hole 6)))
            ),
        template_equation
         (template_var 1,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2))),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 2, template_var 2),
            template_app (template_hole 1, template_var 3)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 10, template_var 6),
                 template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
         ?\<AA>' = op_cat (?\<FF> \<^sub>C\<^sub>F\<down> ?b);
         ?\<BB>' = ?b \<down>\<^sub>C\<^sub>F (op_cf ?\<FF>) |]
      ==> op_cf_obj_comma ?\<FF> ?b :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_hole 7)))
            ),
        template_equation
         (template_var 1,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2))),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 3, template_var 2),
            template_app (template_hole 2, template_var 3)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 6),
                 template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
         ?\<AA>' = op_cat (?b \<down>\<^sub>C\<^sub>F ?\<FF>);
         ?\<BB>' = (op_cf ?\<FF>) \<^sub>C\<^sub>F\<down> ?b |]
      ==> op_obj_cf_comma ?b ?\<FF> :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_hole 7)))
            ),
        template_equation
         (template_var 1,
          template_app
           (template_hole 5,
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 3))),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 3)),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 6),
                 template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3))
           ))),
    ("CZH_ECAT_Comma.op_cf_comma_is_functor'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<AA>' =
         op_cat (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>);
         ?\<BB>' =
         (op_cf
           ?\<HH>) \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F (op_cf ?\<GG>) |]
      ==> op_cf_comma ?\<GG> ?\<HH> :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 7),
                  template_var 3),
                template_var 5),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_hole 3,
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 2))),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 2)),
            template_app (template_hole 1, template_var 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 7),
                 template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2))
           ))),
    ("CZH_ECAT_Comma.op_cf_comma_is_iso_functor'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<AA>' =
         op_cat (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>);
         ?\<BB>' =
         (op_cf
           ?\<HH>) \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F (op_cf ?\<GG>) |]
      ==> op_cf_comma ?\<GG> ?\<HH> :
          ?\<AA>' \<mapsto>\<mapsto>\<^sub>C\<^sub>.\<^sub>i\<^sub>s\<^sub>o\<^bsub>?\<alpha>\<^esub> ?\<BB>'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 7),
                  template_var 3),
                template_var 5),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 2))),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 2)),
            template_app (template_hole 2, template_var 4)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 7),
                 template_var 1),
               template_var 0),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2))
           ))),
    ("CZH_ECAT_Comma.cat_comma_components",
     "?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>CId\<rparr> =
      (\<lambda>A\<in>\<^sub>\<circ>cat_comma_Obj ?\<GG> ?\<HH>.
          [A, A,
           [?\<GG>\<lparr>HomDom\<rparr>\<lparr>CId\<rparr>\<lparr>A\<lparr>[]\<^sub>\<circ>\<rparr>\<rparr>,
            ?\<HH>\<lparr>HomDom\<rparr>\<lparr>CId\<rparr>\<lparr>A\<lparr>1\<^sub>\<nat>\<rparr>\<rparr>]\<^sub>\<circ>]\<^sub>\<circ>)",
     template_equation
      (template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 1),
             template_var 0)),
         template_hole 7),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         t_empty))),
    ("CZH_ECAT_Comma.cf_cf_arr_comma_components",
     "?\<FF> \<^sub>C\<^sub>F\<down>\<^sub>A ?g\<lparr>ObjMap\<rparr> =
      (\<lambda>A\<in>\<^sub>\<circ>?\<FF> \<^sub>C\<^sub>F\<down> (?\<FF>\<lparr>HomCod\<rparr>\<lparr>Dom\<rparr>\<lparr>?g\<rparr>)\<lparr>Obj\<rparr>.
          [A\<lparr>[]\<^sub>\<circ>\<rparr>, []\<^sub>\<circ>,
           ?g \<circ>\<^sub>A\<^bsub>?\<FF>\<lparr>HomCod\<rparr>\<^esub>
           A\<lparr>2\<^sub>\<nat>\<rparr>]\<^sub>\<circ>)",
     template_equation
      (template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 13, template_var 1),
             template_var 0)),
         template_hole 12),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 10, template_var 1),
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_app (template_hole 14, template_var 1),
                           template_hole 9)),
                       template_hole 8)),
                   template_var 0))),
             template_hole 7)),
         t_empty))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?A = [?a, ?b', ?f]\<^sub>\<circ>;
         [?a, ?b', ?f]\<^sub>\<circ>
         \<in>\<^sub>\<circ> ?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Obj\<rparr> |]
      ==> ?\<FF> \<^sub>C\<^sub>F\<Sqinter>\<^sub>O ?b\<lparr>ObjMap\<rparr>\<lparr>?A\<rparr> =
          ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 3)),
                template_var 2)),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_var 3)),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 0)),
                  template_hole 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 0)),
               template_hole 0)),
           template_var 4),
         template_var 3))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?A = [?b', ?a, ?f]\<^sub>\<circ>;
         [?b', ?a, ?f]\<^sub>\<circ>
         \<in>\<^sub>\<circ> ?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Obj\<rparr> |]
      ==> ?b \<^sub>O\<Sqinter>\<^sub>C\<^sub>F ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?A\<rparr> =
          ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 3)),
                template_var 2)),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_var 3)),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 0),
                      template_var 5)),
                  template_hole 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 5)),
               template_hole 0)),
           template_var 4),
         template_var 2))),
    ("CZH_ECAT_Comma.cat_comma_ObjD",
     "[| [?a, ?b, ?f]\<^sub>\<circ>
         \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?f : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>?b\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_var 8)),
                      template_var 7)),
                  template_var 6)),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 5),
                      template_var 4)),
                  template_hole 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 5, template_var 5),
                       template_hole 0)),
                   template_var 8)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 5, template_var 4),
                     template_hole 0)),
                 template_var 7)),
             template_var 6)
           ))),
    ("CZH_ECAT_Comma.cf_arr_cf_comma_components",
     "?g \<^sub>A\<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>ObjMap\<rparr> =
      (\<lambda>A\<in>\<^sub>\<circ>(?\<FF>\<lparr>HomCod\<rparr>\<lparr>Cod\<rparr>\<lparr>?g\<rparr>) \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Obj\<rparr>.
          [[]\<^sub>\<circ>, A\<lparr>1\<^sub>\<nat>\<rparr>,
           A\<lparr>2\<^sub>\<nat>\<rparr> \<circ>\<^sub>A\<^bsub>?\<FF>\<lparr>HomCod\<rparr>\<^esub>
           ?g]\<^sub>\<circ>)",
     template_equation
      (template_app
        (template_app
          (template_hole 15,
           template_app
            (template_app (template_hole 14, template_var 1),
             template_var 0)),
         template_hole 13),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_hole 15,
                       template_app
                        (template_app
                          (template_hole 15,
                           template_app
                            (template_app
                              (template_hole 15, template_var 0),
                             template_hole 10)),
                         template_hole 9)),
                     template_var 1)),
                 template_var 0)),
             template_hole 8)),
         t_empty))),
    ("CZH_ECAT_Comma.cf_comma_proj_left_ArrMap_app",
     "[| ?ABF = [?A, ?B, [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>;
         [?A, ?B, [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>
         \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<Sqinter> ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>?ABF\<rparr> =
          ?g",
     template_implication
      ([template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 5)),
                template_var 4)),
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 3)),
              template_var 2))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_var 5)),
                      template_var 4)),
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 8, template_hole 7),
                        template_var 3)),
                    template_var 2))),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_var 0)),
                  template_hole 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_hole 0)),
           template_var 6),
         template_var 3))),
    ("CZH_ECAT_Comma.cf_comma_proj_right_ArrMap_app",
     "[| ?ABF = [?A, ?B, [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>;
         [?A, ?B, [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>
         \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr> |]
      ==> ?\<GG> \<Sqinter>\<^sub>C\<^sub>F ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>?ABF\<rparr> =
          ?h",
     template_implication
      ([template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 5)),
                template_var 4)),
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 3)),
              template_var 2))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_var 5)),
                      template_var 4)),
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 8, template_hole 7),
                        template_var 3)),
                    template_var 2))),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 1),
                      template_var 0)),
                  template_hole 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_hole 0)),
           template_var 6),
         template_var 2))),
    ("CZH_ECAT_Comma.cat_comma_ArrD",
     "[| [?A, ?B, ?F]\<^sub>\<circ>
         \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> [?A, ?B, ?F]\<^sub>\<circ>
          \<in>\<^sub>\<circ> cat_comma_Hom ?\<GG> ?\<HH> ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 7, template_hole 6),
                          template_var 8)),
                      template_var 7)),
                  template_var 6)),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4)),
                  template_hole 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 7, template_hole 6),
                         template_var 8)),
                     template_var 7)),
                 template_var 6)),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 8),
                 template_var 7)))
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?A = [[]\<^sub>\<circ>, ?a, ?f]\<^sub>\<circ>;
         ?a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
         ?f : ?b \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> |]
      ==> ?A \<in>\<^sub>\<circ> ?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_hole 7)),
                template_var 2)),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_hole 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 0),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 4, template_var 4),
                      template_hole 1)),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 3),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 4)),
                 template_hole 3)))
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?A = [?a, []\<^sub>\<circ>, ?f]\<^sub>\<circ>;
         ?a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
         ?f : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?b |]
      ==> ?A \<in>\<^sub>\<circ> ?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 2)),
                template_hole 7)),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 6),
                  template_hole 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 4, template_var 4),
                        template_hole 1)),
                    template_var 2)),
                template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 3),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 0)),
                 template_hole 3)))
           ))),
    ("CZH_ECAT_Comma.small_cat_comma_Obj",
     "small
       {[a, b, f]\<^sub>\<circ> |a b f.
        a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr> &
        b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr> &
        f : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>b\<rparr>}",
     template_predicate
      (
         template_app
          (template_hole 12, template_app (template_hole 11, t_empty))
         )),
    ("CZH_ECAT_Comma.op_cf_comma_ArrMap_is_arr",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?ABF : ?A \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> ?B |]
      ==> op_cf_comma ?\<GG>
           ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>?ABF\<rparr> : op_cf_commma_obj_flip
                         ?\<GG>
                         ?\<HH>\<lparr>?B\<rparr> \<mapsto>\<^bsub>(op_cf ?\<HH>) \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F (op_cf ?\<GG>)\<^esub> op_cf_commma_obj_flip
                                ?\<GG> ?\<HH>\<lparr>?A\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 8),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 8),
                  template_var 4),
                template_var 6),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 5),
                      template_var 3)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 4, template_var 3)),
                     template_app (template_hole 4, template_var 5))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 2, template_var 5),
                       template_var 3)),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 3)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 1, template_var 5),
                       template_var 3)),
                   template_hole 0)),
               template_var 0))
           ))),
    ("CZH_ECAT_Comma.cat_comma_composableI",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?ABCGF = [?BCG, ?ABF]\<^sub>\<circ>;
         ?BCG : ?B \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> ?C;
         ?ABF : ?A \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> ?B |]
      ==> ?ABCGF \<in>\<^sub>\<circ> cat_comma_composable ?\<GG> ?\<HH>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 11),
                  template_var 10),
                template_var 9),
              template_var 8)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 11),
                  template_var 7),
                template_var 9),
              template_var 6)
            ),
        template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 4)),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 8),
                      template_var 6)),
                  template_var 2),
                template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 8),
                      template_var 6)),
                  template_var 0),
                template_var 2),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 5),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 8),
                 template_var 6)))
           ))),
    ("CZH_ECAT_Comma.cat_comma_ArrE",
     "[| ?F \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>;
         !!A B.
            [| ?F \<in>\<^sub>\<circ> cat_comma_Hom ?\<GG> ?\<HH> A B;
               A \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>;
               B \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr> |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 1)),
                  template_hole 3)))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("CZH_ECAT_Comma.cat_comma_components'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>CId\<rparr> =
          (\<lambda>A\<in>\<^sub>\<circ>cat_comma_Obj ?\<GG> ?\<HH>.
              [A, A,
               [?\<AA>\<lparr>CId\<rparr>\<lparr>A\<lparr>[]\<^sub>\<circ>\<rparr>\<rparr>,
                ?\<BB>\<lparr>CId\<rparr>\<lparr>A\<lparr>1\<^sub>\<nat>\<rparr>\<rparr>]\<^sub>\<circ>]\<^sub>\<circ>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 0)),
           template_hole 6),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0)),
           t_empty)))),
    ("CZH_ECAT_Comma.cat_comma_Comp_is_arr",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?BCG : ?B \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> ?C;
         ?ABF : ?A \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> ?B |]
      ==> ?BCG \<circ>\<^sub>A\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub>
          ?ABF : ?A \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 10),
                  template_var 9),
                template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 10),
                  template_var 6),
                template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 7),
                      template_var 5)),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 7),
                      template_var 5)),
                  template_var 1),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 7),
                     template_var 5)),
                 template_var 1),
               template_var 3),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 4, template_var 7),
                       template_var 5)),
                   template_hole 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 2)),
                 template_var 0)))
           ))),
    ("CZH_ECAT_Comma.cat_comma_Hom",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?A \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>;
         ?B \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr> |]
      ==> Hom (?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>) ?A
           ?B =
          cat_comma_Hom ?\<GG> ?\<HH> ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 7),
                  template_var 6),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 7),
                  template_var 3),
                template_var 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 4),
                      template_var 2)),
                  template_hole 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 4),
                      template_var 2)),
                  template_hole 5)))
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?ABF = [?A, ?B, [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>;
         [?A, ?B, [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>
         \<in>\<^sub>\<circ> ?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Arr\<rparr> |]
      ==> ?\<FF> \<^sub>C\<^sub>F\<Sqinter>\<^sub>O ?b\<lparr>ArrMap\<rparr>\<lparr>?ABF\<rparr> =
          ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 9),
                  template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 4)),
                template_var 3)),
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 2)),
              template_var 1))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_var 4)),
                      template_var 3)),
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 8, template_hole 7),
                        template_var 2)),
                    template_var 1))),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 6),
                      template_var 0)),
                  template_hole 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_var 6),
                   template_var 0)),
               template_hole 0)),
           template_var 5),
         template_var 2))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?ABF = [?A, ?B, [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>;
         [?A, ?B, [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>
         \<in>\<^sub>\<circ> ?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Arr\<rparr> |]
      ==> ?b \<^sub>O\<Sqinter>\<^sub>C\<^sub>F ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?ABF\<rparr> =
          ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 9),
                  template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 4)),
                template_var 3)),
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 2)),
              template_var 1))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_var 4)),
                      template_var 3)),
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 8, template_hole 7),
                        template_var 2)),
                    template_var 1))),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 0),
                      template_var 6)),
                  template_hole 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 6)),
               template_hole 0)),
           template_var 5),
         template_var 1))),
    ("CZH_ECAT_Comma.cat_comma_HomD",
     "[| [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>
         \<in>\<^sub>\<circ> cat_comma_Hom ?\<GG> ?\<HH> ?A ?B;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?g : ?a \<mapsto>\<^bsub>?\<AA>\<^esub> ?a'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app
                         (template_app (template_hole 5, template_hole 4),
                          template_app
                           (template_app
                             (template_hole 5,
                              template_app
                               (template_app
                                 (template_hole 5,
                                  template_app
                                   (template_app
                                     (template_hole 5, template_hole 4),
                                    template_var 15)),
                                template_var 14)),
                            template_var 13))),
                      template_app
                       (template_app
                         (template_hole 5,
                          template_app
                           (template_app
                             (template_hole 5,
                              template_app
                               (template_app
                                 (template_hole 5, template_hole 4),
                                template_var 12)),
                            template_var 11)),
                        template_var 10))),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app (template_hole 5, template_hole 4),
                        template_var 9)),
                    template_var 8))),
              template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 15),
               template_var 12),
             template_var 9)
           ))),
    ("CZH_ECAT_Comma.cat_comma_HomD",
     "[| [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>
         \<in>\<^sub>\<circ> cat_comma_Hom ?\<GG> ?\<HH> ?A ?B;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?h : ?b \<mapsto>\<^bsub>?\<BB>\<^esub> ?b'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app
                         (template_app (template_hole 5, template_hole 4),
                          template_app
                           (template_app
                             (template_hole 5,
                              template_app
                               (template_app
                                 (template_hole 5,
                                  template_app
                                   (template_app
                                     (template_hole 5, template_hole 4),
                                    template_var 15)),
                                template_var 14)),
                            template_var 13))),
                      template_app
                       (template_app
                         (template_hole 5,
                          template_app
                           (template_app
                             (template_hole 5,
                              template_app
                               (template_app
                                 (template_hole 5, template_hole 4),
                                template_var 12)),
                            template_var 11)),
                        template_var 10))),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app
                       (template_app (template_hole 5, template_hole 4),
                        template_var 9)),
                    template_var 8))),
              template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 14),
               template_var 11),
             template_var 8)
           ))),
    ("CZH_ECAT_Comma.op_cf_comma_components",
     "op_cf_comma ?\<GG> ?\<HH>\<lparr>ArrMap\<rparr> =
      (\<lambda>ABF\<in>\<^sub>\<circ>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr>.
          [op_cf_commma_obj_flip ?\<GG>
            ?\<HH>\<lparr>ABF\<lparr>1\<^sub>\<nat>\<rparr>\<rparr>,
           op_cf_commma_obj_flip ?\<GG>
            ?\<HH>\<lparr>ABF\<lparr>[]\<^sub>\<circ>\<rparr>\<rparr>,
           [ABF\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>1\<^sub>\<nat>\<rparr>,
            ABF\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>0\<^sub>\<nat>\<rparr>]\<^sub>\<circ>]\<^sub>\<circ>)",
     template_equation
      (template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 13, template_var 1),
             template_var 0)),
         template_hole 12),
       template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 10, template_var 1),
                 template_var 0)),
             template_hole 9)),
         t_empty))),
    ("CZH_ECAT_Comma.op_cf_comma_ArrMap_is_arr'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?ABF : ?A \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> ?B;
         ?A' = op_cf_commma_obj_flip ?\<GG> ?\<HH>\<lparr>?B\<rparr>;
         ?B' = op_cf_commma_obj_flip ?\<GG> ?\<HH>\<lparr>?A\<rparr> |]
      ==> op_cf_comma ?\<GG>
           ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>?ABF\<rparr> : ?A' \<mapsto>\<^bsub>(op_cf ?\<HH>) \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F (op_cf ?\<GG>)\<^esub> ?B'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 10),
                  template_var 9),
                template_var 8),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 10),
                  template_var 6),
                template_var 8),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 6, template_var 7),
                      template_var 5)),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 7),
                template_var 5)),
            template_var 3)),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 7),
                template_var 5)),
            template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 2, template_var 5)),
                     template_app (template_hole 2, template_var 7))),
                 template_var 1),
               template_var 0),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 1, template_var 7),
                       template_var 5)),
                   template_hole 0)),
               template_var 2))
           ))),
    ("CZH_ECAT_Comma.small_cat_comma_composable",
     "small
       {[[B, C, G]\<^sub>\<circ>, [A, B, F]\<^sub>\<circ>]\<^sub>\<circ> |A
        B C G F.
        [B, C, G]\<^sub>\<circ>
        \<in>\<^sub>\<circ> cat_comma_Arr ?\<GG> ?\<HH> &
        [A, B, F]\<^sub>\<circ>
        \<in>\<^sub>\<circ> cat_comma_Arr ?\<GG> ?\<HH>}",
     template_predicate
      (
         template_app
          (template_hole 9, template_app (template_hole 8, t_empty))
         )),
    ("CZH_ECAT_Comma.op_cf_comma_ArrMap_app'",
     "?x \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr> ==>
      op_cf_comma ?\<GG> ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>?x\<rparr> =
      [op_cf_commma_obj_flip ?\<GG>
        ?\<HH>\<lparr>?x\<lparr>1\<^sub>\<nat>\<rparr>\<rparr>,
       op_cf_commma_obj_flip ?\<GG>
        ?\<HH>\<lparr>?x\<lparr>[]\<^sub>\<circ>\<rparr>\<rparr>,
       [?x\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>1\<^sub>\<nat>\<rparr>,
        ?x\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>0\<^sub>\<nat>\<rparr>]\<^sub>\<circ>]\<^sub>\<circ>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_app
               (template_hole 15,
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 13, template_var 1),
                      template_var 0)),
                  template_hole 12)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 10, template_var 1),
                   template_var 0)),
               template_hole 9)),
           template_var 2),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_app (template_hole 6, template_var 1),
                         template_var 0)),
                     template_app
                      (template_app (template_hole 14, template_var 2),
                       template_app (template_hole 5, template_hole 4))))),
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 6, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 14, template_var 2),
                   template_hole 7)))),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_app (template_hole 14, template_var 2),
                       template_app
                        (template_hole 5,
                         template_app
                          (template_hole 3,
                           template_app
                            (template_hole 2, template_hole 1))))),
                   template_app (template_hole 5, template_hole 4)))),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 14, template_var 2),
                   template_app
                    (template_hole 5,
                     template_app
                      (template_hole 3,
                       template_app (template_hole 2, template_hole 1))))),
               template_app (template_hole 5, template_hole 0))))))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?A = [?a', ?b', ?f']\<^sub>\<circ>;
         ?A \<in>\<^sub>\<circ> ?\<FF> \<^sub>C\<^sub>F\<down> ?c\<lparr>Obj\<rparr>;
         ?g : ?c \<mapsto>\<^bsub>?\<BB>\<^esub> ?c' |]
      ==> ?\<FF> \<^sub>C\<^sub>F\<down>\<^sub>A ?g\<lparr>ObjMap\<rparr>\<lparr>?A\<rparr> =
          [?a', ?b',
           ?g \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub> ?f']\<^sub>\<circ>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 10),
                  template_var 9),
                template_var 8),
              template_var 7)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_var 5)),
                template_var 4)),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 6),
              template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 7),
                      template_var 2)),
                  template_hole 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 8),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 2, template_var 7),
                   template_var 0)),
               template_hole 1)),
           template_var 6),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_var 5)),
               template_var 4)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 6, template_var 8),
                 template_hole 0)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_var 0)),
               template_var 3)))))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?A = [?a', ?b', ?f']\<^sub>\<circ>;
         ?A \<in>\<^sub>\<circ> ?c' \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Obj\<rparr>;
         ?g : ?c \<mapsto>\<^bsub>?\<BB>\<^esub> ?c' |]
      ==> ?g \<^sub>A\<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?A\<rparr> =
          [?a', ?b',
           ?f' \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub> ?g]\<^sub>\<circ>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 10),
                  template_var 9),
                template_var 8),
              template_var 7)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 10, template_hole 9),
                    template_var 5)),
                template_var 4)),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 6),
              template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 2),
                      template_var 7)),
                  template_hole 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 8),
                  template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 7)),
               template_hole 1)),
           template_var 6),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_var 5)),
               template_var 4)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 6, template_var 8),
                 template_hole 0)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_var 3)),
               template_var 0)))))),
    ("CZH_ECAT_Comma.cat_comma_HomD",
     "[| [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>
         \<in>\<^sub>\<circ> cat_comma_Hom ?\<GG> ?\<HH> ?A ?B;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?f : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>?b\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 7, template_hole 6),
                          template_app
                           (template_app
                             (template_hole 7,
                              template_app
                               (template_app
                                 (template_hole 7,
                                  template_app
                                   (template_app
                                     (template_hole 7, template_hole 6),
                                    template_var 15)),
                                template_var 14)),
                            template_var 13))),
                      template_app
                       (template_app
                         (template_hole 7,
                          template_app
                           (template_app
                             (template_hole 7,
                              template_app
                               (template_app
                                 (template_hole 7, template_hole 6),
                                template_var 12)),
                            template_var 11)),
                        template_var 10))),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 7, template_hole 6),
                        template_var 9)),
                    template_var 8))),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 1, template_var 7),
                       template_hole 0)),
                   template_var 15)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 1, template_var 6),
                     template_hole 0)),
                 template_var 14)),
             template_var 13)
           ))),
    ("CZH_ECAT_Comma.cat_comma_HomD",
     "[| [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>
         \<in>\<^sub>\<circ> cat_comma_Hom ?\<GG> ?\<HH> ?A ?B;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?f' : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>?a'\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>?b'\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 7, template_hole 6),
                          template_app
                           (template_app
                             (template_hole 7,
                              template_app
                               (template_app
                                 (template_hole 7,
                                  template_app
                                   (template_app
                                     (template_hole 7, template_hole 6),
                                    template_var 15)),
                                template_var 14)),
                            template_var 13))),
                      template_app
                       (template_app
                         (template_hole 7,
                          template_app
                           (template_app
                             (template_hole 7,
                              template_app
                               (template_app
                                 (template_hole 7, template_hole 6),
                                template_var 12)),
                            template_var 11)),
                        template_var 10))),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 7, template_hole 6),
                        template_var 9)),
                    template_var 8))),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 1, template_var 7),
                       template_hole 0)),
                   template_var 12)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 1, template_var 6),
                     template_hole 0)),
                 template_var 11)),
             template_var 10)
           ))),
    ("CZH_ECAT_Comma.cat_comma_is_arrD",
     "[| [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?g,
           ?h]\<^sub>\<circ>]\<^sub>\<circ> : [?a, ?b,
         ?f]\<^sub>\<circ> \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> [?a',
                               ?b', ?f']\<^sub>\<circ>;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?g : ?a \<mapsto>\<^bsub>?\<AA>\<^esub> ?a'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 13),
                      template_var 12)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app
                         (template_hole 2,
                          template_app
                           (template_app (template_hole 2, template_hole 1),
                            template_var 11)),
                        template_var 10)),
                    template_var 9)),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_hole 2,
                        template_app
                         (template_app (template_hole 2, template_hole 1),
                          template_var 8)),
                      template_var 7)),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 2, template_hole 1),
                        template_app
                         (template_app
                           (template_hole 2,
                            template_app
                             (template_app
                               (template_hole 2,
                                template_app
                                 (template_app
                                   (template_hole 2, template_hole 1),
                                  template_var 11)),
                              template_var 10)),
                          template_var 9))),
                    template_app
                     (template_app
                       (template_hole 2,
                        template_app
                         (template_app
                           (template_hole 2,
                            template_app
                             (template_app
                               (template_hole 2, template_hole 1),
                              template_var 8)),
                          template_var 7)),
                      template_var 6))),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 5)),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 13)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 12)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 11),
               template_var 8),
             template_var 5)
           ))),
    ("CZH_ECAT_Comma.cat_comma_is_arrD",
     "[| [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?g,
           ?h]\<^sub>\<circ>]\<^sub>\<circ> : [?a, ?b,
         ?f]\<^sub>\<circ> \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> [?a',
                               ?b', ?f']\<^sub>\<circ>;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?h : ?b \<mapsto>\<^bsub>?\<BB>\<^esub> ?b'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 13),
                      template_var 12)),
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app
                         (template_hole 2,
                          template_app
                           (template_app (template_hole 2, template_hole 1),
                            template_var 11)),
                        template_var 10)),
                    template_var 9)),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_hole 2,
                        template_app
                         (template_app (template_hole 2, template_hole 1),
                          template_var 8)),
                      template_var 7)),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app
                     (template_hole 2,
                      template_app
                       (template_app (template_hole 2, template_hole 1),
                        template_app
                         (template_app
                           (template_hole 2,
                            template_app
                             (template_app
                               (template_hole 2,
                                template_app
                                 (template_app
                                   (template_hole 2, template_hole 1),
                                  template_var 11)),
                              template_var 10)),
                          template_var 9))),
                    template_app
                     (template_app
                       (template_hole 2,
                        template_app
                         (template_app
                           (template_hole 2,
                            template_app
                             (template_app
                               (template_hole 2, template_hole 1),
                              template_var 8)),
                          template_var 7)),
                      template_var 6))),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 2, template_hole 1),
                      template_var 5)),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 13)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 12)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_var 0),
                 template_var 10),
               template_var 7),
             template_var 4)
           ))),
    ("CZH_ECAT_Comma.cat_comma_CId_app",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?A = [?a, ?b, ?f]\<^sub>\<circ>;
         ?A \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>CId\<rparr>\<lparr>?A\<rparr> =
          [?A, ?A,
           [?\<AA>\<lparr>CId\<rparr>\<lparr>?a\<rparr>,
            ?\<BB>\<lparr>CId\<rparr>\<lparr>?b\<rparr>]\<^sub>\<circ>]\<^sub>\<circ>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 9),
                  template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 9),
                  template_var 5),
                template_var 7),
              template_var 4)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 2)),
                template_var 1)),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 4)),
                  template_hole 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 6),
                   template_var 4)),
               template_hole 0)),
           template_var 3),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_var 3)),
               template_var 3)),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 3, template_var 8),
                       template_hole 0)),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 3, template_var 5),
                   template_hole 0)),
               template_var 1)))))),
    ("CZH_ECAT_Comma.cat_comma_composableE",
     "[| ?ABCGF \<in>\<^sub>\<circ> cat_comma_composable ?\<GG> ?\<HH>;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         !!BCG ABF A B C.
            [| ?ABCGF = [BCG, ABF]\<^sub>\<circ>;
               BCG : B \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> C;
               ABF : A \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> B |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 7),
              template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 6),
                  template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 1),
                template_var 2),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("CZH_ECAT_Comma.cat_comma_ObjI",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?A = [?a, ?b, ?f]\<^sub>\<circ>;
         ?a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
         ?f : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>?b\<rparr> |]
      ==> ?A \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 9),
                  template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 9),
                  template_var 5),
                template_var 7),
              template_var 4)
            ),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 8, template_hole 7),
                    template_var 2)),
                template_var 1)),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 8),
                  template_hole 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 5),
                  template_hole 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 7),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 4, template_var 6),
                        template_hole 1)),
                    template_var 2)),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 4, template_var 4),
                      template_hole 1)),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 3),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 4)),
                 template_hole 3)))
           ))),
    ("CZH_ECAT_Comma.cat_comma_is_arrD",
     "[| [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?g,
           ?h]\<^sub>\<circ>]\<^sub>\<circ> : [?a, ?b,
         ?f]\<^sub>\<circ> \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> [?a',
                               ?b', ?f']\<^sub>\<circ>;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?f : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>?b\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 13),
                      template_var 12)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app
                         (template_hole 4,
                          template_app
                           (template_app (template_hole 4, template_hole 3),
                            template_var 11)),
                        template_var 10)),
                    template_var 9)),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 4, template_hole 3),
                          template_var 8)),
                      template_var 7)),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 4, template_hole 3),
                        template_app
                         (template_app
                           (template_hole 4,
                            template_app
                             (template_app
                               (template_hole 4,
                                template_app
                                 (template_app
                                   (template_hole 4, template_hole 3),
                                  template_var 11)),
                              template_var 10)),
                          template_var 9))),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app
                           (template_hole 4,
                            template_app
                             (template_app
                               (template_hole 4, template_hole 3),
                              template_var 8)),
                          template_var 7)),
                      template_var 6))),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 5)),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 13)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 12)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 1),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 1, template_var 13),
                       template_hole 0)),
                   template_var 11)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 1, template_var 12),
                     template_hole 0)),
                 template_var 10)),
             template_var 9)
           ))),
    ("CZH_ECAT_Comma.cat_comma_is_arrD",
     "[| [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?g,
           ?h]\<^sub>\<circ>]\<^sub>\<circ> : [?a, ?b,
         ?f]\<^sub>\<circ> \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> [?a',
                               ?b', ?f']\<^sub>\<circ>;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?f' : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>?a'\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>?b'\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 13),
                      template_var 12)),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app
                         (template_hole 4,
                          template_app
                           (template_app (template_hole 4, template_hole 3),
                            template_var 11)),
                        template_var 10)),
                    template_var 9)),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app (template_hole 4, template_hole 3),
                          template_var 8)),
                      template_var 7)),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 4, template_hole 3),
                        template_app
                         (template_app
                           (template_hole 4,
                            template_app
                             (template_app
                               (template_hole 4,
                                template_app
                                 (template_app
                                   (template_hole 4, template_hole 3),
                                  template_var 11)),
                              template_var 10)),
                          template_var 9))),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app
                           (template_hole 4,
                            template_app
                             (template_app
                               (template_hole 4, template_hole 3),
                              template_var 8)),
                          template_var 7)),
                      template_var 6))),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 4, template_hole 3),
                      template_var 5)),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 13)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 12)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 1),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 1, template_var 13),
                       template_hole 0)),
                   template_var 8)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 1, template_var 12),
                     template_hole 0)),
                 template_var 7)),
             template_var 6)
           ))),
    ("CZH_ECAT_Comma.cat_comma_HomD",
     "[| [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>
         \<in>\<^sub>\<circ> cat_comma_Hom ?\<GG> ?\<HH> ?A ?B;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?f' \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          ?\<GG>\<lparr>ArrMap\<rparr>\<lparr>?g\<rparr> =
          ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>?h\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 8, template_hole 7),
                          template_app
                           (template_app
                             (template_hole 8,
                              template_app
                               (template_app
                                 (template_hole 8,
                                  template_app
                                   (template_app
                                     (template_hole 8, template_hole 7),
                                    template_var 15)),
                                template_var 14)),
                            template_var 13))),
                      template_app
                       (template_app
                         (template_hole 8,
                          template_app
                           (template_app
                             (template_hole 8,
                              template_app
                               (template_app
                                 (template_hole 8, template_hole 7),
                                template_var 12)),
                            template_var 11)),
                        template_var 10))),
                  template_app
                   (template_app
                     (template_hole 8,
                      template_app
                       (template_app (template_hole 8, template_hole 7),
                        template_var 9)),
                    template_var 8))),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 7),
                      template_var 6),
                    template_var 5),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 6)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_var 10)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 2, template_var 7),
                   template_hole 0)),
               template_var 9))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 2, template_var 6),
                       template_hole 0)),
                   template_var 8))),
             template_var 13))))),
    ("CZH_ECAT_Comma.op_cf_comma_ArrMap_app",
     "[| ?ABF =
         [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>;
         ?ABF
         \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Arr\<rparr> |]
      ==> op_cf_comma ?\<GG>
           ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>?ABF\<rparr> =
          [op_cf_commma_obj_flip ?\<GG>
            ?\<HH> \<lparr>?a', ?b', ?f'\<rparr>\<^sub>\<bullet>,
           op_cf_commma_obj_flip ?\<GG>
            ?\<HH> \<lparr>?a, ?b, ?f\<rparr>\<^sub>\<bullet>,
           [?h, ?g]\<^sub>\<circ>]\<^sub>\<circ>",
     template_implication
      ([template_equation
         (template_var 10,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_hole 9, template_hole 8),
                              template_var 9)),
                          template_var 8)),
                      template_var 7))),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app (template_hole 9, template_hole 8),
                          template_var 6)),
                      template_var 5)),
                  template_var 4))),
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 3)),
              template_var 2))),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 10),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_var 0)),
                  template_hole 3)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 1)),
           template_var 10),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 0)),
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app
                            (template_hole 9,
                             template_app
                              (template_app
                                (template_hole 9, template_hole 8),
                               template_var 6)),
                           template_var 5)),
                       template_var 4)))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 9, template_hole 8),
                           template_var 9)),
                       template_var 8)),
                   template_var 7)))),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_var 2)),
             template_var 3))))),
    ("CZH_ECAT_Comma.cat_comma_ObjE",
     "[| ?A \<in>\<^sub>\<circ> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Obj\<rparr>;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         !!a b f.
            [| ?A = [a, b, f]\<^sub>\<circ>;
               a \<in>\<^sub>\<circ> ?\<AA>\<lparr>Obj\<rparr>;
               b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
               f : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>b\<rparr> |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 7),
              template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 6),
                      template_var 5)),
                  template_hole 7)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 1),
                template_var 2),
              template_var 5)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?ABF =
         [[[]\<^sub>\<circ>, ?a, ?f]\<^sub>\<circ>,
          [[]\<^sub>\<circ>, ?a', ?f']\<^sub>\<circ>,
          [[]\<^sub>\<circ>, ?h]\<^sub>\<circ>]\<^sub>\<circ>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
         ?ABF
         \<in>\<^sub>\<circ> ?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Arr\<rparr> |]
      ==> op_obj_cf_comma ?b
           ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?ABF\<rparr> =
          [[?a', []\<^sub>\<circ>, ?f']\<^sub>\<circ>,
           [?a, []\<^sub>\<circ>, ?f]\<^sub>\<circ>,
           [?h, []\<^sub>\<circ>]\<^sub>\<circ>]\<^sub>\<circ>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 10),
                  template_var 9),
                template_var 8),
              template_var 7)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_hole 9, template_hole 8),
                              template_hole 8)),
                          template_var 5)),
                      template_var 4))),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app (template_hole 9, template_hole 8),
                          template_hole 8)),
                      template_var 3)),
                  template_var 2))),
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_hole 8)),
              template_var 1))),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 8),
                  template_hole 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 6),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 3, template_var 0),
                      template_var 7)),
                  template_hole 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 7)),
               template_hole 0)),
           template_var 6),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app
                            (template_app
                              (template_hole 9, template_hole 8),
                             template_var 3)),
                         template_hole 8)),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 9, template_hole 8),
                         template_var 5)),
                     template_hole 8)),
                 template_var 4))),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_var 1)),
             template_hole 8))))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?ABF =
         [[?a, []\<^sub>\<circ>, ?f]\<^sub>\<circ>,
          [?a', []\<^sub>\<circ>, ?f']\<^sub>\<circ>,
          [?g, []\<^sub>\<circ>]\<^sub>\<circ>]\<^sub>\<circ>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
         ?ABF
         \<in>\<^sub>\<circ> ?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Arr\<rparr> |]
      ==> op_cf_obj_comma ?\<FF>
           ?b\<lparr>ArrMap\<rparr>\<lparr>?ABF\<rparr> =
          [[[]\<^sub>\<circ>, ?a', ?f']\<^sub>\<circ>,
           [[]\<^sub>\<circ>, ?a, ?f]\<^sub>\<circ>,
           [[]\<^sub>\<circ>, ?g]\<^sub>\<circ>]\<^sub>\<circ>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 10),
                  template_var 9),
                template_var 8),
              template_var 7)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app
                           (template_hole 9,
                            template_app
                             (template_app
                               (template_hole 9, template_hole 8),
                              template_var 5)),
                          template_hole 8)),
                      template_var 4))),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app (template_hole 9, template_hole 8),
                          template_var 3)),
                      template_hole 8)),
                  template_var 2))),
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 1)),
              template_hole 8))),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 8),
                  template_hole 4)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 6),
              template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 3, template_var 7),
                      template_var 0)),
                  template_hole 2)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 1, template_var 7),
                   template_var 0)),
               template_hole 0)),
           template_var 6),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 9, template_hole 8),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app
                            (template_app
                              (template_hole 9, template_hole 8),
                             template_hole 8)),
                         template_var 3)),
                     template_var 2))),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 9, template_hole 8),
                         template_hole 8)),
                     template_var 5)),
                 template_var 4))),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 9, template_hole 8),
                 template_hole 8)),
             template_var 1))))),
    ("CZH_ECAT_Comma.cat_comma_is_arrD",
     "[| [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?g,
           ?h]\<^sub>\<circ>]\<^sub>\<circ> : [?a, ?b,
         ?f]\<^sub>\<circ> \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> [?a',
                               ?b', ?f']\<^sub>\<circ>;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?f' \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          ?\<GG>\<lparr>ArrMap\<rparr>\<lparr>?g\<rparr> =
          ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>?h\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
          ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 13),
                      template_var 12)),
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app
                         (template_hole 6,
                          template_app
                           (template_app (template_hole 6, template_hole 5),
                            template_var 11)),
                        template_var 10)),
                    template_var 9)),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_hole 6,
                        template_app
                         (template_app (template_hole 6, template_hole 5),
                          template_var 8)),
                      template_var 7)),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 6, template_hole 5),
                        template_app
                         (template_app
                           (template_hole 6,
                            template_app
                             (template_app
                               (template_hole 6,
                                template_app
                                 (template_app
                                   (template_hole 6, template_hole 5),
                                  template_var 11)),
                              template_var 10)),
                          template_var 9))),
                    template_app
                     (template_app
                       (template_hole 6,
                        template_app
                         (template_app
                           (template_hole 6,
                            template_app
                             (template_app
                               (template_hole 6, template_hole 5),
                              template_var 8)),
                          template_var 7)),
                      template_var 6))),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 6, template_hole 5),
                      template_var 5)),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 13)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 0),
                template_var 1),
              template_var 12)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_var 6)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 2, template_var 13),
                   template_hole 0)),
               template_var 5))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 6, template_hole 5),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 2, template_var 12),
                       template_hole 0)),
                   template_var 4))),
             template_var 9))))),
    ("CZH_ECAT_Comma.cf_cf_arr_comma_components",
     "?\<FF> \<^sub>C\<^sub>F\<down>\<^sub>A ?g\<lparr>ArrMap\<rparr> =
      (\<lambda>F\<in>\<^sub>\<circ>?\<FF> \<^sub>C\<^sub>F\<down> (?\<FF>\<lparr>HomCod\<rparr>\<lparr>Dom\<rparr>\<lparr>?g\<rparr>)\<lparr>Arr\<rparr>.
          [[F\<lparr>[]\<^sub>\<circ>\<rparr>\<lparr>[]\<^sub>\<circ>\<rparr>,
            []\<^sub>\<circ>,
            ?g \<circ>\<^sub>A\<^bsub>?\<FF>\<lparr>HomCod\<rparr>\<^esub>
            F\<lparr>[]\<^sub>\<circ>\<rparr>\<lparr>2\<^sub>\<nat>\<rparr>]\<^sub>\<circ>,
           [F\<lparr>1\<^sub>\<nat>\<rparr>\<lparr>[]\<^sub>\<circ>\<rparr>,
            []\<^sub>\<circ>,
            ?g \<circ>\<^sub>A\<^bsub>?\<FF>\<lparr>HomCod\<rparr>\<^esub>
            F\<lparr>1\<^sub>\<nat>\<rparr>\<lparr>2\<^sub>\<nat>\<rparr>]\<^sub>\<circ>,
           F\<lparr>2\<^sub>\<nat>\<rparr>]\<^sub>\<circ>)",
     template_equation
      (template_app
        (template_app
          (template_hole 15,
           template_app
            (template_app (template_hole 14, template_var 1),
             template_var 0)),
         template_hole 13),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 11, template_var 1),
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_hole 15,
                         template_app
                          (template_app (template_hole 15, template_var 1),
                           template_hole 10)),
                       template_hole 9)),
                   template_var 0))),
             template_hole 8)),
         t_empty))),
    ("CZH_ECAT_Comma.cf_arr_cf_comma_components",
     "?g \<^sub>A\<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>ArrMap\<rparr> =
      (\<lambda>F\<in>\<^sub>\<circ>(?\<FF>\<lparr>HomCod\<rparr>\<lparr>Cod\<rparr>\<lparr>?g\<rparr>) \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Arr\<rparr>.
          [[[]\<^sub>\<circ>,
            F\<lparr>[]\<^sub>\<circ>\<rparr>\<lparr>1\<^sub>\<nat>\<rparr>,
            F\<lparr>[]\<^sub>\<circ>\<rparr>\<lparr>2\<^sub>\<nat>\<rparr> \<circ>\<^sub>A\<^bsub>?\<FF>\<lparr>HomCod\<rparr>\<^esub>
            ?g]\<^sub>\<circ>,
           [[]\<^sub>\<circ>,
            F\<lparr>1\<^sub>\<nat>\<rparr>\<lparr>1\<^sub>\<nat>\<rparr>,
            F\<lparr>1\<^sub>\<nat>\<rparr>\<lparr>2\<^sub>\<nat>\<rparr> \<circ>\<^sub>A\<^bsub>?\<FF>\<lparr>HomCod\<rparr>\<^esub>
            ?g]\<^sub>\<circ>,
           F\<lparr>2\<^sub>\<nat>\<rparr>]\<^sub>\<circ>)",
     template_equation
      (template_app
        (template_app
          (template_hole 15,
           template_app
            (template_app (template_hole 14, template_var 1),
             template_var 0)),
         template_hole 13),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_hole 15,
                       template_app
                        (template_app
                          (template_hole 15,
                           template_app
                            (template_app
                              (template_hole 15, template_var 0),
                             template_hole 10)),
                         template_hole 9)),
                     template_var 1)),
                 template_var 0)),
             template_hole 8)),
         t_empty))),
    ("CZH_ECAT_Comma.cat_comma_components",
     "?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Comp\<rparr> =
      (\<lambda>GF\<in>\<^sub>\<circ>cat_comma_composable ?\<GG> ?\<HH>.
          [GF\<lparr>1\<^sub>\<nat>\<rparr>\<lparr>[]\<^sub>\<circ>\<rparr>,
           GF\<lparr>[]\<^sub>\<circ>\<rparr>\<lparr>1\<^sub>\<nat>\<rparr>,
           [GF\<lparr>[]\<^sub>\<circ>\<rparr>\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>[]\<^sub>\<circ>\<rparr> \<circ>\<^sub>A\<^bsub>?\<GG>\<lparr>HomDom\<rparr>\<^esub>
            GF\<lparr>1\<^sub>\<nat>\<rparr>\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>[]\<^sub>\<circ>\<rparr>,
            GF\<lparr>[]\<^sub>\<circ>\<rparr>\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>1\<^sub>\<nat>\<rparr> \<circ>\<^sub>A\<^bsub>?\<HH>\<lparr>HomDom\<rparr>\<^esub>
            GF\<lparr>1\<^sub>\<nat>\<rparr>\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>1\<^sub>\<nat>\<rparr>]\<^sub>\<circ>]\<^sub>\<circ>)",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 11, template_var 1),
             template_var 0)),
         template_hole 10),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 8, template_var 1),
             template_var 0)),
         t_empty))),
    ("CZH_ECAT_Comma.small_cat_comma_Hom",
     "small
       {[?A, ?B, [g, h]\<^sub>\<circ>]\<^sub>\<circ> |g h.
        ?A \<in>\<^sub>\<circ> cat_comma_Obj ?\<GG> ?\<HH> &
        ?B \<in>\<^sub>\<circ> cat_comma_Obj ?\<GG> ?\<HH> &
        g : ?A\<lparr>[]\<^sub>\<circ>\<rparr> \<mapsto>\<^bsub>?\<AA>\<^esub> ?B\<lparr>[]\<^sub>\<circ>\<rparr> &
        h : ?A\<lparr>1\<^sub>\<nat>\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?B\<lparr>1\<^sub>\<nat>\<rparr> &
        ?B\<lparr>2\<^sub>\<nat>\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?\<GG>\<lparr>ArrMap\<rparr>\<lparr>g\<rparr> =
        ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>h\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
        ?A\<lparr>2\<^sub>\<nat>\<rparr>}",
     template_predicate
      (
         template_app
          (template_hole 18, template_app (template_hole 17, t_empty))
         )),
    ("CZH_ECAT_Comma.cat_comma_Comp_app",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?G = [?B, ?C, [?g', ?h']\<^sub>\<circ>]\<^sub>\<circ>;
         ?F = [?A, ?B, [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>;
         ?G : ?B \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> ?C;
         ?F : ?A \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> ?B |]
      ==> ?G \<circ>\<^sub>A\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub>
          ?F =
          [?A, ?C,
           [?g' \<circ>\<^sub>A\<^bsub>?\<AA>\<^esub> ?g,
            ?h' \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
            ?h]\<^sub>\<circ>]\<^sub>\<circ>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 14),
                  template_var 13),
                template_var 12),
              template_var 11)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 14),
                  template_var 10),
                template_var 12),
              template_var 9)
            ),
        template_equation
         (template_var 8,
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_var 7)),
                template_var 6)),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 5)),
              template_var 4))),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_var 2)),
                template_var 7)),
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_var 1)),
              template_var 0))),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 11),
                      template_var 9)),
                  template_var 7),
                template_var 6),
              template_var 8)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 11),
                      template_var 9)),
                  template_var 2),
                template_var 7),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 11),
                   template_var 9)),
               template_hole 0)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_var 8)),
             template_var 3)),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 2)),
               template_var 6)),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 1, template_var 13),
                       template_hole 0)),
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_var 5)),
                     template_var 1)))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 1, template_var 10),
                   template_hole 0)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_var 4)),
                 template_var 0))))))),
    ("CZH_ECAT_Comma.cat_comma_components'",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC> |]
      ==> ?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<lparr>Comp\<rparr> =
          (\<lambda>GF\<in>\<^sub>\<circ>cat_comma_composable ?\<GG> ?\<HH>.
              [GF\<lparr>1\<^sub>\<nat>\<rparr>\<lparr>[]\<^sub>\<circ>\<rparr>,
               GF\<lparr>[]\<^sub>\<circ>\<rparr>\<lparr>1\<^sub>\<nat>\<rparr>,
               [GF\<lparr>[]\<^sub>\<circ>\<rparr>\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>[]\<^sub>\<circ>\<rparr> \<circ>\<^sub>A\<^bsub>?\<AA>\<^esub>
                GF\<lparr>1\<^sub>\<nat>\<rparr>\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>[]\<^sub>\<circ>\<rparr>,
                GF\<lparr>[]\<^sub>\<circ>\<rparr>\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>1\<^sub>\<nat>\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
                GF\<lparr>1\<^sub>\<nat>\<rparr>\<lparr>2\<^sub>\<nat>\<rparr>\<lparr>1\<^sub>\<nat>\<rparr>]\<^sub>\<circ>]\<^sub>\<circ>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_var 2),
               template_var 0)),
           template_hole 9),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 0)),
           t_empty)))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
         ?F = [?A, ?B, [[]\<^sub>\<circ>, ?g]\<^sub>\<circ>]\<^sub>\<circ>;
         ?A = [[]\<^sub>\<circ>, ?a, ?f]\<^sub>\<circ>;
         ?B = [[]\<^sub>\<circ>, ?a', ?f']\<^sub>\<circ>;
         ?g : ?a \<mapsto>\<^bsub>?\<AA>\<^esub> ?a';
         ?f : ?b \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr>;
         ?f' : ?b \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a'\<rparr>;
         ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?g\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
         ?f =
         ?f' |]
      ==> ?F \<in>\<^sub>\<circ> ?b \<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>Arr\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 12),
                  template_var 11),
                template_var 10),
              template_var 9)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 8),
              template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 10),
                  template_hole 9)))
            ),
        template_equation
         (template_var 7,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 6)),
                template_var 5)),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_hole 6)),
              template_var 4))),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_hole 6)),
                template_var 3)),
            template_var 2)),
        template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_hole 6)),
                template_var 1)),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 11),
                  template_var 3),
                template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 10),
                  template_var 8),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 10, template_var 9),
                      template_hole 4)),
                  template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 10),
                  template_var 8),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 10, template_var 9),
                      template_hole 4)),
                  template_var 1)),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 10, template_var 10),
                template_hole 3)),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 10, template_var 9),
                        template_hole 2)),
                    template_var 4))),
              template_var 2)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 7),
             template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 1, template_var 8),
                     template_var 9)),
                 template_hole 0)))
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
         ?F = [?A, ?B, [?g, []\<^sub>\<circ>]\<^sub>\<circ>]\<^sub>\<circ>;
         ?A = [?a, []\<^sub>\<circ>, ?f]\<^sub>\<circ>;
         ?B = [?a', []\<^sub>\<circ>, ?f']\<^sub>\<circ>;
         ?g : ?a \<mapsto>\<^bsub>?\<AA>\<^esub> ?a';
         ?f : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?b;
         ?f' : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a'\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?b;
         ?f' \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
         ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?g\<rparr> =
         ?f |]
      ==> ?F \<in>\<^sub>\<circ> ?\<FF> \<^sub>C\<^sub>F\<down> ?b\<lparr>Arr\<rparr>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 12),
                  template_var 11),
                template_var 10),
              template_var 9)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 8),
              template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 10),
                  template_hole 9)))
            ),
        template_equation
         (template_var 7,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 6)),
                template_var 5)),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_var 4)),
              template_hole 6))),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 3)),
                template_hole 6)),
            template_var 2)),
        template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 1)),
                template_hole 6)),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 11),
                  template_var 3),
                template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 10),
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 10, template_var 9),
                        template_hole 4)),
                    template_var 3)),
                template_var 8),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 10),
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 10, template_var 9),
                        template_hole 4)),
                    template_var 1)),
                template_var 8),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 10, template_var 10),
                template_hole 3)),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_var 0)),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 10, template_var 9),
                    template_hole 2)),
                template_var 4))),
          template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 12, template_var 7),
             template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 1, template_var 9),
                     template_var 8)),
                 template_hole 0)))
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
         ?ABF = [?A, ?B, ?F]\<^sub>\<circ>;
         ?A = [[]\<^sub>\<circ>, ?a, ?f]\<^sub>\<circ>;
         ?B = [[]\<^sub>\<circ>, ?a', ?f']\<^sub>\<circ>;
         ?F = [[]\<^sub>\<circ>, ?g]\<^sub>\<circ>;
         ?g : ?a \<mapsto>\<^bsub>?\<AA>\<^esub> ?a';
         ?f : ?b \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr>;
         ?f' : ?b \<mapsto>\<^bsub>?\<BB>\<^esub> ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a'\<rparr>;
         ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?g\<rparr> \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
         ?f =
         ?f' |]
      ==> ?ABF : ?A \<mapsto>\<^bsub>?b \<down>\<^sub>C\<^sub>F ?\<FF>\<^esub> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 13),
                  template_var 12),
                template_var 11),
              template_var 10)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 9),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 11),
                  template_hole 8)))
            ),
        template_equation
         (template_var 8,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 7)),
                template_var 6)),
            template_var 5)),
        template_equation
         (template_var 7,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_hole 5)),
                template_var 4)),
            template_var 3)),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_hole 5)),
                template_var 2)),
            template_var 1)),
        template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 5)),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 12),
                  template_var 4),
                template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 11),
                  template_var 9),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 9, template_var 10),
                      template_hole 3)),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 11),
                  template_var 9),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 9, template_var 10),
                      template_hole 3)),
                  template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 9, template_var 11),
                template_hole 2)),
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_app (template_hole 9, template_var 10),
                        template_hole 1)),
                    template_var 0))),
              template_var 3)),
          template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 9),
                     template_var 10)),
                 template_var 7),
               template_var 6),
             template_var 8)
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_intros",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?b \<in>\<^sub>\<circ> ?\<BB>\<lparr>Obj\<rparr>;
         ?ABF = [?A, ?B, ?F]\<^sub>\<circ>;
         ?A = [?a, []\<^sub>\<circ>, ?f]\<^sub>\<circ>;
         ?B = [?a', []\<^sub>\<circ>, ?f']\<^sub>\<circ>;
         ?F = [?g, []\<^sub>\<circ>]\<^sub>\<circ>;
         ?g : ?a \<mapsto>\<^bsub>?\<AA>\<^esub> ?a';
         ?f : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?b;
         ?f' : ?\<FF>\<lparr>ObjMap\<rparr>\<lparr>?a'\<rparr> \<mapsto>\<^bsub>?\<BB>\<^esub> ?b;
         ?f' \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub>
         ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?g\<rparr> =
         ?f |]
      ==> ?ABF : ?A \<mapsto>\<^bsub>?\<FF> \<^sub>C\<^sub>F\<down> ?b\<^esub> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 13),
                  template_var 12),
                template_var 11),
              template_var 10)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 9),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 11),
                  template_hole 8)))
            ),
        template_equation
         (template_var 8,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 7)),
                template_var 6)),
            template_var 5)),
        template_equation
         (template_var 7,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 4)),
                template_hole 5)),
            template_var 3)),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 2)),
                template_hole 5)),
            template_var 1)),
        template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0)),
            template_hole 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 12),
                  template_var 4),
                template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 11),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_app (template_hole 9, template_var 10),
                        template_hole 3)),
                    template_var 4)),
                template_var 9),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 11),
                  template_app
                   (template_app
                     (template_hole 9,
                      template_app
                       (template_app (template_hole 9, template_var 10),
                        template_hole 3)),
                    template_var 2)),
                template_var 9),
              template_var 1)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 9, template_var 11),
                template_hole 2)),
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_var 1)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 9, template_var 10),
                    template_hole 1)),
                template_var 0))),
          template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 0, template_var 10),
                     template_var 9)),
                 template_var 7),
               template_var 6),
             template_var 8)
           ))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?A =
         [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?h, ?k]\<^sub>\<circ>]\<^sub>\<circ>;
         [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?h,
           ?k]\<^sub>\<circ>]\<^sub>\<circ> : [?a, ?b,
         ?f]\<^sub>\<circ> \<mapsto>\<^bsub>?\<FF> \<^sub>C\<^sub>F\<down> ?c\<^esub> [?a',
           ?b', ?f']\<^sub>\<circ>;
         ?g : ?c \<mapsto>\<^bsub>?\<BB>\<^esub> ?c' |]
      ==> ?\<FF> \<^sub>C\<^sub>F\<down>\<^sub>A ?g\<lparr>ArrMap\<rparr>\<lparr>?A\<rparr> =
          [[?a, ?b,
            ?g \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub> ?f]\<^sub>\<circ>,
           [?a', ?b',
            ?g \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub> ?f']\<^sub>\<circ>,
           [?h, ?k]\<^sub>\<circ>]\<^sub>\<circ>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 15),
                  template_var 14),
                template_var 13),
              template_var 12)
            ),
        template_equation
         (template_var 11,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app
                           (template_hole 7,
                            template_app
                             (template_app
                               (template_hole 7, template_hole 6),
                              template_var 10)),
                          template_var 9)),
                      template_var 8))),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 7, template_hole 6),
                          template_var 7)),
                      template_var 6)),
                  template_var 5))),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_var 4)),
              template_var 3))),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 12),
                      template_var 2)),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app
                         (template_hole 7,
                          template_app
                           (template_app (template_hole 7, template_hole 6),
                            template_var 10)),
                        template_var 9)),
                    template_var 8)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 7, template_hole 6),
                          template_var 7)),
                      template_var 6)),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 7, template_hole 6),
                        template_app
                         (template_app
                           (template_hole 7,
                            template_app
                             (template_app
                               (template_hole 7,
                                template_app
                                 (template_app
                                   (template_hole 7, template_hole 6),
                                  template_var 10)),
                              template_var 9)),
                          template_var 8))),
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app
                           (template_hole 7,
                            template_app
                             (template_app
                               (template_hole 7, template_hole 6),
                              template_var 7)),
                          template_var 6)),
                      template_var 5))),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 7, template_hole 6),
                      template_var 4)),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 13),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 12),
                   template_var 0)),
               template_hole 1)),
           template_var 11),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 7, template_hole 6),
                             template_var 10)),
                         template_var 9)),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 3, template_var 13),
                           template_hole 0)),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 7, template_hole 6),
                             template_var 0)),
                         template_var 8))))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 7, template_hole 6),
                         template_var 7)),
                     template_var 6)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 3, template_var 13),
                       template_hole 0)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 7, template_hole 6),
                         template_var 0)),
                     template_var 5))))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_var 4)),
             template_var 3))))),
    ("CZH_ECAT_Comma.cat_comma_cs_simps",
     "[| ?\<FF> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<BB>;
         ?A =
         [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?h, ?k]\<^sub>\<circ>]\<^sub>\<circ>;
         [[?a, ?b, ?f]\<^sub>\<circ>, [?a', ?b', ?f']\<^sub>\<circ>,
          [?h,
           ?k]\<^sub>\<circ>]\<^sub>\<circ> : [?a, ?b,
         ?f]\<^sub>\<circ> \<mapsto>\<^bsub>?c' \<down>\<^sub>C\<^sub>F ?\<FF>\<^esub> [?a',
            ?b', ?f']\<^sub>\<circ>;
         ?g : ?c \<mapsto>\<^bsub>?\<BB>\<^esub> ?c' |]
      ==> ?g \<^sub>A\<down>\<^sub>C\<^sub>F ?\<FF>\<lparr>ArrMap\<rparr>\<lparr>?A\<rparr> =
          [[?a, ?b,
            ?f \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub> ?g]\<^sub>\<circ>,
           [?a', ?b',
            ?f' \<circ>\<^sub>A\<^bsub>?\<BB>\<^esub> ?g]\<^sub>\<circ>,
           [?h, ?k]\<^sub>\<circ>]\<^sub>\<circ>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 15),
                  template_var 14),
                template_var 13),
              template_var 12)
            ),
        template_equation
         (template_var 11,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app
                           (template_hole 7,
                            template_app
                             (template_app
                               (template_hole 7, template_hole 6),
                              template_var 10)),
                          template_var 9)),
                      template_var 8))),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 7, template_hole 6),
                          template_var 7)),
                      template_var 6)),
                  template_var 5))),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_var 4)),
              template_var 3))),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 12)),
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app
                         (template_hole 7,
                          template_app
                           (template_app (template_hole 7, template_hole 6),
                            template_var 10)),
                        template_var 9)),
                    template_var 8)),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app (template_hole 7, template_hole 6),
                          template_var 7)),
                      template_var 6)),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 7, template_hole 6),
                        template_app
                         (template_app
                           (template_hole 7,
                            template_app
                             (template_app
                               (template_hole 7,
                                template_app
                                 (template_app
                                   (template_hole 7, template_hole 6),
                                  template_var 10)),
                              template_var 9)),
                          template_var 8))),
                    template_app
                     (template_app
                       (template_hole 7,
                        template_app
                         (template_app
                           (template_hole 7,
                            template_app
                             (template_app
                               (template_hole 7, template_hole 6),
                              template_var 7)),
                          template_var 6)),
                      template_var 5))),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app (template_hole 7, template_hole 6),
                      template_var 4)),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 13),
                  template_var 1),
                template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 12)),
               template_hole 1)),
           template_var 11),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 7, template_hole 6),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 7, template_hole 6),
                             template_var 10)),
                         template_var 9)),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 3, template_var 13),
                           template_hole 0)),
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 7, template_hole 6),
                             template_var 8)),
                         template_var 0))))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 7, template_hole 6),
                         template_var 7)),
                     template_var 6)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app (template_hole 3, template_var 13),
                       template_hole 0)),
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app (template_hole 7, template_hole 6),
                         template_var 5)),
                     template_var 0))))),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_var 4)),
             template_var 3))))),
    ("CZH_ECAT_Comma.cat_comma_HomI",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?F = [?A, ?B, [?g, ?h]\<^sub>\<circ>]\<^sub>\<circ>;
         ?A = [?a, ?b, ?f]\<^sub>\<circ>;
         ?B = [?a', ?b', ?f']\<^sub>\<circ>;
         ?g : ?a \<mapsto>\<^bsub>?\<AA>\<^esub> ?a';
         ?h : ?b \<mapsto>\<^bsub>?\<BB>\<^esub> ?b';
         ?f : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>?b\<rparr>;
         ?f' : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>?a'\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>?b'\<rparr>;
         ?f' \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
         ?\<GG>\<lparr>ArrMap\<rparr>\<lparr>?g\<rparr> =
         ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>?h\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
         ?f |]
      ==> ?F \<in>\<^sub>\<circ> cat_comma_Hom ?\<GG> ?\<HH> ?A ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 16),
                  template_var 15),
                template_var 14),
              template_var 13)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 16),
                  template_var 12),
                template_var 14),
              template_var 11)
            ),
        template_equation
         (template_var 10,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_var 9)),
                template_var 8)),
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 7)),
              template_var 6))),
        template_equation
         (template_var 9,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_var 5)),
                template_var 4)),
            template_var 3)),
        template_equation
         (template_var 8,
          template_app
           (template_app
             (template_hole 9,
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 9, template_hole 8),
                    template_var 2)),
                template_var 1)),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 15),
                  template_var 5),
                template_var 2),
              template_var 7)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 12),
                  template_var 4),
                template_var 1),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 14),
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 6, template_var 13),
                        template_hole 5)),
                    template_var 5)),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 6, template_var 11),
                      template_hole 5)),
                  template_var 4)),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 14),
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 6, template_var 13),
                        template_hole 5)),
                    template_var 2)),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 6, template_var 11),
                      template_hole 5)),
                  template_var 1)),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 6, template_var 14),
                template_hole 4)),
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_var 0)),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 6, template_var 13),
                    template_hole 3)),
                template_var 7))),
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 6, template_var 14),
                template_hole 4)),
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 6, template_var 11),
                        template_hole 3)),
                    template_var 6))),
              template_var 3)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 10),
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 13),
                     template_var 11),
                   template_var 9),
                 template_var 8)))
           ))),
    ("CZH_ECAT_Comma.cat_comma_is_arrI",
     "[| ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?ABF = [?A, ?B, ?F]\<^sub>\<circ>; ?A = [?a, ?b, ?f]\<^sub>\<circ>;
         ?B = [?a', ?b', ?f']\<^sub>\<circ>; ?F = [?g, ?h]\<^sub>\<circ>;
         ?g : ?a \<mapsto>\<^bsub>?\<AA>\<^esub> ?a';
         ?h : ?b \<mapsto>\<^bsub>?\<BB>\<^esub> ?b';
         ?f : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>?a\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>?b\<rparr>;
         ?f' : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>?a'\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>?b'\<rparr>;
         ?f' \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
         ?\<GG>\<lparr>ArrMap\<rparr>\<lparr>?g\<rparr> =
         ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>?h\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
         ?f |]
      ==> ?ABF : ?A \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 17),
                  template_var 16),
                template_var 15),
              template_var 14)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 17),
                  template_var 13),
                template_var 15),
              template_var 12)
            ),
        template_equation
         (template_var 11,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 10)),
                template_var 9)),
            template_var 8)),
        template_equation
         (template_var 10,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 7)),
                template_var 6)),
            template_var 5)),
        template_equation
         (template_var 9,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 4)),
                template_var 3)),
            template_var 2)),
        template_equation
         (template_var 8,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_var 1)),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 16),
                  template_var 7),
                template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 13),
                  template_var 6),
                template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 15),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 4, template_var 14),
                        template_hole 3)),
                    template_var 7)),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 4, template_var 12),
                      template_hole 3)),
                  template_var 6)),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 15),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 4, template_var 14),
                        template_hole 3)),
                    template_var 4)),
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 4, template_var 12),
                      template_hole 3)),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 4, template_var 15),
                template_hole 2)),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 4, template_var 14),
                    template_hole 1)),
                template_var 1))),
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 4, template_var 15),
                template_hole 2)),
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 7, template_hole 6),
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app
                       (template_app (template_hole 4, template_var 12),
                        template_hole 1)),
                    template_var 0))),
              template_var 5)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 0, template_var 14),
                     template_var 12)),
                 template_var 10),
               template_var 9),
             template_var 11)
           ))),
    ("CZH_ECAT_Comma.cat_comma_HomE",
     "[| ?F \<in>\<^sub>\<circ> cat_comma_Hom ?\<GG> ?\<HH> ?A ?B;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         !!a b f a' b' f' g h.
            [| ?F = [?A, ?B, [g, h]\<^sub>\<circ>]\<^sub>\<circ>;
               ?A = [a, b, f]\<^sub>\<circ>;
               ?B = [a', b', f']\<^sub>\<circ>;
               g : a \<mapsto>\<^bsub>?\<AA>\<^esub> a';
               h : b \<mapsto>\<^bsub>?\<BB>\<^esub> b';
               f : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>b\<rparr>;
               f' : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>a'\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>b'\<rparr>;
               f' \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
               ?\<GG>\<lparr>ArrMap\<rparr>\<lparr>g\<rparr> =
               ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>h\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
               f |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 9),
              template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 10, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 8)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 1),
                template_var 2),
              template_var 7)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("CZH_ECAT_Comma.cat_comma_is_arrE",
     "[| ?ABF : ?A \<mapsto>\<^bsub>?\<GG> \<^sub>C\<^sub>F\<down>\<^sub>C\<^sub>F ?\<HH>\<^esub> ?B;
         ?\<GG> :
         ?\<AA> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         ?\<HH> :
         ?\<BB> \<mapsto>\<mapsto>\<^sub>C\<^bsub>?\<alpha>\<^esub> ?\<CC>;
         !!a b f a' b' f' g h.
            [| ?ABF =
               [[a, b, f]\<^sub>\<circ>, [a', b', f']\<^sub>\<circ>,
                [g, h]\<^sub>\<circ>]\<^sub>\<circ>;
               ?A = [a, b, f]\<^sub>\<circ>;
               ?B = [a', b', f']\<^sub>\<circ>;
               g : a \<mapsto>\<^bsub>?\<AA>\<^esub> a';
               h : b \<mapsto>\<^bsub>?\<BB>\<^esub> b';
               f : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>a\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>b\<rparr>;
               f' : ?\<GG>\<lparr>ObjMap\<rparr>\<lparr>a'\<rparr> \<mapsto>\<^bsub>?\<CC>\<^esub> ?\<HH>\<lparr>ObjMap\<rparr>\<lparr>b'\<rparr>;
               f' \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
               ?\<GG>\<lparr>ArrMap\<rparr>\<lparr>g\<rparr> =
               ?\<HH>\<lparr>ArrMap\<rparr>\<lparr>h\<rparr> \<circ>\<^sub>A\<^bsub>?\<CC>\<^esub>
               f |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_var 9),
                      template_var 8)),
                  template_var 7),
                template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 9)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 1),
                template_var 2),
              template_var 8)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0)))]
