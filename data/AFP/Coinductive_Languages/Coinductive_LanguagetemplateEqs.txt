   [("Coinductive_Language.Inter_FullL",
     "Coinductive_Language.Inter \<Sigma>\<^sup>* ?r = ?r",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Coinductive_Language.Inter_ZeroL",
     "Coinductive_Language.Inter Zero ?r = Zero",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Coinductive_Language.Inter_FullR",
     "Coinductive_Language.Inter ?r \<Sigma>\<^sup>* = ?r",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Coinductive_Language.Inter_ZeroR",
     "Coinductive_Language.Inter ?r Zero = Zero",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Coinductive_Language.Inter_idem",
     "Coinductive_Language.Inter ?r ?r = ?r",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Coinductive_Language.Not_Not",
     "Coinductive_Language.Not (Coinductive_Language.Not ?r) = ?r",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Coinductive_Language.Plus_FullL",
     "Plus \<Sigma>\<^sup>* ?r = \<Sigma>\<^sup>*",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Coinductive_Language.Plus_ZeroL", "Plus Zero ?r = ?r",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Coinductive_Language.Plus_FullR",
     "Plus ?r \<Sigma>\<^sup>* = \<Sigma>\<^sup>*",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Coinductive_Language.Plus_ZeroR", "Plus ?r Zero = ?r",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Coinductive_Language.Plus_idem", "Plus ?r ?r = ?r",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 0), template_var 0),
       template_var 0)),
    ("Coinductive_Language.Shuffle_OneL", "Shuffle One ?r = ?r",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Coinductive_Language.Shuffle_ZeroL", "Shuffle Zero ?r = Zero",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Coinductive_Language.Shuffle_OneR", "Shuffle ?r One = ?r",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Coinductive_Language.Shuffle_ZeroR", "Shuffle ?r Zero = Zero",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Coinductive_Language.StarLR_Zero",
     "Coinductive_Language.StarLR Zero ?r = Zero",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Coinductive_Language.Times_OneL", "Times One ?r = ?r",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Coinductive_Language.Times_ZeroL", "Times Zero ?r = Zero",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Coinductive_Language.Times_OneR", "Times ?r One = ?r",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Coinductive_Language.Times_ZeroR", "Times ?r Zero = Zero",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Coinductive_Language.ShuffleLR_ZeroL",
     "Coinductive_Language.ShuffleLR Zero ?r = Zero",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Coinductive_Language.ShuffleLR_ZeroR",
     "Coinductive_Language.ShuffleLR ?r Zero = Zero",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Coinductive_Language.TimesLR_ZeroL",
     "Coinductive_Language.TimesLR Zero ?r = Zero",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Coinductive_Language.TimesLR_ZeroR",
     "Coinductive_Language.TimesLR ?r Zero = Zero",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Coinductive_Language.in_language_to_language",
     "Collect (in_language (to_language ?L)) = ?L",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_var 0)),
    ("Coinductive_Language.ge_One", "(One <= ?r) = \<oo> ?r",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_Language.Star_Star", "Star (Star ?r) = Star ?r",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_Language.Shuffle_Plus_ShuffleLR_One",
     "Coinductive_Language.Times_Plus
       (Coinductive_Language.ShuffleLR ?r One) =
      ?r",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("Coinductive_Language.Times_Plus_TimesLR_One",
     "Coinductive_Language.Times_Plus
       (Coinductive_Language.TimesLR ?r One) =
      ?r",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("Coinductive_Language.to_language_in_language",
     "to_language (Collect (in_language ?L)) = ?L",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_var 0)),
    ("Coinductive_Language.length_tails",
     "length (tails ?xs) = Suc (length ?xs)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Coinductive_Language.Inter_comm",
     "Coinductive_Language.Inter ?r ?s = Coinductive_Language.Inter ?s ?r",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Coinductive_Language.Plus_comm", "Plus ?r ?s = Plus ?s ?r",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Coinductive_Language.Shuffle_comm", "Shuffle ?r ?s = Shuffle ?s ?r",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Coinductive_Language.Times_Star",
     "Times (Star ?r) (Star ?r) = Star ?r",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Coinductive_Language.Star_unfoldL",
     "Star ?r = Plus One (Times ?r (Star ?r))",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 3, template_var 0))))),
    ("Coinductive_Language.Star_unfoldR",
     "Star ?r = Plus One (Times (Star ?r) ?r)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 0)),
           template_var 0)))),
    ("Coinductive_Language.Plus_idem_assoc",
     "Plus ?r (Plus ?r ?s) = Plus ?r ?s",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Coinductive_Language.TIMES_snoc_One",
     "TIMES (?xs @ [One]) = TIMES ?xs",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_hole 0))),
       template_app (template_hole 4, template_var 0))),
    ("Coinductive_Language.\<oo>_PLUS",
     "\<oo> (PLUS ?xs) = (EX x:set ?xs. \<oo> x)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Coinductive_Language.\<oo>_TIMES",
     "\<oo> (TIMES ?xs) = (ALL x:set ?xs. \<oo> x)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         t_empty))),
    ("Coinductive_Language.\<oo>_Shuffle",
     "\<oo> (Shuffle ?r ?s) = (\<oo> ?r & \<oo> ?s)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_Language.\<oo>_Times",
     "\<oo> (Times ?r ?s) = (\<oo> ?r & \<oo> ?s)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_Language.Not_Inter",
     "Coinductive_Language.Not (Coinductive_Language.Inter ?r ?s) =
      Plus (Coinductive_Language.Not ?r) (Coinductive_Language.Not ?s)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_Language.Not_Plus",
     "Coinductive_Language.Not (Plus ?r ?s) =
      Coinductive_Language.Inter (Coinductive_Language.Not ?r)
       (Coinductive_Language.Not ?s)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_Language.Times_Plus_Plus",
     "Coinductive_Language.Times_Plus (Plus ?r ?s) =
      Plus (Coinductive_Language.Times_Plus ?r)
       (Coinductive_Language.Times_Plus ?s)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Coinductive_Language.\<dd>_Star",
     "\<dd> (Star ?r) = (%a. Times (\<dd> ?r a) (Star ?r))",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("Coinductive_Language.Inter_assoc",
     "Coinductive_Language.Inter (Coinductive_Language.Inter ?r ?s) ?t =
      Coinductive_Language.Inter ?r (Coinductive_Language.Inter ?s ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_Language.Plus_rotate",
     "Plus ?r (Plus ?s ?t) = Plus ?s (Plus ?r ?t)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Coinductive_Language.Plus_assoc",
     "Plus (Plus ?r ?s) ?t = Plus ?r (Plus ?s ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_Language.Shuffle_assoc",
     "Shuffle (Shuffle ?r ?s) ?t = Shuffle ?r (Shuffle ?s ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_Language.StarLR_Times",
     "Coinductive_Language.StarLR (Times ?r ?s) ?t =
      Times ?r (Coinductive_Language.StarLR ?s ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Coinductive_Language.Times_assoc",
     "Times (Times ?r ?s) ?t = Times ?r (Times ?s ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coinductive_Language.StarLR_Times_Plus_One",
     "Coinductive_Language.StarLR (Times ?r (Plus One ?s)) ?s =
      Coinductive_Language.StarLR ?r ?s",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1), template_var 0))),
    ("Coinductive_Language.\<dd>_PLUS",
     "\<dd> (PLUS ?xs) ?a = PLUS (map (%r. \<dd> r ?a) ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Coinductive_Language.Plus_le_iff",
     "(Plus ?r ?s <= ?t) = (?r <= ?t & ?s <= ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Coinductive_Language.denesting",
     "Star (Plus ?r ?s) = Times (Star ?r) (Star (Times ?s (Star ?r)))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app (template_hole 2, template_var 1)))))),
    ("Coinductive_Language.Shuffle_PlusR",
     "Shuffle ?r (Plus ?s ?t) = Plus (Shuffle ?r ?s) (Shuffle ?r ?t)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Coinductive_Language.Shuffle_PlusL",
     "Shuffle (Plus ?r ?s) ?t = Plus (Shuffle ?r ?t) (Shuffle ?s ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Coinductive_Language.StarLR_Plus",
     "Coinductive_Language.StarLR (Plus ?r ?s) ?t =
      Plus (Coinductive_Language.StarLR ?r ?t)
       (Coinductive_Language.StarLR ?s ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Coinductive_Language.Times_PlusR",
     "Times ?r (Plus ?s ?t) = Plus (Times ?r ?s) (Times ?r ?t)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Coinductive_Language.Times_PlusL",
     "Times (Plus ?r ?s) ?t = Plus (Times ?r ?t) (Times ?s ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Coinductive_Language.sliding",
     "Times (Star (Times ?r ?s)) ?r = Times ?r (Star (Times ?s ?r))",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))),
         template_var 1),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Coinductive_Language.ShuffleLR_PlusR",
     "Coinductive_Language.ShuffleLR ?r (Plus ?s ?t) =
      Plus (Coinductive_Language.ShuffleLR ?r ?s)
       (Coinductive_Language.ShuffleLR ?r ?t)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Coinductive_Language.ShuffleLR_PlusL",
     "Coinductive_Language.ShuffleLR (Plus ?r ?s) ?t =
      Plus (Coinductive_Language.ShuffleLR ?r ?t)
       (Coinductive_Language.ShuffleLR ?s ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Coinductive_Language.TimesLR_PlusR",
     "Coinductive_Language.TimesLR ?r (Plus ?s ?t) =
      Plus (Coinductive_Language.TimesLR ?r ?s)
       (Coinductive_Language.TimesLR ?r ?t)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Coinductive_Language.TimesLR_PlusL",
     "Coinductive_Language.TimesLR (Plus ?r ?s) ?t =
      Plus (Coinductive_Language.TimesLR ?r ?t)
       (Coinductive_Language.TimesLR ?s ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Coinductive_Language.\<oo>_foldr_Plus",
     "\<oo> (foldr Plus ?xs ?s) = (EX x:set (?s # ?xs). \<oo> x)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         t_empty))),
    ("Coinductive_Language.\<oo>_foldr_Times",
     "\<oo> (foldr Times ?xs ?s) = (ALL x:set (?s # ?xs). \<oo> x)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))),
         t_empty))),
    ("Coinductive_Language.Shuffle_Plus_ShuffleLR_PlusR",
     "Coinductive_Language.Times_Plus
       (Coinductive_Language.ShuffleLR ?r (Plus ?s ?t)) =
      Plus
       (Coinductive_Language.Times_Plus
         (Coinductive_Language.ShuffleLR ?r ?s))
       (Coinductive_Language.Times_Plus
         (Coinductive_Language.ShuffleLR ?r ?t))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Coinductive_Language.Shuffle_Plus_ShuffleLR_PlusL",
     "Coinductive_Language.Times_Plus
       (Coinductive_Language.ShuffleLR (Plus ?r ?s) ?t) =
      Plus
       (Coinductive_Language.Times_Plus
         (Coinductive_Language.ShuffleLR ?r ?t))
       (Coinductive_Language.Times_Plus
         (Coinductive_Language.ShuffleLR ?s ?t))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Coinductive_Language.Times_Plus_TimesLR_PlusR",
     "Coinductive_Language.Times_Plus
       (Coinductive_Language.TimesLR ?r (Plus ?s ?t)) =
      Plus
       (Coinductive_Language.Times_Plus
         (Coinductive_Language.TimesLR ?r ?s))
       (Coinductive_Language.Times_Plus
         (Coinductive_Language.TimesLR ?r ?t))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Coinductive_Language.Times_Plus_TimesLR_PlusL",
     "Coinductive_Language.Times_Plus
       (Coinductive_Language.TimesLR (Plus ?r ?s) ?t) =
      Plus
       (Coinductive_Language.Times_Plus
         (Coinductive_Language.TimesLR ?r ?t))
       (Coinductive_Language.Times_Plus
         (Coinductive_Language.TimesLR ?s ?t))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Coinductive_Language.\<dd>_Shuffle",
     "\<dd> (Shuffle ?r ?s) =
      (%a. Plus (Shuffle (\<dd> ?r a) ?s) (Shuffle ?r (\<dd> ?s a)))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       t_empty)),
    ("Coinductive_Language.\<dd>_foldr_Plus",
     "\<dd> (foldr Plus ?xs ?s) ?a =
      foldr Plus (map (%r. \<dd> r ?a) ?xs) (\<dd> ?s ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, t_empty), template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Coinductive_Language.tails_snoc",
     "tails (?xs @ [?x]) = map (%ys. ys @ [?x]) (tails ?xs) @ [[]]",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1),
           template_app
            (template_app (template_hole 5, template_var 0),
             template_hole 4))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, t_empty),
             template_app (template_hole 7, template_var 1))),
         template_app
          (template_app (template_hole 1, template_hole 4),
           template_hole 0)))),
    ("Coinductive_Language.\<dd>_Times",
     "\<dd> (Times ?r ?s) =
      (%a. if \<oo> ?r then Plus (Times (\<dd> ?r a) ?s) (\<dd> ?s a)
           else Times (\<dd> ?r a) ?s)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       t_empty)),
    ("Coinductive_Language.\<dd>_TIMES",
     "\<dd> (TIMES ?xs) ?a =
      (let n = length (takeWhile \<oo> ?xs)
       in PLUS
           (map (%zs. TIMES (\<dd> (hd zs) ?a # tl zs))
             (take (Suc n) (tails (?xs @ [One])))))",
     template_equation
      (template_app
        (template_app
          (template_hole 16,
           template_app (template_hole 15, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 12, template_hole 11),
               template_var 1))),
         t_empty))),
    ("Coinductive_Language.\<dd>_foldr_Times",
     "\<dd> (foldr Times ?xs ?s) ?a =
      (let n = length (takeWhile \<oo> ?xs)
       in PLUS
           (map (%zs. TIMES (\<dd> (hd zs) ?a # tl zs))
             (take (Suc n) (tails (?xs @ [?s])))))",
     template_equation
      (template_app
        (template_app
          (template_hole 17,
           template_app
            (template_app
              (template_app (template_hole 16, template_hole 15),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 14,
           template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 12, template_hole 11),
               template_var 2))),
         t_empty)))]
