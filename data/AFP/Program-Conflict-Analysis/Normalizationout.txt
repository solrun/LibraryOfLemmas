Loading theory "Draft.LTS" (required by "Draft.NormalizationMoreTemplates" via "Draft.Normalization" via "Draft.ThreadTracking")
Loading theory "HOL-Library.Cancellation" (required by "Draft.NormalizationMoreTemplates" via "Draft.Normalization" via "Draft.ThreadTracking" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.NormalizationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.NormalizationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
Proofs for inductive predicate(s) "trclp"
  Proving monotonicity ...
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.134s elapsed time, 0.557s cpu time, 0.032s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.NormalizationMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "Draft.LTS"
### 0.210s elapsed time, 0.865s cpu time, 0.032s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.NormalizationMoreTemplates" via "Draft.Normalization" via "Draft.ThreadTracking" via "Draft.Misc" via "HOL-Library.Subseq_Order")
Found termination order: "size_list size <*mlex*> {}"
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
### theory "HOL-Library.Nat_Bijection"
### 0.336s elapsed time, 1.349s cpu time, 0.124s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.NormalizationMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.210s elapsed time, 0.820s cpu time, 0.092s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.NormalizationMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.427s elapsed time, 1.718s cpu time, 0.124s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.NormalizationMoreTemplates" via "Draft.Normalization" via "Draft.ThreadTracking")
consts
  prefixes :: "'a list => 'a list list"
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  suffixes :: "'a list => 'a list list"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.078s elapsed time, 4.091s cpu time, 0.910s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.NormalizationMoreTemplates" via "Draft.ExtrEqs")
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.706s elapsed time, 6.559s cpu time, 1.260s GC time
Loading theory "HOL-Library.Subseq_Order" (required by "Draft.NormalizationMoreTemplates" via "Draft.Normalization" via "Draft.ThreadTracking" via "Draft.Misc")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
instantiation
  list :: (type) ord
  less_eq_list == less_eq :: 'a list => 'a list => bool
  less_list == less :: 'a list => 'a list => bool
### theory "HOL-Library.Subseq_Order"
### 0.081s elapsed time, 0.310s cpu time, 0.077s GC time
Found termination order: "size <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
### theory "HOL-Library.BigO"
### 0.857s elapsed time, 3.133s cpu time, 0.430s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
Found termination order: "size <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
### theory "HOL-Library.Tree"
### 2.431s elapsed time, 8.581s cpu time, 2.221s GC time
Loading theory "Draft.Templates" (required by "Draft.NormalizationMoreTemplates" via "Draft.ExtrEqs")
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.070s elapsed time, 0.140s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.NormalizationMoreTemplates")
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.561s elapsed time, 1.197s cpu time, 0.174s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.597s elapsed time, 10.176s cpu time, 2.476s GC time
Loading theory "Draft.Misc" (required by "Draft.NormalizationMoreTemplates" via "Draft.Normalization" via "Draft.ThreadTracking")
locale AC
  fixes f :: "'a => 'a => 'a"
  assumes "AC f"
locale su_rel_fun
  fixes F :: "('a * 'b) set"
    and f :: "'a => 'b"
  assumes "su_rel_fun F f"
### theory "Draft.Misc"
### 0.341s elapsed time, 0.515s cpu time, 0.086s GC time
Loading theory "Draft.Flowgraph" (required by "Draft.NormalizationMoreTemplates" via "Draft.Normalization" via "Draft.Semantics")
Loading theory "Draft.Interleave" (required by "Draft.NormalizationMoreTemplates" via "Draft.Normalization" via "Draft.Semantics")
Loading theory "Draft.ThreadTracking" (required by "Draft.NormalizationMoreTemplates" via "Draft.Normalization")
### theory "Draft.Interleave"
### 0.222s elapsed time, 0.675s cpu time, 0.085s GC time
Loading theory "Draft.ConsInterleave" (required by "Draft.NormalizationMoreTemplates" via "Draft.Normalization")
locale env_no_step
  fixes gtrs :: "(('s * 's multiset) * 'l * 's * 's multiset) set"
  assumes "env_no_step gtrs"
Found termination order:
  "(%p. length (snd (snd p))) <*mlex*> (%p. length (fst p)) <*mlex*> {}"
### theory "Draft.ConsInterleave"
### 0.413s elapsed time, 1.277s cpu time, 0.234s GC time
Proofs for inductive predicate(s) "gtrpp"
  Proving monotonicity ...
### theory "Draft.ThreadTracking"
### 0.919s elapsed time, 2.580s cpu time, 0.424s GC time
locale flowgraph
  fixes fg :: "('n, 'p, 'ba, 'm, 'more) flowgraph_rec_scheme"  (structure)
  assumes "flowgraph fg"
locale eflowgraph
  fixes fg :: "('a, 'b, 'c, 'd, 'e) flowgraph_rec_scheme"  (structure)
  assumes "eflowgraph fg"
### theory "Draft.Flowgraph"
### 1.006s elapsed time, 2.670s cpu time, 0.424s GC time
Loading theory "Draft.Semantics" (required by "Draft.NormalizationMoreTemplates" via "Draft.Normalization")
consts
  atU_s :: "'n set => 'n list => bool"
Proofs for inductive predicate(s) "refpointp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "trssp"
  Proving monotonicity ...
### theory "Draft.Semantics"
### 1.442s elapsed time, 1.613s cpu time, 0.238s GC time
Loading theory "Draft.Normalization" (required by "Draft.NormalizationMoreTemplates")
Proofs for inductive predicate(s) "ntrsp"
  Proving monotonicity ...
### theory "Draft.Normalization"
### 0.850s elapsed time, 1.000s cpu time, 0.209s GC time
Loading theory "Draft.NormalizationMoreTemplates"
val templateLemmas =
   [("Normalization.mon_env_empty", "mon_env ?fg [] = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Normalization.mon_loc_empty", "mon_loc ?fg [] = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Normalization.mon_ww_empty", "mon_ww ?fg [] = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Normalization.\<alpha>nl_simps1",
     "\<alpha>nl ?fg o ENV = \<alpha>n ?fg",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Normalization.\<alpha>nl_simps1",
     "\<alpha>nl ?fg o LOC = \<alpha>n ?fg",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Normalization.\<alpha>n_\<alpha>nl",
     "\<alpha>n ?fg o le_rem_s = \<alpha>nl ?fg",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Normalization.mon_env_map_loc", "mon_env ?fg (map LOC ?w) = {}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_hole 0)),
    ("Normalization.mon_loc_map_env", "mon_loc ?fg (map ENV ?w) = {}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_hole 0)),
    ("Normalization.\<alpha>n_simps", "\<alpha>n ?fg [] = ({}, {})",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_hole 0))),
    ("Normalization.\<alpha>nl_simps",
     "\<alpha>nl ?fg (ENV ?x) = \<alpha>n ?fg ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Normalization.\<alpha>nl_simps",
     "\<alpha>nl ?fg (LOC ?x) = \<alpha>n ?fg ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Normalization.cil_\<alpha>n_cons_helper",
     "mon_pl (map (\<alpha>n ?fg) ?wb) = mon_ww ?fg ?wb",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Normalization.mon_env_map_env",
     "mon_env ?fg (map ENV ?w) = mon_ww ?fg ?w",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Normalization.mon_loc_map_loc",
     "mon_loc ?fg (map LOC ?w) = mon_ww ?fg ?w",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Normalization.mon_ww_of_foldl",
     "mon_w ?fg (foldl (@) [] ?ww) = mon_ww ?fg ?ww",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Normalization.cil_\<alpha>nl_cons_helper",
     "mon_pl (map (\<alpha>nl ?fg) ?wb) = mon_ww ?fg (map le_rem_s ?wb)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Normalization.mon_ww_ileq",
     "?w \<preceq> ?w' ==> mon_ww ?fg ?w <= mon_ww ?fg ?w'",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Normalization.mon_env_ileq",
     "?w \<preceq> ?w' ==> mon_env ?fg ?w <= mon_env ?fg ?w'",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Normalization.mon_loc_ileq",
     "?w \<preceq> ?w' ==> mon_loc ?fg ?w <= mon_loc ?fg ?w'",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Normalization.mon_pl_of_\<alpha>nl",
     "mon_pl (map (\<alpha>nl ?fg) ?w) = mon_loc ?fg ?w Un mon_env ?fg ?w",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Normalization.mon_env_unconc",
     "mon_env ?fg (?w1.0 @ ?w2.0) = mon_env ?fg ?w1.0 Un mon_env ?fg ?w2.0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Normalization.mon_loc_unconc",
     "mon_loc ?fg (?w1.0 @ ?w2.0) = mon_loc ?fg ?w1.0 Un mon_loc ?fg ?w2.0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Normalization.mon_ww_unconc",
     "mon_ww ?fg (?ww1.0 @ ?ww2.0) =
      mon_ww ?fg ?ww1.0 Un mon_ww ?fg ?ww2.0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Normalization.mon_ww_uncons",
     "mon_ww ?fg (?ee # ?ww) = mon_w ?fg ?ee Un mon_ww ?fg ?ww",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Normalization.mon_ww_of_le_rem",
     "mon_ww ?fg (map le_rem_s ?w) = mon_loc ?fg ?w Un mon_env ?fg ?w",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Normalization.\<alpha>n_fst_snd",
     "fst (\<alpha>n ?fg ?w) Un snd (\<alpha>n ?fg ?w) = mon_w ?fg ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Normalization.\<alpha>n_simps",
     "\<alpha>n ?fg (?e # ?w) = (mon_e ?fg ?e, mon_w ?fg ?w)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Normalization.mon_env_single",
     "mon_env ?fg [?e] = (case ?e of LOC a => {} | ENV a => mon_w ?fg a)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app
        (template_app (template_app (template_hole 2, t_empty), t_empty),
         template_var 0))),
    ("Normalization.mon_loc_single",
     "mon_loc ?fg [?e] = (case ?e of LOC a => mon_w ?fg a | ENV a => {})",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_hole 3)),
       template_app
        (template_app (template_app (template_hole 2, t_empty), t_empty),
         template_var 0))),
    ("Normalization.mon_env_uncons",
     "mon_env ?fg (?e # ?w) =
      (case ?e of LOC a => {} | ENV a => mon_w ?fg a) Un mon_env ?fg ?w",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), t_empty),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_var 0)))),
    ("Normalization.mon_loc_uncons",
     "mon_loc ?fg (?e # ?w) =
      (case ?e of LOC a => mon_w ?fg a | ENV a => {}) Un mon_loc ?fg ?w",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), t_empty),
             template_var 1)),
         template_app
          (template_app (template_hole 5, template_var 2),
           template_var 0)))),
    ("Normalization.mon_ww_cil",
     "?w : ?w1.0 \<otimes>\<^bsub>?\<alpha>\<^esub> ?w2.0 ==>
      mon_ww ?fg ?w = mon_ww ?fg ?w1.0 Un mon_ww ?fg ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 4),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Normalization.mon_env_cil",
     "?w : ?w1.0 \<otimes>\<^bsub>?\<alpha>\<^esub> ?w2.0 ==>
      mon_env ?fg ?w = mon_env ?fg ?w1.0 Un mon_env ?fg ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 4),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Normalization.mon_loc_cil",
     "?w : ?w1.0 \<otimes>\<^bsub>?\<alpha>\<^esub> ?w2.0 ==>
      mon_loc ?fg ?w = mon_loc ?fg ?w1.0 Un mon_loc ?fg ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 4),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Normalization.ntrsp_ntrs_eq",
     "ntrsp ?fg = (%x xa xb xc xd. ((x, xa), xb, xc, xd) : ntrs ?fg)",
     template_equation
      (template_app (template_hole 5, template_var 0), t_empty)),
    ("Normalization.ntr_is_tr_s",
     "(?c, ?w, ?c') : ntr ?fg ==> (?c, ?w, ?c') : trcl (tr ?fg)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1))),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 3),
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 1))),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Normalization.ntr_is_tr",
     "(?c, ?ww, ?c') : trcl (ntr ?fg) ==>
      (?c, foldl (@) [] ?ww, ?c') : trcl (tr ?fg)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 3),
                  template_app
                   (template_app (template_hole 12, template_var 2),
                    template_var 1))),
              template_app
               (template_hole 11,
                template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 3),
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app
                      (template_app
                        (template_app (template_hole 5, template_hole 4),
                         template_hole 3),
                       template_var 2)),
                   template_var 1))),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Normalization.ntrs_is_trss_s",
     "((?s, ?c), ?w, ?s', ?c') : ntrs ?fg ==>
      ((?s, ?c), ?w, ?s', ?c') : trcl (trss ?fg)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 5),
                      template_var 4)),
                  template_app
                   (template_app (template_hole 3, template_var 3),
                    template_app
                     (template_app (template_hole 4, template_var 2),
                      template_var 1)))),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 5),
                     template_var 4)),
                 template_app
                  (template_app (template_hole 3, template_var 3),
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_var 1)))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Normalization.ntrs_stack_comp_s",
     "((?s, ?c), ?ee, ?s', ?c') : ntrs ?fg ==>
      ((?s @ ?r, ?c), ?ee, ?s' @ ?r, ?c') : ntrs ?fg",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 6),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 2, template_var 4),
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)))),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 0)),
                     template_var 5)),
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 0)),
                     template_var 2)))),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Normalization.ntrs_is_trss",
     "((?s, ?c), ?w, ?s', ?c') : trcl (ntrs ?fg) ==>
      ((?s, ?c), foldl (@) [] ?w, ?s', ?c') : trcl (trss ?fg)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app
                     (template_app (template_hole 11, template_var 5),
                      template_var 4)),
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_app
                     (template_app (template_hole 11, template_var 2),
                      template_var 1)))),
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 11, template_var 5),
                     template_var 4)),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app
                        (template_app (template_hole 4, template_hole 3),
                         template_hole 2),
                       template_var 3)),
                   template_app
                    (template_app (template_hole 11, template_var 2),
                     template_var 1)))),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Normalization.ntrs_stack_comp",
     "((?s, ?c), ?ww, ?s', ?c') : trcl (ntrs ?fg) ==>
      ((?s @ ?r, ?c), ?ww, ?s' @ ?r, ?c') : trcl (ntrs ?fg)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 6),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_app (template_hole 4, template_var 3),
                      template_var 2)))),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 0)),
                     template_var 5)),
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 0)),
                     template_var 2)))),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)))
           ))),
    ("Normalization.cil_\<alpha>n_cons2",
     "[| ?w : ?wa \<otimes>\<^bsub>\<alpha>n ?fg\<^esub> ?wb;
         fst (\<alpha>n ?fg ?e) Int mon_ww ?fg ?wa = {} |]
      ==> ?e # ?w : ?wa \<otimes>\<^bsub>\<alpha>n ?fg\<^esub> ?e # ?wb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app (template_hole 6, template_var 2)),
                template_var 1))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 0))),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 3)),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 4)),
             template_app
              (template_app
                (template_app (template_hole 7, template_var 3),
                 template_app (template_hole 6, template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Normalization.cil_\<alpha>n_cons1",
     "[| ?w : ?wa \<otimes>\<^bsub>\<alpha>n ?fg\<^esub> ?wb;
         fst (\<alpha>n ?fg ?e) Int mon_ww ?fg ?wb = {} |]
      ==> ?e # ?w : ?e # ?wa \<otimes>\<^bsub>\<alpha>n ?fg\<^esub> ?wb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app (template_hole 6, template_var 2)),
                template_var 1))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 0))),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 4)),
             template_app
              (template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3)),
                 template_app (template_hole 6, template_var 2)),
               template_var 1))
           ))),
    ("Normalization.ntrs_xchange_context_s",
     "[| ((?s, ?c), ?ee, ?s', ?csp + ?c) : ntrs ?fg;
         mon_c ?fg ?cn <= mon_c ?fg ?c |]
      ==> ((?s, ?cn), ?ee, ?s', ?csp + ?cn) : ntrs ?fg",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 6),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_app
                       (template_app (template_hole 3, template_var 2),
                        template_var 5))))),
              template_app (template_hole 2, template_var 1))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 1), template_var 0),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 6),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_app
                      (template_app (template_hole 3, template_var 2),
                       template_var 0))))),
             template_app (template_hole 2, template_var 1))
           ))),
    ("Normalization.ntrs_replace_context_s",
     "[| ((?s, ?c + ?cr), ?ee, ?s', ?c' + ?cr) : ntrs ?fg;
         mon_c ?fg ?crn <= mon_c ?fg ?cr |]
      ==> ((?s, ?c + ?crn), ?ee, ?s', ?c' + ?crn) : ntrs ?fg",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app (template_hole 5, template_var 7),
                      template_app
                       (template_app (template_hole 4, template_var 6),
                        template_var 5))),
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_app
                     (template_app (template_hole 5, template_var 3),
                      template_app
                       (template_app (template_hole 4, template_var 2),
                        template_var 5))))),
              template_app (template_hole 2, template_var 1))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 0, template_var 1), template_var 0),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 7),
                     template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 0))),
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app
                    (template_app (template_hole 5, template_var 3),
                     template_app
                      (template_app (template_hole 4, template_var 2),
                       template_var 0))))),
             template_app (template_hole 2, template_var 1))
           ))),
    ("Normalization.ntrs_stack_decomp",
     "[| ((?u # ?s @ ?r, ?c), ?ww, ?s', ?c') : trcl (ntrs ?fg);
         !!v rr.
            [| ?s' = v # rr @ ?r;
               ((?u # ?s, ?c), ?ww, v # rr, ?c') : trcl (ntrs ?fg) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 7, template_var 8),
                          template_app
                           (template_app (template_hole 6, template_var 7),
                            template_var 6))),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_app
                     (template_app (template_hole 8, template_var 3),
                      template_var 2)))),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Normalization.ntrp_stack_decomp_s",
     "[| ((?u # ?s @ ?r, ?c), ?ee, ?s', ?c') : ntrp ?fg;
         !!v rr.
            [| ?s' = v # rr @ ?r;
               ((?u # ?s, ?c), ?ee, v # rr, ?c') : ntrp ?fg |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_hole 8,
                        template_app
                         (template_app (template_hole 7, template_var 8),
                          template_app
                           (template_app (template_hole 6, template_var 7),
                            template_var 6))),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 5, template_var 4),
                    template_app
                     (template_app (template_hole 8, template_var 3),
                      template_var 2)))),
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 1)))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Normalization.ntrp_stack_decomp",
     "[| ((?u # ?s @ ?r, ?c), ?ww, ?s', ?c') : trcl (ntrp ?fg);
         !!v rr.
            [| ?s' = v # rr @ ?r;
               ((?u # ?s, ?c), ?ww, v # rr, ?c') : trcl (ntrp ?fg) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app
                         (template_app (template_hole 8, template_var 8),
                          template_app
                           (template_app (template_hole 7, template_var 7),
                            template_var 6))),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 6, template_var 4),
                    template_app
                     (template_app (template_hole 9, template_var 3),
                      template_var 2)))),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1))))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Normalization.ntrs_c_cases_s",
     "[| ((?s, ?c), ?w, ?s', ?c') : ntrs ?fg;
         !!csp.
            [| ?c' = csp + ?c;
               !!s. s :# csp ==>
                    EX p u v.
                       s = [entry ?fg p] &
                       (u, Spawn p, v) : edges ?fg & initialproc ?fg p |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app
                   (template_hole 22,
                    template_app
                     (template_app (template_hole 21, template_var 6),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 20, template_var 4),
                    template_app
                     (template_app (template_hole 21, template_var 3),
                      template_var 2)))),
              template_app (template_hole 19, template_var 1))
            ),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_predicate (template_var 0))),
    ("Normalization.ntrs_c_cases",
     "[| ((?s, ?c), ?ww, ?s', ?c') : trcl (ntrs ?fg);
         !!csp.
            [| ?c' = csp + ?c;
               !!s. s :# csp ==>
                    EX p u v.
                       s = [entry ?fg p] &
                       (u, Spawn p, v) : edges ?fg & initialproc ?fg p |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_hole 23,
                    template_app
                     (template_app (template_hole 22, template_var 6),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 21, template_var 4),
                    template_app
                     (template_app (template_hole 22, template_var 3),
                      template_var 2)))),
              template_app
               (template_hole 20,
                template_app (template_hole 19, template_var 1)))
            ),
        template_predicate (template_app (template_hole 18, t_empty))],
       template_predicate (template_var 0))),
    ("Normalization.ntrs_stack_top_decomp_s",
     "[| ((?u # ?r, ?c), ?ee, ?s', ?c') : ntrs ?fg;
         !!v u' p.
            [| ?s' = v # u' # ?r;
               (([?u], ?c), ?ee, [v, u'], ?c') : ntrs ?fg;
               (?u, Call p, u') : edges ?fg |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app
                         (template_app (template_hole 11, template_var 7),
                          template_var 6)),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 10, template_var 4),
                    template_app
                     (template_app (template_hole 12, template_var 3),
                      template_var 2)))),
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("Normalization.ntrs_stack_decomp_s",
     "[| ((?u # ?s @ ?r, ?c), ?ee, ?s', ?c') : ntrs ?fg;
         !!v u' p.
            [| ?s' = v # u' # ?s @ ?r;
               ((?u # ?s, ?c), ?ee, v # u' # ?s, ?c') : ntrs ?fg;
               (?u, Call p, u') : edges ?fg |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app
                         (template_app (template_hole 11, template_var 8),
                          template_app
                           (template_app (template_hole 10, template_var 7),
                            template_var 6))),
                      template_var 5)),
                  template_app
                   (template_app (template_hole 9, template_var 4),
                    template_app
                     (template_app (template_hole 12, template_var 3),
                      template_var 2)))),
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.NormalizationMoreTemplates"
### 0.848s elapsed time, 2.016s cpu time, 1.331s GC time
val it = (): unit
