Loading theory "HOL-Library.Cancellation" (required by "Draft.AcquisitionHistoryMoreTemplates" via "Draft.AcquisitionHistory" via "Draft.ConsInterleave" via "Draft.Interleave" via "Draft.Misc" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.AcquisitionHistoryMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.AcquisitionHistoryMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.AcquisitionHistoryMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.128s elapsed time, 0.532s cpu time, 0.048s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.AcquisitionHistoryMoreTemplates" via "Draft.AcquisitionHistory" via "Draft.ConsInterleave" via "Draft.Interleave" via "Draft.Misc" via "HOL-Library.Subseq_Order")
### theory "HOL-Library.Set_Algebras"
### 0.203s elapsed time, 0.833s cpu time, 0.048s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.AcquisitionHistoryMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
### theory "HOL-Library.Nat_Bijection"
### 0.357s elapsed time, 1.435s cpu time, 0.128s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.AcquisitionHistoryMoreTemplates" via "Draft.ExtrEqs")
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
consts
  prefixes :: "'a list => 'a list list"
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.440s elapsed time, 1.771s cpu time, 0.128s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.AcquisitionHistoryMoreTemplates" via "Draft.AcquisitionHistory" via "Draft.ConsInterleave" via "Draft.Interleave" via "Draft.Misc")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  suffixes :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  cycle :: "'a list => 'a stream"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 1.085s elapsed time, 4.123s cpu time, 0.880s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.AcquisitionHistoryMoreTemplates" via "Draft.ExtrEqs")
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
### theory "HOL-Library.Sublist"
### 1.643s elapsed time, 6.318s cpu time, 1.126s GC time
Loading theory "HOL-Library.Subseq_Order" (required by "Draft.AcquisitionHistoryMoreTemplates" via "Draft.AcquisitionHistory" via "Draft.ConsInterleave" via "Draft.Interleave" via "Draft.Misc")
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
instantiation
  list :: (type) ord
  less_eq_list == less_eq :: 'a list => 'a list => bool
  less_list == less :: 'a list => 'a list => bool
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Subseq_Order"
### 0.078s elapsed time, 0.305s cpu time, 0.062s GC time
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.835s elapsed time, 2.900s cpu time, 0.386s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
### theory "HOL-Library.Tree"
### 2.448s elapsed time, 8.725s cpu time, 2.183s GC time
Loading theory "Draft.Templates" (required by "Draft.AcquisitionHistoryMoreTemplates" via "Draft.ExtrEqs")
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.067s elapsed time, 0.151s cpu time, 0.039s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.AcquisitionHistoryMoreTemplates")
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.561s elapsed time, 1.165s cpu time, 0.102s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.553s elapsed time, 9.761s cpu time, 2.261s GC time
Loading theory "Draft.Misc" (required by "Draft.AcquisitionHistoryMoreTemplates" via "Draft.AcquisitionHistory" via "Draft.ConsInterleave" via "Draft.Interleave")
locale AC
  fixes f :: "'a => 'a => 'a"
  assumes "AC f"
locale su_rel_fun
  fixes F :: "('a * 'b) set"
    and f :: "'a => 'b"
  assumes "su_rel_fun F f"
### theory "Draft.Misc"
### 0.627s elapsed time, 1.437s cpu time, 0.967s GC time
Loading theory "Draft.Interleave" (required by "Draft.AcquisitionHistoryMoreTemplates" via "Draft.AcquisitionHistory" via "Draft.ConsInterleave")
### theory "Draft.Interleave"
### 0.262s elapsed time, 0.327s cpu time, 0.089s GC time
Loading theory "Draft.ConsInterleave" (required by "Draft.AcquisitionHistoryMoreTemplates" via "Draft.AcquisitionHistory")
Found termination order:
  "(%p. length (snd (snd p))) <*mlex*> (%p. length (fst p)) <*mlex*> {}"
### theory "Draft.ConsInterleave"
### 0.289s elapsed time, 0.293s cpu time, 0.000s GC time
Loading theory "Draft.AcquisitionHistory" (required by "Draft.AcquisitionHistoryMoreTemplates")
consts
  \<alpha>ah :: "('m set * 'm set) list => 'm => 'm set"
### theory "Draft.AcquisitionHistory"
### 0.120s elapsed time, 0.167s cpu time, 0.064s GC time
Loading theory "Draft.AcquisitionHistoryMoreTemplates"
val templateLemmas =
   [("AcquisitionHistory.\<alpha>ah_ah", "\<alpha>ah ?w : ah",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("AcquisitionHistory.mon_ah_subset",
     "mon_ah (\<alpha>ah ?w) <= mon_pl ?w",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("AcquisitionHistory.ah_il_commute",
     "?h1.0 [*] ?h2.0 ==> ?h2.0 [*] ?h1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("AcquisitionHistory.\<alpha>ah_ileq",
     "?w1.0 \<preceq> ?w2.0 ==> \<alpha>ah ?w1.0 <= \<alpha>ah ?w2.0",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("AcquisitionHistory.ah_update_cons",
     "\<alpha>ah (?e # ?w) = ah_update (\<alpha>ah ?w) ?e (mon_pl ?w)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 3, template_var 0)),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("AcquisitionHistory.ah_leq_il_left",
     "[| ?h1.0 [*] ?h2.0; ?h1' <= ?h1.0 |] ==> ?h1' [*] ?h2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0), template_var 1)
           ))),
    ("AcquisitionHistory.ah_leq_il_right",
     "[| ?h1.0 [*] ?h2.0; ?h2' <= ?h2.0 |] ==> ?h1.0 [*] ?h2'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 0)
           ))),
    ("AcquisitionHistory.ah_interleavable",
     "\<alpha>ah (map ?\<alpha> ?w1.0) [*]
      \<alpha>ah (map ?\<alpha> ?w2.0) =
      (?w1.0 \<otimes>\<^bsub>?\<alpha>\<^esub> ?w2.0 ~= {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1))),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 0)))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2),
               template_var 0),
             template_hole 0)
           ))),
    ("AcquisitionHistory.ah_interleavable1",
     "?w : ?w1.0 \<otimes>\<^bsub>?\<alpha>\<^esub> ?w2.0 ==>
      \<alpha>ah (map ?\<alpha> ?w1.0) [*]
      \<alpha>ah (map ?\<alpha> ?w2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("AcquisitionHistory.ah_interleavable2",
     "\<alpha>ah (map ?\<alpha> ?w1.0) [*]
      \<alpha>ah (map ?\<alpha> ?w2.0) ==>
      ?w1.0 \<otimes>\<^bsub>?\<alpha>\<^esub> ?w2.0 ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1))),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 0)))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2),
               template_var 0),
             template_hole 0)
           ))),
    ("AcquisitionHistory.ah_leq_il",
     "[| ?h1.0 [*] ?h2.0; ?h1' <= ?h1.0; ?h2' <= ?h2.0 |]
      ==> ?h1' [*] ?h2'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_inequation (less_equals, template_var 1, template_var 3),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("AcquisitionHistory.\<alpha>ah_tl",
     "[| ?m ~: fst ?e; ?x : \<alpha>ah ?w ?m |]
      ==> ?x : \<alpha>ah (?e # ?w) ?m",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_app (template_hole 2, template_var 2))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_var 3))
           ))),
    ("AcquisitionHistory.ah_update_mono",
     "[| ?h <= ?h'; ?F = ?F'; ?M <= ?M' |]
      ==> ah_update ?h ?F ?M <= ah_update ?h' ?F' ?M'",
     template_implication
      ([template_inequation (less_equals, template_var 5, template_var 4),
        template_equation (template_var 3, template_var 2),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 5),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0)))),
    ("AcquisitionHistory.ah_cases",
     "[| ?h : ah; ?h ?m = {} ==> ?P; ?m : ?h ?m ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_hole 3)
            ),
        template_implication
         ([template_equation
            (template_app (template_var 2, template_var 1),
             template_hole 1)],
          template_predicate (template_var 0)),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app (template_var 2, template_var 1))
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("AcquisitionHistory.ah_il_lockset_disjoint",
     "[| ?h1.0 : ah; ?h2.0 : ah; ?h1.0 [*] ?h2.0 |]
      ==> ?h1.0 ?m = {} | ?h2.0 ?m = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_hole 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_var 2, template_var 0)),
                 template_hole 0)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_var 1, template_var 0)),
               template_hole 0))
           ))),
    ("AcquisitionHistory.\<alpha>ah_hd",
     "[| ?m : fst ?e; ?x : fst ?e Un snd ?e Un mon_pl ?w |]
      ==> ?x : \<alpha>ah (?e # ?w) ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 5, template_var 2)),
                    template_app (template_hole 3, template_var 2))),
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_var 3))
           ))),
    ("AcquisitionHistory.ah_update_mono2",
     "[| ?h <= ?h'; ?U <= ?U'; ?M <= ?M' |]
      ==> ah_update ?h (?E, ?U) ?M <= ah_update ?h' (?E, ?U') ?M'",
     template_implication
      ([template_inequation (less_equals, template_var 6, template_var 5),
        template_inequation (less_equals, template_var 4, template_var 3),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 6),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 4)),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3)),
           template_var 1)))),
    ("AcquisitionHistory.\<alpha>ah_cons_cases",
     "[| ?x : \<alpha>ah (?e # ?w') ?m;
         [| ?m : fst ?e; ?x : fst ?e Un snd ?e Un mon_pl ?w' |] ==> ?P;
         [| ?m ~: fst ?e; ?x : \<alpha>ah ?w' ?m |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2)),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 7, template_var 1),
                 template_app (template_hole 4, template_var 3))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 7, template_var 4),
                   template_app
                    (template_app
                      (template_hole 3,
                       template_app
                        (template_app
                          (template_hole 3,
                           template_app (template_hole 4, template_var 3)),
                         template_app (template_hole 2, template_var 3))),
                     template_app (template_hole 1, template_var 2)))
                 )],
            template_predicate (template_var 0))),
        template_implication
         ([template_negation
            (
               template_predicate
                (
                   template_app
                    (template_app (template_hole 7, template_var 1),
                     template_app (template_hole 4, template_var 3))
                   )
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app (template_hole 7, template_var 4),
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_var 1))
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("AcquisitionHistory.\<alpha>ah_cases",
     "[| ?x : \<alpha>ah ?w ?m;
         !!e w'.
            [| ?w = e # w'; ?m : fst e; ?x : fst e Un snd e Un mon_pl w' |]
            ==> ?P;
         !!e w'.
            [| ?w = e # w'; ?m ~: fst e; ?x : \<alpha>ah w' ?m |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0)))]:
   (string * thm * template) list
### theory "Draft.AcquisitionHistoryMoreTemplates"
### 0.411s elapsed time, 0.654s cpu time, 0.085s GC time
val it = (): unit
