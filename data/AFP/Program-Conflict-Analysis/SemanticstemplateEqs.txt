   [("Semantics.mon_c_empty", "mon_c ?fg {#} = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Semantics.mon_e_simps", "mon_e ?fg LRet = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Semantics.mon_s_empty", "mon_s ?fg [] = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Semantics.mon_w_empty", "mon_w ?fg [] = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Semantics.mon_e_simps", "mon_e ?fg (LBase ?a) = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantics.mon_e_simps", "mon_e ?fg (LSpawn ?p) = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantics.mon_e_simps", "mon_e ?fg (LCall ?p) = mon ?fg ?p",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Semantics.mon_c_single", "mon_c ?fg {#?s#} = mon_s ?fg ?s",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Semantics.mon_s_single", "mon_s ?fg [?n] = mon_n ?fg ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Semantics.mon_w_single", "mon_w ?fg [?e] = mon_e ?fg ?e",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Semantics.atU_single", "atU ?U {#?s#} = atU_s ?U ?s",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Semantics.atU_single_top", "atU ?U {#?u # ?r#} = (?u : ?U)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_hole 1)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 2))),
    ("Semantics.mon_c_union_conc",
     "mon_c ?fg (?a + ?b) = mon_c ?fg ?a Un mon_c ?fg ?b",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Semantics.mon_c_add_mset_unconc",
     "mon_c ?fg (add_mset ?x ?b) = mon_s ?fg ?x Un mon_c ?fg ?b",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Semantics.mon_s_unconc",
     "mon_s ?fg (?a @ ?b) = mon_s ?fg ?a Un mon_s ?fg ?b",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Semantics.mon_s_uncons",
     "mon_s ?fg (?a # ?as) = mon_n ?fg ?a Un mon_s ?fg ?as",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Semantics.mon_w_unconc",
     "mon_w ?fg (?wa @ ?wb) = mon_w ?fg ?wa Un mon_w ?fg ?wb",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Semantics.mon_w_uncons",
     "mon_w ?fg (?e # ?w) = mon_e ?fg ?e Un mon_w ?fg ?w",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Semantics.atU_union",
     "atU ?U (?c1.0 + ?c2.0) = (atU ?U ?c1.0 | atU ?U ?c2.0)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Semantics.atU_add_mset",
     "atU ?U (add_mset ?c ?c2.0) = (atU_s ?U ?c | atU ?U ?c2.0)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Semantics.refpointp_refpoint_eq",
     "refpointp ?fg = (%x xa xb. (x, xa, xb) : refpoint ?fg)",
     template_equation
      (template_app (template_hole 4, template_var 0), t_empty)),
    ("Semantics.trss_no_empty_s",
     "((([], ?c), ?e, ?s', ?c') : trss ?fg) = False",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 4)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)))),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantics.atU_s_decomp",
     "atU_s ?U (?s @ ?s') = (atU_s ?U ?s | ?s = [] & atU_s ?U ?s')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Semantics.valid_add_mset_conc",
     "valid ?fg (add_mset ?x ?c') =
      (valid ?fg ?c' & mon_s ?fg ?x Int mon_c ?fg ?c' = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Semantics.trssp_trss_eq",
     "trssp ?fg = (%x xa xb xc xd. ((x, xa), xb, xc, xd) : trss ?fg)",
     template_equation
      (template_app (template_hole 5, template_var 0), t_empty)),
    ("Semantics.valid_union_conc",
     "valid ?fg (?c + ?c') =
      (valid ?fg ?c & valid ?fg ?c' & mon_c ?fg ?c Int mon_c ?fg ?c' = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_dunno)),
    ("Semantics.atUV_add_mset",
     "atUV ?U ?V (add_mset ?c ?c2.0) =
      (atUV ?U ?V ?c2.0 |
       atU ?U {#?c#} & atU ?V ?c2.0 | atU ?V {#?c#} & atU ?U ?c2.0)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_app
                    (template_app (template_hole 4, template_var 1),
                     template_hole 0))),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_hole 0))),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0)))))),
    ("Semantics.atUV_union",
     "atUV ?U ?V (?c1.0 + ?c2.0) =
      (atUV ?U ?V ?c1.0 |
       atUV ?U ?V ?c2.0 |
       atU ?U ?c1.0 & atU ?V ?c2.0 | atU ?V ?c1.0 & atU ?U ?c2.0)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)))))))]
