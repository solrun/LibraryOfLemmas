Loading theory "Draft.LTS" (required by "Draft.MainResultMoreTemplates" via "Draft.MainResult" via "Draft.ConstraintSystems" via "Draft.Normalization" via "Draft.ThreadTracking")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.MainResultMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Cancellation" (required by "Draft.MainResultMoreTemplates" via "Draft.MainResult" via "Draft.ConstraintSystems" via "Draft.AcquisitionHistory" via "Draft.ConsInterleave" via "Draft.Interleave" via "Draft.Misc" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.MainResultMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
Proofs for inductive predicate(s) "trclp"
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
  Proving monotonicity ...
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.117s elapsed time, 0.493s cpu time, 0.039s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.MainResultMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.LTS"
### 0.212s elapsed time, 0.874s cpu time, 0.039s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.MainResultMoreTemplates" via "Draft.MainResult" via "Draft.ConstraintSystems" via "Draft.AcquisitionHistory" via "Draft.ConsInterleave" via "Draft.Interleave" via "Draft.Misc" via "HOL-Library.Subseq_Order")
### theory "HOL-Library.Nat_Bijection"
### 0.321s elapsed time, 1.290s cpu time, 0.120s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.MainResultMoreTemplates" via "Draft.ExtrEqs")
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
### theory "HOL-Library.Set_Algebras"
### 0.208s elapsed time, 0.819s cpu time, 0.081s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.MainResultMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.444s elapsed time, 1.776s cpu time, 0.198s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.MainResultMoreTemplates" via "Draft.MainResult" via "Draft.ConstraintSystems" via "Draft.AcquisitionHistory" via "Draft.ConsInterleave" via "Draft.Interleave" via "Draft.Misc")
consts
  prefixes :: "'a list => 'a list list"
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  cycle :: "'a list => 'a stream"
consts
  suffixes :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.120s elapsed time, 4.277s cpu time, 1.028s GC time
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
Loading theory "HOL-Library.BigO" (required by "Draft.MainResultMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.680s elapsed time, 6.473s cpu time, 1.383s GC time
Loading theory "HOL-Library.Subseq_Order" (required by "Draft.MainResultMoreTemplates" via "Draft.MainResult" via "Draft.ConstraintSystems" via "Draft.AcquisitionHistory" via "Draft.ConsInterleave" via "Draft.Interleave" via "Draft.Misc")
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
instantiation
  list :: (type) ord
  less_eq_list == less_eq :: 'a list => 'a list => bool
  less_list == less :: 'a list => 'a list => bool
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "HOL-Library.Subseq_Order"
### 0.060s elapsed time, 0.240s cpu time, 0.000s GC time
Found termination order: "size <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
### theory "HOL-Library.BigO"
### 1.127s elapsed time, 3.994s cpu time, 1.348s GC time
Found termination order: "size <*mlex*> {}"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
### theory "HOL-Library.Tree"
### 2.476s elapsed time, 8.760s cpu time, 2.411s GC time
Loading theory "Draft.Templates" (required by "Draft.MainResultMoreTemplates" via "Draft.ExtrEqs")
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.072s elapsed time, 0.143s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.MainResultMoreTemplates")
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.537s elapsed time, 1.120s cpu time, 0.113s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.601s elapsed time, 10.257s cpu time, 2.648s GC time
Loading theory "Draft.Misc" (required by "Draft.MainResultMoreTemplates" via "Draft.MainResult" via "Draft.ConstraintSystems" via "Draft.AcquisitionHistory" via "Draft.ConsInterleave" via "Draft.Interleave")
locale AC
  fixes f :: "'a => 'a => 'a"
  assumes "AC f"
locale su_rel_fun
  fixes F :: "('a * 'b) set"
    and f :: "'a => 'b"
  assumes "su_rel_fun F f"
### theory "Draft.Misc"
### 0.369s elapsed time, 0.577s cpu time, 0.088s GC time
Loading theory "Draft.Flowgraph" (required by "Draft.MainResultMoreTemplates" via "Draft.MainResult" via "Draft.ConstraintSystems" via "Draft.Normalization" via "Draft.Semantics")
Loading theory "Draft.Interleave" (required by "Draft.MainResultMoreTemplates" via "Draft.MainResult" via "Draft.ConstraintSystems" via "Draft.AcquisitionHistory" via "Draft.ConsInterleave")
Loading theory "Draft.ThreadTracking" (required by "Draft.MainResultMoreTemplates" via "Draft.MainResult" via "Draft.ConstraintSystems" via "Draft.Normalization")
### theory "Draft.Interleave"
### 0.228s elapsed time, 0.700s cpu time, 0.093s GC time
Loading theory "Draft.ConsInterleave" (required by "Draft.MainResultMoreTemplates" via "Draft.MainResult" via "Draft.ConstraintSystems" via "Draft.AcquisitionHistory")
locale env_no_step
  fixes gtrs :: "(('s * 's multiset) * 'l * 's * 's multiset) set"
  assumes "env_no_step gtrs"
Found termination order:
  "(%p. length (snd (snd p))) <*mlex*> (%p. length (fst p)) <*mlex*> {}"
### theory "Draft.ConsInterleave"
### 0.401s elapsed time, 1.245s cpu time, 0.238s GC time
Loading theory "Draft.AcquisitionHistory" (required by "Draft.MainResultMoreTemplates" via "Draft.MainResult" via "Draft.ConstraintSystems")
consts
  \<alpha>ah :: "('m set * 'm set) list => 'm => 'm set"
Proofs for inductive predicate(s) "gtrpp"
  Proving monotonicity ...
### theory "Draft.AcquisitionHistory"
### 0.145s elapsed time, 0.446s cpu time, 0.066s GC time
### theory "Draft.ThreadTracking"
### 0.938s elapsed time, 2.760s cpu time, 0.466s GC time
locale flowgraph
  fixes fg :: "('n, 'p, 'ba, 'm, 'more) flowgraph_rec_scheme"  (structure)
  assumes "flowgraph fg"
locale eflowgraph
  fixes fg :: "('a, 'b, 'c, 'd, 'e) flowgraph_rec_scheme"  (structure)
  assumes "eflowgraph fg"
### theory "Draft.Flowgraph"
### 1.035s elapsed time, 2.863s cpu time, 0.466s GC time
Loading theory "Draft.Semantics" (required by "Draft.MainResultMoreTemplates" via "Draft.MainResult" via "Draft.ConstraintSystems" via "Draft.Normalization")
consts
  atU_s :: "'n set => 'n list => bool"
Proofs for inductive predicate(s) "refpointp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "trssp"
  Proving monotonicity ...
### theory "Draft.Semantics"
### 1.451s elapsed time, 1.640s cpu time, 0.260s GC time
Loading theory "Draft.Normalization" (required by "Draft.MainResultMoreTemplates" via "Draft.MainResult" via "Draft.ConstraintSystems")
Proofs for inductive predicate(s) "ntrsp"
  Proving monotonicity ...
### theory "Draft.Normalization"
### 0.832s elapsed time, 0.935s cpu time, 0.147s GC time
Loading theory "Draft.ConstraintSystems" (required by "Draft.MainResultMoreTemplates" via "Draft.MainResult")
Proofs for inductive predicate(s) "S_csp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "RU_csp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "RUV_csp"
  Proving monotonicity ...
### theory "Draft.ConstraintSystems"
### 1.631s elapsed time, 2.721s cpu time, 1.505s GC time
Loading theory "Draft.MainResult" (required by "Draft.MainResultMoreTemplates")
### theory "Draft.MainResult"
### 0.043s elapsed time, 0.076s cpu time, 0.043s GC time
Loading theory "Draft.MainResultMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.MainResultMoreTemplates"
### 0.444s elapsed time, 0.677s cpu time, 0.045s GC time
val it = (): unit
