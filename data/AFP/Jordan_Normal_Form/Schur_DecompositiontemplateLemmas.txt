   [("Schur_Decomposition.vec_inv_dim", "dim_vec (vec_inv ?v) = dim_vec ?v",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Schur_Decomposition.corthogonal_inv_result",
     "corthogonal_mat ?A ==> inverts_mat (corthogonal_inv ?A) ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("Schur_Decomposition.vec_inv_closed",
     "?v : carrier_vec ?n ==> vec_inv ?v : carrier_vec ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Schur_Decomposition.vec_inv",
     "[| ?v : carrier_vec ?n; ?v ~= 0\<^sub>v ?n |]
      ==> vec_inv ?v \<bullet> ?v = (1::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            ),
        template_negation
         (
            template_equation
             (template_var 1,
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 1),
         template_hole 0))),
    ("Schur_Decomposition.corthogonal_inv",
     "[| corthogonal ?vs; set ?vs <= carrier_vec ?n |]
      ==> inverts_mat (mat_of_rows ?n (map vec_inv ?vs))
           (mat_of_cols ?n ?vs)",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 1)),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 1))),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Schur_Decomposition.orthogonal_mat_of_cols",
     "[| set ?ws <= carrier_vec ?n; corthogonal ?ws; length ?ws = ?n |]
      ==> corthogonal_mat (mat_of_cols ?n ?ws)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 6, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 1), template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Schur_Decomposition.schur_upper_triangular",
     "[| ?A : carrier_mat ?n ?n;
         char_poly ?A = (PROD a<-?es. [:- a, 1::?'a:]) |]
      ==> upper_triangular (schur_upper_triangular ?A ?es)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, t_empty), template_var 0)))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Schur_Decomposition.schur_upper_triangular",
     "[| ?A : carrier_mat ?n ?n;
         char_poly ?A = (PROD a<-?es. [:- a, 1::?'a:]) |]
      ==> similar_mat ?A (schur_upper_triangular ?A ?es)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, t_empty), template_var 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Schur_Decomposition.schur_upper_triangular",
     "[| ?A : carrier_mat ?n ?n;
         char_poly ?A = (PROD a<-?es. [:- a, 1::?'a:]) |]
      ==> schur_upper_triangular ?A ?es : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 7, template_var 2),
          template_app
           (template_hole 6,
            template_app
             (template_app (template_hole 5, t_empty), template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 9, template_var 1),
               template_var 1))
           ))),
    ("Schur_Decomposition.corthogonal_matD",
     "[| corthogonal_mat ?A; ?i < dim_col ?A; ?j < dim_col ?A |]
      ==> (col ?A ?i \<bullet>c col ?A ?j = (0::?'a)) = (?i ~= ?j)",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 8, template_var 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 1)),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_var 0))),
           template_hole 2),
         template_negation
          (template_equation (template_var 1, template_var 0))))),
    ("Schur_Decomposition.schur_decomposition_exists",
     "[| ?A : carrier_mat ?n ?n;
         char_poly ?A = (PROD a<-?es. [:- a, 1::?'a:]) |]
      ==> EX B:carrier_mat ?n ?n. upper_triangular B & similar_mat ?A B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app
               (template_app (template_hole 12, template_var 1),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 10, template_var 2),
          template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, t_empty), template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 12, template_var 1),
                 template_var 1)),
             t_empty)
           ))),
    ("Schur_Decomposition.corthogonal_matI",
     "(!!i j.
          [| i < dim_col ?A; j < dim_col ?A |]
          ==> (col ?A i \<bullet>c col ?A j = (0::?'a)) = (i ~= j)) ==>
      corthogonal_mat ?A",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Schur_Decomposition.schur_decomposition",
     "[| ?A : carrier_mat ?n ?n;
         char_poly ?A = (PROD e<-?es. [:- e, 1::?'a:]);
         schur_decomposition ?A ?es = (?B, ?P, ?Q) |]
      ==> similar_mat_wit ?A ?B ?P ?Q &
          upper_triangular ?B & diag_mat ?B = ?es",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 5),
              template_app
               (template_app (template_hole 17, template_var 4),
                template_var 4))
            ),
        template_equation
         (template_app (template_hole 15, template_var 5),
          template_app
           (template_hole 14,
            template_app
             (template_app (template_hole 13, t_empty), template_var 3))),
        template_equation
         (template_app
           (template_app (template_hole 7, template_var 5), template_var 3),
          template_app
           (template_app (template_hole 6, template_var 2),
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 5),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 2, template_var 2)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 2)),
                 template_var 3)))
           ))),
    ("Schur_Decomposition.char_poly_0_block",
     "[| ?A = four_block_mat ?B ?C (0\<^sub>m ?m ?n) ?D;
         EX es. char_poly ?B = (PROD a<-es. [:- a, 1::?'a:]);
         EX es. char_poly ?D = (PROD a<-es. [:- a, 1::?'a:]);
         ?B : carrier_mat ?n ?n; ?C : carrier_mat ?n ?m;
         ?D : carrier_mat ?m ?m |]
      ==> char_poly ?A = char_poly ?B * char_poly ?D",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 13, template_var 4),
                template_var 3),
              template_app
               (template_app (template_hole 12, template_var 2),
                template_var 1)),
            template_var 0)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 2))
            )],
       template_equation
        (template_app (template_hole 9, template_var 5),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 9, template_var 4)),
           template_app (template_hole 9, template_var 0))))),
    ("Schur_Decomposition.char_poly_0_block'",
     "[| ?A = four_block_mat ?B (0\<^sub>m ?n ?m) ?C ?D;
         EX es. char_poly ?B = (PROD a<-es. [:- a, 1::?'a:]);
         EX es. char_poly ?D = (PROD a<-es. [:- a, 1::?'a:]);
         ?B : carrier_mat ?n ?n; ?C : carrier_mat ?m ?n;
         ?D : carrier_mat ?m ?m |]
      ==> char_poly ?A = char_poly ?B * char_poly ?D",
     template_implication
      ([template_equation
         (template_var 5,
          template_app
           (template_app
             (template_app
               (template_app (template_hole 13, template_var 4),
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_var 1),
            template_var 0)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 2))
            )],
       template_equation
        (template_app (template_hole 9, template_var 5),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 9, template_var 4)),
           template_app (template_hole 9, template_var 0))))),
    ("Schur_Decomposition.corthogonal_col_ev_0",
     "[| ?A : carrier_mat ?n ?n; ?v : carrier_vec ?n; ?v ~= 0\<^sub>v ?n;
         ?A *\<^sub>v ?v = ?e \<cdot>\<^sub>v ?v; ?n ~= 0; hd ?ws = ?v;
         set ?ws <= carrier_vec ?n; corthogonal ?ws; length ?ws = ?n |]
      ==> col (corthogonal_inv (mat_of_cols ?n ?ws) * ?A *
               mat_of_cols ?n ?ws)
           0 =
          vec ?n (%i. if i = 0 then ?e else (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 4),
              template_app
               (template_app (template_hole 21, template_var 3),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 2),
              template_app (template_hole 19, template_var 3))
            ),
        template_negation
         (
            template_equation
             (template_var 2,
              template_app (template_hole 16, template_var 3))
            ),
        template_equation
         (template_app
           (template_app (template_hole 15, template_var 4),
            template_var 2),
          template_app
           (template_app (template_hole 14, template_var 1),
            template_var 2)),
        template_negation
         (template_equation (template_var 3, template_hole 12)),
        template_equation
         (template_app (template_hole 11, template_var 0), template_var 2),
        template_inequation
         (less_equals, template_app (template_hole 9, template_var 0),
          template_app (template_hole 19, template_var 3)),
        template_predicate (template_app (template_hole 8, template_var 0)),
        template_equation
         (template_app (template_hole 7, template_var 0), template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 3),
                         template_var 0))),
                   template_var 4)),
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 0))),
           template_hole 12),
         template_app
          (template_app (template_hole 2, template_var 3), t_empty))))]
