   [("Char_Poly.degree_signof_mult",
     "degree (of_int (sign ?p) * ?q) = degree ?q",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1))),
           template_var 0)),
       template_app (template_hole 3, template_var 0))),
    ("Char_Poly.char_poly_similar",
     "similar_mat ?A ?B ==> char_poly ?A = char_poly ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Char_Poly.char_poly_transpose_mat",
     "?A : carrier_mat ?n ?n ==> char_poly ?A\<^sup>T = char_poly ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 1, template_var 1)))),
    ("Char_Poly.char_poly_matrix_closed",
     "?A : carrier_mat ?n ?n ==> char_poly_matrix ?A : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 0))
           ))),
    ("Char_Poly.mat_erase_carrier",
     "(mat_erase ?A ?i ?j : carrier_mat ?nr ?nc) =
      (?A : carrier_mat ?nr ?nc)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 4),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Char_Poly.char_matrix_closed",
     "?A : carrier_mat ?n ?n ==> char_matrix ?A ?e : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 1))
           ))),
    ("Char_Poly.char_poly_matrix_upper_triangular",
     "[| ?A : carrier_mat ?n ?n; upper_triangular ?A |]
      ==> upper_triangular (char_poly_matrix ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 0))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))
           ))),
    ("Char_Poly.eigenvalue_imp_nonzero_dim",
     "[| ?A : carrier_mat ?n ?n; eigenvalue ?A ?ev |] ==> 0 < ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_inequation (less_than, template_hole 0, template_var 1))),
    ("Char_Poly.char_poly_matrix",
     "?A : carrier_mat ?n ?n ==>
      poly (char_poly ?A) ?k = det (- char_matrix ?A ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 2)),
           template_var 0),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)))))),
    ("Char_Poly.eigenvalue_det",
     "?A : carrier_mat ?n ?n ==>
      eigenvalue ?A ?e = (det (char_matrix ?A ?e) = (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 1))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 0)
              )],
         template_equation
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_hole 0)))),
    ("Char_Poly.eigenvalue_root_char_poly",
     "?A : carrier_mat ?n ?n ==>
      eigenvalue ?A ?k = (poly (char_poly ?A) ?k = (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 1))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 0)
              )],
         template_equation
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_var 0),
           template_hole 0)))),
    ("Char_Poly.find_eigenvector",
     "[| ?A : carrier_mat ?n ?n; eigenvalue ?A ?e |]
      ==> eigenvector ?A (find_eigenvector ?A ?e) ?e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 0)
           ))),
    ("Char_Poly.degree_monic_char_poly",
     "?A : carrier_mat ?n ?n ==>
      degree (char_poly ?A) = ?n & coeff (char_poly ?A) ?n = (1::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app (template_hole 7, template_var 0),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 1))),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app (template_hole 3, template_var 1)),
                   template_var 0)),
               template_hole 0))
           ))),
    ("Char_Poly.pderiv_char_poly",
     "?A : carrier_mat ?n ?n ==>
      pderiv (char_poly ?A) = (SUM i<?n. char_poly (mat_delete ?A i i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 0),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("Char_Poly.pderiv_char_poly_mat_erase",
     "?A : carrier_mat ?n ?n ==>
      monom (1::?'a) 1 * pderiv (char_poly ?A) =
      (SUM i<?n. char_poly (mat_erase ?A i i))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_app (template_hole 10, template_var 0),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_hole 5)),
           template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 1))),
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("Char_Poly.eigenvector_pow",
     "[| ?A : carrier_mat ?n ?n; eigenvector ?A ?v ?k |]
      ==> ?A ^\<^sub>m ?i *\<^sub>v ?v = ?k ^ ?i \<cdot>\<^sub>v ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 4),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2)))),
    ("Char_Poly.char_poly_upper_triangular",
     "[| ?A : carrier_mat ?n ?n; upper_triangular ?A |]
      ==> char_poly ?A = (PROD a<-diag_mat ?A. [:- a, 1::?'a:])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_app (template_hole 10, template_var 0),
                template_var 0))
            ),
        template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_equation
        (template_app (template_hole 7, template_var 1),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app (template_hole 0, template_var 1)))))),
    ("Char_Poly.char_poly_factorized",
     "?A : carrier_mat ?n ?n ==>
      EX as. char_poly ?A = (PROD a<-as. [:- a, 1:]) & length as = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app
               (template_app (template_hole 12, template_var 0),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("Char_Poly.eigenvector_char_matrix",
     "?A : carrier_mat ?n ?n ==>
      eigenvector ?A ?v ?e =
      (?v : carrier_vec ?n &
       ?v ~= 0\<^sub>v ?n & char_matrix ?A ?e *\<^sub>v ?v = 0\<^sub>v ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app (template_hole 10, template_var 2),
                template_var 2))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 1),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_app (template_hole 5, template_var 2))),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 1),
                       template_app (template_hole 2, template_var 2)))),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app
                          (template_app (template_hole 0, template_var 3),
                           template_var 0)),
                       template_var 1)),
                   template_app (template_hole 2, template_var 2))))
             )))),
    ("Char_Poly.eigenvalue_char_matrix",
     "?A : carrier_mat ?n ?n ==>
      eigenvalue ?A ?e =
      (EX v. v : carrier_vec ?n &
             v ~= 0\<^sub>v ?n &
             char_matrix ?A ?e *\<^sub>v v = 0\<^sub>v ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_app (template_hole 11, template_var 1),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 9, template_var 2), template_var 0),
         template_app (template_hole 8, t_empty)))),
    ("Char_Poly.char_poly_four_block_zeros_col",
     "[| ?A1.0 : carrier_mat 1 1; ?A2.0 : carrier_mat 1 ?n;
         ?A3.0 : carrier_mat ?n ?n |]
      ==> char_poly (four_block_mat ?A1.0 ?A2.0 (0\<^sub>m ?n 1) ?A3.0) =
          char_poly ?A1.0 * char_poly ?A3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_hole 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 5)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 3, template_var 3)),
           template_app (template_hole 3, template_var 0))))),
    ("Char_Poly.map_poly_mult",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?n ?nc |]
      ==> map_mat (%a. [:a:]) (?A * ?B) =
          map_mat (%a. [:a:]) ?A * map_mat (%a. [:a:]) ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 4, t_empty), template_var 4)),
           template_app
            (template_app (template_hole 4, t_empty), template_var 1))))),
    ("Char_Poly.map_poly_mult",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?n ?nc |]
      ==> map_mat (%a. [:a:] * ?p) (?A * ?B) =
          map_mat (%a. [:a:]) ?A * map_mat (%a. [:a:] * ?p) ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_app (template_hole 1, template_var 5),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, t_empty), template_var 5)),
           template_app
            (template_app (template_hole 5, t_empty), template_var 2))))),
    ("Char_Poly.map_poly_mult",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?n ?nc |]
      ==> map_mat (%a. [:a:] * ?p) (?A * ?B) =
          map_mat (%a. [:a:] * ?p) ?A * map_mat (%a. [:a:]) ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_app (template_hole 1, template_var 5),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 5, t_empty), template_var 5)),
           template_app
            (template_app (template_hole 5, t_empty), template_var 2))))),
    ("Char_Poly.char_poly_0_column",
     "[| !!j. j < ?n ==> ?A $$ (j, ?i) = (0::?'a); ?A : carrier_mat ?n ?n;
         ?i < ?n |]
      ==> char_poly ?A =
          monom (1::?'a) 1 * char_poly (mat_delete ?A ?i ?i)",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 2))
            ),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_hole 2),
               template_hole 1)),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 0)))))),
    ("Char_Poly.poly_det_cong",
     "[| ?A : carrier_mat ?n ?n; ?B : carrier_mat ?n ?n;
         !!i j.
            [| i < ?n; j < ?n |]
            ==> poly (?B $$ (i, j)) ?k = ?A $$ (i, j) |]
      ==> poly (det ?B) ?k = det ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 3),
              template_app
               (template_app (template_hole 11, template_var 2),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_app (template_hole 9, template_var 2),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app (template_hole 0, template_var 3))))]
