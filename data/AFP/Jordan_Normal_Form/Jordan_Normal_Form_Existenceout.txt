Loading theory "Draft.Missing_Misc" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates" via "Draft.Jordan_Normal_Form_Existence" via "Draft.Jordan_Normal_Form" via "Draft.Matrix" via "Draft.Missing_Ring")
Loading theory "Draft.Conjugate" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates" via "Draft.Jordan_Normal_Form_Existence" via "Draft.Jordan_Normal_Form" via "Draft.Matrix")
Loading theory "Draft.Templates" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates" via "Draft.ExtrEqs")
class conjugate = type +
  fixes conjugate :: "'a => 'a"
  assumes "conjugate_id": "!!a. conjugate (conjugate a) = a"
    and
    "conjugate_cancel_iff": "!!a b. (conjugate a = conjugate b) = (a = b)"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.082s elapsed time, 0.272s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates")
### theory "Draft.Missing_Misc"
### 0.121s elapsed time, 0.394s cpu time, 0.000s GC time
Loading theory "Draft.Missing_Ring" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates" via "Draft.Jordan_Normal_Form_Existence" via "Draft.Jordan_Normal_Form" via "Draft.Matrix")
class conjugatable_ring = conjugate + ring +
  assumes
    "conjugate_dist_mul":
      "!!a b. conjugate (a * b) = conjugate a * conjugate b"
    and
    "conjugate_dist_add":
      "!!a b. conjugate (a + b) = conjugate a + conjugate b"
    and "conjugate_neg": "!!a. conjugate (- a) = - conjugate a"
    and "conjugate_zero": "conjugate (0::'a) = (0::'a)"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.592s elapsed time, 1.679s cpu time, 0.171s GC time
class ordered_semiring_strict = comm_monoid_add +
  ordered_cancel_ab_semigroup_add + semiring +
  assumes
    "mult_strict_left_mono":
      "!!a b c. [| a < b; (0::'a) < c |] ==> c * a < c * b"
  assumes
    "mult_strict_right_mono":
      "!!a b c. [| a < b; (0::'a) < c |] ==> a * c < b * c"
class conjugatable_ordered_ring = conjugatable_ring +
  ordered_comm_monoid_add +
  assumes "conjugate_square_positive": "!!a. (0::'a) <= a * conjugate a"
class ordered_idom = ordered_semiring_strict + idom +
  assumes "zero_less_one": "(0::'a) < (1::'a)"
instantiation
  complex :: conjugatable_ordered_field
  conjugate_complex == conjugate :: complex => complex
instantiation
  real :: conjugatable_ordered_field
  conjugate_real == conjugate :: real => real
instantiation
  rat :: conjugatable_ordered_field
  conjugate_rat == conjugate :: rat => rat
instantiation
  int :: conjugatable_ordered_ring
  conjugate_int == conjugate :: int => int
### theory "Draft.Conjugate"
### 2.653s elapsed time, 5.900s cpu time, 0.739s GC time
locale Group.comm_monoid
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "Group.comm_monoid G"
locale csemiring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "csemiring R"
locale cring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "cring R"
locale Group.comm_monoid
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "Group.comm_monoid G"
locale cring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "cring R"
### theory "Draft.Missing_Ring"
### 3.056s elapsed time, 6.036s cpu time, 0.783s GC time
Loading theory "Draft.Matrix" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates" via "Draft.Jordan_Normal_Form_Existence" via "Draft.Jordan_Normal_Form")
Loading theory "Draft.Missing_VectorSpace" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates" via "Draft.Jordan_Normal_Form_Existence" via "Draft.Schur_Decomposition" via "Draft.Gram_Schmidt" via "Draft.VS_Connect")
locale Missing_VectorSpace.comp_fun_commute_on
  fixes f :: "'a => 'a => 'a"
    and A :: "'a set"
  assumes "Missing_VectorSpace.comp_fun_commute_on f A"
locale Missing_VectorSpace.comp_fun_commute_on
  fixes f :: "'a => 'a => 'a"
    and A :: "'a set"
  assumes "Missing_VectorSpace.comp_fun_commute_on f A"
locale abelian_group
  fixes G :: "('a, 'b) ring_scheme"  (structure)
  assumes "abelian_group G"
locale vectorspace
  fixes K :: "('a, 'b) ring_scheme"
    and V :: "('a, 'c, 'd) module_scheme"
  assumes "vectorspace K V"
locale module
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and M :: "('a, 'c, 'd) module_scheme"  (structure)
  assumes "module R M"
instantiation
  vec :: (plus) plus
  plus_vec == plus :: 'a vec => 'a vec => 'a vec
instantiation
  vec :: (minus) minus
  minus_vec == minus :: 'a vec => 'a vec => 'a vec
locale linear_map
  fixes K :: "('a, 'b) ring_scheme"
    and V :: "('a, 'c, 'd) module_scheme"
    and W :: "('a, 'e, 'f) module_scheme"
    and T :: "'c => 'e"
  assumes "linear_map K V W T"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  vec :: (uminus) uminus
  uminus_vec == uminus :: 'a vec => 'a vec
instantiation
  vec :: (ord) ord
  less_eq_vec == less_eq :: 'a vec => 'a vec => bool
  less_vec == less :: 'a vec => 'a vec => bool
instantiation
  vec :: (preorder) preorder
instantiation
  vec :: (order) order
Found termination order: "{}"
locale abelian_monoid
  fixes G :: "('a, 'b) ring_scheme"  (structure)
  assumes "abelian_monoid G"
instantiation
  mat :: (ord) ord
  less_eq_mat == less_eq :: 'a mat => 'a mat => bool
  less_mat == less :: 'a mat => 'a mat => bool
instantiation
  mat :: (preorder) preorder
instantiation
  mat :: (order) order
instantiation
  mat :: (plus) plus
  plus_mat == plus :: 'a mat => 'a mat => 'a mat
instantiation
  mat :: (uminus) uminus
  uminus_mat == uminus :: 'a mat => 'a mat
instantiation
  mat :: (minus) minus
  minus_mat == minus :: 'a mat => 'a mat => 'a mat
instantiation
  mat :: (semiring_0) times
  times_mat == times :: 'a mat => 'a mat => 'a mat
locale module
  fixes R :: "('a, 'b) ring_scheme"  (structure)
    and M :: "('a, 'c, 'd) module_scheme"  (structure)
  assumes "module R M"
### theory "Draft.Missing_VectorSpace"
### 2.316s elapsed time, 5.014s cpu time, 1.432s GC time
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "length <*mlex*> {}"
locale semiring_hom
  fixes hom :: "'a => 'b"
  assumes "semiring_hom hom"
instantiation
  vec :: (conjugate) conjugate
  conjugate_vec == conjugate :: 'a vec => 'a vec
### theory "Draft.Matrix"
### 3.492s elapsed time, 6.298s cpu time, 1.668s GC time
Loading theory "Draft.Gauss_Jordan_Elimination" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates" via "Draft.Jordan_Normal_Form_Existence" via "Draft.Jordan_Normal_Form" via "Draft.Char_Poly" via "Draft.Determinant" via "Draft.Column_Operations")
Found termination order:
  "(%p. size_list (%p. size (snd p)) (snd (snd p))) <*mlex*> {}"
### theory "Draft.Gauss_Jordan_Elimination"
### 0.885s elapsed time, 1.014s cpu time, 0.203s GC time
Loading theory "Draft.Column_Operations" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates" via "Draft.Jordan_Normal_Form_Existence" via "Draft.Jordan_Normal_Form" via "Draft.Char_Poly" via "Draft.Determinant")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Column_Operations"
### 0.287s elapsed time, 0.289s cpu time, 0.000s GC time
Loading theory "Draft.Determinant" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates" via "Draft.Jordan_Normal_Form_Existence" via "Draft.Jordan_Normal_Form" via "Draft.Char_Poly")
### theory "Draft.Determinant"
### 1.143s elapsed time, 1.320s cpu time, 0.271s GC time
Loading theory "Draft.Char_Poly" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates" via "Draft.Jordan_Normal_Form_Existence" via "Draft.Jordan_Normal_Form")
Loading theory "Draft.VS_Connect" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates" via "Draft.Jordan_Normal_Form_Existence" via "Draft.Schur_Decomposition" via "Draft.Gram_Schmidt")
locale inj_comm_ring_hom
  fixes hom :: "'a => 'b"
  assumes "inj_comm_ring_hom hom"
### Cannot skip proof of schematic goal statement
### theory "Draft.Char_Poly"
### 1.155s elapsed time, 2.825s cpu time, 1.195s GC time
Loading theory "Draft.Jordan_Normal_Form" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates" via "Draft.Jordan_Normal_Form_Existence")
### Cannot skip proof of schematic goal statement
### theory "Draft.Jordan_Normal_Form"
### 0.316s elapsed time, 0.669s cpu time, 0.195s GC time
### Cannot skip proof of schematic goal statement
### Cannot skip proof of schematic goal statement
locale matrix_ring
  fixes n :: "nat"
    and field_type :: "'a itself"
locale vec_module
  fixes f_ty :: "'a itself"
    and n :: "nat"
### Cannot skip proof of schematic goal statement
locale matrix_vs
  fixes nr :: "nat"
    and nc :: "nat"
    and field_type :: "'a itself"
### Cannot skip proof of schematic goal statement
locale vec_space
  fixes f_ty :: "'a itself"
    and n :: "nat"
### Cannot skip proof of schematic goal statement
locale mat_space
  fixes f_ty :: "'a itself"
    and nc :: "nat"
    and nr :: "nat"
locale vec_space
  fixes f_ty :: "'a itself"
    and n :: "nat"
locale vec_module
  fixes f_ty :: "'a itself"
    and n :: "nat"
locale idom_vec
  fixes n :: "nat"
    and f_ty :: "'a itself"
locale vec_space
  fixes f_ty :: "'a itself"
    and n :: "nat"
locale vec_module
  fixes f_ty :: "'a itself"
    and n :: "nat"
locale vec_space
  fixes f_ty :: "'a itself"
    and n :: "nat"
### theory "Draft.VS_Connect"
### 6.682s elapsed time, 9.051s cpu time, 2.141s GC time
Loading theory "Draft.Gram_Schmidt" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates" via "Draft.Jordan_Normal_Form_Existence" via "Draft.Schur_Decomposition")
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
Found termination order: "(%p. length (snd (snd p))) <*mlex*> {}"
locale cof_vec_space
  fixes n :: "nat"
    and f_ty :: "'a itself"
### theory "Draft.Gram_Schmidt"
### 0.951s elapsed time, 1.177s cpu time, 0.194s GC time
Loading theory "Draft.Schur_Decomposition" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates" via "Draft.Jordan_Normal_Form_Existence")
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
### theory "Draft.Schur_Decomposition"
### 1.700s elapsed time, 2.064s cpu time, 0.212s GC time
Loading theory "Draft.Jordan_Normal_Form_Existence" (required by "Draft.Jordan_Normal_Form_ExistenceTemplates")
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order:
  "(%p. size_list (%p. size (snd p)) (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (fst (snd p))) <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size (fst (snd (snd (snd p))))) <*mlex*> {}"
Found termination order:
  "(%p. size_list (%p. size (snd p)) (fst (snd (snd (snd p))))) <*mlex*> {}"
### theory "Draft.Jordan_Normal_Form_Existence"
### 2.134s elapsed time, 2.352s cpu time, 0.385s GC time
Loading theory "Draft.Jordan_Normal_Form_ExistenceTemplates"
val templateLemmas =
   [("Jordan_Normal_Form_Existence.same_diag_refl",
     "??.Jordan_Normal_Form_Existence.same_diag ?n ?A ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Jordan_Normal_Form_Existence.same_upto_refl",
     "??.Jordan_Normal_Form_Existence.same_upto ?n ?j ?A ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0),
           template_var 0)
         )),
    ("Jordan_Normal_Form_Existence.identify_block_le",
     "??.Jordan_Normal_Form_Existence.identify_block ?A ?i <= ?i",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_var 0)),
    ("Jordan_Normal_Form_Existence.triangular_to_jnf_steps_dims",
     "dim_col (??.Jordan_Normal_Form_Existence.step_1 ?A) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.triangular_to_jnf_steps_dims",
     "dim_col (??.Jordan_Normal_Form_Existence.step_2 ?A) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.triangular_to_jnf_steps_dims",
     "dim_col (??.Jordan_Normal_Form_Existence.step_3 ?A) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.triangular_to_jnf_steps_dims",
     "dim_row (??.Jordan_Normal_Form_Existence.step_1 ?A) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.triangular_to_jnf_steps_dims",
     "dim_row (??.Jordan_Normal_Form_Existence.step_2 ?A) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.triangular_to_jnf_steps_dims",
     "dim_row (??.Jordan_Normal_Form_Existence.step_3 ?A) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.swap_cols_rows_block_dims",
     "dim_col
       (??.Jordan_Normal_Form_Existence.swap_cols_rows_block ?i ?j ?A) =
      dim_col ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.step_2_main_dims",
     "dim_col (??.Jordan_Normal_Form_Existence.step_2_main ?n ?j ?A) =
      dim_col ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.step_3_a_dims",
     "dim_col (??.Jordan_Normal_Form_Existence.step_3_a ?i ?j ?A) =
      dim_col ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.step_3_main_dims",
     "dim_col (step_3_main ?n ?j ?A) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.swap_cols_rows_block_dims",
     "dim_row
       (??.Jordan_Normal_Form_Existence.swap_cols_rows_block ?i ?j ?A) =
      dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.step_2_main_dims",
     "dim_row (??.Jordan_Normal_Form_Existence.step_2_main ?n ?j ?A) =
      dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.step_3_a_dims",
     "dim_row (??.Jordan_Normal_Form_Existence.step_3_a ?i ?j ?A) =
      dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.step_3_main_dims",
     "dim_row (step_3_main ?n ?j ?A) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.step_1_main_dims",
     "dim_col (??.Jordan_Normal_Form_Existence.step_1_main ?n ?i ?j ?A) =
      dim_col ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.step_1_main_dims",
     "dim_row (??.Jordan_Normal_Form_Existence.step_1_main ?n ?i ?j ?A) =
      dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.step_3_c_dims",
     "dim_col (??.Jordan_Normal_Form_Existence.step_3_c ?x ?l ?k ?i ?A) =
      dim_col ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.step_3_c_inner_loop_dims",
     "dim_col
       (??.Jordan_Normal_Form_Existence.step_3_c_inner_loop ?val ?l ?i ?j
         ?A) =
      dim_col ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.step_3_c_dims",
     "dim_row (??.Jordan_Normal_Form_Existence.step_3_c ?x ?l ?k ?i ?A) =
      dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.step_3_c_inner_loop_dims",
     "dim_row
       (??.Jordan_Normal_Form_Existence.step_3_c_inner_loop ?val ?l ?i ?j
         ?A) =
      dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Jordan_Normal_Form_Existence.jb_imp_diff_ev",
     "??.Jordan_Normal_Form_Existence.jb ?A ?i ?j ==>
      ??.Jordan_Normal_Form_Existence.diff_ev ?A ?i ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.jb_imp_uppert",
     "??.Jordan_Normal_Form_Existence.jb ?A ?i ?j ==>
      ??.Jordan_Normal_Form_Existence.uppert ?A ?i ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.identify_block_le_rev",
     "?j = ??.Jordan_Normal_Form_Existence.identify_block ?A ?i ==>
      ?j <= ?i",
     template_implication
      ([template_equation
         (template_var 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Jordan_Normal_Form_Existence.identify_block_le'",
     "??.Jordan_Normal_Form_Existence.identify_block ?A ?j = ?i ==>
      ?i <= ?j",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_var 0)],
       template_inequation (less_equals, template_var 0, template_var 1))),
    ("Jordan_Normal_Form_Existence.inv_all_eq_inv_part",
     "??.Jordan_Normal_Form_Existence.inv_all ?n ?p ?A =
      ??.Jordan_Normal_Form_Existence.inv_part ?n ?p ?A ?n ?n",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0),
           template_var 2),
         template_var 2))),
    ("Jordan_Normal_Form_Existence.inv_all_imp_inv_from",
     "??.Jordan_Normal_Form_Existence.inv_all ?n ?p ?A ==>
      ??.Jordan_Normal_Form_Existence.inv_from ?n ?p ?A ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.step_1_similar",
     "?A : carrier_mat ?n ?n ==>
      similar_mat (??.Jordan_Normal_Form_Existence.step_1 ?A) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 1)
           ))),
    ("Jordan_Normal_Form_Existence.step_2_similar",
     "?A : carrier_mat ?n ?n ==>
      similar_mat (??.Jordan_Normal_Form_Existence.step_2 ?A) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 1)
           ))),
    ("Jordan_Normal_Form_Existence.step_3_similar",
     "?A : carrier_mat ?n ?n ==>
      similar_mat (??.Jordan_Normal_Form_Existence.step_3 ?A) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 1)
           ))),
    ("Jordan_Normal_Form_Existence.step_2_main_similar",
     "?A : carrier_mat ?n ?n ==>
      similar_mat (??.Jordan_Normal_Form_Existence.step_2_main ?n ?j ?A)
       ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2)),
             template_var 2)
           ))),
    ("Jordan_Normal_Form_Existence.same_diag_ev_block",
     "[| ??.Jordan_Normal_Form_Existence.same_diag ?n ?A ?B;
         ??.Jordan_Normal_Form_Existence.ev_block ?n ?A |]
      ==> ??.Jordan_Normal_Form_Existence.ev_block ?n ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.same_diag_ev_blocks",
     "[| ??.Jordan_Normal_Form_Existence.same_diag ?n ?A ?B;
         ??.Jordan_Normal_Form_Existence.ev_blocks ?n ?A |]
      ==> ??.Jordan_Normal_Form_Existence.ev_blocks ?n ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.ev_blocks_diag",
     "[| ??.Jordan_Normal_Form_Existence.same_diag ?n ?A ?B;
         ??.Jordan_Normal_Form_Existence.ev_blocks ?n ?B |]
      ==> ??.Jordan_Normal_Form_Existence.ev_blocks ?n ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 1)
           ))),
    ("Jordan_Normal_Form_Existence.swap_cols_rows_block_dims",
     "?A : carrier_mat ?n ?n ==>
      ??.Jordan_Normal_Form_Existence.swap_cols_rows_block ?i ?j ?A
      : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 3)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 2))
           ))),
    ("Jordan_Normal_Form_Existence.triangular_to_jnf_vector",
     "[| ?A : carrier_mat ?n ?n; upper_triangular ?A |]
      ==> jordan_nf ?A (triangular_to_jnf_vector ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 0))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Jordan_Normal_Form_Existence.inv_all_imp_inv_at",
     "[| ??.Jordan_Normal_Form_Existence.inv_all ?n ?p ?A; ?k < ?n |]
      ==> ??.Jordan_Normal_Form_Existence.inv_at ?n ?p ?A ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.same_diag_trans",
     "[| ??.Jordan_Normal_Form_Existence.same_diag ?n ?A ?B;
         ??.Jordan_Normal_Form_Existence.same_diag ?n ?B ?C |]
      ==> ??.Jordan_Normal_Form_Existence.same_diag ?n ?A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.inv_atD",
     "[| ??.Jordan_Normal_Form_Existence.inv_at ?n ?p ?A ?m; ?i < ?n |]
      ==> ?p ?A ?i ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_var 0, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 3, template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("Jordan_Normal_Form_Existence.swap_cols_rows_block_dims_main",
     "dim_row
       (??.Jordan_Normal_Form_Existence.swap_cols_rows_block ?i ?j ?A) =
      dim_row ?A &
      dim_col
       (??.Jordan_Normal_Form_Existence.swap_cols_rows_block ?i ?j ?A) =
      dim_col ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1),
                     template_var 0))),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Jordan_Normal_Form_Existence.step_2_main_dims_main",
     "dim_row (??.Jordan_Normal_Form_Existence.step_2_main ?n ?j ?A) =
      dim_row ?A &
      dim_col (??.Jordan_Normal_Form_Existence.step_2_main ?n ?j ?A) =
      dim_col ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1),
                     template_var 0))),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Jordan_Normal_Form_Existence.step_3_a_dims_main",
     "dim_row (??.Jordan_Normal_Form_Existence.step_3_a ?i ?j ?A) =
      dim_row ?A &
      dim_col (??.Jordan_Normal_Form_Existence.step_3_a ?i ?j ?A) =
      dim_col ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1),
                     template_var 0))),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Jordan_Normal_Form_Existence.step_3_main_dims_main",
     "dim_row (step_3_main ?n ?k ?A) = dim_row ?A &
      dim_col (step_3_main ?n ?k ?A) = dim_col ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 1),
                     template_var 0))),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Jordan_Normal_Form_Existence.identify_blocks",
     "(?i_start, ?i_end)
      : set (??.Jordan_Normal_Form_Existence.identify_blocks ?B ?k) ==>
      ?i_start <= ?i_end & ?i_end < ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Jordan_Normal_Form_Existence.inv_atI",
     "(!!i. i < ?n ==> ?p ?A i ?m) ==>
      ??.Jordan_Normal_Form_Existence.inv_at ?n ?p ?A ?m",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.identify_blocksD",
     "[| ?k < ?n;
         (?i, ?j)
         : set (??.Jordan_Normal_Form_Existence.identify_blocks ?A ?k) |]
      ==> ?j < ?k",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 0),
                  template_var 4)))
            )],
       template_inequation (less_than, template_var 1, template_var 4))),
    ("Jordan_Normal_Form_Existence.identify_blocksD",
     "[| ?k < ?n;
         (?i, ?j)
         : set (??.Jordan_Normal_Form_Existence.identify_blocks ?A ?k) |]
      ==> ?i <= ?j",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 4)))
            )],
       template_inequation (less_equals, template_var 2, template_var 1))),
    ("Jordan_Normal_Form_Existence.inv_from_bot_step",
     "[| ?p ?A ?i;
         ??.Jordan_Normal_Form_Existence.inv_from_bot ?n ?p ?A (Suc ?i) |]
      ==> ??.Jordan_Normal_Form_Existence.inv_from_bot ?n ?p ?A ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_var 3, template_var 2), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 3),
                template_var 2),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 3),
               template_var 2),
             template_var 1)
           ))),
    ("Jordan_Normal_Form_Existence.uppert_to_jb",
     "[| ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A;
         ?A : carrier_mat ?n ?n |]
      ==> ??.Jordan_Normal_Form_Existence.inv_upto ?n
           ??.Jordan_Normal_Form_Existence.jb ?A 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 5),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Jordan_Normal_Form_Existence.step_3_main_similar",
     "[| ?A : carrier_mat ?n ?n; 0 < ?k |]
      ==> similar_mat (step_3_main ?n ?k ?A) ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 1))
            ),
        template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 2)),
             template_var 2)
           ))),
    ("Jordan_Normal_Form_Existence.step_1_main_dims_main",
     "dim_row (??.Jordan_Normal_Form_Existence.step_1_main ?n ?i ?j ?A) =
      dim_row ?A &
      dim_col (??.Jordan_Normal_Form_Existence.step_1_main ?n ?i ?j ?A) =
      dim_col ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 3),
                         template_var 2),
                       template_var 1),
                     template_var 0))),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Jordan_Normal_Form_Existence.inv_part_0_Suc",
     "?m_j < ?n ==>
      ??.Jordan_Normal_Form_Existence.inv_part ?n ?p ?A 0 ?m_j =
      ??.Jordan_Normal_Form_Existence.inv_part ?n ?p ?A ?n (Suc ?m_j)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0),
             template_hole 1),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0),
             template_var 2),
           template_app (template_hole 0, template_var 3))))),
    ("Jordan_Normal_Form_Existence.step_1_main_similar",
     "[| ?i <= ?j; ?A : carrier_mat ?n ?n |]
      ==> similar_mat
           (??.Jordan_Normal_Form_Existence.step_1_main ?n ?i ?j ?A) ?A",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 1)
           ))),
    ("Jordan_Normal_Form_Existence.same_upto_inv_upto_jb",
     "[| ??.Jordan_Normal_Form_Existence.same_upto ?n ?j ?A ?B;
         ??.Jordan_Normal_Form_Existence.inv_upto ?n
          ??.Jordan_Normal_Form_Existence.jb ?A ?j |]
      ==> ??.Jordan_Normal_Form_Existence.inv_upto ?n
           ??.Jordan_Normal_Form_Existence.jb ?B ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_hole 0),
                template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_hole 0),
               template_var 0),
             template_var 2)
           ))),
    ("Jordan_Normal_Form_Existence.same_upto_trans",
     "[| ??.Jordan_Normal_Form_Existence.same_upto ?n ?j ?A ?B;
         ??.Jordan_Normal_Form_Existence.same_upto ?n ?j ?B ?C |]
      ==> ??.Jordan_Normal_Form_Existence.same_upto ?n ?j ?A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.lookup_other_ev_None",
     "[| lookup_other_ev ?ev ?k ?A = None; ?i < ?k |]
      ==> ?A $$ (?i, ?i) = ?ev",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2),
            template_var 1),
          template_hole 4),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0)),
         template_var 3))),
    ("Jordan_Normal_Form_Existence.inv_allD",
     "[| ??.Jordan_Normal_Form_Existence.inv_all ?n ?p ?A; ?i < ?n;
         ?j < ?n |]
      ==> ?p ?A ?i ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 4),
        template_inequation (less_than, template_var 0, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 3, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.step_3_c_dims_main",
     "dim_row (??.Jordan_Normal_Form_Existence.step_3_c ?x ?l ?k ?i ?A) =
      dim_row ?A &
      dim_col (??.Jordan_Normal_Form_Existence.step_3_c ?x ?l ?k ?i ?A) =
      dim_col ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 4),
                           template_var 3),
                         template_var 2),
                       template_var 1),
                     template_var 0))),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 4),
                         template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Jordan_Normal_Form_Existence.step_3_c_inner_loop_dims_main",
     "dim_row
       (??.Jordan_Normal_Form_Existence.step_3_c_inner_loop ?val ?l ?i ?j
         ?A) =
      dim_row ?A &
      dim_col
       (??.Jordan_Normal_Form_Existence.step_3_c_inner_loop ?val ?l ?i ?j
         ?A) =
      dim_col ?A",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 1, template_var 4),
                           template_var 3),
                         template_var 2),
                       template_var 1),
                     template_var 0))),
               template_app (template_hole 2, template_var 0))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 4),
                         template_var 3),
                       template_var 2),
                     template_var 1),
                   template_var 0))),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Jordan_Normal_Form_Existence.identify_block",
     "??.Jordan_Normal_Form_Existence.identify_block ?A ?j = ?i ==>
      ?i = 0 | ?A $$ (?i - 1, ?i) ~= (1::?'a)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 9, template_var 2), template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 10, template_var 0),
                 template_hole 7)),
             template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_app
                      (template_app
                        (template_hole 3,
                         template_app
                          (template_app (template_hole 2, template_var 0),
                           template_hole 1)),
                       template_var 0))),
                 template_hole 0)))
           ))),
    ("Jordan_Normal_Form_Existence.lower_one_diff_uppert",
     "[| ?i < ?n; ??.Jordan_Normal_Form_Existence.lower_one ?k ?B ?i ?k |]
      ==> ??.Jordan_Normal_Form_Existence.diff_ev ?B ?i ?k &
          ??.Jordan_Normal_Form_Existence.uppert ?B ?i ?k",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0),
                template_var 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 3),
                 template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3),
               template_var 1))
           ))),
    ("Jordan_Normal_Form_Existence.identify_blocks_main_cong",
     "[| ?k < ?n; ??.Jordan_Normal_Form_Existence.same_upto ?n ?k ?A ?B |]
      ==> ??.Jordan_Normal_Form_Existence.identify_blocks_main ?A ?k ?xs =
          ??.Jordan_Normal_Form_Existence.identify_blocks_main ?B ?k ?xs",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 4),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 4),
           template_var 0)))),
    ("Jordan_Normal_Form_Existence.lookup_ev_None",
     "[| ??.Jordan_Normal_Form_Existence.lookup_ev ?ev ?j ?A = None;
         ?i < ?j |]
      ==> ?A $$ (?i, ?i) ~= ?ev",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2),
            template_var 1),
          template_hole 5),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 0)),
             template_var 3)
           ))),
    ("Jordan_Normal_Form_Existence.step_1_2_inv",
     "[| ?A : carrier_mat ?n ?n; upper_triangular ?A;
         ?B =
         ??.Jordan_Normal_Form_Existence.step_2
          (??.Jordan_Normal_Form_Existence.step_1 ?A) |]
      ==> ??.Jordan_Normal_Form_Existence.ev_blocks ?n ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 4, template_var 2)),
        template_equation
         (template_var 0,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 2)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.step_1_2_inv",
     "[| ?A : carrier_mat ?n ?n; upper_triangular ?A;
         ?B =
         ??.Jordan_Normal_Form_Existence.step_2
          (??.Jordan_Normal_Form_Existence.step_1 ?A) |]
      ==> ??.Jordan_Normal_Form_Existence.inv_all ?n
           ??.Jordan_Normal_Form_Existence.diff_ev ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_equation
         (template_var 0,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.step_1_2_inv",
     "[| ?A : carrier_mat ?n ?n; upper_triangular ?A;
         ?B =
         ??.Jordan_Normal_Form_Existence.step_2
          (??.Jordan_Normal_Form_Existence.step_1 ?A) |]
      ==> ??.Jordan_Normal_Form_Existence.inv_all ?n
           ??.Jordan_Normal_Form_Existence.uppert ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_equation
         (template_var 0,
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_var 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.find_largest_block",
     "[| ?blocks ~= [];
         ??.Jordan_Normal_Form_Existence.find_largest_block (hd ?blocks)
          (tl ?blocks) =
         (?m_begin, ?m_end) |]
      ==> (?m_begin, ?m_end) : set ?blocks",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 7)),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2)),
            template_app (template_hole 3, template_var 2)),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Jordan_Normal_Form_Existence.similar_iff_same_jordan_nf",
     "[| ?A : carrier_mat ?n ?n; ?B : carrier_mat ?n ?n |]
      ==> similar_mat ?A ?B = (jordan_nf ?A = jordan_nf ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 1))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 0)
              )],
         template_equation
          (template_app (template_hole 0, template_var 2),
           template_app (template_hole 0, template_var 0))))),
    ("Jordan_Normal_Form_Existence.inv_all_uppertD",
     "[| ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A;
         ?j < ?i; ?i < ?n |]
      ==> ?A $$ (?i, ?j) = (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_hole 5),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("Jordan_Normal_Form_Existence.inv_all_imp_inv_part",
     "[| ?m ?i <= ?n; ?m_j <= ?n;
         ??.Jordan_Normal_Form_Existence.inv_all ?n ?p ?A |]
      ==> ??.Jordan_Normal_Form_Existence.inv_part ?n ?p ?A ?m_i ?m_j",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_var 6, template_var 5),
          template_var 4),
        template_inequation (less_equals, template_var 3, template_var 4),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 4),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2),
                 template_var 1),
               template_var 0),
             template_var 3)
           ))),
    ("Jordan_Normal_Form_Existence.step_3_a_similar",
     "[| ?A : carrier_mat ?n ?n; ?i < ?j; ?j < ?n |]
      ==> similar_mat (??.Jordan_Normal_Form_Existence.step_3_a ?i ?j ?A)
           ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 2))
            ),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0),
                 template_var 3)),
             template_var 3)
           ))),
    ("Jordan_Normal_Form_Existence.swap_cols_rows_block_similar",
     "[| ?A : carrier_mat ?n ?n; ?j < ?n; ?i <= ?j |]
      ==> similar_mat
           (??.Jordan_Normal_Form_Existence.swap_cols_rows_block ?i ?j ?A)
           ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 2))
            ),
        template_inequation (less_than, template_var 1, template_var 2),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1),
                 template_var 3)),
             template_var 3)
           ))),
    ("Jordan_Normal_Form_Existence.inv_allI",
     "(!!i j. [| i < ?n; j < ?n |] ==> ?p ?A i j) ==>
      ??.Jordan_Normal_Form_Existence.inv_all ?n ?p ?A",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.identify_block_cong",
     "[| ??.Jordan_Normal_Form_Existence.same_upto ?n ?k ?A ?B; ?k < ?n;
         ?i < ?k |]
      ==> ??.Jordan_Normal_Form_Existence.identify_block ?A ?i =
          ??.Jordan_Normal_Form_Existence.identify_block ?B ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_than, template_var 3, template_var 4),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Jordan_Normal_Form_Existence.identify_blocks_cong",
     "[| ?k < ?n; ??.Jordan_Normal_Form_Existence.same_diag ?n ?A ?B;
         ??.Jordan_Normal_Form_Existence.same_upto ?n ?k ?A ?B |]
      ==> ??.Jordan_Normal_Form_Existence.identify_blocks ?A ?k =
          ??.Jordan_Normal_Form_Existence.identify_blocks ?B ?k",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 3)))),
    ("Jordan_Normal_Form_Existence.identify_block",
     "[| ??.Jordan_Normal_Form_Existence.identify_block ?A ?j = ?i;
         ?i <= ?k; ?k < ?j |]
      ==> ?A $$ (?k, Suc ?k) = (1::?'a)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 7, template_var 3), template_var 2),
          template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("Jordan_Normal_Form_Existence.inv_upto_Suc",
     "[| ??.Jordan_Normal_Form_Existence.inv_upto ?n ?p ?A ?m;
         !!i. i < ?n ==> ?p ?A i ?m |]
      ==> ??.Jordan_Normal_Form_Existence.inv_upto ?n ?p ?A (Suc ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Jordan_Normal_Form_Existence.order_char_poly_smult",
     "[| ?A : carrier_mat ?n ?n; ?k ~= 0 |]
      ==> order ?x (char_poly (?k \<cdot>\<^sub>m ?A)) =
          order (?x / ?k) (char_poly ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 2))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 3))),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_app (template_hole 2, template_var 3))))),
    ("Jordan_Normal_Form_Existence.ev_blockD",
     "[| ??.Jordan_Normal_Form_Existence.ev_block ?n ?A; ?i < ?n; ?j < ?n |]
      ==> ?A $$ (?i, ?i) = ?A $$ (?j, ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 3),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))))),
    ("Jordan_Normal_Form_Existence.inv_fromD",
     "[| ??.Jordan_Normal_Form_Existence.inv_from ?n ?p ?A ?m; ?i < ?n;
         ?j < ?n; ?m < ?j |]
      ==> ?p ?A ?i ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 5),
        template_inequation (less_than, template_var 0, template_var 5),
        template_inequation (less_than, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 4, template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.inv_uptoD",
     "[| ??.Jordan_Normal_Form_Existence.inv_upto ?n ?p ?A ?m; ?i < ?n;
         ?j < ?n; ?j < ?m |]
      ==> ?p ?A ?i ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 5),
        template_inequation (less_than, template_var 0, template_var 5),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 4, template_var 3),
               template_var 1),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.jordan_nf_exists",
     "[| ?A : carrier_mat ?n ?n;
         char_poly ?A = (PROD a<-?as. [:- a, 1::?'a:]) |]
      ==> EX n_as. jordan_nf ?A n_as",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, t_empty), template_var 0)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Jordan_Normal_Form_Existence.jordan_nf_via_factored_charpoly",
     "[| ?A : carrier_mat ?n ?n;
         char_poly ?A = (PROD a<-?es. [:- a, 1::?'a:]) |]
      ==> jordan_nf ?A (jordan_nf_via_factored_charpoly ?A ?es)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 8, template_var 2),
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, t_empty), template_var 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Jordan_Normal_Form_Existence.inv_partD",
     "[| ??.Jordan_Normal_Form_Existence.inv_part ?n ?p ?A ?m_i ?m_j;
         ?i < ?n; ?j < ?n; ?j < ?m_j |]
      ==> ?p ?A ?i ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 6),
        template_inequation (less_than, template_var 0, template_var 6),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 5, template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.jordan_nf_iff_linear_factorization",
     "?A : carrier_mat ?n ?n ==>
      (EX n_as. jordan_nf ?A n_as) =
      (EX as. char_poly ?A = (PROD a<-as. [:- a, 1::?'a:]))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app
               (template_app (template_hole 12, template_var 0),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 10, t_empty),
         template_app (template_hole 8, t_empty)))),
    ("Jordan_Normal_Form_Existence.same_uptoD",
     "[| ??.Jordan_Normal_Form_Existence.same_upto ?n ?j ?A ?B; ?i' < ?n;
         ?j' < ?j |]
      ==> ?A $$ (?i', ?j') = ?B $$ (?i', ?j')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 5),
        template_inequation (less_than, template_var 0, template_var 4)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Jordan_Normal_Form_Existence.inv_uptoI",
     "(!!i j. [| i < ?n; j < ?n; j < ?m |] ==> ?p ?A i j) ==>
      ??.Jordan_Normal_Form_Existence.inv_upto ?n ?p ?A ?m",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Jordan_Normal_Form_Existence.inv_fromI",
     "(!!i j. [| i < ?n; j < ?n; ?m < j |] ==> ?p ?A i j) ==>
      ??.Jordan_Normal_Form_Existence.inv_from ?n ?p ?A ?m",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("Jordan_Normal_Form_Existence.identify_blocksD",
     "[| ?k < ?n;
         (?i, ?j)
         : set (??.Jordan_Normal_Form_Existence.identify_blocks ?A ?k);
         Suc ?j ~= ?k |]
      ==> ?A $$ (?j, Suc ?j) ~= (1::?'b)",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 4)))
            ),
        template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 1),
              template_var 4)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_app (template_hole 3, template_var 1))),
             template_hole 0)
           ))),
    ("Jordan_Normal_Form_Existence.add_col_sub_row_uppert",
     "[| ?A : carrier_mat ?n ?n; ?i < ?j; ?j < ?n;
         ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A |]
      ==> ??.Jordan_Normal_Form_Existence.inv_all ?n
           ??.Jordan_Normal_Form_Existence.uppert
           (add_col_sub_row ?a ?i ?j ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 3))
            ),
        template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_hole 1),
              template_var 4)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_hole 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2),
                 template_var 1),
               template_var 4))
           ))),
    ("Jordan_Normal_Form_Existence.same_uptoI",
     "(!!i' j'.
          [| i' < ?n; j' < ?j |] ==> ?A $$ (i', j') = ?B $$ (i', j')) ==>
      ??.Jordan_Normal_Form_Existence.same_upto ?n ?j ?A ?B",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.find_largest_block",
     "[| ?blocks ~= [];
         ??.Jordan_Normal_Form_Existence.find_largest_block (hd ?blocks)
          (tl ?blocks) =
         (?m_begin, ?m_end);
         (?i_begin, ?i_end) : set ?blocks |]
      ==> ?i_end - ?i_begin <= ?m_end - ?m_begin",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 9)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 4)),
            template_app (template_hole 5, template_var 4)),
          template_app
           (template_app (template_hole 4, template_var 3),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_app (template_hole 2, template_var 4))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 3)))),
    ("Jordan_Normal_Form_Existence.inv_partD",
     "[| ??.Jordan_Normal_Form_Existence.inv_part ?n ?p ?A ?m_i ?m_j;
         ?i < ?n; ?j < ?n; ?j = ?m_j; ?m_i <= ?i |]
      ==> ?p ?A ?i ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 6),
        template_inequation (less_than, template_var 0, template_var 6),
        template_equation (template_var 0, template_var 2),
        template_inequation (less_equals, template_var 3, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 5, template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.find_largest_block_main",
     "??.Jordan_Normal_Form_Existence.find_largest_block ?block ?blocks =
      (?m_b, ?m_e) ==>
      (?m_b, ?m_e) : insert ?block (set ?blocks) &
      (ALL b:insert ?block (set ?blocks). snd b - fst b <= ?m_e - ?m_b)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 10, template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 9, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app (template_hole 9, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_app (template_hole 5, template_var 2)))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 6, template_var 3),
                   template_app (template_hole 5, template_var 2))),
               t_empty))
           ))),
    ("Jordan_Normal_Form_Existence.add_col_sub_row_same_upto",
     "[| ?i < ?j; ?j < ?n; ?A : carrier_mat ?n ?n;
         ??.Jordan_Normal_Form_Existence.inv_upto ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A ?j |]
      ==> ??.Jordan_Normal_Form_Existence.same_upto ?n ?j ?A
           (add_col_sub_row ?v ?i ?j ?A)",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_inequation (less_than, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_hole 2),
                template_var 1),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 3),
               template_var 1),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 4),
                 template_var 3),
               template_var 1))
           ))),
    ("Jordan_Normal_Form_Existence.identify_blocksD",
     "[| ?k < ?n;
         (?i, ?j)
         : set (??.Jordan_Normal_Form_Existence.identify_blocks ?A ?k);
         ?i <= ?l; ?l < ?j |]
      ==> ?A $$ (?l, Suc ?l) = (1::?'b)",
     template_implication
      ([template_inequation (less_than, template_var 5, template_var 4),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 5)))
            ),
        template_inequation (less_equals, template_var 3, template_var 0),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 7, template_var 0),
             template_app (template_hole 1, template_var 0))),
         template_hole 0))),
    ("Jordan_Normal_Form_Existence.identify_blocks_rev",
     "[| ?A $$ (?i, Suc ?i) = (0::?'b) & Suc ?i < ?k | Suc ?i = ?k;
         ?k < ?n |]
      ==> (??.Jordan_Normal_Form_Existence.identify_block ?A ?i, ?i)
          : set (??.Jordan_Normal_Form_Existence.identify_blocks ?A ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app
                     (template_app
                       (template_hole 10,
                        template_app
                         (template_app (template_hole 9, template_var 3),
                          template_app
                           (template_app (template_hole 8, template_var 2),
                            template_app
                             (template_hole 7, template_var 2)))),
                      template_hole 6)),
                  template_app
                   (template_app
                     (template_hole 5,
                      template_app (template_hole 7, template_var 2)),
                    template_var 1))),
              template_app
               (template_app
                 (template_hole 4,
                  template_app (template_hole 7, template_var 2)),
                template_var 1))
            ),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2)),
                 template_var 2)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)))
           ))),
    ("Jordan_Normal_Form_Existence.inv_partD",
     "[| ??.Jordan_Normal_Form_Existence.inv_part ?n ?p ?A ?m_i ?m_j;
         ?i < ?n; ?j < ?n; ?j < ?m_j | ?j = ?m_j & ?m_i <= ?i |]
      ==> ?p ?A ?i ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 6),
                    template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 6),
        template_inequation (less_than, template_var 0, template_var 6),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_app (template_hole 1, template_var 0),
                    template_var 2)),
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_var 5, template_var 4),
               template_var 1),
             template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.partition_jb",
     "[| ?A : carrier_mat ?n ?n;
         ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A;
         ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.diff_ev ?A;
         ??.Jordan_Normal_Form_Existence.ev_blocks ?n ?A;
         partition_ev_blocks ?A [] = ?bs |]
      ==> ?A = diag_block_mat ?bs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 1),
                template_hole 7),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 1),
                template_hole 6),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 2)
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 2),
            template_hole 2),
          template_var 0)],
       template_equation
        (template_var 2, template_app (template_hole 0, template_var 0)))),
    ("Jordan_Normal_Form_Existence.jnf_vector",
     "[| ?A : carrier_mat ?n ?n;
         !!i j.
            [| i < ?n; j < ?n |]
            ==> ??.Jordan_Normal_Form_Existence.jb ?A i j;
         ??.Jordan_Normal_Form_Existence.ev_block ?n ?A |]
      ==> jordan_matrix (jnf_vector ?A) = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app (template_hole 7, template_var 0),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 1))),
    ("Jordan_Normal_Form_Existence.inv_all_diff_evD",
     "[| ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.diff_ev ?A;
         ?i < ?j; ?j < ?n; ?A $$ (?i, ?i) ~= ?A $$ (?j, ?j) |]
      ==> ?A $$ (?i, ?j) = (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_hole 6),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation (less_than, template_var 0, template_var 3),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Jordan_Normal_Form_Existence.inv_upto_mono",
     "[| !!i j. [| i < ?n; j < ?k; ?p ?A i j |] ==> ?q ?A i j;
         ??.Jordan_Normal_Form_Existence.inv_upto ?n ?p ?A ?k |]
      ==> ??.Jordan_Normal_Form_Existence.inv_upto ?n ?q ?A ?k",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 4),
                  template_var 2),
                template_var 1),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0),
               template_var 1),
             template_var 3)
           ))),
    ("Jordan_Normal_Form_Existence.add_col_sub_row_inv_from_uppert",
     "[| ??.Jordan_Normal_Form_Existence.inv_from ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A ?j;
         ?A : carrier_mat ?n ?n; ?i < ?n; ?i < ?j; ?j < ?n |]
      ==> ??.Jordan_Normal_Form_Existence.inv_from ?n
           ??.Jordan_Normal_Form_Existence.uppert
           (add_col_sub_row ?v ?i ?j ?A) ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_hole 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 4),
                template_var 4))
            ),
        template_inequation (less_than, template_var 1, template_var 4),
        template_inequation (less_than, template_var 1, template_var 2),
        template_inequation (less_than, template_var 2, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 4),
                 template_hole 4),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1),
                   template_var 2),
                 template_var 3)),
             template_var 2)
           ))),
    ("Jordan_Normal_Form_Existence.lookup_ev_Some",
     "??.Jordan_Normal_Form_Existence.lookup_ev ?ev ?j ?A = Some ?i ==>
      ?i < ?j &
      ?A $$ (?i, ?i) = ?ev & (ALL k>?i. k < ?j --> ?A $$ (k, k) ~= ?ev)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app
                      (template_app (template_hole 4, template_var 1),
                       template_app
                        (template_app (template_hole 3, template_var 0),
                         template_var 0))),
                   template_var 3)),
               template_app (template_hole 2, t_empty)))
           ))),
    ("Jordan_Normal_Form_Existence.lookup_other_ev_Some",
     "lookup_other_ev ?ev ?k ?A = Some ?i ==>
      ?i < ?k &
      ?A $$ (?i, ?i) ~= ?ev &
      (ALL j. ?i < j & j < ?k --> ?A $$ (j, j) = ?ev)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_app
                          (template_app (template_hole 2, template_var 0),
                           template_var 0))),
                     template_var 3))),
               template_app (template_hole 1, t_empty)))
           ))),
    ("Jordan_Normal_Form_Existence.inv_partI",
     "(!!i j.
          [| i < ?n; j < ?n; j < ?m_j | j = ?m_j & ?m_i <= i |]
          ==> ?p ?A i j) ==>
      ??.Jordan_Normal_Form_Existence.inv_part ?n ?p ?A ?m_i ?m_j",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1),
                 template_var 0),
               template_var 2),
             template_var 3)
           ))),
    ("Jordan_Normal_Form_Existence.jnf_vector",
     "[| ?A : carrier_mat ?n ?n;
         !!i j.
            [| i < ?n; j < ?n |]
            ==> ??.Jordan_Normal_Form_Existence.jb ?A i j;
         ??.Jordan_Normal_Form_Existence.ev_block ?n ?A |]
      ==> 0 ~: fst ` set (jnf_vector ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app
               (template_app (template_hole 11, template_var 0),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 1)
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 5, template_hole 4),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 1))))
               )
           ))),
    ("Jordan_Normal_Form_Existence.step_1_main_inv",
     "[| ?i <= ?j; ?A : carrier_mat ?n ?n;
         ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A;
         ??.Jordan_Normal_Form_Existence.inv_part ?n
          ??.Jordan_Normal_Form_Existence.diff_ev ?A ?i ?j |]
      ==> ??.Jordan_Normal_Form_Existence.inv_all ?n
           ??.Jordan_Normal_Form_Existence.uppert
           (??.Jordan_Normal_Form_Existence.step_1_main ?n ?i ?j ?A) &
          ??.Jordan_Normal_Form_Existence.inv_all ?n
           ??.Jordan_Normal_Form_Existence.diff_ev
           (??.Jordan_Normal_Form_Existence.step_1_main ?n ?i ?j ?A)",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 0),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 0),
                template_hole 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 0),
                    template_hole 2),
                  template_var 1),
                template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 4),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 3),
                     template_var 2),
                   template_var 1))),
             template_app
              (template_app
                (template_app (template_hole 5, template_var 0),
                 template_hole 2),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 3),
                   template_var 2),
                 template_var 1)))
           ))),
    ("Jordan_Normal_Form_Existence.inv_all_diff_ev_uppertD",
     "[| ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.diff_ev ?A;
         ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A;
         ?i < ?n; ?j < ?n; ?A $$ (?i, ?i) ~= ?A $$ (?j, ?j) |]
      ==> ?A $$ (?i, ?j) = (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_hole 7),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_hole 6),
              template_var 2)
            ),
        template_inequation (less_than, template_var 1, template_var 3),
        template_inequation (less_than, template_var 0, template_var 3),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Jordan_Normal_Form_Existence.add_col_sub_row_diag",
     "[| ?A : carrier_mat ?n ?n;
         ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A;
         ?i < ?j; ?j < ?n; ?k < ?n |]
      ==> add_col_sub_row ?a ?i ?j ?A $$ (?k, ?k) = ?A $$ (?k, ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 4),
                template_hole 5),
              template_var 5)
            ),
        template_inequation (less_than, template_var 3, template_var 2),
        template_inequation (less_than, template_var 2, template_var 4),
        template_inequation (less_than, template_var 1, template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 3),
                 template_var 2),
               template_var 5)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 5),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1))))),
    ("Jordan_Normal_Form_Existence.identify_block_main",
     "??.Jordan_Normal_Form_Existence.identify_block ?A ?j = ?i ==>
      ?i <= ?j &
      (?i = 0 | ?A $$ (?i - 1, ?i) ~= (1::?'a)) &
      (ALL k>=?i. k < ?j --> ?A $$ (k, Suc k) = (1::?'a))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 15, template_var 2),
            template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_var 0),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app (template_hole 16, template_var 0),
                       template_hole 11)),
                   template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_app (template_hole 8, template_var 2),
                           template_app
                            (template_app
                              (template_hole 7,
                               template_app
                                (template_app
                                  (template_hole 6, template_var 0),
                                 template_hole 5)),
                             template_var 0))),
                       template_hole 4)))),
               template_app (template_hole 3, t_empty)))
           ))),
    ("Jordan_Normal_Form_Existence.identify_blocks_main",
     "[| (?i_start, ?i_end)
         : set (??.Jordan_Normal_Form_Existence.identify_blocks_main ?A ?i
                 ?list);
         !!i_s i_e. (i_s, i_e) : set ?list ==> i_s <= i_e & i_e < ?k;
         ?i <= ?k |]
      ==> ?i_start <= ?i_end & ?i_end < ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 5),
                  template_var 4)),
              template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2),
                  template_var 1)))
            ),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_inequation (less_equals, template_var 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("Jordan_Normal_Form_Existence.ev_blocksD",
     "[| ??.Jordan_Normal_Form_Existence.ev_blocks ?n ?A; ?i < ?j; ?j < ?k;
         ?k < ?n; ?A $$ (?k, ?k) = ?A $$ (?i, ?i) |]
      ==> ?A $$ (?j, ?j) = ?A $$ (?i, ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation (less_than, template_var 0, template_var 4),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3),
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 0)),
          template_app
           (template_app (template_hole 1, template_var 3),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 2)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 2))))),
    ("Jordan_Normal_Form_Existence.ev_blocks_leD",
     "[| ??.Jordan_Normal_Form_Existence.ev_blocks ?n ?A; ?i <= ?j;
         ?j <= ?k; ?k < ?n; ?A $$ (?k, ?k) = ?A $$ (?i, ?i) |]
      ==> ?A $$ (?j, ?j) = ?A $$ (?i, ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_than, template_var 0, template_var 4),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3),
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 0)),
          template_app
           (template_app (template_hole 1, template_var 3),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 2)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 2))))),
    ("Jordan_Normal_Form_Existence.ev_blocks_partD",
     "[| ev_blocks_part ?m ?A; ?i < ?j; ?j < ?k; ?k < ?m;
         ?A $$ (?k, ?k) = ?A $$ (?i, ?i) |]
      ==> ?A $$ (?j, ?j) = ?A $$ (?i, ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_var 3)
            ),
        template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation (less_than, template_var 0, template_var 4),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3),
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 0)),
          template_app
           (template_app (template_hole 1, template_var 3),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 2)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 2))))),
    ("Jordan_Normal_Form_Existence.ev_blocks_part_leD",
     "[| ev_blocks_part ?m ?A; ?i <= ?j; ?j <= ?k; ?k < ?m;
         ?A $$ (?k, ?k) = ?A $$ (?i, ?i) |]
      ==> ?A $$ (?j, ?j) = ?A $$ (?i, ?i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3)
            ),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_than, template_var 0, template_var 4),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3),
            template_app
             (template_app (template_hole 0, template_var 0),
              template_var 0)),
          template_app
           (template_app (template_hole 1, template_var 3),
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 2)))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 2))))),
    ("Jordan_Normal_Form_Existence.step_3_main_inv",
     "[| ?A : carrier_mat ?n ?n; 0 < ?k;
         ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A;
         ??.Jordan_Normal_Form_Existence.ev_block ?n ?A;
         ??.Jordan_Normal_Form_Existence.inv_upto ?n
          ??.Jordan_Normal_Form_Existence.jb ?A ?k |]
      ==> ??.Jordan_Normal_Form_Existence.inv_all ?n
           ??.Jordan_Normal_Form_Existence.jb (step_3_main ?n ?k ?A) &
          ??.Jordan_Normal_Form_Existence.same_diag ?n ?A
           (step_3_main ?n ?k ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 1),
                template_var 1))
            ),
        template_inequation (less_than, template_hole 8, template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 1),
                template_hole 6),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 1),
                  template_hole 3),
                template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 7, template_var 1),
                   template_hole 3),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0),
                   template_var 2))),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0),
                 template_var 2)))
           ))),
    ("Jordan_Normal_Form_Existence.step_3_c_inner_loop_similar",
     "[| ?A : carrier_mat ?n ?n; ?l ~= ?i; ?k - 1 <= ?l; ?k - 1 <= ?i;
         ?l < ?n; ?i < ?n |]
      ==> similar_mat
           (??.Jordan_Normal_Form_Existence.step_3_c_inner_loop ?val ?l ?i
             ?k ?A)
           ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_app
               (template_app (template_hole 8, template_var 4),
                template_var 4))
            ),
        template_negation
         (template_equation (template_var 3, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_hole 3),
          template_var 3),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_hole 3),
          template_var 2),
        template_inequation (less_than, template_var 3, template_var 4),
        template_inequation (less_than, template_var 2, template_var 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 5)),
             template_var 5)
           ))),
    ("Jordan_Normal_Form_Existence.step_2_main_inv",
     "[| ?A : carrier_mat ?n ?n;
         ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A;
         ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.diff_ev ?A;
         ev_blocks_part ?j ?A |]
      ==> ??.Jordan_Normal_Form_Existence.inv_all ?n
           ??.Jordan_Normal_Form_Existence.uppert
           (??.Jordan_Normal_Form_Existence.step_2_main ?n ?j ?A) &
          ??.Jordan_Normal_Form_Existence.inv_all ?n
           ??.Jordan_Normal_Form_Existence.diff_ev
           (??.Jordan_Normal_Form_Existence.step_2_main ?n ?j ?A) &
          ??.Jordan_Normal_Form_Existence.ev_blocks ?n
           (??.Jordan_Normal_Form_Existence.step_2_main ?n ?j ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 1),
                   template_hole 5),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0),
                   template_var 2))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 6, template_var 1),
                     template_hole 4),
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0),
                     template_var 2))),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0),
                   template_var 2))))
           ))),
    ("Jordan_Normal_Form_Existence.identify_blocksD",
     "[| ?k < ?n;
         (?i, ?j)
         : set (??.Jordan_Normal_Form_Existence.identify_blocks ?A ?k);
         0 < ?i |]
      ==> ?A $$ (?i - 1, ?i - 1) ~= ?A $$ (?k, ?k) |
          ?A $$ (?i - 1, ?i) ~= (1::?'b)",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1)),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 0),
                  template_var 4)))
            ),
        template_inequation (less_than, template_hole 7, template_var 2)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 0),
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app
                            (template_app (template_hole 2, template_var 2),
                             template_hole 1)),
                         template_app
                          (template_app (template_hole 2, template_var 2),
                           template_hole 1)))),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_app
                      (template_app (template_hole 10, template_var 4),
                       template_var 4))))),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_app (template_hole 2, template_var 2),
                           template_hole 1)),
                       template_var 2))),
                 template_hole 0)))
           ))),
    ("Jordan_Normal_Form_Existence.step_3_c_similar",
     "[| ?A : carrier_mat ?n ?n; ?l < ?k; ?k < ?n;
         !!i_begin i_end.
            (i_begin, i_end) : set ?blocks ==>
            i_end <= ?k & i_end - i_begin <= ?l |]
      ==> similar_mat
           (??.Jordan_Normal_Form_Existence.step_3_c ?x ?l ?k ?blocks ?A)
           ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 5),
              template_app
               (template_app (template_hole 10, template_var 4),
                template_var 4))
            ),
        template_inequation (less_than, template_var 3, template_var 2),
        template_inequation (less_than, template_var 2, template_var 4),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 0),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 5)),
             template_var 5)
           ))),
    ("Jordan_Normal_Form_Existence.ev_blocks_partI",
     "(!!i j k.
          [| i < j; j < k; k < ?m; ?A $$ (k, k) = ?A $$ (i, i) |]
          ==> ?A $$ (j, j) = ?A $$ (i, i)) ==>
      ev_blocks_part ?m ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Jordan_Normal_Form_Existence.partition_jb",
     "[| ?A : carrier_mat ?n ?n;
         ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A;
         ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.diff_ev ?A;
         ??.Jordan_Normal_Form_Existence.ev_blocks ?n ?A;
         partition_ev_blocks ?A [] = ?bs; ?B : set ?bs |]
      ==> ??.Jordan_Normal_Form_Existence.inv_all'
           ??.Jordan_Normal_Form_Existence.uppert ?B &
          ??.Jordan_Normal_Form_Existence.ev_block (dim_col ?B) ?B &
          dim_row ?B = dim_col ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_app
               (template_app (template_hole 14, template_var 2),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 2),
                template_hole 12),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 2),
                template_hole 11),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 3),
            template_hole 7),
          template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 0),
              template_app (template_hole 6, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 12),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_app (template_hole 2, template_var 0))))
           ))),
    ("Jordan_Normal_Form_Existence.inv_from_upto_at_all_ev_block",
     "[| ??.Jordan_Normal_Form_Existence.inv_upto ?n
          ??.Jordan_Normal_Form_Existence.jb ?A ?k;
         ??.Jordan_Normal_Form_Existence.inv_from ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A ?k;
         ??.Jordan_Normal_Form_Existence.inv_at ?n ?p ?A ?k;
         ??.Jordan_Normal_Form_Existence.ev_block ?n ?A;
         !!i. [| i < ?n; ?p ?A i ?k |]
              ==> ??.Jordan_Normal_Form_Existence.uppert ?A i ?k;
         ?k < ?n |]
      ==> ??.Jordan_Normal_Form_Existence.inv_all ?n
           ??.Jordan_Normal_Form_Existence.uppert ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 3),
                  template_hole 7),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_hole 5),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 0),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_inequation (less_than, template_var 1, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_hole 5),
             template_var 2)
           ))),
    ("Jordan_Normal_Form_Existence.inv_from_upto_at_all",
     "[| ??.Jordan_Normal_Form_Existence.inv_upto ?n
          ??.Jordan_Normal_Form_Existence.jb ?A ?k;
         ??.Jordan_Normal_Form_Existence.inv_from ?n
          ??.Jordan_Normal_Form_Existence.diff_ev ?A ?k;
         ??.Jordan_Normal_Form_Existence.inv_from ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A ?k;
         ??.Jordan_Normal_Form_Existence.inv_at ?n ?p ?A ?k;
         !!i. [| i < ?n; ?p ?A i ?k |]
              ==> ??.Jordan_Normal_Form_Existence.diff_ev ?A i ?k &
                  ??.Jordan_Normal_Form_Existence.uppert ?A i ?k |]
      ==> ??.Jordan_Normal_Form_Existence.inv_all ?n
           ??.Jordan_Normal_Form_Existence.diff_ev ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_hole 8),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_hole 6),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_hole 5),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 0),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_hole 6),
             template_var 2)
           ))),
    ("Jordan_Normal_Form_Existence.inv_from_upto_at_all",
     "[| ??.Jordan_Normal_Form_Existence.inv_upto ?n
          ??.Jordan_Normal_Form_Existence.jb ?A ?k;
         ??.Jordan_Normal_Form_Existence.inv_from ?n
          ??.Jordan_Normal_Form_Existence.diff_ev ?A ?k;
         ??.Jordan_Normal_Form_Existence.inv_from ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A ?k;
         ??.Jordan_Normal_Form_Existence.inv_at ?n ?p ?A ?k;
         !!i. [| i < ?n; ?p ?A i ?k |]
              ==> ??.Jordan_Normal_Form_Existence.diff_ev ?A i ?k &
                  ??.Jordan_Normal_Form_Existence.uppert ?A i ?k |]
      ==> ??.Jordan_Normal_Form_Existence.inv_all ?n
           ??.Jordan_Normal_Form_Existence.uppert ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_hole 8),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_hole 6),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_hole 5),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 0),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_hole 5),
             template_var 2)
           ))),
    ("Jordan_Normal_Form_Existence.counting_ones_complexity",
     "[| ?A : carrier_mat ?n ?n; upper_triangular ?A;
         !!a. a : set (diag_mat ?A) ==> norm a <= 1;
         !!a. [| a : set (diag_mat ?A); norm a = 1 |]
              ==> length (filter ((=) a) (diag_mat ?A)) <= ?N |]
      ==> EX c1 c2.
             ALL k.
                norm_bound (?A ^\<^sub>m k) (c1 + c2 * real k ^ (?N - 1))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 2),
              template_app
               (template_app (template_hole 23, template_var 1),
                template_var 1))
            ),
        template_predicate
         (template_app (template_hole 22, template_var 2)),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 21, t_empty))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Jordan_Normal_Form_Existence.compute_jnf_complexity",
     "[| ?A : carrier_mat ?n ?n; upper_triangular ?A;
         !!n a. (n, a) : set (triangular_to_jnf_vector ?A) ==> norm a <= 1;
         !!n a.
            [| (n, a) : set (triangular_to_jnf_vector ?A); norm a = 1 |]
            ==> n <= ?N |]
      ==> EX c1 c2.
             ALL k.
                norm_bound (?A ^\<^sub>m k) (c1 + c2 * real k ^ (?N - 1))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 23, template_var 2),
              template_app
               (template_app (template_hole 22, template_var 1),
                template_var 1))
            ),
        template_predicate
         (template_app (template_hole 21, template_var 2)),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Jordan_Normal_Form_Existence.add_col_sub_row_diff_ev_part_old",
     "[| ?A : carrier_mat ?n ?n; ?i <= ?j; ?i ~= 0; ?i < ?n; ?j < ?n;
         ?i' < ?n; ?j' < ?n; ?j' < ?j | ?j' = ?j & ?i <= ?i';
         ??.Jordan_Normal_Form_Existence.inv_part ?n
          ??.Jordan_Normal_Form_Existence.diff_ev ?A ?i ?j;
         ??.Jordan_Normal_Form_Existence.inv_all ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A |]
      ==> ??.Jordan_Normal_Form_Existence.diff_ev
           (add_col_sub_row ?a (?i - 1) ?j ?A) ?i' ?j'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 6),
              template_app
               (template_app (template_hole 14, template_var 5),
                template_var 5))
            ),
        template_inequation (less_equals, template_var 4, template_var 3),
        template_negation
         (template_equation (template_var 4, template_hole 10)),
        template_inequation (less_than, template_var 4, template_var 5),
        template_inequation (less_than, template_var 3, template_var 5),
        template_inequation (less_than, template_var 2, template_var 5),
        template_inequation (less_than, template_var 1, template_var 5),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 11, template_var 1),
                    template_var 3)),
                template_app
                 (template_app (template_hole 13, template_var 4),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 5),
                    template_hole 5),
                  template_var 6),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_hole 3),
              template_var 6)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 2, template_var 0),
                       template_app
                        (template_app (template_hole 1, template_var 4),
                         template_hole 0)),
                     template_var 3),
                   template_var 6)),
               template_var 2),
             template_var 1)
           ))),
    ("Jordan_Normal_Form_Existence.identify_blocks_iff",
     "?k < ?n ==>
      set (??.Jordan_Normal_Form_Existence.identify_blocks ?A ?k) =
      {(i, j) |i j.
       i <= j &
       j < ?k &
       (ALL l>=i. l < j --> ?A $$ (l, Suc l) = (1::?'b)) &
       (Suc j ~= ?k --> ?A $$ (j, Suc j) ~= (1::?'b)) &
       (0 < i --> ?A $$ (i - 1, i) ~= (1::?'b))}",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_hole 18,
           template_app
            (template_app (template_hole 17, template_var 0),
             template_var 2)),
         template_app (template_hole 16, t_empty)))),
    ("Jordan_Normal_Form_Existence.factored_char_poly_norm_bound_cof",
     "[| ?A : carrier_mat ?n ?n;
         char_poly ?A = (PROD a<-?as. [:- a, 1::?'a:]);
         !!a. a : set ?as ==> norm a <= 1;
         !!a. [| a : set ?as; norm a = 1 |]
              ==> length (filter ((=) a) ?as) <= ?N |]
      ==> EX c1 c2.
             ALL k.
                norm_bound (?A ^\<^sub>m k) (c1 + c2 * real k ^ (?N - 1))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 30, template_var 3),
              template_app
               (template_app (template_hole 29, template_var 2),
                template_var 2))
            ),
        template_equation
         (template_app (template_hole 27, template_var 3),
          template_app
           (template_hole 26,
            template_app
             (template_app (template_hole 25, t_empty), template_var 1))),
        template_predicate (template_app (template_hole 20, t_empty)),
        template_predicate (template_app (template_hole 20, t_empty))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Jordan_Normal_Form_Existence.identify_blocksI",
     "[| ?k < ?n; ?i <= ?j; ?j < ?k;
         !!l. [| ?i <= l; l < ?j |] ==> ?A $$ (l, Suc l) = (1::?'b);
         Suc ?j ~= ?k ==> ?A $$ (?j, Suc ?j) ~= (1::?'b);
         0 < ?i ==> ?A $$ (?i - 1, ?i) ~= (1::?'b) |]
      ==> (?i, ?j)
          : set (??.Jordan_Normal_Form_Existence.identify_blocks ?A ?k)",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 4),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_implication
         ([template_negation
            (
               template_equation
                (template_app (template_hole 9, template_var 1),
                 template_var 4)
               )],
          template_negation
           (
              template_equation
               (template_app
                 (template_app (template_hole 11, template_var 0),
                  template_app
                   (template_app (template_hole 10, template_var 1),
                    template_app (template_hole 9, template_var 1))),
                template_hole 8)
              )),
        template_implication
         ([template_inequation
            (less_than, template_hole 5, template_var 2)],
          template_negation
           (
              template_equation
               (template_app
                 (template_app (template_hole 11, template_var 0),
                  template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 4, template_var 2),
                        template_hole 3)),
                    template_var 2)),
                template_hole 8)
              ))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 10, template_var 2),
                 template_var 1)),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 4)))
           ))),
    ("Jordan_Normal_Form_Existence.step_3_a_inv",
     "[| ?A : carrier_mat ?n ?n; ?i < ?j; ?j < ?n;
         ??.Jordan_Normal_Form_Existence.inv_upto ?n
          ??.Jordan_Normal_Form_Existence.jb ?A ?j;
         ??.Jordan_Normal_Form_Existence.inv_from ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A ?j;
         ??.Jordan_Normal_Form_Existence.inv_from_bot ?n
          (%A i. ??.Jordan_Normal_Form_Existence.one_zero A i ?j) ?A ?i;
         ??.Jordan_Normal_Form_Existence.ev_block ?n ?A |]
      ==> ??.Jordan_Normal_Form_Existence.inv_from ?n
           ??.Jordan_Normal_Form_Existence.uppert
           (??.Jordan_Normal_Form_Existence.step_3_a ?i ?j ?A) ?j &
          ??.Jordan_Normal_Form_Existence.inv_upto ?n
           ??.Jordan_Normal_Form_Existence.jb
           (??.Jordan_Normal_Form_Existence.step_3_a ?i ?j ?A) ?j &
          ??.Jordan_Normal_Form_Existence.inv_at ?n
           ??.Jordan_Normal_Form_Existence.one_zero
           (??.Jordan_Normal_Form_Existence.step_3_a ?i ?j ?A) ?j &
          ??.Jordan_Normal_Form_Existence.same_diag ?n ?A
           (??.Jordan_Normal_Form_Existence.step_3_a ?i ?j ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 3),
              template_app
               (template_app (template_hole 12, template_var 2),
                template_var 2))
            ),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation (less_than, template_var 0, template_var 2),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 2),
                  template_hole 9),
                template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 2),
                  template_hole 7),
                template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 2), t_empty),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 8, template_var 2),
                     template_hole 7),
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 0),
                     template_var 3)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 2),
                       template_hole 9),
                     template_app
                      (template_app
                        (template_app (template_hole 2, template_var 1),
                         template_var 0),
                       template_var 3)),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 2),
                         template_hole 5),
                       template_app
                        (template_app
                          (template_app (template_hole 2, template_var 1),
                           template_var 0),
                         template_var 3)),
                     template_var 0)),
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 3),
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_var 1),
                       template_var 0),
                     template_var 3)))))
           ))),
    ("Jordan_Normal_Form_Existence.swap_cols_rows_block_index",
     "[| ?i < dim_row ?A; ?i < dim_col ?A; ?j < dim_row ?A; ?j < dim_col ?A;
         ?low <= ?high; ?high < dim_row ?A; ?high < dim_col ?A |]
      ==> ??.Jordan_Normal_Form_Existence.swap_cols_rows_block ?low ?high
           ?A $$
          (?i, ?j) =
          ?A $$
          (if ?i = ?low then ?high
           else if ?low < ?i & ?i <= ?high then ?i - 1 else ?i,
           if ?j = ?low then ?high
           else if ?low < ?j & ?j <= ?high then ?j - 1 else ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 11, template_var 3)),
        template_inequation
         (less_than, template_var 4,
          template_app (template_hole 10, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 11, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 10, template_var 3)),
        template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 11, template_var 3)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 10, template_var 3))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app
                     (template_app (template_hole 6, template_var 1),
                      template_var 0),
                    template_var 3)),
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 2))
              )],
         template_predicate
          (
             template_app
              (template_app (template_hole 7, template_var 3),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app (template_hole 3, template_var 4),
                           template_var 1)),
                       template_var 0),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_app
                              (template_hole 2,
                               template_app
                                (template_app
                                  (template_hole 12, template_var 1),
                                 template_var 4)),
                             template_app
                              (template_app
                                (template_hole 9, template_var 4),
                               template_var 0))),
                         template_app
                          (template_app (template_hole 1, template_var 4),
                           template_hole 0)),
                       template_var 4))),
                 template_app
                  (template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_var 2),
                         template_var 1)),
                     template_var 0),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_app
                                (template_hole 12, template_var 1),
                               template_var 2)),
                           template_app
                            (template_app (template_hole 9, template_var 2),
                             template_var 0))),
                       template_app
                        (template_app (template_hole 1, template_var 2),
                         template_hole 0)),
                     template_var 2))))
             )))),
    ("Jordan_Normal_Form_Existence.identify_blocks_main_iff",
     "[| ?k <= ?k'; ?k' ~= ?k --> 0 < ?k --> ?A $$ (?k - 1, ?k) ~= (1::?'b);
         ?k' < ?n |]
      ==> set (??.Jordan_Normal_Form_Existence.identify_blocks_main ?A ?k
                ?list) =
          set ?list Un
          {(i, j) |i j.
           i <= j &
           j < ?k &
           (ALL l>=i. l < j --> ?A $$ (l, Suc l) = (1::?'b)) &
           (Suc j ~= ?k' --> ?A $$ (j, Suc j) ~= (1::?'b)) &
           (0 < i --> ?A $$ (i - 1, i) ~= (1::?'b))}",
     template_implication
      ([template_inequation (less_equals, template_var 4, template_var 3),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_hole 19,
                  template_app
                   (template_app (template_hole 18, template_var 3),
                    template_var 4))),
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 17, template_hole 16),
                    template_var 4)),
                template_app
                 (template_hole 19,
                  template_app
                   (template_app
                     (template_hole 15,
                      template_app
                       (template_app (template_hole 14, template_var 2),
                        template_app
                         (template_app
                           (template_hole 13,
                            template_app
                             (template_app
                               (template_hole 12, template_var 4),
                              template_hole 11)),
                          template_var 4))),
                    template_hole 10))))
            ),
        template_inequation (less_than, template_var 3, template_var 1)],
       template_equation
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_app (template_hole 7, template_var 2),
               template_var 4),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 8, template_var 0)),
           template_app (template_hole 5, t_empty))))),
    ("Jordan_Normal_Form_Existence.step_3_c_inner_result",
     "[| ??.Jordan_Normal_Form_Existence.inv_upto ?n
          ??.Jordan_Normal_Form_Existence.jb ?A ?k;
         ??.Jordan_Normal_Form_Existence.inv_from ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A ?k;
         ??.Jordan_Normal_Form_Existence.inv_at ?n
          ??.Jordan_Normal_Form_Existence.one_zero ?A ?k;
         ??.Jordan_Normal_Form_Existence.ev_block ?n ?A; ?k < ?n;
         ?A : carrier_mat ?n ?n;
         (?lb, ?l)
         : set (??.Jordan_Normal_Form_Existence.identify_blocks ?A ?k);
         (?i_begin, ?i_end)
         : set (??.Jordan_Normal_Form_Existence.identify_blocks ?A ?k);
         ?i_end ~= ?l; ?i_end - ?i_begin <= ?l - ?lb;
         ?A $$ (?l, ?k) ~= (0::?'a) |]
      ==> ??.Jordan_Normal_Form_Existence.step_3_c_inner_loop
           (?A $$ (?i_end, ?k) / ?A $$ (?l, ?k)) ?l ?i_end
           (Suc ?i_end - ?i_begin) ?A =
          mat ?n ?n
           (%(i, j).
               if (i, j) = (?i_end, ?k) then 0::?'a
               else if ?i_begin <= i & i <= ?i_end & ?k < j
                    then ?A $$ (i, j) -
                         ?A $$ (?i_end, ?k) / ?A $$ (?l, ?k) *
                         ?A $$ (?l + i - ?i_end, j)
                    else ?A $$ (i, j))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 32, template_var 6),
                  template_hole 31),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 30, template_var 6),
                  template_hole 29),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 28, template_var 6),
                  template_hole 27),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 26, template_var 6),
              template_var 5)
            ),
        template_inequation (less_than, template_var 4, template_var 6),
        template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 5),
              template_app
               (template_app (template_hole 23, template_var 6),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_var 5),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_var 1),
                  template_var 0)),
              template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_var 5),
                  template_var 4)))
            ),
        template_negation
         (template_equation (template_var 0, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 15, template_var 0),
            template_var 1),
          template_app
           (template_app (template_hole 15, template_var 2),
            template_var 3)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_app
                 (template_app (template_hole 21, template_var 2),
                  template_var 4)),
              template_hole 12)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 13, template_var 5),
                         template_app
                          (template_app (template_hole 21, template_var 0),
                           template_var 4))),
                     template_app
                      (template_app (template_hole 13, template_var 5),
                       template_app
                        (template_app (template_hole 21, template_var 2),
                         template_var 4)))),
                 template_var 2),
               template_var 0),
             template_app
              (template_app
                (template_hole 15,
                 template_app (template_hole 8, template_var 0)),
               template_var 1)),
           template_var 5),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 6),
             template_var 6),
           template_app (template_hole 6, t_empty))))),
    ("Jordan_Normal_Form_Existence.step_3_c_inv",
     "[| ?A : carrier_mat ?n ?n; ?k < ?n;
         (?lb, ?l)
         : set (??.Jordan_Normal_Form_Existence.identify_blocks ?A ?k);
         ??.Jordan_Normal_Form_Existence.inv_upto ?n
          ??.Jordan_Normal_Form_Existence.jb ?A ?k;
         ??.Jordan_Normal_Form_Existence.inv_from ?n
          ??.Jordan_Normal_Form_Existence.uppert ?A ?k;
         ??.Jordan_Normal_Form_Existence.inv_at ?n
          ??.Jordan_Normal_Form_Existence.one_zero ?A ?k;
         ??.Jordan_Normal_Form_Existence.ev_block ?n ?A;
         set ?bs
         <= set (??.Jordan_Normal_Form_Existence.identify_blocks ?A ?k);
         !!be. [| be ~: snd ` set ?bs; be ~: {?l, ?k}; be < ?n |]
               ==> ?A $$ (be, ?k) = (0::?'a);
         !!bb be. (bb, be) : set ?bs ==> be - bb <= ?l - ?lb;
         ?x = ?A $$ (?l, ?k); ?x ~= (0::?'a) |]
      ==> ??.Jordan_Normal_Form_Existence.inv_all ?n
           ??.Jordan_Normal_Form_Existence.uppert
           (??.Jordan_Normal_Form_Existence.step_3_c ?x ?l ?k ?bs ?A) &
          ??.Jordan_Normal_Form_Existence.same_diag ?n ?A
           (??.Jordan_Normal_Form_Existence.step_3_c ?x ?l ?k ?bs ?A) &
          ??.Jordan_Normal_Form_Existence.same_upto ?n ?k ?A
           (??.Jordan_Normal_Form_Existence.step_3_c ?x ?l ?k ?bs ?A) &
          ??.Jordan_Normal_Form_Existence.inv_at ?n
           (??.Jordan_Normal_Form_Existence.single_non_zero ?l ?k ?x)
           (??.Jordan_Normal_Form_Existence.step_3_c ?x ?l ?k ?bs ?A) ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 32, template_var 6),
              template_app
               (template_app (template_hole 31, template_var 5),
                template_var 5))
            ),
        template_inequation (less_than, template_var 4, template_var 5),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app
                 (template_app (template_hole 28, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 27,
                template_app
                 (template_app (template_hole 26, template_var 6),
                  template_var 4)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 25, template_var 5),
                  template_hole 24),
                template_var 6),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 23, template_var 5),
                  template_hole 22),
                template_var 6),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 21, template_var 5),
                  template_hole 20),
                template_var 6),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 19, template_var 5),
              template_var 6)
            ),
        template_inequation
         (less_equals, template_app (template_hole 27, template_var 1),
          template_app
           (template_hole 27,
            template_app
             (template_app (template_hole 26, template_var 6),
              template_var 4))),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 9, template_var 6),
            template_app
             (template_app (template_hole 28, template_var 2),
              template_var 4))),
        template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app (template_hole 4, template_var 5),
                   template_hole 22),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 0),
                         template_var 2),
                       template_var 4),
                     template_var 1),
                   template_var 6))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 6),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 3, template_var 0),
                           template_var 2),
                         template_var 4),
                       template_var 1),
                     template_var 6))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 4),
                       template_var 6),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 3, template_var 0),
                             template_var 2),
                           template_var 4),
                         template_var 1),
                       template_var 6))),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 21, template_var 5),
                       template_app
                        (template_app
                          (template_app (template_hole 0, template_var 2),
                           template_var 4),
                         template_var 0)),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_app (template_hole 3, template_var 0),
                             template_var 2),
                           template_var 4),
                         template_var 1),
                       template_var 6)),
                   template_var 4))))
           )))]:
   (string * thm * template) list
### theory "Draft.Jordan_Normal_Form_ExistenceTemplates"
### 0.776s elapsed time, 0.999s cpu time, 0.181s GC time
val it = (): unit
