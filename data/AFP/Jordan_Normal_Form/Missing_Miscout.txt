Loading theory "Draft.Missing_Misc" (required by "Draft.Missing_MiscTemplates")
Loading theory "Draft.Templates" (required by "Draft.Missing_MiscTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.066s elapsed time, 0.159s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Missing_MiscTemplates")
### theory "Draft.Missing_Misc"
### 0.095s elapsed time, 0.216s cpu time, 0.000s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.470s elapsed time, 0.532s cpu time, 0.053s GC time
Loading theory "Draft.Missing_MiscTemplates"
val templateLemmas =
   [("Missing_Misc.signof_pm_one",
     "of_int (sign ?p) : {1::?'a, - (1::?'a)}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0))),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 1, template_hole 2)),
               template_hole 0)))
         )),
    ("Missing_Misc.inj_on_finite",
     "inj_on ?f ?A ==> finite (?f ` ?A) = finite ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Missing_Misc.permutes_less",
     "?p permutes {0..<?n} ==> inv ?p (?p ?i) = ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_app (template_var 2, template_var 0)),
         template_var 0))),
    ("Missing_Misc.permutes_less",
     "?p permutes {0..<?n} ==> ?p (inv ?p ?i) = ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_var 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2),
             template_var 0)),
         template_var 0))),
    ("Missing_Misc.permutes_others",
     "[| ?p permutes ?S; ?x ~: ?S |] ==> ?p ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 1, template_var 0),
                  template_var 1)
                )
            )],
       template_equation
        (template_app (template_var 2, template_var 0), template_var 0))),
    ("Missing_Misc.permutes_less",
     "[| ?p permutes {0..<?n}; ?i < ?n |] ==> ?p ?i < ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1))
            ),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_inequation
        (less_than, template_app (template_var 2, template_var 0),
         template_var 1))),
    ("Missing_Misc.signof_inv",
     "[| finite ?S; ?p permutes ?S |]
      ==> of_int (sign (inv ?p)) = of_int (sign ?p)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))),
         template_app
          (template_hole 3,
           template_app (template_hole 2, template_var 0))))),
    ("Missing_Misc.permutes_less",
     "[| ?p permutes {0..<?n}; ?i < ?n |] ==> inv ?p ?i < ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_var 1))
            ),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("Missing_Misc.permutes_sum",
     "?p permutes ?S ==>
      (SUM s:?S. ?f (?p s) s) = (SUM s:?S. ?f s (inv ?p s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty), template_var 1),
         template_app
          (template_app (template_hole 2, t_empty), template_var 1)))),
    ("Missing_Misc.permutes_prod",
     "?p permutes ?S ==>
      (PROD s:?S. ?f (?p s) s) = (PROD s:?S. ?f s (inv ?p s))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty), template_var 1),
         template_app
          (template_app (template_hole 2, t_empty), template_var 1)))),
    ("Missing_Misc.signof_compose",
     "[| ?p permutes {0..<?n}; ?q permutes {0..<?m} |]
      ==> of_int (sign (?p o ?q)) = of_int (sign ?p) * of_int (sign ?q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 3))),
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)))))),
    ("Missing_Misc.finite_bounded_functions",
     "[| finite ?S; finite ?T |]
      ==> finite {f. (ALL i:?T. f i : ?S) & (ALL i. i ~: ?T --> f i = i)}",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 1)),
        template_predicate
         (template_app (template_hole 9, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 8, template_app (template_hole 7, t_empty))
           ))),
    ("Missing_Misc.finite_bounded_functions'",
     "[| finite ?S; finite ?T |]
      ==> finite {f. (ALL i:?T. f i : ?S) & (ALL i. i ~: ?T --> f i = ?j)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_predicate
         (template_app (template_hole 10, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 9, template_app (template_hole 8, t_empty))
           ))),
    ("Missing_Misc.inj_on_nat_permutes",
     "[| inj_on ?f ?S; ?f : ?S \<rightarrow> ?S; finite ?S;
         !!i. i ~: ?S ==> ?f i = i |]
      ==> ?f permutes ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 0), t_empty))
            ),
        template_predicate (template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Missing_Misc.permutes_memb",
     "[| !!a. a : ?A ==> ?a_to_b a : ?B; !!b. b : ?B ==> ?b_to_a b : ?A;
         !!a. a : ?A ==> ?b_to_a (?a_to_b a) = a;
         !!b. b : ?B ==> ?a_to_b (?b_to_a b) = b; ?p permutes ?B; ?a : ?A |]
      ==> ?a : ?A",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 0), template_var 5)
           ))),
    ("Missing_Misc.permutes_memb",
     "[| !!a. a : ?A ==> ?a_to_b a : ?B; !!b. b : ?B ==> ?b_to_a b : ?A;
         !!a. a : ?A ==> ?b_to_a (?a_to_b a) = a;
         !!b. b : ?B ==> ?a_to_b (?b_to_a b) = b; ?p permutes ?B; ?a : ?A |]
      ==> ?a_to_b ?a : ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_var 4, template_var 0)),
             template_var 3)
           ))),
    ("Missing_Misc.permutes_memb",
     "[| !!a. a : ?A ==> ?a_to_b a : ?B; !!b. b : ?B ==> ?b_to_a b : ?A;
         !!a. a : ?A ==> ?b_to_a (?a_to_b a) = a;
         !!b. b : ?B ==> ?a_to_b (?b_to_a b) = b; ?p permutes ?B; ?a : ?A |]
      ==> ?p (?a_to_b ?a) : ?B",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_var 1,
                 template_app (template_var 4, template_var 0))),
             template_var 3)
           ))),
    ("Missing_Misc.permutes_memb",
     "[| !!a. a : ?A ==> ?a_to_b a : ?B; !!b. b : ?B ==> ?b_to_a b : ?A;
         !!a. a : ?A ==> ?b_to_a (?a_to_b a) = a;
         !!b. b : ?B ==> ?a_to_b (?b_to_a b) = b; ?p permutes ?B; ?a : ?A |]
      ==> ?b_to_a (?p (?a_to_b ?a)) : ?A",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_var 2,
                 template_app
                  (template_var 1,
                   template_app (template_var 4, template_var 0)))),
             template_var 5)
           ))),
    ("Missing_Misc.permutes_memb",
     "[| !!a. a : ?A ==> ?a_to_b a : ?B; !!b. b : ?B ==> ?b_to_a b : ?A;
         !!a. a : ?A ==> ?b_to_a (?a_to_b a) = a;
         !!b. b : ?B ==> ?a_to_b (?b_to_a b) = b; ?p permutes ?B; ?a : ?A |]
      ==> inv ?p (?a_to_b ?a) : ?B",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 1),
                 template_app (template_var 4, template_var 0))),
             template_var 3)
           ))),
    ("Missing_Misc.permutes_memb",
     "[| !!a. a : ?A ==> ?a_to_b a : ?B; !!b. b : ?B ==> ?b_to_a b : ?A;
         !!a. a : ?A ==> ?b_to_a (?a_to_b a) = a;
         !!b. b : ?B ==> ?a_to_b (?b_to_a b) = b; ?p permutes ?B; ?a : ?A |]
      ==> ?b_to_a (inv ?p (?a_to_b ?a)) : ?A",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_var 5)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_var 2,
                 template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 1),
                   template_app (template_var 4, template_var 0)))),
             template_var 5)
           ))),
    ("Missing_Misc.permutes_bij'",
     "[| !!a. a : ?A ==> ?a_to_b a : ?B; !!b. b : ?B ==> ?b_to_a b : ?A;
         !!a. a : ?A ==> ?b_to_a (?a_to_b a) = a;
         !!b. b : ?B ==> ?a_to_b (?b_to_a b) = b |]
      ==> {p. p permutes ?A} =
          (%p a. if a : ?A then ?b_to_a (p (?a_to_b a)) else a) `
          {p. p permutes ?B}",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_equation
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 1, t_empty))))),
    ("Missing_Misc.permutes_bij_main",
     "[| !!a. a : ?A ==> ?a_to_b a : ?B; !!b. b : ?B ==> ?b_to_a b : ?A;
         !!a. a : ?A ==> ?b_to_a (?a_to_b a) = a;
         !!b. b : ?B ==> ?a_to_b (?b_to_a b) = b |]
      ==> (%p a. if a : ?A then ?b_to_a (p (?a_to_b a)) else a) `
          {p. p permutes ?B}
          <= {p. p permutes ?A}",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 5, t_empty),
           template_app (template_hole 3, t_empty)),
         template_app (template_hole 1, t_empty))))]:
   (string * thm * template) list
### theory "Draft.Missing_MiscTemplates"
### 0.424s elapsed time, 0.584s cpu time, 0.088s GC time
val it = (): unit
