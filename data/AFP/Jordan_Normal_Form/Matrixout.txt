Loading theory "Draft.Conjugate" (required by "Draft.MatrixTemplates" via "Draft.Matrix")
Loading theory "Draft.Missing_Misc" (required by "Draft.MatrixTemplates" via "Draft.Matrix" via "Draft.Missing_Ring")
Loading theory "Draft.Templates" (required by "Draft.MatrixTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.069s elapsed time, 0.238s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.MatrixTemplates")
class conjugate = type +
  fixes conjugate :: "'a => 'a"
  assumes "conjugate_id": "!!a. conjugate (conjugate a) = a"
    and
    "conjugate_cancel_iff": "!!a b. (conjugate a = conjugate b) = (a = b)"
### theory "Draft.Missing_Misc"
### 0.136s elapsed time, 0.402s cpu time, 0.043s GC time
Loading theory "Draft.Missing_Ring" (required by "Draft.MatrixTemplates" via "Draft.Matrix")
class conjugatable_ring = conjugate + ring +
  assumes
    "conjugate_dist_mul":
      "!!a b. conjugate (a * b) = conjugate a * conjugate b"
    and
    "conjugate_dist_add":
      "!!a b. conjugate (a + b) = conjugate a + conjugate b"
    and "conjugate_neg": "!!a. conjugate (- a) = - conjugate a"
    and "conjugate_zero": "conjugate (0::'a) = (0::'a)"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.574s elapsed time, 1.625s cpu time, 0.163s GC time
class ordered_semiring_strict = comm_monoid_add +
  ordered_cancel_ab_semigroup_add + semiring +
  assumes
    "mult_strict_left_mono":
      "!!a b c. [| a < b; (0::'a) < c |] ==> c * a < c * b"
  assumes
    "mult_strict_right_mono":
      "!!a b c. [| a < b; (0::'a) < c |] ==> a * c < b * c"
class conjugatable_ordered_ring = conjugatable_ring +
  ordered_comm_monoid_add +
  assumes "conjugate_square_positive": "!!a. (0::'a) <= a * conjugate a"
class ordered_idom = ordered_semiring_strict + idom +
  assumes "zero_less_one": "(0::'a) < (1::'a)"
instantiation
  complex :: conjugatable_ordered_field
  conjugate_complex == conjugate :: complex => complex
instantiation
  real :: conjugatable_ordered_field
  conjugate_real == conjugate :: real => real
instantiation
  rat :: conjugatable_ordered_field
  conjugate_rat == conjugate :: rat => rat
instantiation
  int :: conjugatable_ordered_ring
  conjugate_int == conjugate :: int => int
### theory "Draft.Conjugate"
### 2.610s elapsed time, 5.818s cpu time, 0.762s GC time
locale Group.comm_monoid
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "Group.comm_monoid G"
locale csemiring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "csemiring R"
locale cring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "cring R"
locale Group.comm_monoid
  fixes G :: "('a, 'b) monoid_scheme"  (structure)
  assumes "Group.comm_monoid G"
locale cring
  fixes R :: "('a, 'b) ring_scheme"  (structure)
  assumes "cring R"
### theory "Draft.Missing_Ring"
### 2.947s elapsed time, 5.893s cpu time, 0.753s GC time
Loading theory "Draft.Matrix" (required by "Draft.MatrixTemplates")
instantiation
  vec :: (plus) plus
  plus_vec == plus :: 'a vec => 'a vec => 'a vec
instantiation
  vec :: (minus) minus
  minus_vec == minus :: 'a vec => 'a vec => 'a vec
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
instantiation
  vec :: (uminus) uminus
  uminus_vec == uminus :: 'a vec => 'a vec
instantiation
  vec :: (ord) ord
  less_eq_vec == less_eq :: 'a vec => 'a vec => bool
  less_vec == less :: 'a vec => 'a vec => bool
instantiation
  vec :: (preorder) preorder
instantiation
  vec :: (order) order
Found termination order: "{}"
instantiation
  mat :: (ord) ord
  less_eq_mat == less_eq :: 'a mat => 'a mat => bool
  less_mat == less :: 'a mat => 'a mat => bool
instantiation
  mat :: (preorder) preorder
instantiation
  mat :: (order) order
instantiation
  mat :: (plus) plus
  plus_mat == plus :: 'a mat => 'a mat => 'a mat
instantiation
  mat :: (uminus) uminus
  uminus_mat == uminus :: 'a mat => 'a mat
instantiation
  mat :: (minus) minus
  minus_mat == minus :: 'a mat => 'a mat => 'a mat
instantiation
  mat :: (semiring_0) times
  times_mat == times :: 'a mat => 'a mat => 'a mat
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "length <*mlex*> {}"
locale semiring_hom
  fixes hom :: "'a => 'b"
  assumes "semiring_hom hom"
instantiation
  vec :: (conjugate) conjugate
  conjugate_vec == conjugate :: 'a vec => 'a vec
### theory "Draft.Matrix"
### 2.819s elapsed time, 3.383s cpu time, 0.886s GC time
Loading theory "Draft.MatrixTemplates"
val templateLemmas =
   [("Matrix.mk_diagonal_diagonal", "diagonal_mat (mk_diagonal ?as)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Matrix.upper_triangular_one", "upper_triangular (1\<^sub>m ?n)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Matrix.comm_group_vec", "comm_group (monoid_vec TYPE(?'a) ?n)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("Matrix.comm_monoid_vec",
     "Group.comm_monoid (monoid_vec TYPE(?'a) ?n)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))
         )),
    ("Matrix.upper_triangular_zero", "upper_triangular (0\<^sub>m ?n ?n)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))
         )),
    ("Matrix.comm_group_mat", "comm_group (monoid_mat TYPE(?'a) ?nr ?nc)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 0))
         )),
    ("Matrix.comm_monoid_mat",
     "Group.comm_monoid (monoid_mat TYPE(?'a) ?nr ?nc)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 0))
         )),
    ("Matrix.index_one_mat", "dim_col (1\<^sub>m ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Matrix.mat_of_row_dim", "dim_row (mat_of_row ?y) = 1",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Matrix.index_one_mat", "dim_row (1\<^sub>m ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Matrix.index_zero_vec", "dim_vec (0\<^sub>v ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Matrix.list_vec", "list_of_vec (vec_of_list ?xs) = ?xs",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Matrix.transpose_transpose", "?A\<^sup>T\<^sup>T = ?A",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Matrix.uminus_uminus_mat", "- (- ?A) = ?A",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Matrix.vec_list", "vec_of_list (list_of_vec ?v) = ?v",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Matrix.one_smult_vec", "(1::?'a) \<cdot>\<^sub>v ?v = ?v",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Matrix.uminus_uminus_vec", "- (- ?v) = ?v",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Matrix.scalar_vec_one", "(1::?'a) \<cdot>\<^sub>v ?v = ?v",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Matrix.abelian_group_mat",
     "abelian_group (module_mat TYPE(?'a) ?nr ?nc)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 0))
         )),
    ("Matrix.ring_mat", "ring (ring_mat TYPE(?'a) ?n ?b)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 0))
         )),
    ("Matrix.semiring_mat", "semiring (ring_mat TYPE(?'a) ?n ?b)",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_var 0))
         )),
    ("Matrix.carrier_vec_dim_vec", "?v : carrier_vec (dim_vec ?v)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Matrix.zero_carrier_vec", "0\<^sub>v ?n : carrier_vec ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Matrix.sum_mat_0", "sum_mat (0\<^sub>m ?nr ?nc) = (0::?'a)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Matrix.module_vec_simps",
     "(\<odot>\<^bsub>module_vec ?ty ?n\<^esub>) = (\<cdot>\<^sub>v)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Matrix.module_vec_simps",
     "(\<oplus>\<^bsub>module_vec ?ty ?n\<^esub>) = (+)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Matrix.monoid_vec_simps",
     "(\<otimes>\<^bsub>monoid_vec ?ty ?n\<^esub>) = (+)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Matrix.mat_of_row_dim", "dim_col (mat_of_row ?y) = dim_vec ?y",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.index_transpose_mat", "dim_col ?A\<^sup>T = dim_row ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.mk_diagonal_dim", "dim_col (mk_diagonal ?as) = length ?as",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.index_uminus_mat", "dim_col (- ?A) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Matrix.index_transpose_mat", "dim_row ?A\<^sup>T = dim_col ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.mk_diagonal_dim", "dim_row (mk_diagonal ?as) = length ?as",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.index_uminus_mat", "dim_row (- ?A) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Matrix.dim_vec_of_list", "dim_vec (vec_of_list ?as) = length ?as",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.index_uminus_vec", "dim_vec (- ?v) = dim_vec ?v",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Matrix.dim_vec_conjugate", "dim_vec (conjugate ?v) = dim_vec ?v",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Matrix.length_list_of_vec", "length (list_of_vec ?v) = dim_vec ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.cols_length", "length (cols ?A) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.length_rows", "length (rows ?A) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.mat_of_rows_carrier", "dim_col (mat_of_rows ?n ?vs) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Matrix.index_zero_mat", "dim_col (0\<^sub>m ?nr ?nc) = ?nc",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Matrix.mat_of_cols_carrier", "dim_row (mat_of_cols ?n ?vs) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Matrix.index_zero_mat", "dim_row (0\<^sub>m ?nr ?nc) = ?nr",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Matrix.dim_vec", "dim_vec (vec ?n ?f) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Matrix.dim_vec_first", "dim_vec (vec_first ?v ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Matrix.dim_vec_last", "dim_vec (vec_last ?v ?n) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("Matrix.index_unit_vec", "dim_vec (unit_vec ?n ?i) = ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Matrix.set_list_of_vec", "set (list_of_vec ?v) = set\<^sub>v ?v",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.cols_transpose", "cols ?A\<^sup>T = rows ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.rows_transpose", "rows ?A\<^sup>T = cols ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.unit_vecs_first", "unit_vecs ?n = unit_vecs_first ?n ?n",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Matrix.unit_vecs_last", "unit_vecs ?n = unit_vecs_last ?n ?n",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 0))),
    ("Matrix.transpose_one", "(1\<^sub>m ?n)\<^sup>T = 1\<^sub>m ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.diag_block_mat_singleton", "diag_block_mat [?A] = ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)),
       template_var 0)),
    ("Matrix.row_mat_of_row", "row (mat_of_row ?y) 0 = ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0),
       template_var 0)),
    ("Matrix.uminus_zero_vec", "- 0\<^sub>v ?n = 0\<^sub>v ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.conjugate_zero_vec", "conjugate (0\<^sub>v ?n) = 0\<^sub>v ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.conjugate_square_ge_0_vec", "(0::?'a) <= ?v \<bullet>c ?v",
     template_inequation
      (less_equals, template_hole 2,
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix.unit_vecs_carrier", "set (unit_vecs ?n) <= carrier_vec ?n",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.one_carrier_mat", "1\<^sub>m ?n : carrier_mat ?n ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 0))
         )),
    ("Matrix.vec_carrier", "vec ?n ?f : carrier_vec ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 1))
         )),
    ("Matrix.vec_first_carrier", "vec_first ?v ?n : carrier_vec ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Matrix.vec_last_carrier", "vec_last ?v ?n : carrier_vec ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Matrix.unit_vec_carrier", "unit_vec ?n ?i : carrier_vec ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app (template_hole 0, template_var 1))
         )),
    ("Matrix.vec_index_vCons_0", "vCons ?a ?v $ 0 = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0),
       template_var 1)),
    ("Matrix.sprod_vec_0", "?v \<bullet> vec 0 ?f = (0::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_hole 0)),
    ("Matrix.module_mat_simps",
     "(\<odot>\<^bsub>module_mat ?ty ?nr ?nc\<^esub>) = (\<cdot>\<^sub>m)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Matrix.ring_mat_simps",
     "(\<otimes>\<^bsub>ring_mat ?ty ?n ?b\<^esub>) = (*)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Matrix.module_mat_simps",
     "(\<otimes>\<^bsub>module_mat ?ty ?nr ?nc\<^esub>) = (*)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Matrix.ring_mat_simps",
     "(\<oplus>\<^bsub>ring_mat ?ty ?n ?b\<^esub>) = (+)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Matrix.module_mat_simps",
     "(\<oplus>\<^bsub>module_mat ?ty ?nr ?nc\<^esub>) = (+)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_hole 0)),
    ("Matrix.mat_of_cols_carrier",
     "dim_col (mat_of_cols ?n ?vs) = length ?vs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.index_add_mat", "dim_col (?A + ?B) = dim_col ?B",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Matrix.index_minus_mat", "dim_col (?A - ?B) = dim_col ?B",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Matrix.index_smult_mat",
     "dim_col (?a \<cdot>\<^sub>m ?A) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Matrix.index_mult_mat", "dim_col (?A * ?B) = dim_col ?B",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Matrix.index_map_mat", "dim_col (map_mat ?f ?A) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.mat_of_rows_carrier",
     "dim_row (mat_of_rows ?n ?vs) = length ?vs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.index_add_mat", "dim_row (?A + ?B) = dim_row ?B",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Matrix.index_minus_mat", "dim_row (?A - ?B) = dim_row ?B",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Matrix.index_smult_mat",
     "dim_row (?a \<cdot>\<^sub>m ?A) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Matrix.index_mult_mat", "dim_row (?A * ?B) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Matrix.pow_mat_dim", "dim_row (?A ^\<^sub>m ?k) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 1))),
    ("Matrix.index_map_mat", "dim_row (map_mat ?f ?A) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.dim_col", "dim_vec (col ?A ?i) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Matrix.index_row", "dim_vec (row ?A ?i) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Matrix.index_add_vec",
     "dim_vec (?v\<^sub>1 + ?v\<^sub>2) = dim_vec ?v\<^sub>2",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Matrix.index_minus_vec",
     "dim_vec (?v\<^sub>1 - ?v\<^sub>2) = dim_vec ?v\<^sub>2",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Matrix.index_smult_vec",
     "dim_vec (?a \<cdot>\<^sub>v ?v) = dim_vec ?v",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Matrix.dim_mult_mat_vec", "dim_vec (?A *\<^sub>v ?v) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Matrix.index_map_vec", "dim_vec (map_vec ?f ?v) = dim_vec ?v",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.dim_col_mat", "dim_col (mat ?nr ?nc ?f) = ?nc",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 1)),
    ("Matrix.dim_col_mat", "dim_col (mat\<^sub>r ?nr ?nc ?g) = ?nc",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 1)),
    ("Matrix.dim_row_mat", "dim_row (mat ?nr ?nc ?f) = ?nr",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 2)),
    ("Matrix.dim_row_mat", "dim_row (mat\<^sub>r ?nr ?nc ?g) = ?nr",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_var 2)),
    ("Matrix.module_vec_simps",
     "carrier (module_vec ?ty ?n) = carrier_vec ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.monoid_vec_simps",
     "carrier (monoid_vec ?ty ?n) = carrier_vec ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.diag_mat_one",
     "diag_mat (1\<^sub>m ?n) = replicate ?n (1::?'a)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Matrix.list_of_vec_0",
     "list_of_vec (0\<^sub>v ?n) = replicate ?n (0::?'a)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Matrix.mat_of_cols_cols", "mat_of_cols (dim_row ?A) (cols ?A) = ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Matrix.mat_of_rows_rows", "mat_of_rows (dim_col ?A) (rows ?A) = ?A",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Matrix.mat_diag_one", "mat_diag ?n (%x. 1::?'a) = 1\<^sub>m ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.module_vec_simps",
     "\<zero>\<^bsub>module_vec ?ty ?n\<^esub> = 0\<^sub>v ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.monoid_vec_simps",
     "\<one>\<^bsub>monoid_vec ?ty ?n\<^esub> = 0\<^sub>v ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Matrix.uminus_conjugate_vec", "- conjugate ?v = conjugate (- ?v)",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("Matrix.cols_dim", "set (cols ?A) <= carrier_vec (dim_row ?A)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Matrix.rows_carrier", "set (rows ?A) <= carrier_vec (dim_col ?A)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Matrix.unit_vecs_last_carrier",
     "set (unit_vecs_last ?n ?i) <= carrier_vec ?n",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Matrix.carrier_mat_triv",
     "?m : carrier_mat (dim_row ?m) (dim_col ?m)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Matrix.mat_diag_dim", "mat_diag ?n ?f : carrier_mat ?n ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 1))
         )),
    ("Matrix.zero_carrier_mat", "0\<^sub>m ?nr ?nc : carrier_mat ?nr ?nc",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Matrix.col_dim", "col ?A ?i : carrier_vec (dim_row ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))
         )),
    ("Matrix.row_carrier", "row ?A ?i : carrier_vec (dim_col ?A)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)))
         )),
    ("Matrix.list_of_vec_index", "list_of_vec ?v ! ?j = ?v $ ?j",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Matrix.vec_of_list_index", "vec_of_list ?xs $ ?j = ?xs ! ?j",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Matrix.dim_diag_block_mat",
     "dim_col (diag_block_mat ?As) = sum_list (map dim_col ?As)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("Matrix.dim_diag_block_mat",
     "dim_row (diag_block_mat ?As) = sum_list (map dim_row ?As)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("Matrix.dim_vec_vCons", "dim_vec (vCons ?a ?v) = Suc (dim_vec ?v)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Matrix.dim_update_mat",
     "dim_col (?A |\<^sub>m ?ij \<mapsto> ?a) = dim_col ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Matrix.dim_update_mat",
     "dim_row (?A |\<^sub>m ?ij \<mapsto> ?a) = dim_row ?A",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Matrix.dim_update_vec",
     "dim_vec (?v |\<^sub>v ?i \<mapsto> ?a) = dim_vec ?v",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("Matrix.diag_mat_zero",
     "diag_mat (0\<^sub>m ?n ?n) = replicate ?n (0::?'a)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Matrix.transpose_mat_of_cols",
     "(mat_of_cols ?n ?vs)\<^sup>T = mat_of_rows ?n ?vs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Matrix.transpose_mat_of_rows",
     "(mat_of_rows ?n ?vs)\<^sup>T = mat_of_cols ?n ?vs",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Matrix.zero_transpose_mat",
     "(0\<^sub>m ?n ?m)\<^sup>T = 0\<^sub>m ?m ?n",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Matrix.ring_mat_simps",
     "\<one>\<^bsub>ring_mat ?ty ?n ?b\<^esub> = 1\<^sub>m ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Matrix.module_mat_simps",
     "\<one>\<^bsub>module_mat ?ty ?nr ?nc\<^esub> = 1\<^sub>m ?nr",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 1))),
    ("Matrix.append_vec_vNil", "vNil @\<^sub>v ?v = ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app (template_hole 1, template_hole 0))),
         template_var 0),
       template_var 0)),
    ("Matrix.zero_vec_Suc",
     "0\<^sub>v (Suc ?n) = vCons (0::?'a) (0\<^sub>v ?n)",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app (template_hole 3, template_var 0)))),
    ("Matrix.conjugate_vec_0", "conjugate (vec 0 ?f) = vec 0 ?f",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Matrix.finsum_vec_empty",
     "finsum_vec TYPE(?'a) ?n ?f {} = 0\<^sub>v ?n",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1),
           template_var 0),
         template_hole 1),
       template_app (template_hole 0, template_var 1))),
    ("Matrix.elements_0_mat",
     "elements_mat (0\<^sub>m ?nr ?nc) <= {0::?'a}",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_hole 0))),
    ("Matrix.mat_of_cols_carrier",
     "mat_of_cols ?n ?vs : carrier_mat ?n (length ?vs)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0)))
         )),
    ("Matrix.mat_of_rows_carrier",
     "mat_of_rows ?n ?vs : carrier_mat (length ?vs) ?n",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 1))
         )),
    ("Matrix.mat_carrier", "mat ?nr ?nc ?f : carrier_mat ?nr ?nc",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))
         )),
    ("Matrix.mat_row_carrierI",
     "mat\<^sub>r ?nr ?nc ?r : carrier_mat ?nr ?nc",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))
         )),
    ("Matrix.similar_mat_sym", "similar_mat ?A ?B ==> similar_mat ?B ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Matrix.ring_mat_simps",
     "carrier (ring_mat ?ty ?n ?b) = carrier_mat ?n ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 1))),
    ("Matrix.module_mat_simps",
     "carrier (module_mat ?ty ?nr ?nc) = carrier_mat ?nr ?nc",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Matrix.vec_of_dim_0", "(dim_vec ?v = 0) = (?v = 0\<^sub>v 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation
        (template_var 0, template_app (template_hole 0, template_hole 2)))),
    ("Matrix.carrier_dim_vec", "(?v : carrier_vec ?n) = (dim_vec ?v = ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Matrix.transpose_mat_eq", "(?A\<^sup>T = ?B\<^sup>T) = (?A = ?B)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Matrix.uminus_eq_mat", "(- ?A = - ?B) = (?A = ?B)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Matrix.uminus_eq_vec", "(- ?v = - ?w) = (?v = ?w)",
     template_bimplication
      (template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Matrix.list_of_vec_vCons",
     "list_of_vec (vCons ?a ?v) = ?a # list_of_vec ?v",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Matrix.map_mat_transpose",
     "(map_mat ?f ?A)\<^sup>T = map_mat ?f ?A\<^sup>T",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix.smult_zero_mat",
     "?k \<cdot>\<^sub>m 0\<^sub>m ?nr ?nc = 0\<^sub>m ?nr ?nc",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Matrix.ring_mat_simps",
     "\<zero>\<^bsub>ring_mat ?ty ?n ?b\<^esub> = 0\<^sub>m ?n ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 1))),
    ("Matrix.module_mat_simps",
     "\<zero>\<^bsub>module_mat ?ty ?nr ?nc\<^esub> = 0\<^sub>m ?nr ?nc",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Matrix.vec_of_list_Cons",
     "vec_of_list (?a # ?as) = vCons ?a (vec_of_list ?as)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Matrix.vec_of_list_map",
     "vec_of_list (map ?f ?xs) = map_vec ?f (vec_of_list ?xs)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix.diag_block_mat_square",
     "Ball (set ?As) square_mat ==> square_mat (diag_block_mat ?As)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Matrix.vec_index_vCons_Suc", "vCons ?a ?v $ Suc ?n = ?v $ ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Matrix.index_append_vec",
     "dim_vec (?v @\<^sub>v ?w) = dim_vec ?v + dim_vec ?w",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Matrix.dim_component_mult",
     "dim_vec (component_mult ?v ?w) = min (dim_vec ?v) (dim_vec ?w)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Matrix.conjugate_zero_iff_vec",
     "(conjugate ?v = 0\<^sub>v ?n) = (?v = 0\<^sub>v ?n)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("Matrix.uminus_carrier_vec",
     "(- ?v : carrier_vec ?n) = (?v : carrier_vec ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix.vec_carrier_vec", "(vec ?n ?f : carrier_vec ?m) = (?n = ?m)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 2, template_var 0))),
    ("Matrix.list_of_vec_map",
     "list_of_vec ?xs = map (($) ?xs) [0..<dim_vec ?xs]",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Matrix.list_of_vec_append",
     "list_of_vec (?v @\<^sub>v ?w) = list_of_vec ?v @ list_of_vec ?w",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Matrix.list_of_vec_vec", "list_of_vec (vec ?n ?f) = map ?f [0..<?n]",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 0),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 1)))),
    ("Matrix.conjugate_vCons",
     "conjugate (vCons ?a ?v) = vCons (conjugate ?a) (conjugate ?v)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Matrix.conjugate_smult_vec",
     "conjugate (?k \<cdot>\<^sub>v ?v) =
      conjugate ?k \<cdot>\<^sub>v conjugate ?v",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Matrix.carrier_vecI", "dim_vec ?v = ?n ==> ?v : carrier_vec ?n",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1), template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Matrix.carrier_vecD", "?v : carrier_vec ?n ==> dim_vec ?v = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Matrix.similar_mat_refl",
     "?A : carrier_mat ?n ?n ==> similar_mat ?A ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 1)
           ))),
    ("Matrix.map_carrier_vec",
     "(map_vec ?h ?v : carrier_vec ?n) = (?v : carrier_vec ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix.smult_carrier_vec",
     "(?a \<cdot>\<^sub>v ?v : carrier_vec ?n) = (?v : carrier_vec ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix.append_vec_vCons",
     "vCons ?a ?v @\<^sub>v ?w = vCons ?a (?v @\<^sub>v ?w)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Matrix.map_vec", "map_vec ?f (vec ?n ?g) = vec ?n (?f o ?g)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Matrix.smult_smult_assoc",
     "?a \<cdot>\<^sub>v (?b \<cdot>\<^sub>v ?v) =
      ?a * ?b \<cdot>\<^sub>v ?v",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Matrix.index_zero_vec", "?i < ?n ==> 0\<^sub>v ?n $ ?i = (0::?'a)",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_hole 0))),
    ("Matrix.carrier_vec_conjugate",
     "?v : carrier_vec ?n ==> conjugate ?v : carrier_vec ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Matrix.carrier_matD", "?A : carrier_mat ?nr ?nc ==> dim_col ?A = ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 2), template_var 0))),
    ("Matrix.carrier_matD", "?A : carrier_mat ?nr ?nc ==> dim_row ?A = ?nr",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 0, template_var 2), template_var 1))),
    ("Matrix.index_mat_four_block",
     "dim_col (four_block_mat ?A ?B ?C ?D) = dim_col ?A + dim_col ?D",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 3)),
         template_app (template_hole 2, template_var 0)))),
    ("Matrix.index_mat_four_block",
     "dim_row (four_block_mat ?A ?B ?C ?D) = dim_row ?A + dim_row ?D",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 3)),
         template_app (template_hole 2, template_var 0)))),
    ("Matrix.transpose_carrier_mat",
     "(?A\<^sup>T : carrier_mat ?nc ?nr) = (?A : carrier_mat ?nr ?nc)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Matrix.uminus_carrier_iff_mat",
     "(- ?A : carrier_mat ?nr ?nc) = (?A : carrier_mat ?nr ?nc)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Matrix.vCons_carrier_vec",
     "(vCons ?a ?v : carrier_vec (Suc ?n)) = (?v : carrier_vec ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Matrix.similar_mat_smult",
     "similar_mat ?A ?B ==>
      similar_mat (?k \<cdot>\<^sub>m ?A) (?k \<cdot>\<^sub>m ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Matrix.unit_vec_nonzero",
     "?i < ?n ==> unit_vec ?n ?i ~= 0\<^sub>v ?n",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Matrix.index_unit_vec", "?i < ?n ==> unit_vec ?n ?i $ ?i = (1::?'b)",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 1),
         template_hole 0))),
    ("Matrix.right_mult_one_mat'",
     "dim_col ?A = ?n ==> ?A * 1\<^sub>m ?n = ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Matrix.left_mult_one_mat'",
     "dim_row ?A = ?n ==> 1\<^sub>m ?n * ?A = ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1), template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_var 1))),
    ("Matrix.mat_of_row_carrier",
     "?y : carrier_vec ?n ==> mat_of_row ?y : carrier_mat 1 ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Matrix.minus_cancel_vec",
     "?v : carrier_vec ?n ==> ?v - ?v = 0\<^sub>v ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix.minus_zero_vec",
     "?v : carrier_vec ?n ==> ?v - 0\<^sub>v ?n = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Matrix.scalar_prod_right_zero",
     "?v : carrier_vec ?n ==> ?v \<bullet> 0\<^sub>v ?n = (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Matrix.scalar_prod_left_zero",
     "?v : carrier_vec ?n ==> 0\<^sub>v ?n \<bullet> ?v = (0::?'a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_hole 0))),
    ("Matrix.one_mult_mat_vec",
     "?v : carrier_vec ?n ==> 1\<^sub>m ?n *\<^sub>v ?v = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_var 1))),
    ("Matrix.right_zero_vec",
     "?v : carrier_vec ?n ==> ?v + 0\<^sub>v ?n = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_var 1))),
    ("Matrix.left_zero_vec",
     "?v : carrier_vec ?n ==> 0\<^sub>v ?n + ?v = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_var 1))),
    ("Matrix.similar_mat_wit_sym",
     "similar_mat_wit ?A ?B ?P ?Q ==> similar_mat_wit ?B ?A ?Q ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 3),
               template_var 0),
             template_var 1)
           ))),
    ("Matrix.pow_mat_dim",
     "dim_col (?A ^\<^sub>m ?k) =
      (if ?k = 0 then dim_row ?A else dim_col ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 1)),
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 4, template_var 1))
           ))),
    ("Matrix.map_carrier_mat",
     "(map_mat ?f ?A : carrier_mat ?nr ?nc) = (?A : carrier_mat ?nr ?nc)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Matrix.diag_block_one_mat",
     "diag_block_mat (map (%A. 1\<^sub>m (dim_row A)) ?As) =
      1\<^sub>m (sum_list (map dim_row ?As))",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty), template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 2),
             template_var 0))))),
    ("Matrix.vec_Suc", "vec (Suc ?n) ?f = vCons (?f 0) (vec ?n (?f o Suc))",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_var 0, template_hole 1)),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_hole 3))))),
    ("Matrix.add_smult_distrib_vec",
     "(?a + ?b) \<cdot>\<^sub>v ?v =
      ?a \<cdot>\<^sub>v ?v + ?b \<cdot>\<^sub>v ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Matrix.elements_diag_block_mat",
     "elements_mat (diag_block_mat ?As)
      <= {0::?'a} Un \<Union> (set (map elements_mat ?As))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 8, template_app (template_hole 7, template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_hole 3)),
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_hole 8),
               template_var 0)))))),
    ("Matrix.index_vec", "?i < ?n ==> vec ?n ?f $ ?i = ?f ?i",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("Matrix.row_one", "?i < ?n ==> row (1\<^sub>m ?n) ?i = unit_vec ?n ?i",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Matrix.row_zero",
     "?i < ?nr ==> row (0\<^sub>m ?nr ?nc) ?i = 0\<^sub>v ?nc",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix.col_one", "?j < ?n ==> col (1\<^sub>m ?n) ?j = unit_vec ?n ?j",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Matrix.col_zero",
     "?j < ?nc ==> col (0\<^sub>m ?nr ?nc) ?j = 0\<^sub>v ?nr",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix.mat_of_row_carrier",
     "?y : carrier_vec ?n ==> mat_of_row ?y : carrier_mat (Suc 0) ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_hole 0)),
               template_var 0))
           ))),
    ("Matrix.zero_minus_vec",
     "?v : carrier_vec ?n ==> 0\<^sub>v ?n - ?v = - ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Matrix.uminus_r_inv_vec",
     "?v : carrier_vec ?n ==> ?v + - ?v = 0\<^sub>v ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix.uminus_l_inv_vec",
     "?v : carrier_vec ?n ==> - ?v + ?v = 0\<^sub>v ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Matrix.diag_mat_transpose",
     "dim_row ?A = dim_col ?A ==> diag_mat ?A\<^sup>T = diag_mat ?A",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 0),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_app (template_hole 1, template_var 0)))),
    ("Matrix.cols_mat_of_cols",
     "set ?vs <= carrier_vec ?n ==> cols (mat_of_cols ?n ?vs) = ?vs",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("Matrix.rows_mat_of_rows",
     "set ?vs <= carrier_vec ?n ==> rows (mat_of_rows ?n ?vs) = ?vs",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 1))),
    ("Matrix.uminus_carrier_mat",
     "?A : carrier_mat ?nr ?nc ==> - ?A : carrier_mat ?nr ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ))),
    ("Matrix.pow_mat_dim_square",
     "?A : carrier_mat ?n ?n ==> dim_col (?A ^\<^sub>m ?k) = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Matrix.pow_mat_dim_square",
     "?A : carrier_mat ?n ?n ==> dim_row (?A ^\<^sub>m ?k) = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Matrix.right_mult_one_mat",
     "?A : carrier_mat ?nr ?nc ==> ?A * 1\<^sub>m ?nc = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 0)),
         template_var 2))),
    ("Matrix.left_mult_one_mat",
     "?A : carrier_mat ?nr ?nc ==> 1\<^sub>m ?nr * ?A = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 2),
         template_var 2))),
    ("Matrix.similar_mat_trans",
     "[| similar_mat ?A ?B; similar_mat ?B ?C |] ==> similar_mat ?A ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Matrix.scalar_prod_right_unit",
     "?i < ?n ==> ?v \<bullet> unit_vec ?n ?i = ?v $ ?i",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Matrix.cols_nth", "?i < dim_col ?A ==> cols ?A ! ?i = col ?A ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Matrix.nth_rows", "?i < dim_row ?A ==> rows ?A ! ?i = row ?A ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Matrix.col_transpose",
     "?i < dim_row ?A ==> col ?A\<^sup>T ?i = row ?A ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Matrix.nth_list_of_vec",
     "?i < dim_vec ?v ==> list_of_vec ?v ! ?i = ?v $ ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Matrix.index_update_vec1",
     "?i < dim_vec ?v ==> (?v |\<^sub>v ?i \<mapsto> ?a) $ ?i = ?a",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0)),
           template_var 2),
         template_var 0))),
    ("Matrix.index_vec_of_list",
     "?i < length ?xs ==> vec_of_list ?xs $ ?i = ?xs ! ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Matrix.row_transpose",
     "?j < dim_col ?A ==> row ?A\<^sup>T ?j = col ?A ?j",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Matrix.add_carrier_mat",
     "?B : carrier_mat ?nr ?nc ==> ?A + ?B : carrier_mat ?nr ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))
           ))),
    ("Matrix.minus_carrier_mat",
     "?B : carrier_mat ?nr ?nc ==> ?A - ?B : carrier_mat ?nr ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))
           ))),
    ("Matrix.smult_carrier_mat",
     "?A : carrier_mat ?nr ?nc ==>
      ?k \<cdot>\<^sub>m ?A : carrier_mat ?nr ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))
           ))),
    ("Matrix.transpose_uminus",
     "?A : carrier_mat ?nr ?nc ==> (- ?A)\<^sup>T = - ?A\<^sup>T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 2)),
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 2))))),
    ("Matrix.minus_r_inv_mat",
     "?A : carrier_mat ?nr ?nc ==> ?A - ?A = 0\<^sub>m ?nr ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Matrix.similar_mat_wit_refl",
     "?A : carrier_mat ?n ?n ==>
      similar_mat_wit ?A ?A (1\<^sub>m ?n) (1\<^sub>m ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 1),
               template_app (template_hole 0, template_var 0)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Matrix.pow_carrier_mat",
     "?A : carrier_mat ?n ?n ==> ?A ^\<^sub>m ?k : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 1))
           ))),
    ("Matrix.right_add_zero_mat",
     "?A : carrier_mat ?nr ?nc ==> ?A + 0\<^sub>m ?nr ?nc = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 2))),
    ("Matrix.left_add_zero_mat",
     "?A : carrier_mat ?nr ?nc ==> 0\<^sub>m ?nr ?nc + ?A = ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_var 2))),
    ("Matrix.scalar_prod_vCons",
     "vCons ?a ?v \<bullet> vCons ?b ?w = ?a * ?b + ?v \<bullet> ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Matrix.prod_list_diag_prod",
     "prod_list (diag_mat ?A) = (PROD i = 0..<dim_row ?A. ?A $$ (i, i))",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, template_var 0)),
       template_app
        (template_app (template_hole 5, t_empty),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))))),
    ("Matrix.vCons_eq_vCons",
     "(vCons ?a ?v = vCons ?b ?w) = (?a = ?b & ?v = ?w)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))
           ))),
    ("Matrix.col_uminus", "?i < dim_col ?A ==> col (- ?A) ?i = - col ?A ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Matrix.row_uminus", "?i < dim_row ?A ==> row (- ?A) ?i = - row ?A ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Matrix.index_uminus_vec",
     "?i < dim_vec ?v ==> (- ?v) $ ?i = - ?v $ ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Matrix.vec_index_conjugate",
     "?i < dim_vec ?v ==> conjugate ?v $ ?i = conjugate (?v $ ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Matrix.uminus_l_inv_mat",
     "?A : carrier_mat ?nr ?nc ==> - ?A + ?A = 0\<^sub>m ?nr ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Matrix.vec_index_vCons",
     "vCons ?a ?v $ ?n = (if ?n = 0 then ?a else ?v $ (?n - 1))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_hole 2)),
               template_var 2),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Matrix.four_block_one_mat",
     "four_block_mat (1\<^sub>m ?n1.0) (0\<^sub>m ?n1.0 ?n2.0)
       (0\<^sub>m ?n2.0 ?n1.0) (1\<^sub>m ?n2.0) =
      1\<^sub>m (?n1.0 + ?n2.0)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Matrix.mat_diag_diag",
     "mat_diag ?n ?f * mat_diag ?n ?g = mat_diag ?n (%i. ?f i * ?g i)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2), t_empty))),
    ("Matrix.unit_vec_eq",
     "?i < ?n ==> (unit_vec ?n ?i = unit_vec ?n ?j) = (?i = ?j)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_equation (template_var 2, template_var 0)))),
    ("Matrix.index_update_vec2",
     "?i' ~= ?i ==> (?v |\<^sub>v ?i \<mapsto> ?a) $ ?i' = ?v $ ?i'",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0)),
           template_var 3),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 3)))),
    ("Matrix.right_mult_zero_mat'",
     "dim_col ?A = ?n ==>
      ?A * 0\<^sub>m ?n ?nc = 0\<^sub>m (dim_row ?A) ?nc",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Matrix.left_mult_zero_mat'",
     "dim_row ?A = ?n ==>
      0\<^sub>m ?nr ?n * ?A = 0\<^sub>m ?nr (dim_col ?A)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2), template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 2))))),
    ("Matrix.index_map_vec",
     "?i < dim_vec ?v ==> map_vec ?f ?v $ ?i = ?f (?v $ ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_var 0,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Matrix.mat_of_row_index",
     "?x < dim_vec ?y ==> mat_of_row ?y $$ (0, ?x) = ?y $ ?x",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app (template_hole 3, template_var 0)),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Matrix.uminus_zero_vec_eq",
     "?v : carrier_vec ?n ==> (- ?v = 0\<^sub>v ?n) = (?v = 0\<^sub>v ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_bimplication
        (template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_equation
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("Matrix.uminus_mult_right_mat",
     "dim_col ?A = dim_row ?B ==> ?A * - ?B = - (?A * ?B)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Matrix.uminus_mult_left_mat",
     "dim_col ?A = dim_row ?B ==> - ?A * ?B = - (?A * ?B)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Matrix.uminus_mult_mat_vec",
     "dim_vec ?v = dim_col ?A ==> - ?A *\<^sub>v ?v = - (?A *\<^sub>v ?v)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 1),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Matrix.scalar_prod_uminus_right",
     "dim_vec ?v = dim_vec ?w ==> ?v \<bullet> - ?w = - (?v \<bullet> ?w)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Matrix.scalar_prod_uminus_left",
     "dim_vec ?v = dim_vec ?w ==> - ?v \<bullet> ?w = - (?v \<bullet> ?w)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Matrix.similar_mat_wit_pow",
     "similar_mat_wit ?A ?B ?P ?Q ==>
      similar_mat_wit (?A ^\<^sub>m ?k) (?B ^\<^sub>m ?k) ?P ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0)),
               template_var 2),
             template_var 1)
           ))),
    ("Matrix.similar_mat_wit_smult",
     "similar_mat_wit ?A ?B ?P ?Q ==>
      similar_mat_wit (?k \<cdot>\<^sub>m ?A) (?k \<cdot>\<^sub>m ?B) ?P
       ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 4)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("Matrix.diag_mat_map",
     "?M : carrier_mat ?n ?n ==>
      diag_mat (map_mat ?f ?M) = map ?f (diag_mat ?M)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 2))))),
    ("Matrix.left_mult_zero_mat",
     "?A : carrier_mat ?n ?nc ==>
      0\<^sub>m ?nr ?n * ?A = 0\<^sub>m ?nr ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)),
           template_var 3),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Matrix.right_mult_zero_mat",
     "?A : carrier_mat ?nr ?n ==>
      ?A * 0\<^sub>m ?n ?nc = 0\<^sub>m ?nr ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Matrix.col_smult",
     "?i < dim_col ?A ==>
      col (?k \<cdot>\<^sub>m ?A) ?i = ?k \<cdot>\<^sub>v col ?A ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2))))),
    ("Matrix.row_smult",
     "?i < dim_row ?A ==>
      row (?k \<cdot>\<^sub>m ?A) ?i = ?k \<cdot>\<^sub>v row ?A ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2))))),
    ("Matrix.index_mult_mat_vec",
     "?i < dim_row ?A ==> (?A *\<^sub>v ?v) $ ?i = row ?A ?i \<bullet> ?v",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Matrix.index_smult_vec",
     "?i < dim_vec ?v ==> (?a \<cdot>\<^sub>v ?v) $ ?i = ?a * ?v $ ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2))))),
    ("Matrix.col_map_mat",
     "?j < dim_col ?A ==> col (map_mat ?f ?A) ?j = map_vec ?f (col ?A ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Matrix.conjugate_square_eq_0_vec",
     "?v : carrier_vec ?n ==>
      (?v \<bullet>c ?v = (0::?'a)) = (?v = 0\<^sub>v ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 3, template_var 1)),
           template_hole 2),
         template_equation
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("Matrix.vec_first_last_append",
     "?v : carrier_vec (?n + ?m) ==>
      vec_first ?v ?n @\<^sub>v vec_last ?v ?m = ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 2))),
    ("Matrix.finsum_vec_closed",
     "?f : ?A \<rightarrow> carrier_vec ?n ==>
      finsum_vec TYPE(?'a) ?n ?f ?A : carrier_vec ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_hole 0),
                     template_var 0),
                   template_var 2),
                 template_var 1)),
             template_app (template_hole 3, template_var 0))
           ))),
    ("Matrix.carrier_matI",
     "[| dim_row ?A = ?nr; dim_col ?A = ?nc |]
      ==> ?A : carrier_mat ?nr ?nc",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 2), template_var 1),
        template_equation
         (template_app (template_hole 2, template_var 2), template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Matrix.vec_setI",
     "[| ?v $ ?i = ?a; ?i < dim_vec ?v |] ==> ?a : set\<^sub>v ?v",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_var 0),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Matrix.mat_of_cols_Cons_index_0",
     "?i < ?n ==> mat_of_cols ?n (?w # ?ws) $$ (?i, 0) = ?w $ ?i",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0))),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_hole 1)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 3)))),
    ("Matrix.nth_map_out_of_bound",
     "length ?xs <= ?i ==> map ?f ?xs ! ?i = [] ! (?i - length ?xs)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app (template_hole 3, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_app (template_hole 5, template_var 2)))))),
    ("Matrix.diag_block_pow_mat",
     "Ball (set ?As) square_mat ==>
      diag_block_mat ?As ^\<^sub>m ?n =
      diag_block_mat (map (%A. A ^\<^sub>m ?n) ?As)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_hole 4)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, t_empty), template_var 1))))),
    ("Matrix.conjugate_square_greater_0_vec",
     "?v : carrier_vec ?n ==>
      ((0::?'a) < ?v \<bullet>c ?v) = (?v ~= 0\<^sub>v ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 0))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_app (template_hole 3, template_var 1)))
              )],
         template_negation
          (
             template_equation
              (template_var 1,
               template_app (template_hole 0, template_var 0))
             )))),
    ("Matrix.scalar_prod_smult_right",
     "dim_vec ?w = dim_vec ?v ==>
      ?w \<bullet> (?k \<cdot>\<^sub>v ?v) = ?k * (?w \<bullet> ?v)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1))))),
    ("Matrix.scalar_prod_smult_left",
     "dim_vec ?w = dim_vec ?v ==>
      (?k \<cdot>\<^sub>v ?w) \<bullet> ?v = ?k * (?w \<bullet> ?v)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1))))),
    ("Matrix.similar_mat_wit_pow_id",
     "similar_mat_wit ?A ?B ?P ?Q ==>
      ?A ^\<^sub>m ?k = ?P * ?B ^\<^sub>m ?k * ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4), template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 0))),
           template_var 1)))),
    ("Matrix.pow_mat_ring_pow",
     "?A : carrier_mat ?n ?n ==>
      ?A ^\<^sub>m ?k = ?A [^]\<^bsub>ring_mat TYPE(?'a) ?n ?b\<^esub> ?k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3), template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2),
                 template_var 0)),
             template_var 3),
           template_var 1)))),
    ("Matrix.row_carrier_vec",
     "[| ?i < ?nr; ?A : carrier_mat ?nr ?nc |]
      ==> row ?A ?i : carrier_vec ?nc",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Matrix.col_carrier_vec",
     "[| ?j < ?nc; ?A : carrier_mat ?nr ?nc |]
      ==> col ?A ?j : carrier_vec ?nr",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 3)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Matrix.similar_mat_witD",
     "[| ?n = dim_row ?A; similar_mat_wit ?A ?B ?P ?Q |]
      ==> ?A : carrier_mat ?n ?n",
     template_implication
      ([template_equation
         (template_var 4, template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 4))
           ))),
    ("Matrix.similar_mat_witD",
     "[| ?n = dim_row ?A; similar_mat_wit ?A ?B ?P ?Q |]
      ==> ?B : carrier_mat ?n ?n",
     template_implication
      ([template_equation
         (template_var 4, template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 4))
           ))),
    ("Matrix.similar_mat_witD",
     "[| ?n = dim_row ?A; similar_mat_wit ?A ?B ?P ?Q |]
      ==> ?P : carrier_mat ?n ?n",
     template_implication
      ([template_equation
         (template_var 4, template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 4))
           ))),
    ("Matrix.similar_mat_witD",
     "[| ?n = dim_row ?A; similar_mat_wit ?A ?B ?P ?Q |]
      ==> ?Q : carrier_mat ?n ?n",
     template_implication
      ([template_equation
         (template_var 4, template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 4))
           ))),
    ("Matrix.add_carrier_vec",
     "[| ?v\<^sub>1 : carrier_vec ?n; ?v\<^sub>2 : carrier_vec ?n |]
      ==> ?v\<^sub>1 + ?v\<^sub>2 : carrier_vec ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Matrix.minus_carrier_vec",
     "[| ?v\<^sub>1 : carrier_vec ?n; ?v\<^sub>2 : carrier_vec ?n |]
      ==> ?v\<^sub>1 - ?v\<^sub>2 : carrier_vec ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Matrix.set_rows_carrier",
     "[| ?A : carrier_mat ?m ?n; ?v : set (rows ?A) |]
      ==> ?v : carrier_vec ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Matrix.row_mat",
     "?i < ?nr ==> row (mat ?nr ?nc ?f) ?i = vec ?nc (%j. ?f (?i, j))",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)))),
    ("Matrix.col_mat",
     "?j < ?nc ==> col (mat ?nr ?nc ?f) ?j = vec ?nr (%i. ?f (i, ?j))",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 2),
               template_var 0)),
           template_var 3),
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)))),
    ("Matrix.index_add_vec",
     "?i < dim_vec ?v\<^sub>2 ==>
      (?v\<^sub>1 + ?v\<^sub>2) $ ?i = ?v\<^sub>1 $ ?i + ?v\<^sub>2 $ ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2))))),
    ("Matrix.index_minus_vec",
     "?i < dim_vec ?v\<^sub>2 ==>
      (?v\<^sub>1 - ?v\<^sub>2) $ ?i = ?v\<^sub>1 $ ?i - ?v\<^sub>2 $ ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 2))))),
    ("Matrix.mat_of_cols_map",
     "set ?vs <= carrier_vec ?n ==>
      mat_of_cols ?n (map (map_vec ?f) ?vs) =
      map_mat ?f (mat_of_cols ?n ?vs)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 7, template_var 2),
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Matrix.mat_of_rows_map",
     "set ?vs <= carrier_vec ?n ==>
      mat_of_rows ?n (map (map_vec ?f) ?vs) =
      map_mat ?f (mat_of_rows ?n ?vs)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 7, template_var 2),
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Matrix.index_zero_mat",
     "[| ?i < ?nr; ?j < ?nc |]
      ==> 0\<^sub>m ?nr ?nc $$ (?i, ?j) = (0::?'a)",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_hole 0))),
    ("Matrix.unit_vecs_first_distinct",
     "[| ?i <= ?j; ?j < ?n |]
      ==> unit_vec ?n ?j ~: set (unit_vecs_first ?n ?i)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 1)),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)))
               )
           ))),
    ("Matrix.similar_mat_witD",
     "[| ?n = dim_row ?A; similar_mat_wit ?A ?B ?P ?Q |]
      ==> ?P * ?Q = 1\<^sub>m ?n",
     template_implication
      ([template_equation
         (template_var 4, template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 4)))),
    ("Matrix.similar_mat_witD",
     "[| ?n = dim_row ?A; similar_mat_wit ?A ?B ?P ?Q |]
      ==> ?Q * ?P = 1\<^sub>m ?n",
     template_implication
      ([template_equation
         (template_var 4, template_app (template_hole 4, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 4)))),
    ("Matrix.comm_scalar_prod",
     "[| ?v\<^sub>1 : carrier_vec ?n; ?v\<^sub>2 : carrier_vec ?n |]
      ==> ?v\<^sub>1 \<bullet> ?v\<^sub>2 =
          ?v\<^sub>2 \<bullet> ?v\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Matrix.comm_add_vec",
     "[| ?v\<^sub>1 : carrier_vec ?n; ?v\<^sub>2 : carrier_vec ?n |]
      ==> ?v\<^sub>1 + ?v\<^sub>2 = ?v\<^sub>2 + ?v\<^sub>1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2)))),
    ("Matrix.mult_mat_vec_carrier",
     "[| ?A : carrier_mat ?nr ?n; ?v : carrier_vec ?n |]
      ==> ?A *\<^sub>v ?v : carrier_vec ?nr",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)),
             template_app (template_hole 1, template_var 2))
           ))),
    ("Matrix.similar_mat_witD2",
     "[| ?A : carrier_mat ?n ?m; similar_mat_wit ?A ?B ?P ?Q |]
      ==> ?A : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 5),
              template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 5),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 4))
           ))),
    ("Matrix.similar_mat_witD2",
     "[| ?A : carrier_mat ?n ?m; similar_mat_wit ?A ?B ?P ?Q |]
      ==> ?B : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 5),
              template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 4))
           ))),
    ("Matrix.similar_mat_witD2",
     "[| ?A : carrier_mat ?n ?m; similar_mat_wit ?A ?B ?P ?Q |]
      ==> ?P : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 5),
              template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 4))
           ))),
    ("Matrix.similar_mat_witD2",
     "[| ?A : carrier_mat ?n ?m; similar_mat_wit ?A ?B ?P ?Q |]
      ==> ?Q : carrier_mat ?n ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 5),
              template_app
               (template_app (template_hole 1, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 4))
           ))),
    ("Matrix.add_smult_distrib_right_mat",
     "?A : carrier_mat ?nr ?nc ==>
      (?k + ?l) \<cdot>\<^sub>m ?A =
      ?k \<cdot>\<^sub>m ?A + ?l \<cdot>\<^sub>m ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 4),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 4)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 4))))),
    ("Matrix.similar_mat_witD",
     "[| ?n = dim_row ?A; similar_mat_wit ?A ?B ?P ?Q |]
      ==> ?A = ?P * ?B * ?Q",
     template_implication
      ([template_equation
         (template_var 4, template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 3,
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Matrix.append_carrier_vec",
     "[| ?v : carrier_vec ?n1.0; ?w : carrier_vec ?n2.0 |]
      ==> ?v @\<^sub>v ?w : carrier_vec (?n1.0 + ?n2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("Matrix.minus_add_uminus_vec",
     "[| ?v : carrier_vec ?n; ?w : carrier_vec ?n |]
      ==> ?v - ?w = ?v + - ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 0))))),
    ("Matrix.scalar_prod_left_unit",
     "[| ?v : carrier_vec ?n; ?i < ?n |]
      ==> unit_vec ?n ?i \<bullet> ?v = ?v $ ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Matrix.similar_mat_witD2",
     "[| ?A : carrier_mat ?n ?m; similar_mat_wit ?A ?B ?P ?Q |]
      ==> ?P * ?Q = 1\<^sub>m ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app (template_hole 0, template_var 4)))),
    ("Matrix.similar_mat_witD2",
     "[| ?A : carrier_mat ?n ?m; similar_mat_wit ?A ?B ?P ?Q |]
      ==> ?Q * ?P = 1\<^sub>m ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_app (template_hole 0, template_var 4)))),
    ("Matrix.vec_eq_0_iff",
     "(?v = 0\<^sub>v ?n) =
      (?n = dim_vec ?v & (?n = 0 | set (list_of_vec ?v) = {0::?'a}))",
     template_bimplication
      (template_equation
        (template_var 1, template_app (template_hole 11, template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 0),
                 template_app (template_hole 8, template_var 1))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 9, template_var 0),
                   template_hole 6)),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 1))),
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_hole 0))))
           ))),
    ("Matrix.all_vec_append",
     "(ALL x:carrier_vec (?n + ?m). ?P x) =
      (ALL x1:carrier_vec ?n. ALL x2:carrier_vec ?m. ?P (x1 @\<^sub>v x2))",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         t_empty),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 2)),
         t_empty))),
    ("Matrix.four_block_zero_mat",
     "four_block_mat (0\<^sub>m ?nr1.0 ?nc1.0) (0\<^sub>m ?nr1.0 ?nc2.0)
       (0\<^sub>m ?nr2.0 ?nc1.0) (0\<^sub>m ?nr2.0 ?nc2.0) =
      0\<^sub>m (?nr1.0 + ?nr2.0) (?nc1.0 + ?nc2.0)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Matrix.row_mat_of_row_fun",
     "[| ?i < ?nr; dim_vec (?f ?i) = ?nc |]
      ==> row (mat\<^sub>r ?nr ?nc ?f) ?i = ?f ?i",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_equation
         (template_app
           (template_hole 3, template_app (template_var 1, template_var 3)),
          template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1)),
           template_var 3),
         template_app (template_var 1, template_var 3)))),
    ("Matrix.unit_vecs_last_distinct",
     "[| ?j <= ?n; ?i < ?n - ?j |]
      ==> unit_vec ?n ?i ~: set (unit_vecs_last ?n ?j)",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 5, template_var 1),
            template_var 2))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)),
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 2)))
               )
           ))),
    ("Matrix.uminus_scalar_prod",
     "[| ?v : carrier_vec ?n; ?w : carrier_vec ?n |]
      ==> - (?v \<bullet> ?w) = - ?v \<bullet> ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Matrix.uminus_add_minus_vec",
     "[| ?l : carrier_vec ?n; ?r : carrier_vec ?n |]
      ==> - (?l + ?r) = - ?l - ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 2)),
           template_var 0)))),
    ("Matrix.conjugate_vec_sprod_comm",
     "[| ?v : carrier_vec ?n; ?w : carrier_vec ?n |]
      ==> ?v \<bullet>c ?w = conjugate ?w \<bullet> ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 2)))),
    ("Matrix.mult_carrier_mat",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?n ?nc |]
      ==> ?A * ?B : carrier_mat ?nr ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0))
           ))),
    ("Matrix.similar_mat_witD2",
     "[| ?A : carrier_mat ?n ?m; similar_mat_wit ?A ?B ?P ?Q |]
      ==> ?A = ?P * ?B * ?Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_var 5,
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Matrix.comm_add_mat",
     "[| ?A : carrier_mat ?nr ?nc; ?B : carrier_mat ?nr ?nc |]
      ==> ?A + ?B = ?B + ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 3)))),
    ("Matrix.index_unit_vec",
     "[| ?i < ?n; ?j < ?n |]
      ==> unit_vec ?n ?i $ ?j = (if ?j = ?i then 1::?'a else (0::?'a))",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 1),
                    template_var 2)),
                template_var 0)
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_var 2)),
                 template_hole 1),
               template_hole 0)
             )))),
    ("Matrix.conjugate_sprod_vec",
     "[| ?v : carrier_vec ?n; ?w : carrier_vec ?n |]
      ==> conjugate (?v \<bullet> ?w) = conjugate ?v \<bullet>c ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_app (template_hole 0, template_var 0))))),
    ("Matrix.conjugate_conjugate_sprod",
     "[| ?v : carrier_vec ?n; ?w : carrier_vec ?n |]
      ==> conjugate (conjugate ?v \<bullet> ?w) = ?v \<bullet>c ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app (template_hole 0, template_var 0))))),
    ("Matrix.conjugate_add_vec",
     "[| ?v : carrier_vec ?n; ?w : carrier_vec ?n |]
      ==> conjugate (?v + ?w) = conjugate ?v + conjugate ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 2)),
           template_app (template_hole 1, template_var 0))))),
    ("Matrix.minus_add_uminus_mat",
     "[| ?A : carrier_mat ?nr ?nc; ?B : carrier_mat ?nr ?nc |]
      ==> ?A - ?B = ?A + - ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app (template_hole 0, template_var 0))))),
    ("Matrix.add_uminus_minus_mat",
     "[| ?A : carrier_mat ?nr ?nc; ?B : carrier_mat ?nr ?nc |]
      ==> ?A + - ?B = ?A - ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Matrix.upper_triangularD",
     "[| upper_triangular ?A; ?j < ?i; ?i < dim_row ?A |]
      ==> ?A $$ (?i, ?j) = (0::?'a)",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_hole 0))),
    ("Matrix.upper_triangular_imp_distinct",
     "[| ?A : carrier_mat ?n ?n; upper_triangular ?A;
         (0::?'a) ~: set (diag_mat ?A) |]
      ==> distinct (rows ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app (template_hole 8, template_var 0),
                template_var 0))
            ),
        template_predicate (template_app (template_hole 7, template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app
                   (template_hole 3,
                    template_app (template_hole 2, template_var 1)))
                )
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))
           ))),
    ("Matrix.mat_of_cols_Cons_index_Suc",
     "?i < ?n ==>
      mat_of_cols ?n (?w # ?ws) $$ (?i, Suc ?j) =
      mat_of_cols ?n ?ws $$ (?i, ?j)",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1))),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app (template_hole 0, template_var 0))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 0))))),
    ("Matrix.add_inv_exists_vec",
     "?v : carrier_vec ?n ==>
      EX w:carrier_vec ?n. w + ?v = 0\<^sub>v ?n & ?v + w = 0\<^sub>v ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 5, template_var 0)),
             t_empty)
           ))),
    ("Matrix.index_one_mat",
     "[| ?i < ?n; ?j < ?n |]
      ==> 1\<^sub>m ?n $$ (?i, ?j) =
          (if ?i = ?j then 1::?'a else (0::?'a))",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 1)),
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 0))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0)),
                 template_hole 1),
               template_hole 0)
             )))),
    ("Matrix.index_mat",
     "[| ?i < ?nr; ?j < ?nc |]
      ==> mat ?nr ?nc ?f $$ (?i, ?j) = ?f (?i, ?j)",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2)),
         template_app
          (template_var 0,
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2))))),
    ("Matrix.index_mat",
     "[| ?i < ?nr; ?j < ?nc |]
      ==> mat\<^sub>r ?nr ?nc ?g $$ (?i, ?j) = ?g ?i $ ?j",
     template_implication
      ([template_inequation (less_than, template_var 4, template_var 3),
        template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 2)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 0, template_var 4)),
           template_var 2)))),
    ("Matrix.index_col",
     "[| ?i < dim_row ?A; ?j < dim_col ?A |]
      ==> col ?A ?j $ ?i = ?A $$ (?i, ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Matrix.index_row",
     "[| ?i < dim_row ?A; ?j < dim_col ?A |]
      ==> row ?A ?i $ ?j = ?A $$ (?i, ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Matrix.mat_of_rows_row",
     "[| ?i < length ?vs; ?vs ! ?i : carrier_vec ?n |]
      ==> row (mat_of_rows ?n ?vs) ?i = ?vs ! ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 2)),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 2)))),
    ("Matrix.col_mat_of_cols",
     "[| ?j < length ?vs; ?vs ! ?j : carrier_vec ?n |]
      ==> col (mat_of_cols ?n ?vs) ?j = ?vs ! ?j",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 2)),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 2)))),
    ("Matrix.scalar_prod_smult_distrib",
     "[| ?v\<^sub>1 : carrier_vec ?n; ?v\<^sub>2 : carrier_vec ?n |]
      ==> ?v\<^sub>1 \<bullet> (?a \<cdot>\<^sub>v ?v\<^sub>2) =
          ?a * (?v\<^sub>1 \<bullet> ?v\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1))))),
    ("Matrix.smult_scalar_prod_distrib",
     "[| ?v\<^sub>1 : carrier_vec ?n; ?v\<^sub>2 : carrier_vec ?n |]
      ==> (?a \<cdot>\<^sub>v ?v\<^sub>1) \<bullet> ?v\<^sub>2 =
          ?a * (?v\<^sub>1 \<bullet> ?v\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1))))),
    ("Matrix.similar_mat_wit_trans",
     "[| similar_mat_wit ?A ?B ?P ?Q; similar_mat_wit ?B ?C ?P' ?Q' |]
      ==> similar_mat_wit ?A ?C (?P * ?P') (?Q' * ?Q)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 6),
                 template_var 2),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3))
           ))),
    ("Matrix.vec_induct",
     "[| ?P vNil; !!a v. ?P v ==> ?P (vCons a v) |] ==> ?P ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_var 1,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_app (template_hole 4, template_hole 3)))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Matrix.carrier_append_rows",
     "[| ?A : carrier_mat ?nr1.0 ?nc; ?B : carrier_mat ?nr2.0 ?nc |]
      ==> ?A @\<^sub>r ?B : carrier_mat (?nr1.0 + ?nr2.0) ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0)),
               template_var 2))
           ))),
    ("Matrix.uminus_add_minus_mat",
     "[| ?l : carrier_mat ?nr ?nc; ?r : carrier_mat ?nr ?nc |]
      ==> - (?l + ?r) = - ?l - ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 3)),
           template_var 0)))),
    ("Matrix.vec_eq_iff",
     "(?x = ?y) =
      (dim_vec ?x = dim_vec ?y & (ALL i<dim_vec ?y. ?x $ i = ?y $ i))",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 1)),
                 template_app (template_hole 5, template_var 0))),
             template_app (template_hole 4, t_empty))
           ))),
    ("Matrix.diag_block_mat_last",
     "diag_block_mat (?As @ [?B]) =
      (let A = diag_block_mat ?As
       in four_block_mat A (0\<^sub>m (dim_row A) (dim_col ?B))
           (0\<^sub>m (dim_row ?B) (dim_col A)) ?B)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_hole 5))),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 8, template_var 1)),
         t_empty))),
    ("Matrix.mat_of_cols_index",
     "[| ?i < ?n; ?j < length ?ws |]
      ==> mat_of_cols ?n ?ws $$ (?i, ?j) = ?ws ! ?j $ ?i",
     template_implication
      ([template_inequation (less_than, template_var 3, template_var 2),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 3)))),
    ("Matrix.index_transpose_mat",
     "[| ?i < dim_col ?A; ?j < dim_row ?A |]
      ==> ?A\<^sup>T $$ (?i, ?j) = ?A $$ (?j, ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Matrix.index_update_mat1",
     "[| ?i < dim_row ?A; ?j < dim_col ?A |]
      ==> (?A |\<^sub>m (?i, ?j) \<mapsto> ?a) $$ (?i, ?j) = ?a",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 5, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_var 0))),
    ("Matrix.mat_of_rows_index",
     "[| ?i < length ?rs; ?j < ?n |]
      ==> mat_of_rows ?n ?rs $$ (?i, ?j) = ?rs ! ?i $ ?j",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 3)),
           template_var 1)))),
    ("Matrix.transpose_add",
     "[| ?A : carrier_mat ?nr ?nc; ?B : carrier_mat ?nr ?nc |]
      ==> (?A + ?B)\<^sup>T = ?A\<^sup>T + ?B\<^sup>T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 3)),
           template_app (template_hole 1, template_var 0))))),
    ("Matrix.mult_mat_vec",
     "[| ?A : carrier_mat ?nr ?nc; ?v : carrier_vec ?nc |]
      ==> ?A *\<^sub>v (?k \<cdot>\<^sub>v ?v) =
          ?k \<cdot>\<^sub>v (?A *\<^sub>v ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1))))),
    ("Matrix.transpose_minus",
     "[| ?A : carrier_mat ?nr ?nc; ?B : carrier_mat ?nr ?nc |]
      ==> (?A - ?B)\<^sup>T = ?A\<^sup>T - ?B\<^sup>T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 3)),
           template_app (template_hole 1, template_var 0))))),
    ("Matrix.uminus_add_mat",
     "[| ?A : carrier_mat ?nr ?nc; ?B : carrier_mat ?nr ?nc |]
      ==> - (?A + ?B) = - ?B + - ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 1, template_var 3))))),
    ("Matrix.transpose_mult",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?n ?nc |]
      ==> (?A * ?B)\<^sup>T = ?B\<^sup>T * ?A\<^sup>T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 4))))),
    ("Matrix.sum_mat_add",
     "[| ?A : carrier_mat ?nr ?nc; ?B : carrier_mat ?nr ?nc |]
      ==> sum_mat (?A + ?B) = sum_mat ?A + sum_mat ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 3)),
           template_app (template_hole 2, template_var 0))))),
    ("Matrix.index_uminus_mat",
     "[| ?i < dim_row ?A; ?j < dim_col ?A |]
      ==> (- ?A) $$ (?i, ?j) = - ?A $$ (?i, ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)))))),
    ("Matrix.index_component_mult",
     "[| ?i < dim_vec ?v; ?i < dim_vec ?w |]
      ==> component_mult ?v ?w $ ?i = ?v $ ?i * ?w $ ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2))))),
    ("Matrix.vec_setE",
     "[| ?a : set\<^sub>v ?v;
         !!i. [| ?v $ i = ?a; i < dim_vec ?v |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app (template_hole 5, template_var 1))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Matrix.smult_add_distrib_vec",
     "[| ?v : carrier_vec ?n; ?w : carrier_vec ?n |]
      ==> ?a \<cdot>\<^sub>v (?v + ?w) =
          ?a \<cdot>\<^sub>v ?v + ?a \<cdot>\<^sub>v ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Matrix.mult_smult_distrib",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?n ?nc |]
      ==> ?A * (?k \<cdot>\<^sub>m ?B) = ?k \<cdot>\<^sub>m (?A * ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 5),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 5),
             template_var 2))))),
    ("Matrix.mult_smult_assoc_mat",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?n ?nc |]
      ==> ?k \<cdot>\<^sub>m ?A * ?B = ?k \<cdot>\<^sub>m (?A * ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 5)),
           template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 5),
             template_var 2))))),
    ("Matrix.diag_block_mat_append",
     "diag_block_mat (?As @ ?Bs) =
      (let A = diag_block_mat ?As; B = diag_block_mat ?Bs
       in four_block_mat A (0\<^sub>m (dim_row A) (dim_col B))
           (0\<^sub>m (dim_row B) (dim_col A)) B)",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 6, template_var 1)),
         t_empty))),
    ("Matrix.similar_diag_mat_block_mat",
     "(!!A B. (A, B) : set ?Ms ==> similar_mat A B) ==>
      similar_mat (diag_block_mat (map fst ?Ms))
       (diag_block_mat (map snd ?Ms))",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 0))),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 0),
                 template_var 0)))
           ))),
    ("Matrix.upper_triangularI",
     "(!!i j. [| j < i; i < dim_row ?A |] ==> ?A $$ (i, j) = (0::?'a)) ==>
      upper_triangular ?A",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Matrix.index_map_mat",
     "[| ?i < dim_row ?A; ?j < dim_col ?A |]
      ==> map_mat ?f ?A $$ (?i, ?j) = ?f (?A $$ (?i, ?j))",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_var 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)))))),
    ("Matrix.diag_four_block_mat",
     "[| ?A : carrier_mat ?n1.0 ?n1.0; ?D : carrier_mat ?n2.0 ?n2.0 |]
      ==> diag_mat (four_block_mat ?A ?B ?C ?D) =
          diag_mat ?A @ diag_mat ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 1),
               template_var 0),
             template_var 3)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 5)),
           template_app (template_hole 2, template_var 3))))),
    ("Matrix.mat_vec_as_mat_mat_mult",
     "[| ?A : carrier_mat ?nr ?nc; ?v : carrier_vec ?nc |]
      ==> ?A *\<^sub>v ?v = col (?A * mat_of_cols ?nc [?v]) 0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 3),
              template_app
               (template_app (template_hole 10, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app (template_hole 8, template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 3), template_var 0),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_hole 1)))),
           template_hole 0)))),
    ("Matrix.vec_cases",
     "[| ?v = vNil ==> ?thesis; !!a w. ?v = vCons a w ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app (template_hole 4, template_hole 3)))],
          template_predicate (template_var 0)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Matrix.elements_matD",
     "?a : elements_mat ?A ==>
      EX i j. i < dim_row ?A & j < dim_col ?A & ?a = ?A $$ (i, j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app (template_hole 8, template_var 0))
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Matrix.add_inv_exists_mat",
     "?A : carrier_mat ?nr ?nc ==>
      EX B:carrier_mat ?nr ?nc.
         B + ?A = 0\<^sub>m ?nr ?nc & ?A + B = 0\<^sub>m ?nr ?nc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)),
             t_empty)
           ))),
    ("Matrix.mat_diag_mult_left",
     "?A : carrier_mat ?n ?nr ==>
      mat_diag ?n ?f * ?A = mat ?n ?nr (%(i, j). ?f i * ?A $$ (i, j))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_app (template_hole 3, t_empty))))),
    ("Matrix.mat_diag_mult_right",
     "?A : carrier_mat ?nr ?n ==>
      ?A * mat_diag ?n ?f = mat ?nr ?n (%(i, j). ?A $$ (i, j) * ?f j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_app (template_hole 3, t_empty))))),
    ("Matrix.index_smult_mat",
     "[| ?i < dim_row ?A; ?j < dim_col ?A |]
      ==> (?a \<cdot>\<^sub>m ?A) $$ (?i, ?j) = ?a * ?A $$ (?i, ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)))))),
    ("Matrix.index_mult_mat",
     "[| ?i < dim_row ?A; ?j < dim_col ?B |]
      ==> (?A * ?B) $$ (?i, ?j) = row ?A ?i \<bullet> col ?B ?j",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Matrix.append_vec_eq",
     "[| ?v : carrier_vec ?n; ?v' : carrier_vec ?n |]
      ==> (?v @\<^sub>v ?w = ?v' @\<^sub>v ?w') = (?v = ?v' & ?w = ?w')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app (template_hole 4, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 3))
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_predicate
          (
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 2)),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0))
             )))),
    ("Matrix.append_vec_le",
     "[| ?v : carrier_vec ?n; ?w : carrier_vec ?n |]
      ==> (?v @\<^sub>v ?v' <= ?w @\<^sub>v ?w') = (?v <= ?w & ?v' <= ?w')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app (template_hole 4, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Matrix.four_block_carrier_mat",
     "[| ?A : carrier_mat ?nr1.0 ?nc1.0; ?D : carrier_mat ?nr2.0 ?nc2.0 |]
      ==> four_block_mat ?A ?B ?C ?D
          : carrier_mat (?nr1.0 + ?nr2.0) (?nc1.0 + ?nc2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 7),
              template_app
               (template_app (template_hole 2, template_var 6),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 7),
                     template_var 1),
                   template_var 0),
                 template_var 4)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 3)),
               template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 2)))
           ))),
    ("Matrix.add_smult_distrib_left_mat",
     "[| ?A : carrier_mat ?nr ?nc; ?B : carrier_mat ?nr ?nc |]
      ==> ?k \<cdot>\<^sub>m (?A + ?B) =
          ?k \<cdot>\<^sub>m ?A + ?k \<cdot>\<^sub>m ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 4)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Matrix.eq_vecI",
     "[| !!i. i < dim_vec ?w ==> ?v $ i = ?w $ i; dim_vec ?v = dim_vec ?w |]
      ==> ?v = ?w",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_equation
         (template_app (template_hole 4, template_var 0),
          template_app (template_hole 4, template_var 1))],
       template_equation (template_var 0, template_var 1))),
    ("Matrix.index_append_vec",
     "?i < dim_vec ?v + dim_vec ?w ==>
      (?v @\<^sub>v ?w) $ ?i =
      (if ?i < dim_vec ?v then ?v $ ?i else ?w $ (?i - dim_vec ?v))",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1)),
            template_app (template_hole 5, template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_app (template_hole 5, template_var 1))),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_app (template_hole 5, template_var 1))))))),
    ("Matrix.minus_add_minus_vec",
     "[| ?u : carrier_vec ?n; ?v : carrier_vec ?n; ?w : carrier_vec ?n |]
      ==> ?u - (?v + ?w) = ?u - ?v - ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_var 0)))),
    ("Matrix.assoc_add_vec",
     "[| ?v\<^sub>1 : carrier_vec ?n; ?v\<^sub>2 : carrier_vec ?n;
         ?v\<^sub>3 : carrier_vec ?n |]
      ==> ?v\<^sub>1 + ?v\<^sub>2 + ?v\<^sub>3 =
          ?v\<^sub>1 + (?v\<^sub>2 + ?v\<^sub>3)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Matrix.orthogonalD",
     "[| orthogonal ?vs; ?i < length ?vs; ?j < length ?vs |]
      ==> (?vs ! ?i \<bullet> ?vs ! ?j = (0::?'a)) = (?i ~= ?j)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 7, template_var 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_hole 2),
         template_negation
          (template_equation (template_var 1, template_var 0))))),
    ("Matrix.orthogonal_matD",
     "[| orthogonal_mat ?A; ?i < dim_col ?A; ?j < dim_col ?A |]
      ==> (col ?A ?i \<bullet> col ?A ?j = (0::?'a)) = (?i ~= ?j)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 7, template_var 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0)),
           template_hole 2),
         template_negation
          (template_equation (template_var 1, template_var 0))))),
    ("Matrix.col_mult2",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?n ?nc; ?j < ?nc |]
      ==> col (?A * ?B) ?j = ?A *\<^sub>v col ?B ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 1))
            ),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 5),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 5),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Matrix.elements_matI",
     "[| ?A : carrier_mat ?nr ?nc; ?i < ?nr; ?j < ?nc;
         ?a = ?A $$ (?i, ?j) |]
      ==> ?a : elements_mat ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3))
            ),
        template_inequation (less_than, template_var 2, template_var 4),
        template_inequation (less_than, template_var 1, template_var 3),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 3, template_var 5),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 5))
           ))),
    ("Matrix.upper_triangular_four_block",
     "[| ?A : carrier_mat ?n ?n; ?D : carrier_mat ?m ?m;
         upper_triangular ?A; upper_triangular ?D |]
      ==> upper_triangular (four_block_mat ?A ?B (0\<^sub>m ?m ?n) ?D)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, template_var 4)),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 0),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3)),
               template_var 2))
           ))),
    ("Matrix.index_add_mat",
     "[| ?i < dim_row ?B; ?j < dim_col ?B |]
      ==> (?A + ?B) $$ (?i, ?j) = ?A $$ (?i, ?j) + ?B $$ (?i, ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1))),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)))))),
    ("Matrix.index_minus_mat",
     "[| ?i < dim_row ?B; ?j < dim_col ?B |]
      ==> (?A - ?B) $$ (?i, ?j) = ?A $$ (?i, ?j) - ?B $$ (?i, ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 2)),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1))),
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)))))),
    ("Matrix.scalar_prod_minus_distrib",
     "[| ?v\<^sub>1 : carrier_vec ?n; ?v\<^sub>2 : carrier_vec ?n;
         ?v\<^sub>3 : carrier_vec ?n |]
      ==> ?v\<^sub>1 \<bullet> (?v\<^sub>2 - ?v\<^sub>3) =
          ?v\<^sub>1 \<bullet> ?v\<^sub>2 -
          ?v\<^sub>1 \<bullet> ?v\<^sub>3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 0))))),
    ("Matrix.minus_scalar_prod_distrib",
     "[| ?v\<^sub>1 : carrier_vec ?n; ?v\<^sub>2 : carrier_vec ?n;
         ?v\<^sub>3 : carrier_vec ?n |]
      ==> (?v\<^sub>1 - ?v\<^sub>2) \<bullet> ?v\<^sub>3 =
          ?v\<^sub>1 \<bullet> ?v\<^sub>3 -
          ?v\<^sub>2 \<bullet> ?v\<^sub>3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Matrix.scalar_prod_add_distrib",
     "[| ?v\<^sub>1 : carrier_vec ?n; ?v\<^sub>2 : carrier_vec ?n;
         ?v\<^sub>3 : carrier_vec ?n |]
      ==> ?v\<^sub>1 \<bullet> (?v\<^sub>2 + ?v\<^sub>3) =
          ?v\<^sub>1 \<bullet> ?v\<^sub>2 +
          ?v\<^sub>1 \<bullet> ?v\<^sub>3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 0))))),
    ("Matrix.add_scalar_prod_distrib",
     "[| ?v\<^sub>1 : carrier_vec ?n; ?v\<^sub>2 : carrier_vec ?n;
         ?v\<^sub>3 : carrier_vec ?n |]
      ==> (?v\<^sub>1 + ?v\<^sub>2) \<bullet> ?v\<^sub>3 =
          ?v\<^sub>1 \<bullet> ?v\<^sub>3 +
          ?v\<^sub>2 \<bullet> ?v\<^sub>3",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Matrix.assoc_mult_mat_vec",
     "[| ?A : carrier_mat ?n\<^sub>1 ?n\<^sub>2;
         ?B : carrier_mat ?n\<^sub>2 ?n\<^sub>3;
         ?v : carrier_vec ?n\<^sub>3 |]
      ==> ?A * ?B *\<^sub>v ?v = ?A *\<^sub>v (?B *\<^sub>v ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 5),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Matrix.cong_four_block_mat",
     "[| ?A1.0 = ?B1.0; ?A2.0 = ?B2.0; ?A3.0 = ?B3.0; ?A4.0 = ?B4.0 |]
      ==> four_block_mat ?A1.0 ?A2.0 ?A3.0 ?A4.0 =
          four_block_mat ?B1.0 ?B2.0 ?B3.0 ?B4.0",
     template_implication
      ([template_equation (template_var 7, template_var 6),
        template_equation (template_var 5, template_var 4),
        template_equation (template_var 3, template_var 2),
        template_equation (template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 7),
               template_var 5),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 6),
               template_var 4),
             template_var 2),
           template_var 0)))),
    ("Matrix.mult_minus_distrib_mat_vec",
     "[| ?A : carrier_mat ?nr ?nc; ?v : carrier_vec ?nc;
         ?w : carrier_vec ?nc |]
      ==> ?A *\<^sub>v (?v - ?w) = ?A *\<^sub>v ?v - ?A *\<^sub>v ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 0))))),
    ("Matrix.row_add",
     "[| ?A : carrier_mat ?nr ?nc; ?B : carrier_mat ?nr ?nc; ?i < ?nr |]
      ==> row (?A + ?B) ?i = row ?A ?i + row ?B ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_inequation (less_than, template_var 0, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Matrix.col_add",
     "[| ?A : carrier_mat ?nr ?nc; ?B : carrier_mat ?nr ?nc; ?j < ?nc |]
      ==> col (?A + ?B) ?j = col ?A ?j + col ?B ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Matrix.assoc_mult_mat",
     "[| ?A : carrier_mat ?n\<^sub>1 ?n\<^sub>2;
         ?B : carrier_mat ?n\<^sub>2 ?n\<^sub>3;
         ?C : carrier_mat ?n\<^sub>3 ?n\<^sub>4 |]
      ==> ?A * ?B * ?C = ?A * (?B * ?C)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 6),
              template_app
               (template_app (template_hole 2, template_var 5),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 4),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 6),
               template_var 3)),
           template_var 1),
         template_app
          (template_app (template_hole 0, template_var 6),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1))))),
    ("Matrix.mult_add_distrib_mat_vec",
     "[| ?A : carrier_mat ?nr ?nc; ?v\<^sub>1 : carrier_vec ?nc;
         ?v\<^sub>2 : carrier_vec ?nc |]
      ==> ?A *\<^sub>v (?v\<^sub>1 + ?v\<^sub>2) =
          ?A *\<^sub>v ?v\<^sub>1 + ?A *\<^sub>v ?v\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 0))))),
    ("Matrix.assoc_add_mat",
     "[| ?A : carrier_mat ?nr ?nc; ?B : carrier_mat ?nr ?nc;
         ?C : carrier_mat ?nr ?nc |]
      ==> ?A + ?B + ?C = ?A + (?B + ?C)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Matrix.minus_add_minus_mat",
     "[| ?u : carrier_mat ?nr ?nc; ?v : carrier_mat ?nr ?nc;
         ?w : carrier_mat ?nr ?nc |]
      ==> ?u - (?v + ?w) = ?u - ?v - ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1)),
           template_var 0)))),
    ("Matrix.index_finsum_vec",
     "[| finite ?F; ?i < ?n; ?vs : ?F \<rightarrow> carrier_vec ?n |]
      ==> finsum_vec TYPE(?'a) ?n ?vs ?F $ ?i = (SUM f:?F. ?vs f $ ?i)",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 3)),
        template_inequation (less_than, template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 3), t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 1),
                 template_var 0),
               template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 0, t_empty), template_var 3)))),
    ("Matrix.row_add",
     "[| ?i < dim_row ?A; dim_row ?B = dim_row ?A;
         dim_col ?B = dim_col ?A |]
      ==> row (?A + ?B) ?i = row ?A ?i + row ?B ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app (template_hole 4, template_var 0),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 2))))),
    ("Matrix.minus_mult_distrib_mat_vec",
     "[| ?A : carrier_mat ?nr ?nc; ?B : carrier_mat ?nr ?nc;
         ?v : carrier_vec ?nc |]
      ==> (?A - ?B) *\<^sub>v ?v = ?A *\<^sub>v ?v - ?B *\<^sub>v ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Matrix.add_mult_distrib_mat_vec",
     "[| ?A : carrier_mat ?nr ?nc; ?B : carrier_mat ?nr ?nc;
         ?v : carrier_vec ?nc |]
      ==> (?A + ?B) *\<^sub>v ?v = ?A *\<^sub>v ?v + ?B *\<^sub>v ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Matrix.mat_mult_append",
     "[| ?A : carrier_mat ?nr1.0 ?nc; ?B : carrier_mat ?nr2.0 ?nc;
         ?v : carrier_vec ?nc |]
      ==> (?A @\<^sub>r ?B) *\<^sub>v ?v =
          ?A *\<^sub>v ?v @\<^sub>v ?B *\<^sub>v ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 1),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 5),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 5),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Matrix.cong_mk_mat",
     "(!!i j. [| i < ?nr; j < ?nc |] ==> ?f (i, j) = ?f' (i, j)) ==>
      mk_mat ?nr ?nc ?f = mk_mat ?nr ?nc ?f'",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2),
           template_var 0)))),
    ("Matrix.orthogonal_matI",
     "(!!i j.
          [| i < dim_col ?A; j < dim_col ?A |]
          ==> (col ?A i \<bullet> col ?A j = (0::?'a)) = (i ~= j)) ==>
      orthogonal_mat ?A",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Matrix.orthogonalI",
     "(!!i j.
          [| i < length ?vs; j < length ?vs |]
          ==> (?vs ! i \<bullet> ?vs ! j = (0::?'a)) = (i ~= j)) ==>
      orthogonal ?vs",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("Matrix.index_update_mat2",
     "[| ?i' < dim_row ?A; ?j' < dim_col ?A; (?i', ?j') ~= ?ij |]
      ==> (?A |\<^sub>m ?ij \<mapsto> ?a) $$ (?i', ?j') = ?A $$ (?i', ?j')",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 7, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 3)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 3, template_var 4),
                template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 3, template_var 4),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app
            (template_app (template_hole 3, template_var 4),
             template_var 2))))),
    ("Matrix.mult_minus_distrib_mat",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?n ?nc;
         ?C : carrier_mat ?n ?nc |]
      ==> ?A * (?B - ?C) = ?A * ?B - ?A * ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 5),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 5),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 5),
             template_var 0))))),
    ("Matrix.minus_mult_distrib_mat",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?nr ?n;
         ?C : carrier_mat ?n ?nc |]
      ==> (?A - ?B) * ?C = ?A * ?C - ?B * ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 5),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1))))),
    ("Matrix.mult_add_distrib_mat",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?n ?nc;
         ?C : carrier_mat ?n ?nc |]
      ==> ?A * (?B + ?C) = ?A * ?B + ?A * ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 5),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 5),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 5),
             template_var 0))))),
    ("Matrix.add_mult_distrib_mat",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?nr ?n;
         ?C : carrier_mat ?n ?nc |]
      ==> (?A + ?B) * ?C = ?A * ?C + ?B * ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2)),
           template_var 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 5),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1))))),
    ("Matrix.mat_col_eqI",
     "[| !!i. i < dim_col ?B ==> col ?A i = col ?B i;
         dim_row ?A = dim_row ?B; dim_col ?A = dim_col ?B |]
      ==> ?A = ?B",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_equation
         (template_app (template_hole 1, template_var 0),
          template_app (template_hole 1, template_var 1)),
        template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 5, template_var 1))],
       template_equation (template_var 0, template_var 1))),
    ("Matrix.eq_rowI",
     "[| !!i. i < dim_row ?B ==> row ?A i = row ?B i;
         dim_row ?A = dim_row ?B; dim_col ?A = dim_col ?B |]
      ==> ?A = ?B",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app (template_hole 1, template_var 0),
          template_app (template_hole 1, template_var 1))],
       template_equation (template_var 0, template_var 1))),
    ("Matrix.row_mult",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?n ?nc; ?i < ?nr |]
      ==> row (?A * ?B) ?i = vec ?nc (%j. row ?A ?i \<bullet> col ?B j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_var 1))
            ),
        template_inequation (less_than, template_var 0, template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 5),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("Matrix.col_mult",
     "[| ?A : carrier_mat ?nr ?n; ?B : carrier_mat ?n ?nc; ?j < ?nc |]
      ==> col (?A * ?B) ?j = vec ?nr (%i. row ?A i \<bullet> col ?B ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_var 1))
            ),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 5),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_var 4), t_empty)))),
    ("Matrix.split_block",
     "[| split_block ?A ?sr1.0 ?sc1.0 = (?A1.0, ?A2.0, ?A3.0, ?A4.0);
         dim_row ?A = ?sr1.0 + ?sr2.0; dim_col ?A = ?sc1.0 + ?sc2.0 |]
      ==> ?A1.0 : carrier_mat ?sr1.0 ?sc1.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 8),
              template_var 7),
            template_var 6),
          template_app
           (template_app (template_hole 8, template_var 5),
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2)))),
        template_equation
         (template_app (template_hole 4, template_var 8),
          template_app
           (template_app (template_hole 3, template_var 7),
            template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 8),
          template_app
           (template_app (template_hole 3, template_var 6),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 5),
             template_app
              (template_app (template_hole 0, template_var 7),
               template_var 6))
           ))),
    ("Matrix.split_block",
     "[| split_block ?A ?sr1.0 ?sc1.0 = (?A1.0, ?A2.0, ?A3.0, ?A4.0);
         dim_row ?A = ?sr1.0 + ?sr2.0; dim_col ?A = ?sc1.0 + ?sc2.0 |]
      ==> ?A2.0 : carrier_mat ?sr1.0 ?sc2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 8),
              template_var 7),
            template_var 6),
          template_app
           (template_app (template_hole 8, template_var 5),
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2)))),
        template_equation
         (template_app (template_hole 4, template_var 8),
          template_app
           (template_app (template_hole 3, template_var 7),
            template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 8),
          template_app
           (template_app (template_hole 3, template_var 6),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 7),
               template_var 0))
           ))),
    ("Matrix.split_block",
     "[| split_block ?A ?sr1.0 ?sc1.0 = (?A1.0, ?A2.0, ?A3.0, ?A4.0);
         dim_row ?A = ?sr1.0 + ?sr2.0; dim_col ?A = ?sc1.0 + ?sc2.0 |]
      ==> ?A3.0 : carrier_mat ?sr2.0 ?sc1.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 8),
              template_var 7),
            template_var 6),
          template_app
           (template_app (template_hole 8, template_var 5),
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2)))),
        template_equation
         (template_app (template_hole 4, template_var 8),
          template_app
           (template_app (template_hole 3, template_var 7),
            template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 8),
          template_app
           (template_app (template_hole 3, template_var 6),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 6))
           ))),
    ("Matrix.split_block",
     "[| split_block ?A ?sr1.0 ?sc1.0 = (?A1.0, ?A2.0, ?A3.0, ?A4.0);
         dim_row ?A = ?sr1.0 + ?sr2.0; dim_col ?A = ?sc1.0 + ?sc2.0 |]
      ==> ?A4.0 : carrier_mat ?sr2.0 ?sc2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 8),
              template_var 7),
            template_var 6),
          template_app
           (template_app (template_hole 8, template_var 5),
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2)))),
        template_equation
         (template_app (template_hole 4, template_var 8),
          template_app
           (template_app (template_hole 3, template_var 7),
            template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 8),
          template_app
           (template_app (template_hole 3, template_var 6),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Matrix.undef_cong_mat",
     "(!!i j. [| i < ?nr; j < ?nc |] ==> ?f (i, j) = ?f' (i, j)) ==>
      undef_mat ?nr ?nc ?f ?x = undef_mat ?nr ?nc ?f' ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 1),
           template_var 0)))),
    ("Matrix.split_block",
     "[| split_block ?A ?sr1.0 ?sc1.0 = (?A1.0, ?A2.0, ?A3.0, ?A4.0);
         dim_row ?A = ?sr1.0 + ?sr2.0; dim_col ?A = ?sc1.0 + ?sc2.0 |]
      ==> ?A = four_block_mat ?A1.0 ?A2.0 ?A3.0 ?A4.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 9, template_var 8),
              template_var 7),
            template_var 6),
          template_app
           (template_app (template_hole 8, template_var 5),
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2)))),
        template_equation
         (template_app (template_hole 4, template_var 8),
          template_app
           (template_app (template_hole 3, template_var 7),
            template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 8),
          template_app
           (template_app (template_hole 3, template_var 6),
            template_var 0))],
       template_equation
        (template_var 8,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 4),
             template_var 3),
           template_var 2)))),
    ("Matrix.pow_four_block_mat",
     "[| ?A : carrier_mat ?n ?n; ?B : carrier_mat ?m ?m |]
      ==> four_block_mat ?A (0\<^sub>m ?n ?m) (0\<^sub>m ?m ?n) ?B ^\<^sub>m
          ?k =
          four_block_mat (?A ^\<^sub>m ?k) (0\<^sub>m ?n ?m)
           (0\<^sub>m ?m ?n) (?B ^\<^sub>m ?k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3)),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 3)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Matrix.append_vec_add",
     "[| ?v : carrier_vec ?n; ?v' : carrier_vec ?n; ?w : carrier_vec ?m;
         ?w' : carrier_vec ?m |]
      ==> ?v @\<^sub>v ?w + (?v' @\<^sub>v ?w') =
          (?v + ?v') @\<^sub>v ?w + ?w'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_app (template_hole 3, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app (template_hole 3, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 5),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Matrix.scalar_prod_append",
     "[| ?v1.0 : carrier_vec ?n1.0; ?v2.0 : carrier_vec ?n2.0;
         ?w1.0 : carrier_vec ?n1.0; ?w2.0 : carrier_vec ?n2.0 |]
      ==> (?v1.0 @\<^sub>v ?v2.0) \<bullet> (?w1.0 @\<^sub>v ?w2.0) =
          ?v1.0 \<bullet> ?w1.0 + ?v2.0 \<bullet> ?w2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app (template_hole 4, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 5),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 5),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 0))))),
    ("Matrix.assoc_scalar_prod",
     "[| ?v\<^sub>1 : carrier_vec ?nr; ?A : carrier_mat ?nr ?nc;
         ?v\<^sub>2 : carrier_vec ?nc |]
      ==> vec ?nc (%j. ?v\<^sub>1 \<bullet> col ?A j) \<bullet> ?v\<^sub>2 =
          ?v\<^sub>1 \<bullet> vec ?nr (%i. row ?A i \<bullet> ?v\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app (template_hole 7, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1), t_empty)),
           template_var 0),
         template_app
          (template_app (template_hole 3, template_var 4),
           template_app
            (template_app (template_hole 2, template_var 3), t_empty))))),
    ("Matrix.mat_eq_iff",
     "(?x = ?y) =
      (dim_row ?x = dim_row ?y &
       dim_col ?x = dim_col ?y &
       (ALL i j.
           i < dim_row ?y -->
           j < dim_col ?y --> ?x $$ (i, j) = ?y $$ (i, j)))",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_var 1)),
                 template_app (template_hole 7, template_var 0))),
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 6, template_var 1)),
                   template_app (template_hole 6, template_var 0))),
               template_app (template_hole 5, t_empty)))
           ))),
    ("Matrix.carrier_vec_induct",
     "[| ?v : carrier_vec ?n; ?P 0 vNil;
         !!n a v.
            [| v : carrier_vec n; ?P n v |] ==> ?P (Suc n) (vCons a v) |]
      ==> ?P ?n ?v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 9, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_var 0, template_hole 8),
              template_app
               (template_app (template_hole 7, template_hole 8),
                template_app (template_hole 6, template_hole 5)))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 1), template_var 2)
           ))),
    ("Matrix.finsum_vec_insert",
     "[| finite ?F; ?a ~: ?F; ?f : ?F \<rightarrow> carrier_vec ?n;
         ?f ?a : carrier_vec ?n |]
      ==> finsum_vec TYPE(?'a) ?n ?f (insert ?a ?F) =
          ?f ?a + finsum_vec TYPE(?'a) ?n ?f ?F",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 3)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app
               (template_app (template_hole 7, template_var 3), t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app (template_var 1, template_var 2)),
              template_app (template_hole 6, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0),
             template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 3)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_var 1, template_var 2)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 0),
               template_var 1),
             template_var 3))))),
    ("Matrix.similar_mat_four_block_0_0",
     "[| similar_mat ?A1.0 ?B1.0; similar_mat ?A2.0 ?B2.0;
         ?A1.0 : carrier_mat ?n ?n; ?A2.0 : carrier_mat ?m ?m |]
      ==> similar_mat
           (four_block_mat ?A1.0 (0\<^sub>m ?n ?m) (0\<^sub>m ?m ?n) ?A2.0)
           (four_block_mat ?B1.0 (0\<^sub>m ?n ?m) (0\<^sub>m ?m ?n)
             ?B2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 5),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)),
                 template_var 3)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_var 2))
           ))),
    ("Matrix.similar_matI",
     "[| {?A, ?B, ?P, ?Q} <= carrier_mat ?n ?n; ?P * ?Q = 1\<^sub>m ?n;
         ?Q * ?P = 1\<^sub>m ?n; ?A = ?P * ?B * ?Q |]
      ==> similar_mat ?A ?B",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 6, template_var 4),
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_hole 5)))),
          template_app
           (template_app (template_hole 4, template_var 0),
            template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 2),
          template_app (template_hole 1, template_var 0)),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_hole 2,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 3)),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 4), template_var 3)
           ))),
    ("Matrix.cong_mat",
     "[| ?nr = ?nr'; ?nc = ?nc';
         !!i j. [| i < ?nr; j < ?nc |] ==> ?f (i, j) = ?f' (i, j) |]
      ==> mat ?nr ?nc ?f = mat ?nr' ?nc' ?f'",
     template_implication
      ([template_equation (template_var 5, template_var 4),
        template_equation (template_var 3, template_var 2),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 5),
             template_var 3),
           template_var 1),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 2),
           template_var 0)))),
    ("Matrix.mat_of_row_mult_append_rows",
     "[| ?y1.0 : carrier_vec ?nr1.0; ?y2.0 : carrier_vec ?nr2.0;
         ?A1.0 : carrier_mat ?nr1.0 ?nc; ?A2.0 : carrier_mat ?nr2.0 ?nc |]
      ==> mat_of_row (?y1.0 @\<^sub>v ?y2.0) * (?A1.0 @\<^sub>r ?A2.0) =
          mat_of_row ?y1.0 * ?A1.0 + mat_of_row ?y2.0 * ?A2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 6),
              template_app (template_hole 8, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app (template_hole 8, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_var 5),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 6),
                 template_var 4))),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 6)),
               template_var 2)),
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 4)),
             template_var 0))))),
    ("Matrix.transpose_four_block_mat",
     "[| ?A : carrier_mat ?nr1.0 ?nc1.0; ?B : carrier_mat ?nr1.0 ?nc2.0;
         ?C : carrier_mat ?nr2.0 ?nc1.0; ?D : carrier_mat ?nr2.0 ?nc2.0 |]
      ==> (four_block_mat ?A ?B ?C ?D)\<^sup>T =
          four_block_mat ?A\<^sup>T ?C\<^sup>T ?B\<^sup>T ?D\<^sup>T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 7),
              template_app
               (template_app (template_hole 3, template_var 6),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 6),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 3))
            )],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 7),
                 template_var 4),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 7)),
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 1, template_var 4)),
           template_app (template_hole 1, template_var 0))))),
    ("Matrix.similar_matD",
     "similar_mat ?A ?B ==>
      EX n P Q.
         {?A, ?B, P, Q} <= carrier_mat n n &
         P * Q = 1\<^sub>m n & Q * P = 1\<^sub>m n & ?A = P * ?B * Q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Matrix.eq_matI",
     "[| !!i j.
            [| i < dim_row ?B; j < dim_col ?B |]
            ==> ?A $$ (i, j) = ?B $$ (i, j);
         dim_row ?A = dim_row ?B; dim_col ?A = dim_col ?B |]
      ==> ?A = ?B",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 5, template_var 1))],
       template_equation (template_var 0, template_var 1))),
    ("Matrix.elements_four_block_mat",
     "[| ?A : carrier_mat ?nr1.0 ?nc1.0; ?B : carrier_mat ?nr1.0 ?nc2.0;
         ?C : carrier_mat ?nr2.0 ?nc1.0; ?D : carrier_mat ?nr2.0 ?nc2.0 |]
      ==> elements_mat (four_block_mat ?A ?B ?C ?D)
          <= elements_mat ?A Un elements_mat ?B Un elements_mat ?C Un
             elements_mat ?D",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 7),
              template_app
               (template_app (template_hole 4, template_var 6),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 6),
                template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 3))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 7),
                 template_var 4),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 2, template_var 7)),
                   template_app (template_hole 2, template_var 4))),
               template_app (template_hole 2, template_var 2))),
           template_app (template_hole 2, template_var 0))))),
    ("Matrix.append_rows_le",
     "[| ?A : carrier_mat ?nr1.0 ?nc; ?B : carrier_mat ?nr2.0 ?nc;
         ?a : carrier_vec ?nr1.0; ?v : carrier_vec ?nc |]
      ==> ((?A @\<^sub>r ?B) *\<^sub>v ?v <= ?a @\<^sub>v ?b) =
          (?A *\<^sub>v ?v <= ?a & ?B *\<^sub>v ?v <= ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 7),
              template_app
               (template_app (template_hole 8, template_var 6),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 4),
              template_app
               (template_app (template_hole 8, template_var 3),
                template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app (template_hole 6, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 5))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 7),
                   template_var 4)),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 7),
                   template_var 1)),
               template_var 2)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 1)),
             template_var 0))))),
    ("Matrix.mult_mat_vec_split",
     "[| ?A : carrier_mat ?n ?n; ?D : carrier_mat ?m ?m;
         ?a : carrier_vec ?n; ?d : carrier_vec ?m |]
      ==> four_block_mat ?A (0\<^sub>m ?n ?m) (0\<^sub>m ?m ?n) ?D *\<^sub>v
          (?a @\<^sub>v ?d) =
          ?A *\<^sub>v ?a @\<^sub>v ?D *\<^sub>v ?d",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 5),
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 4)),
               template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 5),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 0))))),
    ("Matrix.row_four_block_mat",
     "[| ?A : carrier_mat ?nr1.0 ?nc1.0; ?B : carrier_mat ?nr1.0 ?nc2.0;
         ?C : carrier_mat ?nr2.0 ?nc1.0; ?D : carrier_mat ?nr2.0 ?nc2.0;
         ?i < ?nr1.0 |]
      ==> row (four_block_mat ?A ?B ?C ?D) ?i =
          row ?A ?i @\<^sub>v row ?B ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 8),
              template_app
               (template_app (template_hole 5, template_var 7),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_app
               (template_app (template_hole 5, template_var 7),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 4))
            ),
        template_inequation (less_than, template_var 0, template_var 7)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 8),
                   template_var 5),
                 template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 8),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 5),
             template_var 0))))),
    ("Matrix.col_four_block_mat",
     "[| ?A : carrier_mat ?nr1.0 ?nc1.0; ?B : carrier_mat ?nr1.0 ?nc2.0;
         ?C : carrier_mat ?nr2.0 ?nc1.0; ?D : carrier_mat ?nr2.0 ?nc2.0;
         ?j < ?nc1.0 |]
      ==> col (four_block_mat ?A ?B ?C ?D) ?j =
          col ?A ?j @\<^sub>v col ?C ?j",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 8),
              template_app
               (template_app (template_hole 5, template_var 7),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 5),
              template_app
               (template_app (template_hole 5, template_var 7),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 4))
            ),
        template_inequation (less_than, template_var 0, template_var 6)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 8),
                   template_var 5),
                 template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 8),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 0))))),
    ("Matrix.map_four_block_mat",
     "[| ?A : carrier_mat ?nr1.0 ?nc1.0; ?B : carrier_mat ?nr1.0 ?nc2.0;
         ?C : carrier_mat ?nr2.0 ?nc1.0; ?D : carrier_mat ?nr2.0 ?nc2.0 |]
      ==> map_mat ?f (four_block_mat ?A ?B ?C ?D) =
          four_block_mat (map_mat ?f ?A) (map_mat ?f ?B) (map_mat ?f ?C)
           (map_mat ?f ?D)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 8),
              template_app
               (template_app (template_hole 4, template_var 7),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_app (template_hole 4, template_var 7),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 4))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 8),
                 template_var 5),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 2, template_var 0),
                   template_var 8)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 5)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_var 3)),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1))))),
    ("Matrix.smult_four_block_mat",
     "[| ?A : carrier_mat ?nr1.0 ?nc1.0; ?B : carrier_mat ?nr1.0 ?nc2.0;
         ?C : carrier_mat ?nr2.0 ?nc1.0; ?D : carrier_mat ?nr2.0 ?nc2.0 |]
      ==> ?a \<cdot>\<^sub>m four_block_mat ?A ?B ?C ?D =
          four_block_mat (?a \<cdot>\<^sub>m ?A) (?a \<cdot>\<^sub>m ?B)
           (?a \<cdot>\<^sub>m ?C) (?a \<cdot>\<^sub>m ?D)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 8),
              template_app
               (template_app (template_hole 3, template_var 7),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 5),
              template_app
               (template_app (template_hole 3, template_var 7),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 4))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 8),
                 template_var 5),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 8)),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 5)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1))))),
    ("Matrix.similar_mat_four_block_0_ex",
     "[| similar_mat ?A1.0 ?B1.0; similar_mat ?A2.0 ?B2.0;
         ?A0.0 : carrier_mat ?n ?m; ?A1.0 : carrier_mat ?n ?n;
         ?A2.0 : carrier_mat ?m ?m |]
      ==> EX B0.
             B0 : carrier_mat ?n ?m &
             similar_mat
              (four_block_mat ?A1.0 ?A0.0 (0\<^sub>m ?m ?n) ?A2.0)
              (four_block_mat ?B1.0 B0 (0\<^sub>m ?m ?n) ?B2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 6),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app
               (template_app (template_hole 4, template_var 0),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Matrix.diag_block_upper_triangular",
     "[| !!A i j.
            [| A : set ?As; j < i; i < dim_row A |]
            ==> A $$ (i, j) = (0::?'a);
         Ball (set ?As) square_mat; ?j < ?i;
         ?i < dim_row (diag_block_mat ?As) |]
      ==> diag_block_mat ?As $$ (?i, ?j) = (0::?'a)",
     template_implication
      ([template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 9, template_var 2)),
              template_hole 1)
            ),
        template_inequation (less_than, template_var 1, template_var 0),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_hole 7,
            template_app (template_hole 0, template_var 2)))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 0, template_var 2)),
           template_app
            (template_app (template_hole 4, template_var 0),
             template_var 1)),
         template_hole 3))),
    ("Matrix.similar_mat_witI",
     "[| ?P * ?Q = 1\<^sub>m ?n; ?Q * ?P = 1\<^sub>m ?n; ?A = ?P * ?B * ?Q;
         ?A : carrier_mat ?n ?n; ?B : carrier_mat ?n ?n;
         ?P : carrier_mat ?n ?n; ?Q : carrier_mat ?n ?n |]
      ==> similar_mat_wit ?A ?B ?P ?Q",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 4), template_var 3),
          template_app (template_hole 3, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 4),
          template_app (template_hole 3, template_var 2)),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 4, template_var 4),
                template_var 0)),
            template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 4),
             template_var 3)
           ))),
    ("Matrix.row_four_block_mat",
     "[| ?A : carrier_mat ?nr1.0 ?nc1.0; ?B : carrier_mat ?nr1.0 ?nc2.0;
         ?C : carrier_mat ?nr2.0 ?nc1.0; ?D : carrier_mat ?nr2.0 ?nc2.0;
         ~ ?i < ?nr1.0; ?i < ?nr1.0 + ?nr2.0 |]
      ==> row (four_block_mat ?A ?B ?C ?D) ?i =
          row ?C (?i - ?nr1.0) @\<^sub>v row ?D (?i - ?nr1.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 8),
              template_app
               (template_app (template_hole 8, template_var 7),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_app
               (template_app (template_hole 8, template_var 7),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 4))
            ),
        template_negation
         (template_inequation (less_than, template_var 0, template_var 7)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 5, template_var 7),
            template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 8),
                   template_var 5),
                 template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 7))),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 7)))))),
    ("Matrix.col_four_block_mat",
     "[| ?A : carrier_mat ?nr1.0 ?nc1.0; ?B : carrier_mat ?nr1.0 ?nc2.0;
         ?C : carrier_mat ?nr2.0 ?nc1.0; ?D : carrier_mat ?nr2.0 ?nc2.0;
         ~ ?j < ?nc1.0; ?j < ?nc1.0 + ?nc2.0 |]
      ==> col (four_block_mat ?A ?B ?C ?D) ?j =
          col ?B (?j - ?nc1.0) @\<^sub>v col ?D (?j - ?nc1.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 8),
              template_app
               (template_app (template_hole 8, template_var 7),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 5),
              template_app
               (template_app (template_hole 8, template_var 7),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 4))
            ),
        template_negation
         (template_inequation (less_than, template_var 0, template_var 6)),
        template_inequation
         (less_than, template_var 0,
          template_app
           (template_app (template_hole 5, template_var 6),
            template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 2, template_var 8),
                   template_var 5),
                 template_var 3),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 3, template_var 5),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 6))),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 6)))))),
    ("Matrix.index_mat_four_block",
     "[| ?i < dim_row ?A + dim_row ?D; ?j < dim_col ?A + dim_col ?D |]
      ==> four_block_mat ?A ?B ?C ?D $$ (?i, ?j) =
          (if ?i < dim_row ?A
           then if ?j < dim_col ?A then ?A $$ (?i, ?j)
                else ?B $$ (?i, ?j - dim_col ?A)
           else if ?j < dim_col ?A then ?C $$ (?i - dim_row ?A, ?j)
                else ?D $$ (?i - dim_row ?A, ?j - dim_col ?A))",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 4)),
            template_app (template_hole 7, template_var 3))),
        template_inequation
         (less_than, template_var 2,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 6, template_var 4)),
            template_app (template_hole 6, template_var 3)))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, template_var 4),
                   template_var 1),
                 template_var 0),
               template_var 3)),
           template_app
            (template_app (template_hole 2, template_var 5),
             template_var 2)),
         template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 9, template_var 5),
                 template_app (template_hole 7, template_var 4))),
             template_app
              (template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 9, template_var 2),
                     template_app (template_hole 6, template_var 4))),
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_app
                    (template_app (template_hole 2, template_var 5),
                     template_var 2))),
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_app (template_hole 6, template_var 4)))))),
           template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 9, template_var 2),
                   template_app (template_hole 6, template_var 4))),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 0, template_var 5),
                       template_app (template_hole 7, template_var 4))),
                   template_var 2))),
             template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 5),
                     template_app (template_hole 7, template_var 4))),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_app (template_hole 6, template_var 4))))))))),
    ("Matrix.add_four_block_mat",
     "[| ?A1.0 : carrier_mat ?nr1.0 ?nc1.0;
         ?B1.0 : carrier_mat ?nr1.0 ?nc2.0;
         ?C1.0 : carrier_mat ?nr2.0 ?nc1.0;
         ?D1.0 : carrier_mat ?nr2.0 ?nc2.0;
         ?A2.0 : carrier_mat ?nr1.0 ?nc1.0;
         ?B2.0 : carrier_mat ?nr1.0 ?nc2.0;
         ?C2.0 : carrier_mat ?nr2.0 ?nc1.0;
         ?D2.0 : carrier_mat ?nr2.0 ?nc2.0 |]
      ==> four_block_mat ?A1.0 ?B1.0 ?C1.0 ?D1.0 +
          four_block_mat ?A2.0 ?B2.0 ?C2.0 ?D2.0 =
          four_block_mat (?A1.0 + ?A2.0) (?B1.0 + ?B2.0) (?C1.0 + ?C2.0)
           (?D1.0 + ?D2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 11),
              template_app
               (template_app (template_hole 3, template_var 10),
                template_var 9))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 8),
              template_app
               (template_app (template_hole 3, template_var 10),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6),
              template_app
               (template_app (template_hole 3, template_var 5),
                template_var 9))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 5),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 10),
                template_var 9))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 10),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_app (template_hole 3, template_var 5),
                template_var 9))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 5),
                template_var 7))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 11),
                   template_var 8),
                 template_var 6),
               template_var 4)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 11),
                   template_var 3)),
               template_app
                (template_app (template_hole 1, template_var 8),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 6),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 0))))),
    ("Matrix.similar_mat_wit_four_block",
     "[| similar_mat_wit ?A1.0 ?B1.0 ?P1.0 ?Q1.0;
         similar_mat_wit ?A2.0 ?B2.0 ?P2.0 ?Q2.0;
         ?URA = ?P1.0 * ?UR * ?Q2.0; ?LLA = ?P2.0 * ?LL * ?Q1.0;
         ?A1.0 : carrier_mat ?n ?n; ?A2.0 : carrier_mat ?m ?m;
         ?LL : carrier_mat ?m ?n; ?UR : carrier_mat ?n ?m |]
      ==> similar_mat_wit (four_block_mat ?A1.0 ?URA ?LLA ?A2.0)
           (four_block_mat ?B1.0 ?UR ?LL ?B2.0)
           (four_block_mat ?P1.0 (0\<^sub>m ?n ?m) (0\<^sub>m ?m ?n) ?P2.0)
           (four_block_mat ?Q1.0 (0\<^sub>m ?n ?m) (0\<^sub>m ?m ?n)
             ?Q2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 13),
                  template_var 12),
                template_var 11),
              template_var 10)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 9),
                  template_var 8),
                template_var 7),
              template_var 6)
            ),
        template_equation
         (template_var 5,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 4, template_var 11),
                template_var 4)),
            template_var 6)),
        template_equation
         (template_var 3,
          template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 4, template_var 7),
                template_var 2)),
            template_var 10)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 13),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 9),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 0),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 13),
                         template_var 5),
                       template_var 3),
                     template_var 9)),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 12),
                       template_var 4),
                     template_var 2),
                   template_var 8)),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 11),
                     template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 1)),
                 template_var 7)),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 10),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_var 6))
           ))),
    ("Matrix.mult_four_block_mat",
     "[| ?A1.0 : carrier_mat ?nr1.0 ?n1.0; ?B1.0 : carrier_mat ?nr1.0 ?n2.0;
         ?C1.0 : carrier_mat ?nr2.0 ?n1.0; ?D1.0 : carrier_mat ?nr2.0 ?n2.0;
         ?A2.0 : carrier_mat ?n1.0 ?nc1.0; ?B2.0 : carrier_mat ?n1.0 ?nc2.0;
         ?C2.0 : carrier_mat ?n2.0 ?nc1.0;
         ?D2.0 : carrier_mat ?n2.0 ?nc2.0 |]
      ==> four_block_mat ?A1.0 ?B1.0 ?C1.0 ?D1.0 *
          four_block_mat ?A2.0 ?B2.0 ?C2.0 ?D2.0 =
          four_block_mat (?A1.0 * ?A2.0 + ?B1.0 * ?C2.0)
           (?A1.0 * ?B2.0 + ?B1.0 * ?D2.0) (?C1.0 * ?A2.0 + ?D1.0 * ?C2.0)
           (?C1.0 * ?B2.0 + ?D1.0 * ?D2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 13),
              template_app
               (template_app (template_hole 4, template_var 12),
                template_var 11))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 10),
              template_app
               (template_app (template_hole 4, template_var 12),
                template_var 9))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 8),
              template_app
               (template_app (template_hole 4, template_var 7),
                template_var 11))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 6),
              template_app
               (template_app (template_hole 4, template_var 7),
                template_var 9))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 5),
              template_app
               (template_app (template_hole 4, template_var 11),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 11),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 9),
                template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 9),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 13),
                   template_var 10),
                 template_var 8),
               template_var 6)),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app
                      (template_app (template_hole 2, template_var 13),
                       template_var 5)),
                   template_app
                    (template_app (template_hole 2, template_var 10),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 2, template_var 13),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 2, template_var 10),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 2, template_var 8),
                   template_var 5)),
               template_app
                (template_app (template_hole 2, template_var 6),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 2, template_var 8),
                 template_var 3)),
             template_app
              (template_app (template_hole 2, template_var 6),
               template_var 0)))))),
    ("Matrix.assoc_four_block_mat",
     "four_block_mat ?A
       (0\<^sub>m (dim_row ?A)
         (dim_col
           (four_block_mat ?B (0\<^sub>m (dim_row ?B) (dim_col ?C))
             (0\<^sub>m (dim_row ?C) (dim_col ?B)) ?C)))
       (0\<^sub>m
         (dim_row
           (four_block_mat ?B (0\<^sub>m (dim_row ?B) (dim_col ?C))
             (0\<^sub>m (dim_row ?C) (dim_col ?B)) ?C))
         (dim_col ?A))
       (four_block_mat ?B (0\<^sub>m (dim_row ?B) (dim_col ?C))
         (0\<^sub>m (dim_row ?C) (dim_col ?B)) ?C) =
      four_block_mat
       (four_block_mat ?A (0\<^sub>m (dim_row ?A) (dim_col ?B))
         (0\<^sub>m (dim_row ?B) (dim_col ?A)) ?B)
       (0\<^sub>m
         (dim_row
           (four_block_mat ?A (0\<^sub>m (dim_row ?A) (dim_col ?B))
             (0\<^sub>m (dim_row ?B) (dim_col ?A)) ?B))
         (dim_col ?C))
       (0\<^sub>m (dim_row ?C)
         (dim_col
           (four_block_mat ?A (0\<^sub>m (dim_row ?A) (dim_col ?B))
             (0\<^sub>m (dim_row ?B) (dim_col ?A)) ?B)))
       ?C",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 2)),
               template_app
                (template_hole 0,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 1),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app (template_hole 1, template_var 1)),
                         template_app (template_hole 0, template_var 0))),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_var 0)),
                       template_app (template_hole 0, template_var 1))),
                   template_var 0)))),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 3, template_var 1),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app (template_hole 1, template_var 1)),
                         template_app (template_hole 0, template_var 0))),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_var 0)),
                       template_app (template_hole 0, template_var 1))),
                   template_var 0))),
             template_app (template_hole 0, template_var 2))),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 1)),
                 template_app (template_hole 0, template_var 0))),
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 0, template_var 1))),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_var 2)),
                       template_app (template_hole 0, template_var 1))),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 1)),
                     template_app (template_hole 0, template_var 2))),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_var 2),
                         template_app
                          (template_app
                            (template_hole 2,
                             template_app
                              (template_hole 1, template_var 2)),
                           template_app (template_hole 0, template_var 1))),
                       template_app
                        (template_app
                          (template_hole 2,
                           template_app (template_hole 1, template_var 1)),
                         template_app (template_hole 0, template_var 2))),
                     template_var 1))),
               template_app (template_hole 0, template_var 0))),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 3, template_var 2),
                     template_app
                      (template_app
                        (template_hole 2,
                         template_app (template_hole 1, template_var 2)),
                       template_app (template_hole 0, template_var 1))),
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app (template_hole 1, template_var 1)),
                     template_app (template_hole 0, template_var 2))),
                 template_var 1)))),
         template_var 0)))]:
   (string * thm * template) list
### theory "Draft.MatrixTemplates"
### 0.626s elapsed time, 0.754s cpu time, 0.098s GC time
val it = (): unit
