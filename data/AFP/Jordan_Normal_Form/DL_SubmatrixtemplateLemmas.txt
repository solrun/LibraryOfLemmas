   [("DL_Submatrix.submatrix_split",
     "submatrix ?A ?I ?J = submatrix (submatrix ?A UNIV ?J) ?I UNIV",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_hole 0),
               template_var 0)),
           template_var 1),
         template_hole 0))),
    ("DL_Submatrix.dim_submatrix",
     "dim_col (submatrix ?A ?I ?J) = card {j. j < dim_col ?A & j : ?J}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("DL_Submatrix.dim_submatrix",
     "dim_row (submatrix ?A ?I ?J) = card {i. i < dim_row ?A & i : ?I}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("DL_Submatrix.set_le_in", "{a. a < ?n & a : ?I} = {a: ?I. a < ?n}",
     template_equation
      (template_app (template_hole 3, t_empty),
       template_app (template_hole 3, t_empty))),
    ("DL_Submatrix.submatrix_index",
     "[| ?i < card {i. i < dim_row ?A & i : ?I};
         ?j < card {j. j < dim_col ?A & j : ?J} |]
      ==> submatrix ?A ?I ?J $$ (?i, ?j) = ?A $$ (pick ?I ?i, pick ?J ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app
           (template_hole 10, template_app (template_hole 9, t_empty))),
        template_inequation
         (less_than, template_var 1,
          template_app
           (template_hole 10, template_app (template_hole 9, t_empty)))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 4),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 4)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("DL_Submatrix.submatrix_index_card",
     "[| ?i < dim_row ?A; ?j < dim_col ?A; ?i : ?I; ?j : ?J |]
      ==> submatrix ?A ?I ?J $$
          (card {a: ?I. a < ?i}, card {a: ?J. a < ?j}) =
          ?A $$ (?i, ?j)",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 9, template_var 3)),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2, template_app (template_hole 1, t_empty))),
             template_app
              (template_hole 2, template_app (template_hole 1, t_empty)))),
         template_app
          (template_app (template_hole 5, template_var 3),
           template_app
            (template_app (template_hole 3, template_var 4),
             template_var 2)))))]
