Loading theory "Draft.DL_Missing_Sublist" (required by "Draft.DL_Missing_SublistTemplates")
Loading theory "Draft.Templates" (required by "Draft.DL_Missing_SublistTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.086s elapsed time, 0.198s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.DL_Missing_SublistTemplates")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.DL_Missing_Sublist"
### 0.259s elapsed time, 0.531s cpu time, 0.054s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.557s elapsed time, 0.751s cpu time, 0.054s GC time
Loading theory "Draft.DL_Missing_SublistTemplates"
val templateLemmas =
   [("DL_Missing_Sublist.pick_UNIV", "pick UNIV ?j = ?j",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("DL_Missing_Sublist.pick_in_set_inf",
     "infinite ?S ==> pick ?S ?n : ?S",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 1)
           ))),
    ("DL_Missing_Sublist.length_weave",
     "length (weave ?A ?xs ?ys) = length ?xs + length ?ys",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("DL_Missing_Sublist.nths_map",
     "nths (map ?f ?xs) ?A = map ?f (nths ?xs ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("DL_Missing_Sublist.weave_complementary_nthss",
     "weave ?A (nths ?xs ?A) (nths ?xs (- ?A)) = ?xs",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))),
       template_var 0)),
    ("DL_Missing_Sublist.pick_in_set_le",
     "?n < card ?S ==> pick ?S ?n : ?S",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 0)
           ))),
    ("DL_Missing_Sublist.nths_zip",
     "nths (zip ?xs ?ys) ?I = zip (nths ?xs ?I) (nths ?ys ?I)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("DL_Missing_Sublist.pick_in_set",
     "?n < card ?S | infinite ?S ==> pick ?S ?n : ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app (template_hole 4, template_var 0))),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 0)
           ))),
    ("DL_Missing_Sublist.length_nths'",
     "length (nths ?xs ?I) = card {i: ?I. i < length ?xs}",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("DL_Missing_Sublist.pick_eq_iff_inf",
     "infinite ?S ==> (?x = ?y) = (pick ?S ?x = pick ?S ?y)",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 2))
            )],
       template_bimplication
        (template_equation (template_var 1, template_var 0),
         template_equation
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("DL_Missing_Sublist.pick_mono_inf",
     "[| infinite ?S; ?m < ?n |] ==> pick ?S ?m < pick ?S ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 2, template_var 2))
            ),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("DL_Missing_Sublist.nths_replicate",
     "nths (replicate ?n ?x) ?A = replicate (card {i. i < ?n & i : ?A}) ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4, template_app (template_hole 3, t_empty))),
         template_var 1))),
    ("DL_Missing_Sublist.pick_mono_le",
     "[| ?n < card ?S; ?m < ?n |] ==> pick ?S ?m < pick ?S ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 1, template_var 1)),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("DL_Missing_Sublist.prod_list_complementary_nthss",
     "prod_list (map ?f ?xs) =
      prod_list (map ?f (nths ?xs ?A)) *
      prod_list (map ?f (nths ?xs (- ?A)))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 2), template_var 1)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 0))))))),
    ("DL_Missing_Sublist.card_pick_inf",
     "infinite ?S ==> card {a: ?S. a < pick ?S ?n} = ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_var 0))),
    ("DL_Missing_Sublist.pick_card_in_set",
     "?i : ?I ==> pick ?I (card {a: ?I. a < ?i}) = ?i",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_hole 3, template_app (template_hole 2, t_empty))),
         template_var 1))),
    ("DL_Missing_Sublist.pick_le",
     "?n < card {a. a < ?i & a : ?S} ==> pick ?S ?n < ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 4, template_app (template_hole 3, t_empty)))],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_var 1))),
    ("DL_Missing_Sublist.card_pick_le",
     "?n < card ?S ==> card {a: ?S. a < pick ?S ?n} = ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_hole 5, template_app (template_hole 3, t_empty)),
         template_var 1))),
    ("DL_Missing_Sublist.pick_card",
     "pick ?I (card {a: ?I. a < ?i}) = (LEAST a. a : ?I & ?i <= a)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 1),
         template_app
          (template_hole 6, template_app (template_hole 5, t_empty))),
       template_app (template_hole 1, t_empty))),
    ("DL_Missing_Sublist.pick_mono",
     "[| ?n < card ?S | infinite ?S; ?m < ?n |]
      ==> pick ?S ?m < pick ?S ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 3, template_var 1))),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            ),
        template_inequation (less_than, template_var 0, template_var 2)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("DL_Missing_Sublist.card_pick",
     "?n < card ?S | infinite ?S ==> card {a: ?S. a < pick ?S ?n} = ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_app (template_hole 7, template_var 0))),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 7, template_app (template_hole 3, t_empty)),
         template_var 1))),
    ("DL_Missing_Sublist.card_le_pick_inf",
     "[| infinite ?S; ?i <= pick ?S ?n |] ==> card {a: ?S. a < ?i} <= ?n",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 2))
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app
           (template_app (template_hole 5, template_var 2),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_var 0))),
    ("DL_Missing_Sublist.nths_only_one",
     "{i. i < length ?xs & i : ?I} = {?j} ==> nths ?xs ?I = [?xs ! ?j]",
     template_implication
      ([template_equation
         (template_app (template_hole 11, t_empty),
          template_app
           (template_app (template_hole 6, template_var 0),
            template_hole 5))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0)),
           template_hole 0)))),
    ("DL_Missing_Sublist.card_le_pick_le",
     "[| ?n < card ?S; ?i <= pick ?S ?n |] ==> card {a: ?S. a < ?i} <= ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5, template_app (template_hole 2, t_empty)),
         template_var 2))),
    ("DL_Missing_Sublist.nth_nths",
     "?i < card {i. i < length ?xs & i : ?I} ==>
      nths ?xs ?I ! ?i = ?xs ! pick ?I ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 8, template_app (template_hole 7, t_empty)))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("DL_Missing_Sublist.list_all2_nths",
     "[| list_all2 ?P (nths ?xs ?A) (nths ?ys ?A);
         list_all2 ?P (nths ?xs (- ?A)) (nths ?ys (- ?A)) |]
      ==> list_all2 ?P ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_app (template_hole 0, template_var 1))),
              template_app
               (template_app (template_hole 1, template_var 0),
                template_app (template_hole 0, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 0)
           ))),
    ("DL_Missing_Sublist.pick_reduce_set",
     "?i < card {a. a < ?m & a : ?I} ==>
      pick ?I ?i = pick {a. a < ?m & a : ?I} ?i",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 5, template_app (template_hole 4, t_empty)))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app
            (template_hole 0, template_app (template_hole 4, t_empty)),
           template_var 2)))),
    ("DL_Missing_Sublist.nths_nth",
     "[| ?n : ?A; ?n < length ?xs |]
      ==> nths ?xs ?A ! card {i. i < ?n & i : ?A} = ?xs ! ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 0),
               template_var 1)),
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_var 2)))),
    ("DL_Missing_Sublist.nth_nths_card",
     "[| ?j < length ?xs; ?j : ?J |]
      ==> nths ?xs ?J ! card {j0. j0 < ?j & j0 : ?J} = ?xs ! ?j",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_var 2)))),
    ("DL_Missing_Sublist.card_le_pick",
     "[| ?n < card ?S | infinite ?S; ?i <= pick ?S ?n |]
      ==> card {a: ?S. a < ?i} <= ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_app (template_hole 7, template_var 1))),
              template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)))
            ),
        template_inequation
         (less_equals, template_var 0,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 7, template_app (template_hole 2, t_empty)),
         template_var 2))),
    ("DL_Missing_Sublist.length_nths_even",
     "even (length ?xs) ==>
      length (nths ?xs (Collect even)) = length (nths ?xs {a. odd a})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_hole 5))),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, t_empty))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, t_empty)))))),
    ("DL_Missing_Sublist.nth_weave",
     "?i < length (weave ?A ?xs ?ys) ==>
      weave ?A ?xs ?ys ! ?i =
      (if ?i : ?A then ?xs ! card {a: ?A. a < ?i}
       else ?ys ! card {a: - ?A. a < ?i})",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app
           (template_hole 9,
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_var 0)))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 8, template_var 2),
                 template_var 1),
               template_var 0)),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 6, template_var 1),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, t_empty)))),
           template_app
            (template_app (template_hole 6, template_var 0),
             template_app
              (template_hole 3,
               template_app (template_hole 2, t_empty))))))),
    ("DL_Missing_Sublist.weave_append1",
     "[| length ?xs + length ?ys : ?A;
         length ?xs = card {a: ?A. a < length ?xs + length ?ys} |]
      ==> weave ?A (?xs @ [?x]) ?ys = weave ?A ?xs ?ys @ [?x]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 3)),
                  template_app (template_hole 10, template_var 2))),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 10, template_var 3),
          template_app
           (template_hole 8, template_app (template_hole 7, t_empty)))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0))),
           template_var 2),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("DL_Missing_Sublist.weave_append2",
     "[| length ?xs + length ?ys ~: ?A;
         length ?ys = card {a: - ?A. a < length ?xs + length ?ys} |]
      ==> weave ?A ?xs (?ys @ [?y]) = weave ?A ?xs ?ys @ [?y]",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_hole 13,
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app (template_hole 11, template_var 3)),
                      template_app (template_hole 11, template_var 2))),
                  template_var 1)
                )
            ),
        template_equation
         (template_app (template_hole 11, template_var 2),
          template_app
           (template_hole 9, template_app (template_hole 8, t_empty)))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("DL_Missing_Sublist.set_weave",
     "[| length ?xs = card {a: ?A. a < length ?xs + length ?ys};
         length ?ys = card {a: - ?A. a < length ?xs + length ?ys} |]
      ==> set (weave ?A ?xs ?ys) = set ?xs Un set ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 11, template_var 2),
          template_app
           (template_hole 10, template_app (template_hole 9, t_empty))),
        template_equation
         (template_app (template_hole 11, template_var 0),
          template_app
           (template_hole 10, template_app (template_hole 9, t_empty)))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 2)),
           template_app (template_hole 2, template_var 0))))),
    ("DL_Missing_Sublist.nths_weave",
     "[| length ?xs = card {a: ?A. a < length ?xs + length ?ys};
         length ?ys = card {a: - ?A. a < length ?xs + length ?ys} |]
      ==> nths (weave ?A ?xs ?ys) ?A = ?xs &
          nths (weave ?A ?xs ?ys) (- ?A) = ?ys",
     template_implication
      ([template_equation
         (template_app (template_hole 10, template_var 2),
          template_app
           (template_hole 9, template_app (template_hole 8, t_empty))),
        template_equation
         (template_app (template_hole 10, template_var 0),
          template_app
           (template_hole 9, template_app (template_hole 8, t_empty)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app
                          (template_app (template_hole 0, template_var 1),
                           template_var 2),
                         template_var 0)),
                     template_var 1)),
                 template_var 2)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 2),
                       template_var 0)),
                   template_app (template_hole 3, template_var 1))),
               template_var 0))
           )))]:
   (string * thm * template) list
### theory "Draft.DL_Missing_SublistTemplates"
### 0.347s elapsed time, 0.519s cpu time, 0.102s GC time
val it = (): unit
