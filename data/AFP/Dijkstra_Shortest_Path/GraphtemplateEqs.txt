   [("Graph.succ_empty", "succ Graph.empty ?v = {}",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Graph.edges_add_node", "edges (add_node ?v ?g) = edges ?g",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Graph.int_vertices_empty", "(int_vertices ?p = {}) = (?p = [])",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("Graph.nodes_add_node",
     "nodes (add_node ?v ?g) = insert ?v (nodes ?g)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Graph.path_weight_split",
     "path_weight (?p1.0 @ ?p2.0) = path_weight ?p1.0 + path_weight ?p2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Graph.int_vertices_simps",
     "int_vertices (?vv # ?p) = insert (fst ?vv) (int_vertices ?p)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Graph.int_vertices_simps",
     "int_vertices (?p1.0 @ ?p2.0) =
      int_vertices ?p1.0 Un int_vertices ?p2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Graph.path_weight_cons",
     "path_weight (?e # ?p) = fst (snd ?e) + path_weight ?p",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 4, template_var 0)))),
    ("Graph.nodes_add_edge",
     "nodes (add_edge ?v ?e ?v' ?g) = insert ?v (insert ?v' (nodes ?g))",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 3),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Graph.edges_add_edge",
     "edges (add_edge ?v ?e ?v' ?g) = insert (?v, ?e, ?v') (edges ?g)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1))),
         template_app (template_hole 0, template_var 0))))]
