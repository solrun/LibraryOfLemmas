Loading theory "Draft.Argmax" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools")
Loading theory "Draft.SetUtils" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.Partitions")
Loading theory "HOL-Library.FuncSet" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools" via "HOL-Library.Indicator_Function" via "HOL-Library.Disjoint_Sets")
Loading theory "HOL-Library.Code_Abstract_Nat" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools" via "HOL-Library.Code_Target_Nat")
### theory "HOL-Library.Code_Abstract_Nat"
### 0.064s elapsed time, 0.293s cpu time, 0.000s GC time
Loading theory "HOL-Library.Code_Target_Nat" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools")
Found termination order: "{}"
### theory "Draft.SetUtils"
### 0.115s elapsed time, 0.489s cpu time, 0.029s GC time
Loading theory "Draft.Partitions" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction")
### Code generator: dropping subsumed code equation
### divmod_nat ?m ?n ==
### if ?n = 0 | ?m < ?n then (0, ?m)
### else let (q, y) = divmod_nat (?m - ?n) ?n in (Suc q, y)
### Code generator: dropping subsumed code equation
### divmod (num.Bit1 ?m) (num.Bit1 ?n) ==
### if ?m < ?n then (0, numeral (num.Bit1 ?m))
### else divmod_step (num.Bit1 ?n)
###       (divmod (num.Bit1 ?m) (num.Bit0 (num.Bit1 ?n)))
### Code generator: dropping subsumed code equation
### divmod (num.Bit0 ?m) (num.Bit1 ?n) ==
### if ?m <= ?n then (0, numeral (num.Bit0 ?m))
### else divmod_step (num.Bit1 ?n)
###       (divmod (num.Bit0 ?m) (num.Bit0 (num.Bit1 ?n)))
### Code generator: dropping subsumed code equation
### divmod (num.Bit1 ?m) (num.Bit0 ?n) ==
### case divmod ?m ?n of (q, r) => (q, 2 * r + 1)
### Code generator: dropping subsumed code equation
### divmod (num.Bit0 ?m) (num.Bit0 ?n) ==
### case divmod ?m ?n of (q, r) => (q, 2 * r)
### Code generator: dropping subsumed code equation
### divmod num.One (num.Bit1 ?n) == (0, Numeral1)
### Code generator: dropping subsumed code equation
### divmod num.One (num.Bit0 ?n) == (0, Numeral1)
### Code generator: dropping subsumed code equation
### divmod ?m num.One == (numeral ?m, 0)
### Code generator: dropping subsumed code equation
### Suc ?m <= ?n == ?m < ?n
### Code generator: dropping subsumed code equation
### 0 <= ?n == True
### Code generator: dropping subsumed code equation
### ?m < Suc ?n == ?m <= ?n
### Code generator: dropping subsumed code equation
### ?n < 0 == False
### Code generator: dropping subsumed code equation
### of_nat ?n == semiring_1_class.of_nat_aux (%i. i + (1::?'a)) ?n (0::?'a)
### theory "Draft.Argmax"
### 0.182s elapsed time, 0.753s cpu time, 0.029s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### theory "HOL-Library.Code_Target_Nat"
### 0.129s elapsed time, 0.508s cpu time, 0.029s GC time
Loading theory "Draft.RelationOperators" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools" via "Draft.RelationProperties")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.120s elapsed time, 0.462s cpu time, 0.064s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Found termination order: "length <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "length <*mlex*> {}"
### theory "HOL-Library.FuncSet"
### 0.422s elapsed time, 1.683s cpu time, 0.171s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools" via "HOL-Library.Indicator_Function")
### theory "Draft.Partitions"
### 0.333s elapsed time, 1.314s cpu time, 0.142s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Found termination order: "{}"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
Found termination order: "size_list size <*mlex*> {}"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
### theory "Draft.RelationOperators"
### 0.311s elapsed time, 1.217s cpu time, 0.142s GC time
Loading theory "Draft.RelationProperties" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools")
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### theory "HOL-Library.Nat_Bijection"
### 0.317s elapsed time, 1.247s cpu time, 0.167s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.216s elapsed time, 0.853s cpu time, 0.089s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Disjoint_Sets"
### 0.267s elapsed time, 1.056s cpu time, 0.089s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
### theory "Draft.RelationProperties"
### 0.234s elapsed time, 0.908s cpu time, 0.180s GC time
Loading theory "HOL-Library.Discrete" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools")
### Rewrite rule not in simpset:
### Wellfounded.accp log_rel ?n1 ==>
### log ?n1 == if ?n1 < 2 then 0 else Suc (log (?n1 div 2))
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Discrete"
### 0.150s elapsed time, 0.594s cpu time, 0.000s GC time
Loading theory "HOL-Library.Indicator_Function" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.Indicator_Function"
### 0.608s elapsed time, 2.232s cpu time, 0.663s GC time
Loading theory "Draft.MiscTools" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction")
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Library.BigO"
### 1.015s elapsed time, 3.836s cpu time, 0.831s GC time
### theory "HOL-Library.Stream"
### 1.124s elapsed time, 4.262s cpu time, 0.922s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.998s elapsed time, 6.042s cpu time, 1.161s GC time
Loading theory "Draft.Templates" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.060s elapsed time, 0.181s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.CombinatorialAuctionMoreTemplates")
Found termination order: "length <*mlex*> {}"
### theory "Draft.MiscTools"
### 1.495s elapsed time, 3.669s cpu time, 0.442s GC time
Loading theory "Draft.StrictCombinatorialAuction" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction" via "Draft.UniformTieBreaking")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.534s elapsed time, 1.116s cpu time, 0.104s GC time
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.StrictCombinatorialAuction"
### 0.462s elapsed time, 0.804s cpu time, 0.132s GC time
Loading theory "Draft.Universes" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction" via "Draft.UniformTieBreaking")
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
### theory "Draft.Universes"
### 0.777s elapsed time, 1.403s cpu time, 0.875s GC time
Loading theory "Draft.UniformTieBreaking" (required by "Draft.CombinatorialAuctionMoreTemplates" via "Draft.CombinatorialAuction")
"0"
  :: "nat"
### theory "Draft.UniformTieBreaking"
### 0.578s elapsed time, 0.797s cpu time, 0.083s GC time
Loading theory "Draft.CombinatorialAuction" (required by "Draft.CombinatorialAuctionMoreTemplates")
### theory "Draft.CombinatorialAuction"
### 0.561s elapsed time, 0.649s cpu time, 0.121s GC time
Loading theory "Draft.CombinatorialAuctionMoreTemplates"
val templateLemmas =
   [("CombinatorialAuction.functionCompletion",
     "?x : Domain ?f ==> toFunction ?f ?x = (?f Elsee (0::?'b)) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0),
           template_var 1)))),
    ("CombinatorialAuction.allAllocationsInPowerset",
     "allAllocations ?N ?\<Omega>
      <= Pow (?N \<times> (Pow ?\<Omega> - {{}}))",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 9, template_hole 8),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_var 0), t_empty)))),
    ("CombinatorialAuction.restrictionConservation",
     "Outside' {?x} (?R +< {?x} \<times> ?Y) = Outside' {?x} ?R",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_hole 0)),
               t_empty))),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)),
       template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("CombinatorialAuction.tiebidsBridgingLemma'",
     "?x : ?N \<times> (Pow ?\<Omega> - {{}}) ==>
      tiebids' ?a ?N ?\<Omega> ?x = tiebidsAlg ?a ?N ?\<Omega> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app (template_hole 8, template_var 2), t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1),
           template_var 3)))),
    ("CombinatorialAuction.soldAllocationsFinite",
     "[| finite ?N; finite ?\<Omega> |]
      ==> finite (soldAllocations ?N ?\<Omega>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, t_empty),
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_app
                      (template_app (template_hole 6, template_hole 5),
                       template_hole 4))))))
           ))),
    ("CombinatorialAuction.allocationCharacterization",
     "(?a : allAllocations ?N ?\<Omega>) =
      (?a : injectionsUniverse &
       Domain ?a <= ?N & Range ?a : all_partitions ?\<Omega>)",
     template_equation
      (template_app
        (template_app (template_hole 13, template_var 2),
         template_app
          (template_app (template_hole 12, template_hole 11),
           template_app
            (template_app (template_hole 10, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 13, template_var 2),
             template_app (template_hole 8, t_empty))),
         template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 2)),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 0, template_var 1)))))),
    ("CombinatorialAuction.neutralSeller",
     "[| ALL X. X : Range ?a --> ?b (seller, X) = (0::?'b); finite ?a |]
      ==> sum ?b ?a = sum ?b (Outside' {seller} ?a)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 6),
               template_hole 0)))))),
    ("CombinatorialAuction.maximalAllactionWithoutSeller",
     "Outside' {seller} ` maximalStrictAllocations ?N ?\<Omega> ?b
      <= soldAllocations ?N ?\<Omega>",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 10, t_empty),
         template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 2)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     template_hole 6)),
                 template_var 0))))),
       template_app
        (template_app (template_hole 10, t_empty),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_app
                (template_app (template_hole 8, template_hole 7),
                 template_hole 6))))))),
    ("CombinatorialAuction.allocationSellerMonotonicity",
     "soldAllocations (?N - {seller}) ?\<Omega>
      <= soldAllocations ?N ?\<Omega>",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_app
                    (template_app (template_hole 7, template_hole 6),
                     template_hole 5))),
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_hole 5))))),
       template_app
        (template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_hole 5))))))),
    ("CombinatorialAuction.tiebreakingGivesSingleton",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N |]
      ==> card
           (argmax (sum (randomBidsAlg ?N ?\<Omega> ?b ?r))
             (maximalStrictAllocations ?N (set ?\<Omega>) ?b)) =
          1",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 17, template_var 3),
              template_hole 16)
            ),
        template_predicate
         (template_app (template_hole 15, template_var 2))],
       template_equation
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 10, template_var 2),
                       template_var 3),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 9,
                 template_app (template_hole 8, template_var 1)),
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_hole 5,
                     template_app (template_hole 17, template_var 3)),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_hole 1)),
                     template_var 2)))))),
         template_hole 0))),
    ("CombinatorialAuction.maximalAllocationBridgingTheorem",
     "[| finite ?N; distinct ?\<Omega> |]
      ==> maximalStrictAllocations ?N (set ?\<Omega>) ?b =
          maximalStrictAllocationsAlg ?N ?\<Omega> ?b",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 2)),
        template_predicate
         (template_app (template_hole 17, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 15,
             template_app (template_hole 14, template_var 0)),
           template_app
            (template_app (template_hole 13, template_hole 12),
             template_app
              (template_app
                (template_hole 11,
                 template_app (template_hole 10, template_var 1)),
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 8, template_hole 7),
                     template_hole 6)),
                 template_var 2)))),
         template_app
          (template_app
            (template_hole 15,
             template_app (template_hole 14, template_var 0)),
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 12),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, t_empty),
                   template_app (template_hole 0, template_var 1))))))))),
    ("CombinatorialAuction.soldAllocationIsAllocation",
     "?a : soldAllocations ?N ?\<Omega> ==> ?a : allocationsUniverse",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 2),
              template_app
               (template_app (template_hole 21, t_empty),
                template_app
                 (template_app (template_hole 16, template_hole 15),
                  template_app
                   (template_app (template_hole 14, template_var 1),
                    template_app
                     (template_app (template_hole 13, template_var 0),
                      template_app
                       (template_app (template_hole 19, template_hole 18),
                        template_hole 17))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 22, template_var 2),
             template_app
              (template_app
                (template_hole 12,
                 template_app (template_hole 11, t_empty)),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, t_empty),
                   template_app (template_hole 1, t_empty)))))
           ))),
    ("CombinatorialAuction.vcgaAlgDefinedness",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N |]
      ==> card
           (argmax (sum (randomBidsAlg ?N ?\<Omega> ?b ?r))
             (maximalStrictAllocationsAlg ?N ?\<Omega> ?b)) =
          1",
     template_implication
      ([template_predicate
         (template_app (template_hole 24, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 21, template_var 3),
              template_hole 20)
            ),
        template_predicate
         (template_app (template_hole 19, template_var 2))],
       template_equation
        (template_app
          (template_hole 17,
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 14, template_var 2),
                       template_var 3),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 13,
                 template_app (template_hole 12, template_var 1)),
               template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_hole 9),
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, t_empty),
                       template_app
                        (template_hole 1, template_var 3)))))))),
         template_hole 0))),
    ("CombinatorialAuction.soldAllocationRestriction",
     "?a : soldAllocations ?N ?\<Omega> ==>
      Outside' {?n} ?a : soldAllocations (?N - {?n}) ?\<Omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 9, t_empty),
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_app
                   (template_app (template_hole 2, template_var 2),
                    template_app
                     (template_app (template_hole 1, template_var 1),
                      template_app
                       (template_app (template_hole 7, template_hole 6),
                        template_hole 5))))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 8, template_var 3),
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_hole 5))),
             template_app
              (template_app (template_hole 9, t_empty),
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 1),
                         template_app
                          (template_app (template_hole 7, template_var 0),
                           template_hole 5))),
                     template_app
                      (template_app (template_hole 7, template_hole 6),
                       template_hole 5))))))
           ))),
    ("CombinatorialAuction.allocationWithOneParticipant",
     "?a : allAllocations'' ?N ?\<Omega> ==>
      Domain (Outside' {?x} ?a) <= ?N - {?x}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 3),
              template_app
               (template_app
                 (template_hole 21,
                  template_app
                   (template_app
                     (template_hole 21,
                      template_app (template_hole 20, t_empty)),
                    template_app
                     (template_hole 15,
                      template_app
                       (template_app (template_hole 14, t_empty),
                        template_app (template_hole 10, t_empty))))),
                template_app (template_hole 20, t_empty)))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_hole 1))),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 1))))),
    ("CombinatorialAuction.neutralSellerVariant",
     "ALL a:?A.
         finite a & (ALL X. X : Range a --> ?b (seller, X) = (0::?'b)) ==>
      {sum ?b a |a. a : ?A} = {sum ?b (Outside' {seller} a) |a. a : ?A}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 1), t_empty)
            )],
       template_equation
        (template_app (template_hole 6, t_empty),
         template_app (template_hole 6, t_empty)))),
    ("CombinatorialAuction.allocationDisjointAuxiliary",
     "[| ?a : allocationsUniverse; ?n1.0 : Domain ?a; ?n2.0 : Domain ?a;
         ?n1.0 ~= ?n2.0 |]
      ==> ?a ,, ?n1.0 Int ?a ,, ?n2.0 = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 2),
              template_app
               (template_app
                 (template_hole 20,
                  template_app (template_hole 19, t_empty)),
                template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, t_empty),
                    template_app (template_hole 9, t_empty)))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 2))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_hole 0))),
    ("CombinatorialAuction.chosenAllocationEquivalence",
     "[| 0 < card ?N; distinct ?\<Omega> |]
      ==> randomEl
           (takeAll (%x. winningAllocationRel ?N (set ?\<Omega>) ((:) x) ?b)
             (allAllocationsAlg ?N ?\<Omega>))
           ?r =
          chosenAllocationAlg ?N ?\<Omega> ?b ?r",
     template_implication
      ([template_inequation
         (less_than, template_hole 20,
          template_app (template_hole 19, template_var 3)),
        template_predicate
         (template_app (template_hole 18, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 13, template_hole 12),
                     template_app
                      (template_hole 11,
                       template_app
                        (template_app (template_hole 10, t_empty),
                         template_app
                          (template_hole 8, template_var 2)))))),
               template_app
                (template_app (template_hole 7, t_empty),
                 template_app
                  (template_app (template_hole 13, template_hole 12),
                   template_app
                    (template_hole 11,
                     template_app
                      (template_app (template_hole 10, t_empty),
                       template_app (template_hole 8, template_var 2))))))),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)))),
    ("CombinatorialAuction.onlyGoodsAreSold",
     "?a : soldAllocations'' ?N ?\<Omega> ==>
      \<Union> (Range ?a) <= ?\<Omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 2),
              template_app
               (template_app (template_hole 24, t_empty),
                template_app
                 (template_app
                   (template_hole 19,
                    template_app
                     (template_app
                       (template_hole 19,
                        template_app (template_hole 18, t_empty)),
                      template_app
                       (template_hole 13,
                        template_app
                         (template_app (template_hole 12, t_empty),
                          template_app (template_hole 8, t_empty))))),
                  template_app (template_hole 18, t_empty))))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_var 0))),
    ("CombinatorialAuction.allocationDisjoint",
     "[| ?a : allocationsUniverse; ?n1.0 : Domain ?a; ?n2.0 : Domain ?a;
         ?n1.0 ~= ?n2.0 |]
      ==> ?a ,,, ?n1.0 Int ?a ,,, ?n2.0 = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 2),
              template_app
               (template_app
                 (template_hole 23,
                  template_app (template_hole 22, t_empty)),
                template_app
                 (template_hole 17,
                  template_app
                   (template_app (template_hole 16, t_empty),
                    template_app (template_hole 12, t_empty)))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app (template_hole 9, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app (template_hole 9, template_var 2))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1)))),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)))),
         template_hole 0))),
    ("CombinatorialAuction.soldAllocationIsAllocationVariant",
     "?a : soldAllocations ?N ?\<Omega> ==>
      ?a : allAllocations'' (Domain ?a) (\<Union> (Range ?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 27, template_var 2),
              template_app
               (template_app (template_hole 26, t_empty),
                template_app
                 (template_app (template_hole 21, template_hole 20),
                  template_app
                   (template_app (template_hole 19, template_var 1),
                    template_app
                     (template_app (template_hole 18, template_var 0),
                      template_app
                       (template_app (template_hole 24, template_hole 23),
                        template_hole 22))))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 27, template_var 2),
             template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app (template_hole 16, t_empty)),
                   template_app
                    (template_hole 11,
                     template_app
                      (template_app (template_hole 10, t_empty),
                       template_app (template_hole 6, t_empty))))),
               template_app (template_hole 16, t_empty)))
           ))),
    ("CombinatorialAuction.tiebidsBridgingLemma",
     "?x : ?N \<times> (Pow ?\<Omega> - {{}}) ==>
      summedBidVector
       (pseudoAllocation ?a <| (?N \<times> finestpart ?\<Omega>)) ?N
       ?\<Omega> ?x =
      tiebidsAlg ?a ?N ?\<Omega> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 23, template_var 3),
              template_app
               (template_app (template_hole 22, template_var 2), t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app (template_hole 14, t_empty),
               template_app
                (template_app (template_hole 22, template_var 2),
                 t_empty))),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2),
             template_var 1),
           template_var 3)))),
    ("CombinatorialAuction.allocationsUniverseCharacterization",
     "(?a : allocationsUniverse) =
      (?a : allAllocations'' (Domain ?a) (\<Union> (Range ?a)))",
     template_equation
      (template_app
        (template_app (template_hole 18, template_var 0),
         template_app
          (template_app
            (template_hole 17, template_app (template_hole 16, t_empty)),
           template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, t_empty),
               template_app (template_hole 6, t_empty))))),
       template_app
        (template_app (template_hole 18, template_var 0),
         template_app
          (template_app
            (template_hole 17,
             template_app
              (template_app
                (template_hole 17,
                 template_app (template_hole 16, t_empty)),
               template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, t_empty),
                   template_app (template_hole 6, t_empty))))),
           template_app (template_hole 16, t_empty))))),
    ("CombinatorialAuction.summedBidVectorEquivalence",
     "?x : ?N \<times> (Pow ?\<Omega> - {{}}) ==>
      summedBidVector
       (pseudoAllocation ?a <| (?N \<times> finestpart ?\<Omega>)) ?N
       ?\<Omega> ?x =
      summedBidVectorAlg (maxbidAlg ?a ?N ?\<Omega>) ?N ?\<Omega> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 24, template_var 3),
              template_app
               (template_app (template_hole 23, template_var 2), t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app (template_hole 15, t_empty),
               template_app
                (template_app (template_hole 23, template_var 2),
                 t_empty))),
           template_var 3),
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2),
                   template_var 1)),
               template_var 2),
             template_var 1),
           template_var 3)))),
    ("CombinatorialAuction.allAllocationsEquivalence",
     "allAllocations ?N ?\<Omega> = allAllocations' ?N ?\<Omega> &
      allAllocations ?N ?\<Omega> = allAllocations'' ?N ?\<Omega>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 23,
             template_app
              (template_app
                (template_hole 22,
                 template_app
                  (template_app (template_hole 21, template_hole 20),
                   template_app
                    (template_app (template_hole 19, template_var 1),
                     template_var 0))),
               template_app
                (template_app
                  (template_hole 18,
                   template_app (template_hole 17, t_empty)),
                 template_app (template_hole 17, t_empty)))),
           template_app
            (template_app
              (template_hole 22,
               template_app
                (template_app (template_hole 21, template_hole 20),
                 template_app
                  (template_app (template_hole 19, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_app
                    (template_hole 18,
                     template_app (template_hole 17, t_empty)),
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, t_empty),
                       template_app (template_hole 3, t_empty))))),
               template_app (template_hole 17, t_empty))))
         )),
    ("CombinatorialAuction.maxbidEquivalence",
     "summedBidVectorRel
       (pseudoAllocation ?a <| (?N \<times> finestpart ?\<Omega>)) ?N
       ?\<Omega> =
      summedBidVectorRel (maxbidAlg ?a ?N ?\<Omega>) ?N ?\<Omega>",
     template_equation
      (template_app
        (template_app (template_hole 21, t_empty),
         template_app
          (template_app (template_hole 15, template_var 2), t_empty)),
       template_app
        (template_app (template_hole 21, t_empty),
         template_app
          (template_app (template_hole 15, template_var 2), t_empty)))),
    ("CombinatorialAuction.allAllocationsVarCharacterization",
     "(?a : allAllocations'' ?N ?\<Omega>) =
      (?a : allocationsUniverse &
       Domain ?a <= ?N & \<Union> (Range ?a) = ?\<Omega>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 2),
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app
                     (template_hole 17,
                      template_app (template_hole 16, t_empty)),
                    template_app
                     (template_hole 11,
                      template_app
                       (template_app (template_hole 10, t_empty),
                        template_app (template_hole 6, t_empty))))),
                template_app (template_hole 16, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 18, template_var 2),
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app (template_hole 16, t_empty)),
                   template_app
                    (template_hole 11,
                     template_app
                      (template_app (template_hole 10, t_empty),
                       template_app (template_hole 6, t_empty)))))),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 2)),
                   template_var 1)),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_hole 1,
                     template_app (template_hole 0, template_var 2))),
                 template_var 0)))
           ))),
    ("CombinatorialAuction.lm11",
     "ALL pair:?N \<times> (Pow ?\<Omega> - {{}}).
         summedBid
          (pseudoAllocation ?a <| (?N \<times> finestpart ?\<Omega>)) pair =
         summedBid (bidMaximizedBy ?a ?N ?\<Omega> Elsee 0) pair",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 22,
             template_app
              (template_app (template_hole 21, template_var 2), t_empty)),
           t_empty)
         )),
    ("CombinatorialAuction.resolvingBidEquivalence",
     "[| ?x : ?N \<times> (Pow (set ?\<Omega>) - {{}}); 0 < card ?N;
         distinct ?\<Omega> |]
      ==> tiebids'
           (randomEl
             (takeAll
               (%x. winningAllocationRel ?N (set ?\<Omega>) ((:) x) ?b)
               (allAllocationsAlg ?N ?\<Omega>))
             ?r)
           ?N (set ?\<Omega>) ?x =
          resolvingBidAlg ?N ?\<Omega> ?b ?r ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 29, template_var 4),
              template_app
               (template_app (template_hole 28, template_var 3), t_empty))
            ),
        template_inequation
         (less_than, template_hole 20,
          template_app (template_hole 19, template_var 3)),
        template_predicate
         (template_app (template_hole 18, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_hole 13,
                           template_app
                            (template_app
                              (template_hole 12, template_hole 11),
                             template_app
                              (template_hole 10,
                               template_app
                                (template_app (template_hole 9, t_empty),
                                 template_app
                                  (template_hole 7, template_var 2)))))),
                       template_app
                        (template_app (template_hole 6, t_empty),
                         template_app
                          (template_app
                            (template_hole 12, template_hole 11),
                           template_app
                            (template_hole 10,
                             template_app
                              (template_app (template_hole 9, t_empty),
                               template_app
                                (template_hole 7, template_var 2))))))),
                   template_var 0)),
               template_var 3),
             template_app (template_hole 25, template_var 2)),
           template_var 4),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0),
           template_var 4)))),
    ("CombinatorialAuction.allocationMonotonicity",
     "?N1.0 <= ?N2.0 ==>
      allAllocations'' ?N1.0 ?\<Omega> <= allAllocations'' ?N2.0 ?\<Omega>",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app
                (template_hole 16,
                 template_app (template_hole 15, t_empty)),
               template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, t_empty),
                   template_app (template_hole 5, t_empty))))),
           template_app (template_hole 15, t_empty)),
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app
                (template_hole 16,
                 template_app (template_hole 15, t_empty)),
               template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, t_empty),
                   template_app (template_hole 5, t_empty))))),
           template_app (template_hole 15, t_empty))))),
    ("CombinatorialAuction.lm10",
     "?pair : ?N \<times> (Pow ?\<Omega> - {{}}) ==>
      summedBid (pseudoAllocation ?a <| (?N \<times> finestpart ?\<Omega>))
       ?pair =
      summedBid (bidMaximizedBy ?a ?N ?\<Omega> Elsee 0) ?pair",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 3),
              template_app
               (template_app (template_hole 21, template_var 2), t_empty))
            )],
       template_equation
        (template_app
          (template_app (template_hole 14, template_var 3),
           template_app
            (template_app (template_hole 13, t_empty),
             template_app
              (template_hole 9,
               template_app (template_hole 1, template_var 3)))),
         template_app
          (template_app (template_hole 14, template_var 3),
           template_app
            (template_app (template_hole 13, t_empty),
             template_app
              (template_hole 9,
               template_app (template_hole 1, template_var 3))))))),
    ("CombinatorialAuction.lm09",
     "[| fst ?pair : ?N; snd ?pair : Pow ?\<Omega> - {{}} |]
      ==> summedBidSecond
           (pseudoAllocation ?a <| (?N \<times> finestpart ?\<Omega>))
           ?pair =
          summedBidSecond (bidMaximizedBy ?a ?N ?\<Omega> Elsee 0) ?pair",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app (template_hole 21, template_var 3)),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app (template_hole 19, template_var 3)),
              template_app
               (template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_var 1)),
                template_app
                 (template_app (template_hole 16, template_hole 15),
                  template_hole 14)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 12, t_empty),
           template_app
            (template_hole 7,
             template_app (template_hole 19, template_var 3))),
         template_app
          (template_app (template_hole 12, t_empty),
           template_app
            (template_hole 7,
             template_app (template_hole 19, template_var 3)))))),
    ("CombinatorialAuction.sumResolvingBidEquivalence",
     "[| 0 < card ?N; distinct ?\<Omega>;
         ?a <= ?N \<times> (Pow (set ?\<Omega>) - {{}}) |]
      ==> sum (tiebids'
                (randomEl
                  (takeAll
                    (%x. winningAllocationRel ?N (set ?\<Omega>) ((:) x) ?b)
                    (allAllocationsAlg ?N ?\<Omega>))
                  ?r)
                ?N (set ?\<Omega>))
           ?a =
          sum (resolvingBidAlg ?N ?\<Omega> ?b ?r) ?a",
     template_implication
      ([template_inequation
         (less_than, template_hole 29,
          template_app (template_hole 28, template_var 4)),
        template_predicate
         (template_app (template_hole 27, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 25, template_var 4), t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 17,
             template_app
              (template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_app
                      (template_hole 15,
                       template_app
                        (template_app
                          (template_hole 14,
                           template_app
                            (template_hole 13,
                             template_app
                              (template_app
                                (template_hole 12, template_hole 11),
                               template_app
                                (template_hole 10,
                                 template_app
                                  (template_app (template_hole 9, t_empty),
                                   template_app
                                    (template_hole 7, template_var 3)))))),
                         template_app
                          (template_app (template_hole 6, t_empty),
                           template_app
                            (template_app
                              (template_hole 12, template_hole 11),
                             template_app
                              (template_hole 10,
                               template_app
                                (template_app (template_hole 9, t_empty),
                                 template_app
                                  (template_hole 7, template_var 3))))))),
                     template_var 0)),
                 template_var 4),
               template_app (template_hole 22, template_var 3))),
           template_var 2),
         template_app
          (template_app
            (template_hole 17,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 1),
               template_var 0)),
           template_var 2)))),
    ("CombinatorialAuction.lm01",
     "?a : soldAllocations'' ?N ?\<Omega> ==>
      Domain ?a <= ?N - {seller} & ?a : allocationsUniverse",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 2),
              template_app
               (template_app (template_hole 24, t_empty),
                template_app
                 (template_app
                   (template_hole 19,
                    template_app
                     (template_app
                       (template_hole 19,
                        template_app (template_hole 18, t_empty)),
                      template_app
                       (template_hole 13,
                        template_app
                         (template_app (template_hole 12, t_empty),
                          template_app (template_hole 8, t_empty))))),
                  template_app (template_hole 18, t_empty))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_app
                    (template_app (template_hole 22, template_hole 21),
                     template_hole 20)))),
             template_app
              (template_app (template_hole 25, template_var 2),
               template_app
                (template_app
                  (template_hole 19,
                   template_app (template_hole 18, t_empty)),
                 template_app
                  (template_hole 13,
                   template_app
                    (template_app (template_hole 12, t_empty),
                     template_app (template_hole 8, t_empty))))))
           ))),
    ("CombinatorialAuction.allocationGoodsMonotonicity",
     "?\<Omega>1.0 <= ?\<Omega>2.0 ==>
      soldAllocations''' ?N ?\<Omega>1.0
      <= soldAllocations''' ?N ?\<Omega>2.0",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 20,
             template_app
              (template_app
                (template_hole 20,
                 template_app (template_hole 19, t_empty)),
               template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, t_empty),
                   template_app (template_hole 9, t_empty))))),
           template_app (template_hole 19, t_empty)),
         template_app
          (template_app
            (template_hole 20,
             template_app
              (template_app
                (template_hole 20,
                 template_app (template_hole 19, t_empty)),
               template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, t_empty),
                   template_app (template_hole 9, t_empty))))),
           template_app (template_hole 19, t_empty))))),
    ("CombinatorialAuction.soldAllocationVariantEquivalence",
     "soldAllocations'' ?N ?\<Omega> = soldAllocations''' ?N ?\<Omega>",
     template_equation
      (template_app
        (template_app (template_hole 25, t_empty),
         template_app
          (template_app
            (template_hole 20,
             template_app
              (template_app
                (template_hole 20,
                 template_app (template_hole 19, t_empty)),
               template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, t_empty),
                   template_app (template_hole 9, t_empty))))),
           template_app (template_hole 19, t_empty))),
       template_app
        (template_app
          (template_hole 20,
           template_app
            (template_app
              (template_hole 20, template_app (template_hole 19, t_empty)),
             template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, t_empty),
                 template_app (template_hole 9, t_empty))))),
         template_app (template_hole 19, t_empty)))),
    ("CombinatorialAuction.lm12",
     "summedBidVectorRel
       (pseudoAllocation ?a <| (?N \<times> finestpart ?\<Omega>)) ?N
       ?\<Omega> =
      summedBidVectorRel (bidMaximizedBy ?a ?N ?\<Omega> Elsee 0) ?N
       ?\<Omega>",
     template_equation
      (template_app
        (template_app (template_hole 21, t_empty),
         template_app
          (template_app (template_hole 15, template_var 2), t_empty)),
       template_app
        (template_app (template_hole 21, t_empty),
         template_app
          (template_app (template_hole 15, template_var 2), t_empty)))),
    ("CombinatorialAuction.lm02",
     "?a : soldAllocations'' ?N ?\<Omega> ==>
      ?a : allocationsUniverse &
      Domain ?a <= ?N - {seller} & \<Union> (Range ?a) <= ?\<Omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 26, template_var 2),
              template_app
               (template_app (template_hole 25, t_empty),
                template_app
                 (template_app
                   (template_hole 20,
                    template_app
                     (template_app
                       (template_hole 20,
                        template_app (template_hole 19, t_empty)),
                      template_app
                       (template_hole 14,
                        template_app
                         (template_app (template_hole 13, t_empty),
                          template_app (template_hole 9, t_empty))))),
                  template_app (template_hole 19, t_empty))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app (template_hole 26, template_var 2),
                 template_app
                  (template_app
                    (template_hole 20,
                     template_app (template_hole 19, t_empty)),
                   template_app
                    (template_hole 14,
                     template_app
                      (template_app (template_hole 13, t_empty),
                       template_app (template_hole 9, t_empty)))))),
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app (template_hole 6, template_var 2)),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_app
                      (template_app (template_hole 23, template_hole 22),
                       template_hole 21)))),
               template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 2))),
                 template_var 0)))
           ))),
    ("CombinatorialAuction.lm04",
     "(?a : soldAllocations'' ?N ?\<Omega>) =
      (?a : soldAllocations''' ?N ?\<Omega>)",
     template_equation
      (template_app
        (template_app (template_hole 26, template_var 2),
         template_app
          (template_app (template_hole 25, t_empty),
           template_app
            (template_app
              (template_hole 20,
               template_app
                (template_app
                  (template_hole 20,
                   template_app (template_hole 19, t_empty)),
                 template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 13, t_empty),
                     template_app (template_hole 9, t_empty))))),
             template_app (template_hole 19, t_empty)))),
       template_app
        (template_app (template_hole 26, template_var 2),
         template_app
          (template_app
            (template_hole 20,
             template_app
              (template_app
                (template_hole 20,
                 template_app (template_hole 19, t_empty)),
               template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, t_empty),
                   template_app (template_hole 9, t_empty))))),
           template_app (template_hole 19, t_empty))))),
    ("CombinatorialAuction.allocatedToBuyerMeansSold",
     "[| ?a : allocationsUniverse; Domain ?a <= ?N - {seller};
         \<Union> (Range ?a) <= ?\<Omega> |]
      ==> ?a : soldAllocations'' ?N ?\<Omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 26, template_var 2),
              template_app
               (template_app
                 (template_hole 25,
                  template_app (template_hole 24, t_empty)),
                template_app
                 (template_hole 19,
                  template_app
                   (template_app (template_hole 18, t_empty),
                    template_app (template_hole 14, t_empty)))))
            ),
        template_inequation
         (less_equals, template_app (template_hole 11, template_var 2),
          template_app
           (template_app (template_hole 10, template_var 1),
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_hole 7))),
        template_inequation
         (less_equals,
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 2)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 26, template_var 2),
             template_app
              (template_app (template_hole 3, t_empty),
               template_app
                (template_app
                  (template_hole 25,
                   template_app
                    (template_app
                      (template_hole 25,
                       template_app (template_hole 24, t_empty)),
                     template_app
                      (template_hole 19,
                       template_app
                        (template_app (template_hole 18, t_empty),
                         template_app (template_hole 14, t_empty))))),
                 template_app (template_hole 24, t_empty))))
           ))),
    ("CombinatorialAuction.lm03",
     "(?a : soldAllocations'' ?N ?\<Omega>) =
      (?a : allocationsUniverse &
       ?a : {aa.
             Domain aa <= ?N - {seller} &
             \<Union> (Range aa) <= ?\<Omega>})",
     template_equation
      (template_app
        (template_app (template_hole 26, template_var 2),
         template_app
          (template_app (template_hole 25, t_empty),
           template_app
            (template_app
              (template_hole 20,
               template_app
                (template_app
                  (template_hole 20,
                   template_app (template_hole 19, t_empty)),
                 template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 13, t_empty),
                     template_app (template_hole 9, t_empty))))),
             template_app (template_hole 19, t_empty)))),
       template_app
        (template_app
          (template_hole 18,
           template_app
            (template_app (template_hole 26, template_var 2),
             template_app
              (template_app
                (template_hole 20,
                 template_app (template_hole 19, t_empty)),
               template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, t_empty),
                   template_app (template_hole 9, t_empty)))))),
         template_app
          (template_app (template_hole 26, template_var 2),
           template_app (template_hole 19, t_empty))))),
    ("CombinatorialAuction.lm05",
     "?a : soldAllocations''' ?N ?\<Omega> ==>
      Outside' {?n} ?a : soldAllocations''' (?N - {?n}) ?\<Omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 23, template_var 3),
              template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app
                     (template_hole 22,
                      template_app (template_hole 21, t_empty)),
                    template_app
                     (template_hole 16,
                      template_app
                       (template_app (template_hole 15, t_empty),
                        template_app (template_hole 11, t_empty))))),
                template_app (template_hole 21, t_empty)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 23,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_app
                  (template_app (template_hole 6, template_var 0),
                   template_hole 4))),
             template_app
              (template_app
                (template_hole 22,
                 template_app
                  (template_app
                    (template_hole 22,
                     template_app (template_hole 21, t_empty)),
                   template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 15, t_empty),
                       template_app (template_hole 11, t_empty))))),
               template_app (template_hole 21, t_empty)))
           ))),
    ("CombinatorialAuction.allocationGoodsMonotonicityVariant",
     "?\<Omega>1.0 <= ?\<Omega>2.0 ==>
      soldAllocations'' ?N ?\<Omega>1.0
      <= soldAllocations'' ?N ?\<Omega>2.0",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 23, t_empty),
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app
                  (template_hole 18,
                   template_app (template_hole 17, t_empty)),
                 template_app
                  (template_hole 12,
                   template_app
                    (template_app (template_hole 11, t_empty),
                     template_app (template_hole 7, t_empty))))),
             template_app (template_hole 17, t_empty))),
         template_app
          (template_app (template_hole 23, t_empty),
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app
                  (template_hole 18,
                   template_app (template_hole 17, t_empty)),
                 template_app
                  (template_hole 12,
                   template_app
                    (template_app (template_hole 11, t_empty),
                     template_app (template_hole 7, t_empty))))),
             template_app (template_hole 17, t_empty)))))),
    ("CombinatorialAuction.soldAllocationIsRestricted",
     "(?a : soldAllocations'' ?N ?\<Omega>) =
      (EX aa.
          Outside' {seller} aa = ?a &
          aa : allAllocations'' (?N Un {seller}) ?\<Omega>)",
     template_equation
      (template_app
        (template_app (template_hole 26, template_var 2),
         template_app
          (template_app (template_hole 25, t_empty),
           template_app
            (template_app
              (template_hole 20,
               template_app
                (template_app
                  (template_hole 20,
                   template_app (template_hole 19, t_empty)),
                 template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 13, t_empty),
                     template_app (template_hole 9, t_empty))))),
             template_app (template_hole 19, t_empty)))),
       template_app (template_hole 1, t_empty))),
    ("CombinatorialAuction.resolvingBidBridgingLemmaVariant1",
     "[| 0 < card ?N; distinct ?\<Omega>;
         ?a : allAllocations ?N (set ?\<Omega>) |]
      ==> sum (summedBidVector
                (pseudoAllocation
                  (randomEl
                    (takeAll
                      (%x. winningAllocationRel ?N (set ?\<Omega>) ((:) x)
                            ?b)
                      (allAllocationsAlg ?N ?\<Omega>))
                    ?r) <|
                 (?N \<times> finestpart (set ?\<Omega>)))
                ?N (set ?\<Omega>))
           ?a =
          sum (resolvingBidAlg ?N ?\<Omega> ?b ?r) ?a",
     template_implication
      ([template_inequation
         (less_than, template_hole 41,
          template_app (template_hole 40, template_var 4)),
        template_predicate
         (template_app (template_hole 39, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 38, template_var 2),
              template_app
               (template_app (template_hole 37, template_hole 36),
                template_app
                 (template_app
                   (template_hole 35,
                    template_app (template_hole 34, template_var 3)),
                  template_var 4)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 32,
             template_app
              (template_hole 31,
               template_app
                (template_app (template_hole 30, t_empty),
                 template_app
                  (template_app (template_hole 25, template_var 4),
                   t_empty)))),
           template_var 2),
         template_app
          (template_app
            (template_hole 32,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 1),
               template_var 0)),
           template_var 2)))),
    ("CombinatorialAuction.resolvingBidBridgingLemma",
     "[| 0 < card ?N; distinct ?\<Omega>;
         ?a <= ?N \<times> (Pow (set ?\<Omega>) - {{}}) |]
      ==> sum (summedBidVector
                (pseudoAllocation
                  (randomEl
                    (takeAll
                      (%x. winningAllocationRel ?N (set ?\<Omega>) ((:) x)
                            ?b)
                      (allAllocationsAlg ?N ?\<Omega>))
                    ?r) <|
                 (?N \<times> finestpart (set ?\<Omega>)))
                ?N (set ?\<Omega>))
           ?a =
          sum (resolvingBidAlg ?N ?\<Omega> ?b ?r) ?a",
     template_implication
      ([template_inequation
         (less_than, template_hole 42,
          template_app (template_hole 41, template_var 4)),
        template_predicate
         (template_app (template_hole 40, template_var 3)),
        template_inequation
         (less_equals, template_var 2,
          template_app
           (template_app (template_hole 38, template_var 4), t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 30,
             template_app
              (template_hole 29,
               template_app
                (template_app (template_hole 28, t_empty),
                 template_app
                  (template_app (template_hole 38, template_var 4),
                   t_empty)))),
           template_var 2),
         template_app
          (template_app
            (template_hole 30,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 1),
               template_var 0)),
           template_var 2)))),
    ("CombinatorialAuction.soldAllocationsEquivalence",
     "soldAllocations ?N ?\<Omega> = soldAllocations' ?N ?\<Omega> &
      soldAllocations' ?N ?\<Omega> = soldAllocations'' ?N ?\<Omega>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 29,
             template_app
              (template_app
                (template_hole 28,
                 template_app
                  (template_app (template_hole 27, t_empty),
                   template_app
                    (template_app (template_hole 22, template_hole 21),
                     template_app
                      (template_app (template_hole 20, template_var 1),
                       template_app
                        (template_app (template_hole 19, template_var 0),
                         template_app
                          (template_app
                            (template_hole 25, template_hole 24),
                           template_hole 23)))))),
               template_app
                (template_app (template_hole 27, t_empty),
                 template_app
                  (template_app
                    (template_hole 18,
                     template_app (template_hole 17, t_empty)),
                   template_app (template_hole 17, t_empty))))),
           template_app
            (template_app
              (template_hole 28,
               template_app
                (template_app (template_hole 27, t_empty),
                 template_app
                  (template_app
                    (template_hole 18,
                     template_app (template_hole 17, t_empty)),
                   template_app (template_hole 17, t_empty)))),
             template_app
              (template_app (template_hole 27, t_empty),
               template_app
                (template_app
                  (template_hole 18,
                   template_app
                    (template_app
                      (template_hole 18,
                       template_app (template_hole 17, t_empty)),
                     template_app
                      (template_hole 8,
                       template_app
                        (template_app (template_hole 7, t_empty),
                         template_app (template_hole 3, t_empty))))),
                 template_app (template_hole 17, t_empty)))))
         )),
    ("CombinatorialAuction.vcgaDefinitenessVariant",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N |]
      ==> card
           (argmax
             (sum (summedBidVector
                    (pseudoAllocation
                      (randomEl
                        (takeAll
                          (%x. winningAllocationRel (?N Un {seller})
                                (set ?\<Omega>) ((:) x) ?b)
                          (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                        ?r) <|
                     ((?N Un {seller}) \<times> finestpart (set ?\<Omega>)))
                    (?N Un {seller}) (set ?\<Omega>)))
             (maximalStrictAllocations ?N (set ?\<Omega>) ?b)) =
          1",
     template_implication
      ([template_predicate
         (template_app (template_hole 48, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 45, template_var 3),
              template_hole 44)
            ),
        template_predicate
         (template_app (template_hole 43, template_var 2))],
       template_equation
        (template_app
          (template_hole 41,
           template_app
            (template_app
              (template_hole 40,
               template_app
                (template_hole 39,
                 template_app
                  (template_hole 38,
                   template_app
                    (template_app (template_hole 37, t_empty),
                     template_app
                      (template_app
                        (template_hole 32,
                         template_app
                          (template_app (template_hole 31, template_var 2),
                           template_app
                            (template_app
                              (template_hole 30, template_hole 29),
                             template_hole 28))),
                       t_empty))))),
             template_app
              (template_app
                (template_hole 11,
                 template_app (template_hole 10, template_var 1)),
               template_app
                (template_app (template_hole 9, template_hole 18),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 45, template_var 3)),
                   template_app
                    (template_app
                      (template_hole 31,
                       template_app
                        (template_app (template_hole 30, template_hole 29),
                         template_hole 28)),
                     template_var 2)))))),
         template_hole 7))),
    ("CombinatorialAuction.resolvingBidBridgingLemmaVariant2",
     "[| finite ?N; distinct ?\<Omega>;
         ?a : maximalStrictAllocations ?N (set ?\<Omega>) ?b |]
      ==> sum (summedBidVector
                (pseudoAllocation
                  (randomEl
                    (takeAll
                      (%x. winningAllocationRel (?N Un {seller})
                            (set ?\<Omega>) ((:) x) ?b)
                      (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                    ?r) <|
                 ((?N Un {seller}) \<times> finestpart (set ?\<Omega>)))
                (?N Un {seller}) (set ?\<Omega>))
           ?a =
          sum (randomBidsAlg ?N ?\<Omega> ?b ?r) ?a",
     template_implication
      ([template_predicate
         (template_app (template_hole 45, template_var 4)),
        template_predicate
         (template_app (template_hole 44, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 43, template_var 2),
              template_app
               (template_app
                 (template_hole 42,
                  template_app (template_hole 41, template_var 1)),
                template_app
                 (template_app (template_hole 40, template_hole 39),
                  template_app
                   (template_app
                     (template_hole 38,
                      template_app (template_hole 37, template_var 3)),
                    template_app
                     (template_app
                       (template_hole 36,
                        template_app
                         (template_app (template_hole 35, template_hole 34),
                          template_hole 33)),
                      template_var 4)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 31,
             template_app
              (template_hole 30,
               template_app
                (template_app (template_hole 29, t_empty),
                 template_app
                  (template_app
                    (template_hole 24,
                     template_app
                      (template_app (template_hole 36, template_var 4),
                       template_app
                        (template_app (template_hole 35, template_hole 34),
                         template_hole 33))),
                   t_empty)))),
           template_var 2),
         template_app
          (template_app
            (template_hole 31,
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 1),
               template_var 0)),
           template_var 2)))),
    ("CombinatorialAuction.lm08",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N |]
      ==> card
           ((argmax o sum)
             (summedBidVector
               (pseudoAllocation
                 (randomEl
                   (takeAll
                     (%x. winningAllocationRel (?N Un {seller})
                           (set ?\<Omega>) ((:) x) ?bids)
                     (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                   ?random) <|
                ((?N Un {seller}) \<times> finestpart (set ?\<Omega>)))
               (?N Un {seller}) (set ?\<Omega>))
             ((argmax o sum) ?bids
               (allAllocations (?N Un {seller}) (set ?\<Omega>)))) =
          1",
     template_implication
      ([template_predicate
         (template_app (template_hole 50, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 47, template_var 3),
              template_hole 46)
            ),
        template_predicate
         (template_app (template_hole 45, template_var 2))],
       template_equation
        (template_app
          (template_hole 43,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 42, template_hole 41),
                 template_hole 40),
               template_app
                (template_hole 39,
                 template_app
                  (template_app (template_hole 38, t_empty),
                   template_app
                    (template_app
                      (template_hole 33,
                       template_app
                        (template_app (template_hole 32, template_var 2),
                         template_app
                          (template_app
                            (template_hole 31, template_hole 30),
                           template_hole 29))),
                     t_empty)))),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_hole 12),
                   template_hole 11),
                 template_var 1),
               template_app
                (template_app (template_hole 10, template_hole 19),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app (template_hole 47, template_var 3)),
                   template_app
                    (template_app (template_hole 32, template_var 2),
                     template_app
                      (template_app (template_hole 31, template_hole 30),
                       template_hole 29))))))),
         template_hole 8))),
    ("CombinatorialAuction.vcgaDefiniteness",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N |]
      ==> card
           (Outside' {seller} `
            (argmax o sum)
             (summedBidVector
               (pseudoAllocation
                 (randomEl
                   (takeAll
                     (%x. winningAllocationRel (?N Un {seller})
                           (set ?\<Omega>) ((:) x) ?b)
                     (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                   ?r) <|
                ((?N Un {seller}) \<times> finestpart (set ?\<Omega>)))
               (?N Un {seller}) (set ?\<Omega>))
             ((argmax o sum) ?b
               (allAllocations (?N Un {seller}) (set ?\<Omega>)))) =
          1",
     template_implication
      ([template_predicate
         (template_app (template_hole 52, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 49, template_var 3),
              template_hole 48)
            ),
        template_predicate
         (template_app (template_hole 47, template_var 2))],
       template_equation
        (template_app
          (template_hole 45,
           template_app
            (template_app (template_hole 44, t_empty),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 39, template_hole 38),
                   template_hole 37),
                 template_app
                  (template_hole 36,
                   template_app
                    (template_app (template_hole 35, t_empty),
                     template_app
                      (template_app
                        (template_hole 30,
                         template_app
                          (template_app (template_hole 29, template_var 2),
                           template_app
                            (template_app
                              (template_hole 42, template_hole 41),
                             template_hole 40))),
                       t_empty)))),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_hole 12),
                     template_hole 11),
                   template_var 1),
                 template_app
                  (template_app (template_hole 10, template_hole 19),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app (template_hole 49, template_var 3)),
                     template_app
                      (template_app (template_hole 29, template_var 2),
                       template_app
                        (template_app (template_hole 42, template_hole 41),
                         template_hole 40)))))))),
         template_hole 8))),
    ("CombinatorialAuction.winningAllocationIsMaximal",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N |]
      ==> the_elem
           (argmax
             (sum (summedBidVector
                    (pseudoAllocation
                      (randomEl
                        (takeAll
                          (%x. winningAllocationRel (?N Un {seller})
                                (set ?\<Omega>) ((:) x) ?b)
                          (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                        ?r) <|
                     ((?N Un {seller}) \<times> finestpart (set ?\<Omega>)))
                    (?N Un {seller}) (set ?\<Omega>)))
             (maximalStrictAllocations ?N (set ?\<Omega>) ?b))
          : maximalStrictAllocations ?N (set ?\<Omega>) ?b",
     template_implication
      ([template_predicate
         (template_app (template_hole 47, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 44, template_var 3),
              template_hole 43)
            ),
        template_predicate
         (template_app (template_hole 42, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 41,
               template_app
                (template_hole 40,
                 template_app
                  (template_app
                    (template_hole 39,
                     template_app
                      (template_hole 38,
                       template_app
                        (template_hole 37,
                         template_app
                          (template_app (template_hole 36, t_empty),
                           template_app
                            (template_app
                              (template_hole 31,
                               template_app
                                (template_app
                                  (template_hole 30, template_var 2),
                                 template_app
                                  (template_app
                                    (template_hole 29, template_hole 28),
                                   template_hole 27))),
                             t_empty))))),
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app (template_hole 10, template_var 1)),
                     template_app
                      (template_app (template_hole 9, template_hole 17),
                       template_app
                        (template_app
                          (template_hole 8,
                           template_app (template_hole 44, template_var 3)),
                         template_app
                          (template_app
                            (template_hole 30,
                             template_app
                              (template_app
                                (template_hole 29, template_hole 28),
                               template_hole 27)),
                           template_var 2))))))),
             template_app
              (template_app
                (template_hole 11,
                 template_app (template_hole 10, template_var 1)),
               template_app
                (template_app (template_hole 9, template_hole 17),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app (template_hole 44, template_var 3)),
                   template_app
                    (template_app
                      (template_hole 30,
                       template_app
                        (template_app (template_hole 29, template_hole 28),
                         template_hole 27)),
                     template_var 2)))))
           ))),
    ("CombinatorialAuction.onlyGoodsAreAllocatedAuxiliary",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N |]
      ==> Outside' {seller}
           (the_elem
             (argmax
               (sum (summedBidVector
                      (pseudoAllocation
                        (randomEl
                          (takeAll
                            (%x. winningAllocationRel (?N Un {seller})
                                  (set ?\<Omega>) ((:) x) ?b)
                            (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                          ?r) <|
                       ((?N Un {seller}) \<times>
                        finestpart (set ?\<Omega>)))
                      (?N Un {seller}) (set ?\<Omega>)))
               (maximalStrictAllocations ?N (set ?\<Omega>) ?b)))
          : soldAllocations ?N (set ?\<Omega>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 49, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 46, template_var 3),
              template_hole 45)
            ),
        template_predicate
         (template_app (template_hole 44, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 43,
               template_app
                (template_app
                  (template_hole 42,
                   template_app
                    (template_hole 41,
                     template_app
                      (template_app
                        (template_hole 40,
                         template_app
                          (template_hole 39,
                           template_app
                            (template_hole 38,
                             template_app
                              (template_app (template_hole 37, t_empty),
                               template_app
                                (template_app
                                  (template_hole 32,
                                   template_app
                                    (template_app
(template_hole 31, template_var 2),
                                     template_app
(template_app (template_hole 30, template_hole 29), template_hole 28))),
                                 t_empty))))),
                       template_app
                        (template_app
                          (template_hole 12,
                           template_app (template_hole 11, template_var 1)),
                         template_app
                          (template_app
                            (template_hole 10, template_hole 18),
                           template_app
                            (template_app
                              (template_hole 9,
                               template_app
                                (template_hole 46, template_var 3)),
                             template_app
                              (template_app
                                (template_hole 31,
                                 template_app
                                  (template_app
                                    (template_hole 30, template_hole 29),
                                   template_hole 28)),
                               template_var 2))))))),
                 template_app
                  (template_app (template_hole 30, template_hole 29),
                   template_hole 28))),
             template_app
              (template_app (template_hole 0, t_empty),
               template_app
                (template_app (template_hole 10, template_hole 18),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app (template_hole 46, template_var 3)),
                   template_app
                    (template_app (template_hole 31, template_var 2),
                     template_app
                      (template_app (template_hole 30, template_hole 29),
                       template_hole 28))))))
           ))),
    ("CombinatorialAuction.OnlyGoodsAllocated",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N;
         ?g : the_elem
               (Outside' {seller} `
                (argmax o sum)
                 (summedBidVector
                   (pseudoAllocation
                     (randomEl
                       (takeAll
                         (%x. winningAllocationRel (?N Un {seller})
                               (set ?\<Omega>) ((:) x) ?b)
                         (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                       ?r) <|
                    ((?N Un {seller}) \<times> finestpart (set ?\<Omega>)))
                   (?N Un {seller}) (set ?\<Omega>))
                 ((argmax o sum) ?b
                   (allAllocations (?N Un {seller}) (set ?\<Omega>)))) ,,,
              ?n |]
      ==> ?g : set ?\<Omega>",
     template_implication
      ([template_predicate
         (template_app (template_hole 54, template_var 5)),
        template_negation
         (
            template_equation
             (template_app (template_hole 51, template_var 5),
              template_hole 50)
            ),
        template_predicate
         (template_app (template_hole 49, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 48, template_var 3),
              template_app
               (template_hole 47,
                template_app
                 (template_app
                   (template_hole 46,
                    template_app
                     (template_hole 45,
                      template_app
                       (template_app (template_hole 44, t_empty),
                        template_app
                         (template_app
                           (template_app
                             (template_app
                               (template_hole 39, template_hole 38),
                              template_hole 37),
                            template_app
                             (template_hole 36,
                              template_app
                               (template_app (template_hole 35, t_empty),
                                template_app
                                 (template_app
                                   (template_hole 30,
                                    template_app
                                     (template_app
 (template_hole 29, template_var 4),
template_app
 (template_app (template_hole 42, template_hole 41), template_hole 40))),
                                  t_empty)))),
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 0, template_hole 12),
                                template_hole 11),
                              template_var 2),
                            template_app
                             (template_app
                               (template_hole 10, template_hole 19),
                              template_app
                               (template_app
                                 (template_hole 9,
                                  template_app
                                   (template_hole 51, template_var 5)),
                                template_app
                                 (template_app
                                   (template_hole 29, template_var 4),
                                  template_app
                                   (template_app
                                     (template_hole 42, template_hole 41),
                                    template_hole 40))))))))),
                  template_app
                   (template_app (template_hole 42, template_var 0),
                    template_hole 40))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 48, template_var 3),
             template_app (template_hole 51, template_var 5))
           ))),
    ("CombinatorialAuction.winningAllocationIsMaximalWithoutSeller",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N |]
      ==> Outside' {seller}
           (the_elem
             (argmax
               (sum (summedBidVector
                      (pseudoAllocation
                        (randomEl
                          (takeAll
                            (%x. winningAllocationRel (?N Un {seller})
                                  (set ?\<Omega>) ((:) x) ?b)
                            (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                          ?r) <|
                       ((?N Un {seller}) \<times>
                        finestpart (set ?\<Omega>)))
                      (?N Un {seller}) (set ?\<Omega>)))
               (maximalStrictAllocations ?N (set ?\<Omega>) ?b)))
          : Outside' {seller} `
            maximalStrictAllocations ?N (set ?\<Omega>) ?b",
     template_implication
      ([template_predicate
         (template_app (template_hole 49, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 46, template_var 3),
              template_hole 45)
            ),
        template_predicate
         (template_app (template_hole 44, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 43,
               template_app
                (template_app
                  (template_hole 42,
                   template_app
                    (template_hole 41,
                     template_app
                      (template_app
                        (template_hole 40,
                         template_app
                          (template_hole 39,
                           template_app
                            (template_hole 38,
                             template_app
                              (template_app (template_hole 37, t_empty),
                               template_app
                                (template_app
                                  (template_hole 32,
                                   template_app
                                    (template_app
(template_hole 31, template_var 2),
                                     template_app
(template_app (template_hole 30, template_hole 29), template_hole 28))),
                                 t_empty))))),
                       template_app
                        (template_app
                          (template_hole 12,
                           template_app (template_hole 11, template_var 1)),
                         template_app
                          (template_app
                            (template_hole 10, template_hole 18),
                           template_app
                            (template_app
                              (template_hole 9,
                               template_app
                                (template_hole 46, template_var 3)),
                             template_app
                              (template_app
                                (template_hole 31,
                                 template_app
                                  (template_app
                                    (template_hole 30, template_hole 29),
                                   template_hole 28)),
                               template_var 2))))))),
                 template_app
                  (template_app (template_hole 30, template_hole 29),
                   template_hole 28))),
             template_app
              (template_app (template_hole 0, t_empty),
               template_app
                (template_app
                  (template_hole 12,
                   template_app (template_hole 11, template_var 1)),
                 template_app
                  (template_app (template_hole 10, template_hole 18),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app (template_hole 46, template_var 3)),
                     template_app
                      (template_app
                        (template_hole 31,
                         template_app
                          (template_app
                            (template_hole 30, template_hole 29),
                           template_hole 28)),
                       template_var 2))))))
           ))),
    ("CombinatorialAuction.onlyGoodsAreAllocated",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N |]
      ==> the_elem
           (Outside' {seller} `
            (argmax o sum)
             (summedBidVector
               (pseudoAllocation
                 (randomEl
                   (takeAll
                     (%x. winningAllocationRel (?N Un {seller})
                           (set ?\<Omega>) ((:) x) ?b)
                     (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                   ?r) <|
                ((?N Un {seller}) \<times> finestpart (set ?\<Omega>)))
               (?N Un {seller}) (set ?\<Omega>))
             ((argmax o sum) ?b
               (allAllocations (?N Un {seller}) (set ?\<Omega>))))
          : soldAllocations ?N (set ?\<Omega>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 51, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 48, template_var 3),
              template_hole 47)
            ),
        template_predicate
         (template_app (template_hole 46, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 45,
               template_app
                (template_hole 44,
                 template_app
                  (template_app (template_hole 43, t_empty),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 38, template_hole 37),
                         template_hole 36),
                       template_app
                        (template_hole 35,
                         template_app
                          (template_app (template_hole 34, t_empty),
                           template_app
                            (template_app
                              (template_hole 29,
                               template_app
                                (template_app
                                  (template_hole 28, template_var 2),
                                 template_app
                                  (template_app
                                    (template_hole 41, template_hole 40),
                                   template_hole 39))),
                             t_empty)))),
                     template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 0, template_hole 12),
                           template_hole 11),
                         template_var 1),
                       template_app
                        (template_app (template_hole 10, template_hole 18),
                         template_app
                          (template_app
                            (template_hole 9,
                             template_app
                              (template_hole 48, template_var 3)),
                           template_app
                            (template_app
                              (template_hole 28, template_var 2),
                             template_app
                              (template_app
                                (template_hole 41, template_hole 40),
                               template_hole 39))))))))),
             template_app
              (template_app (template_hole 43, t_empty),
               template_app
                (template_app (template_hole 10, template_hole 18),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app (template_hole 48, template_var 3)),
                   template_app
                    (template_app (template_hole 28, template_var 2),
                     template_app
                      (template_app (template_hole 41, template_hole 40),
                       template_hole 39))))))
           ))),
    ("CombinatorialAuction.NonnegPrices",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N |]
      ==> 0 <= Max (sum ?b ` soldAllocations (?N - {?n}) (set ?\<Omega>)) -
               sum ?b
                (Outside' {?n}
                  (the_elem
                    (Outside' {seller} `
                     (argmax o sum)
                      (summedBidVector
                        (pseudoAllocation
                          (randomEl
                            (takeAll
                              (%x. winningAllocationRel (?N Un {seller})
                                    (set ?\<Omega>) ((:) x) ?b)
                              (allAllocationsAlg (?N Un {seller})
                                ?\<Omega>))
                            ?r) <|
                         ((?N Un {seller}) \<times>
                          finestpart (set ?\<Omega>)))
                        (?N Un {seller}) (set ?\<Omega>))
                      ((argmax o sum) ?b
                        (allAllocations (?N Un {seller})
                          (set ?\<Omega>))))))",
     template_implication
      ([template_predicate
         (template_app (template_hole 57, template_var 4)),
        template_negation
         (
            template_equation
             (template_app (template_hole 54, template_var 4),
              template_hole 53)
            ),
        template_predicate
         (template_app (template_hole 52, template_var 3))],
       template_inequation
        (less_equals, template_hole 50,
         template_app
          (template_app
            (template_hole 49,
             template_app
              (template_hole 48,
               template_app
                (template_app
                  (template_hole 47,
                   template_app (template_hole 46, template_var 2)),
                 template_app
                  (template_app (template_hole 45, t_empty),
                   template_app
                    (template_app (template_hole 40, template_hole 39),
                     template_app
                      (template_app
                        (template_hole 38,
                         template_app (template_hole 54, template_var 4)),
                       template_app
                        (template_app
                          (template_hole 37,
                           template_app
                            (template_app
                              (template_hole 36, template_var 3),
                             template_app
                              (template_app
                                (template_hole 43, template_var 1),
                               template_hole 41))),
                         template_app
                          (template_app
                            (template_hole 43, template_hole 42),
                           template_hole 41)))))))),
           template_app
            (template_app (template_hole 46, template_var 2),
             template_app
              (template_app
                (template_hole 44,
                 template_app
                  (template_hole 35,
                   template_app
                    (template_app (template_hole 45, t_empty),
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_hole 34, template_hole 33),
                           template_hole 32),
                         template_app
                          (template_hole 31,
                           template_app
                            (template_app (template_hole 30, t_empty),
                             template_app
                              (template_app
                                (template_hole 25,
                                 template_app
                                  (template_app
                                    (template_hole 37, template_var 3),
                                   template_app
                                    (template_app
(template_hole 43, template_hole 42),
                                     template_hole 41))),
                               t_empty)))),
                       template_app
                        (template_app
                          (template_app
                            (template_app
                              (template_hole 0, template_hole 9),
                             template_hole 46),
                           template_var 2),
                         template_app
                          (template_app
                            (template_hole 40, template_hole 39),
                           template_app
                            (template_app
                              (template_hole 38,
                               template_app
                                (template_hole 54, template_var 4)),
                             template_app
                              (template_app
                                (template_hole 37, template_var 3),
                               template_app
                                (template_app
                                  (template_hole 43, template_hole 42),
                                 template_hole 41))))))))),
               template_app
                (template_app (template_hole 43, template_var 1),
                 template_hole 41))))))),
    ("CombinatorialAuction.vcgaIsMaximalAux1",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N |]
      ==> EX a. a : maximalStrictAllocations ?N (set ?\<Omega>) ?b &
                Outside' {seller}
                 (the_elem
                   (argmax
                     (sum (summedBidVector
                            (pseudoAllocation
                              (randomEl
                                (takeAll
                                  (%x.
winningAllocationRel (?N Un {seller}) (set ?\<Omega>) ((:) x) ?b)
                                  (allAllocationsAlg (?N Un {seller})
                                    ?\<Omega>))
                                ?r) <|
                             ((?N Un {seller}) \<times>
                              finestpart (set ?\<Omega>)))
                            (?N Un {seller}) (set ?\<Omega>)))
                     (maximalStrictAllocations ?N (set ?\<Omega>) ?b))) =
                Outside' {seller} a &
                a : maximalStrictAllocations ?N (set ?\<Omega>) ?b",
     template_implication
      ([template_predicate
         (template_app (template_hole 51, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 48, template_var 3),
              template_hole 47)
            ),
        template_predicate
         (template_app (template_hole 46, template_var 2))],
       template_predicate (template_app (template_hole 45, t_empty)))),
    ("CombinatorialAuction.vcgpDefiniteness",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N |]
      ==> EX! y.
             Max (sum ?b ` soldAllocations (?N - {?n}) (set ?\<Omega>)) -
             sum ?b
              (Outside' {?n}
                (the_elem
                  (Outside' {seller} `
                   (argmax o sum)
                    (summedBidVector
                      (pseudoAllocation
                        (randomEl
                          (takeAll
                            (%x. winningAllocationRel (?N Un {seller})
                                  (set ?\<Omega>) ((:) x) ?b)
                            (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                          ?r) <|
                       ((?N Un {seller}) \<times>
                        finestpart (set ?\<Omega>)))
                      (?N Un {seller}) (set ?\<Omega>))
                    ((argmax o sum) ?b
                      (allAllocations (?N Un {seller})
                        (set ?\<Omega>)))))) =
             y",
     template_implication
      ([template_predicate
         (template_app (template_hole 57, template_var 4)),
        template_negation
         (
            template_equation
             (template_app (template_hole 54, template_var 4),
              template_hole 53)
            ),
        template_predicate
         (template_app (template_hole 52, template_var 3))],
       template_predicate (template_app (template_hole 51, t_empty)))),
    ("CombinatorialAuction.vcgaIsMaximal",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N;
         ALL X. ?b (seller, X) = (0::?'b) |]
      ==> sum ?b
           (Outside' {seller}
             (the_elem
               (argmax
                 (sum (summedBidVector
                        (pseudoAllocation
                          (randomEl
                            (takeAll
                              (%x. winningAllocationRel (?N Un {seller})
                                    (set ?\<Omega>) ((:) x) ?b)
                              (allAllocationsAlg (?N Un {seller})
                                ?\<Omega>))
                            ?r) <|
                         ((?N Un {seller}) \<times>
                          finestpart (set ?\<Omega>)))
                        (?N Un {seller}) (set ?\<Omega>)))
                 (maximalStrictAllocations ?N (set ?\<Omega>) ?b)))) =
          Max {sum ?b a |a. a : soldAllocations ?N (set ?\<Omega>)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 56, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 53, template_var 3),
              template_hole 52)
            ),
        template_predicate
         (template_app (template_hole 51, template_var 2)),
        template_predicate (template_app (template_hole 50, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 45, template_var 1),
           template_app
            (template_app
              (template_hole 44,
               template_app
                (template_hole 43,
                 template_app
                  (template_app
                    (template_hole 42,
                     template_app
                      (template_hole 41,
                       template_app
                        (template_hole 40,
                         template_app
                          (template_app (template_hole 39, t_empty),
                           template_app
                            (template_app
                              (template_hole 34,
                               template_app
                                (template_app
                                  (template_hole 33, template_var 2),
                                 template_app
                                  (template_app
                                    (template_hole 32, template_hole 47),
                                   template_hole 31))),
                             t_empty))))),
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app (template_hole 45, template_var 1)),
                     template_app
                      (template_app (template_hole 13, template_hole 21),
                       template_app
                        (template_app
                          (template_hole 12,
                           template_app (template_hole 53, template_var 3)),
                         template_app
                          (template_app
                            (template_hole 33,
                             template_app
                              (template_app
                                (template_hole 32, template_hole 47),
                               template_hole 31)),
                           template_var 2))))))),
             template_app
              (template_app (template_hole 32, template_hole 47),
               template_hole 31))),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("CombinatorialAuction.vcgaIsMaximalAux2",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N;
         ALL a:allAllocations ({seller} Un ?N) (set ?\<Omega>).
            ALL X:Range a. ?b (seller, X) = (0::?'b) |]
      ==> sum ?b
           (Outside' {seller}
             (the_elem
               (argmax
                 (sum (summedBidVector
                        (pseudoAllocation
                          (randomEl
                            (takeAll
                              (%x. winningAllocationRel (?N Un {seller})
                                    (set ?\<Omega>) ((:) x) ?b)
                              (allAllocationsAlg (?N Un {seller})
                                ?\<Omega>))
                            ?r) <|
                         ((?N Un {seller}) \<times>
                          finestpart (set ?\<Omega>)))
                        (?N Un {seller}) (set ?\<Omega>)))
                 (maximalStrictAllocations ?N (set ?\<Omega>) ?b)))) =
          Max {sum ?b a |a. a : soldAllocations ?N (set ?\<Omega>)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 58, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 55, template_var 3),
              template_hole 54)
            ),
        template_predicate
         (template_app (template_hole 53, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 52,
                template_app
                 (template_app (template_hole 51, template_hole 50),
                  template_app
                   (template_app
                     (template_hole 49,
                      template_app (template_hole 55, template_var 3)),
                    template_app
                     (template_app
                       (template_hole 48,
                        template_app
                         (template_app (template_hole 47, template_hole 46),
                          template_hole 45)),
                      template_var 2)))),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 39, template_var 1),
           template_app
            (template_app
              (template_hole 38,
               template_app
                (template_hole 37,
                 template_app
                  (template_app
                    (template_hole 36,
                     template_app
                      (template_hole 35,
                       template_app
                        (template_hole 34,
                         template_app
                          (template_app (template_hole 33, t_empty),
                           template_app
                            (template_app
                              (template_hole 28,
                               template_app
                                (template_app
                                  (template_hole 48, template_var 2),
                                 template_app
                                  (template_app
                                    (template_hole 47, template_hole 46),
                                   template_hole 45))),
                             t_empty))))),
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app (template_hole 39, template_var 1)),
                     template_app
                      (template_app (template_hole 51, template_hole 50),
                       template_app
                        (template_app
                          (template_hole 49,
                           template_app (template_hole 55, template_var 3)),
                         template_app
                          (template_app
                            (template_hole 48,
                             template_app
                              (template_app
                                (template_hole 47, template_hole 46),
                               template_hole 45)),
                           template_var 2))))))),
             template_app
              (template_app (template_hole 47, template_hole 46),
               template_hole 45))),
         template_app
          (template_hole 4, template_app (template_hole 3, t_empty))))),
    ("CombinatorialAuction.vcgaEquivalence",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N |]
      ==> the_elem
           (Outside' {seller} `
            (argmax o sum)
             (summedBidVector
               (pseudoAllocation
                 (randomEl
                   (takeAll
                     (%x. winningAllocationRel (?N Un {seller})
                           (set ?\<Omega>) ((:) x) ?b)
                     (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                   ?r) <|
                ((?N Un {seller}) \<times> finestpart (set ?\<Omega>)))
               (?N Un {seller}) (set ?\<Omega>))
             ((argmax o sum) ?b
               (allAllocations (?N Un {seller}) (set ?\<Omega>)))) =
          Outside' {seller}
           (the_elem
             (argmax
               (sum (summedBidVector
                      (pseudoAllocation
                        (randomEl
                          (takeAll
                            (%x. winningAllocationRel (?N Un {seller})
                                  (set ?\<Omega>) ((:) x) ?b)
                            (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                          ?r) <|
                       ((?N Un {seller}) \<times>
                        finestpart (set ?\<Omega>)))
                      (?N Un {seller}) (set ?\<Omega>)))
               (maximalStrictAllocations ?N (set ?\<Omega>) ?b)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 52, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 49, template_var 3),
              template_hole 48)
            ),
        template_predicate
         (template_app (template_hole 47, template_var 2))],
       template_equation
        (template_app
          (template_hole 45,
           template_app
            (template_app (template_hole 44, t_empty),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 39, template_hole 38),
                   template_hole 37),
                 template_app
                  (template_hole 36,
                   template_app
                    (template_app (template_hole 35, t_empty),
                     template_app
                      (template_app
                        (template_hole 30,
                         template_app
                          (template_app (template_hole 29, template_var 2),
                           template_app
                            (template_app
                              (template_hole 42, template_hole 41),
                             template_hole 40))),
                       t_empty)))),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_hole 12),
                     template_hole 11),
                   template_var 1),
                 template_app
                  (template_app (template_hole 10, template_hole 19),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app (template_hole 49, template_var 3)),
                     template_app
                      (template_app (template_hole 29, template_var 2),
                       template_app
                        (template_app (template_hole 42, template_hole 41),
                         template_hole 40)))))))),
         template_app
          (template_app
            (template_hole 43,
             template_app
              (template_hole 45,
               template_app
                (template_app
                  (template_hole 38,
                   template_app
                    (template_hole 37,
                     template_app
                      (template_hole 36,
                       template_app
                        (template_app (template_hole 35, t_empty),
                         template_app
                          (template_app
                            (template_hole 30,
                             template_app
                              (template_app
                                (template_hole 29, template_var 2),
                               template_app
                                (template_app
                                  (template_hole 42, template_hole 41),
                                 template_hole 40))),
                           t_empty))))),
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app (template_hole 11, template_var 1)),
                   template_app
                    (template_app (template_hole 10, template_hole 19),
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app (template_hole 49, template_var 3)),
                       template_app
                        (template_app
                          (template_hole 29,
                           template_app
                            (template_app
                              (template_hole 42, template_hole 41),
                             template_hole 40)),
                         template_var 2))))))),
           template_app
            (template_app (template_hole 42, template_hole 41),
             template_hole 40))))),
    ("CombinatorialAuction.PairwiseDisjointAllocations",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N;
         ?n1.0 ~= ?n2.0 |]
      ==> Outside' {seller}
           (the_elem
             (argmax
               (sum (summedBidVector
                      (pseudoAllocation
                        (randomEl
                          (takeAll
                            (%x. winningAllocationRel (?N Un {seller})
                                  (set ?\<Omega>) ((:) x) ?b)
                            (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                          ?r) <|
                       ((?N Un {seller}) \<times>
                        finestpart (set ?\<Omega>)))
                      (?N Un {seller}) (set ?\<Omega>)))
               (maximalStrictAllocations ?N (set ?\<Omega>) ?b))) ,,,
          ?n1.0 Int
          Outside' {seller}
           (the_elem
             (argmax
               (sum (summedBidVector
                      (pseudoAllocation
                        (randomEl
                          (takeAll
                            (%x. winningAllocationRel (?N Un {seller})
                                  (set ?\<Omega>) ((:) x) ?b)
                            (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                          ?r) <|
                       ((?N Un {seller}) \<times>
                        finestpart (set ?\<Omega>)))
                      (?N Un {seller}) (set ?\<Omega>)))
               (maximalStrictAllocations ?N (set ?\<Omega>) ?b))) ,,,
          ?n2.0 =
          {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 52, template_var 5)),
        template_negation
         (
            template_equation
             (template_app (template_hole 49, template_var 5),
              template_hole 48)
            ),
        template_predicate
         (template_app (template_hole 47, template_var 4)),
        template_negation
         (template_equation (template_var 3, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 45,
             template_app
              (template_hole 44,
               template_app
                (template_app
                  (template_hole 43,
                   template_app
                    (template_app
                      (template_hole 42,
                       template_app
                        (template_hole 41,
                         template_app
                          (template_app
                            (template_hole 40,
                             template_app
                              (template_hole 39,
                               template_app
                                (template_hole 38,
                                 template_app
                                  (template_app (template_hole 37, t_empty),
                                   template_app
                                    (template_app
(template_hole 32,
 template_app
  (template_app (template_hole 31, template_var 4),
   template_app
    (template_app (template_hole 30, template_hole 29), template_hole 28))),
                                     t_empty))))),
                           template_app
                            (template_app
                              (template_hole 11,
                               template_app
                                (template_hole 10, template_var 1)),
                             template_app
                              (template_app
                                (template_hole 9, template_hole 18),
                               template_app
                                (template_app
                                  (template_hole 8,
                                   template_app
                                    (template_hole 49, template_var 5)),
                                 template_app
                                  (template_app
                                    (template_hole 31,
                                     template_app
(template_app (template_hole 30, template_hole 29), template_hole 28)),
                                   template_var 4))))))),
                     template_app
                      (template_app (template_hole 30, template_hole 29),
                       template_hole 28))),
                 template_app
                  (template_app (template_hole 30, template_var 3),
                   template_hole 28)))),
           template_app
            (template_hole 44,
             template_app
              (template_app
                (template_hole 43,
                 template_app
                  (template_app
                    (template_hole 42,
                     template_app
                      (template_hole 41,
                       template_app
                        (template_app
                          (template_hole 40,
                           template_app
                            (template_hole 39,
                             template_app
                              (template_hole 38,
                               template_app
                                (template_app (template_hole 37, t_empty),
                                 template_app
                                  (template_app
                                    (template_hole 32,
                                     template_app
(template_app (template_hole 31, template_var 4),
 template_app
  (template_app (template_hole 30, template_hole 29), template_hole 28))),
                                   t_empty))))),
                         template_app
                          (template_app
                            (template_hole 11,
                             template_app
                              (template_hole 10, template_var 1)),
                           template_app
                            (template_app
                              (template_hole 9, template_hole 18),
                             template_app
                              (template_app
                                (template_hole 8,
                                 template_app
                                  (template_hole 49, template_var 5)),
                               template_app
                                (template_app
                                  (template_hole 31,
                                   template_app
                                    (template_app
(template_hole 30, template_hole 29),
                                     template_hole 28)),
                                 template_var 4))))))),
                   template_app
                    (template_app (template_hole 30, template_hole 29),
                     template_hole 28))),
               template_app
                (template_app (template_hole 30, template_var 2),
                 template_hole 28)))),
         template_hole 48))),
    ("CombinatorialAuction.vcgaIsAllocationAllocatingGoodsOnly",
     "[| distinct ?\<Omega>; set ?\<Omega> ~= {}; finite ?N |]
      ==> Outside' {seller}
           (the_elem
             (argmax
               (sum (summedBidVector
                      (pseudoAllocation
                        (randomEl
                          (takeAll
                            (%x. winningAllocationRel (?N Un {seller})
                                  (set ?\<Omega>) ((:) x) ?b)
                            (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                          ?r) <|
                       ((?N Un {seller}) \<times>
                        finestpart (set ?\<Omega>)))
                      (?N Un {seller}) (set ?\<Omega>)))
               (maximalStrictAllocations ?N (set ?\<Omega>) ?b)))
          : allocationsUniverse &
          \<Union>
           (Range
             (Outside' {seller}
               (the_elem
                 (argmax
                   (sum (summedBidVector
                          (pseudoAllocation
                            (randomEl
                              (takeAll
                                (%x. winningAllocationRel (?N Un {seller})
(set ?\<Omega>) ((:) x) ?b)
                                (allAllocationsAlg (?N Un {seller})
                                  ?\<Omega>))
                              ?r) <|
                           ((?N Un {seller}) \<times>
                            finestpart (set ?\<Omega>)))
                          (?N Un {seller}) (set ?\<Omega>)))
                   (maximalStrictAllocations ?N (set ?\<Omega>) ?b)))))
          <= set ?\<Omega>",
     template_implication
      ([template_predicate
         (template_app (template_hole 63, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 60, template_var 3),
              template_hole 59)
            ),
        template_predicate
         (template_app (template_hole 58, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 57,
               template_app
                (template_app
                  (template_hole 56,
                   template_app
                    (template_app
                      (template_hole 55,
                       template_app
                        (template_hole 54,
                         template_app
                          (template_app
                            (template_hole 53,
                             template_app
                              (template_hole 52,
                               template_app
                                (template_hole 51,
                                 template_app
                                  (template_app (template_hole 50, t_empty),
                                   template_app
                                    (template_app
(template_hole 45,
 template_app
  (template_app (template_hole 44, template_var 2),
   template_app
    (template_app (template_hole 43, template_hole 42), template_hole 41))),
                                     t_empty))))),
                           template_app
                            (template_app
                              (template_hole 25,
                               template_app
                                (template_hole 24, template_var 1)),
                             template_app
                              (template_app
                                (template_hole 23, template_hole 31),
                               template_app
                                (template_app
                                  (template_hole 22,
                                   template_app
                                    (template_hole 60, template_var 3)),
                                 template_app
                                  (template_app
                                    (template_hole 44,
                                     template_app
(template_app (template_hole 43, template_hole 42), template_hole 41)),
                                   template_var 2))))))),
                     template_app
                      (template_app (template_hole 43, template_hole 42),
                       template_hole 41))),
                 template_app
                  (template_app
                    (template_hole 13,
                     template_app (template_hole 12, t_empty)),
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, t_empty),
                       template_app (template_hole 4, t_empty)))))),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_hole 0,
                     template_app
                      (template_app
                        (template_hole 55,
                         template_app
                          (template_hole 54,
                           template_app
                            (template_app
                              (template_hole 53,
                               template_app
                                (template_hole 52,
                                 template_app
                                  (template_hole 51,
                                   template_app
                                    (template_app
(template_hole 50, t_empty),
                                     template_app
(template_app
  (template_hole 45,
   template_app
    (template_app (template_hole 44, template_var 2),
     template_app
      (template_app (template_hole 43, template_hole 42),
       template_hole 41))),
 t_empty))))),
                             template_app
                              (template_app
                                (template_hole 25,
                                 template_app
                                  (template_hole 24, template_var 1)),
                               template_app
                                (template_app
                                  (template_hole 23, template_hole 31),
                                 template_app
                                  (template_app
                                    (template_hole 22,
                                     template_app
(template_hole 60, template_var 3)),
                                   template_app
                                    (template_app
(template_hole 44,
 template_app
  (template_app (template_hole 43, template_hole 42), template_hole 41)),
                                     template_var 2))))))),
                       template_app
                        (template_app (template_hole 43, template_hole 42),
                         template_hole 41))))),
               template_app (template_hole 60, template_var 3)))
           ))),
    ("CombinatorialAuction.lm07",
     "card
       ((argmax o sum)
         (summedBidVector
           (pseudoAllocation
             (randomEl
               (takeAll
                 (%x. winningAllocationRel (?N Un {seller}) (set ?\<Omega>)
                       ((:) x) ?b)
                 (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
               ?r) <|
            ((?N Un {seller}) \<times> finestpart (set ?\<Omega>)))
           (?N Un {seller}) (set ?\<Omega>))
         ((argmax o sum) ?b
           (allAllocations (?N Un {seller}) (set ?\<Omega>)))) =
      1 ==>
      the_elem
       (Outside' {seller} `
        (argmax o sum)
         (summedBidVector
           (pseudoAllocation
             (randomEl
               (takeAll
                 (%x. winningAllocationRel (?N Un {seller}) (set ?\<Omega>)
                       ((:) x) ?b)
                 (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
               ?r) <|
            ((?N Un {seller}) \<times> finestpart (set ?\<Omega>)))
           (?N Un {seller}) (set ?\<Omega>))
         ((argmax o sum) ?b
           (allAllocations (?N Un {seller}) (set ?\<Omega>)))) =
      Outside' {seller}
       (the_elem
         (argmax
           (sum (summedBidVector
                  (pseudoAllocation
                    (randomEl
                      (takeAll
                        (%x. winningAllocationRel (?N Un {seller})
                              (set ?\<Omega>) ((:) x) ?b)
                        (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                      ?r) <|
                   ((?N Un {seller}) \<times> finestpart (set ?\<Omega>)))
                  (?N Un {seller}) (set ?\<Omega>)))
           (maximalStrictAllocations ?N (set ?\<Omega>) ?b)))",
     template_implication
      ([template_equation
         (template_app
           (template_hole 49,
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 48, template_hole 47),
                  template_hole 46),
                template_app
                 (template_hole 45,
                  template_app
                   (template_app (template_hole 44, t_empty),
                    template_app
                     (template_app
                       (template_hole 39,
                        template_app
                         (template_app (template_hole 38, template_var 3),
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35))),
                      t_empty)))),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 17),
                    template_hole 16),
                  template_var 1),
                template_app
                 (template_app (template_hole 15, template_hole 24),
                  template_app
                   (template_app
                     (template_hole 14,
                      template_app (template_hole 33, template_var 2)),
                    template_app
                     (template_app (template_hole 38, template_var 3),
                      template_app
                       (template_app (template_hole 37, template_hole 36),
                        template_hole 35))))))),
          template_hole 13)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 48, template_hole 47),
                   template_hole 46),
                 template_app
                  (template_hole 45,
                   template_app
                    (template_app (template_hole 44, t_empty),
                     template_app
                      (template_app
                        (template_hole 39,
                         template_app
                          (template_app (template_hole 38, template_var 3),
                           template_app
                            (template_app
                              (template_hole 37, template_hole 36),
                             template_hole 35))),
                       t_empty)))),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_hole 17),
                     template_hole 16),
                   template_var 1),
                 template_app
                  (template_app (template_hole 15, template_hole 24),
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app (template_hole 33, template_var 2)),
                     template_app
                      (template_app (template_hole 38, template_var 3),
                       template_app
                        (template_app (template_hole 37, template_hole 36),
                         template_hole 35)))))))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 47,
                   template_app
                    (template_hole 46,
                     template_app
                      (template_hole 45,
                       template_app
                        (template_app (template_hole 44, t_empty),
                         template_app
                          (template_app
                            (template_hole 39,
                             template_app
                              (template_app
                                (template_hole 38, template_var 3),
                               template_app
                                (template_app
                                  (template_hole 37, template_hole 36),
                                 template_hole 35))),
                           t_empty))))),
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app (template_hole 16, template_var 1)),
                   template_app
                    (template_app (template_hole 15, template_hole 24),
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app (template_hole 33, template_var 2)),
                       template_app
                        (template_app
                          (template_hole 38,
                           template_app
                            (template_app
                              (template_hole 37, template_hole 36),
                             template_hole 35)),
                         template_var 3))))))),
           template_app
            (template_app (template_hole 37, template_hole 36),
             template_hole 35))))),
    ("CombinatorialAuction.lm06",
     "card
       ((argmax o sum)
         (summedBidVector
           (pseudoAllocation
             (randomEl
               (takeAll
                 (%x. winningAllocationRel (?N Un {seller}) (set ?\<Omega>)
                       ((:) x) ?b)
                 (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
               ?r) <|
            ((?N Un {seller}) \<times> finestpart (set ?\<Omega>)))
           (?N Un {seller}) (set ?\<Omega>))
         ((argmax o sum) ?b
           (allAllocations (?N Un {seller}) (set ?\<Omega>)))) =
      1 ==>
      the_elem
       (Outside' {seller} `
        (argmax o sum)
         (summedBidVector
           (pseudoAllocation
             (randomEl
               (takeAll
                 (%x. winningAllocationRel (?N Un {seller}) (set ?\<Omega>)
                       ((:) x) ?b)
                 (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
               ?r) <|
            ((?N Un {seller}) \<times> finestpart (set ?\<Omega>)))
           (?N Un {seller}) (set ?\<Omega>))
         ((argmax o sum) ?b
           (allAllocations (?N Un {seller}) (set ?\<Omega>)))) =
      Outside' {seller}
       (the_elem
         ((argmax o sum)
           (summedBidVector
             (pseudoAllocation
               (randomEl
                 (takeAll
                   (%x. winningAllocationRel (?N Un {seller})
                         (set ?\<Omega>) ((:) x) ?b)
                   (allAllocationsAlg (?N Un {seller}) ?\<Omega>))
                 ?r) <|
              ((?N Un {seller}) \<times> finestpart (set ?\<Omega>)))
             (?N Un {seller}) (set ?\<Omega>))
           ((argmax o sum) ?b
             (allAllocations ({seller} Un ?N) (set ?\<Omega>)))))",
     template_implication
      ([template_equation
         (template_app
           (template_hole 49,
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 48, template_hole 47),
                  template_hole 46),
                template_app
                 (template_hole 45,
                  template_app
                   (template_app (template_hole 44, t_empty),
                    template_app
                     (template_app
                       (template_hole 39,
                        template_app
                         (template_app (template_hole 38, template_var 3),
                          template_app
                           (template_app
                             (template_hole 37, template_hole 36),
                            template_hole 35))),
                      t_empty)))),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_hole 17),
                    template_hole 16),
                  template_var 1),
                template_app
                 (template_app (template_hole 15, template_hole 24),
                  template_app
                   (template_app
                     (template_hole 14,
                      template_app (template_hole 33, template_var 2)),
                    template_app
                     (template_app (template_hole 38, template_var 3),
                      template_app
                       (template_app (template_hole 37, template_hole 36),
                        template_hole 35))))))),
          template_hole 13)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 48, template_hole 47),
                   template_hole 46),
                 template_app
                  (template_hole 45,
                   template_app
                    (template_app (template_hole 44, t_empty),
                     template_app
                      (template_app
                        (template_hole 39,
                         template_app
                          (template_app (template_hole 38, template_var 3),
                           template_app
                            (template_app
                              (template_hole 37, template_hole 36),
                             template_hole 35))),
                       t_empty)))),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_hole 17),
                     template_hole 16),
                   template_var 1),
                 template_app
                  (template_app (template_hole 15, template_hole 24),
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app (template_hole 33, template_var 2)),
                     template_app
                      (template_app (template_hole 38, template_var 3),
                       template_app
                        (template_app (template_hole 37, template_hole 36),
                         template_hole 35)))))))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 48, template_hole 47),
                     template_hole 46),
                   template_app
                    (template_hole 45,
                     template_app
                      (template_app (template_hole 44, t_empty),
                       template_app
                        (template_app
                          (template_hole 39,
                           template_app
                            (template_app
                              (template_hole 38, template_var 3),
                             template_app
                              (template_app
                                (template_hole 37, template_hole 36),
                               template_hole 35))),
                         t_empty)))),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_hole 17),
                       template_hole 16),
                     template_var 1),
                   template_app
                    (template_app (template_hole 15, template_hole 24),
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app (template_hole 33, template_var 2)),
                       template_app
                        (template_app
                          (template_hole 38,
                           template_app
                            (template_app
                              (template_hole 37, template_hole 36),
                             template_hole 35)),
                         template_var 3))))))),
           template_app
            (template_app (template_hole 37, template_hole 36),
             template_hole 35)))))]:
   (string * thm * template) list
### theory "Draft.CombinatorialAuctionMoreTemplates"
### 0.598s elapsed time, 0.696s cpu time, 0.041s GC time
val it = (): unit
