Loading theory "Draft.Argmax" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools")
Loading theory "Draft.SetUtils" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.Partitions")
Loading theory "HOL-Library.Code_Abstract_Nat" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools" via "HOL-Library.Code_Target_Nat")
Loading theory "HOL-Library.FuncSet" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools" via "HOL-Library.Indicator_Function" via "HOL-Library.Disjoint_Sets")
Found termination order: "{}"
### theory "HOL-Library.Code_Abstract_Nat"
### 0.074s elapsed time, 0.321s cpu time, 0.000s GC time
Loading theory "HOL-Library.Code_Target_Nat" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools")
### theory "Draft.SetUtils"
### 0.098s elapsed time, 0.402s cpu time, 0.033s GC time
Loading theory "Draft.Partitions" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction")
### Code generator: dropping subsumed code equation
### divmod_nat ?m ?n ==
### if ?n = 0 | ?m < ?n then (0, ?m)
### else let (q, y) = divmod_nat (?m - ?n) ?n in (Suc q, y)
### Code generator: dropping subsumed code equation
### divmod (num.Bit1 ?m) (num.Bit1 ?n) ==
### if ?m < ?n then (0, numeral (num.Bit1 ?m))
### else divmod_step (num.Bit1 ?n)
###       (divmod (num.Bit1 ?m) (num.Bit0 (num.Bit1 ?n)))
### Code generator: dropping subsumed code equation
### divmod (num.Bit0 ?m) (num.Bit1 ?n) ==
### if ?m <= ?n then (0, numeral (num.Bit0 ?m))
### else divmod_step (num.Bit1 ?n)
###       (divmod (num.Bit0 ?m) (num.Bit0 (num.Bit1 ?n)))
### Code generator: dropping subsumed code equation
### divmod (num.Bit1 ?m) (num.Bit0 ?n) ==
### case divmod ?m ?n of (q, r) => (q, 2 * r + 1)
### Code generator: dropping subsumed code equation
### divmod (num.Bit0 ?m) (num.Bit0 ?n) ==
### case divmod ?m ?n of (q, r) => (q, 2 * r)
### Code generator: dropping subsumed code equation
### divmod num.One (num.Bit1 ?n) == (0, Numeral1)
### Code generator: dropping subsumed code equation
### divmod num.One (num.Bit0 ?n) == (0, Numeral1)
### Code generator: dropping subsumed code equation
### divmod ?m num.One == (numeral ?m, 0)
### Code generator: dropping subsumed code equation
### Suc ?m <= ?n == ?m < ?n
### Code generator: dropping subsumed code equation
### 0 <= ?n == True
### Code generator: dropping subsumed code equation
### ?m < Suc ?n == ?m <= ?n
### Code generator: dropping subsumed code equation
### ?n < 0 == False
### theory "Draft.Argmax"
### 0.172s elapsed time, 0.699s cpu time, 0.033s GC time
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
### Code generator: dropping subsumed code equation
### of_nat ?n == semiring_1_class.of_nat_aux (%i. i + (1::?'a)) ?n (0::?'a)
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
### theory "HOL-Library.Code_Target_Nat"
### 0.133s elapsed time, 0.519s cpu time, 0.033s GC time
Loading theory "Draft.RelationOperators" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools" via "Draft.RelationProperties")
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
### theory "HOL-Library.Function_Algebras"
### 0.146s elapsed time, 0.573s cpu time, 0.074s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Found termination order: "length <*mlex*> {}"
Found termination order: "{}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.FuncSet"
### 0.406s elapsed time, 1.615s cpu time, 0.108s GC time
Loading theory "HOL-Library.Disjoint_Sets" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools" via "HOL-Library.Indicator_Function")
Found termination order: "length <*mlex*> {}"
### theory "Draft.Partitions"
### 0.374s elapsed time, 1.471s cpu time, 0.203s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Found termination order: "{}"
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
Found termination order: "size_list size <*mlex*> {}"
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
### theory "Draft.RelationOperators"
### 0.321s elapsed time, 1.259s cpu time, 0.203s GC time
Loading theory "Draft.RelationProperties" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools")
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### theory "HOL-Library.Nat_Bijection"
### 0.326s elapsed time, 1.284s cpu time, 0.249s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.209s elapsed time, 0.823s cpu time, 0.121s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Disjoint_Sets"
### 0.262s elapsed time, 1.039s cpu time, 0.121s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
### theory "Draft.RelationProperties"
### 0.241s elapsed time, 0.940s cpu time, 0.256s GC time
Loading theory "HOL-Library.Discrete" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools")
### Rewrite rule not in simpset:
### Wellfounded.accp log_rel ?n1 ==>
### log ?n1 == if ?n1 < 2 then 0 else Suc (log (?n1 div 2))
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Discrete"
### 0.143s elapsed time, 0.575s cpu time, 0.000s GC time
Loading theory "HOL-Library.Indicator_Function" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction" via "Draft.MiscTools")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  right :: "'a tree => 'a tree"
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.Indicator_Function"
### 0.608s elapsed time, 2.230s cpu time, 0.684s GC time
Loading theory "Draft.MiscTools" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.UniformTieBreaking" via "Draft.StrictCombinatorialAuction")
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "HOL-Library.BigO"
### 1.048s elapsed time, 3.957s cpu time, 0.986s GC time
### theory "HOL-Library.Stream"
### 1.119s elapsed time, 4.237s cpu time, 0.986s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.007s elapsed time, 6.053s cpu time, 1.188s GC time
Loading theory "Draft.Templates" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.078s elapsed time, 0.247s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.UniformTieBreakingMoreTemplates")
Found termination order: "length <*mlex*> {}"
### theory "Draft.MiscTools"
### 1.497s elapsed time, 3.679s cpu time, 0.402s GC time
Loading theory "Draft.StrictCombinatorialAuction" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.UniformTieBreaking")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.539s elapsed time, 1.121s cpu time, 0.089s GC time
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.StrictCombinatorialAuction"
### 0.461s elapsed time, 0.811s cpu time, 0.107s GC time
Loading theory "Draft.Universes" (required by "Draft.UniformTieBreakingMoreTemplates" via "Draft.UniformTieBreaking")
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
### theory "Draft.Universes"
### 0.560s elapsed time, 0.637s cpu time, 0.106s GC time
Loading theory "Draft.UniformTieBreaking" (required by "Draft.UniformTieBreakingMoreTemplates")
"0"
  :: "nat"
### theory "Draft.UniformTieBreaking"
### 0.494s elapsed time, 0.681s cpu time, 0.083s GC time
Loading theory "Draft.UniformTieBreakingMoreTemplates"
val templateLemmas =
   [("UniformTieBreaking.lm071",
     "Domain (pseudoAllocation ?a) <= Domain ?a",
     template_inequation
      (less_equals,
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("UniformTieBreaking.lm082",
     "inj_on pseudoAllocation (allAllocations ?N ?G)",
     template_predicate
      (
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("UniformTieBreaking.lm050",
     "Range (pseudoAllocation ?a) = finestpart (\<Union> (Range ?a))",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_hole 0,
           template_app (template_hole 3, template_var 0))))),
    ("UniformTieBreaking.lm049",
     "Range (pseudoAllocation ?a) = \<Union> (finestpart ` Range ?a)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 4, template_var 0))))),
    ("UniformTieBreaking.lm012", "allAllocations ?N {} <= {{}}",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 6, template_hole 5),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_hole 0))),
    ("UniformTieBreaking.lm085", "?X = (%x. x : ?X) -` {True}",
     template_equation
      (template_var 0,
       template_app
        (template_app (template_hole 4, t_empty),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_hole 0)))),
    ("UniformTieBreaking.lm006", "?G ~= {} ==> {?G} : all_partitions ?G",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("UniformTieBreaking.lm093",
     "?x : ?X ==> toFunction (graph ?X ?f) ?x = ?f ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_var 2),
         template_app (template_var 0, template_var 2)))),
    ("UniformTieBreaking.randomElLemma",
     "set ?list ~= {} ==> randomEl ?list ?random : set ?list",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app (template_hole 3, template_var 1),
              template_hole 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app (template_hole 3, template_var 1))
           ))),
    ("UniformTieBreaking.lm038",
     "?a : allAllocations ?N {} ==> pseudoAllocation ?a = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 0)))
            )],
       template_equation
        (template_app (template_hole 1, template_var 1), template_hole 0))),
    ("UniformTieBreaking.lm030", "card (omega ?pair) = card (snd ?pair)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)),
               template_hole 3)),
           t_empty)),
       template_app
        (template_hole 0, template_app (template_hole 1, template_var 0)))),
    ("UniformTieBreaking.winningAllocationPossible",
     "winningAllocationRel ?N ?G (<=) ?b (allAllocations ?N ?G)",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("UniformTieBreaking.summedBidInjective", "inj (summedBid ?bids)",
     template_predicate
      (
         template_app
          (template_app (template_hole 7, t_empty), template_hole 0)
         )),
    ("UniformTieBreaking.lm021", "inj_on (summedBid ?bids) ?X",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, t_empty), template_var 0)
         )),
    ("UniformTieBreaking.lm065",
     "finite (snd ?pair) ==> finite (omega ?pair)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_hole 1)),
               t_empty))
           ))),
    ("UniformTieBreaking.allocationFinite",
     "[| ?a : allAllocations ?N ?G; finite ?G |] ==> finite ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_hole 3),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("UniformTieBreaking.lm008",
     "?n : ?N ==> {(?G, ?n)} : injections {?G} ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_var 2)),
                 template_hole 3)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_hole 0)),
               template_var 1))
           ))),
    ("UniformTieBreaking.lm013",
     "[| ?a : allAllocations ?N ?G; finite ?G |] ==> finite (Range ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2))
           ))),
    ("UniformTieBreaking.lm040",
     "[| ?a : allAllocations ?N ?G; finite ?G |]
      ==> finite (pseudoAllocation ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2))
           ))),
    ("UniformTieBreaking.lm073",
     "?a : allAllocations ?N ?G ==>
      pseudoAllocation ?a <= ?N \<times> finestpart ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)))
            )],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 0), t_empty)))),
    ("UniformTieBreaking.lm026",
     "finite (snd ?pair) ==> card (omega ?pair) = card (snd ?pair)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, template_var 0)),
                 template_hole 2)),
             t_empty)),
         template_app
          (template_hole 0,
           template_app (template_hole 8, template_var 0))))),
    ("UniformTieBreaking.lm028", "{} ~: Range ?X ==> inj_on omega ?X",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 9, template_hole 8),
                  template_app (template_hole 7, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, t_empty), template_var 0)
           ))),
    ("UniformTieBreaking.lm034",
     "[| ?a : allAllocations ?N ?G; finite ?G |]
      ==> card (pseudoAllocation ?a) = card ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 2)),
         template_app (template_hole 0, template_var 1)))),
    ("UniformTieBreaking.lm014",
     "[| ?a : allAllocations ?N ?G; finite ?G |]
      ==> ALL y:Range ?a. finite y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             t_empty)
           ))),
    ("UniformTieBreaking.lm009",
     "[| ?G ~= {}; ?n : ?N |]
      ==> {(?G, ?n)} : possible_allocations_rel ?G ?N",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 1)),
                 template_hole 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("UniformTieBreaking.lm010",
     "[| ?N ~= {}; ?G ~= {} |] ==> allAllocations ?N ?G ~= {}",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_negation
         (template_equation (template_var 0, template_hole 5))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0)
           ))),
    ("UniformTieBreaking.lm015",
     "[| ?a : allAllocations ?N ?G; finite ?G |]
      ==> card ?G = sum card (Range ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_hole 2),
           template_app (template_hole 0, template_var 2))))),
    ("UniformTieBreaking.lm025",
     "finite (finestpart (snd ?pair)) ==>
      card (omega ?pair) = card (finestpart (snd ?pair))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_var 0)),
                 template_hole 1)),
             t_empty)),
         template_app
          (template_hole 0,
           template_app
            (template_hole 8,
             template_app (template_hole 7, template_var 0)))))),
    ("UniformTieBreaking.lm072",
     "?a : allAllocations ?N ?G ==>
      Domain (pseudoAllocation ?a) <= ?N &
      Range (pseudoAllocation ?a) = finestpart ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 4,
                     template_app (template_hole 3, template_var 2))),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app (template_hole 3, template_var 2))),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("UniformTieBreaking.lm068",
     "?a : allAllocations ?N ?G ==> is_non_overlapping (omega ` ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, t_empty), template_var 2))
           ))),
    ("UniformTieBreaking.lm087",
     "?P -` {True} Int set ?l ~= {} ==> takeAll ?P ?l ~= []",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 1),
                    template_app
                     (template_app (template_hole 9, template_hole 8),
                      template_hole 7))),
                template_app (template_hole 6, template_var 0)),
              template_hole 5)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("UniformTieBreaking.lm039",
     "[| ?a : allAllocations ?N ?G; finite ?G; ?G ~= {} |]
      ==> finite (pseudoAllocation ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_app (template_hole 8, template_hole 7),
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)))
            ),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_negation
         (template_equation (template_var 1, template_hole 2))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2))
           ))),
    ("UniformTieBreaking.lm095",
     "summedBidSecond (real o ?bids) ?pair =
      real (summedBidSecond ?bids ?pair)",
     template_equation
      (template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 0, t_empty),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)))))),
    ("UniformTieBreaking.lm054", "runiq (summedBidVectorRel ?bids ?N ?G)",
     template_predicate
      (
         template_app
          (template_hole 13,
           template_app
            (template_app (template_hole 12, t_empty),
             template_app
              (template_app (template_hole 5, template_var 1), t_empty)))
         )),
    ("UniformTieBreaking.lm007",
     "?n : ?N ==> {(?G, ?n)} : totalRels {?G} ?N",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 0),
                     template_var 2)),
                 template_hole 8)),
             template_app (template_hole 7, t_empty))
           ))),
    ("UniformTieBreaking.lm066",
     "ALL y:Range ?a. finite y ==> ALL y:omega ` ?a. finite y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, t_empty), template_var 0)),
             t_empty)
           ))),
    ("UniformTieBreaking.lm027",
     "[| {} ~: Range ?f; runiq ?f |] ==> is_non_overlapping (omega ` ?f)",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_app (template_hole 9, template_var 0))
                )
            ),
        template_predicate
         (template_app (template_hole 8, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, t_empty), template_var 0))
           ))),
    ("UniformTieBreaking.lm023",
     "snd (summedBid ?bids ?pair) = sum ?bids (omega ?pair)",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app (template_hole 9, template_var 1),
           template_app
            (template_app (template_hole 8, t_empty),
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1))))),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 6, template_var 1)),
               template_hole 0)),
           t_empty)))),
    ("UniformTieBreaking.lm046",
     "pseudoAllocation ?a =
      {(fst pair, Y) |Y pair. Y : finestpart (snd pair) & pair : ?a}",
     template_equation
      (template_app (template_hole 11, template_var 0),
       template_app (template_hole 10, t_empty))),
    ("UniformTieBreaking.lm051",
     "pseudoAllocation ?a =
      {(fst pair, {y}) |y pair. y : snd pair & pair : ?a}",
     template_equation
      (template_app (template_hole 12, template_var 0),
       template_app (template_hole 11, t_empty))),
    ("UniformTieBreaking.lm055",
     "runiq (summedBidVectorRel ?bids ?N ?G || ?a)",
     template_predicate
      (
         template_app
          (template_hole 14,
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 12, t_empty),
                 template_app
                  (template_app (template_hole 5, template_var 2),
                   t_empty))),
             template_var 0))
         )),
    ("UniformTieBreaking.lm043",
     "omega ?pair = {(fst ?pair, {y}) |y. y : snd ?pair}",
     template_equation
      (template_app
        (template_app
          (template_hole 13,
           template_app
            (template_app
              (template_hole 12,
               template_app (template_hole 11, template_var 0)),
             template_hole 10)),
         t_empty),
       template_app (template_hole 7, t_empty))),
    ("UniformTieBreaking.lm024",
     "snd o summedBid ?bids = sum ?bids o omega",
     template_equation
      (template_app
        (template_app (template_hole 12, template_hole 11), t_empty),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         t_empty))),
    ("UniformTieBreaking.lm003", "{(?x, {?y})} : allocationsUniverse",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 18,
             template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app (template_hole 16, template_var 1),
                   template_app
                    (template_app (template_hole 15, template_var 0),
                     template_hole 14))),
               template_hole 13)),
           template_app
            (template_app
              (template_hole 12, template_app (template_hole 11, t_empty)),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, t_empty),
                 template_app (template_hole 1, t_empty)))))
         )),
    ("UniformTieBreaking.lm067",
     "[| ?a : allAllocations ?N ?G; finite ?G |]
      ==> ALL x:omega ` ?a. finite x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app
               (template_app (template_hole 12, template_hole 11),
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_var 0)))
            ),
        template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, t_empty), template_var 2)),
             t_empty)
           ))),
    ("UniformTieBreaking.lm053",
     "pseudoAllocation ?a = {(x, {y}) |x y. y : ?a ,,, x & x : Domain ?a}",
     template_equation
      (template_app (template_hole 15, template_var 0),
       template_app (template_hole 14, t_empty))),
    ("UniformTieBreaking.lm042",
     "omega ?pair = {fst ?pair} \<times> {{y} |y. y : snd ?pair}",
     template_equation
      (template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app (template_hole 10, template_var 0)),
             template_hole 9)),
         t_empty),
       template_app
        (template_app
          (template_hole 12,
           template_app
            (template_app
              (template_hole 11,
               template_app (template_hole 10, template_var 0)),
             template_hole 9)),
         t_empty))),
    ("UniformTieBreaking.lm048",
     "runiq ?a ==>
      pseudoAllocation ?a =
      {(x, Y) |Y x. Y : finestpart (?a ,, x) & x : Domain ?a}",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 0))],
       template_equation
        (template_app (template_hole 11, template_var 0),
         template_app (template_hole 10, t_empty)))),
    ("UniformTieBreaking.lm044",
     "pseudoAllocation ?a =
      \<Union> {{(fst pair, {y}) |y. y : snd pair} |pair. pair : ?a}",
     template_equation
      (template_app (template_hole 14, template_var 0),
       template_app
        (template_hole 13, template_app (template_hole 12, t_empty)))),
    ("UniformTieBreaking.lm083",
     "[| 0 < card ?N; distinct ?G |]
      ==> winningAllocationRel ?N (set ?G) (<=) ?bids
           (set (allAllocationsAlg ?N ?G))",
     template_implication
      ([template_inequation
         (less_than, template_hole 15,
          template_app (template_hole 14, template_var 2)),
        template_predicate
         (template_app (template_hole 13, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 11,
             template_app (template_hole 10, template_var 0)),
           template_app
            (template_app (template_hole 9, template_hole 8),
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 1)),
               template_var 2))),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 8),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, t_empty),
                 template_app (template_hole 0, template_var 1)))))))),
    ("UniformTieBreaking.lm032",
     "[| {} ~: Range ?a; ALL pair:?a. finite (snd pair); finite ?a;
         runiq ?a |]
      ==> card (pseudoAllocation ?a) = sum (card o snd) ?a",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 13, template_hole 12),
                  template_app (template_hole 11, template_var 0))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0), t_empty)
            ),
        template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 8)),
           template_var 0)))),
    ("UniformTieBreaking.summedBidVectorCharacterization",
     "?N \<times> (Pow ?G - {{}}) =
      Domain (summedBidVectorRel ?bids ?N ?G)",
     template_equation
      (template_app
        (template_app (template_hole 13, template_var 2), t_empty),
       template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, t_empty),
           template_app
            (template_app (template_hole 13, template_var 2), t_empty))))),
    ("UniformTieBreaking.lm002",
     "{?x} \<times> ({?X} - {{}}) : allocationsUniverse",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 19,
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_app (template_hole 17, template_var 1),
                   template_hole 16)),
               t_empty)),
           template_app
            (template_app
              (template_hole 11, template_app (template_hole 10, t_empty)),
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, t_empty),
                 template_app (template_hole 1, t_empty)))))
         )),
    ("UniformTieBreaking.lm074",
     "[| runiq ?a; {} ~: Range ?a |]
      ==> ?a =
          {(x, pseudoAllocation ?a ,,, x) |x.
           x : Domain (pseudoAllocation ?a)}",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 15, template_hole 14),
                  template_app (template_hole 13, template_var 0))
                )
            )],
       template_equation
        (template_var 0, template_app (template_hole 11, t_empty)))),
    ("UniformTieBreaking.lm061",
     "sum snd (summedBid ?bids ` ?a) = sum (snd o summedBid ?bids) ?a",
     template_equation
      (template_app
        (template_app (template_hole 10, template_hole 9),
         template_app
          (template_app (template_hole 8, t_empty), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 9), t_empty)),
         template_var 0))),
    ("UniformTieBreaking.lm056",
     "?a : allAllocations ?N ?G ==>
      ?a <= Domain (summedBidVectorRel ?bids ?N ?G)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 3),
              template_app
               (template_app (template_hole 17, template_hole 16),
                template_app
                 (template_app (template_hole 15, template_var 2),
                  template_var 1)))
            )],
       template_inequation
        (less_equals, template_var 3,
         template_app
          (template_hole 13,
           template_app
            (template_app (template_hole 12, t_empty),
             template_app
              (template_app (template_hole 5, template_var 1),
               t_empty)))))),
    ("UniformTieBreaking.lm033",
     "[| runiq (?a^-1); runiq ?a; finite ?a; {} ~: Range ?a;
         ALL pair:?a. finite (snd pair) |]
      ==> card (pseudoAllocation ?a) = sum card (Range ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 0))
            ),
        template_predicate
         (template_app (template_hole 13, template_var 0)),
        template_predicate
         (template_app (template_hole 12, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 10, template_hole 9),
                  template_app (template_hole 8, template_var 0))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app (template_hole 8, template_var 0))))),
    ("UniformTieBreaking.lm041",
     "[| ?a : allAllocations ?N ?G; ?aa : allAllocations ?N ?G; finite ?G |]
      ==> (card (pseudoAllocation ?aa Int pseudoAllocation ?a) =
           card (pseudoAllocation ?a)) =
          (pseudoAllocation ?a = pseudoAllocation ?aa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 3),
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (template_app (template_hole 6, template_var 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 0)),
               template_app (template_hole 1, template_var 3))),
           template_app
            (template_hole 3,
             template_app (template_hole 1, template_var 3))),
         template_equation
          (template_app (template_hole 1, template_var 3),
           template_app (template_hole 1, template_var 0))))),
    ("UniformTieBreaking.lm075",
     "?a : runiqs Int Pow (UNIV \<times> (UNIV - {{}})) ==>
      ((%pseudo. {(x, pseudo ,,, x) |x. x : Domain pseudo}) o
       pseudoAllocation)
       ?a =
      id ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 25, template_var 0),
              template_app
               (template_app (template_hole 24, template_hole 23),
                template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 21, template_hole 20),
                    t_empty))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 13, t_empty), template_hole 1),
           template_var 0),
         template_app (template_hole 0, template_var 0)))),
    ("UniformTieBreaking.lm011",
     "[| ?N ~= {}; finite ?N; ?G ~= {}; finite ?G |]
      ==> winningAllocationRel ?N ?G (~=) ?bids {} &
          winningAllocationRel ?N ?G finite ?bids",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 13)),
        template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_negation
         (template_equation (template_var 1, template_hole 10)),
        template_predicate
         (template_app (template_hole 9, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 5, template_var 0)),
                       template_app
                        (template_app (template_hole 4, template_hole 3),
                         template_app
                          (template_app (template_hole 2, template_var 1),
                           template_var 2)))),
                   template_hole 1))),
             template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, template_var 0)),
                 template_app
                  (template_app (template_hole 4, template_hole 3),
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 2)))))
           ))),
    ("UniformTieBreaking.lm069",
     "[| ?a : allAllocations ?N ?G; finite ?G |]
      ==> sum (sum ?bids) (omega ` ?a) = sum ?bids (\<Union> (omega ` ?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_app
               (template_app (template_hole 14, template_hole 13),
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (template_app (template_hole 11, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 8, template_var 0)),
           template_app
            (template_app (template_hole 7, t_empty), template_var 3)),
         template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 7, t_empty),
               template_var 3)))))),
    ("UniformTieBreaking.lm070",
     "[| ?a : allAllocations ?N ?G; finite ?G |]
      ==> sum (summedBidVector ?bids ?N ?G) ?a =
          sum ?bids (pseudoAllocation ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 3),
              template_app
               (template_app (template_hole 20, template_hole 19),
                template_app
                 (template_app (template_hole 18, template_var 2),
                  template_var 1)))
            ),
        template_predicate
         (template_app (template_hole 17, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 15,
             template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, t_empty),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   t_empty)))),
           template_var 3),
         template_app
          (template_app (template_hole 15, template_var 0),
           template_app (template_hole 0, template_var 3))))),
    ("UniformTieBreaking.lm092",
     "summedBidVectorRel ?bids ?N ?G =
      graph (?N \<times> (Pow ?G - {{}})) (summedBidSecond ?bids)",
     template_equation
      (template_app
        (template_app (template_hole 13, t_empty),
         template_app
          (template_app (template_hole 6, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 6, template_var 1), t_empty)),
         t_empty))),
    ("UniformTieBreaking.lm084",
     "[| ?N ~= {}; finite ?N; distinct ?G; set ?G ~= {} |]
      ==> winningAllocationRel ?N (set ?G) (Int) ?bids
           (set (allAllocationsAlg ?N ?G)) ~=
          {}",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 19)),
        template_predicate
         (template_app (template_hole 18, template_var 2)),
        template_predicate
         (template_app (template_hole 17, template_var 1)),
        template_negation
         (
            template_equation
             (template_app (template_hole 15, template_var 1),
              template_hole 14)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app (template_hole 10, template_var 0)),
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 15, template_var 1)),
                       template_var 2)))),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 8),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, t_empty),
                       template_app (template_hole 1, template_var 1)))))),
             template_hole 0)
           ))),
    ("UniformTieBreaking.lm094",
     "?pair : ?N \<times> (Pow ?G - {{}}) ==>
      summedBidVector ?bids ?N ?G ?pair = summedBidSecond ?bids ?pair",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 3),
              template_app
               (template_app (template_hole 14, template_var 2), t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, t_empty),
               template_app
                (template_app (template_hole 14, template_var 2),
                 t_empty))),
           template_var 3),
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)))))),
    ("UniformTieBreaking.lm047",
     "runiq ?a ==>
      {(fst pair, Y) |Y pair. Y : finestpart (snd pair) & pair : ?a} =
      {(x, Y) |Y x. Y : finestpart (?a ,, x) & x : Domain ?a}",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_var 0))],
       template_equation
        (template_app (template_hole 14, t_empty),
         template_app (template_hole 14, t_empty)))),
    ("UniformTieBreaking.lm001",
     "?a : allocationsUniverse ==> Outside' ?X ?a : allocationsUniverse",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, t_empty)),
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, t_empty),
                    template_app (template_hole 2, t_empty)))))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 13,
                 template_app (template_hole 12, t_empty)),
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, t_empty),
                   template_app (template_hole 2, t_empty)))))
           ))),
    ("UniformTieBreaking.lm022",
     "sum snd (summedBidVectorRel ?bids ?N ?G) =
      sum (snd o summedBid ?bids) (?N \<times> (Pow ?G - {{}}))",
     template_equation
      (template_app
        (template_app (template_hole 16, template_hole 15),
         template_app
          (template_app (template_hole 14, t_empty),
           template_app
            (template_app (template_hole 7, template_var 1), t_empty))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_hole 15), t_empty)),
         template_app
          (template_app (template_hole 7, template_var 1), t_empty)))),
    ("UniformTieBreaking.lm052",
     "{(fst pair, {y}) |y pair. y : snd pair & pair : ?a} =
      {(x, {y}) |x y. y : ?a ,,, x & x : Domain ?a}",
     template_equation
      (template_app (template_hole 18, t_empty),
       template_app (template_hole 18, t_empty))),
    ("UniformTieBreaking.lm020",
     "summedBidVectorRel ?bids ?N ?G || ?a =
      summedBid ?bids ` (?N \<times> (Pow ?G - {{}}) Int ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 13, t_empty),
             template_app
              (template_app (template_hole 6, template_var 2), t_empty))),
         template_var 0),
       template_app
        (template_app (template_hole 13, t_empty),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 6, template_var 2), t_empty)),
           template_var 0)))),
    ("UniformTieBreaking.lm064",
     "?a : allAllocations ?N ?G ==>
      sum (summedBidVector ?bids ?N ?G) ?a = sum (sum ?bids) (omega ` ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 23, template_var 3),
              template_app
               (template_app (template_hole 22, template_hole 21),
                template_app
                 (template_app (template_hole 20, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 18,
             template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, t_empty),
                 template_app
                  (template_app (template_hole 9, template_var 1),
                   t_empty)))),
           template_var 3),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 18, template_var 0)),
           template_app
            (template_app (template_hole 2, t_empty), template_var 3))))),
    ("UniformTieBreaking.lm063",
     "?a : allAllocations ?N ?G ==>
      sum (summedBidVector ?bids ?N ?G) ?a = sum (sum ?bids o omega) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 3),
              template_app
               (template_app (template_hole 21, template_hole 20),
                template_app
                 (template_app (template_hole 19, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 17,
             template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, t_empty),
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   t_empty)))),
           template_var 3),
         template_app
          (template_app
            (template_hole 17,
             template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 17, template_var 0)),
               t_empty)),
           template_var 3)))),
    ("UniformTieBreaking.lm045",
     "\<Union> {{(fst pair, {y}) |y. y : snd pair} |pair. pair : ?a} =
      {(fst pair, {y}) |y pair. y : snd pair & pair : ?a}",
     template_equation
      (template_app
        (template_hole 13, template_app (template_hole 12, t_empty)),
       template_app (template_hole 9, t_empty))),
    ("UniformTieBreaking.lm086",
     "[| ?N ~= {}; finite ?N; distinct ?G; set ?G ~= {} |]
      ==> (%x. winningAllocationRel ?N (set ?G) ((:) x) ?bids) -` {True} Int
          set (allAllocationsAlg ?N ?G) ~=
          {}",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 24)),
        template_predicate
         (template_app (template_hole 23, template_var 2)),
        template_predicate
         (template_app (template_hole 22, template_var 1)),
        template_negation
         (
            template_equation
             (template_app (template_hole 20, template_var 1),
              template_hole 19)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app (template_hole 16, t_empty),
                   template_app
                    (template_app (template_hole 9, template_hole 8),
                     template_hole 7))),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 11),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, t_empty),
                       template_app (template_hole 1, template_var 1)))))),
             template_hole 0)
           ))),
    ("UniformTieBreaking.lm062",
     "?a : allAllocations ?N ?G ==>
      sum (summedBidVector ?bids ?N ?G) ?a =
      sum (snd o summedBid ?bids) ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 3),
              template_app
               (template_app (template_hole 20, template_hole 19),
                template_app
                 (template_app (template_hole 18, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 16,
             template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 14, t_empty),
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   t_empty)))),
           template_var 3),
         template_app
          (template_app
            (template_hole 16,
             template_app
              (template_app (template_hole 1, template_hole 0), t_empty)),
           template_var 3)))),
    ("UniformTieBreaking.lm060",
     "?a : allAllocations ?N ?G ==>
      sum (summedBidVector ?bids ?N ?G) ?a =
      sum snd (summedBid ?bids ` ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 3),
              template_app
               (template_app (template_hole 20, template_hole 19),
                template_app
                 (template_app (template_hole 18, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 16,
             template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 14, t_empty),
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   t_empty)))),
           template_var 3),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_app
            (template_app (template_hole 14, t_empty), template_var 3))))),
    ("UniformTieBreaking.subsetAllocation",
     "[| ?a : allocationsUniverse; ?c <= ?a |]
      ==> ?c : allocationsUniverse",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 12, t_empty)),
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, t_empty),
                    template_app (template_hole 2, t_empty)))))
            ),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 14, template_var 0),
             template_app
              (template_app
                (template_hole 13,
                 template_app (template_hole 12, t_empty)),
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, t_empty),
                   template_app (template_hole 2, t_empty)))))
           ))),
    ("UniformTieBreaking.lm016",
     "summedBidVectorRel ?bids ?N ?G =
      {summedBid ?bids pair |pair. pair : ?N \<times> (Pow ?G - {{}})}",
     template_equation
      (template_app
        (template_app (template_hole 17, t_empty),
         template_app
          (template_app (template_hole 10, template_var 1), t_empty)),
       template_app (template_hole 4, t_empty))),
    ("UniformTieBreaking.lm018",
     "summedBidVectorRel ?bids ?N ?G || ?a =
      {summedBid ?bids pair |pair.
       pair : ?N \<times> (Pow ?G - {{}}) Int ?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 19,
           template_app
            (template_app (template_hole 18, t_empty),
             template_app
              (template_app (template_hole 11, template_var 2), t_empty))),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("UniformTieBreaking.lm019",
     "summedBid ?bids ` (?N \<times> (Pow ?G - {{}}) Int ?a) =
      {summedBid ?bids pair |pair.
       pair : ?N \<times> (Pow ?G - {{}}) Int ?a}",
     template_equation
      (template_app
        (template_app (template_hole 18, t_empty),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app (template_hole 10, template_var 2), t_empty)),
           template_var 0)),
       template_app (template_hole 4, t_empty))),
    ("UniformTieBreaking.lm029",
     "[| {} ~: Range ?a; ALL X:omega ` ?a. finite X;
         is_non_overlapping (omega ` ?a) |]
      ==> card (pseudoAllocation ?a) = sum (card o omega) ?a",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 17, template_hole 16),
                  template_app (template_hole 15, template_var 0))
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, t_empty),
                  template_var 0)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app (template_hole 13, t_empty), template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_hole 3), t_empty)),
           template_var 0)))),
    ("UniformTieBreaking.lm088",
     "[| ?N ~= {}; finite ?N; distinct ?G; set ?G ~= {} |]
      ==> takeAll (%x. winningAllocationRel ?N (set ?G) ((:) x) ?bids)
           (allAllocationsAlg ?N ?G) ~=
          []",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 21)),
        template_predicate
         (template_app (template_hole 20, template_var 2)),
        template_predicate
         (template_app (template_hole 19, template_var 1)),
        template_negation
         (
            template_equation
             (template_app (template_hole 17, template_var 1),
              template_hole 16)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_hole 13,
                   template_app
                    (template_app (template_hole 12, template_hole 11),
                     template_app
                      (template_hole 10,
                       template_app
                        (template_app (template_hole 9, t_empty),
                         template_app
                          (template_hole 7, template_var 1)))))),
               template_app
                (template_app (template_hole 6, t_empty),
                 template_app
                  (template_app (template_hole 12, template_hole 11),
                   template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 9, t_empty),
                       template_app (template_hole 7, template_var 1)))))),
             template_hole 0)
           ))),
    ("UniformTieBreaking.lm089",
     "[| ?N ~= {}; finite ?N; distinct ?G; set ?G ~= {} |]
      ==> perm2
           (takeAll (%x. winningAllocationRel ?N (set ?G) ((:) x) ?bids)
             (allAllocationsAlg ?N ?G))
           ?n ~=
          []",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 22)),
        template_predicate
         (template_app (template_hole 21, template_var 3)),
        template_predicate
         (template_app (template_hole 20, template_var 2)),
        template_negation
         (
            template_equation
             (template_app (template_hole 18, template_var 2),
              template_hole 17)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app
                      (template_hole 13,
                       template_app
                        (template_app (template_hole 12, template_hole 11),
                         template_app
                          (template_hole 10,
                           template_app
                            (template_app (template_hole 9, t_empty),
                             template_app
                              (template_hole 7, template_var 2)))))),
                   template_app
                    (template_app (template_hole 6, t_empty),
                     template_app
                      (template_app (template_hole 12, template_hole 11),
                       template_app
                        (template_hole 10,
                         template_app
                          (template_app (template_hole 9, t_empty),
                           template_app
                            (template_hole 7, template_var 2))))))),
               template_var 0),
             template_hole 0)
           ))),
    ("UniformTieBreaking.lm058",
     "?a : allAllocations ?N ?G ==>
      sum (summedBidVector ?bids ?N ?G) ?a =
      sum snd (summedBidVectorRel ?bids ?N ?G || ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 3),
              template_app
               (template_app (template_hole 21, template_hole 20),
                template_app
                 (template_app (template_hole 19, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 17,
             template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, t_empty),
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   t_empty)))),
           template_var 3),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 15, t_empty),
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   t_empty))),
             template_var 3))))),
    ("UniformTieBreaking.lm059",
     "?a : allAllocations ?N ?G ==>
      sum (summedBidVector ?bids ?N ?G) ?a =
      sum snd (summedBid ?bids ` (?N \<times> (Pow ?G - {{}}) Int ?a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 3),
              template_app
               (template_app (template_hole 21, template_hole 20),
                template_app
                 (template_app (template_hole 19, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 17,
             template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, t_empty),
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   t_empty)))),
           template_var 3),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 15, t_empty),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 8, template_var 1),
                   t_empty)),
               template_var 3)))))),
    ("UniformTieBreaking.lm017",
     "{summedBid ?bids pair |pair. pair : ?N \<times> (Pow ?G - {{}})} ||
      ?a =
      {summedBid ?bids pair |pair.
       pair : ?N \<times> (Pow ?G - {{}}) Int ?a}",
     template_equation
      (template_app
        (template_app
          (template_hole 18, template_app (template_hole 17, t_empty)),
         template_var 0),
       template_app (template_hole 17, t_empty))),
    ("UniformTieBreaking.lm099",
     "?aa : allAllocations ?N ?G ==>
      sum (summedBidVector (real o ?bids) ?N ?G) ?aa =
      real (sum (summedBidVector ?bids ?N ?G) ?aa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 26, template_var 3),
              template_app
               (template_app (template_hole 25, template_hole 24),
                template_app
                 (template_app (template_hole 23, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 21,
             template_app
              (template_hole 20,
               template_app
                (template_app (template_hole 19, t_empty),
                 template_app
                  (template_app (template_hole 10, template_var 1),
                   t_empty)))),
           template_var 3),
         template_app
          (template_hole 15,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, t_empty),
                   template_app
                    (template_app (template_hole 10, template_var 1),
                     t_empty)))),
             template_var 3))))),
    ("UniformTieBreaking.lm096",
     "?pair : ?N \<times> (Pow ?G - {{}}) ==>
      summedBidVector (real o ?bids) ?N ?G ?pair =
      real (summedBidVector ?bids ?N ?G ?pair)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 3),
              template_app
               (template_app (template_hole 20, template_var 2), t_empty))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 13,
             template_app
              (template_app (template_hole 12, t_empty),
               template_app
                (template_app (template_hole 20, template_var 2),
                 t_empty))),
           template_var 3),
         template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, t_empty),
                 template_app
                  (template_app (template_hole 20, template_var 2),
                   t_empty))),
             template_var 3))))),
    ("UniformTieBreaking.lm090",
     "[| ?N ~= {}; finite ?N; distinct ?G; set ?G ~= {} |]
      ==> winningAllocationRel ?N (set ?G)
           ((:) (randomEl
                  (takeAll
                    (%x. winningAllocationRel ?N (set ?G) ((:) x) ?bids)
                    (allAllocationsAlg ?N ?G))
                  ?random))
           ?bids",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 20)),
        template_predicate
         (template_app (template_hole 19, template_var 3)),
        template_predicate
         (template_app (template_hole 18, template_var 2)),
        template_negation
         (
            template_equation
             (template_app (template_hole 16, template_var 2),
              template_hole 15)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_hole 11,
                         template_app
                          (template_app (template_hole 10, template_hole 9),
                           template_app
                            (template_hole 8,
                             template_app
                              (template_app (template_hole 7, t_empty),
                               template_app
                                (template_hole 5, template_var 2)))))),
                     template_app
                      (template_app (template_hole 4, t_empty),
                       template_app
                        (template_app (template_hole 10, template_hole 9),
                         template_app
                          (template_hole 8,
                           template_app
                            (template_app (template_hole 7, t_empty),
                             template_app
                              (template_hole 5, template_var 2))))))),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_app
                (template_app (template_hole 1, template_hole 9),
                 template_app
                  (template_app
                    (template_hole 0,
                     template_app (template_hole 16, template_var 2)),
                   template_var 3))))
           ))),
    ("UniformTieBreaking.lm098",
     "?aa <= ?N \<times> (Pow ?G - {{}}) ==>
      sum (summedBidVector (real o ?bids) ?N ?G) ?aa =
      real (sum (summedBidVector ?bids ?N ?G) ?aa)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 22, template_var 2), t_empty))],
       template_equation
        (template_app
          (template_app
            (template_hole 15,
             template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, t_empty),
                 template_app
                  (template_app (template_hole 22, template_var 2),
                   t_empty)))),
           template_var 3),
         template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, t_empty),
                   template_app
                    (template_app (template_hole 22, template_var 2),
                     t_empty)))),
             template_var 3))))),
    ("UniformTieBreaking.lm097",
     "?X <= ?N \<times> (Pow ?G - {{}}) ==>
      ALL pair:?X.
         summedBidVector (real o ?bids) ?N ?G pair =
         (real o summedBidVector ?bids ?N ?G) pair",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app
           (template_app (template_hole 21, template_var 2), t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 15, template_var 3), t_empty)
           ))),
    ("UniformTieBreaking.lm035",
     "[| pseudoAllocation ?aa
         <= pseudoAllocation ?a Un ?N \<times> finestpart ?G;
         finite (pseudoAllocation ?aa) |]
      ==> sum (pseudoAllocation ?a <| (?N \<times> finestpart ?G))
           (pseudoAllocation ?a) -
          sum (pseudoAllocation ?a <| (?N \<times> finestpart ?G))
           (pseudoAllocation ?aa) =
          card (pseudoAllocation ?a) -
          card (pseudoAllocation ?aa Int pseudoAllocation ?a)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 16, template_var 3),
          template_app
           (template_app
             (template_hole 15,
              template_app (template_hole 16, template_var 2)),
            template_app
             (template_app (template_hole 14, template_var 1), t_empty))),
        template_predicate
         (
            template_app
             (template_hole 12,
              template_app (template_hole 16, template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app
                              (template_hole 14, template_var 1),
                             t_empty)),
                         t_empty)),
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 16, template_var 2)),
                       t_empty)))),
               template_app (template_hole 16, template_var 2))),
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app
                          (template_app (template_hole 14, template_var 1),
                           t_empty)),
                       t_empty)),
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 16, template_var 2)),
                     t_empty)))),
             template_app (template_hole 16, template_var 3))),
         template_app
          (template_app
            (template_hole 10,
             template_app
              (template_hole 1,
               template_app (template_hole 16, template_var 2))),
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 16, template_var 3)),
               template_app (template_hole 16, template_var 2))))))),
    ("UniformTieBreaking.lm036",
     "[| pseudoAllocation ?aa
         <= pseudoAllocation ?a Un ?N \<times> finestpart ?G;
         finite (pseudoAllocation ?aa) |]
      ==> int (sum (pseudoAllocation ?a <| (?N \<times> finestpart ?G))
                (pseudoAllocation ?a)) -
          int (sum (pseudoAllocation ?a <| (?N \<times> finestpart ?G))
                (pseudoAllocation ?aa)) =
          int (card (pseudoAllocation ?a)) -
          int (card (pseudoAllocation ?aa Int pseudoAllocation ?a))",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 17, template_var 3),
          template_app
           (template_app
             (template_hole 16,
              template_app (template_hole 17, template_var 2)),
            template_app
             (template_app (template_hole 15, template_var 1), t_empty))),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app (template_hole 17, template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_app
                                (template_hole 15, template_var 1),
                               t_empty)),
                           t_empty)),
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app (template_hole 17, template_var 2)),
                         t_empty)))),
                 template_app (template_hole 17, template_var 2)))),
           template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 7,
                       template_app
                        (template_app
                          (template_hole 6,
                           template_app
                            (template_app
                              (template_hole 15, template_var 1),
                             t_empty)),
                         t_empty)),
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 17, template_var 2)),
                       t_empty)))),
               template_app (template_hole 17, template_var 3)))),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_hole 1,
                 template_app (template_hole 17, template_var 2)))),
           template_app
            (template_hole 10,
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 17, template_var 3)),
                 template_app (template_hole 17, template_var 2)))))))),
    ("UniformTieBreaking.lm057",
     "sum (summedBidVector ?bids ?N ?G)
       (?a Int Domain (summedBidVectorRel ?bids ?N ?G)) =
      sum snd (summedBidVectorRel ?bids ?N ?G || ?a)",
     template_equation
      (template_app
        (template_app
          (template_hole 19,
           template_app
            (template_hole 18,
             template_app
              (template_app (template_hole 17, t_empty),
               template_app
                (template_app (template_hole 10, template_var 2),
                 t_empty)))),
         template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 17, t_empty),
               template_app
                (template_app (template_hole 10, template_var 2),
                 t_empty))))),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 17, t_empty),
               template_app
                (template_app (template_hole 10, template_var 2),
                 t_empty))),
           template_var 0)))),
    ("UniformTieBreaking.lm091",
     "[| finite ?G; ?a : allAllocations ?N ?G; ?aa : allAllocations ?N ?G |]
      ==> real
           (sum (pseudoAllocation ?a <| (?N \<times> finestpart ?G))
             (pseudoAllocation ?a)) -
          real
           (sum (pseudoAllocation ?a <| (?N \<times> finestpart ?G))
             (pseudoAllocation ?aa)) =
          real (card ?G) -
          real (card (pseudoAllocation ?aa Int pseudoAllocation ?a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 21, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 2),
              template_app
               (template_app (template_hole 19, template_hole 18),
                template_app
                 (template_app (template_hole 17, template_var 3),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 0),
              template_app
               (template_app (template_hole 19, template_hole 18),
                template_app
                 (template_app (template_hole 17, template_var 3),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 15,
             template_app
              (template_hole 14,
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_hole 12,
                     template_app
                      (template_app
                        (template_hole 11,
                         template_app
                          (template_app
                            (template_hole 10,
                             template_app
                              (template_app
                                (template_hole 9, template_var 1),
                               t_empty)),
                           t_empty)),
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app (template_hole 4, template_var 2)),
                         t_empty)))),
                 template_app (template_hole 4, template_var 2)))),
           template_app
            (template_hole 14,
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app
                            (template_app (template_hole 9, template_var 1),
                             t_empty)),
                         t_empty)),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app (template_hole 4, template_var 2)),
                       t_empty)))),
               template_app (template_hole 4, template_var 0)))),
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_hole 14,
               template_app (template_hole 2, template_var 3))),
           template_app
            (template_hole 14,
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 4, template_var 0)),
                 template_app (template_hole 4, template_var 2)))))))),
    ("UniformTieBreaking.lm102",
     "[| finite ?G; ?a : allAllocations ?N ?G; ?aa : allAllocations ?N ?G;
         ?aa ~= ?a |]
      ==> sum (summedBidVector
                (pseudoAllocation ?a <| (?N \<times> finestpart ?G)) ?N ?G)
           ?aa
          < sum (summedBidVector
                  (pseudoAllocation ?a <| (?N \<times> finestpart ?G)) ?N
                  ?G)
             ?a",
     template_implication
      ([template_predicate
         (template_app (template_hole 29, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 28, template_var 2),
              template_app
               (template_app (template_hole 27, template_hole 26),
                template_app
                 (template_app (template_hole 25, template_var 3),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 28, template_var 0),
              template_app
               (template_app (template_hole 27, template_hole 26),
                template_app
                 (template_app (template_hole 25, template_var 3),
                  template_var 1)))
            ),
        template_negation
         (template_equation (template_var 0, template_var 2))],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 21,
             template_app
              (template_hole 20,
               template_app
                (template_app (template_hole 19, t_empty),
                 template_app
                  (template_app (template_hole 14, template_var 1),
                   t_empty)))),
           template_var 0),
         template_app
          (template_app
            (template_hole 21,
             template_app
              (template_hole 20,
               template_app
                (template_app (template_hole 19, t_empty),
                 template_app
                  (template_app (template_hole 14, template_var 1),
                   t_empty)))),
           template_var 2)))),
    ("UniformTieBreaking.lm100",
     "[| finite ?G; ?a : allAllocations ?N ?G; ?aa : allAllocations ?N ?G |]
      ==> real
           (sum (summedBidVector
                  (pseudoAllocation ?a <| (?N \<times> finestpart ?G)) ?N
                  ?G)
             ?a) -
          real
           (sum (summedBidVector
                  (pseudoAllocation ?a <| (?N \<times> finestpart ?G)) ?N
                  ?G)
             ?aa) =
          real (card ?G) -
          real (card (pseudoAllocation ?aa Int pseudoAllocation ?a))",
     template_implication
      ([template_predicate
         (template_app (template_hole 32, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 31, template_var 2),
              template_app
               (template_app (template_hole 30, template_hole 29),
                template_app
                 (template_app (template_hole 28, template_var 3),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 31, template_var 0),
              template_app
               (template_app (template_hole 30, template_hole 29),
                template_app
                 (template_app (template_hole 28, template_var 3),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 26,
             template_app
              (template_hole 25,
               template_app
                (template_app
                  (template_hole 24,
                   template_app
                    (template_hole 23,
                     template_app
                      (template_app (template_hole 22, t_empty),
                       template_app
                        (template_app (template_hole 17, template_var 1),
                         t_empty)))),
                 template_var 2))),
           template_app
            (template_hole 25,
             template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_hole 23,
                   template_app
                    (template_app (template_hole 22, t_empty),
                     template_app
                      (template_app (template_hole 17, template_var 1),
                       t_empty)))),
               template_var 0))),
         template_app
          (template_app
            (template_hole 26,
             template_app
              (template_hole 25,
               template_app (template_hole 2, template_var 3))),
           template_app
            (template_hole 25,
             template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 12, template_var 0)),
                 template_app (template_hole 12, template_var 2)))))))),
    ("UniformTieBreaking.winningAllocationUniqueness",
     "[| ?N ~= {}; distinct ?G; set ?G ~= {}; finite ?N |]
      ==> winningAllocationRel ?N (set ?G)
           (argmax
             (sum (summedBidVector
                    (pseudoAllocation
                      (randomEl
                        (takeAll
                          (%x. winningAllocationRel ?N (set ?G) ((:) x)
                                ?bids)
                          (allAllocationsAlg ?N ?G))
                        ?random) <|
                     (?N \<times> finestpart (set ?G)))
                    ?N (set ?G))))
           ?bids =
          {randomEl
            (takeAll (%x. winningAllocationRel ?N (set ?G) ((:) x) ?bids)
              (allAllocationsAlg ?N ?G))
            ?random}",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_hole 45)),
        template_predicate
         (template_app (template_hole 44, template_var 2)),
        template_negation
         (
            template_equation
             (template_app (template_hole 42, template_var 2),
              template_hole 41)
            ),
        template_predicate
         (template_app (template_hole 40, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 38,
             template_app
              (template_hole 37,
               template_app
                (template_hole 36,
                 template_app
                  (template_app (template_hole 35, t_empty),
                   template_app
                    (template_app (template_hole 30, template_var 3),
                     t_empty))))),
           template_app
            (template_app
              (template_hole 13,
               template_app (template_hole 12, template_var 1)),
             template_app
              (template_app (template_hole 11, template_hole 20),
               template_app
                (template_app
                  (template_hole 10,
                   template_app (template_hole 42, template_var 2)),
                 template_var 3)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app
                      (template_hole 22,
                       template_app
                        (template_app (template_hole 21, template_hole 20),
                         template_app
                          (template_hole 19,
                           template_app
                            (template_app (template_hole 18, t_empty),
                             template_app
                              (template_hole 16, template_var 2)))))),
                   template_app
                    (template_app (template_hole 15, t_empty),
                     template_app
                      (template_app (template_hole 21, template_hole 20),
                       template_app
                        (template_hole 19,
                         template_app
                          (template_app (template_hole 18, t_empty),
                           template_app
                            (template_hole 16, template_var 2))))))),
               template_var 0)),
           template_hole 0)))),
    ("UniformTieBreaking.lm101",
     "[| finite ?G; ?a : allAllocations ?N ?G; ?aa : allAllocations ?N ?G;
         ?x =
         real
          (sum (summedBidVector
                 (pseudoAllocation ?a <| (?N \<times> finestpart ?G)) ?N ?G)
            ?a) -
         real
          (sum (summedBidVector
                 (pseudoAllocation ?a <| (?N \<times> finestpart ?G)) ?N ?G)
            ?aa) |]
      ==> ?x <= real (card ?G) &
          0 <= ?x &
          (?x = 0) = (?a = ?aa) &
          (?aa ~= ?a -->
           sum (summedBidVector
                 (pseudoAllocation ?a <| (?N \<times> finestpart ?G)) ?N ?G)
            ?aa
           < sum (summedBidVector
                   (pseudoAllocation ?a <| (?N \<times> finestpart ?G)) ?N
                   ?G)
              ?a)",
     template_implication
      ([template_predicate
         (template_app (template_hole 38, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 37, template_var 3),
              template_app
               (template_app (template_hole 36, template_hole 35),
                template_app
                 (template_app (template_hole 34, template_var 4),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 37, template_var 1),
              template_app
               (template_app (template_hole 36, template_hole 35),
                template_app
                 (template_app (template_hole 34, template_var 4),
                  template_var 2)))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app
             (template_hole 32,
              template_app
               (template_hole 31,
                template_app
                 (template_app
                   (template_hole 30,
                    template_app
                     (template_hole 29,
                      template_app
                       (template_app (template_hole 28, t_empty),
                        template_app
                         (template_app (template_hole 23, template_var 2),
                          t_empty)))),
                  template_var 3))),
            template_app
             (template_hole 31,
              template_app
               (template_app
                 (template_hole 30,
                  template_app
                   (template_hole 29,
                    template_app
                     (template_app (template_hole 28, t_empty),
                      template_app
                       (template_app (template_hole 23, template_var 2),
                        t_empty)))),
                template_var 1))))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_var 0),
                 template_app
                  (template_hole 31,
                   template_app (template_hole 6, template_var 4)))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 5),
                   template_var 0)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app
                        (template_app (template_hole 33, template_var 0),
                         template_hole 5)),
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_var 1))),
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_var 3))),
                   template_app
                    (template_app
                      (template_hole 0,
                       template_app
                        (template_app
                          (template_hole 30,
                           template_app
                            (template_hole 29,
                             template_app
                              (template_app (template_hole 28, t_empty),
                               template_app
                                (template_app
                                  (template_hole 23, template_var 2),
                                 t_empty)))),
                         template_var 1)),
                     template_app
                      (template_app
                        (template_hole 30,
                         template_app
                          (template_hole 29,
                           template_app
                            (template_app (template_hole 28, t_empty),
                             template_app
                              (template_app
                                (template_hole 23, template_var 2),
                               t_empty)))),
                       template_var 3))))))
           ))),
    ("UniformTieBreaking.lm103",
     "[| ?N ~= {}; finite ?N; distinct ?G; set ?G ~= {};
         ?aa
         : allAllocations ?N (set ?G) -
           {randomEl
             (takeAll (%x. winningAllocationRel ?N (set ?G) ((:) x) ?bids)
               (allAllocationsAlg ?N ?G))
             ?random} |]
      ==> sum (summedBidVector
                (pseudoAllocation
                  (randomEl
                    (takeAll
                      (%x. winningAllocationRel ?N (set ?G) ((:) x) ?bids)
                      (allAllocationsAlg ?N ?G))
                    ?random) <|
                 (?N \<times> finestpart (set ?G)))
                ?N (set ?G))
           ?aa
          < sum (summedBidVector
                  (pseudoAllocation
                    (randomEl
                      (takeAll
                        (%x. winningAllocationRel ?N (set ?G) ((:) x) ?bids)
                        (allAllocationsAlg ?N ?G))
                      ?random) <|
                   (?N \<times> finestpart (set ?G)))
                  ?N (set ?G))
             (randomEl
               (takeAll (%x. winningAllocationRel ?N (set ?G) ((:) x) ?bids)
                 (allAllocationsAlg ?N ?G))
               ?random)",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_hole 45)),
        template_predicate
         (template_app (template_hole 44, template_var 4)),
        template_predicate
         (template_app (template_hole 43, template_var 3)),
        template_negation
         (
            template_equation
             (template_app (template_hole 41, template_var 3),
              template_hole 40)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 39, template_var 2),
              template_app
               (template_app
                 (template_hole 38,
                  template_app
                   (template_app (template_hole 37, template_hole 36),
                    template_app
                     (template_app
                       (template_hole 35,
                        template_app (template_hole 41, template_var 3)),
                      template_var 4))),
                template_app
                 (template_app
                   (template_hole 34,
                    template_app
                     (template_app
                       (template_hole 33,
                        template_app
                         (template_app
                           (template_hole 32,
                            template_app
                             (template_hole 31,
                              template_app
                               (template_app
                                 (template_hole 30, template_hole 36),
                                template_app
                                 (template_hole 29,
                                  template_app
                                   (template_app
                                     (template_hole 28, t_empty),
                                    template_app
                                     (template_hole 26,
template_var 3)))))),
                          template_app
                           (template_app (template_hole 25, t_empty),
                            template_app
                             (template_app
                               (template_hole 30, template_hole 36),
                              template_app
                               (template_hole 29,
                                template_app
                                 (template_app (template_hole 28, t_empty),
                                  template_app
                                   (template_hole 26, template_var 3))))))),
                      template_var 0)),
                  template_hole 22)))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 20,
             template_app
              (template_hole 19,
               template_app
                (template_app (template_hole 18, t_empty),
                 template_app
                  (template_app (template_hole 13, template_var 4),
                   t_empty)))),
           template_var 2),
         template_app
          (template_app
            (template_hole 20,
             template_app
              (template_hole 19,
               template_app
                (template_app (template_hole 18, t_empty),
                 template_app
                  (template_app (template_hole 13, template_var 4),
                   t_empty)))),
           template_app
            (template_app
              (template_hole 33,
               template_app
                (template_app
                  (template_hole 32,
                   template_app
                    (template_hole 31,
                     template_app
                      (template_app (template_hole 30, template_hole 36),
                       template_app
                        (template_hole 29,
                         template_app
                          (template_app (template_hole 28, t_empty),
                           template_app
                            (template_hole 26, template_var 3)))))),
                 template_app
                  (template_app (template_hole 25, t_empty),
                   template_app
                    (template_app (template_hole 30, template_hole 36),
                     template_app
                      (template_hole 29,
                       template_app
                        (template_app (template_hole 28, t_empty),
                         template_app
                          (template_hole 26, template_var 3))))))),
             template_var 0)))))]:
   (string * thm * template) list
### theory "Draft.UniformTieBreakingMoreTemplates"
### 0.460s elapsed time, 0.573s cpu time, 0.054s GC time
val it = (): unit
