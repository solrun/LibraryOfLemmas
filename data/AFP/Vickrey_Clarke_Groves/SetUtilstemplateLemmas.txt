   [("SetUtils.lm03", "trivial {?x}",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))
         )),
    ("SetUtils.trivial_implies_finite", "trivial ?X ==> finite ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("SetUtils.lm14", "(Pow ?X = {?X}) = (?X = {})",
     template_bimplication
      (template_equation
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_equation (template_var 0, template_hole 0))),
    ("SetUtils.lm10", "trivial ?X = (Pow ?X <= {{}, ?X})",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0))))),
    ("SetUtils.Union_member", "(EX S:?F. ?x : S) = (?x : \<Union> ?F)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), t_empty),
       template_app
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("SetUtils.lm02", "finite ?X ==> trivial ?X = (card ?X <= 1)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)))),
    ("SetUtils.trivial_subset", "[| trivial ?Y; ?X <= ?Y |] ==> trivial ?X",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("SetUtils.trivial_same",
     "trivial ?X = (ALL x1:?X. ALL x2:?X. x1 = x2)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("SetUtils.lm09", "trivial ?X ==> Pow ?X <= {{}, ?X}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 2, template_var 0),
             template_hole 0))))),
    ("SetUtils.lm08", "Pow ?X <= {{}, ?X} ==> trivial ?X",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_app
             (template_app (template_hole 3, template_var 0),
              template_hole 1)))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("SetUtils.trivial_empty_or_singleton",
     "trivial ?X = (?X = {} | ?X = {the_elem ?X})",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 0),
                 template_hole 2)),
             template_app
              (template_app (template_hole 3, template_var 0),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_hole 2)))
           ))),
    ("SetUtils.lm12", "((?x, ?y) : ?P) = (?y : ?P `` {?x})",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_hole 0))))),
    ("SetUtils.trivial_cartesian",
     "[| trivial ?X; trivial ?Y |] ==> trivial (?X \<times> ?Y)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1), t_empty))
           ))),
    ("SetUtils.trivial_subset_non_empty",
     "[| trivial ?t; ?t Int ?X ~= {} |] ==> ?t <= ?X",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_inequation (less_equals, template_var 1, template_var 0))),
    ("SetUtils.lm05", "[| ~ trivial ?X; trivial ?T |] ==> ?X - ?T ~= {}",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 3, template_var 1))
            ),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("SetUtils.singleton_sub_trivial_uniq",
     "[| {?x} <= ?X; trivial ?X |] ==> ?x = the_elem ?X",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 4, template_var 1),
            template_hole 3),
          template_var 0),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_equation
        (template_var 1, template_app (template_hole 0, template_var 0)))),
    ("SetUtils.image_Collect_mem", "{?f x |x. x : ?S} = ?f ` ?S",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("SetUtils.lm04", "[| trivial ?X; {?x} <= ?X |] ==> {?x} = ?X",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 0),
            template_hole 1),
          template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_hole 1),
         template_var 1))),
    ("SetUtils.trivial_imp_no_distinct",
     "[| trivial ?X; ?x : ?X; ?y : ?X |] ==> ?x = ?y",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 2)
            )],
       template_equation (template_var 1, template_var 0))),
    ("SetUtils.lm11",
     "{?x} \<times> UNIV Int ?P = {?x} \<times> ?P `` {?x}",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             t_empty)),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_hole 2)),
         t_empty))),
    ("SetUtils.lm07",
     "trivial (?A \<times> ?B) =
      (finite (?A \<times> ?B) & card ?A * card ?B <= 1)",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 7, template_var 1), t_empty))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 1)),
               template_app (template_hole 1, template_var 0))),
           template_hole 0)))),
    ("SetUtils.lm01",
     "trivial (?A \<times> ?B) ==>
      finite (?A \<times> ?B) & card ?A * card ?B <= 1",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app (template_hole 7, template_var 1), t_empty))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 7, template_var 1),
                   t_empty))),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 1)),
                   template_app (template_hole 1, template_var 0))),
               template_hole 0))
           ))),
    ("SetUtils.lm06",
     "finite (?A \<times> ?B) & card ?A * card ?B <= 1 ==>
      trivial (?A \<times> ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    t_empty))),
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app
                     (template_hole 4,
                      template_app (template_hole 3, template_var 1)),
                    template_app (template_hole 2, template_var 0))),
                template_hole 1))
            )],
       template_predicate
        (
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 6, template_var 1), t_empty))
           ))),
    ("SetUtils.injection_union",
     "[| inj_on ?f ?A; inj_on ?f ?B; ?f ` ?A Int ?f ` ?B = {} |]
      ==> inj_on ?f (?A Un ?B)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 0)
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1)),
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)),
          template_hole 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("SetUtils.equalitySubsetI",
     "[| !!x. x : ?A ==> x : ?B; !!x. x : ?B ==> x : ?A |] ==> ?A = ?B",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty)),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("SetUtils.lm13",
     "[| inj_on ?f ?A; inj_on ?f ?B |]
      ==> inj_on ?f (?A Un ?B) = (?f ` (?A - ?B) Int ?f ` (?B - ?A) = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 0)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0))
              )],
         template_equation
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1))),
           template_hole 0))))]
