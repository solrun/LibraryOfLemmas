Loading theory "HOL-Library.Cancellation" (required by "Draft.Lightweight_Java_ProofMoreTemplates" via "Draft.Lightweight_Java_Proof" via "Draft.Lightweight_Java_Equivalence" via "Draft.Lightweight_Java_Definition" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.Lightweight_Java_ProofMoreTemplates" via "Draft.Lightweight_Java_Proof")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Lightweight_Java_ProofMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Lightweight_Java_ProofMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.123s elapsed time, 0.513s cpu time, 0.046s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Lightweight_Java_ProofMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
consts
  enumerate :: "'a set => nat => 'a"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Infinite_Set"
### 0.304s elapsed time, 1.225s cpu time, 0.143s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Lightweight_Java_ProofMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.335s elapsed time, 1.340s cpu time, 0.143s GC time
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
Loading theory "HOL-Library.Stream" (required by "Draft.Lightweight_Java_ProofMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.215s elapsed time, 0.849s cpu time, 0.097s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Lightweight_Java_ProofMoreTemplates" via "Draft.ExtrEqs")
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.443s elapsed time, 1.772s cpu time, 0.143s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.Lightweight_Java_ProofMoreTemplates" via "Draft.Lightweight_Java_Proof" via "Draft.Lightweight_Java_Equivalence" via "Draft.Lightweight_Java_Definition")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 1.078s elapsed time, 4.087s cpu time, 0.997s GC time
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.131s elapsed time, 4.259s cpu time, 0.997s GC time
Found termination order: "size <*mlex*> {}"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
Found termination order: "size <*mlex*> {}"
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
Found termination order: "size <*mlex*> {}"
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "size <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
### theory "HOL-Library.Tree"
### 2.034s elapsed time, 6.245s cpu time, 1.261s GC time
Loading theory "Draft.Templates" (required by "Draft.Lightweight_Java_ProofMoreTemplates" via "Draft.ExtrEqs")
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.054s elapsed time, 0.110s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Lightweight_Java_ProofMoreTemplates")
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.536s elapsed time, 1.119s cpu time, 0.110s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.129s elapsed time, 7.513s cpu time, 1.404s GC time
Loading theory "Draft.Lightweight_Java_Definition" (required by "Draft.Lightweight_Java_ProofMoreTemplates" via "Draft.Lightweight_Java_Proof" via "Draft.Lightweight_Java_Equivalence")
Proofs for inductive predicate(s) "class_name"
  Proving monotonicity ...
Proofs for inductive predicate(s) "superclass_name"
  Proving monotonicity ...
Proofs for inductive predicate(s) "class_fields"
  Proving monotonicity ...
Proofs for inductive predicate(s) "class_methods"
  Proving monotonicity ...
Proofs for inductive predicate(s) "method_name"
  Proving monotonicity ...
Proofs for inductive predicate(s) "distinct_names"
  Proving monotonicity ...
Proofs for inductive predicate(s) "find_cld"
  Proving monotonicity ...
Proofs for inductive predicate(s) "find_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "path_length"
  Proving monotonicity ...
Proofs for inductive predicate(s) "acyclic_clds"
  Proving monotonicity ...
Proofs for inductive predicate(s) "find_path_rec"
  Proving monotonicity ...
Proofs for inductive predicate(s) "find_path"
  Proving monotonicity ...
Proofs for inductive predicate(s) "find_path_ty"
  Proving monotonicity ...
Proofs for inductive predicate(s) "fields_in_path"
  Proving monotonicity ...
Proofs for inductive predicate(s) "fields"
  Proving monotonicity ...
Proofs for inductive predicate(s) "methods_in_path"
  Proving monotonicity ...
Proofs for inductive predicate(s) "methods"
  Proving monotonicity ...
Proofs for inductive predicate(s) "ftype_in_fds"
  Proving monotonicity ...
Proofs for inductive predicate(s) "ftype_in_path"
  Proving monotonicity ...
Proofs for inductive predicate(s) "ftype"
  Proving monotonicity ...
Proofs for inductive predicate(s) "find_meth_def_in_list"
  Proving monotonicity ...
Proofs for inductive predicate(s) "find_meth_def_in_path"
  Proving monotonicity ...
Proofs for inductive predicate(s) "find_meth_def"
  Proving monotonicity ...
Proofs for inductive predicate(s) "mtype"
  Proving monotonicity ...
Proofs for inductive predicate(s) "sty_one"
  Proving monotonicity ...
Proofs for inductive predicate(s) "sty_many"
  Proving monotonicity ...
Proofs for inductive predicate(s) "sty_option"
  Proving monotonicity ...
Proofs for inductive predicate(s) "wf_object", "wf_varstate", "wf_heap", "wf_config", "wf_stmt", "wf_meth", "wf_class_common", "wf_class", "wf_program"
  Proving monotonicity ...
Proofs for inductive predicate(s) "tr_s"
  Proving monotonicity ...
Proofs for inductive predicate(s) "r_stmt"
  Proving monotonicity ...
### theory "Draft.Lightweight_Java_Definition"
### 5.692s elapsed time, 7.540s cpu time, 2.403s GC time
Loading theory "Draft.Lightweight_Java_Equivalence" (required by "Draft.Lightweight_Java_ProofMoreTemplates" via "Draft.Lightweight_Java_Proof")
consts
  find_cld_f :: "cld list => ctx => fqn => (ctx * cld) option"
consts
  find_type_f :: "cld list => ctx => cl => ty option"
consts
  find_path_ty_f :: "cld list => ty => (ctx * cld) list option"
consts
  fields_in_path_f :: "(ctx * cld) list => char list list"
consts
  methods_in_path_f :: "cld list => char list list"
consts
  ftype_in_fds_f :: "cld list => ctx => fd list => char list => ty_opt_bot"
consts
  ftype_in_path_f ::
    "cld list => (ctx * cld) list => char list => ty option"
consts
  find_meth_def_in_list_f :: "meth_def list => char list => meth_def option"
consts
  find_meth_def_in_path_f ::
    "(ctx * cld) list => char list => (ctx * meth_def) option"
consts
  lift_opts :: "'a option list => 'a list option"
consts
  tr_s_f :: "(x => x option) => s => s"
  tr_ss_f :: "(x => x option) => s list => s list"
### theory "Draft.Lightweight_Java_Equivalence"
### 0.780s elapsed time, 0.891s cpu time, 0.145s GC time
Loading theory "Draft.Lightweight_Java_Proof" (required by "Draft.Lightweight_Java_ProofMoreTemplates")
### theory "Draft.Lightweight_Java_Proof"
### 0.987s elapsed time, 1.089s cpu time, 0.141s GC time
Loading theory "Draft.Lightweight_Java_ProofMoreTemplates"
val templateLemmas =
   [("Lightweight_Java_Proof.length_one_in_two",
     "length ?y_ty_list = length (map fst ?y_ty_list)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Lightweight_Java_Proof.length_two_in_two",
     "length ?y_ty_list = length (map snd ?y_ty_list)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Lightweight_Java_Proof.top_not_subtype",
     "sty_one ?P ty_top (ty_def ?ctx ?dcl) ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_hole 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_predicate (template_hole 0))),
    ("Lightweight_Java_Proof.x_var_not_this",
     "(if x_var ?var = x_this then Some ?x' else ?Q) = ?Q",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 2)),
               template_hole 1)),
           template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_var 0)),
    ("Lightweight_Java_Proof.fresh_x", "finite ?A ==> EX x. x ~: ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Lightweight_Java_Proof.length_two_in_three",
     "length ?cl_var_ty_list =
      length (map (%(cl, var, ty). var) ?cl_var_ty_list)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0)))),
    ("Lightweight_Java_Proof.length_three_in_three",
     "length ?cl_var_ty_list =
      length (map (%(cl, var, ty). ty) ?cl_var_ty_list)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0)))),
    ("Lightweight_Java_Proof.fresh_oid",
     "wf_heap ?P ?H ==> EX oid. oid ~: dom ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Lightweight_Java_Proof.wf_intros",
     "?ty_opt = Some ?ty ==> wf_object ?P ?H (Some v_null) ?ty_opt",
     template_implication
      ([template_equation
         (template_var 3, template_app (template_hole 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0),
               template_app (template_hole 1, template_hole 0)),
             template_var 3)
           ))),
    ("Lightweight_Java_Proof.replicate_eq_length",
     "replicate ?x ?c = replicate ?y ?c ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_var 1))],
       template_equation (template_var 2, template_var 0))),
    ("Lightweight_Java_Proof.supertype_top",
     "sty_one ?P ?ty ?ty' ==> ?ty = ty_top --> ?ty' = ty_top",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Lightweight_Java_Proof.mem_class_wf",
     "[| wf_program ?P; ?cld : set ?P |] ==> wf_class ?P ?cld",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Lightweight_Java_Proof.length_three_in_four",
     "length ?y_cl_var_var'_v_list =
      length (map (%(y, cl, var, u). var) ?y_cl_var_var'_v_list)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_var 0)))),
    ("Lightweight_Java_Proof.map_override_get",
     "(?\<Gamma> ++ (%u. if u = ?x' then Some ?ty_x_d else None)) ?x' =
      Some ?ty_x_d",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 2), t_empty),
         template_var 1),
       template_app (template_hole 1, template_var 0))),
    ("Lightweight_Java_Proof.find_path_fields",
     "find_path_ty_f ?P1 ?ty1 = Some ?path1 ==>
      EX fs. fields_in_path_f ?path1 = fs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 4, template_var 2), template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Lightweight_Java_Proof.map_length_y'",
     "map fst ?y_y'_list = map fst ?y_ty_list ==>
      length ?y_y'_list = length ?y_ty_list",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_hole 5),
            template_var 1),
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lightweight_Java_Proof.ftype_fields",
     "ftype_in_path_f ?P ?path_s ?f = Some ?ty_f ==>
      ?f : set (fields_in_path_f ?path_s)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)))
           ))),
    ("Lightweight_Java_Proof.map_one_in_two",
     "?y_k : set (map fst ?y_ty_list) -->
      (EX ty. (?y_k, ty) : set ?y_ty_list)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 7, template_var 1),
               template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_hole 4),
                   template_var 0)))),
           template_app (template_hole 3, t_empty))
         )),
    ("Lightweight_Java_Proof.fmdip_to_mip",
     "find_meth_def_in_path_f ?path ?m = Some ?ctxmd ==>
      ?m : set (methods_in_path_f (map snd ?path))",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 6, template_var 2), template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_hole 0),
                   template_var 2))))
           ))),
    ("Lightweight_Java_Proof.wf_intros",
     "sty_option ?P (?\<Gamma> ?x) (?\<Gamma> (x_var ?var)) ==>
      wf_stmt ?P ?\<Gamma> (s_ass ?var ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_var 2, template_var 1)),
              template_app
               (template_var 2,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Lightweight_Java_Proof.wf_intros",
     "ALL x:set ?s_list. wf_stmt ?P ?\<Gamma> x ==>
      wf_stmt ?P ?\<Gamma> (s_block ?s_list)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Lightweight_Java_Proof.length_one_in_five",
     "length ?y_cl_var_var'_v_list =
      length (map (%(y, cl, var, var', v). y) ?y_cl_var_var'_v_list)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_var 0)))),
    ("Lightweight_Java_Proof.length_three_in_five",
     "length ?y_cl_var_var'_v_list =
      length (map (%(y, cl, var, var', v). var) ?y_cl_var_var'_v_list)",
     template_equation
      (template_app (template_hole 6, template_var 0),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_var 0)))),
    ("Lightweight_Java_Proof.map_length_list",
     "length (map (%((y, y'), yy, ty). (y', ty)) ?list) = length ?list",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4, template_app (template_hole 3, t_empty))),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Lightweight_Java_Proof.weaken_list_y",
     "map (%(y, cl, var, var', v). y) ?y_cl_var_var'_v_list =
      map fst ?y_cl_var_var'_v_list",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_var 0),
       template_app
        (template_app (template_hole 5, template_hole 0), template_var 0))),
    ("Lightweight_Java_Proof.find_md_in_pre_path",
     "find_meth_def_in_path_f ?path ?m = Some ?ctxmd ==>
      find_meth_def_in_path_f (?path @ ?path') ?m = Some ?ctxmd",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_var 2),
         template_app (template_hole 1, template_var 1)))),
    ("Lightweight_Java_Proof.fresh_var_not_in_list",
     "finite ?A ==> EX var. x_var var ~: ?A & var ~: set ?list",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Lightweight_Java_Proof.wf_cld_from_lu",
     "[| wf_program ?P; find_cld ?P ?ctx ?fqn (Some (?ctx', ?cld')) |]
      ==> wf_class ?P ?cld'",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 4), template_var 0)
           ))),
    ("Lightweight_Java_Proof.fresh_x_not_in_vars'",
     "finite ?A ==> EX x'. x' ~: ?A & x' ~: x_var ` set ?vars'",
     template_implication
      ([template_predicate
         (template_app (template_hole 7, template_var 1))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Lightweight_Java_Proof.ftype_pre_path",
     "ftype_in_path_f ?P ?path_s ?f = Some ?ty_f ==>
      ftype_in_path_f ?P (?path_s @ ?path'') ?f = Some ?ty_f",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3),
            template_var 2),
          template_app (template_hole 1, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_var 2),
         template_app (template_hole 1, template_var 1)))),
    ("Lightweight_Java_Proof.length_y_ty_list_vs",
     "lift_opts (map (%(y, ty). ?L y) ?y_ty_list) = Some ?vs ==>
      length ?y_ty_list = length ?vs",
     template_implication
      ([template_equation
         (template_app
           (template_hole 6,
            template_app
             (template_app
               (template_hole 5, template_app (template_hole 4, t_empty)),
              template_var 1)),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lightweight_Java_Proof.f_in_found_fds",
     "ftype_in_fds_f ?P ?ctx ?fds ?f = ty_opt_bot_opt (Some ?ty_f) -->
      ?f : case_fd (%cl f. f) ` set ?fds",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 6, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1)),
               template_app
                (template_hole 5,
                 template_app (template_hole 4, template_var 0)))),
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app
                (template_hole 2, template_app (template_hole 1, t_empty)),
               template_app (template_hole 0, template_var 2))))
         )),
    ("Lightweight_Java_Proof.clds_in_path_exist",
     "find_path_f ?P ?ctx' ?fqn = Some ?path ==>
      ALL (ctx, cld):set ?path. cld : set ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2),
            template_var 1),
          template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 0)),
             template_app (template_hole 2, t_empty))
           ))),
    ("Lightweight_Java_Proof.map_length_ty",
     "map (%(cl, var, ty). ty) ?cl_var_ty_list = map snd ?y_ty_list ==>
      length ?cl_var_ty_list = length ?y_ty_list",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7, template_app (template_hole 6, t_empty)),
            template_var 1),
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lightweight_Java_Proof.wf_preservation",
     "[| wf_config ?\<Gamma> ?config; r_stmt ?config ?config' |]
      ==> EX \<Gamma>'.
             ?\<Gamma> \<subseteq>\<^sub>m \<Gamma>' &
             wf_config \<Gamma>' ?config'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Lightweight_Java_Proof.wf_intros",
     "sty_option ?P
       (case ?H ?oid of None => None | Some tyfs => Some (fst tyfs))
       ?ty_opt ==>
      wf_object ?P ?H (Some (v_oid ?oid)) ?ty_opt",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 3),
                template_app
                 (template_app
                   (template_app (template_hole 6, template_hole 5),
                    t_empty),
                  template_app (template_var 2, template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Lightweight_Java_Proof.lift_opts_ft_length",
     "lift_opts
       (map (case_vd (%clk vark. find_type_f ?P ?ctx_o clk)) ?vds) =
      Some ?tys ==>
      length ?tys = length ?vds",
     template_implication
      ([template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app
               (template_hole 6, template_app (template_hole 5, t_empty)),
              template_var 1)),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0),
         template_app (template_hole 0, template_var 1)))),
    ("Lightweight_Java_Proof.nth_in_set",
     "[| ?i < length ?y_ty_list; map fst ?y_ty_list ! ?i = ?y_k |]
      ==> ?y_k : set (map fst ?y_ty_list)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 3, template_hole 2),
                template_var 1)),
            template_var 2),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)))
           ))),
    ("Lightweight_Java_Proof.map_ctx_cld_dcl_two",
     "?ctxclds =
      map (%(ctx, cld, dcl). (ctx, cld))
       (map (%(ctx, cld). (ctx, cld, ?classname_f cld)) ?ctxclds)",
     template_equation
      (template_var 1,
       template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, t_empty)),
         template_app
          (template_app
            (template_hole 3, template_app (template_hole 2, t_empty)),
           template_var 1)))),
    ("Lightweight_Java_Proof.map_ctxclds",
     "?ctxclds =
      map ((%(ctx_XXX, cld_XXX, dcl_XXX). (ctx_XXX, cld_XXX)) o
           (%(ctx, cld). (ctx, cld, class_name_f cld)))
       ?ctxclds",
     template_equation
      (template_var 0,
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 7, template_app (template_hole 6, t_empty)),
             template_app (template_hole 3, t_empty))),
         template_var 0))),
    ("Lightweight_Java_Proof.fresh_vars",
     "finite ?A ==>
      EX list.
         length list = ?i & x_var ` set list Int ?A = {} & distinct list",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1))],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Lightweight_Java_Proof.fields_to_owner",
     "?f : set (fields_in_path_f ?path) ==>
      EX cld:set (map snd ?path).
         EX cl_f. fd_def cl_f ?f : set (class_fields_f cld)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_hole 5),
                   template_var 0))),
             t_empty)
           ))),
    ("Lightweight_Java_Proof.weaken_list_var",
     "map (%(y, cl, var, var', v). var) ?y_cl_var_var'_v_list =
      map (%(y, cl, var, u). var) ?y_cl_var_var'_v_list",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_var 0),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_var 0))),
    ("Lightweight_Java_Proof.map_length_y",
     "map (%(y, cl, var, var', v). y) ?y_cl_var_var'_v_list =
      map fst ?y_ty_list ==>
      length ?y_cl_var_var'_v_list = length ?y_ty_list",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9, template_app (template_hole 8, t_empty)),
            template_var 1),
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lightweight_Java_Proof.wf_intros",
     "[| finite (dom ?L);
         ALL x:dom ?\<Gamma>. wf_object ?P ?H (?L x) (?\<Gamma> x) |]
      ==> wf_varstate ?P ?\<Gamma> ?H ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 2)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2),
               template_var 0),
             template_var 3)
           ))),
    ("Lightweight_Java_Proof.wf_intros",
     "[| wf_program ?P; wf_heap ?P ?H; wf_varstate ?P ?\<Gamma> ?H ?L |]
      ==> wf_config ?\<Gamma> (config_ex ?P ?L ?H ?Exception)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 2),
                template_var 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1),
                 template_var 3),
               template_var 0))
           ))),
    ("Lightweight_Java_Proof.progress",
     "[| wf_config ?\<Gamma> (config_normal ?P ?L ?H ?S); ?S ~= [] |]
      ==> EX config'. r_stmt (config_normal ?P ?L ?H ?S) config'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 2))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Lightweight_Java_Proof.field_has_type",
     "[| wf_program ?P; fields ?P ?ty_oid (Some ?f_list);
         ?f : set ?f_list |]
      ==> EX ty. ftype ?P ?ty_oid ?f ty",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Lightweight_Java_Proof.wf_intros",
     "[| ?P = ?cld_list; distinct_names_f ?P;
         ALL x:set ?cld_list. wf_class ?P x; acyclic_clds ?P |]
      ==> wf_program ?P",
     template_implication
      ([template_equation (template_var 1, template_var 0),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              t_empty)
            ),
        template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("Lightweight_Java_Proof.m_image_eq",
     "meth_def_def (meth_sig_def ?cl ?m ?list2.0) ?meth_body
      : set ?meth_defs ==>
      ?m : case_meth_def
            (%meth_sig meth_body.
                case meth_sig of meth_sig_def cl meth vds => meth) `
           set ?meth_defs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_app (template_hole 5, template_var 4),
                        template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app
                (template_hole 2, template_app (template_hole 1, t_empty)),
               template_app (template_hole 4, template_var 0)))
           ))),
    ("Lightweight_Java_Proof.m_in_list",
     "(ALL (meth_def, y):set ?meth_def_meth_list.
          method_name_f meth_def = y) &
      find_meth_def_in_list_f (map fst ?meth_def_meth_list) ?m =
      Some ?md ==>
      ?m : snd ` set ?meth_def_meth_list",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, template_var 2)),
                  template_app (template_hole 10, t_empty))),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app
                       (template_app (template_hole 5, template_hole 4),
                        template_var 2)),
                    template_var 1)),
                template_app (template_hole 3, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_app (template_hole 11, template_var 2)))
           ))),
    ("Lightweight_Java_Proof.wf_programE",
     "[| wf_program ?a;
         [| distinct_names_f ?a; ALL x:set ?a. wf_class ?a x;
            acyclic_clds ?a |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_implication
         ([template_predicate
            (template_app (template_hole 4, template_var 1))],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 1)),
                   t_empty)
                 )],
            template_implication
             ([template_predicate
                (template_app (template_hole 0, template_var 1))],
              template_predicate (template_var 0))))],
       template_predicate (template_var 0))),
    ("Lightweight_Java_Proof.wf_intros",
     "[| find_type_f ?P ?ctx ?cl = Some ?ty;
         sty_option ?P (Some ?ty) (?\<Gamma> (x_var ?var)) |]
      ==> wf_stmt ?P ?\<Gamma> (s_new ?var ?ctx ?cl)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 5),
              template_var 4),
            template_var 3),
          template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_app (template_hole 4, template_var 2)),
              template_app
               (template_var 1,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_var 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 4),
               template_var 3))
           ))),
    ("Lightweight_Java_Proof.wf_intros",
     "[| cld_def ?dcl ?cl ?fds ?meth_defs : set ?P;
         wf_class_common ?P ctx_def ?dcl ?cl ?fds ?meth_defs |]
      ==> wf_class ?P (cld_def ?dcl ?cl ?fds ?meth_defs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1)),
              template_app (template_hole 3, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 0),
                      template_hole 1),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 3),
                 template_var 2),
               template_var 1))
           ))),
    ("Lightweight_Java_Proof.weaken_list_fd",
     "map (%(y, cl, var, var', v). vd_def cl var) ?list =
      map (%(y, cl, var, u). vd_def cl var) ?list",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_var 0),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, t_empty)),
         template_var 0))),
    ("Lightweight_Java_Proof.distinct_x_var'",
     "distinct
       (map (%(y, cl, var, var', v). x_var var') ?y_cl_var_var'_v_list) =
      distinct (map (%(y, cl, var, var', v). var') ?y_cl_var_var'_v_list)",
     template_equation
      (template_app
        (template_hole 12,
         template_app
          (template_app
            (template_hole 11, template_app (template_hole 10, t_empty)),
           template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_var 0)))),
    ("Lightweight_Java_Proof.distinct_x_var",
     "distinct
       (map (%(y, cl, var, var', v). x_var var) ?y_cl_var_var'_v_list) =
      distinct (map (%(y, cl, var, var', v). var) ?y_cl_var_var'_v_list)",
     template_equation
      (template_app
        (template_hole 12,
         template_app
          (template_app
            (template_hole 11, template_app (template_hole 10, t_empty)),
           template_var 0)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_var 0)))),
    ("Lightweight_Java_Proof.map_length_var",
     "map (%(y, cl, var, var', v). var) ?y_cl_var_var'_v_list =
      map (%(cl, var, ty). var) ?cl_var_ty_list ==>
      length ?y_cl_var_var'_v_list = length ?cl_var_ty_list",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 10, template_app (template_hole 9, t_empty)),
            template_var 1),
          template_app
           (template_app
             (template_hole 5, template_app (template_hole 4, t_empty)),
            template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lightweight_Java_Proof.finite_super_varstate",
     "finite
       (dom ((?L ++
              map_of
               (map (%(ya, cl, var, var', y). (x_var var', y))
                 ?y_cl_var_var'_v_list))
             (?x' |-> v_oid ?oid))) =
      finite (dom ?L)",
     template_equation
      (template_app
        (template_hole 13,
         template_app
          (template_hole 12,
           template_app
            (template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_var 3),
                   template_app
                    (template_hole 9,
                     template_app
                      (template_app
                        (template_hole 8,
                         template_app (template_hole 7, t_empty)),
                       template_var 2)))),
               template_var 1),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))))),
       template_app
        (template_hole 13,
         template_app (template_hole 12, template_var 3)))),
    ("Lightweight_Java_Proof.map_map_zip_y'",
     "map fst ?y_y'_list = map fst ?y_ty_list ==>
      map snd ?y_y'_list =
      map fst (map2 (%(y, y') (yy, ty). (y', ty)) ?y_y'_list ?y_ty_list)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 14, template_hole 13),
            template_var 1),
          template_app
           (template_app (template_hole 12, template_hole 11),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 9, template_hole 8), template_var 1),
         template_app
          (template_app (template_hole 7, template_hole 6),
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4, template_app (template_hole 3, t_empty))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("Lightweight_Java_Proof.map_map_zip_ty",
     "map fst ?y_y'_list = map fst ?y_ty_list ==>
      map snd (map2 (%(y, y') (yy, ty). (y', ty)) ?y_y'_list ?y_ty_list) =
      map snd ?y_ty_list",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 14, template_hole 13),
            template_var 1),
          template_app
           (template_app (template_hole 12, template_hole 11),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 9, template_hole 8),
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6, template_app (template_hole 5, t_empty))),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Lightweight_Java_Proof.wf_method_from_find",
     "[| wf_program ?P;
         find_meth_def ?P ?ty_x_d ?meth (Some (?ctx, ?meth_def)) |]
      ==> EX dcl.
             sty_one ?P ?ty_x_d (ty_def ?ctx dcl) &
             wf_meth ?P (ty_def ctx_def dcl) ?meth_def",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Lightweight_Java_Proof.ftype_preservation'",
     "[| wf_program ?P; is_sty_one ?P ?ty_x_d ?ty_x_s = Some True;
         ftype_f ?P ?ty_x_s ?f = Some ?ty_f |]
      ==> ftype_f ?P ?ty_x_d ?f = Some ?ty_f",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 5, template_var 4),
              template_var 3),
            template_var 2),
          template_app (template_hole 4, template_hole 3)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 4),
              template_var 2),
            template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lightweight_Java_Proof.map_three_in_four",
     "?var_k : set (map (%(y, cl, var, u). var) ?y_cl_var_var'_v_list) -->
      (EX y cl u. (y, cl, ?var_k, u) : set ?y_cl_var_var'_v_list)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_app (template_hole 13, template_var 1),
               template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app (template_hole 10, t_empty)),
                   template_var 0)))),
           template_app (template_hole 7, t_empty))
         )),
    ("Lightweight_Java_Proof.type_to_val",
     "[| wf_varstate ?P ?\<Gamma> ?H ?L;
         sty_option ?P (?\<Gamma> ?x) (?\<Gamma> ?y) |]
      ==> EX v w. ?L ?x = Some v & ?L ?y = Some w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_app (template_var 4, template_var 1)),
              template_app (template_var 4, template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Lightweight_Java_Proof.fpr_mem_has_path",
     "[| find_path_f ?P ?ctx ?cl = Some ?suffix;
         (?ctx', ?cld') : set ?suffix |]
      ==> EX suffix'.
             find_path_rec_f ?P ?ctx'
              (cl_fqn (fqn_def (class_name_f ?cld'))) [] =
             Some suffix'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 5),
              template_var 4),
            template_var 3),
          template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 1),
                  template_var 0)),
              template_app (template_hole 6, template_var 2))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Lightweight_Java_Proof.map_fst",
     "map fst
       (map (%(y, ty, var, var', v). (x_var var', ty))
         ?y_ty_var_var'_v_list) =
      map (%(y, ty, var, var', v). x_var var') ?y_ty_var_var'_v_list",
     template_equation
      (template_app
        (template_app (template_hole 13, template_hole 12),
         template_app
          (template_app
            (template_hole 11, template_app (template_hole 10, t_empty)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_var 0))),
    ("Lightweight_Java_Proof.map_fst_two'",
     "map fst
       (map (%(ya, cl, var, var', y). (x_var var', y))
         ?y_cl_var_var'_v_list) =
      map (%(y, cl, var, var', y). x_var var') ?y_cl_var_var'_v_list",
     template_equation
      (template_app
        (template_app (template_hole 13, template_hole 12),
         template_app
          (template_app
            (template_hole 11, template_app (template_hole 10, t_empty)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_var 0))),
    ("Lightweight_Java_Proof.f_notin_list",
     "?f ~: set (map (%(cl, f, ty). f) ?cl_f_ty_list) ==>
      ftype_in_fds_f ?P ctx_def
       (map (%(cl, f, ty). fd_def cl f) ?cl_f_ty_list) ?f =
      ty_opt_bot_opt None",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 13, template_var 2),
                  template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_hole 11,
                        template_app (template_hole 10, t_empty)),
                      template_var 1)))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 7, template_var 0),
               template_hole 6),
             template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_var 1)),
           template_var 2),
         template_app (template_hole 1, template_hole 0)))),
    ("Lightweight_Java_Proof.ftype_in_fds_none",
     "?f ~: (%(cl, f, ty). f) ` set ?cl_f_ty_list ==>
      ftype_in_fds_f ?P ?ctx (map (%(cl, f, ty). fd_def cl f) ?cl_f_ty_list)
       ?f =
      ty_opt_bot_opt None",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_app
                   (template_app
                     (template_hole 11,
                      template_app (template_hole 10, t_empty)),
                    template_app (template_hole 8, template_var 2)))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 1),
               template_var 0),
             template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_var 2)),
           template_var 3),
         template_app (template_hole 1, template_hole 0)))),
    ("Lightweight_Java_Proof.wf_intros",
     "[| ?\<Gamma> ?x = Some ?ty; ftype_f ?P ?ty ?f = Some ?ty';
         sty_option ?P (?\<Gamma> ?y) (Some ?ty') |]
      ==> wf_stmt ?P ?\<Gamma> (s_write ?x ?f ?y)",
     template_implication
      ([template_equation
         (template_app (template_var 6, template_var 5),
          template_app (template_hole 4, template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 3),
              template_var 4),
            template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_var 6, template_var 0)),
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 6),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 5),
                 template_var 2),
               template_var 0))
           ))),
    ("Lightweight_Java_Proof.map_fst_var'",
     "distinct
       (map fst
         (map (%(ya, cl, var, var', y). (x_var var', y))
           ?y_cl_var_var'_v_list)) =
      distinct (map (%(y, cl, var, var', v). var') ?y_cl_var_var'_v_list)",
     template_equation
      (template_app
        (template_hole 15,
         template_app
          (template_app (template_hole 14, template_hole 13),
           template_app
            (template_app
              (template_hole 12, template_app (template_hole 11, t_empty)),
             template_var 0))),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_var 0)))),
    ("Lightweight_Java_Proof.map_fst_two",
     "map fst
       (map (%(y, cl, var, var', v). (x_var var, x_var var'))
         ?y_cl_var_var'_v_list) =
      map (%(y, cl, var, var', v). x_var var) ?y_cl_var_var'_v_list",
     template_equation
      (template_app
        (template_app (template_hole 13, template_hole 12),
         template_app
          (template_app
            (template_hole 11, template_app (template_hole 10, t_empty)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_var 0))),
    ("Lightweight_Java_Proof.wf_intros",
     "[| ?\<Gamma> ?x = Some ?ty; ftype_f ?P ?ty ?f = Some ?ty';
         sty_option ?P (Some ?ty') (?\<Gamma> (x_var ?var)) |]
      ==> wf_stmt ?P ?\<Gamma> (s_read ?var ?x ?f)",
     template_implication
      ([template_equation
         (template_app (template_var 6, template_var 5),
          template_app (template_hole 5, template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 4, template_var 3),
              template_var 4),
            template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 5, template_var 1)),
              template_app
               (template_var 6,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 6),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 5),
               template_var 2))
           ))),
    ("Lightweight_Java_Proof.wf_subvarstateI",
     "[| wf_varstate ?P ?\<Gamma> ?H ?L; ?\<Gamma> ?x' = Some ?ty;
         wf_object ?P ?H (Some ?v) (Some ?ty) |]
      ==> wf_varstate ?P ?\<Gamma> ?H (?L(?x' |-> ?v))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app (template_var 5, template_var 2),
          template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 6),
                  template_var 4),
                template_app (template_hole 1, template_var 0)),
              template_app (template_hole 3, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 5, template_var 6),
                 template_var 5),
               template_var 4),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_app (template_hole 1, template_var 0)))
           ))),
    ("Lightweight_Java_Proof.wf_config_normalI",
     "[| wf_program ?P; wf_heap ?P ?H; wf_varstate ?P ?\<Gamma> ?H ?L;
         ALL x:set ?s_list. wf_stmt ?P ?\<Gamma> x |]
      ==> wf_config ?\<Gamma> (config_normal ?P ?L ?H ?s_list)",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 2),
                template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 1),
                 template_var 3),
               template_var 0))
           ))),
    ("Lightweight_Java_Proof.map_add_x_var",
     "?var'1
      : set (map (%(y, cl, var, var', v). var) ?y_cl_var_var'_v_list1) ==>
      x_var ?var'1
      : set (map (%(y, cl, var, var', v). x_var var)
              ?y_cl_var_var'_v_list1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 1),
              template_app
               (template_hole 13,
                template_app
                 (template_app
                   (template_hole 12,
                    template_app (template_hole 11, t_empty)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app (template_hole 6, template_var 1)),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, t_empty)),
                 template_var 0)))
           ))),
    ("Lightweight_Java_Proof.no_field_hiding",
     "[| wf_program ?P; is_sty_one ?P ?ty_x_d ?ty_x_s = Some True;
         ftype_f ?P ?ty_x_s ?f = Some ?ty_f;
         fields_f ?P ?ty_x_d = Some ?fields_oid |]
      ==> ?f : set ?fields_oid",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 5),
              template_var 4),
            template_var 3),
          template_app (template_hole 9, template_hole 8)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 5),
              template_var 3),
            template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 5), template_var 4),
          template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lightweight_Java_Proof.mem_vd",
     "vd_def ?cl_k ?var_k
      : set (map (%(y, cl, var, var', v). vd_def cl var)
              ?y_cl_var_var'_v_list) -->
      ?var_k
      : set (map (%(y, cl, var, var', v). var) ?y_cl_var_var'_v_list)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_app
                (template_hole 14,
                 template_app
                  (template_app (template_hole 13, template_var 2),
                   template_var 1)),
               template_app
                (template_hole 12,
                 template_app
                  (template_app
                    (template_hole 11,
                     template_app (template_hole 10, t_empty)),
                   template_var 0)))),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, t_empty)),
                 template_var 0))))
         )),
    ("Lightweight_Java_Proof.fst_map_elem",
     "(?y_k, ?ty_k, ?var_k, ?var'_k, ?v_k) : set ?y_ty_var_var'_v_list ==>
      x_var ?var'_k
      : fst `
        (%(y, ty, var, var', v). (x_var var', ty)) `
        set ?y_ty_var_var'_v_list",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 5),
                  template_app
                   (template_app (template_hole 13, template_var 4),
                    template_app
                     (template_app (template_hole 12, template_var 3),
                      template_app
                       (template_app (template_hole 11, template_var 2),
                        template_var 1))))),
              template_app (template_hole 10, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app (template_hole 8, template_var 2)),
             template_app
              (template_app (template_hole 7, template_hole 6),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, t_empty)),
                 template_app (template_hole 10, template_var 0))))
           ))),
    ("Lightweight_Java_Proof.wf_intros",
     "[| sty_option ?P (?\<Gamma> ?x) (?\<Gamma> ?y) |
         sty_option ?P (?\<Gamma> ?y) (?\<Gamma> ?x);
         wf_stmt ?P ?\<Gamma> ?s1.0; wf_stmt ?P ?\<Gamma> ?s2.0 |]
      ==> wf_stmt ?P ?\<Gamma> (s_if ?x ?y ?s1.0 ?s2.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_app (template_var 4, template_var 3)),
                  template_app (template_var 4, template_var 2))),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_app (template_var 4, template_var 2)),
                template_app (template_var 4, template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 5),
                template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 5),
                template_var 4),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 5),
               template_var 4),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("Lightweight_Java_Proof.exists_three_in_five",
     "?var_k
      : set (map (%(y, cl, var, var', v). var) ?y_cl_var_var'_v_list) -->
      (EX y cl var' v.
          (y, cl, ?var_k, var', v) : set ?y_cl_var_var'_v_list)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 17,
             template_app
              (template_app (template_hole 16, template_var 1),
               template_app
                (template_hole 15,
                 template_app
                  (template_app
                    (template_hole 14,
                     template_app (template_hole 13, t_empty)),
                   template_var 0)))),
           template_app (template_hole 9, t_empty))
         )),
    ("Lightweight_Java_Proof.no_ty_bot",
     "ALL x:set ?cl_f_ty_list1.
         case x of (cl, f, ty) => find_type_f ?P1 ctx_def cl = Some ty ==>
      ftype_in_fds_f ?P1 ?ctx'1
       (map (%(cl, f, ty). fd_def cl f) ?cl_f_ty_list1) ?f1 ~=
      ty_opt_bot_bot",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 3)),
              t_empty)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 5, template_var 2),
                   template_var 1),
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, t_empty)),
                   template_var 3)),
               template_var 0),
             template_hole 0)
           ))),
    ("Lightweight_Java_Proof.map_f",
     "ALL cl_f_ty_list.
         map (%(cl, f). fd_def cl f) ?cl_f_list =
         map (%(cl, f, ty). fd_def cl f) cl_f_ty_list -->
         map (%(cl, f). f) ?cl_f_list = map (%(cl, f, ty). f) cl_f_ty_list",
     template_predicate (template_app (template_hole 14, t_empty))),
    ("Lightweight_Java_Proof.map_xx",
     "(?y, ?cl, ?var_k, ?var', ?v) : set ?y_cl_var_var'_v_list ==>
      (x_var ?var_k, x_var ?var')
      : set (map (%(y, cl, var, var', v). (x_var var, x_var var'))
              ?y_cl_var_var'_v_list)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 5),
                  template_app
                   (template_app (template_hole 12, template_var 4),
                    template_app
                     (template_app (template_hole 11, template_var 3),
                      template_app
                       (template_app (template_hole 10, template_var 2),
                        template_var 1))))),
              template_app (template_hole 9, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 3)),
                 template_app (template_hole 6, template_var 2))),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, t_empty)),
                 template_var 0)))
           ))),
    ("Lightweight_Java_Proof.fpr_mem_has_path'",
     "[| find_path_rec_f ?P ?ctx ?cl ?prefix = Some (?prefix @ ?suffix);
         ?x : set ?suffix |]
      ==> case ?x of
          (ctx', cld') =>
            ALL prefix'.
               EX suffix'.
                  find_path_rec_f ?P ctx'
                   (cl_fqn (fqn_def (class_name_f cld'))) prefix' =
                  Some suffix'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 10, template_var 5),
                template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_hole 9,
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1))),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, t_empty), template_var 0)
           ))),
    ("Lightweight_Java_Proof.x'_not_in_list",
     "[| (?y_k, ?cl_k, ?var_k, ?var'_k, ?v_k) : set ?y_cl_var_var'_v_list;
         ?x'
         ~: (%(y, cl, var, var', v). x_var var') `
            set ?y_cl_var_var'_v_list |]
      ==> x_var ?var'_k ~= ?x'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 6),
                  template_app
                   (template_app (template_hole 12, template_var 5),
                    template_app
                     (template_app (template_hole 11, template_var 4),
                      template_app
                       (template_app (template_hole 10, template_var 3),
                        template_var 2))))),
              template_app (template_hole 9, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app (template_hole 5, t_empty)),
                    template_app (template_hole 9, template_var 1)))
                )
            )],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 3), template_var 0)
           ))),
    ("Lightweight_Java_Proof.map_not_mem",
     "[| (?y_k, ?ty_k, ?var_k, ?var'_k, ?v_k) : set ?y_ty_var_var'_v_list;
         ?x'
         ~: (%(y, ty, var, var', v). x_var var') `
            set ?y_ty_var_var'_v_list |]
      ==> x_var ?var'_k ~= ?x'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 6),
                  template_app
                   (template_app (template_hole 12, template_var 5),
                    template_app
                     (template_app (template_hole 11, template_var 4),
                      template_app
                       (template_app (template_hole 10, template_var 3),
                        template_var 2))))),
              template_app (template_hole 9, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 0),
                  template_app
                   (template_app
                     (template_hole 6,
                      template_app (template_hole 5, t_empty)),
                    template_app (template_hole 9, template_var 1)))
                )
            )],
       template_negation
        (
           template_equation
            (template_app (template_hole 1, template_var 3), template_var 0)
           ))),
    ("Lightweight_Java_Proof.collect_suc_eq_lt",
     "{?f i |i. i < Suc ?n} = {?f i |i. i = 0} Un {?f (Suc i) |i. i < ?n}",
     template_equation
      (template_app (template_hole 8, t_empty),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 8, t_empty)),
         template_app (template_hole 8, t_empty)))),
    ("Lightweight_Java_Proof.not_dom_is_none",
     "(%(y, cl, var, var', v). x_var var') ` set ?y_cl_var_var'_v_list Int
      dom ?L =
      {} ==>
      ALL x:set ?y_cl_var_var'_v_list.
         case x of (y, cl, var, var', v) => ?L (x_var var') = None",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 16,
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, t_empty)),
                template_app (template_hole 9, template_var 1))),
            template_app (template_hole 8, template_var 0)),
          template_hole 7)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app (template_hole 9, template_var 1)),
             t_empty)
           ))),
    ("Lightweight_Java_Proof.fields_non_intersection",
     "(%(cl, f, ty). f) ` set ?cl_f_ty_list Int
      set (fields_in_path_f ?path'') =
      {} &
      ?f : set (fields_in_path_f ?path'') ==>
      ftype_in_fds_f ?P ctx_def
       (map (%(cl, f, ty). fd_def cl f) ?cl_f_ty_list) ?f =
      ty_opt_bot_opt None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app
                   (template_hole 18,
                    template_app
                     (template_app
                       (template_hole 17,
                        template_app
                         (template_app
                           (template_hole 16,
                            template_app (template_hole 15, t_empty)),
                          template_app (template_hole 13, template_var 3))),
                      template_app
                       (template_hole 12,
                        template_app (template_hole 11, template_var 2)))),
                  template_hole 10)),
              template_app
               (template_app (template_hole 9, template_var 1),
                template_app
                 (template_hole 12,
                  template_app (template_hole 11, template_var 2))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 7, template_var 0),
               template_hole 6),
             template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_var 3)),
           template_var 1),
         template_app (template_hole 1, template_hole 0)))),
    ("Lightweight_Java_Proof.lift_opts_for_all",
     "lift_opts
       (map (case_vd (%clk vark. find_type_f ?P ?ctx clk))
         (map (%(cl, var, ty). vd_def cl var) ?cl_var_ty_list)) =
      None &
      (ALL (cl, var, ty):set ?cl_var_ty_list.
          find_type_f ?P ctx_def cl = Some ty) ==>
      False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app
                   (template_hole 17,
                    template_app
                     (template_hole 16,
                      template_app
                       (template_app
                         (template_hole 15,
                          template_app (template_hole 14, t_empty)),
                        template_app
                         (template_app
                           (template_hole 12,
                            template_app (template_hole 11, t_empty)),
                          template_var 0)))),
                  template_hole 8)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 0)),
                template_app (template_hole 5, t_empty)))
            )],
       template_predicate (template_hole 0))),
    ("Lightweight_Java_Proof.map_length_var_ty",
     "[| map (%(y, cl, var, u). var) ?y_cl_var_var'_v_list =
         map (%(cl, var, ty). var) ?cl_var_ty_list;
         map (%(cl, var, ty). ty) ?cl_var_ty_list = map snd ?y_ty_list |]
      ==> length ?y_cl_var_var'_v_list = length ?y_ty_list",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 15, template_app (template_hole 14, t_empty)),
            template_var 2),
          template_app
           (template_app
             (template_hole 11, template_app (template_hole 10, t_empty)),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 7, template_app (template_hole 6, t_empty)),
            template_var 1),
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("Lightweight_Java_Proof.set_zip_var'_v",
     "((?y_k, ?cl_k, ?var_k, ?var'_k, ?v_k), ?y'_k, ?ty_k)
      : set (zip ?y_cl_var_var'_v_list ?y_ty_list) ==>
      (x_var ?var'_k, ?v_k)
      : set (map (%(ya, cl, var, var', y). (x_var var', y))
              ?y_cl_var_var'_v_list)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app
                   (template_hole 16,
                    template_app
                     (template_app (template_hole 15, template_var 8),
                      template_app
                       (template_app (template_hole 14, template_var 7),
                        template_app
                         (template_app (template_hole 13, template_var 6),
                          template_app
                           (template_app (template_hole 12, template_var 5),
                            template_var 4))))),
                  template_app
                   (template_app (template_hole 11, template_var 3),
                    template_var 2))),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 5)),
                 template_var 4)),
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app (template_hole 3, t_empty)),
                 template_var 1)))
           ))),
    ("Lightweight_Java_Proof.translation_eq",
     "ALL x:set (zip (tr_ss_f
                       (map_of
                         (zip (map (case_vd (%cl. x_var)) ?vds)
                           (map x_var ?vars'))
                        (x_this |-> ?x'))
                       ?ss')
                  ?ss').
         case x of
         (s'', s') =>
           tr_s
            (map_of
              (zip (map (case_vd (%cl. x_var)) ?vds) (map x_var ?vars'))
             (x_this |-> ?x'))
            s' s''",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 14,
             template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app
                      (template_hole 11,
                       template_app
                        (template_app
                          (template_app
                            (template_hole 10,
                             template_app
                              (template_hole 9,
                               template_app
                                (template_app
                                  (template_hole 8,
                                   template_app
                                    (template_app
(template_hole 7, template_app (template_hole 6, t_empty)),
                                     template_var 3)),
                                 template_app
                                  (template_app
                                    (template_hole 4, template_hole 5),
                                   template_var 2)))),
                           template_hole 3),
                         template_app (template_hole 2, template_var 1))),
                     template_var 0)),
                 template_var 0))),
           t_empty)
         )),
    ("Lightweight_Java_Proof.wf_method_from_find'",
     "wf_program ?P &
      find_path_ty_f ?P (ty_def ?ctxa ?dcl) = Some ?ctxclds &
      find_meth_def_in_path_f ?ctxclds ?meth = Some (?ctx, ?meth_def) ==>
      EX dcla.
         is_sty_one ?P (ty_def ?ctxa ?dcl) (ty_def ?ctx dcla) = Some True &
         wf_meth ?P (ty_def ctx_def dcla) ?meth_def",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 15, template_var 6)),
              template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app
                     (template_hole 14,
                      template_app
                       (template_app (template_hole 13, template_var 6),
                        template_app
                         (template_app (template_hole 12, template_var 5),
                          template_var 4))),
                    template_app (template_hole 11, template_var 3))),
                template_app
                 (template_app
                   (template_hole 10,
                    template_app
                     (template_app (template_hole 9, template_var 3),
                      template_var 2)),
                  template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 1),
                      template_var 0)))))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Lightweight_Java_Proof.exist_lifted_values",
     "[| ALL x:dom ?\<Gamma>. wf_object ?P ?H (?L x) (?\<Gamma> x);
         ALL x:set ?y_ty_list.
            case x of (y, ty) => sty_option ?P (?\<Gamma> y) (Some ty) |]
      ==> EX vs. lift_opts (map (%(y, ty). ?L y) ?y_ty_list) = Some vs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 4)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 0)),
              t_empty)
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Lightweight_Java_Proof.wf_object_heap",
     "[| wf_object ?P ?H ?v_opt (Some ?ty');
         is_sty_one ?Pa ?ty_y_s ?ty_f = Some True;
         ?H ?oid_x = Some (?ty_x_d, ?fs_oid) |]
      ==> wf_object ?P (?H(?oid_x |-> (?ty_x_d, ?fs_oid(?f |-> ?v)))) ?v_opt
           (Some ?ty')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 11, template_var 11),
                  template_var 10),
                template_var 9),
              template_app (template_hole 10, template_var 8))
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 8, template_var 7),
              template_var 6),
            template_var 5),
          template_app (template_hole 7, template_hole 6)),
        template_equation
         (template_app (template_var 10, template_var 4),
          template_app
           (template_hole 4,
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 11, template_var 11),
                 template_app
                  (template_app
                    (template_app (template_hole 2, template_var 10),
                     template_var 4),
                   template_app
                    (template_hole 4,
                     template_app
                      (template_app (template_hole 3, template_var 3),
                       template_app
                        (template_app
                          (template_app (template_hole 1, template_var 2),
                           template_var 1),
                         template_app
                          (template_hole 0, template_var 0)))))),
               template_var 9),
             template_app (template_hole 10, template_var 8))
           ))),
    ("Lightweight_Java_Proof.map_y_yy",
     "[| ?i < length ?y_y'_list; ?i < length ?y_ty_list;
         map fst ?y_y'_list = map fst ?y_ty_list;
         ?y_y'_list ! ?i = (?y, ?y'); ?y_ty_list ! ?i = (?yy, ?ty) |]
      ==> ?y = ?yy",
     template_implication
      ([template_inequation
         (less_than, template_var 6,
          template_app (template_hole 13, template_var 5)),
        template_inequation
         (less_than, template_var 6,
          template_app (template_hole 12, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 10, template_hole 9),
            template_var 5),
          template_app
           (template_app (template_hole 8, template_hole 7),
            template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 5), template_var 6),
          template_app
           (template_app (template_hole 4, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 4), template_var 6),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_equation (template_var 3, template_var 1))),
    ("Lightweight_Java_Proof.fst_zip_eq",
     "length ?y_cl_var_var'_v_list = length ?y_ty_list ==>
      map fst
       (map2 (%(y, cl, var, var', v) (y', y). (x_var var', y))
         ?y_cl_var_var'_v_list ?y_ty_list) =
      map (%(y, cl, var, var', v). x_var var') ?y_cl_var_var'_v_list",
     template_implication
      ([template_equation
         (template_app (template_hole 19, template_var 1),
          template_app (template_hole 18, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 16, template_hole 15),
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_hole 13,
                 template_app (template_hole 12, t_empty))),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_hole 4, template_app (template_hole 3, t_empty)),
           template_var 1)))),
    ("Lightweight_Java_Proof.map_y",
     "[| ((?y_k, ?cl_k, ?var_k, ?var'_k, ?v_k), ?y'_k, ?ty_k)
         : set (zip ?y_cl_var_var'_v_list ?y_ty_list);
         map (%(y, cl, var, var', v). y) ?y_cl_var_var'_v_list =
         map fst ?y_ty_list |]
      ==> (?y_k, ?ty_k) : set ?y_ty_list",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app
                   (template_hole 17,
                    template_app
                     (template_app (template_hole 16, template_var 8),
                      template_app
                       (template_app (template_hole 15, template_var 7),
                        template_app
                         (template_app (template_hole 14, template_var 6),
                          template_app
                           (template_app (template_hole 13, template_var 5),
                            template_var 4))))),
                  template_app
                   (template_app (template_hole 12, template_var 3),
                    template_var 2))),
              template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_var 0)))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 8, template_app (template_hole 7, t_empty)),
            template_var 1),
          template_app
           (template_app (template_hole 3, template_hole 2),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 12, template_var 8),
                 template_var 2)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Lightweight_Java_Proof.wf_classE",
     "[| wf_class ?a1.0 ?a2.0;
         !!dcl cl fds meth_defs.
            [| ?a2.0 = cld_def dcl cl fds meth_defs;
               cld_def dcl cl fds meth_defs : set ?a1.0;
               wf_class_common ?a1.0 ctx_def dcl cl fds meth_defs |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("Lightweight_Java_Proof.no_field_hiding'",
     "[| find_path_f ?P ?ctx' ?cl = Some ?path; wf_program ?P;
         (?ctx, ?cld) : set ?path;
         find_path_f ?P ?ctx (cl_fqn (fqn_def (class_name_f ?cld))) =
         Some ?path';
         ?f : set (fields_in_path_f ?path') |]
      ==> ?f : set (fields_in_path_f ?path)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 11, template_var 7),
              template_var 6),
            template_var 5),
          template_app (template_hole 10, template_var 4)),
        template_predicate (template_app (template_hole 9, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_app (template_hole 6, template_var 4))
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 11, template_var 7),
              template_var 3),
            template_app
             (template_hole 5,
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)))),
          template_app (template_hole 10, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 4)))
           ))),
    ("Lightweight_Java_Proof.ftype_in_fds_some",
     "(?cl_f, ?f, ?ty_f) : set ?cl_f_ty_list &
      distinct (map (%(cl, f, ty). f) ?cl_f_ty_list) &
      find_type_f ?P ?ctx ?cl_f = Some ?ty_f ==>
      ftype_in_fds_f ?P ?ctx (map (%(cl, f, ty). fd_def cl f) ?cl_f_ty_list)
       ?f =
      ty_opt_bot_opt (Some ?ty_f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app
                 (template_app
                   (template_hole 17,
                    template_app
                     (template_app (template_hole 16, template_var 5),
                      template_app
                       (template_app (template_hole 15, template_var 4),
                        template_var 3))),
                  template_app (template_hole 14, template_var 2))),
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_hole 13,
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app (template_hole 11, t_empty)),
                      template_var 2))),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_app (template_hole 8, template_var 1),
                        template_var 0),
                      template_var 5)),
                  template_app (template_hole 7, template_var 3))))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0),
             template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               template_var 2)),
           template_var 4),
         template_app
          (template_hole 0,
           template_app (template_hole 7, template_var 3))))),
    ("Lightweight_Java_Proof.map_var",
     "[| (?cl_k, ?var_k, ?ty_k) : set ?cl_var_ty_list;
         map (%(y, cl, var, u). var) ?y_cl_var_var'_v_list =
         map (%(cl, var, ty). var) ?cl_var_ty_list |]
      ==> EX y_k cl'_k u_k.
             (y_k, cl'_k, ?var_k, u_k) : set ?y_cl_var_var'_v_list",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_var 4),
                  template_app
                   (template_app (template_hole 17, template_var 3),
                    template_var 2))),
              template_app (template_hole 16, template_var 1))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 14, template_app (template_hole 13, t_empty)),
            template_var 0),
          template_app
           (template_app
             (template_hole 10, template_app (template_hole 9, t_empty)),
            template_var 1))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Lightweight_Java_Proof.lift_opts_map",
     "ALL x:set ?cl_var_ty_list.
         case x of
         (cl_k, var_k, ty_k) => find_type_f ?P ?ctx cl_k = Some ty_k ==>
      lift_opts
       (map (case_vd (%clk vark. find_type_f ?P ?ctx clk))
         (map (%(cl_k, var_k, ty_k). vd_def cl_k var_k) ?cl_var_ty_list)) =
      Some (map (%(cl, var, ty). ty) ?cl_var_ty_list)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 2)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9, template_app (template_hole 8, t_empty)),
             template_app
              (template_app
                (template_hole 7, template_app (template_hole 6, t_empty)),
               template_var 2))),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_var 2))))),
    ("Lightweight_Java_Proof.map_of_vd",
     "map (%(y, cl, var, var', v). vd_def cl var) ?y_cl_var_var'_v_list =
      map (%(cl, var, ty). vd_def cl var) ?cl_var_ty_list ==>
      map (%(y, cl, var, var', v). var) ?y_cl_var_var'_v_list =
      map (%(cl, var, ty). var) ?cl_var_ty_list",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 17, template_app (template_hole 16, t_empty)),
            template_var 1),
          template_app
           (template_app
             (template_hole 11, template_app (template_hole 10, t_empty)),
            template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 7, template_app (template_hole 6, t_empty)),
           template_var 1),
         template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 0)))),
    ("Lightweight_Java_Proof.ftype_preservation''",
     "[| find_path_f ?P ?ctx' ?cl = Some ?path; wf_program ?P;
         (?ctx, ?cld) : set ?path;
         find_path_f ?P ?ctx (cl_fqn (fqn_def (class_name_f ?cld))) =
         Some ?path';
         ftype_in_path_f ?P ?path' ?f = Some ?ty |]
      ==> ftype_in_path_f ?P ?path ?f = Some ?ty",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 11, template_var 8),
              template_var 7),
            template_var 6),
          template_app (template_hole 10, template_var 5)),
        template_predicate (template_app (template_hole 9, template_var 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3)),
              template_app (template_hole 6, template_var 5))
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 11, template_var 8),
              template_var 4),
            template_app
             (template_hole 5,
              template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 3)))),
          template_app (template_hole 10, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 1, template_var 8),
              template_var 2),
            template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 8),
             template_var 5),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lightweight_Java_Proof.no_field_hiding''",
     "[| find_path_f ?P ?ctx' ?cl = Some ?suffix; wf_program ?P;
         (?ctx, ?cld) : set ?suffix |]
      ==> ALL prefix' suffix'.
             find_path_rec_f ?P ?ctx (cl_fqn (fqn_def (class_name_f ?cld)))
              prefix' =
             Some (prefix' @ suffix') &
             ?f : set (fields_in_path_f suffix') -->
             ?f : set (fields_in_path_f ?suffix)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 16, template_var 6),
              template_var 5),
            template_var 4),
          template_app (template_hole 15, template_var 3)),
        template_predicate
         (template_app (template_hole 14, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 1)),
              template_app (template_hole 11, template_var 3))
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Lightweight_Java_Proof.no_field_hiding'''",
     "ALL suffix.
         find_path_rec_f ?P ?ctx ?cl ?prefix = Some (?prefix @ suffix) -->
         wf_program ?P -->
         (ALL (ctx, cld):set suffix.
             ALL prefix' suffix'.
                find_path_rec_f ?P ctx (cl_fqn (fqn_def (class_name_f cld)))
                 prefix' =
                Some (prefix' @ suffix') &
                ?f : set (fields_in_path_f suffix') -->
                ?f : set (fields_in_path_f suffix))",
     template_predicate (template_app (template_hole 16, t_empty))),
    ("Lightweight_Java_Proof.same_y",
     "[| map (%(y, cl, var, var', v). y) ?y_cl_var_var'_v_list =
         map fst ?y_ty_list;
         ?i < length ?y_cl_var_var'_v_list;
         (?y'_k, ?ty_k) = ?y_ty_list ! ?i;
         ?y_cl_var_var'_v_list ! ?i =
         (?y_k, ?cl_k, ?var_k, ?var'_k, ?v_k) |]
      ==> ?y'_k = ?y_k",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 18, template_app (template_hole 17, t_empty)),
            template_var 9),
          template_app
           (template_app (template_hole 13, template_hole 12),
            template_var 8)),
        template_inequation
         (less_than, template_var 7,
          template_app (template_hole 10, template_var 9)),
        template_equation
         (template_app
           (template_app (template_hole 8, template_var 6), template_var 5),
          template_app
           (template_app (template_hole 7, template_var 8),
            template_var 7)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 9), template_var 7),
          template_app
           (template_app (template_hole 4, template_var 4),
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))))],
       template_equation (template_var 6, template_var 4))),
    ("Lightweight_Java_Proof.find_type_lift_opts",
     "(!!x. x : set ?cl_var_ty_list ==>
            case x of
            (cl_k, var_k, ty_k) => find_type_f ?P ?ctx cl_k = Some ty_k) ==>
      lift_opts
       (map (case_vd (%clk vark. find_type_f ?P ?ctx clk))
         (map (%(cl_k, var_k, ty_k). vd_def cl_k var_k) ?cl_var_ty_list)) =
      Some (map (%(cl, var, ty). ty) ?cl_var_ty_list)",
     template_implication
      ([template_predicate (template_app (template_hole 20, t_empty))],
       template_equation
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 9, template_app (template_hole 8, t_empty)),
             template_app
              (template_app
                (template_hole 7, template_app (template_hole 6, t_empty)),
               template_var 2))),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2, template_app (template_hole 1, t_empty)),
             template_var 2))))),
    ("Lightweight_Java_Proof.distinct_var",
     "[| distinct (map (%(cl, var, ty). var) ?cl_var_ty_list);
         map (%(y, cl, var, var', v). var) ?y_cl_var_var'_v_list =
         map (%(cl, var, ty). var) ?cl_var_ty_list |]
      ==> distinct
           (map fst
             (map (%(y, cl, var, var', v). (x_var var, x_var var'))
               ?y_cl_var_var'_v_list))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 19,
              template_app
               (template_app
                 (template_hole 18,
                  template_app (template_hole 17, t_empty)),
                template_var 1))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 14, template_app (template_hole 13, t_empty)),
            template_var 0),
          template_app
           (template_app
             (template_hole 18, template_app (template_hole 17, t_empty)),
            template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_hole 7),
               template_app
                (template_app
                  (template_hole 6,
                   template_app (template_hole 5, t_empty)),
                 template_var 0)))
           ))),
    ("Lightweight_Java_Proof.lift_opts_for_all_true",
     "(ALL (cl_k, var_k, ty_k):set ?cl_var_ty_list.
          find_type_f ?P ?ctx cl_k = Some ty_k) &
      lift_opts
       (map (case_vd (%clk vark. find_type_f ?P ?ctx clk))
         (map (%(cl_k, var_k, ty_k). vd_def cl_k var_k) ?cl_var_ty_list)) =
      Some (map snd ?y_ty_list) ==>
      map (%(cl, var, ty). ty) ?cl_var_ty_list = map snd ?y_ty_list",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app
                   (template_hole 21,
                    template_app (template_hole 20, template_var 3)),
                  template_app (template_hole 19, t_empty))),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_hole 13,
                    template_app
                     (template_app
                       (template_hole 12,
                        template_app (template_hole 11, t_empty)),
                      template_app
                       (template_app
                         (template_hole 10,
                          template_app (template_hole 9, t_empty)),
                        template_var 3)))),
                template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_hole 4),
                    template_var 0))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2, template_app (template_hole 1, t_empty)),
           template_var 3),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 0)))),
    ("Lightweight_Java_Proof.ftype_preservation'''",
     "[| find_path_f ?P ?ctx' ?cl = Some ?suffix; wf_program ?P;
         (?ctx, ?cld) : set ?suffix |]
      ==> ALL prefix' suffix'.
             find_path_rec_f ?P ?ctx (cl_fqn (fqn_def (class_name_f ?cld)))
              prefix' =
             Some (prefix' @ suffix') &
             ftype_in_path_f ?P suffix' ?f = Some ?ty -->
             ftype_in_path_f ?P ?suffix ?f = Some ?ty",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 16, template_var 7),
              template_var 6),
            template_var 5),
          template_app (template_hole 15, template_var 4)),
        template_predicate
         (template_app (template_hole 14, template_var 7)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2)),
              template_app (template_hole 11, template_var 4))
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Lightweight_Java_Proof.ftype_preservation''''",
     "ALL suffix.
         find_path_rec_f ?P ?ctx ?cl ?prefix = Some (?prefix @ suffix) -->
         wf_program ?P -->
         (ALL (ctx, cld):set suffix.
             ALL prefix' suffix'.
                find_path_rec_f ?P ctx (cl_fqn (fqn_def (class_name_f cld)))
                 prefix' =
                Some (prefix' @ suffix') &
                ftype_in_path_f ?P suffix' ?f = Some ?ty -->
                ftype_in_path_f ?P suffix ?f = Some ?ty)",
     template_predicate (template_app (template_hole 16, t_empty))),
    ("Lightweight_Java_Proof.mtype_to_find_md",
     "[| wf_program ?P; mtype_f ?P ?ty_x_s ?m = Some (mty_def ?tys ?ty_r);
         is_sty_one ?P ?ty_x_d ?ty_x_s = Some True |]
      ==> EX ctx cl_r vds ss' y.
             find_meth_def_f ?P ?ty_x_d ?m =
             Some
              (ctx,
               meth_def_def (meth_sig_def cl_r ?m vds)
                (meth_body_def ss' y)) &
             length ?tys = length vds",
     template_implication
      ([template_predicate
         (template_app (template_hole 24, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 22, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_hole 21,
            template_app
             (template_app (template_hole 20, template_var 2),
              template_var 1))),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 18, template_var 5),
              template_var 0),
            template_var 4),
          template_app (template_hole 17, template_hole 16))],
       template_predicate (template_app (template_hole 15, t_empty)))),
    ("Lightweight_Java_Proof.mty_preservation'",
     "[| wf_program ?P;
         find_path_f ?P ?ctx (cl_fqn (fqn_def ?dcl)) = Some ?path;
         (?ctx', ?cld') : set ?path;
         find_path_f ?P ?ctx' (cl_fqn (fqn_def (class_name_f ?cld'))) =
         Some ?path';
         mtype_f ?P (ty_def ?ctx' (class_name_f ?cld')) ?m = Some ?mty |]
      ==> mtype_f ?P (ty_def ?ctx ?dcl) ?m = Some ?mty",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 8)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 11, template_var 8),
              template_var 7),
            template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 6))),
          template_app (template_hole 8, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_app (template_hole 5, template_var 5))
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 11, template_var 8),
              template_var 4),
            template_app
             (template_hole 10,
              template_app
               (template_hole 9,
                template_app (template_hole 4, template_var 3)))),
          template_app (template_hole 8, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 8),
              template_app
               (template_app (template_hole 1, template_var 4),
                template_app (template_hole 4, template_var 3))),
            template_var 1),
          template_app (template_hole 0, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 8),
             template_app
              (template_app (template_hole 1, template_var 7),
               template_var 6)),
           template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Lightweight_Java_Proof.wf_varstateE",
     "[| wf_varstate ?a1.0 ?a2.0 ?a3.0 ?a4.0;
         !!L \<Gamma> P H.
            [| ?a1.0 = P; ?a2.0 = \<Gamma>; ?a3.0 = H; ?a4.0 = L;
               finite (dom L);
               ALL x:dom \<Gamma>. wf_object P H (L x) (\<Gamma> x) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_var 0))),
    ("Lightweight_Java_Proof.vars'_eq",
     "length ?y_ty_list = length ?vars' &
      length ?vds = length ?vars' &
      length ?vars = length ?vars' & length ?vs = length ?vars' ==>
      (%(y, cl, var, var', v). x_var var') `
      set (zip (map fst ?y_ty_list)
            (zip (map (case_vd (%cl var. cl)) ?vds)
              (zip ?vars (zip ?vars' ?vs)))) =
      x_var ` set ?vars'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_hole 23,
                    template_app (template_hole 22, template_var 4)),
                  template_app (template_hole 21, template_var 3))),
              template_app
               (template_app
                 (template_hole 24,
                  template_app
                   (template_app
                     (template_hole 23,
                      template_app (template_hole 20, template_var 2)),
                    template_app (template_hole 21, template_var 3))),
                template_app
                 (template_app
                   (template_hole 24,
                    template_app
                     (template_app
                       (template_hole 23,
                        template_app (template_hole 19, template_var 1)),
                      template_app (template_hole 21, template_var 3))),
                  template_app
                   (template_app
                     (template_hole 23,
                      template_app (template_hole 18, template_var 0)),
                    template_app (template_hole 21, template_var 3)))))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 16, template_app (template_hole 15, t_empty)),
           template_app
            (template_hole 10,
             template_app
              (template_app
                (template_hole 9,
                 template_app
                  (template_app (template_hole 8, template_hole 7),
                   template_var 4)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 5,
                       template_app (template_hole 4, t_empty)),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 0)))))),
         template_app
          (template_app (template_hole 1, template_hole 11),
           template_app (template_hole 0, template_var 3))))),
    ("Lightweight_Java_Proof.wf_intros",
     "[| ?Y = map fst ?y_ty_list; ?\<Gamma> ?x = Some ?ty;
         mtype_f ?P ?ty ?meth = Some (mty_def (map snd ?y_ty_list) ?ty');
         ALL x:set ?y_ty_list.
            case x of
            (y_XXX, ty_XXX) =>
              sty_option ?P (?\<Gamma> y_XXX) (Some ty_XXX);
         sty_option ?P (Some ?ty') (?\<Gamma> (x_var ?var)) |]
      ==> wf_stmt ?P ?\<Gamma> (s_call ?var ?x ?meth ?Y)",
     template_implication
      ([template_equation
         (template_var 8,
          template_app
           (template_app (template_hole 16, template_hole 15),
            template_var 7)),
        template_equation
         (template_app (template_var 6, template_var 5),
          template_app (template_hole 13, template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 11, template_var 3),
              template_var 4),
            template_var 2),
          template_app
           (template_hole 10,
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_hole 7),
                  template_var 7)),
              template_var 1))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 7)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app (template_hole 13, template_var 1)),
              template_app
               (template_var 6,
                template_app (template_hole 2, template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 6),
             template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 5),
                 template_var 2),
               template_var 8))
           ))),
    ("Lightweight_Java_Proof.mty_preservation''",
     "[| wf_program ?P;
         find_path_f ?P ?ctx (cl_fqn (fqn_def ?dcl)) = Some ?path;
         (?ctx', ?cld') : set ?path |]
      ==> ALL prefix' suffix'.
             find_path_rec_f ?P ?ctx'
              (cl_fqn (fqn_def (class_name_f ?cld'))) prefix' =
             Some (prefix' @ suffix') &
             mtype_f ?P (ty_def ?ctx' (class_name_f ?cld')) ?m =
             Some ?mty -->
             mtype_f ?P (ty_def ?ctx ?dcl) ?m = Some ?mty",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 16, template_var 7),
              template_var 6),
            template_app
             (template_hole 15,
              template_app (template_hole 14, template_var 5))),
          template_app (template_hole 13, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2)),
              template_app (template_hole 10, template_var 4))
            )],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Lightweight_Java_Proof.ftype_preservation",
     "[| wf_program ?P;
         ALL x:dom ?\<Gamma>. wf_object ?P ?H (?L x) (?\<Gamma> x);
         ?\<Gamma> ?x = Some ?ty_x_s; ftype_f ?P ?ty_x_s ?f = Some ?ty_f_s;
         ?L ?x = Some (v_oid ?oid_x); ?H ?oid_x = Some (?ty_x_d, ?fs_oid);
         ftype_f ?P ?ty_x_d ?f = Some ?ty_f_d |]
      ==> ?ty_f_s = ?ty_f_d",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 11)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app (template_hole 11, template_var 10)),
              t_empty)
            ),
        template_equation
         (template_app (template_var 10, template_var 7),
          template_app (template_hole 8, template_var 6)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 11),
              template_var 6),
            template_var 5),
          template_app (template_hole 8, template_var 4)),
        template_equation
         (template_app (template_var 8, template_var 7),
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 3))),
        template_equation
         (template_app (template_var 9, template_var 3),
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1))),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 11),
              template_var 2),
            template_var 5),
          template_app (template_hole 8, template_var 0))],
       template_equation (template_var 4, template_var 0))),
    ("Lightweight_Java_Proof.wf_intros",
     "[| finite (dom ?H);
         ALL oid:dom ?H.
            EX ty.
               (case ?H oid of None => None
                | Some tyfs => Some (fst tyfs)) =
               Some ty &
               (EX fs.
                   fields_f ?P ty = Some fs &
                   (ALL f:set fs.
                       EX ty'.
                          ftype_f ?P ty f = Some ty' &
                          wf_object ?P ?H
                           (case ?H oid of None => None
                            | Some tyfs => snd tyfs f)
                           (Some ty'))) |]
      ==> wf_heap ?P ?H",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 21,
              template_app (template_hole 20, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 20, template_var 1)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Lightweight_Java_Proof.map_of_map_zip_none",
     "[| map (%(y, cl, var, var', v). y) ?y_cl_var_var'_v_list =
         map fst ?y_ty_list;
         map_of
          (map2 (%(y, cl, var, var', v) (y', y). (x_var var', y))
            ?y_cl_var_var'_v_list ?y_ty_list)
          ?x_G =
         None |]
      ==> map_of
           (map (%(ya, cl, var, var', y). (x_var var', y))
             ?y_cl_var_var'_v_list)
           ?x_G =
          None",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 28, template_app (template_hole 27, t_empty)),
            template_var 2),
          template_app
           (template_app (template_hole 23, template_hole 22),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 20,
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_hole 18,
                    template_app (template_hole 17, t_empty))),
                template_app
                 (template_app (template_hole 10, template_var 2),
                  template_var 1))),
            template_var 0),
          template_hole 9)],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6, template_app (template_hole 5, t_empty)),
               template_var 2)),
           template_var 0),
         template_hole 0))),
    ("Lightweight_Java_Proof.field_has_type'",
     "(?cl_f, ?f, ?ty_f) : set ?cl_f_ty_list &
      (ALL (ctx, y):set ?path. wf_class ?P y) &
      (?ctx,
       cld_def ?dcl ?cl (map (%(cl, f, ty). fd_def cl f) ?cl_f_ty_list)
        ?mds)
      : set ?path &
      distinct (map (%(cl, f, ty). f) ?cl_f_ty_list) &
      find_type_f ?P ?ctx ?cl_f = Some ?ty_f ==>
      EX ty'. ftype_in_path_f ?P ?path ?f = Some ty'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_hole 23,
                    template_app
                     (template_app (template_hole 22, template_var 9),
                      template_app
                       (template_app (template_hole 21, template_var 8),
                        template_var 7))),
                  template_app (template_hole 20, template_var 6))),
              template_app
               (template_app
                 (template_hole 24,
                  template_app
                   (template_app
                     (template_hole 19,
                      template_app (template_hole 18, template_var 5)),
                    template_app (template_hole 17, t_empty))),
                template_app
                 (template_app
                   (template_hole 24,
                    template_app
                     (template_app
                       (template_hole 15,
                        template_app
                         (template_app (template_hole 14, template_var 3),
                          template_app
                           (template_app
                             (template_app
                               (template_app
                                 (template_hole 13, template_var 2),
                                template_var 1),
                              template_app
                               (template_app
                                 (template_hole 12,
                                  template_app (template_hole 11, t_empty)),
                                template_var 6)),
                            template_var 0))),
                      template_app (template_hole 18, template_var 5))),
                  template_app
                   (template_app
                     (template_hole 24,
                      template_app
                       (template_hole 8,
                        template_app
                         (template_app
                           (template_hole 7,
                            template_app (template_hole 6, t_empty)),
                          template_var 6))),
                    template_app
                     (template_app
                       (template_hole 4,
                        template_app
                         (template_app
                           (template_app (template_hole 3, template_var 4),
                            template_var 3),
                          template_var 9)),
                      template_app (template_hole 2, template_var 7))))))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Lightweight_Java_Proof.same_el",
     "[| distinct
          (map (%(y, cl, var, var', v). var') ?y_cl_var_var'_v_list);
         ?i < length ?y_cl_var_var'_v_list;
         (?y_i, ?cl_i, ?var_i, ?var'_i, ?v_i) = ?y_cl_var_var'_v_list ! ?i;
         (?y_j, ?cl_j, ?var_j, ?var'_i, ?v_j) : set ?y_cl_var_var'_v_list |]
      ==> (?y_i, ?cl_i, ?var_i, ?var'_i, ?v_i) =
          (?y_j, ?cl_j, ?var_j, ?var'_i, ?v_j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 15,
              template_app
               (template_app
                 (template_hole 14,
                  template_app (template_hole 13, t_empty)),
                template_var 10))
            ),
        template_inequation
         (less_than, template_var 9,
          template_app (template_hole 8, template_var 10)),
        template_equation
         (template_app
           (template_app (template_hole 6, template_var 8),
            template_app
             (template_app (template_hole 5, template_var 7),
              template_app
               (template_app (template_hole 4, template_var 6),
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)))),
          template_app
           (template_app (template_hole 2, template_var 10),
            template_var 9)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 6, template_var 3),
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_app
                       (template_app (template_hole 3, template_var 5),
                        template_var 0))))),
              template_app (template_hole 0, template_var 10))
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 8),
           template_app
            (template_app (template_hole 5, template_var 7),
             template_app
              (template_app (template_hole 4, template_var 6),
               template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 4)))),
         template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app (template_hole 3, template_var 5),
                 template_var 0))))))),
    ("Lightweight_Java_Proof.wf_heapE",
     "[| wf_heap ?a1.0 ?a2.0;
         [| finite (dom ?a2.0);
            ALL oid:dom ?a2.0.
               EX ty.
                  (case ?a2.0 oid of None => None
                   | Some tyfs => Some (fst tyfs)) =
                  Some ty &
                  (EX fs.
                      fields_f ?a1.0 ty = Some fs &
                      (ALL f:set fs.
                          EX ty'.
                             ftype_f ?a1.0 ty f = Some ty' &
                             wf_object ?a1.0 ?a2.0
                              (case ?a2.0 oid of None => None
                               | Some tyfs => snd tyfs f)
                              (Some ty'))) |]
         ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_hole 20,
                 template_app (template_hole 19, template_var 1))
               )],
          template_implication
           ([template_predicate
              (
                 template_app
                  (template_app
                    (template_hole 18,
                     template_app (template_hole 19, template_var 1)),
                   t_empty)
                 )],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Lightweight_Java_Proof.mty_preservation'''",
     "[| find_path_rec_f ?P ?ctx ?cl ?prefix = Some (?prefix @ ?suffix);
         wf_program ?P & ?cl = cl_fqn (fqn_def ?dcl); ?x : set ?suffix |]
      ==> case ?x of
          (ctx', cld') =>
            ALL prefix' suffix'.
               find_path_rec_f ?P ctx'
                (cl_fqn (fqn_def (class_name_f cld'))) prefix' =
               Some (prefix' @ suffix') &
               mtype_f ?P (ty_def ctx' (class_name_f cld')) ?m =
               Some ?mty -->
               mtype_f ?P (ty_def ?ctx ?dcl) ?m = Some ?mty",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 17, template_var 8),
                template_var 7),
              template_var 6),
            template_var 5),
          template_app
           (template_hole 16,
            template_app
             (template_app (template_hole 15, template_var 5),
              template_var 4))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 8)),
              template_app
               (template_app (template_hole 12, template_var 6),
                template_app
                 (template_hole 11,
                  template_app (template_hole 10, template_var 3))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, t_empty), template_var 2)
           ))),
    ("Lightweight_Java_Proof.y_ty_match",
     "[| ?i < length ?cl_var_ty_list;
         ?cl_var_ty_list ! ?i = (?cl_k, ?var_k, ?ty_k);
         ?y_cl_var_var'_v_list ! ?i = (?y_k, ?cl_ka, ?var_k, ?var'_k, ?v_k);
         map (%(y, cl, var, var', v). y) ?y_cl_var_var'_v_list =
         map fst ?y_ty_list;
         map (%(cl, var, ty). ty) ?cl_var_ty_list = map snd ?y_ty_list |]
      ==> ?y_ty_list ! ?i = (?y_k, ?ty_k)",
     template_implication
      ([template_inequation
         (less_than, template_var 10,
          template_app (template_hole 27, template_var 9)),
        template_equation
         (template_app
           (template_app (template_hole 25, template_var 9),
            template_var 10),
          template_app
           (template_app (template_hole 24, template_var 8),
            template_app
             (template_app (template_hole 23, template_var 7),
              template_var 6))),
        template_equation
         (template_app
           (template_app (template_hole 21, template_var 5),
            template_var 10),
          template_app
           (template_app (template_hole 20, template_var 4),
            template_app
             (template_app (template_hole 19, template_var 3),
              template_app
               (template_app (template_hole 18, template_var 7),
                template_app
                 (template_app (template_hole 17, template_var 2),
                  template_var 1))))),
        template_equation
         (template_app
           (template_app
             (template_hole 15, template_app (template_hole 14, t_empty)),
            template_var 5),
          template_app
           (template_app (template_hole 10, template_hole 9),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 7, template_app (template_hole 6, t_empty)),
            template_var 9),
          template_app
           (template_app (template_hole 4, template_hole 3),
            template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 10),
         template_app
          (template_app (template_hole 0, template_var 4),
           template_var 6)))),
    ("Lightweight_Java_Proof.distinct_var'",
     "[| map (%(y, cl, var, u). var) ?y_cl_var_var'_v_list =
         map (%(cl, var, ty). var) ?cl_var_ty_list;
         map (%(cl, var, ty). ty) ?cl_var_ty_list = map snd ?y_ty_list |]
      ==> distinct
           (map fst
             (map2 (%(y, cl, var, var', v) (y', y). (x_var var', y))
               ?y_cl_var_var'_v_list ?y_ty_list)) =
          distinct
           (map (%(y, cl, var, var', v). var') ?y_cl_var_var'_v_list)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 32, template_app (template_hole 31, t_empty)),
            template_var 2),
          template_app
           (template_app
             (template_hole 28, template_app (template_hole 27, t_empty)),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 24, template_app (template_hole 23, t_empty)),
            template_var 1),
          template_app
           (template_app (template_hole 21, template_hole 20),
            template_var 0))],
       template_equation
        (template_app
          (template_hole 18,
           template_app
            (template_app (template_hole 17, template_hole 16),
             template_app
              (template_app
                (template_hole 15,
                 template_app
                  (template_hole 14,
                   template_app (template_hole 13, t_empty))),
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_var 0)))),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_var 2))))),
    ("Lightweight_Java_Proof.exists_var'",
     "[| distinct (map (%(cl, var, ty). var) ?cl_var_ty_list);
         map (%(y, cl, var, var', v). var) ?y_cl_var_var'_v_list =
         map (%(cl, var, ty). var) ?cl_var_ty_list;
         map_of (map (%(cl, var, ty). (x_var var, ty)) ?cl_var_ty_list)
          ?var_k =
         Some ?ty_k |]
      ==> EX var'_k.
             map_of
              (map (%(y, cl, var, var', v). (x_var var, x_var var'))
                ?y_cl_var_var'_v_list)
              ?var_k =
             Some (x_var var'_k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 27,
              template_app
               (template_app
                 (template_hole 26,
                  template_app (template_hole 25, t_empty)),
                template_var 3))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 22, template_app (template_hole 21, t_empty)),
            template_var 2),
          template_app
           (template_app
             (template_hole 26, template_app (template_hole 25, t_empty)),
            template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_hole 16,
              template_app
               (template_app
                 (template_hole 15,
                  template_app (template_hole 14, t_empty)),
                template_var 3)),
            template_var 1),
          template_app (template_hole 10, template_var 0))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Lightweight_Java_Proof.ftype_preservation'''''",
     "[| find_path_rec_f ?P ?ctx ?cl (?prefix @ [?cld']) =
         Some (?prefix @ ?cld' # ?path'');
         find_type_f ?P ctx_def ?cl = Some ?ty; fields_f ?P ?ty = Some ?fs;
         ftype_in_path_f ?P ?path'' ?f = Some ?ty_f;
         set (map (%(cl, f, ty). f) ?cl_f_ty_list) Int set ?fs = {} |]
      ==> ftype_in_fds_f ?P ?ctx
           (map (%(cl, f, ty). fd_def cl f) ?cl_f_ty_list) ?f =
          ty_opt_bot_opt None",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 27, template_var 10),
                template_var 9),
              template_var 8),
            template_app
             (template_app (template_hole 26, template_var 7),
              template_app
               (template_app (template_hole 25, template_var 6),
                template_hole 24))),
          template_app
           (template_hole 23,
            template_app
             (template_app (template_hole 26, template_var 7),
              template_app
               (template_app (template_hole 25, template_var 6),
                template_var 5)))),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 21, template_var 10),
              template_hole 20),
            template_var 8),
          template_app (template_hole 19, template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 17, template_var 10),
            template_var 4),
          template_app (template_hole 16, template_var 3)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 15, template_var 10),
              template_var 5),
            template_var 2),
          template_app (template_hole 19, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app
               (template_hole 12,
                template_app
                 (template_app
                   (template_hole 11,
                    template_app (template_hole 10, t_empty)),
                  template_var 0))),
            template_app (template_hole 12, template_var 3)),
          template_hole 8)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 6, template_var 10),
               template_var 9),
             template_app
              (template_app
                (template_hole 5, template_app (template_hole 4, t_empty)),
               template_var 0)),
           template_var 2),
         template_app (template_hole 1, template_hole 0)))),
    ("Lightweight_Java_Proof.var_not_var'_x'",
     "[| ?\<Gamma> (x_var ?var) = Some ?ty_var;
         ?L (x_var ?var) = Some ?v_var;
         ALL x:set ?y_cl_var_var'_v_list.
            ?L (x_var (case x of (y, cl, var, var', v) => var')) = None;
         ?L ?x' = None |]
      ==> (?\<Gamma> ++
           map_of
            (map2 (%(y, cl, var, var', v) (y', y). (x_var var', y))
              ?y_cl_var_var'_v_list ?y_ty_list) ++
           [?x' |-> ?ty_x_d])
           (x_var ?var) =
          Some ?ty_var",
     template_implication
      ([template_equation
         (template_app
           (template_var 8,
            template_app (template_hole 23, template_var 7)),
          template_app (template_hole 22, template_var 6)),
        template_equation
         (template_app
           (template_var 5,
            template_app (template_hole 23, template_var 7)),
          template_app (template_hole 20, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 3)),
              t_empty)
            ),
        template_equation
         (template_app (template_var 5, template_var 2), template_hole 13)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 12, template_var 8),
                 template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_hole 9,
                         template_app (template_hole 8, t_empty))),
                     template_app
                      (template_app (template_hole 2, template_var 3),
                       template_var 1))))),
             template_app
              (template_app
                (template_app (template_hole 1, t_empty), template_var 2),
               template_app (template_hole 22, template_var 0))),
           template_app (template_hole 23, template_var 7)),
         template_app (template_hole 22, template_var 6)))),
    ("Lightweight_Java_Proof.map_of_map_and_x",
     "[| ?\<Gamma> ?x = Some ?ty_x; ?L ?x' = None;
         ALL x:set ?y_cl_var_var'_v_list.
            case x of (y, cl, var, var', v) => ?L (x_var var') = None;
         ALL x:dom ?\<Gamma>. wf_object ?Pa ?H (?L x) (?\<Gamma> x) |]
      ==> (if ?x = ?x' then Some ?ty
           else (?\<Gamma> ++
                 map_of
                  (map2 (%(y, cl, var, var', v) (y', ty). (x_var var', ty))
                    ?y_cl_var_var'_v_list ?y_ty_list))
                 ?x) =
          Some ?ty_x",
     template_implication
      ([template_equation
         (template_app (template_var 9, template_var 8),
          template_app (template_hole 25, template_var 7)),
        template_equation
         (template_app (template_var 6, template_var 5), template_hole 23),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app (template_hole 21, template_var 4)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 14, template_var 9)),
              t_empty)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_var 8),
                 template_var 5)),
             template_app (template_hole 25, template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 10, template_var 9),
               template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_hole 7,
                       template_app (template_hole 6, t_empty))),
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 0)))),
             template_var 8)),
         template_app (template_hole 25, template_var 7)))),
    ("Lightweight_Java_Proof.lift_opts_mapping",
     "ALL vds vars vars' vs.
         length vds = length ?y_ty_list &
         length vars = length ?y_ty_list &
         length vars' = length ?y_ty_list &
         length vs = length ?y_ty_list -->
         lift_opts (map (%(y, ty). ?L y) ?y_ty_list) = Some vs -->
         (ALL x:set (zip (map fst ?y_ty_list)
                      (zip (map (case_vd (%cl var. cl)) vds)
                        (zip (map (case_vd (%cl var. var)) vds)
                          (zip vars' vs)))).
             case x of (y, cl, var, var', v) => ?L y = Some v)",
     template_predicate (template_app (template_hole 34, t_empty))),
    ("Lightweight_Java_Proof.map_of_map_zip_some",
     "[| distinct
          (map (%(y, cl, var, var', v). var') ?y_cl_var_var'_v_list);
         map (%(y, cl, var, var', v). y) ?y_cl_var_var'_v_list =
         map fst ?y_ty_list;
         map_of
          (map2 (%(y, cl, var, var', v) (y', y). (x_var var', y))
            ?y_cl_var_var'_v_list ?y_ty_list)
          ?x_G =
         Some ?ty_k |]
      ==> EX v_k.
             map_of
              (map (%(ya, cl, var, var', y). (x_var var', y))
                ?y_cl_var_var'_v_list)
              ?x_G =
             Some v_k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 36,
              template_app
               (template_app
                 (template_hole 35,
                  template_app (template_hole 34, t_empty)),
                template_var 3))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 29, template_app (template_hole 28, t_empty)),
            template_var 3),
          template_app
           (template_app (template_hole 24, template_hole 23),
            template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 21,
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_hole 19,
                    template_app (template_hole 18, t_empty))),
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2))),
            template_var 1),
          template_app (template_hole 10, template_var 0))],
       template_predicate (template_app (template_hole 9, t_empty)))),
    ("Lightweight_Java_Proof.exists_i",
     "[| distinct (map (%(cl, var, ty). var) ?cl_var_ty_list);
         (?y_k, ?cl_ka, ?var_k, ?var'_k, ?v_k) : set ?y_cl_var_var'_v_list;
         (?cl_k, ?var_k, ?ty_k) : set ?cl_var_ty_list;
         map (%(y, cl, var, var', v). var) ?y_cl_var_var'_v_list =
         map (%(cl, var, ty). var) ?cl_var_ty_list |]
      ==> EX i<length ?cl_var_ty_list.
             ?cl_var_ty_list ! i = (?cl_k, ?var_k, ?ty_k) &
             ?y_cl_var_var'_v_list ! i =
             (?y_k, ?cl_ka, ?var_k, ?var'_k, ?v_k)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 27,
              template_app
               (template_app
                 (template_hole 26,
                  template_app (template_hole 25, t_empty)),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_var 7),
                  template_app
                   (template_app (template_hole 21, template_var 6),
                    template_app
                     (template_app (template_hole 20, template_var 5),
                      template_app
                       (template_app (template_hole 19, template_var 4),
                        template_var 3))))),
              template_app (template_hole 18, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 1),
                  template_app
                   (template_app (template_hole 15, template_var 5),
                    template_var 0))),
              template_app (template_hole 14, template_var 8))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 12, template_app (template_hole 11, t_empty)),
            template_var 2),
          template_app
           (template_app
             (template_hole 26, template_app (template_hole 25, t_empty)),
            template_var 8))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Lightweight_Java_Proof.wf_objectE",
     "[| wf_object ?a1.0 ?a2.0 ?a3.0 ?a4.0;
         !!ty_opt ty P H.
            [| ?a1.0 = P; ?a2.0 = H; ?a3.0 = Some v_null; ?a4.0 = Some ty;
               ty_opt = Some ty |]
            ==> ?P;
         !!P H oid ty_opt.
            [| ?a1.0 = P; ?a2.0 = H; ?a3.0 = Some (v_oid oid);
               ?a4.0 = ty_opt;
               sty_option P
                (case H oid of None => None | Some tyfs => Some (fst tyfs))
                ty_opt |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 17, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate (template_var 0))),
    ("Lightweight_Java_Proof.mty_preservation",
     "[| wf_program ?P;
         find_meth_def_f ?P ?ty_x_d ?meth =
         Some
          (?ctx,
           meth_def_def
            (meth_sig_def ?cl_r ?meth
              (map (%(cl_k, var_k, ty_k). vd_def cl_k var_k)
                ?cl_var_ty_list))
            ?meth_body);
         find_type_f ?P ?ctx ?cl_r = Some ?ty_r_d;
         ALL x:set ?cl_var_ty_list.
            case x of
            (cl_k, var_k, ty_k) => find_type_f ?P ?ctx cl_k = Some ty_k;
         mtype_f ?P ?ty_x_s ?meth =
         Some (mty_def (map snd ?y_ty_list) ?ty_r_s);
         is_sty_one ?P ?ty_x_d ?ty_x_s = Some True |]
      ==> ?ty_r_d = ?ty_r_s &
          map (%(cl, var, ty). ty) ?cl_var_ty_list = map snd ?y_ty_list",
     template_implication
      ([template_predicate
         (template_app (template_hole 33, template_var 10)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 31, template_var 10),
              template_var 9),
            template_var 8),
          template_app
           (template_hole 30,
            template_app
             (template_app (template_hole 29, template_var 7),
              template_app
               (template_app
                 (template_hole 28,
                  template_app
                   (template_app
                     (template_app (template_hole 27, template_var 6),
                      template_var 8),
                    template_app
                     (template_app
                       (template_hole 26,
                        template_app (template_hole 25, t_empty)),
                      template_var 5))),
                template_var 4)))),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 21, template_var 10),
              template_var 7),
            template_var 6),
          template_app (template_hole 20, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app (template_hole 18, template_var 5)),
              t_empty)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 14, template_var 10),
              template_var 2),
            template_var 8),
          template_app
           (template_hole 13,
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_var 1)),
              template_var 0))),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 8, template_var 10),
              template_var 9),
            template_var 2),
          template_app (template_hole 7, template_hole 6))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 3),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app (template_hole 1, t_empty)),
                   template_var 5)),
               template_app
                (template_app (template_hole 11, template_hole 10),
                 template_var 1)))
           ))),
    ("Lightweight_Java_Proof.wf_intros",
     "[| distinct
          (map (%(cl_XXX, var_XXX, ty_XXX). var_XXX) ?cl_var_ty_list);
         ALL x:set ?cl_var_ty_list.
            case x of
            (cl_XXX, var_XXX, ty_XXX) =>
              find_type_f ?P ?ctx cl_XXX = Some ty_XXX;
         ?\<Gamma> =
         map_of
          (map (%(cl_XXX, var_XXX, ty_XXX). (x_var var_XXX, ty_XXX))
            ?cl_var_ty_list)
         (x_this |-> ty_def ?ctx ?dcl);
         ALL x:set ?s_list. wf_stmt ?P ?\<Gamma> x;
         find_type_f ?P ?ctx ?cl = Some ?ty;
         sty_option ?P (?\<Gamma> ?y) (Some ?ty) |]
      ==> wf_meth ?P (ty_def ?ctx ?dcl)
           (meth_def_def
             (meth_sig_def ?cl ?meth
               (map (%(cl_XXX, var_XXX, ty_XXX). vd_def cl_XXX var_XXX)
                 ?cl_var_ty_list))
             (meth_body_def ?s_list ?y))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 32,
              template_app
               (template_app
                 (template_hole 31,
                  template_app (template_hole 30, t_empty)),
                template_var 9))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app (template_hole 27, template_var 9)),
              t_empty)
            ),
        template_equation
         (template_var 6,
          template_app
           (template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_hole 19,
                  template_app
                   (template_app
                     (template_hole 18,
                      template_app (template_hole 17, t_empty)),
                    template_var 9))),
              template_hole 13),
            template_app
             (template_hole 22,
              template_app
               (template_app (template_hole 12, template_var 7),
                template_var 5)))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 4)),
              t_empty)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 23, template_var 8),
              template_var 7),
            template_var 3),
          template_app (template_hole 22, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 8),
                template_app (template_var 6, template_var 1)),
              template_app (template_hole 22, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, template_var 8),
               template_app
                (template_app (template_hole 12, template_var 7),
                 template_var 5)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_var 3),
                     template_var 0),
                   template_app
                    (template_app
                      (template_hole 4,
                       template_app (template_hole 3, t_empty)),
                     template_var 9))),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 1)))
           ))),
    ("Lightweight_Java_Proof.wf_configE",
     "[| wf_config ?a1.0 ?a2.0;
         !!P H \<Gamma> L Exception.
            [| ?a1.0 = \<Gamma>; ?a2.0 = config_ex P L H Exception;
               wf_program P; wf_heap P H; wf_varstate P \<Gamma> H L |]
            ==> ?P;
         !!P H \<Gamma> L s_list.
            [| ?a1.0 = \<Gamma>; ?a2.0 = config_normal P L H s_list;
               wf_program P; wf_heap P H; wf_varstate P \<Gamma> H L;
               ALL x:set s_list. wf_stmt P \<Gamma> x |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("Lightweight_Java_Proof.s_induct'",
     "[| !!ss. ALL s:set ss. ?P s ==> ?P (s_block ss);
         !!list x. ?P (s_ass list x);
         !!list1 x list2. ?P (s_read list1 x list2);
         !!x1 list x2. ?P (s_write x1 list x2);
         !!x1 x2 s1 s2. [| ?P s1; ?P s2 |] ==> ?P (s_if x1 x2 s1 s2);
         !!list1 x list2 list3. ?P (s_call list1 x list2 list3);
         !!list ctx cl. ?P (s_new list ctx cl) |]
      ==> ?P ?s",
     template_implication
      ([template_predicate (template_app (template_hole 16, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Lightweight_Java_Proof.map_of_ty_k",
     "[| distinct (map (%(cl, var, ty). var) ?cl_var_ty_list);
         distinct
          (map (%(y, cl, var, var', v). var') ?y_cl_var_var'_v_list);
         (?y_k, ?cl_ka, ?var_k, ?var'_k, ?v_k) : set ?y_cl_var_var'_v_list;
         (?cl_k, ?var_k, ?ty_k) : set ?cl_var_ty_list;
         map (%(y, cl, var, var', v). y) ?y_cl_var_var'_v_list =
         map fst ?y_ty_list;
         map (%(cl, var, ty). ty) ?cl_var_ty_list = map snd ?y_ty_list;
         map (%(y, cl, var, var', v). var) ?y_cl_var_var'_v_list =
         map (%(cl, var, ty). var) ?cl_var_ty_list |]
      ==> map_of
           (map2 (%(y, cl, var, var', v) (y', y). (x_var var', y))
             ?y_cl_var_var'_v_list ?y_ty_list)
           (x_var ?var'_k) =
          Some ?ty_k",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 52,
              template_app
               (template_app
                 (template_hole 51,
                  template_app (template_hole 50, t_empty)),
                template_var 9))
            ),
        template_predicate
         (
            template_app
             (template_hole 48,
              template_app
               (template_app
                 (template_hole 47,
                  template_app (template_hole 46, t_empty)),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 42,
                template_app
                 (template_app (template_hole 41, template_var 7),
                  template_app
                   (template_app (template_hole 40, template_var 6),
                    template_app
                     (template_app (template_hole 39, template_var 5),
                      template_app
                       (template_app (template_hole 38, template_var 4),
                        template_var 3))))),
              template_app (template_hole 37, template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 36,
                template_app
                 (template_app (template_hole 35, template_var 2),
                  template_app
                   (template_app (template_hole 34, template_var 5),
                    template_var 1))),
              template_app (template_hole 33, template_var 9))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 31, template_app (template_hole 30, t_empty)),
            template_var 8),
          template_app
           (template_app (template_hole 26, template_hole 25),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 23, template_app (template_hole 22, t_empty)),
            template_var 9),
          template_app
           (template_app (template_hole 20, template_hole 19),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 17, template_app (template_hole 16, t_empty)),
            template_var 8),
          template_app
           (template_app
             (template_hole 51, template_app (template_hole 50, t_empty)),
            template_var 9))],
       template_equation
        (template_app
          (template_app
            (template_hole 11,
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_hole 9,
                   template_app (template_hole 8, t_empty))),
               template_app
                (template_app (template_hole 1, template_var 8),
                 template_var 0))),
           template_app (template_hole 2, template_var 4)),
         template_app (template_hole 0, template_var 1)))),
    ("Lightweight_Java_Proof.mty_preservation''''",
     "[| find_cld_f ?P ?ctx (fqn_def ?dcl') =
         Some (?ctx, cld_def ?dcl' (cl_fqn (fqn_def ?dcl'')) ?fds' ?mds');
         find_cld_f ?P ?ctx (fqn_def ?dcl'') =
         Some (?ctx, cld_def ?dcl'' ?cl'' ?fds'' ?mds'');
         find_path_rec_f ?P ?ctx ?cl''
          [(?ctx, cld_def ?dcl'' ?cl'' ?fds'' ?mds'')] =
         Some ?path;
         find_meth_def_in_path_f ?path ?m =
         Some (?ctx'', meth_def_def (meth_sig_def ?cl_r ?m' ?vds) ?mb);
         find_type_f ?P ?ctx'' ?cl_r = Some ?ty_r;
         lift_opts
          (map (case_vd (%clk vark. find_type_f ?P ?ctx'' clk)) ?vds) =
         Some ?tys;
         lift_opts
          (map (case_vd (%clk vark. find_type_f ?P ?ctx' clk)) ?vds') =
         Some ?tys';
         find_type_f ?P ?ctx' ?cl_r' = Some ?ty_r';
         find_meth_def_in_path_f
          ((?ctx, cld_def ?dcl' (cl_fqn (fqn_def ?dcl'')) ?fds' ?mds') #
           ?path)
          ?m =
         Some (?ctx', meth_def_def (meth_sig_def ?cl_r' ?m'' ?vds') ?mb');
         wf_program ?P |]
      ==> ?tys' = ?tys & ?ty_r' = ?ty_r",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 28, template_var 24),
              template_var 23),
            template_app (template_hole 27, template_var 22)),
          template_app
           (template_hole 26,
            template_app
             (template_app (template_hole 25, template_var 23),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 24, template_var 22),
                    template_app
                     (template_hole 23,
                      template_app (template_hole 27, template_var 21))),
                  template_var 20),
                template_var 19)))),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 28, template_var 24),
              template_var 23),
            template_app (template_hole 27, template_var 21)),
          template_app
           (template_hole 26,
            template_app
             (template_app (template_hole 25, template_var 23),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 24, template_var 21),
                    template_var 18),
                  template_var 17),
                template_var 16)))),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_app (template_hole 21, template_var 24),
                template_var 23),
              template_var 18),
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 25, template_var 23),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 24, template_var 21),
                        template_var 18),
                      template_var 17),
                    template_var 16))),
              template_hole 19)),
          template_app (template_hole 18, template_var 15)),
        template_equation
         (template_app
           (template_app (template_hole 16, template_var 15),
            template_var 14),
          template_app
           (template_hole 15,
            template_app
             (template_app (template_hole 14, template_var 13),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_app (template_hole 12, template_var 12),
                      template_var 11),
                    template_var 10)),
                template_var 9)))),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 24),
              template_var 13),
            template_var 12),
          template_app (template_hole 9, template_var 8)),
        template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app
               (template_hole 6, template_app (template_hole 5, t_empty)),
              template_var 10)),
          template_app (template_hole 4, template_var 7)),
        template_equation
         (template_app
           (template_hole 7,
            template_app
             (template_app
               (template_hole 6, template_app (template_hole 5, t_empty)),
              template_var 5)),
          template_app (template_hole 4, template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 24),
              template_var 6),
            template_var 3),
          template_app (template_hole 9, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 16,
              template_app
               (template_app
                 (template_hole 20,
                  template_app
                   (template_app (template_hole 25, template_var 23),
                    template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 24, template_var 22),
                          template_app
                           (template_hole 23,
                            template_app
                             (template_hole 27, template_var 21))),
                        template_var 20),
                      template_var 19))),
                template_var 15)),
            template_var 14),
          template_app
           (template_hole 15,
            template_app
             (template_app (template_hole 14, template_var 6),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app
                     (template_app (template_hole 12, template_var 3),
                      template_var 1),
                    template_var 5)),
                template_var 0)))),
        template_predicate
         (template_app (template_hole 3, template_var 24))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 7)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 8))
           ))),
    ("Lightweight_Java_Proof.wf_stmt_in_G'",
     "(?L ?x' = None &
       (ALL x:set ?y_cl_var_var'_v_list.
           case x of (y, cl, var, var', v) => ?L (x_var var') = None) &
       (ALL x:dom ?\<Gamma>. wf_object ?P ?H (?L x) (?\<Gamma> x)) &
       wf_stmt ?P ?\<Gamma> ?s -->
       wf_stmt ?P
        ((?\<Gamma> ++
          map_of
           (map2 (%(y, cl, var, var', v) (y', y). (x_var var', y))
             ?y_cl_var_var'_v_list ?y_ty_list))
         (?x' |-> ?ty))
        ?s) &
      (?L ?x' = None &
       (ALL x:set ?y_cl_var_var'_v_list.
           case x of (y, cl, var, var', v) => ?L (x_var var') = None) &
       (ALL x:dom ?\<Gamma>. wf_object ?P ?H (?L x) (?\<Gamma> x)) &
       (ALL s:set ?ss. wf_stmt ?P ?\<Gamma> s) -->
       (ALL s:set ?ss.
           wf_stmt ?P
            ((?\<Gamma> ++
              map_of
               (map2 (%(y, cl, var, var', v) (y', y). (x_var var', y))
                 ?y_cl_var_var'_v_list ?y_ty_list))
             (?x' |-> ?ty))
            s))",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 29,
             template_app
              (template_app
                (template_hole 28,
                 template_app
                  (template_app
                    (template_hole 29,
                     template_app
                      (template_app
                        (template_hole 27,
                         template_app (template_var 9, template_var 8)),
                       template_hole 26)),
                   template_app
                    (template_app
                      (template_hole 29,
                       template_app
                        (template_app
                          (template_hole 25,
                           template_app (template_hole 24, template_var 7)),
                         t_empty)),
                     template_app
                      (template_app
                        (template_hole 29,
                         template_app
                          (template_app
                            (template_hole 18,
                             template_app
                              (template_hole 17, template_var 6)),
                           t_empty)),
                       template_app
                        (template_app
                          (template_app (template_hole 15, template_var 5),
                           template_var 6),
                         template_var 3))))),
               template_app
                (template_app
                  (template_app (template_hole 15, template_var 5),
                   template_app
                    (template_app
                      (template_app
                        (template_hole 14,
                         template_app
                          (template_app (template_hole 13, template_var 6),
                           template_app
                            (template_hole 12,
                             template_app
                              (template_app
                                (template_hole 11,
                                 template_app
                                  (template_hole 10,
                                   template_app
                                    (template_hole 9, t_empty))),
                               template_app
                                (template_app
                                  (template_hole 3, template_var 7),
                                 template_var 2))))),
                       template_var 8),
                     template_app (template_hole 2, template_var 1))),
                 template_var 3))),
           template_app
            (template_app
              (template_hole 28,
               template_app
                (template_app
                  (template_hole 29,
                   template_app
                    (template_app
                      (template_hole 27,
                       template_app (template_var 9, template_var 8)),
                     template_hole 26)),
                 template_app
                  (template_app
                    (template_hole 29,
                     template_app
                      (template_app
                        (template_hole 25,
                         template_app (template_hole 24, template_var 7)),
                       t_empty)),
                   template_app
                    (template_app
                      (template_hole 29,
                       template_app
                        (template_app
                          (template_hole 18,
                           template_app (template_hole 17, template_var 6)),
                         t_empty)),
                     template_app
                      (template_app
                        (template_hole 1,
                         template_app (template_hole 0, template_var 0)),
                       t_empty))))),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               t_empty)))
         )),
    ("Lightweight_Java_Proof.wf_methE",
     "[| wf_meth ?a1.0 ?a2.0 ?a3.0;
         !!cl_var_ty_list P ctx \<Gamma> dcl s_list cl ty y meth.
            [| ?a1.0 = P; ?a2.0 = ty_def ctx dcl;
               ?a3.0 =
               meth_def_def
                (meth_sig_def cl meth
                  (map (%(cl_XXX, var_XXX, ty_XXX). vd_def cl_XXX var_XXX)
                    cl_var_ty_list))
                (meth_body_def s_list y);
               distinct
                (map (%(cl_XXX, var_XXX, ty_XXX). var_XXX) cl_var_ty_list);
               ALL x:set cl_var_ty_list.
                  case x of
                  (cl_XXX, var_XXX, ty_XXX) =>
                    find_type_f P ctx cl_XXX = Some ty_XXX;
               \<Gamma> =
               map_of
                (map (%(cl_XXX, var_XXX, ty_XXX). (x_var var_XXX, ty_XXX))
                  cl_var_ty_list)
               (x_this |-> ty_def ctx dcl);
               ALL x:set s_list.
                  wf_stmt P
                   (map_of
                     (map (%(cl_XXX, var_XXX, y). (x_var var_XXX, y))
                       cl_var_ty_list)
                    (x_this |-> ty_def ctx dcl))
                   x;
               find_type_f P ctx cl = Some ty;
               sty_option P
                (if y = x_this then Some (ty_def ctx dcl)
                 else map_of
                       (map (%(cl_XXX, var_XXX, y). (x_var var_XXX, y))
                         cl_var_ty_list)
                       y)
                (Some ty) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 46, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 45, t_empty))],
       template_predicate (template_var 0))),
    ("Lightweight_Java_Proof.wf_tr_stmt_in_G'",
     "ALL s'.
         distinct (map (%(cl, var, ty). var) ?cl_var_ty_list) &
         distinct
          (map (%(y, cl, var, var', v). var') ?y_cl_var_var'_v_list) &
         ?x'
         ~: (%(y, cl, var, var', v). x_var var') `
            set ?y_cl_var_var'_v_list &
         map (%(y, cl, var, var', v). y) ?y_cl_var_var'_v_list =
         map fst ?y_ty_list &
         map (%(cl, var, ty). ty) ?cl_var_ty_list = map snd ?y_ty_list &
         map (%(y, cl, var, var', v). var) ?y_cl_var_var'_v_list =
         map (%(cl, var, ty). var) ?cl_var_ty_list &
         is_sty_one ?P ?ty_x_d ?ty_x_m = Some True &
         wf_stmt ?P
          (map_of (map (%(cl, var, ty). (x_var var, ty)) ?cl_var_ty_list)
           (x_this |-> ?ty_x_m))
          s' &
         tr_s
          (map_of
            (map (%(y, cl, var, var', v). (x_var var, x_var var'))
              ?y_cl_var_var'_v_list)
           (x_this |-> ?x'))
          s' ?s'' -->
         wf_stmt ?P
          ((?\<Gamma> ++
            map_of
             (map2 (%(y, cl, var, var', v) (y', y). (x_var var', y))
               ?y_cl_var_var'_v_list ?y_ty_list))
           (?x' |-> ?ty_x_m))
          ?s''",
     template_predicate (template_app (template_hole 67, t_empty))),
    ("Lightweight_Java_Proof.map_of_ty_k'",
     "[| distinct (map (%(cl, var, ty). var) ?cl_var_ty_list);
         distinct
          (map (%(y, cl, var, var', v). var') ?y_cl_var_var'_v_list);
         ?x'
         ~: (%(y, cl, var, var', v). x_var var') `
            set ?y_cl_var_var'_v_list;
         map fst ?y_cl_var_var'_v_list = map fst ?y_ty_list;
         map (%(cl, var, ty). ty) ?cl_var_ty_list = map snd ?y_ty_list;
         map (%(y, cl, var, u). var) ?y_cl_var_var'_v_list =
         map (%(cl, var, ty). var) ?cl_var_ty_list;
         map_of (map (%(cl, var, y). (x_var var, y)) ?cl_var_ty_list)
          (x_var ?var) =
         Some ?ty_var |]
      ==> (if x_var
               (case map_of
                      (map (%(y, cl, var, var', v). (x_var var, x_var var'))
                        ?y_cl_var_var'_v_list)
                      (x_var ?var) of
                None => ?var | Some (x_var var') => var'
                | Some x_this => ?var) =
              ?x'
           then Some ?ty_x_m
           else (?\<Gamma> ++
                 map_of
                  (map2 (%(y, cl, var, var', v) (y', y). (x_var var', y))
                    ?y_cl_var_var'_v_list ?y_ty_list))
                 (x_var
                   (case map_of
                          (map (%(y, cl, var, var', v).
                                   (x_var var, x_var var'))
                            ?y_cl_var_var'_v_list)
                          (x_var ?var) of
                    None => ?var | Some (x_var var') => var'
                    | Some x_this => ?var))) =
          Some ?ty_var",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 56,
              template_app
               (template_app
                 (template_hole 55,
                  template_app (template_hole 54, t_empty)),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_hole 56,
              template_app
               (template_app
                 (template_hole 52,
                  template_app (template_hole 51, t_empty)),
                template_var 6))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 46, template_var 5),
                  template_app
                   (template_app
                     (template_hole 45,
                      template_app (template_hole 44, t_empty)),
                    template_app (template_hole 39, template_var 6)))
                )
            ),
        template_equation
         (template_app
           (template_app (template_hole 37, template_hole 36),
            template_var 6),
          template_app
           (template_app (template_hole 35, template_hole 34),
            template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_hole 32, template_app (template_hole 31, t_empty)),
            template_var 7),
          template_app
           (template_app (template_hole 29, template_hole 28),
            template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_hole 52, template_app (template_hole 51, t_empty)),
            template_var 6),
          template_app
           (template_app
             (template_hole 55, template_app (template_hole 54, t_empty)),
            template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_hole 25,
              template_app
               (template_app
                 (template_hole 24,
                  template_app (template_hole 23, t_empty)),
                template_var 7)),
            template_app (template_hole 40, template_var 3)),
          template_app (template_hole 20, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app
                  (template_hole 18,
                   template_app
                    (template_hole 40,
                     template_app
                      (template_app
                        (template_app (template_hole 17, template_var 3),
                         template_app
                          (template_app (template_hole 16, t_empty),
                           template_var 3)),
                       template_app
                        (template_app
                          (template_hole 15,
                           template_app
                            (template_app
                              (template_hole 14,
                               template_app (template_hole 13, t_empty)),
                             template_var 6)),
                         template_app
                          (template_hole 40, template_var 3))))),
                 template_var 5)),
             template_app (template_hole 20, template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 8, template_var 0),
               template_app
                (template_hole 25,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, t_empty))),
                   template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 4)))),
             template_app
              (template_hole 40,
               template_app
                (template_app
                  (template_app (template_hole 17, template_var 3),
                   template_app
                    (template_app (template_hole 16, t_empty),
                     template_var 3)),
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app (template_hole 13, t_empty)),
                       template_var 6)),
                   template_app (template_hole 40, template_var 3)))))),
         template_app (template_hole 20, template_var 2)))),
    ("Lightweight_Java_Proof.var_k_of_ty_k",
     "[| distinct (map (%(cl, var, ty). var) ?cl_var_ty_list);
         distinct
          (map (%(y, cl, var, var', v). var') ?y_cl_var_var'_v_list);
         ?x'
         ~: (%(y, cl, var, var', v). x_var var') `
            set ?y_cl_var_var'_v_list;
         map fst ?y_cl_var_var'_v_list = map fst ?y_ty_list;
         map (%(cl, var, ty). ty) ?cl_var_ty_list = map snd ?y_ty_list;
         map (%(y, cl, var, u). var) ?y_cl_var_var'_v_list =
         map (%(cl, var, ty). var) ?cl_var_ty_list;
         (if ?x = x_this then Some ?ty_x_m
          else map_of (map (%(cl, var, y). (x_var var, y)) ?cl_var_ty_list)
                ?x) =
         Some ?ty_x |]
      ==> (if (case if ?x = x_this then Some ?x'
                    else map_of
                          (map (%(y, cl, var, var', v).
                                   (x_var var, x_var var'))
                            ?y_cl_var_var'_v_list)
                          ?x of
               None => ?x | Some x' => x') =
              ?x'
           then Some ?ty_x_m
           else (?\<Gamma> ++
                 map_of
                  (map2 (%(y, cl, var, var', v) (y', y). (x_var var', y))
                    ?y_cl_var_var'_v_list ?y_ty_list))
                 (case if ?x = x_this then Some ?x'
                       else map_of
                             (map (%(y, cl, var, var', v).
(x_var var, x_var var'))
                               ?y_cl_var_var'_v_list)
                             ?x of
                  None => ?x | Some x' => x')) =
          Some ?ty_x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 58,
              template_app
               (template_app
                 (template_hole 57,
                  template_app (template_hole 56, t_empty)),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_hole 58,
              template_app
               (template_app
                 (template_hole 54,
                  template_app (template_hole 53, t_empty)),
                template_var 6))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 48, template_var 5),
                  template_app
                   (template_app
                     (template_hole 47,
                      template_app (template_hole 46, t_empty)),
                    template_app (template_hole 41, template_var 6)))
                )
            ),
        template_equation
         (template_app
           (template_app (template_hole 39, template_hole 38),
            template_var 6),
          template_app
           (template_app (template_hole 37, template_hole 36),
            template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_hole 34, template_app (template_hole 33, t_empty)),
            template_var 7),
          template_app
           (template_app (template_hole 31, template_hole 30),
            template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_hole 54, template_app (template_hole 53, t_empty)),
            template_var 6),
          template_app
           (template_app
             (template_hole 57, template_app (template_hole 56, t_empty)),
            template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 27,
                template_app
                 (template_app (template_hole 26, template_var 3),
                  template_hole 25)),
              template_app (template_hole 24, template_var 2)),
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app
                   (template_hole 22,
                    template_app (template_hole 21, t_empty)),
                  template_var 7)),
              template_var 3)),
          template_app (template_hole 24, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 27,
               template_app
                (template_app
                  (template_hole 26,
                   template_app
                    (template_app
                      (template_app (template_hole 18, template_var 3),
                       t_empty),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 17,
                           template_app
                            (template_app
                              (template_hole 26, template_var 3),
                             template_hole 25)),
                         template_app (template_hole 16, template_var 5)),
                       template_app
                        (template_app
                          (template_hole 15,
                           template_app
                            (template_app
                              (template_hole 14,
                               template_app (template_hole 13, t_empty)),
                             template_var 6)),
                         template_var 3)))),
                 template_var 5)),
             template_app (template_hole 24, template_var 2)),
           template_app
            (template_app
              (template_app (template_hole 8, template_var 0),
               template_app
                (template_hole 23,
                 template_app
                  (template_app
                    (template_hole 7,
                     template_app
                      (template_hole 6,
                       template_app (template_hole 5, t_empty))),
                   template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 4)))),
             template_app
              (template_app
                (template_app (template_hole 18, template_var 3), t_empty),
               template_app
                (template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_app (template_hole 26, template_var 3),
                       template_hole 25)),
                   template_app (template_hole 16, template_var 5)),
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app
                        (template_hole 14,
                         template_app (template_hole 13, t_empty)),
                       template_var 6)),
                   template_var 3))))),
         template_app (template_hole 24, template_var 1)))),
    ("Lightweight_Java_Proof.wf_intros",
     "[| find_type_f ?P ?ctx ?cl = Some ?ty; ty_def ?ctx ?dcl ~= ?ty;
         distinct (map (%(cl_XXX, f_XXX, ty_XXX). f_XXX) ?cl_f_ty_list);
         fields_f ?P ?ty = Some ?fs;
         (%x. case x of (cl_XXX, f_XXX, ty_XXX) => f_XXX) `
         set ?cl_f_ty_list Int
         set ?fs =
         {};
         ALL x:set ?cl_f_ty_list.
            case x of
            (cl_XXX, f_XXX, ty_XXX) =>
              find_type_f ?P ?ctx cl_XXX = Some ty_XXX;
         ALL x:set ?meth_def_meth_list.
            case x of
            (meth_def_XXX, meth_XXX) =>
              wf_meth ?P (ty_def ?ctx ?dcl) meth_def_XXX;
         ALL x:set ?meth_def_meth_list.
            case x of (meth_def_XXX, x) => method_name_f meth_def_XXX = x;
         distinct (map snd ?meth_def_meth_list);
         methods_f ?P ?ty =
         Some
          (map (%(meth_', mty_XXX, mty_'). meth_') ?meth'_mty_mty'_list);
         ALL x:set ?meth'_mty_mty'_list.
            case x of
            (meth_', mty_XXX, mty_') =>
              mtype_f ?P (ty_def ?ctx ?dcl) meth_' = Some mty_XXX;
         ALL x:set ?meth'_mty_mty'_list.
            case x of
            (meth_', mty_XXX, mty_') => mtype_f ?P ?ty meth_' = Some mty_';
         ALL x:set ?meth'_mty_mty'_list.
            case x of
            (meth_', mty_XXX, mty_') =>
              meth_' : snd ` set ?meth_def_meth_list --> mty_XXX = mty_' |]
      ==> wf_class_common ?P ?ctx ?dcl ?cl
           (map (%(cl_XXX, f_XXX, ty_XXX). fd_def cl_XXX f_XXX)
             ?cl_f_ty_list)
           (map fst ?meth_def_meth_list)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 50, template_var 8),
              template_var 7),
            template_var 6),
          template_app (template_hole 49, template_var 5)),
        template_negation
         (
            template_equation
             (template_app
               (template_app (template_hole 46, template_var 7),
                template_var 4),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_hole 45,
              template_app
               (template_app
                 (template_hole 44,
                  template_app (template_hole 43, t_empty)),
                template_var 3))
            ),
        template_equation
         (template_app
           (template_app (template_hole 40, template_var 8),
            template_var 5),
          template_app (template_hole 39, template_var 2)),
        template_equation
         (template_app
           (template_app
             (template_hole 37,
              template_app
               (template_app (template_hole 36, t_empty),
                template_app (template_hole 35, template_var 3))),
            template_app (template_hole 34, template_var 2)),
          template_hole 33),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 32,
                template_app (template_hole 35, template_var 3)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app (template_hole 28, template_var 1)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app (template_hole 28, template_var 1)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_hole 45,
              template_app
               (template_app (template_hole 23, template_hole 22),
                template_var 1))
            ),
        template_equation
         (template_app
           (template_app (template_hole 21, template_var 8),
            template_var 5),
          template_app
           (template_hole 39,
            template_app
             (template_app
               (template_hole 20, template_app (template_hole 19, t_empty)),
              template_var 0))),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 0)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 0)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 0)),
              t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 6, template_var 8),
                     template_var 7),
                   template_var 4),
                 template_var 6),
               template_app
                (template_app
                  (template_hole 5,
                   template_app (template_hole 4, t_empty)),
                 template_var 3)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1))
           ))),
    ("Lightweight_Java_Proof.subtypes_through_tr",
     "[| distinct (map (%(cl, var, ty). var) ?cl_var_ty_list);
         distinct
          (map (%(y, cl, var, var', v). var') ?y_cl_var_var'_v_list);
         ?x'
         ~: (%(y, cl, var, var', v). x_var var') `
            set ?y_cl_var_var'_v_list;
         map fst ?y_cl_var_var'_v_list = map fst ?y_ty_list;
         map (%(cl, var, ty). ty) ?cl_var_ty_list = map snd ?y_ty_list;
         map (%(y, cl, var, u). var) ?y_cl_var_var'_v_list =
         map (%(cl, var, ty). var) ?cl_var_ty_list;
         ALL x:set ?y_y'_list.
            case x of
            (y, x) =>
              (case if y = x_this then Some ?x'
                    else map_of
                          (map (%(y, cl, var, var', v).
                                   (x_var var, x_var var'))
                            ?y_cl_var_var'_v_list)
                          y of
               None => y | Some x' => x') =
              x;
         ALL x:set ?y_ty_lista.
            case x of
            (y, ty) =>
              sty_option ?P
               (if y = x_this then Some ?ty_x_m
                else map_of
                      (map (%(cl, var, y). (x_var var, y)) ?cl_var_ty_list)
                      y)
               (Some ty);
         map fst ?y_y'_list = map fst ?y_ty_lista;
         (?y, ?y') = ?y_y'_list ! ?i; (?yy, ?ty) = ?y_ty_lista ! ?i;
         ?i < length ?y_y'_list; ?i < length ?y_ty_lista |]
      ==> sty_option ?P
           (if ?y' = ?x' then Some ?ty_x_m
            else (?\<Gamma> ++
                  map_of
                   (map2 (%(y, cl, var, var', v) (y', y). (x_var var', y))
                     ?y_cl_var_var'_v_list ?y_ty_list))
                  ?y')
           (Some ?ty)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 76,
              template_app
               (template_app
                 (template_hole 75,
                  template_app (template_hole 74, t_empty)),
                template_var 13))
            ),
        template_predicate
         (
            template_app
             (template_hole 76,
              template_app
               (template_app
                 (template_hole 72,
                  template_app (template_hole 71, t_empty)),
                template_var 12))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 66, template_var 11),
                  template_app
                   (template_app
                     (template_hole 65,
                      template_app (template_hole 64, t_empty)),
                    template_app (template_hole 59, template_var 12)))
                )
            ),
        template_equation
         (template_app
           (template_app (template_hole 57, template_hole 56),
            template_var 12),
          template_app
           (template_app (template_hole 55, template_hole 54),
            template_var 10)),
        template_equation
         (template_app
           (template_app
             (template_hole 52, template_app (template_hole 51, t_empty)),
            template_var 13),
          template_app
           (template_app (template_hole 49, template_hole 48),
            template_var 10)),
        template_equation
         (template_app
           (template_app
             (template_hole 72, template_app (template_hole 71, t_empty)),
            template_var 12),
          template_app
           (template_app
             (template_hole 75, template_app (template_hole 74, t_empty)),
            template_var 13)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 46,
                template_app (template_hole 45, template_var 9)),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 31,
                template_app (template_hole 30, template_var 8)),
              t_empty)
            ),
        template_equation
         (template_app
           (template_app (template_hole 19, template_hole 18),
            template_var 9),
          template_app
           (template_app (template_hole 17, template_hole 16),
            template_var 8)),
        template_equation
         (template_app
           (template_app (template_hole 32, template_var 5),
            template_var 4),
          template_app
           (template_app (template_hole 14, template_var 9),
            template_var 3)),
        template_equation
         (template_app
           (template_app (template_hole 21, template_var 2),
            template_var 1),
          template_app
           (template_app (template_hole 12, template_var 8),
            template_var 3)),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 10, template_var 9)),
        template_inequation
         (less_than, template_var 3,
          template_app (template_hole 9, template_var 8))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 28, template_var 7),
               template_app
                (template_app
                  (template_app
                    (template_hole 27,
                     template_app
                      (template_app (template_hole 43, template_var 4),
                       template_var 11)),
                   template_app (template_hole 26, template_var 6)),
                 template_app
                  (template_app
                    (template_app (template_hole 8, template_var 0),
                     template_app
                      (template_hole 25,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_hole 6,
                             template_app (template_hole 5, t_empty))),
                         template_app
                          (template_app (template_hole 0, template_var 12),
                           template_var 10)))),
                   template_var 4))),
             template_app (template_hole 26, template_var 1))
           ))),
    ("Lightweight_Java_Proof.wf_class_cE",
     "[| wf_class_common ?a1.0 ?a2.0 ?a3.0 ?a4.0 ?a5.0 ?a6.0;
         !!P ctx cl ty dcl cl_f_ty_list fs meth_def_meth_list
            meth'_mty_mty'_list.
            [| ?a1.0 = P; ?a2.0 = ctx; ?a3.0 = dcl; ?a4.0 = cl;
               ?a5.0 =
               map (%(cl_XXX, f_XXX, ty_XXX). fd_def cl_XXX f_XXX)
                cl_f_ty_list;
               ?a6.0 = map fst meth_def_meth_list;
               find_type_f P ctx cl = Some ty; ty_def ctx dcl ~= ty;
               distinct
                (map (%(cl_XXX, f_XXX, ty_XXX). f_XXX) cl_f_ty_list);
               fields_f P ty = Some fs;
               (%x. case x of (cl_XXX, f_XXX, ty_XXX) => f_XXX) `
               set cl_f_ty_list Int
               set fs =
               {};
               ALL x:set cl_f_ty_list.
                  case x of
                  (cl_XXX, f_XXX, ty_XXX) =>
                    find_type_f P ctx cl_XXX = Some ty_XXX;
               ALL x:set meth_def_meth_list.
                  case x of
                  (meth_def_XXX, meth_XXX) =>
                    wf_meth P (ty_def ctx dcl) meth_def_XXX;
               ALL x:set meth_def_meth_list.
                  case x of
                  (meth_def_XXX, x) => method_name_f meth_def_XXX = x;
               distinct (map snd meth_def_meth_list);
               methods_f P ty =
               Some
                (map (%(meth_', mty_XXX, mty_'). meth_')
                  meth'_mty_mty'_list);
               ALL x:set meth'_mty_mty'_list.
                  case x of
                  (meth_', mty_XXX, mty_') =>
                    mtype_f P (ty_def ctx dcl) meth_' = Some mty_XXX;
               ALL x:set meth'_mty_mty'_list.
                  case x of
                  (meth_', mty_XXX, mty_') =>
                    mtype_f P ty meth_' = Some mty_';
               ALL x:set meth'_mty_mty'_list.
                  case x of
                  (meth_', mty_XXX, mty_') =>
                    meth_' : snd ` set meth_def_meth_list -->
                    mty_XXX = mty_' |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 65, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 64, t_empty))],
       template_predicate (template_var 0))),
    ("Lightweight_Java_Proof.subtype_through_tr",
     "[| distinct (map (%(cl, var, ty). var) ?cl_var_ty_list);
         distinct
          (map (%(y, cl, var, var', v). var') ?y_cl_var_var'_v_list);
         ?x'
         ~: (%(y, cl, var, var', v). x_var var') `
            set ?y_cl_var_var'_v_list;
         map fst ?y_cl_var_var'_v_list = map fst ?y_ty_list;
         map (%(cl, var, ty). ty) ?cl_var_ty_list = map snd ?y_ty_list;
         map (%(y, cl, var, u). var) ?y_cl_var_var'_v_list =
         map (%(cl, var, ty). var) ?cl_var_ty_list;
         is_sty_one ?P ?ty_x ?ty_var = Some True;
         (if ?x = x_this then Some ?ty_x_m
          else map_of (map (%(cl, var, y). (x_var var, y)) ?cl_var_ty_list)
                ?x) =
         Some ?ty_x;
         map_of (map (%(cl, var, y). (x_var var, y)) ?cl_var_ty_list)
          (x_var ?var) =
         Some ?ty_var |]
      ==> sty_option ?P
           (if (case if ?x = x_this then Some ?x'
                     else map_of
                           (map (%(y, cl, var, var', v).
                                    (x_var var, x_var var'))
                             ?y_cl_var_var'_v_list)
                           ?x of
                None => ?x | Some x' => x') =
               ?x'
            then Some ?ty_x_m
            else (?\<Gamma> ++
                  map_of
                   (map2 (%(y, cl, var, var', v) (y', y). (x_var var', y))
                     ?y_cl_var_var'_v_list ?y_ty_list))
                  (case if ?x = x_this then Some ?x'
                        else map_of
                              (map (%(y, cl, var, var', v).
 (x_var var, x_var var'))
                                ?y_cl_var_var'_v_list)
                              ?x of
                   None => ?x | Some x' => x'))
           (if x_var
                (case map_of
                       (map (%(y, cl, var, var', v).
                                (x_var var, x_var var'))
                         ?y_cl_var_var'_v_list)
                       (x_var ?var) of
                 None => ?var | Some (x_var var') => var'
                 | Some x_this => ?var) =
               ?x'
            then Some ?ty_x_m
            else (?\<Gamma> ++
                  map_of
                   (map2 (%(y, cl, var, var', v) (y', y). (x_var var', y))
                     ?y_cl_var_var'_v_list ?y_ty_list))
                  (x_var
                    (case if x_var ?var = x_this then Some ?x'
                          else map_of
                                (map (%(y, cl, var, var', v).
   (x_var var, x_var var'))
                                  ?y_cl_var_var'_v_list)
                                (x_var ?var) of
                     None => ?var | Some (x_var var') => var'
                     | Some x_this => ?var)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 65,
              template_app
               (template_app
                 (template_hole 64,
                  template_app (template_hole 63, t_empty)),
                template_var 10))
            ),
        template_predicate
         (
            template_app
             (template_hole 65,
              template_app
               (template_app
                 (template_hole 61,
                  template_app (template_hole 60, t_empty)),
                template_var 9))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 55, template_var 8),
                  template_app
                   (template_app
                     (template_hole 54,
                      template_app (template_hole 53, t_empty)),
                    template_app (template_hole 48, template_var 9)))
                )
            ),
        template_equation
         (template_app
           (template_app (template_hole 46, template_hole 45),
            template_var 9),
          template_app
           (template_app (template_hole 44, template_hole 43),
            template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_hole 41, template_app (template_hole 40, t_empty)),
            template_var 10),
          template_app
           (template_app (template_hole 38, template_hole 37),
            template_var 7)),
        template_equation
         (template_app
           (template_app
             (template_hole 61, template_app (template_hole 60, t_empty)),
            template_var 9),
          template_app
           (template_app
             (template_hole 64, template_app (template_hole 63, t_empty)),
            template_var 10)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 34, template_var 6),
              template_var 5),
            template_var 4),
          template_app (template_hole 33, template_hole 32)),
        template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 30,
                template_app
                 (template_app (template_hole 29, template_var 3),
                  template_hole 28)),
              template_app (template_hole 27, template_var 2)),
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app
                   (template_hole 25,
                    template_app (template_hole 24, t_empty)),
                  template_var 10)),
              template_var 3)),
          template_app (template_hole 27, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_hole 26,
              template_app
               (template_app
                 (template_hole 25,
                  template_app (template_hole 24, t_empty)),
                template_var 10)),
            template_app (template_hole 49, template_var 1)),
          template_app (template_hole 27, template_var 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 21, template_var 6),
               template_app
                (template_app
                  (template_app
                    (template_hole 30,
                     template_app
                      (template_app
                        (template_hole 29,
                         template_app
                          (template_app
                            (template_app
                              (template_hole 20, template_var 3),
                             t_empty),
                           template_app
                            (template_app
                              (template_app
                                (template_hole 19,
                                 template_app
                                  (template_app
                                    (template_hole 29, template_var 3),
                                   template_hole 28)),
                               template_app
                                (template_hole 18, template_var 8)),
                             template_app
                              (template_app
                                (template_hole 17,
                                 template_app
                                  (template_app
                                    (template_hole 16,
                                     template_app
(template_hole 15, t_empty)),
                                   template_var 9)),
                               template_var 3)))),
                       template_var 8)),
                   template_app (template_hole 27, template_var 2)),
                 template_app
                  (template_app
                    (template_app (template_hole 10, template_var 0),
                     template_app
                      (template_hole 26,
                       template_app
                        (template_app
                          (template_hole 9,
                           template_app
                            (template_hole 8,
                             template_app (template_hole 7, t_empty))),
                         template_app
                          (template_app (template_hole 2, template_var 9),
                           template_var 7)))),
                   template_app
                    (template_app
                      (template_app (template_hole 20, template_var 3),
                       t_empty),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 19,
                           template_app
                            (template_app
                              (template_hole 29, template_var 3),
                             template_hole 28)),
                         template_app (template_hole 18, template_var 8)),
                       template_app
                        (template_app
                          (template_hole 17,
                           template_app
                            (template_app
                              (template_hole 16,
                               template_app (template_hole 15, t_empty)),
                             template_var 9)),
                         template_var 3)))))),
             template_app
              (template_app
                (template_app
                  (template_hole 30,
                   template_app
                    (template_app
                      (template_hole 29,
                       template_app
                        (template_hole 49,
                         template_app
                          (template_app
                            (template_app (template_hole 1, template_var 1),
                             template_app
                              (template_app (template_hole 0, t_empty),
                               template_var 1)),
                           template_app
                            (template_app
                              (template_hole 17,
                               template_app
                                (template_app
                                  (template_hole 16,
                                   template_app
                                    (template_hole 15, t_empty)),
                                 template_var 9)),
                             template_app
                              (template_hole 49, template_var 1))))),
                     template_var 8)),
                 template_app (template_hole 27, template_var 2)),
               template_app
                (template_app
                  (template_app (template_hole 10, template_var 0),
                   template_app
                    (template_hole 26,
                     template_app
                      (template_app
                        (template_hole 9,
                         template_app
                          (template_hole 8,
                           template_app (template_hole 7, t_empty))),
                       template_app
                        (template_app (template_hole 2, template_var 9),
                         template_var 7)))),
                 template_app
                  (template_hole 49,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 1),
                       template_app
                        (template_app (template_hole 0, t_empty),
                         template_var 1)),
                     template_app
                      (template_app
                        (template_app
                          (template_hole 19,
                           template_app
                            (template_app
                              (template_hole 29,
                               template_app
                                (template_hole 49, template_var 1)),
                             template_hole 28)),
                         template_app (template_hole 18, template_var 8)),
                       template_app
                        (template_app
                          (template_hole 17,
                           template_app
                            (template_app
                              (template_hole 16,
                               template_app (template_hole 15, t_empty)),
                             template_var 9)),
                         template_app
                          (template_hole 49, template_var 1))))))))
           ))),
    ("Lightweight_Java_Proof.wf_stmtE",
     "[| wf_stmt ?a1.0 ?a2.0 ?a3.0;
         !!P \<Gamma> s_list.
            [| ?a1.0 = P; ?a2.0 = \<Gamma>; ?a3.0 = s_block s_list;
               ALL x:set s_list. wf_stmt P \<Gamma> x |]
            ==> ?P;
         !!P \<Gamma> x var.
            [| ?a1.0 = P; ?a2.0 = \<Gamma>; ?a3.0 = s_ass var x;
               sty_option P (\<Gamma> x) (\<Gamma> (x_var var)) |]
            ==> ?P;
         !!\<Gamma> x ty P f ty' var.
            [| ?a1.0 = P; ?a2.0 = \<Gamma>; ?a3.0 = s_read var x f;
               \<Gamma> x = Some ty; ftype_f P ty f = Some ty';
               sty_option P (Some ty') (\<Gamma> (x_var var)) |]
            ==> ?P;
         !!\<Gamma> x ty P f ty' y.
            [| ?a1.0 = P; ?a2.0 = \<Gamma>; ?a3.0 = s_write x f y;
               \<Gamma> x = Some ty; ftype_f P ty f = Some ty';
               sty_option P (\<Gamma> y) (Some ty') |]
            ==> ?P;
         !!P \<Gamma> x y s1 s2.
            [| ?a1.0 = P; ?a2.0 = \<Gamma>; ?a3.0 = s_if x y s1 s2;
               sty_option P (\<Gamma> x) (\<Gamma> y) |
               sty_option P (\<Gamma> y) (\<Gamma> x);
               wf_stmt P \<Gamma> s1; wf_stmt P \<Gamma> s2 |]
            ==> ?P;
         !!P ctx cl ty \<Gamma> var.
            [| ?a1.0 = P; ?a2.0 = \<Gamma>; ?a3.0 = s_new var ctx cl;
               find_type_f P ctx cl = Some ty;
               sty_option P (Some ty) (\<Gamma> (x_var var)) |]
            ==> ?P;
         !!Y y_ty_list \<Gamma> x ty P meth ty' var.
            [| ?a1.0 = P; ?a2.0 = \<Gamma>;
               ?a3.0 = s_call var x meth (map fst y_ty_list);
               Y = map fst y_ty_list; \<Gamma> x = Some ty;
               mtype_f P ty meth = Some (mty_def (map snd y_ty_list) ty');
               ALL x:set y_ty_list.
                  case x of
                  (y_XXX, ty_XXX) =>
                    sty_option P (\<Gamma> y_XXX) (Some ty_XXX);
               sty_option P (Some ty') (\<Gamma> (x_var var)) |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 42, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 41, t_empty)),
        template_predicate (template_app (template_hole 41, t_empty)),
        template_predicate (template_app (template_hole 40, t_empty)),
        template_predicate (template_app (template_hole 40, t_empty)),
        template_predicate (template_app (template_hole 41, t_empty)),
        template_predicate (template_app (template_hole 41, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate (template_var 0))),
    ("Lightweight_Java_Proof.wf_induct",
     "[| !!ty_opt ty P H.
            ty_opt = Some ty ==> ?P1.0 P H (Some v_null) (Some ty);
         !!P H oid ty_opt.
            sty_option P
             (case H oid of None => None | Some tyfs => Some (fst tyfs))
             ty_opt ==>
            ?P1.0 P H (Some (v_oid oid)) ty_opt;
         !!L \<Gamma> P H.
            [| finite (dom L);
               ALL x:dom \<Gamma>.
                  wf_object P H (L x) (\<Gamma> x) &
                  ?P1.0 P H (L x) (\<Gamma> x) |]
            ==> ?P2.0 P \<Gamma> H L;
         !!H P.
            [| finite (dom H);
               ALL oid:dom H.
                  EX ty.
                     (case H oid of None => None
                      | Some tyfs => Some (fst tyfs)) =
                     Some ty &
                     (EX fs.
                         fields_f P ty = Some fs &
                         (ALL f:set fs.
                             EX ty'.
                                ftype_f P ty f = Some ty' &
                                wf_object P H
                                 (case H oid of None => None
                                  | Some tyfs => snd tyfs f)
                                 (Some ty') &
                                ?P1.0 P H
                                 (case H oid of None => None
                                  | Some tyfs => snd tyfs f)
                                 (Some ty'))) |]
            ==> ?P3.0 P H;
         !!P H \<Gamma> L Exception.
            [| wf_program P; ?P9.0 P; wf_heap P H; ?P3.0 P H;
               wf_varstate P \<Gamma> H L; ?P2.0 P \<Gamma> H L |]
            ==> ?P4.0 \<Gamma> (config_ex P L H Exception);
         !!P H \<Gamma> L s_list.
            [| wf_program P; ?P9.0 P; wf_heap P H; ?P3.0 P H;
               wf_varstate P \<Gamma> H L; ?P2.0 P \<Gamma> H L;
               ALL s_XXX:set s_list.
                  wf_stmt P \<Gamma> s_XXX & ?P5.0 P \<Gamma> s_XXX |]
            ==> ?P4.0 \<Gamma> (config_normal P L H s_list);
         !!P \<Gamma> s_list.
            ALL s_XXX:set s_list.
               wf_stmt P \<Gamma> s_XXX & ?P5.0 P \<Gamma> s_XXX ==>
            ?P5.0 P \<Gamma> (s_block s_list);
         !!P \<Gamma> x var.
            sty_option P (\<Gamma> x) (\<Gamma> (x_var var)) ==>
            ?P5.0 P \<Gamma> (s_ass var x);
         !!\<Gamma> x ty P f ty' var.
            [| \<Gamma> x = Some ty; ftype_f P ty f = Some ty';
               sty_option P (Some ty') (\<Gamma> (x_var var)) |]
            ==> ?P5.0 P \<Gamma> (s_read var x f);
         !!\<Gamma> x ty P f ty' y.
            [| \<Gamma> x = Some ty; ftype_f P ty f = Some ty';
               sty_option P (\<Gamma> y) (Some ty') |]
            ==> ?P5.0 P \<Gamma> (s_write x f y);
         !!P \<Gamma> x y s1 s2.
            [| sty_option P (\<Gamma> x) (\<Gamma> y) |
               sty_option P (\<Gamma> y) (\<Gamma> x);
               wf_stmt P \<Gamma> s1; ?P5.0 P \<Gamma> s1;
               wf_stmt P \<Gamma> s2; ?P5.0 P \<Gamma> s2 |]
            ==> ?P5.0 P \<Gamma> (s_if x y s1 s2);
         !!P ctx cl ty \<Gamma> var.
            [| find_type_f P ctx cl = Some ty;
               sty_option P (Some ty) (\<Gamma> (x_var var)) |]
            ==> ?P5.0 P \<Gamma> (s_new var ctx cl);
         !!Y y_ty_list \<Gamma> x ty P meth ty' var.
            [| Y = map fst y_ty_list; \<Gamma> x = Some ty;
               mtype_f P ty meth = Some (mty_def (map snd y_ty_list) ty');
               ALL x:set y_ty_list.
                  case x of
                  (y_XXX, ty_XXX) =>
                    sty_option P (\<Gamma> y_XXX) (Some ty_XXX);
               sty_option P (Some ty') (\<Gamma> (x_var var)) |]
            ==> ?P5.0 P \<Gamma> (s_call var x meth (map fst y_ty_list));
         !!cl_var_ty_list P ctx \<Gamma> dcl s_list cl ty y meth.
            [| distinct
                (map (%(cl_XXX, var_XXX, ty_XXX). var_XXX) cl_var_ty_list);
               ALL x:set cl_var_ty_list.
                  case x of
                  (cl_XXX, var_XXX, ty_XXX) =>
                    find_type_f P ctx cl_XXX = Some ty_XXX;
               \<Gamma> =
               map_of
                (map (%(cl_XXX, var_XXX, ty_XXX). (x_var var_XXX, ty_XXX))
                  cl_var_ty_list)
               (x_this |-> ty_def ctx dcl);
               ALL s_XXX:set s_list.
                  wf_stmt P
                   (map_of
                     (map (%(cl_XXX, var_XXX, y). (x_var var_XXX, y))
                       cl_var_ty_list)
                    (x_this |-> ty_def ctx dcl))
                   s_XXX &
                  ?P5.0 P
                   (map_of
                     (map (%(cl_XXX, var_XXX, y). (x_var var_XXX, y))
                       cl_var_ty_list)
                    (x_this |-> ty_def ctx dcl))
                   s_XXX;
               find_type_f P ctx cl = Some ty;
               sty_option P
                (if y = x_this then Some (ty_def ctx dcl)
                 else map_of
                       (map (%(cl_XXX, var_XXX, y). (x_var var_XXX, y))
                         cl_var_ty_list)
                       y)
                (Some ty) |]
            ==> ?P6.0 P (ty_def ctx dcl)
                 (meth_def_def
                   (meth_sig_def cl meth
                     (map (%(cl_XXX, var_XXX, ty_XXX).
                              vd_def cl_XXX var_XXX)
                       cl_var_ty_list))
                   (meth_body_def s_list y));
         !!P ctx cl ty dcl cl_f_ty_list fs meth_def_meth_list
            meth'_mty_mty'_list.
            [| find_type_f P ctx cl = Some ty; ty_def ctx dcl ~= ty;
               distinct
                (map (%(cl_XXX, f_XXX, ty_XXX). f_XXX) cl_f_ty_list);
               fields_f P ty = Some fs;
               (%x. case x of (cl_XXX, f_XXX, ty_XXX) => f_XXX) `
               set cl_f_ty_list Int
               set fs =
               {};
               ALL x:set cl_f_ty_list.
                  case x of
                  (cl_XXX, f_XXX, ty_XXX) =>
                    find_type_f P ctx cl_XXX = Some ty_XXX;
               ALL x:set meth_def_meth_list.
                  case x of
                  (meth_def_XXX, meth_XXX) =>
                    wf_meth P (ty_def ctx dcl) meth_def_XXX &
                    ?P6.0 P (ty_def ctx dcl) meth_def_XXX;
               ALL x:set meth_def_meth_list.
                  case x of
                  (meth_def_XXX, x) => method_name_f meth_def_XXX = x;
               distinct (map snd meth_def_meth_list);
               methods_f P ty =
               Some
                (map (%(meth_', mty_XXX, mty_'). meth_')
                  meth'_mty_mty'_list);
               ALL x:set meth'_mty_mty'_list.
                  case x of
                  (meth_', mty_XXX, mty_') =>
                    mtype_f P (ty_def ctx dcl) meth_' = Some mty_XXX;
               ALL x:set meth'_mty_mty'_list.
                  case x of
                  (meth_', mty_XXX, mty_') =>
                    mtype_f P ty meth_' = Some mty_';
               ALL x:set meth'_mty_mty'_list.
                  case x of
                  (meth_', mty_XXX, mty_') =>
                    meth_' : snd ` set meth_def_meth_list -->
                    mty_XXX = mty_' |]
            ==> ?P7.0 P ctx dcl cl
                 (map (%(cl_XXX, f_XXX, ty_XXX). fd_def cl_XXX f_XXX)
                   cl_f_ty_list)
                 (map fst meth_def_meth_list);
         !!dcl cl fds meth_defs P.
            [| cld_def dcl cl fds meth_defs : set P;
               wf_class_common P ctx_def dcl cl fds meth_defs;
               ?P7.0 P ctx_def dcl cl fds meth_defs |]
            ==> ?P8.0 P (cld_def dcl cl fds meth_defs);
         !!P. [| distinct_names_f P;
                 ALL cld_XXX:set P. wf_class P cld_XXX & ?P8.0 P cld_XXX;
                 acyclic_clds P |]
              ==> ?P9.0 P |]
      ==> (wf_object ?x1.0 ?x2.0 ?x3.0 ?x4.0 -->
           ?P1.0 ?x1.0 ?x2.0 ?x3.0 ?x4.0) &
          (wf_varstate ?x5.0 ?x6.0 ?x7.0 ?x8.0 -->
           ?P2.0 ?x5.0 ?x6.0 ?x7.0 ?x8.0) &
          (wf_heap ?x9.0 ?x10.0 --> ?P3.0 ?x9.0 ?x10.0) &
          (wf_config ?x11.0 ?x12.0 --> ?P4.0 ?x11.0 ?x12.0) &
          (wf_stmt ?x13.0 ?x14.0 ?x15.0 --> ?P5.0 ?x13.0 ?x14.0 ?x15.0) &
          (wf_meth ?x16.0 ?x17.0 ?x18.0 --> ?P6.0 ?x16.0 ?x17.0 ?x18.0) &
          (wf_class_common ?x19.0 ?x20.0 ?x21.0 ?x22.0 ?x23.0 ?x24.0 -->
           ?P7.0 ?x19.0 ?x20.0 ?x21.0 ?x22.0 ?x23.0 ?x24.0) &
          (wf_class ?x25.0 ?x26.0 --> ?P8.0 ?x25.0 ?x26.0) &
          (wf_program ?x27.0 --> ?P9.0 ?x27.0)",
     template_implication
      ([template_predicate (template_app (template_hole 149, t_empty)),
        template_predicate (template_app (template_hole 147, t_empty)),
        template_predicate (template_app (template_hole 134, t_empty)),
        template_predicate (template_app (template_hole 146, t_empty)),
        template_predicate (template_app (template_hole 147, t_empty)),
        template_predicate (template_app (template_hole 147, t_empty)),
        template_predicate (template_app (template_hole 147, t_empty)),
        template_predicate (template_app (template_hole 147, t_empty)),
        template_predicate (template_app (template_hole 133, t_empty)),
        template_predicate (template_app (template_hole 133, t_empty)),
        template_predicate (template_app (template_hole 147, t_empty)),
        template_predicate (template_app (template_hole 147, t_empty)),
        template_predicate (template_app (template_hole 88, t_empty)),
        template_predicate (template_app (template_hole 73, t_empty)),
        template_predicate (template_app (template_hole 147, t_empty)),
        template_predicate (template_app (template_hole 100, t_empty)),
        template_predicate (template_app (template_hole 147, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 128,
               template_app
                (template_app
                  (template_hole 21,
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 127, template_var 26),
                         template_var 25),
                       template_var 24),
                     template_var 23)),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_var 35, template_var 26),
                       template_var 25),
                     template_var 24),
                   template_var 23))),
             template_app
              (template_app
                (template_hole 128,
                 template_app
                  (template_app
                    (template_hole 21,
                     template_app
                      (template_app
                        (template_app
                          (template_app
                            (template_hole 109, template_var 22),
                           template_var 21),
                         template_var 20),
                       template_var 19)),
                   template_app
                    (template_app
                      (template_app
                        (template_app (template_var 34, template_var 22),
                         template_var 21),
                       template_var 20),
                     template_var 19))),
               template_app
                (template_app
                  (template_hole 128,
                   template_app
                    (template_app
                      (template_hole 21,
                       template_app
                        (template_app (template_hole 110, template_var 18),
                         template_var 17)),
                     template_app
                      (template_app (template_var 33, template_var 18),
                       template_var 17))),
                 template_app
                  (template_app
                    (template_hole 128,
                     template_app
                      (template_app
                        (template_hole 21,
                         template_app
                          (template_app (template_hole 0, template_var 16),
                           template_var 15)),
                       template_app
                        (template_app (template_var 31, template_var 16),
                         template_var 15))),
                   template_app
                    (template_app
                      (template_hole 128,
                       template_app
                        (template_app
                          (template_hole 21,
                           template_app
                            (template_app
                              (template_app
                                (template_hole 104, template_var 14),
                               template_var 13),
                             template_var 12)),
                         template_app
                          (template_app
                            (template_app
                              (template_var 30, template_var 14),
                             template_var 13),
                           template_var 12))),
                     template_app
                      (template_app
                        (template_hole 128,
                         template_app
                          (template_app
                            (template_hole 21,
                             template_app
                              (template_app
                                (template_app
                                  (template_hole 34, template_var 11),
                                 template_var 10),
                               template_var 9)),
                           template_app
                            (template_app
                              (template_app
                                (template_var 29, template_var 11),
                               template_var 10),
                             template_var 9))),
                       template_app
                        (template_app
                          (template_hole 128,
                           template_app
                            (template_app
                              (template_hole 21,
                               template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app
  (template_app (template_hole 6, template_var 8), template_var 7),
 template_var 6),
                                     template_var 5),
                                   template_var 4),
                                 template_var 3)),
                             template_app
                              (template_app
                                (template_app
                                  (template_app
                                    (template_app
(template_app (template_var 28, template_var 8), template_var 7),
                                     template_var 6),
                                   template_var 5),
                                 template_var 4),
                               template_var 3))),
                         template_app
                          (template_app
                            (template_hole 128,
                             template_app
                              (template_app
                                (template_hole 21,
                                 template_app
                                  (template_app
                                    (template_hole 2, template_var 2),
                                   template_var 1)),
                               template_app
                                (template_app
                                  (template_var 27, template_var 2),
                                 template_var 1))),
                           template_app
                            (template_app
                              (template_hole 21,
                               template_app
                                (template_hole 111, template_var 0)),
                             template_app
                              (template_var 32, template_var 0))))))))))
           )))]:
   (string * thm * template) list
### theory "Draft.Lightweight_Java_ProofMoreTemplates"
### 0.909s elapsed time, 1.137s cpu time, 0.136s GC time
val it = (): unit
