   [("IO.right_id", "?m >>= IO.return = ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("HOL.ASSUMPTION_cong", "ASSUMPTION ?A = ASSUMPTION ?A",
     template_equation
      (template_app (template_hole 0, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("HOL.ASSUMPTION_I", "?A ==> ASSUMPTION ?A",
     template_implication
      ([template_predicate (template_var 0)],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("HOL.ASSUMPTION_D", "ASSUMPTION ?A ==> ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 0, template_var 0))],
       template_predicate (template_var 0))),
    ("IO.exec_return", "exec (IO.return ?a) ?world = ?world",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_var 0)),
    ("IO.left_id", "IO.return ?a >>= ?f = ?f ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Complete_Lattices.bind_UNION", "?A >>= ?f = \<Union> (?f ` ?A)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("IO.exec_Abs_io", "exec (Abs_io ?f) ?world = snd (?f ?world)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0, template_app (template_var 1, template_var 0)))),
    ("IO.eval_then",
     "eval (?io\<^sub>1 >>= (%_. ?io\<^sub>2)) ?world =
      eval ?io\<^sub>2 (exec ?io\<^sub>1 ?world)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Complete_Lattices.UNION_singleton_eq_range",
     "(UN x:?A. {?f x}) = ?f ` ?A",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("IO.exec_then",
     "exec (?io\<^sub>1 >>= (%_. ?io\<^sub>2)) ?world =
      exec ?io\<^sub>2 (exec ?io\<^sub>1 ?world)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("IO.bind_assoc", "?m >>= ?f >>= ?g = ?m >>= (%x. ?f x >>= ?g)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Relation.converse_UNION",
     "(\<Union> (?r ` ?S))^-1 = (UN x:?S. (?r x)^-1)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Relation.sym_UNION",
     "ALL x:?S. sym (?r x) ==> sym (\<Union> (?r ` ?S))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("IO.eval_bind",
     "eval (?io\<^sub>1 >>= ?io\<^sub>2) ?world =
      eval (?io\<^sub>2 (eval ?io\<^sub>1 ?world))
       (exec ?io\<^sub>1 ?world)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_var 1,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("IO.exec_bind",
     "exec (?io\<^sub>1 >>= ?io\<^sub>2) ?world =
      exec (?io\<^sub>2 (eval ?io\<^sub>1 ?world))
       (exec ?io\<^sub>1 ?world)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_var 1,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Set_Algebras.set_times_UNION_distrib",
     "?A * \<Union> (?M ` ?I) = (UN i:?I. ?A * ?M i)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Set_Algebras.set_times_UNION_distrib",
     "\<Union> (?M ` ?I) * ?A = (UN i:?I. ?M i * ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Relation.relcomp_UNION_distrib",
     "?s O \<Union> (?r ` ?I) = (UN i:?I. ?s O ?r i)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Relation.relcomp_UNION_distrib2",
     "\<Union> (?r ` ?I) O ?s = (UN i:?I. ?r i O ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, t_empty), template_var 1)))),
    ("Complete_Lattices.UNION_eq",
     "\<Union> (?B ` ?A) = {y. EX x:?A. y : ?B x}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Complete_Lattices.UNION_empty_conv",
     "({} = \<Union> (?B ` ?A)) = (ALL x:?A. ?B x = {})",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty), template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Complete_Lattices.UNION_empty_conv",
     "(\<Union> (?B ` ?A) = {}) = (ALL x:?A. ?B x = {})",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty), template_var 0))),
         template_hole 1),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Relation.refl_on_UNION",
     "ALL x:?S. refl_on (?A x) (?r x) ==>
      refl_on (\<Union> (?A ` ?S)) (\<Union> (?r ` ?S))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 2))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("Lifting_Set.UNION_transfer",
     "rel_fun (rel_set ?A) (rel_fun (rel_fun ?A (rel_set ?B)) (rel_set ?B))
       (%A f. \<Union> (f ` A)) (%A f. \<Union> (f ` A))",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 1)),
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_app (template_hole 4, template_var 0))),
                 template_app (template_hole 4, template_var 0))),
             t_empty),
           t_empty)
         )),
    ("Complete_Lattices.SUP_UNION",
     "Sup (?f ` \<Union> (?g ` ?A)) = (SUP y\<in>?A. Sup (?f ` ?g y))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, t_empty), template_var 0)))),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 0, t_empty), template_var 0)))),
    ("Complete_Lattices.UNION_fun_upd",
     "\<Union> (?A(?i := ?B) ` ?J) =
      \<Union> (?A ` (?J - {?i})) Un (if ?i : ?J then ?B else {})",
     template_equation
      (template_app
        (template_hole 9,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 3),
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app (template_hole 4, template_var 2),
                   template_hole 3))))),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_var 1),
           template_hole 0)))),
    ("Lifting_Set.rel_set_UNION",
     "[| rel_set ?Q ?A ?B; rel_fun ?Q (rel_set ?R) ?f ?g |]
      ==> rel_set ?R (\<Union> (?f ` ?A)) (\<Union> (?g ` ?B))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 5),
                  template_app (template_hole 4, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 4))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 3)))
           ))),
    ("Hilbert_Choice.Ex_inj_on_UNION_Sigma",
     "EX f. inj_on f (\<Union> (?A ` ?I)) &
            f ` \<Union> (?A ` ?I) <= Sigma ?I ?A",
     template_predicate (template_app (template_hole 7, t_empty))),
    ("Binomial.card_UNION",
     "[| finite ?A; ALL k:?A. finite k |]
      ==> card (\<Union> ?A) =
          nat (SUM I | I <= ?A & I ~= {}.
                  (- 1) ^ (card I + 1) * int (card (\<Inter> I)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 22, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 0), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 18,
           template_app (template_hole 17, template_var 0)),
         template_app
          (template_hole 16,
           template_app
            (template_app (template_hole 15, t_empty),
             template_app (template_hole 5, t_empty)))))),
    ("Complete_Lattices.inj_on_UNION_chain",
     "[| !!i j. [| i : ?I; j : ?I |] ==> ?A i <= ?A j | ?A j <= ?A i;
         !!i. i : ?I ==> inj_on ?f (?A i) |]
      ==> inj_on ?f (\<Union> (?A ` ?I))",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 2)))
           ))),
    ("Conditionally_Complete_Lattices.cSUP_UNION",
     "[| ?A ~= {}; !!x. x : ?A ==> ?B x ~= {};
         bdd_above (UN x:?A. ?f ` ?B x) |]
      ==> Sup (?f ` \<Union> (?B ` ?A)) = (SUP x\<in>?A. Sup (?f ` ?B x))",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 13)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, t_empty), template_var 2)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty),
                 template_var 2)))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("Conditionally_Complete_Lattices.cINF_UNION",
     "[| ?A ~= {}; !!x. x : ?A ==> ?B x ~= {};
         bdd_below (UN x:?A. ?f ` ?B x) |]
      ==> Inf (?f ` \<Union> (?B ` ?A)) = (INF x\<in>?A. Inf (?f ` ?B x))",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 13)),
        template_predicate (template_app (template_hole 12, t_empty)),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, t_empty), template_var 2)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty),
                 template_var 2)))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, t_empty), template_var 2))))),
    ("Complete_Lattices.bij_betw_UNION_chain",
     "[| !!i j. [| i : ?I; j : ?I |] ==> ?A i <= ?A j | ?A j <= ?A i;
         !!i. i : ?I ==> bij_betw ?f (?A i) (?A' i) |]
      ==> bij_betw ?f (\<Union> (?A ` ?I)) (\<Union> (?A' ` ?I))",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, t_empty),
                   template_var 3))),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, t_empty), template_var 3)))
           )))]
