   [("Sum_Type.Inl_Rep_inject", "inj_on Inl_Rep ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Sum_Type.Inr_Rep_inject", "inj_on Inr_Rep ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Sum_Type.inj_Inl", "inj_on Inl ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Sum_Type.inj_Inr", "inj_on Inr ?A",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Sum_Type.Inl_RepI", "Inl_Rep ?a : Sum_Type.sum",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Sum_Type.Inr_RepI", "Inr_Rep ?b : Sum_Type.sum",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_hole 0)
         )),
    ("Sum_Type.Inl_Rep_not_Inr_Rep", "Inl_Rep ?a ~= Inr_Rep ?b",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Sum_Type.Inl_not_Inr", "Inl ?a ~= Inr ?b",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Sum_Type.Inr_not_Inl", "Inr ?b ~= Inl ?a",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Sum_Type.case_sum_KK", "case_sum (%x. ?a) (%x. ?a) = (%x. ?a)",
     template_equation
      (template_app (template_app (template_hole 0, t_empty), t_empty),
       t_empty)),
    ("Sum_Type.inj_on_Abs_sum", "?A <= Sum_Type.sum ==> inj_on Abs_sum ?A",
     template_implication
      ([template_inequation (less_equals, template_var 0, template_hole 2)],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("Sum_Type.Suml_inject",
     "Sum_Type.Suml ?f = Sum_Type.Suml ?g ==> ?f = ?g",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Sum_Type.Sumr_inject",
     "Sum_Type.Sumr ?f = Sum_Type.Sumr ?g ==> ?f = ?g",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Sum_Type.Inl_inject", "Inl ?x = Inl ?y ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Sum_Type.Inr_inject", "Inr ?x = Inr ?y ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Sum_Type.surjective_sum",
     "case_sum (%x. ?f (Inl x)) (%y. ?f (Inr y)) = ?f",
     template_equation
      (template_app (template_app (template_hole 2, t_empty), t_empty),
       template_var 0)),
    ("Sum_Type.InlI", "?a : ?A ==> Inl ?a : ?A <+> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Sum_Type.InrI", "?b : ?B ==> Inr ?b : ?A <+> ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Sum_Type.Plus_eq_empty_conv",
     "(?A <+> ?B = {}) = (?A = {} & ?B = {})",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 6, template_var 1), template_var 0),
         template_hole 5),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Sum_Type.split_sum_all",
     "(ALL x. ?P x) = ((ALL x. ?P (Inl x)) & (ALL x. ?P (Inr x)))",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app (template_hole 1, t_empty)))),
    ("Sum_Type.split_sum_ex",
     "(EX x. ?P x) = ((EX x. ?P (Inl x)) | (EX x. ?P (Inr x)))",
     template_equation
      (template_app (template_hole 5, t_empty),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app (template_hole 1, t_empty)))),
    ("Set_Interval.Sum_Icc_nat",
     "\<Sum> {?m..?n} = (?n * (?n + 1) - ?m * (?m - 1)) div 2",
     template_equation
      (template_app
        (template_app (template_hole 9, t_empty),
         template_app
          (template_app (template_hole 8, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 0),
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_hole 3))),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_app
                (template_app (template_hole 6, template_var 1),
                 template_hole 3)))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Set_Interval.Sum_Ico_nat",
     "\<Sum> {?m..<?n} = (?n * (?n - 1) - ?m * (?m - 1)) div 2",
     template_equation
      (template_app
        (template_app (template_hole 8, t_empty),
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_hole 3))),
             template_app
              (template_app (template_hole 4, template_var 1),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 3)))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0))))),
    ("Sum_Type.case_sum_inject",
     "[| case_sum ?f1.0 ?f2.0 = case_sum ?g1.0 ?g2.0;
         [| ?f1.0 = ?g1.0; ?f2.0 = ?g2.0 |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_var 1)),
        template_implication
         ([template_equation (template_var 4, template_var 2)],
          template_implication
           ([template_equation (template_var 3, template_var 1)],
            template_predicate (template_var 0)))],
       template_predicate (template_var 0))),
    ("Sum_Type.sumE",
     "[| !!x. ?s = Inl x ==> ?P; !!y. ?s = Inr y ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Set_Interval.Sum_Icc_int",
     "?m <= ?n ==> \<Sum> {?m..?n} = (?n * (?n + 1) - ?m * (?m - 1)) div 2",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 9, t_empty),
           template_app
            (template_app (template_hole 8, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_app (template_hole 4, template_var 0),
                     template_hole 3))),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_app
                  (template_app (template_hole 6, template_var 1),
                   template_hole 3)))),
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_hole 0)))))),
    ("Sum_Type.PlusE",
     "[| ?u : ?A <+> ?B; !!x. [| x : ?A; ?u = Inl x |] ==> ?P;
         !!y. [| y : ?B; ?u = Inr y |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0)))]
