   [("Frame.frame_perm_empty", "[] \<bullet> ?frame_Rep = ?frame_Rep",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Frame.permLength", "length (?p \<bullet> ?xvec) = length ?xvec",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Frame.frame_unfolded_perm_eq",
     "perm_frame_Rep_noption ?pi ?noption = ?pi \<bullet> ?noption",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Frame.frameChainAppend",
     "\<lparr>\<nu>*(?xvec @ ?yvec)\<rparr>?F =
      \<lparr>\<nu>*?xvec\<rparr>\<lparr>\<nu>*?yvec\<rparr>?F",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Frame.frame_perm_append",
     "(?pi1.0 @ ?pi2.0) \<bullet> ?frame_Rep =
      ?pi1.0 \<bullet> ?pi2.0 \<bullet> ?frame_Rep",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Frame.frameResChainEqvt",
     "?perm \<bullet> \<lparr>\<nu>*?xvec\<rparr>?F =
      \<lparr>\<nu>*?perm \<bullet> ?xvec\<rparr>?perm \<bullet> ?F",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Frame.frameResChainFresh",
     "?x \<sharp> \<lparr>\<nu>*?xvec\<rparr>?F =
      (?x mem ?xvec | ?x \<sharp> ?F)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Frame.frameEq",
     "(\<langle>\<epsilon>, ?\<Psi>'\<rangle> =
       \<langle>?A\<^sub>F, ?\<Psi>\<rangle>) =
      (?A\<^sub>F = [] & ?\<Psi> = ?\<Psi>')",
     template_bimplication
      (template_equation
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 5, template_var 0))),
       template_dunno)),
    ("Frame.frameEq",
     "(\<langle>?A\<^sub>F, ?\<Psi>\<rangle> =
       \<langle>\<epsilon>, ?\<Psi>'\<rangle>) =
      (?A\<^sub>F = [] & ?\<Psi> = ?\<Psi>')",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app (template_hole 4, template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_dunno)),
    ("Frame.frameResChainFreshSet",
     "?Xs \<sharp>* (\<lparr>\<nu>*?xvec\<rparr>?F) =
      (ALL x:?Xs. x mem ?xvec | x \<sharp> ?F)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 4, template_var 2), t_empty)))]
