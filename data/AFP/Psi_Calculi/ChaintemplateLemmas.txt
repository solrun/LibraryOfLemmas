   [("Chain.fin_supp", "finite (supp ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Chain.list_fresh", "?a \<sharp> []",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Chain.freshSets", "{} \<sharp>* ?C",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Chain.fresh_star_list_nil", "?Xs \<sharp>* []",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Chain.freshSets", "[] \<sharp>* ?C",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Chain.fresh_star_list_nil", "?xvec \<sharp>* []",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Chain.name_list_supp", "set ?xvec = supp ?xvec",
     template_equation
      (template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Chain.calc_atm", "[] \<bullet> ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Chain.freshSets", "{} \<sharp>* [?y].?C",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Chain.freshSets", "[] \<sharp>* [?y].?C",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Chain.name_injection", "EX x. ?y = name x",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("Chain.supp_atm", "supp ?x = {?x}",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Chain.lengthClosed", "length (?p \<bullet> ?xs) = length ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Chain.supp_cart_prod_empty", "supp (?Xs \<times> {}) = {}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0), t_empty)),
       template_hole 0)),
    ("Chain.supp_cart_prod_empty", "supp ({} \<times> ?Xs) = {}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1), t_empty)),
       template_hole 0)),
    ("Chain.freshChainSym", "?xvec \<sharp>* ?yvec = ?yvec \<sharp>* ?xvec",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Chain.freshStarAtom", "?xvec \<sharp>* ?x = ?x \<sharp> ?xvec",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Chain.distinctClosed", "distinct (?p \<bullet> ?xs) = distinct ?xs",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Chain.Empty", "composePerm [] (?v # ?va) = []",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_hole 0)),
    ("Chain.Empty", "composePerm (?v # ?va) [] = []",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_hole 1),
       template_hole 0)),
    ("Chain.substFreshAux", "?xvec \<sharp>* (supp ?C - set ?xvec)",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 0, template_var 1)))
         )),
    ("Chain.simps", "?pi \<bullet> rev ?pi \<bullet> ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_var 0)),
    ("Chain.simps", "rev ?pi \<bullet> ?pi \<bullet> ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_var 0)),
    ("Chain.perm_pi_simp", "?pi \<bullet> rev ?pi \<bullet> ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0)),
       template_var 0)),
    ("Chain.perm_pi_simp", "rev ?pi \<bullet> ?pi \<bullet> ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_var 0)),
    ("Chain.fresh_atm", "?a \<sharp> ?b = (?a ~= ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("Chain.setToListFresh", "?x \<sharp> set ?yvec = ?x \<sharp> ?yvec",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Chain.name_list_set_fresh",
     "set ?xvec \<sharp>* ?x = ?xvec \<sharp>* ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Chain.setToListFresh",
     "?Xs \<sharp>* set ?yvec = ?Xs \<sharp>* ?yvec",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Chain.setToListFresh",
     "set ?xvec \<sharp>* ?Xs = ?xvec \<sharp>* ?Xs",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Chain.setToListFresh",
     "?xvec \<sharp>* set ?yvec = ?xvec \<sharp>* ?yvec",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Chain.distinctPermClosed",
     "distinctPerm ?p ==> distinctPerm (?q \<bullet> ?p)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Chain.lengthEqvt",
     "?p \<bullet> length ?xs = length (?p \<bullet> ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Chain.supp_eqvt", "?pi \<bullet> supp ?x = supp (?pi \<bullet> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Chain.distinctEqvt",
     "?p \<bullet> distinct ?xs = distinct (?p \<bullet> ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Chain.setFresh", "(?x ~: set ?xvec) = ?x \<sharp> ?xvec",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Chain.memFreshSimp", "(?y ~: set ?yvec) = ?y \<sharp> ?yvec",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Chain.swap_simps", "[(?a, ?b)] \<bullet> ?a = ?b",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)),
         template_var 1),
       template_var 0)),
    ("Chain.swap_simps", "[(?a, ?b)] \<bullet> ?b = ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_hole 0)),
         template_var 0),
       template_var 1)),
    ("Chain.exists_fresh'", "finite (supp ?x) ==> EX c. c \<sharp> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 0))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Chain.freshPerm", "?x \<sharp> ?p ==> ?p \<bullet> ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Chain.freshChainPermSimp",
     "?xvec \<sharp>* ?p ==> ?p \<bullet> ?xvec = ?xvec",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 1))),
    ("Zorn.mono_Chains", "?r <= ?s ==> Chains ?r <= Chains ?s",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Chain.perm_app",
     "?pi \<bullet> ?f ?x = (?pi \<bullet> ?f) (?pi \<bullet> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app (template_var 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Chain.simps", "[(?a, ?a)] \<bullet> ?x = [] \<bullet> ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 1)),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_hole 0), template_var 0))),
    ("Chain.abs_supp", "supp ([?a].?x) = supp ?x - {?a}",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("Chain.perm_bij", "(?pi \<bullet> ?x = ?pi \<bullet> ?y) = (?x = ?y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Chain.fresh_bij",
     "?pi \<bullet> ?a \<sharp> ?pi \<bullet> ?x = ?a \<sharp> ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Chain.fresh_star_bij",
     "(?pi \<bullet> ?a) \<sharp>* (?pi \<bullet> ?x) = ?a \<sharp>* ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Chain.fresh_star_bij",
     "(?pi \<bullet> ?b) \<sharp>* (?pi \<bullet> ?x) = ?b \<sharp>* ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), template_var 0))),
    ("Chain.subsetClosed",
     "(?p \<bullet> ?S <= ?p \<bullet> ?T) = (?S <= ?T)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Chain.distinctPermCancel",
     "distinctPerm ?p ==> ?p \<bullet> ?p \<bullet> ?T = ?T",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_var 0))),
    ("Chain.freshChainPermSimp",
     "?xvec \<sharp>* ?p ==> rev ?p \<bullet> ?xvec = ?xvec",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 1),
         template_var 1))),
    ("Zorn.Chains_relation_of",
     "?C : Chains (relation_of ?P ?A) ==> ?C <= ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)))
            )],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Chain.fresh_left",
     "?a \<sharp> ?pi \<bullet> ?x = rev ?pi \<bullet> ?a \<sharp> ?x",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 2)),
         template_var 0))),
    ("Chain.fresh_right",
     "?pi \<bullet> ?a \<sharp> ?x = ?a \<sharp> rev ?pi \<bullet> ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 0)))),
    ("Chain.eqvtUnion",
     "[| eqvt ?Rel; eqvt ?Rel' |] ==> eqvt (?Rel Un ?Rel')",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Chain.perm_compose",
     "?pi2.0 \<bullet> ?pi1.0 \<bullet> ?x =
      (?pi2.0 \<bullet> ?pi1.0) \<bullet> ?pi2.0 \<bullet> ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Chain.abs_perm",
     "?pi \<bullet> [?a].?x = [(?pi \<bullet> ?a)].(?pi \<bullet> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Chain.set_diff_eqvt",
     "?pi \<bullet> (?X - ?Y) = ?pi \<bullet> ?X - ?pi \<bullet> ?Y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Chain.list_fresh",
     "?a \<sharp> (?xs @ ?ys) = (?a \<sharp> ?xs & ?a \<sharp> ?ys)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Chain.list_fresh",
     "?a \<sharp> (?x # ?xs) = (?a \<sharp> ?x & ?a \<sharp> ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Chain.simps",
     "?a \<sharp> (?x, ?y) = (?a \<sharp> ?x & ?a \<sharp> ?y)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Chain.abs_fresh", "?b \<sharp> [?a].?x = (?b = ?a | ?b \<sharp> ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Chain.freshSets",
     "insert ?x ?X \<sharp>* ?C = (?x \<sharp> ?C & ?X \<sharp>* ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Chain.unionSimps",
     "(?Xs Un ?Ys) \<sharp>* ?C = (?Xs \<sharp>* ?C & ?Ys \<sharp>* ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Chain.abs_fresh_set_star",
     "?X \<sharp>* [?a].?P = (?X - {?a}) \<sharp>* ?P",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_var 0))),
    ("Chain.fresh_star_list_cons",
     "?Xs \<sharp>* (?x # ?xs) = (?Xs \<sharp>* ?x & ?Xs \<sharp>* ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Chain.freshStarPair",
     "?X \<sharp>* (?x, ?y) = (?X \<sharp>* ?x & ?X \<sharp>* ?y)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Chain.freshSets",
     "(?x # ?xvec) \<sharp>* ?C = (?x \<sharp> ?C & ?xvec \<sharp>* ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Chain.freshChainAppend",
     "(?xvec @ ?yvec) \<sharp>* ?C =
      (?xvec \<sharp>* ?C & ?yvec \<sharp>* ?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Chain.fresh_star_list_cons",
     "?xvec \<sharp>* (?x # ?xs) =
      (?xvec \<sharp>* ?x & ?xvec \<sharp>* ?xs)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Chain.fresh_star_list_append",
     "?A \<sharp>* (?B @ ?C) = (?A \<sharp>* ?B & ?A \<sharp>* ?C)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Chain.freshStarPair",
     "?xvec \<sharp>* (?x, ?y) = (?xvec \<sharp>* ?x & ?xvec \<sharp>* ?y)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Chain.subsetEqvt",
     "?p \<bullet> (?S <= ?T) = (?p \<bullet> ?S <= ?p \<bullet> ?T)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Chain.eq_eqvt",
     "?pi \<bullet> (?x = ?y) = (?pi \<bullet> ?x = ?pi \<bullet> ?y)",
     template_bimplication
      (template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0))
           ),
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Chain.fresh_eqvt",
     "?pi \<bullet> ?a \<sharp> ?x =
      ?pi \<bullet> ?a \<sharp> ?pi \<bullet> ?x",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Chain.fresh_star_eqvt",
     "?pi \<bullet> ?a \<sharp>* ?x =
      (?pi \<bullet> ?a) \<sharp>* (?pi \<bullet> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Chain.fresh_star_eqvt",
     "?pi \<bullet> ?b \<sharp>* ?x =
      (?pi \<bullet> ?b) \<sharp>* (?pi \<bullet> ?x)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Chain.subseteq_eqvt",
     "?pi \<bullet> (?X <= ?Y) = (?pi \<bullet> ?X <= ?pi \<bullet> ?Y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Chain.in_eqvt",
     "?pi \<bullet> (?x : ?X) = (?pi \<bullet> ?x : ?pi \<bullet> ?X)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Chain.memClosed", "?p \<bullet> ?x mem ?p \<bullet> ?xs = ?x mem ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))),
       template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Chain.map_eqvt",
     "?p \<bullet> map ?f ?lst = map (?p \<bullet> ?f) (?p \<bullet> ?lst)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Chain.composePermEqvt",
     "?p \<bullet> composePerm ?xvec ?yvec =
      composePerm (?p \<bullet> ?xvec) (?p \<bullet> ?yvec)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Chain.eqvtPerm", "eqvt ?X ==> [(?x, ?y)] \<bullet> ?X = ?X",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_hole 0)),
           template_var 2),
         template_var 2))),
    ("Chain.perm_compose'",
     "(?pi2.0 \<bullet> ?pi1.0) \<bullet> ?x =
      ?pi2.0 \<bullet> ?pi1.0 \<bullet> rev ?pi2.0 \<bullet> ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 2)),
             template_var 0))))),
    ("Chain.all_eqvt",
     "?pi \<bullet> HOL.induct_forall ?P =
      HOL.induct_forall (%x. ?pi \<bullet> ?P (rev ?pi \<bullet> x))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Chain.abs_fresh_list_star",
     "?xvec \<sharp>* [?a].?P = (set ?xvec - {?a}) \<sharp>* ?P",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))),
         template_var 0))),
    ("Chain.abs_fresh_list_star'",
     "?a \<sharp> ?xvec ==> ?xvec \<sharp>* [?a].?P = ?xvec \<sharp>* ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Chain.swapStarFresh",
     "?x \<sharp> ?p ==> ?x \<sharp> ?p \<bullet> ?T = ?x \<sharp> ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Chain.permStarFresh",
     "?xvec \<sharp>* ?p ==>
      ?xvec \<sharp>* (?p \<bullet> ?T) = ?xvec \<sharp>* ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Chain.eqvtI", "[| eqvt ?X; ?x : ?X |] ==> ?p \<bullet> ?x : ?X",
     template_implication
      ([template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)),
             template_var 2)
           ))),
    ("Chain.memFresh", "[| ?x \<sharp> ?l; ?p mem ?l |] ==> ?x \<sharp> ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Chain.pt_set_nil",
     "[| pt TYPE(?'a) TYPE(?'x); Nominal.at TYPE(?'x) |]
      ==> [] \<bullet> ?Xs = ?Xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_hole 4)
            ),
        template_predicate
         (template_app (template_hole 3, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 0),
         template_var 0))),
    ("Chain.memFreshChain",
     "[| ?p mem ?l; ?Xs \<sharp>* ?l |] ==> ?Xs \<sharp>* ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Chain.memFreshChain",
     "[| ?p mem ?l; ?xvec \<sharp>* ?l |] ==> ?xvec \<sharp>* ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 2)
           ))),
    ("Chain.permChainSimps",
     "(composePerm ?xvec ?yvec @ ?perm) \<bullet> ?p =
      [?xvec ?yvec] \<bullet>\<^sub>v ?perm \<bullet> ?p",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Chain.name_swap", "[(?a, ?b)] \<bullet> ?x = [(?b, ?a)] \<bullet> ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_hole 0)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 2)),
             template_hole 0)),
         template_var 0))),
    ("Chain.name_swap_bij",
     "[(?a, ?b)] \<bullet> [(?a, ?b)] \<bullet> ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_hole 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_hole 0)),
           template_var 0)),
       template_var 0)),
    ("Chain.perm_swap", "[(?a, ?b)] \<bullet> [(?a, ?b)] \<bullet> ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_hole 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_hole 0)),
           template_var 0)),
       template_var 0)),
    ("Chain.perm_swap", "[(?a, ?b)] \<bullet> [(?b, ?a)] \<bullet> ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_hole 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 2)),
               template_hole 0)),
           template_var 0)),
       template_var 0)),
    ("Chain.memEqvt",
     "?p \<bullet> ?x mem ?xs = ?p \<bullet> ?x mem ?p \<bullet> ?xs",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Chain.subsetClosed'",
     "(set (?p \<bullet> ?xvec) <= supp (?p \<bullet> ?P)) =
      (set ?xvec <= supp ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Chain.Step",
     "composePerm (?x # ?xs) (?y # ?ys) = (?x, ?y) # composePerm ?xs ?ys",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Chain.calc_atm",
     "((?a, ?b) # ?pi) \<bullet> ?x = swap (?a, ?b) (?pi \<bullet> ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Zorn.Chains_subset",
     "Chains ?r <= {C. pred_on.chain UNIV (%x y. (x, y) : ?r) C}",
     template_inequation
      (less_equals, template_app (template_hole 5, template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Chain.fresh_perm_app",
     "[| ?a \<sharp> ?pi; ?a \<sharp> ?x |]
      ==> ?a \<sharp> ?pi \<bullet> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Chain.fresh_star_perm_app",
     "[| ?Xs \<sharp>* ?p; ?Xs \<sharp>* ?C |]
      ==> ?Xs \<sharp>* (?p \<bullet> ?C)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Chain.fresh_star_perm_app",
     "[| ?xvec \<sharp>* ?p; ?xvec \<sharp>* ?C |]
      ==> ?xvec \<sharp>* (?p \<bullet> ?C)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Chain.subsetFresh",
     "[| set ?xvec <= set ?yvec; ?yvec \<sharp>* ?C |]
      ==> ?xvec \<sharp>* ?C",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("Chain.all_eqvt",
     "?pi \<bullet> (ALL x. ?P x) =
      (ALL x. ?pi \<bullet> ?P (rev ?pi \<bullet> x))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, t_empty)),
       template_app (template_hole 2, t_empty))),
    ("Chain.ex_eqvt",
     "?pi \<bullet> (EX x. ?P x) =
      (EX x. ?pi \<bullet> ?P (rev ?pi \<bullet> x))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, t_empty)),
       template_app (template_hole 2, t_empty))),
    ("Chain.ex1_eqvt",
     "?pi \<bullet> (EX! x. ?P x) =
      (EX! x. ?pi \<bullet> ?P (rev ?pi \<bullet> x))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, t_empty)),
       template_app (template_hole 2, t_empty))),
    ("Chain.abs_supp",
     "finite (supp ?x) ==> supp ([?a].?x) = supp ?x - {?a}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 6, template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Chain.exists_fresh",
     "[| finite (supp ?x); !!c. c \<sharp> ?x ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 1))
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("Chain.consPerm",
     "((?x, ?y) # ?p) \<bullet> ?C = [(?x, ?y)] \<bullet> ?p \<bullet> ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_hole 0)),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Chain.calc_atm",
     "swap (?a, ?b) ?c =
      (if ?a = ?c then ?b else if ?b = ?c then ?a else ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 2),
                   template_var 0)),
               template_var 1),
             template_app
              (template_app
                (template_app
                  (template_hole 0,
                   template_app
                    (template_app (template_hole 3, template_var 1),
                     template_var 0)),
                 template_var 2),
               template_var 0))
           ))),
    ("Zorn.Chains_init_seg_of_Union",
     "[| ?R : Chains init_seg_of; ?r : ?R |]
      ==> ?r initial_segment_of \<Union> ?R",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_hole 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 1))),
             template_hole 4)
           ))),
    ("Chain.abs_fresh",
     "finite (supp ?x) ==>
      ?b \<sharp> [?a].?x = (?b = ?a | ?b \<sharp> ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 2))
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 4, template_var 1),
                template_app
                 (template_app (template_hole 3, template_var 0),
                  template_var 2))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2))
             )))),
    ("Chain.supp_subset",
     "[| ?Xs <= ?Ys; finite ?Xs; finite ?Ys |] ==> supp ?Xs <= supp ?Ys",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Chain.permChainEqvt",
     "?p \<bullet> [?xvec ?yvec] \<bullet>\<^sub>v ?x =
      [?p \<bullet>
       ?xvec ?p \<bullet> ?yvec] \<bullet>\<^sub>v ?p \<bullet> ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1))),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Chain.freshSets",
     "insert ?x ?X \<sharp>* [?y].?C =
      (?x \<sharp> [?y].?C & ?X \<sharp>* [?y].?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Chain.freshSets",
     "(?x # ?xvec) \<sharp>* [?y].?C =
      (?x \<sharp> [?y].?C & ?xvec \<sharp>* [?y].?C)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 0))),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Chain.memClosed'",
     "(?p \<bullet> ?x, ?p \<bullet> ?y) mem ?p \<bullet> ?xs =
      (?x, ?y) mem ?xs",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 1))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Chain.simps",
     "[| ?a \<sharp> ?x; ?b \<sharp> ?x |]
      ==> [(?a, ?b)] \<bullet> ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               template_hole 0)),
           template_var 1),
         template_var 1))),
    ("Chain.perm_fresh_fresh",
     "[| ?a \<sharp> ?x; ?b \<sharp> ?x |]
      ==> [(?a, ?b)] \<bullet> ?x = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               template_hole 0)),
           template_var 1),
         template_var 1))),
    ("Zorn.Chains_subset'",
     "refl ?r ==>
      {C. pred_on.chain UNIV (%x y. (x, y) : ?r) C} <= Chains ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 0)
            )],
       template_inequation
        (less_equals, template_app (template_hole 4, t_empty),
         template_app (template_hole 0, template_var 0)))),
    ("Chain.pt_set_append",
     "[| pt TYPE(?'a) TYPE(?'x); Nominal.at TYPE(?'x) |]
      ==> (?pi1.0 @ ?pi2.0) \<bullet> ?Xs =
          ?pi1.0 \<bullet> ?pi2.0 \<bullet> ?Xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_hole 4)
            ),
        template_predicate
         (template_app (template_hole 3, template_hole 4))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Chain.permChainEqvt",
     "?p \<bullet> [?xvec ?yvec]\<^sup>- \<bullet>\<^sub>v ?x =
      [?p \<bullet>
       ?xvec ?p \<bullet> ?yvec]\<^sup>- \<bullet>\<^sub>v ?p \<bullet> ?x",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1))),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)))),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_var 0)))),
    ("Chain.swap_simps",
     "[| ?a ~= ?c; ?b ~= ?c |] ==> [(?a, ?b)] \<bullet> ?c = ?c",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_var 1)),
        template_negation
         (template_equation (template_var 0, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 0)),
               template_hole 0)),
           template_var 1),
         template_var 1))),
    ("Chain.pt_set_prm_eq",
     "[| pt TYPE(?'a) TYPE(?'x); Nominal.at TYPE(?'x);
          ?pi1.0 \<triangleq> ?pi2.0  |]
      ==> ?pi1.0 \<bullet> ?Xs = ?pi2.0 \<bullet> ?Xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_hole 4)
            ),
        template_predicate
         (template_app (template_hole 3, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Chain.distinctPermSimps",
     "distinctPerm ((?a, ?b) # ?p) =
      (distinctPerm ?p & ?a ~= ?b & ?a \<sharp> ?p & ?b \<sharp> ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 6, template_var 0)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))))
           ))),
    ("Chain.the_eqvt",
     "EX! x. ?P x ==>
      ?pi \<bullet> (THE x. ?P x) =
      (THE x. ?pi \<bullet> ?P (rev ?pi \<bullet> x))",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0),
           template_app (template_hole 2, t_empty)),
         template_app (template_hole 2, t_empty)))),
    ("Zorn.Chains_inits_DiffI",
     "?R : Chains init_seg_of ==> {r - ?s |r. r : ?R} : Chains init_seg_of",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_hole 6))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8, template_app (template_hole 5, t_empty)),
             template_app (template_hole 7, template_hole 6))
           ))),
    ("Chain.permChainBij",
     "length ?xvec = length ?yvec ==>
      ([?xvec ?yvec] \<bullet>\<^sub>v ?p =
       [?xvec ?yvec] \<bullet>\<^sub>v ?q) =
      (?p = ?q)",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 3),
          template_app (template_hole 4, template_var 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 1),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Chain.freshAlphaPerm",
     "[| set ?p <= ?Xs \<times> ?Ys; ?Xs \<sharp>* ?xvec;
         ?Ys \<sharp>* ?xvec |]
      ==> ?xvec \<sharp>* ?p",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 3),
          template_app
           (template_app (template_hole 2, template_var 2), t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 3)
           ))),
    ("Chain.freshAlphaSwap",
     "[| set ?p <= ?Xs \<times> ?Ys; ?Xs \<sharp>* ?x; ?Ys \<sharp>* ?x |]
      ==> ?x \<sharp> ?p",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 3, template_var 3),
          template_app
           (template_app (template_hole 2, template_var 2), t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 3)
           ))),
    ("Chain.chainFreshFresh",
     "[| ?x \<sharp> ?xvec; ?y \<sharp> ?xvec |]
      ==> ?xvec \<sharp>* ([(?x, ?y)] \<bullet> ?p) = ?xvec \<sharp>* ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 1)),
                 template_hole 0)),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Chain.permChainBij",
     "length ?xvec = length ?yvec ==>
      ([?xvec ?yvec]\<^sup>- \<bullet>\<^sub>v ?p =
       [?xvec ?yvec]\<^sup>- \<bullet>\<^sub>v ?q) =
      (?p = ?q)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 3),
          template_app (template_hole 5, template_var 2))],
       template_bimplication
        (template_equation
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2))),
             template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2))),
             template_var 0)),
         template_equation (template_var 1, template_var 0)))),
    ("Chain.pt_swap",
     "[| pt TYPE(?'a) TYPE(?'x); Nominal.at TYPE(?'x) |]
      ==> [(?a, ?b)] \<bullet> ?x = [(?b, ?a)] \<bullet> ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_hole 6)
            ),
        template_predicate
         (template_app (template_hole 5, template_hole 6))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1)),
               template_hole 0)),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 2)),
               template_hole 0)),
           template_var 0)))),
    ("Chain.permChainFreshFresh",
     "[| ?xvec \<sharp>* ?p; ?yvec \<sharp>* ?p;
         length ?xvec = length ?yvec |]
      ==> [?xvec ?yvec] \<bullet>\<^sub>v ?p = ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 3, template_var 2),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)),
           template_var 1),
         template_var 1))),
    ("Chain.calcChainAtom",
     "[| length ?xvec = length ?yvec; ?x \<sharp> ?xvec;
         ?x \<sharp> ?yvec |]
      ==> [?xvec ?yvec] \<bullet>\<^sub>v ?x = ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_var 0),
         template_var 0))),
    ("Chain.name_set_fresh_fresh",
     "[| set ?pi <= ?Xs \<times> ?Ys; ?Xs \<sharp>* ?x; ?Ys \<sharp>* ?x |]
      ==> ?pi \<bullet> ?x = ?x",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 3),
          template_app
           (template_app (template_hole 3, template_var 2), t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_var 0))),
    ("Chain.permChainFreshFresh",
     "[| ?xvec \<sharp>* ?p; ?yvec \<sharp>* ?p;
         length ?xvec = length ?yvec |]
      ==> [?xvec ?yvec]\<^sup>- \<bullet>\<^sub>v ?p = ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0))),
           template_var 1),
         template_var 1))),
    ("Chain.fresh_aux",
     "[| ?c ~= ?a; ?a \<sharp> ?x; ?c \<sharp> ?x |]
      ==> ?c \<sharp> [(?a, ?b)] \<bullet> ?x",
     template_implication
      ([template_negation
         (template_equation (template_var 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 1, template_var 2),
                       template_var 0)),
                   template_hole 0)),
               template_var 1))
           ))),
    ("Chain.calcChainAtomRev",
     "[| length ?xvec = length ?yvec; ?x \<sharp> ?xvec;
         ?x \<sharp> ?yvec |]
      ==> [?xvec ?yvec]\<^sup>- \<bullet>\<^sub>v ?x = ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_var 0),
         template_var 0))),
    ("Chain.permChainAppend",
     "length ?xvec1.0 = length ?yvec1.0 ==>
      [(?xvec1.0 @ ?xvec2.0) (?yvec1.0 @ ?yvec2.0)] \<bullet>\<^sub>v ?p =
      [?xvec1.0 ?yvec1.0] \<bullet>\<^sub>v [?xvec2.0 ?yvec2.0] \<bullet>\<^sub>v ?p",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 4),
          template_app (template_hole 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1))),
           template_var 0),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 4),
               template_var 3)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_var 0))))),
    ("Chain.calcChain",
     "[| ?yvec \<sharp>* ?xvec; length ?xvec = length ?yvec; distinct ?xvec;
         distinct ?yvec |]
      ==> [?xvec ?yvec] \<bullet>\<^sub>v ?xvec = ?yvec",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 4, template_var 0),
          template_app (template_hole 4, template_var 1)),
        template_predicate (template_app (template_hole 3, template_var 0)),
        template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)),
           template_var 0),
         template_var 1))),
    ("Chain.permChainFresh",
     "[| ?x \<sharp> ?xvec; ?x \<sharp> ?yvec;
         length ?xvec = length ?yvec |]
      ==> ?x \<sharp> [?xvec ?yvec] \<bullet>\<^sub>v ?p = ?x \<sharp> ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Chain.freshStarChainSimps",
     "[| set ?p <= ?Xs \<times> ?Ys; ?Xs \<sharp>* ?xvec;
         ?Ys \<sharp>* ?xvec |]
      ==> ?xvec \<sharp>* (?p \<bullet> ?C) = ?xvec \<sharp>* ?C",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 4),
          template_app
           (template_app (template_hole 4, template_var 3), t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Chain.freshStarSimps",
     "[| set ?p <= ?Xs \<times> ?Ys; ?Xs \<sharp>* ?x; ?Ys \<sharp>* ?x |]
      ==> ?x \<sharp> ?p \<bullet> ?C = ?x \<sharp> ?C",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 5, template_var 4),
          template_app
           (template_app (template_hole 4, template_var 3), t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Chain.freshChainPerm'",
     "[| length ?xvec = length ?yvec; ?yvec \<sharp>* ?p;
         ?xvec \<sharp>* ?yvec; distinct ?yvec |]
      ==> ?xvec \<sharp>* ([?xvec ?yvec] \<bullet>\<^sub>v ?p)",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1)),
               template_var 0))
           ))),
    ("Chain.permChainAppend",
     "length ?xvec1.0 = length ?yvec1.0 ==>
      [(?xvec1.0 @
        ?xvec2.0) (?yvec1.0 @ ?yvec2.0)]\<^sup>- \<bullet>\<^sub>v ?p =
      [?xvec2.0 ?yvec2.0]\<^sup>- \<bullet>\<^sub>v [?xvec1.0 ?yvec1.0]\<^sup>- \<bullet>\<^sub>v ?p",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 4),
          template_app (template_hole 5, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2)),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1)))),
           template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1))),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 3))),
             template_var 0))))),
    ("Chain.pt_ball_eqvt",
     "[| pt TYPE(?'b) TYPE(?'a); Nominal.at TYPE(?'a) |]
      ==> ?pi \<bullet> (ALL x:?Xs. ?P x) =
          (ALL x:?pi \<bullet> ?Xs.
              ?pi \<bullet> ?P (rev ?pi \<bullet> x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_hole 7)
            ),
        template_predicate
         (template_app (template_hole 6, template_hole 7))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           t_empty)))),
    ("Chain.permChainFresh",
     "[| ?x \<sharp> ?xvec; ?x \<sharp> ?yvec;
         length ?xvec = length ?yvec |]
      ==> ?x \<sharp> [?xvec ?yvec]\<^sup>- \<bullet>\<^sub>v ?p =
          ?x \<sharp> ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1))),
             template_var 0)),
         template_app
          (template_app (template_hole 3, template_var 3),
           template_var 0)))),
    ("Chain.perm_cart_prod",
     "[| pt TYPE(?'b) TYPE(?'a); pt TYPE(?'c) TYPE(?'a);
         Nominal.at TYPE(?'a) |]
      ==> ?p \<bullet> ?Xs \<times> ?Ys =
          (?p \<bullet> ?Xs) \<times> ?p \<bullet> ?Ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_hole 8)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_hole 8)
            ),
        template_predicate
         (template_app (template_hole 5, template_hole 8))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1), t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           t_empty)))),
    ("Chain.name_list_avoiding",
     "(!!pi. [| (pi \<bullet> ?xvec) \<sharp>* ?c; distinctPerm pi;
                set pi <= set ?xvec \<times> set (pi \<bullet> ?xvec) |]
             ==> ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("Chain.name_supp_cart_prod",
     "[| finite ?Xs; finite ?Ys; ?Xs ~= {}; ?Ys ~= {} |]
      ==> supp (?Xs \<times> ?Ys) = supp ?Xs Un supp ?Ys",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Chain.name_set_avoiding",
     "[| finite ?X;
         !!pi. [| (pi \<bullet> ?X) \<sharp>* ?c; distinctPerm pi;
                  set pi <= ?X \<times> pi \<bullet> ?X |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Chain.alpha",
     "([?a].?x = [?b].?y) =
      (?a = ?b & ?x = ?y |
       ?a ~= ?b & ?x = [(?a, ?b)] \<bullet> ?y & ?a \<sharp> ?y)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 10, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 6, template_var 2),
                     template_app
                      (template_app
                        (template_hole 4,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_app
                                (template_hole 2, template_var 3),
                               template_var 1)),
                           template_hole 1)),
                       template_var 0))),
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 0))))
           ))),
    ("Chain.alpha'",
     "([?a].?x = [?b].?y) =
      (?a = ?b & ?x = ?y |
       ?a ~= ?b & [(?b, ?a)] \<bullet> ?x = ?y & ?b \<sharp> ?x)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 10, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 6, template_var 2),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_var 1))),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app
                        (template_app
                          (template_hole 4,
                           template_app
                            (template_app
                              (template_hole 3,
                               template_app
                                (template_app
                                  (template_hole 2, template_var 1),
                                 template_var 3)),
                             template_hole 1)),
                         template_var 2)),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2))))
           ))),
    ("Chain.name_fresh_cart_prod",
     "[| finite ?Xs; finite ?Ys; ?Xs ~= {}; ?Ys ~= {} |]
      ==> ?x \<sharp> ?Xs \<times> ?Ys =
          (?x \<sharp> ?Xs & ?x \<sharp> ?Ys)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 2), t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Chain.name_fresh_star_cart_prod",
     "[| finite ?Xs; finite ?Ys; ?Xs ~= {}; ?Ys ~= {} |]
      ==> ?Zs \<sharp>* (?Xs \<times> ?Ys) =
          (?Zs \<sharp>* ?Xs & ?Zs \<sharp>* ?Ys)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 2), t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Chain.name_fresh_star_cart_prod",
     "[| finite ?Xs; finite ?Ys; ?Xs ~= {}; ?Ys ~= {} |]
      ==> ?xvec \<sharp>* (?Xs \<times> ?Ys) =
          (?xvec \<sharp>* ?Xs & ?xvec \<sharp>* ?Ys)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 2), t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Chain.freshChainPerm",
     "[| length ?xvec = length ?yvec; ?yvec \<sharp>* ?C;
         ?xvec \<sharp>* ?yvec; ?x mem ?xvec; distinct ?yvec |]
      ==> ?x \<sharp> [?xvec ?yvec] \<bullet>\<^sub>v ?C",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 3),
          template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 3))
            ),
        template_predicate
         (template_app (template_hole 3, template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2)),
               template_var 1))
           ))),
    ("Chain.permCommute",
     "[| pt TYPE(?'x) TYPE(?'a); Nominal.at TYPE(?'a);
         set ?p <= ?Xs \<times> ?Ys; ?Xs \<sharp>* ?q; ?Ys \<sharp>* ?q |]
      ==> ?p \<bullet> ?q \<bullet> ?P = ?q \<bullet> ?p \<bullet> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_hole 8),
              template_hole 7)
            ),
        template_predicate
         (template_app (template_hole 6, template_hole 7)),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 4),
          template_app
           (template_app (template_hole 3, template_var 3), t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 4),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 4),
             template_var 0))))),
    ("Chain.at_set_avoiding",
     "[| Nominal.at TYPE(?'a); finite ?Xs; finite (supp ?c);
         !!pi. [| (pi \<bullet> ?Xs) \<sharp>* ?c;
                  set pi <= ?Xs \<times> pi \<bullet> ?Xs;
                  distinctPerm pi |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 10, template_hole 9)),
        template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("Chain.supp_member",
     "[| pt TYPE(?'b) TYPE(?'a); Nominal.at TYPE(?'a);
         fs TYPE(?'b) TYPE(?'a); finite ?Xs; ?x : supp ?Xs;
         !!X. [| X : ?Xs; ?x : supp X |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_hole 9),
              template_hole 8)
            ),
        template_predicate
         (template_app (template_hole 7, template_hole 8)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 9),
              template_hole 8)
            ),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 2))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Chain.composePermInduct",
     "[| length ?xvec = length ?yvec; ?P [] [];
         !!x xvec y yvec.
            [| length xvec = length yvec; ?P xvec yvec |]
            ==> ?P (x # xvec) (y # yvec) |]
      ==> ?P ?xvec ?yvec",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_var 0, template_hole 3),
              template_hole 3)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("Chain.alpha_fresh",
     "[| ?c ~= ?a; ?c ~= ?b; ?c \<sharp> ?x; ?c \<sharp> ?y |]
      ==> ([?a].?x = [?b].?y) =
          ([(?a, ?c)] \<bullet> ?x = [(?b, ?c)] \<bullet> ?y)",
     template_implication
      ([template_negation
         (template_equation (template_var 4, template_var 3)),
        template_negation
         (template_equation (template_var 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 0)
            )],
       template_bimplication
        (template_equation
          (template_app
            (template_app (template_hole 5, template_var 3),
             template_var 1),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 0)),
         template_equation
          (template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 4)),
                 template_hole 0)),
             template_var 1),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 4)),
                 template_hole 0)),
             template_var 0))))),
    ("Chain.alpha_fresh'",
     "[| [?a].?x = [?b].?y; ?c ~= ?a; ?c ~= ?b; ?c \<sharp> ?x;
         ?c \<sharp> ?y |]
      ==> ?x = [(?a, ?c)] \<bullet> [(?b, ?c)] \<bullet> ?y",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 8, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_var 1)),
        template_negation
         (template_equation (template_var 0, template_var 4)),
        template_negation
         (template_equation (template_var 0, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 1)
            )],
       template_equation
        (template_var 3,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 0)),
               template_hole 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 0)),
                 template_hole 0)),
             template_var 1))))),
    ("Chain.permSym",
     "[| ?x \<sharp> ?xvec; ?x \<sharp> ?yvec; ?y \<sharp> ?xvec;
         ?y \<sharp> ?yvec; length ?xvec = length ?yvec |]
      ==> [(?x, ?y)] \<bullet> [?xvec ?yvec] \<bullet>\<^sub>v ?p =
          [?xvec ?yvec] \<bullet>\<^sub>v [(?x, ?y)] \<bullet> ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 6, template_var 3),
          template_app (template_hole 6, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 4),
                   template_var 1)),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 4),
                     template_var 1)),
                 template_hole 1)),
             template_var 0))))),
    ("Chain.at_set_avoiding_aux'",
     "[| Nominal.at TYPE(?'a); finite ?Xs; ?Xs <= ?As; finite ?As;
         finite (supp ?c) |]
      ==> EX Ys pi.
             Ys \<sharp>* ?c &
             Ys Int ?As = {} &
             pi \<bullet> ?Xs = Ys &
             set pi <= ?Xs \<times> Ys & finite Ys & distinctPerm pi",
     template_implication
      ([template_predicate
         (template_app (template_hole 16, template_hole 15)),
        template_predicate
         (template_app (template_hole 14, template_var 2)),
        template_inequation (less_equals, template_var 2, template_var 1),
        template_predicate
         (template_app (template_hole 14, template_var 1)),
        template_predicate
         (
            template_app
             (template_hole 14,
              template_app (template_hole 12, template_var 0))
            )],
       template_predicate (template_app (template_hole 11, t_empty)))),
    ("Chain.supp_cart_prod",
     "[| pt TYPE(?'b) TYPE(?'a); pt TYPE(?'c) TYPE(?'a);
         fs TYPE(?'b) TYPE(?'a); fs TYPE(?'c) TYPE(?'a);
         Nominal.at TYPE(?'a); finite ?Xs; finite ?Ys; ?Xs ~= {};
         ?Ys ~= {} |]
      ==> supp (?Xs \<times> ?Ys) = supp ?Xs Un supp ?Ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_hole 19),
              template_hole 18)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_hole 16),
              template_hole 18)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_hole 19),
              template_hole 18)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_hole 16),
              template_hole 18)
            ),
        template_predicate
         (template_app (template_hole 13, template_hole 18)),
        template_predicate
         (template_app (template_hole 12, template_var 1)),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_negation
         (template_equation (template_var 1, template_hole 8)),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Chain.fresh_cart_prod",
     "[| pt TYPE(?'b) TYPE(?'a); pt TYPE(?'c) TYPE(?'a);
         fs TYPE(?'b) TYPE(?'a); fs TYPE(?'c) TYPE(?'a);
         Nominal.at TYPE(?'a); finite ?Xs; finite ?Ys; ?Xs ~= {};
         ?Ys ~= {} |]
      ==> ?x \<sharp> ?Xs \<times> ?Ys =
          (?x \<sharp> ?Xs & ?x \<sharp> ?Ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_hole 19),
              template_hole 18)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_hole 16),
              template_hole 18)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_hole 19),
              template_hole 18)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_hole 16),
              template_hole 18)
            ),
        template_predicate
         (template_app (template_hole 13, template_hole 18)),
        template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 2), t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Chain.fresh_star_cart_prod",
     "[| pt TYPE(?'b) TYPE(?'a); pt TYPE(?'c) TYPE(?'a);
         fs TYPE(?'b) TYPE(?'a); fs TYPE(?'c) TYPE(?'a);
         Nominal.at TYPE(?'a); finite ?Xs; finite ?Ys; ?Xs ~= {};
         ?Ys ~= {} |]
      ==> ?Zs \<sharp>* (?Xs \<times> ?Ys) =
          (?Zs \<sharp>* ?Xs & ?Zs \<sharp>* ?Ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_hole 19),
              template_hole 18)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_hole 16),
              template_hole 18)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_hole 19),
              template_hole 18)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_hole 16),
              template_hole 18)
            ),
        template_predicate
         (template_app (template_hole 13, template_hole 18)),
        template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 2), t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Chain.fresh_star_cart_prod",
     "[| pt TYPE(?'b) TYPE(?'a); pt TYPE(?'c) TYPE(?'a);
         fs TYPE(?'b) TYPE(?'a); fs TYPE(?'c) TYPE(?'a);
         Nominal.at TYPE(?'a); finite ?Xs; finite ?Ys; ?Xs ~= {};
         ?Ys ~= {} |]
      ==> ?xvec \<sharp>* (?Xs \<times> ?Ys) =
          (?xvec \<sharp>* ?Xs & ?xvec \<sharp>* ?Ys)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_hole 19),
              template_hole 18)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_hole 16),
              template_hole 18)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_hole 19),
              template_hole 18)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_hole 16),
              template_hole 18)
            ),
        template_predicate
         (template_app (template_hole 13, template_hole 18)),
        template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_negation
         (template_equation (template_var 2, template_hole 8)),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 2), t_empty)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)))))]
