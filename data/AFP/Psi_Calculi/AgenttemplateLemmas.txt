   [("Agent.psiFreshSet", "?X \<sharp>* \<zero>",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Agent.psiFreshSet", "?X \<sharp>* \<bottom>\<^sub>c",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Agent.psiFreshVec", "?xvec \<sharp>* \<zero>",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Agent.psiFreshVec", "?xvec \<sharp>* \<bottom>\<^sub>c",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 0), template_hole 0)
         )),
    ("Agent.psi_input_psiCase_perm_empty",
     "[] \<bullet> ?psi_Rep = ?psi_Rep",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Agent.psi_input_psiCase_perm_empty",
     "[] \<bullet> ?input_Rep = ?input_Rep",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Agent.psi_input_psiCase_perm_empty",
     "[] \<bullet> ?psiCase_Rep = ?psiCase_Rep",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Agent.resChainFreshSimps",
     "?xvec \<sharp>* (\<lparr>\<nu>*?xvec\<rparr>?P)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))
         )),
    ("Agent.inductChainSimps", "?xvec \<sharp>* inputChain ?xvec ?N ?P",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("Agent.psi_input_psiCase_unfolded_perm_eq",
     "perm_psi_Rep_noption ?pi ?noption2.0 = ?pi \<bullet> ?noption2.0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Agent.psi_input_psiCase_unfolded_perm_eq",
     "perm_input_Rep_noption ?pi ?noption1.0 = ?pi \<bullet> ?noption1.0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Agent.psiCasesFresh", "?x \<sharp> psiCases ?Cs = ?x \<sharp> ?Cs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Agent.psiFreshSet", "?X \<sharp>* !?P = ?X \<sharp>* ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Agent.psiFreshSet", "?X \<sharp>* Case ?C = ?X \<sharp>* ?C",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Agent.psiFreshSet",
     "?X \<sharp>* \<lbrace>?\<Psi>\<rbrace> = ?X \<sharp>* ?\<Psi>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Agent.psiCasesFreshChain",
     "?Xs \<sharp>* psiCases ?Cs = ?Xs \<sharp>* ?Cs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Agent.psiFreshVec", "?xvec \<sharp>* !?P = ?xvec \<sharp>* ?P",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Agent.psiFreshVec", "?xvec \<sharp>* Case ?C = ?xvec \<sharp>* ?C",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Agent.psiFreshVec",
     "?xvec \<sharp>* \<lbrace>?\<Psi>\<rbrace> = ?xvec \<sharp>* ?\<Psi>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Agent.psiCasesFreshChain",
     "?xvec \<sharp>* psiCases ?Cs = ?xvec \<sharp>* ?Cs",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Agent.guardedClosed", "guarded ?P ==> guarded (?p \<bullet> ?P)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Agent.guardedEqvt",
     "?p \<bullet> guarded ?P = guarded (?p \<bullet> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Agent.guardedEqvt",
     "?p \<bullet> guarded' ?I = guarded' (?p \<bullet> ?I)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Agent.guardedEqvt",
     "?p \<bullet> guarded'' ?C = guarded'' (?p \<bullet> ?C)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Agent.psiCasesInject",
     "(psiCases ?CsP = psiCases ?CsQ) = (?CsP = ?CsQ)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Agent.psiCasesEqvt",
     "?p \<bullet> psiCases ?Cs = psiCases (?p \<bullet> ?Cs)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Agent.resChainSupp",
     "supp (\<lparr>\<nu>*?xvec\<rparr>?P) = supp ?P - set ?xvec",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Agent.perm_singleton", "?p \<bullet> {?x} = {?p \<bullet> ?x}",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 1))),
    ("Agent.psiFreshSet",
     "?X \<sharp>* \<lparr>\<nu>?x\<rparr>?P = ?X \<sharp>* [?x].?P",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Agent.psiFreshSet", "?X \<sharp>* \<nu>?x?I = ?X \<sharp>* [?x].?I",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Agent.psiFreshVec",
     "?xvec \<sharp>* \<lparr>\<nu>?x\<rparr>?P = ?xvec \<sharp>* [?x].?P",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Agent.psiFreshVec",
     "?xvec \<sharp>* \<nu>?x?I = ?xvec \<sharp>* [?x].?I",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Agent.casesInject", "(Cases ?CsP = Cases ?CsQ) = (?CsP = ?CsQ)",
     template_bimplication
      (template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_equation (template_var 1, template_var 0))),
    ("Agent.resChainAppend",
     "\<lparr>\<nu>*(?xvec @ ?yvec)\<rparr>?P =
      \<lparr>\<nu>*?xvec\<rparr>\<lparr>\<nu>*?yvec\<rparr>?P",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Agent.psi_input_psiCase_perm_append",
     "(?pi1.0 @ ?pi2.0) \<bullet> ?psi_Rep =
      ?pi1.0 \<bullet> ?pi2.0 \<bullet> ?psi_Rep",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Agent.psi_input_psiCase_perm_append",
     "(?pi1.0 @ ?pi2.0) \<bullet> ?input_Rep =
      ?pi1.0 \<bullet> ?pi2.0 \<bullet> ?input_Rep",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Agent.psi_input_psiCase_perm_append",
     "(?pi1.0 @ ?pi2.0) \<bullet> ?psiCase_Rep =
      ?pi1.0 \<bullet> ?pi2.0 \<bullet> ?psiCase_Rep",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Agent.step",
     "psiCases ((?\<Phi>, ?P) # ?xs) =
      \<box> ?\<Phi> \<Rightarrow> ?P psiCases ?xs ",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app (template_hole 3, template_var 0)))),
    ("Agent.psi_input_psiCase_perm_eq",
     " ?pi1.0 \<triangleq> ?pi2.0  ==>
      ?pi1.0 \<bullet> ?psi_Rep = ?pi2.0 \<bullet> ?psi_Rep",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Agent.psi_input_psiCase_perm_eq",
     " ?pi1.0 \<triangleq> ?pi2.0  ==>
      ?pi1.0 \<bullet> ?input_Rep = ?pi2.0 \<bullet> ?input_Rep",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Agent.psi_input_psiCase_perm_eq",
     " ?pi1.0 \<triangleq> ?pi2.0  ==>
      ?pi1.0 \<bullet> ?psiCase_Rep = ?pi2.0 \<bullet> ?psiCase_Rep",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Agent.delete_eqvt",
     "?p \<bullet> (?X - ?Y) = ?p \<bullet> ?X - ?p \<bullet> ?Y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Agent.inter_eqvt",
     "?pi \<bullet> (?X Int ?Y) = ?pi \<bullet> ?X Int ?pi \<bullet> ?Y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Agent.psiFreshSet",
     "?X \<sharp>* ?M\<lparr>?I = (?X \<sharp>* ?M & ?X \<sharp>* ?I)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Agent.psiFreshSet",
     "?X \<sharp>* (?P \<parallel> ?Q) =
      (?X \<sharp>* ?P & ?X \<sharp>* ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Agent.psiFreshSet",
     "?X \<sharp>* \<rparr>?N.?P = (?X \<sharp>* ?N & ?X \<sharp>* ?P)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Agent.psiFreshVec",
     "?xvec \<sharp>* (?P \<parallel> ?Q) =
      (?xvec \<sharp>* ?P & ?xvec \<sharp>* ?Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Agent.psiFreshVec",
     "?xvec \<sharp>* ?M\<lparr>?I =
      (?xvec \<sharp>* ?M & ?xvec \<sharp>* ?I)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Agent.psiFreshVec",
     "?xvec \<sharp>* \<rparr>?N.?P =
      (?xvec \<sharp>* ?N & ?xvec \<sharp>* ?P)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Agent.resChainEqvt",
     "?perm \<bullet> \<lparr>\<nu>*?xvec\<rparr>?P =
      \<lparr>\<nu>*?perm \<bullet> ?xvec\<rparr>?perm \<bullet> ?P",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Agent.resChainFresh",
     "?x \<sharp> \<lparr>\<nu>*?xvec\<rparr>?P =
      (?x mem ?xvec | ?x \<sharp> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Agent.resChainFreshSimps",
     "?Xs \<sharp>* ?xvec ==>
      ?Xs \<sharp>* (\<lparr>\<nu>*?xvec\<rparr>?P) = ?Xs \<sharp>* ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Agent.resChainFreshSimps",
     "?yvec \<sharp>* ?xvec ==>
      ?yvec \<sharp>* (\<lparr>\<nu>*?xvec\<rparr>?P) = ?yvec \<sharp>* ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Agent.inputChainEqLength",
     "inputChain ?xvec ?M ?P = inputChain ?yvec ?N ?Q ==>
      length ?xvec = length ?yvec",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1),
            template_var 0))],
       template_equation
        (template_app (template_hole 0, template_var 5),
         template_app (template_hole 0, template_var 2)))),
    ("Agent.resChainFreshSet",
     "?Xs \<sharp>* (\<lparr>\<nu>*?xvec\<rparr>?P) =
      (ALL x:?Xs. x mem ?xvec | x \<sharp> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 4, template_var 2), t_empty))),
    ("Agent.inputChainInject",
     "(inputChain ?xvec ?M ?P = inputChain ?xvec ?N ?Q) =
      (?M = ?N & ?P = ?Q)",
     template_bimplication
      (template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 1),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Agent.inputChainEqvt",
     "?p \<bullet> inputChain ?xvec ?N ?P =
      inputChain (?p \<bullet> ?xvec) (?p \<bullet> ?N) (?p \<bullet> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 3),
           template_var 0)))),
    ("Agent.resChainFreshSet",
     "?yvec \<sharp>* (\<lparr>\<nu>*?xvec\<rparr>?P) =
      (ALL x:set ?yvec. x mem ?xvec | x \<sharp> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 2)),
         t_empty))),
    ("Agent.psiFreshSet",
     "?X \<sharp>* ?M\<langle>?N\<rangle>.?P =
      (?X \<sharp>* ?M & ?X \<sharp>* ?N & ?X \<sharp>* ?P)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 0))))),
    ("Agent.psiFreshSet",
     "?X \<sharp>* \<box> ?\<Phi> \<Rightarrow> ?P ?C  =
      (?X \<sharp>* ?\<Phi> & ?X \<sharp>* ?P & ?X \<sharp>* ?C)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 0))))),
    ("Agent.psiFreshVec",
     "?xvec \<sharp>* ?M\<langle>?N\<rangle>.?P =
      (?xvec \<sharp>* ?M & ?xvec \<sharp>* ?N & ?xvec \<sharp>* ?P)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 0))))),
    ("Agent.psiFreshVec",
     "?xvec \<sharp>* \<box> ?\<Phi> \<Rightarrow> ?P ?C  =
      (?xvec \<sharp>* ?\<Phi> & ?xvec \<sharp>* ?P & ?xvec \<sharp>* ?C)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 0))))),
    ("Agent.alphaRes",
     "?y \<sharp> ?P ==>
      \<lparr>\<nu>?x\<rparr>?P =
      \<lparr>\<nu>?y\<rparr>([(?x, ?y)] \<bullet> ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 2)),
                 template_hole 0)),
             template_var 1))))),
    ("Agent.alphaInput",
     "?c \<sharp> ?I ==> \<nu>?x?I = \<nu>?c([(?x, ?c)] \<bullet> ?I)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 2)),
                 template_hole 0)),
             template_var 1))))),
    ("Agent.resChainSimps",
     "?P \<parallel> ?Q = \<lparr>\<nu>*?xvec\<rparr>?P' \<parallel> ?Q' ==>
      ?P = ?P' & ?Q = ?Q'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 1, template_var 2),
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 0))
           ))),
    ("Agent.resChainSimps",
     "\<lparr>\<nu>*?xvec\<rparr>?P \<parallel> ?Q = ?P' \<parallel> ?Q' ==>
      ?P = ?P' & ?Q = ?Q'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 4),
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 3, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))
           ))),
    ("Agent.inputChainFresh",
     "?x \<sharp> inputChain ?xvec ?N ?P =
      (?x mem ?xvec | ?x \<sharp> ?N & ?x \<sharp> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 7, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app (template_hole 3, template_var 2))),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0))))),
    ("Agent.inputChainFreshSet",
     "?Xs \<sharp>* inputChain ?xvec ?N ?P =
      (ALL x:?Xs. x mem ?xvec | x \<sharp> ?N & x \<sharp> ?P)",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 7, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 6, template_var 3), t_empty))),
    ("Agent.resChainAlpha",
     "[| (?p \<bullet> ?xvec) \<sharp>* ?P;
         set ?p <= set ?xvec \<times> set (?p \<bullet> ?xvec) |]
      ==> \<lparr>\<nu>*?xvec\<rparr>?P =
          \<lparr>\<nu>*?p \<bullet> ?xvec\<rparr>?p \<bullet> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Agent.inputChainAlpha'",
     "[| (?p \<bullet> ?xvec) \<sharp>* ?P;
         (?p \<bullet> ?xvec) \<sharp>* ?N;
         set ?p <= set ?xvec \<times> set (?p \<bullet> ?xvec) |]
      ==> inputChain ?xvec ?N ?P =
          inputChain (?p \<bullet> ?xvec) (?p \<bullet> ?N)
           (?p \<bullet> ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2)),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 3),
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 2)),
            t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0),
           template_var 1),
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 9, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1))))),
    ("Agent.inputChainAlpha",
     "[| ?Xs \<sharp>* inputChain ?xvec ?N ?P; ?Ys \<sharp>* ?N;
         ?Ys \<sharp>* ?P; set ?p <= ?Xs \<times> ?Ys |]
      ==> inputChain ?xvec ?N ?P =
          inputChain (?p \<bullet> ?xvec) (?p \<bullet> ?N)
           (?p \<bullet> ?P)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 5),
              template_app
               (template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 2)
            ),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 0),
          template_app
           (template_app (template_hole 4, template_var 5), t_empty))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 9, template_var 4),
             template_var 3),
           template_var 2),
         template_app
          (template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 4)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 3)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Agent.alphaInputChain",
     "[| length ?xvec = length ?yvec; ?yvec \<sharp>* ?M;
         ?yvec \<sharp>* ?P; ?yvec \<sharp>* ?xvec; distinct ?yvec |]
      ==> inputChain ?xvec ?M ?P =
          inputChain ?yvec ([?xvec ?yvec] \<bullet>\<^sub>v ?M)
           ([?xvec ?yvec] \<bullet>\<^sub>v ?P)",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 3),
          template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 3)
            ),
        template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2)),
               template_var 1)),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2)),
             template_var 0))))),
    ("Agent.inputChainLengthEq",
     "[| length ?xvec = length ?yvec; ?xvec \<sharp>* ?yvec; distinct ?yvec;
         ?yvec \<sharp>* ?M; ?yvec \<sharp>* ?P;
         !!N Q. inputChain ?xvec ?M ?P = inputChain ?yvec N Q ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app (template_hole 8, template_var 4),
          template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("Agent.alphaInputDistinct",
     "[| inputChain ?xvec ?M ?P = inputChain ?yvec ?N ?Q; distinct ?xvec;
         !!x. x mem ?xvec ==> x : supp ?M; ?xvec \<sharp>* ?yvec;
         ?xvec \<sharp>* ?N; ?xvec \<sharp>* ?Q |]
      ==> distinct ?yvec",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 8, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1),
            template_var 0)),
        template_predicate (template_app (template_hole 7, template_var 5)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 5),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 5),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 7, template_var 2)))),
    ("Agent.inputChainEq",
     "[| inputChain ?xvec ?M ?P = inputChain ?yvec ?N ?Q;
         ?xvec \<sharp>* ?yvec; distinct ?xvec; distinct ?yvec;
         !!p. [| set p <= set ?xvec \<times> set (p \<bullet> ?xvec);
                 distinctPerm p; ?yvec = p \<bullet> ?xvec;
                 ?N = p \<bullet> ?M; ?Q = p \<bullet> ?P |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 14, template_var 6),
              template_var 5),
            template_var 4),
          template_app
           (template_app
             (template_app (template_hole 14, template_var 3),
              template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 6),
              template_var 3)
            ),
        template_predicate
         (template_app (template_hole 12, template_var 6)),
        template_predicate
         (template_app (template_hole 12, template_var 3)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0)))]
