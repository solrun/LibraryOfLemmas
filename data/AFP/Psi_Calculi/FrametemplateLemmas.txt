   [("Frame.frame_perm_empty", "[] \<bullet> ?frame_Rep = ?frame_Rep",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Frame.permLength", "length (?p \<bullet> ?xvec) = length ?xvec",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Frame.frame_unfolded_perm_eq",
     "perm_frame_Rep_noption ?pi ?noption = ?pi \<bullet> ?noption",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Frame.frameChainAppend",
     "\<lparr>\<nu>*(?xvec @ ?yvec)\<rparr>?F =
      \<lparr>\<nu>*?xvec\<rparr>\<lparr>\<nu>*?yvec\<rparr>?F",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Frame.frame_perm_append",
     "(?pi1.0 @ ?pi2.0) \<bullet> ?frame_Rep =
      ?pi1.0 \<bullet> ?pi2.0 \<bullet> ?frame_Rep",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Frame.frame_perm_eq",
     " ?pi1.0 \<triangleq> ?pi2.0  ==>
      ?pi1.0 \<bullet> ?frame_Rep = ?pi2.0 \<bullet> ?frame_Rep",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Frame.frameResChainEqvt",
     "?perm \<bullet> \<lparr>\<nu>*?xvec\<rparr>?F =
      \<lparr>\<nu>*?perm \<bullet> ?xvec\<rparr>?perm \<bullet> ?F",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Frame.frameResChainFresh",
     "?x \<sharp> \<lparr>\<nu>*?xvec\<rparr>?F =
      (?x mem ?xvec | ?x \<sharp> ?F)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_var 0)))),
    ("Frame.frameEq",
     "(\<langle>\<epsilon>, ?\<Psi>'\<rangle> =
       \<langle>?A\<^sub>F, ?\<Psi>\<rangle>) =
      (?A\<^sub>F = [] & ?\<Psi> = ?\<Psi>')",
     template_bimplication
      (template_equation
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 5, template_var 0))),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_hole 1)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2))
           ))),
    ("Frame.frameEq",
     "(\<langle>?A\<^sub>F, ?\<Psi>\<rangle> =
       \<langle>\<epsilon>, ?\<Psi>'\<rangle>) =
      (?A\<^sub>F = [] & ?\<Psi> = ?\<Psi>')",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app (template_hole 4, template_var 1)),
         template_app (template_hole 4, template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 1)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Frame.frameChainEqLength",
     "\<langle>?xvec, ?\<Psi>\<rangle> =
      \<langle>?yvec, ?\<Psi>'\<rangle> ==>
      length ?xvec = length ?yvec",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 3),
            template_app (template_hole 2, template_var 2)),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_app (template_hole 2, template_var 0)))],
       template_equation
        (template_app (template_hole 0, template_var 3),
         template_app (template_hole 0, template_var 1)))),
    ("Frame.frameResChainFreshSet",
     "?Xs \<sharp>* (\<lparr>\<nu>*?xvec\<rparr>?F) =
      (ALL x:?Xs. x mem ?xvec | x \<sharp> ?F)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 4, template_var 2), t_empty))),
    ("Frame.frameEqFresh",
     "[| \<lparr>\<nu>?x\<rparr>?F = \<lparr>\<nu>?y\<rparr>?G;
         ?x \<sharp> ?F |]
      ==> ?y \<sharp> ?G",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Frame.alphaFrameRes",
     "?y \<sharp> ?F ==>
      \<lparr>\<nu>?x\<rparr>?F =
      \<lparr>\<nu>?y\<rparr>[(?x, ?y)] \<bullet> ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 4, template_var 2),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 0),
                     template_var 2)),
                 template_hole 0)),
             template_var 1))))),
    ("Frame.frameEqSupp",
     "[| \<lparr>\<nu>?x\<rparr>?F = \<lparr>\<nu>?y\<rparr>?G;
         ?x : supp ?F |]
      ==> ?y : supp ?G",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 1),
            template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app (template_hole 0, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Frame.frameChainEqSuppEmpty",
     "[| \<langle>?xvec, ?\<Psi>\<rangle> =
         \<langle>?yvec, ?\<Psi>'\<rangle>;
         supp ?\<Psi> = {} |]
      ==> ?\<Psi> = ?\<Psi>'",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3),
            template_app (template_hole 4, template_var 2)),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_app (template_hole 4, template_var 0))),
        template_equation
         (template_app (template_hole 2, template_var 2), template_hole 1)],
       template_equation (template_var 2, template_var 0))),
    ("Frame.freshFrame",
     "(!!A\<^sub>F \<Psi>\<^sub>F.
          [| ?F = \<langle>A\<^sub>F, \<Psi>\<^sub>F\<rangle>;
             distinct A\<^sub>F; A\<^sub>F \<sharp>* ?C |]
          ==> ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Frame.distinctFrame",
     "[| ?A\<^sub>F \<sharp>* ?C;
         !!A\<^sub>F'.
            [| \<langle>?A\<^sub>F, ?\<Psi>\<^sub>F\<rangle> =
               \<langle>A\<^sub>F', ?\<Psi>\<^sub>F\<rangle>;
               distinct A\<^sub>F'; A\<^sub>F' \<sharp>* ?C |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Frame.frameChainAlpha",
     "[| (?p \<bullet> ?xvec) \<sharp>* ?F;
         set ?p <= set ?xvec \<times> set (?p \<bullet> ?xvec) |]
      ==> \<lparr>\<nu>*?xvec\<rparr>?F =
          \<lparr>\<nu>*?p \<bullet> ?xvec\<rparr>?p \<bullet> ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 1)),
            t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 7, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))))),
    ("Frame.frameChainAlpha'",
     "[| (?p \<bullet> ?A\<^sub>P) \<sharp>* ?\<Psi>\<^sub>P;
         set ?p <= set ?A\<^sub>P \<times> set (?p \<bullet> ?A\<^sub>P) |]
      ==> \<langle>?A\<^sub>P, ?\<Psi>\<^sub>P\<rangle> =
          \<langle>?p \<bullet>
                   ?A\<^sub>P, ?p \<bullet> ?\<Psi>\<^sub>P\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1)),
            t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 1, template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 8, template_var 2),
               template_var 1)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0)))))),
    ("Frame.frameChainEq",
     "[| \<langle>?xvec, ?\<Psi>\<rangle> =
         \<langle>?yvec, ?\<Psi>'\<rangle>;
         ?xvec \<sharp>* ?yvec;
         !!p. [| set p <= set ?xvec \<times> set ?yvec; distinctPerm p;
                 ?\<Psi>' = p \<bullet> ?\<Psi> |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 10, template_var 4),
            template_app (template_hole 9, template_var 3)),
          template_app
           (template_app (template_hole 10, template_var 2),
            template_app (template_hole 9, template_var 1))),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Frame.frameChainEq'",
     "[| \<langle>?xvec, ?\<Psi>\<rangle> =
         \<langle>?yvec, ?\<Psi>'\<rangle>;
         ?xvec \<sharp>* ?yvec; distinct ?xvec; distinct ?yvec;
         !!p. [| set p <= set ?xvec \<times> set (p \<bullet> ?xvec);
                 distinctPerm p; ?yvec = p \<bullet> ?xvec;
                 ?\<Psi>' = p \<bullet> ?\<Psi> |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 13, template_var 4),
            template_app (template_hole 12, template_var 3)),
          template_app
           (template_app (template_hole 13, template_var 2),
            template_app (template_hole 12, template_var 1))),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 10, template_var 4)),
        template_predicate
         (template_app (template_hole 10, template_var 2)),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0)))]
