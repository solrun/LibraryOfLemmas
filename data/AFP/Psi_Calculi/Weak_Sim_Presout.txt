Loading theory "HOL-Library.Infinite_Set" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.Weak_Sim_Pres" via "Draft.Sim_Pres" via "Draft.Simulation" via "Draft.Semantics" via "Draft.Frame" via "Draft.Agent" via "Draft.Subst_Term" via "Draft.Chain" via "HOL-Nominal.Nominal")
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.Weak_Sim_Pres" via "Draft.Sim_Pres" via "Draft.Simulation" via "Draft.Semantics" via "Draft.Frame" via "Draft.Agent" via "Draft.Subst_Term" via "Draft.Chain" via "HOL-Nominal.Nominal")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.122s elapsed time, 0.501s cpu time, 0.048s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
consts
  enumerate :: "'a set => nat => 'a"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Infinite_Set"
### 0.300s elapsed time, 1.198s cpu time, 0.134s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
### theory "HOL-Library.Nat_Bijection"
### 0.329s elapsed time, 1.327s cpu time, 0.134s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.209s elapsed time, 0.824s cpu time, 0.086s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.ExtrEqs")
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.421s elapsed time, 1.685s cpu time, 0.225s GC time
Loading theory "HOL-Nominal.Nominal" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.Weak_Sim_Pres" via "Draft.Sim_Pres" via "Draft.Simulation" via "Draft.Semantics" via "Draft.Frame" via "Draft.Agent" via "Draft.Subst_Term" via "Draft.Chain")
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  left :: "'a tree => 'a tree"
consts
  snth :: "'a stream => nat => 'a"
consts
  right :: "'a tree => 'a tree"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.BigO"
### 0.928s elapsed time, 3.541s cpu time, 0.853s GC time
### theory "HOL-Library.Stream"
### 0.952s elapsed time, 3.629s cpu time, 0.853s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
overloading
  perm_fun \<equiv> perm :: ('x * 'x) list => ('a => 'b) => 'a => 'b
  perm_bool \<equiv> perm :: ('x * 'x) list => bool => bool
  perm_set \<equiv> perm :: ('x * 'x) list => 'a set => 'a set
  perm_unit \<equiv> perm :: ('x * 'x) list => unit => unit
  perm_prod \<equiv> perm :: ('x * 'x) list => 'a * 'b => 'a * 'b
  perm_list \<equiv> perm :: ('x * 'x) list => 'a list => 'a list
  perm_option \<equiv> perm :: ('x * 'x) list => 'a option => 'a option
  perm_char \<equiv> perm :: ('x * 'x) list => char => char
  perm_nat \<equiv> perm :: ('x * 'x) list => nat => nat
  perm_int \<equiv> perm :: ('x * 'x) list => int => int
  perm_noption \<equiv> perm :: ('x * 'x) list => 'a noption => 'a noption
  perm_nprod \<equiv> perm ::
    ('x * 'x) list => ('a, 'b) nprod => ('a, 'b) nprod
Found termination order: "size <*mlex*> {}"
consts
  perm_unit :: "('x * 'x) list => unit => unit"
consts
  perm_prod :: "('x * 'x) list => 'a * 'b => 'a * 'b"
consts
  perm_list :: "('x * 'x) list => 'a list => 'a list"
consts
  perm_option :: "('x * 'x) list => 'a option => 'a option"
consts
  perm_noption :: "('x * 'x) list => 'a noption => 'a noption"
consts
  perm_nprod :: "('x * 'x) list => ('a, 'b) nprod => ('a, 'b) nprod"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
val mksimps_pairs =
   [("Nominal.fresh",
     ["?a \<sharp> (?x, ?y) ==> ?a \<sharp> ?x",
      "?a \<sharp> (?x, ?y) ==> ?a \<sharp> ?y"]),
    ("Set.Ball", ["[| ALL x:?A. ?P x; ?x : ?A |] ==> ?P ?x"]),
    ("HOL.implies", ["[| ?P --> ?Q; ?P |] ==> ?Q"]),
    ("HOL.conj", ["?P & ?Q ==> ?P", "?P & ?Q ==> ?Q"]),
    ("HOL.All", ["ALL x. ?P x ==> ?P ?x"]), ("HOL.True", []),
    ("HOL.False", []),
    ("HOL.If",
     ["if ?P1 then ?Q1 else ?R1 ==> (?P1 --> ?Q1) & (~ ?P1 --> ?R1)"])]:
   (string * thm list) list
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.947s elapsed time, 6.056s cpu time, 1.730s GC time
Loading theory "Draft.Templates" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.ExtrEqs")
overloading
  fresh_star_set \<equiv> fresh_star :: 'b set => 'a => bool
overloading
  frsh_star_list \<equiv> fresh_star :: 'b list => 'a => bool
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.069s elapsed time, 0.158s cpu time, 0.046s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Weak_Sim_PresMoreTemplates")
Proofs for inductive predicate(s) "ABS_setp"
  Proving monotonicity ...
### ML warning (line 73 of "~~/src/HOL/Nominal/nominal_thmdecls.ML"):
### Pattern is not exhaustive.
### ML warning (line 104 of "~~/src/HOL/Nominal/nominal_thmdecls.ML"):
### Value identifier (n) has not been referenced.
### ML warning (line 102 of "~~/src/HOL/Nominal/nominal_thmdecls.ML"):
### Value identifier (typrm) has not been referenced.
### ML warning (line 149 of "~~/src/HOL/Nominal/nominal_thmdecls.ML"):
### Value identifier (typrm) has not been referenced.
signature NOMINAL_THMDECLS =
  sig
    val eqvt_add: attribute
    val eqvt_del: attribute
    val eqvt_force_add: attribute
    val eqvt_force_del: attribute
    val get_eqvt_thms: Proof.context -> thm list
    val nominal_eqvt_debug: bool Config.T
    val setup: theory -> theory
  end
structure NominalThmDecls: NOMINAL_THMDECLS
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.534s elapsed time, 1.141s cpu time, 0.166s GC time
### ML warning (line 132 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (prems) has not been referenced.
### ML warning (line 171 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (swap_eqs) has not been referenced.
### ML warning (line 205 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (prm_eqs) has not been referenced.
### ML warning (line 241 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (perm_defs) has not been referenced.
### ML warning (line 263 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (T) has not been referenced.
### ML warning (line 322 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (T) has not been referenced.
### ML warning (line 369 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (T) has not been referenced.
### ML warning (line 368 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (fs_inst_thms) has not been referenced.
### ML warning (line 416 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (T) has not been referenced.
### ML warning (line 417 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (T') has not been referenced.
### ML warning (line 453 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (T) has not been referenced.
### ML warning (line 454 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (T') has not been referenced.
### ML warning (line 636 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (cp_bool_inst) has not been referenced.
### ML warning (line 751 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (supp_def) has not been referenced.
### ML warning (line 893 of "~~/src/HOL/Nominal/nominal_atoms.ML"):
### Value identifier (inst_pt_pt_at_cp) has not been referenced.
signature NOMINAL_ATOMS =
  sig
    val at_inst_of: theory -> string -> thm
    type atom_info
    val atoms_of: theory -> string list
    val cp_class_of: theory -> string -> string -> string
    val cp_inst_of: theory -> string -> string -> thm
    val create_nom_typedecls: string list -> theory -> theory
    val dj_thm_of: theory -> string -> string -> thm
    val fs_class_of: theory -> string -> string
    val get_atom_info: theory -> string -> atom_info option
    val get_atom_infos: theory -> atom_info Symtab.table
    val mk_permT: typ -> typ
    val pt_class_of: theory -> string -> string
    val pt_inst_of: theory -> string -> thm
    val the_atom_info: theory -> string -> atom_info
  end
structure NominalAtoms: NOMINAL_ATOMS
### ML warning (line 104 of "~~/src/HOL/Nominal/nominal_permeq.ML"):
### Value identifier (x) has not been referenced.
### ML warning (line 104 of "~~/src/HOL/Nominal/nominal_permeq.ML"):
### Value identifier (pi) has not been referenced.
### ML warning (line 120 of "~~/src/HOL/Nominal/nominal_permeq.ML"):
### Value identifier (ctxt) has not been referenced.
### ML warning (line 132 of "~~/src/HOL/Nominal/nominal_permeq.ML"):
### Value identifier (pi) has not been referenced.
### ML warning (line 291 of "~~/src/HOL/Nominal/nominal_permeq.ML"):
### Value identifier (i) has not been referenced.
### ML warning (line 290 of "~~/src/HOL/Nominal/nominal_permeq.ML"):
### Value identifier (i) has not been referenced.
### ML warning (line 289 of "~~/src/HOL/Nominal/nominal_permeq.ML"):
### Value identifier (i) has not been referenced.
### ML warning (line 312 of "~~/src/HOL/Nominal/nominal_permeq.ML"):
### Pattern is not exhaustive.
### ML warning (line 356 of "~~/src/HOL/Nominal/nominal_permeq.ML"):
### Pattern is not exhaustive.
### ML warning (line 376 of "~~/src/HOL/Nominal/nominal_permeq.ML"):
### Value identifier (eqvt_simp_tac) has not been referenced.
signature NOMINAL_PERMEQ =
  sig
    val finite_guess_meth: (Proof.context -> Proof.method) context_parser
    val finite_guess_meth_debug:
       (Proof.context -> Proof.method) context_parser
    val finite_guess_tac: Proof.context -> int -> tactic
    val fresh_guess_meth: (Proof.context -> Proof.method) context_parser
    val fresh_guess_meth_debug:
       (Proof.context -> Proof.method) context_parser
    val fresh_guess_tac: Proof.context -> int -> tactic
    val perm_extend_simp_meth:
       (Proof.context -> Proof.method) context_parser
    val perm_extend_simp_meth_debug:
       (Proof.context -> Proof.method) context_parser
    val perm_extend_simp_tac: Proof.context -> int -> tactic
    val perm_simp_meth: (Proof.context -> Proof.method) context_parser
    val perm_simp_meth_debug: (Proof.context -> Proof.method) context_parser
    val perm_simp_tac: Proof.context -> int -> tactic
    val perm_simproc_app: simproc
    val perm_simproc_fun: simproc
    val supports_meth: (Proof.context -> Proof.method) context_parser
    val supports_meth_debug: (Proof.context -> Proof.method) context_parser
    val supports_tac: Proof.context -> int -> tactic
  end
structure NominalPermeq: NOMINAL_PERMEQ
### ML warning (line 94 of "~~/src/HOL/Nominal/nominal_fresh_fun.ML"):
### Value identifier (u) has not been referenced.
### ML warning (line 90 of "~~/src/HOL/Nominal/nominal_fresh_fun.ML"):
### Value identifier (v) has not been referenced.
### ML warning (line 89 of "~~/src/HOL/Nominal/nominal_fresh_fun.ML"):
### Value identifier (v) has not been referenced.
### ML warning (line 88 of "~~/src/HOL/Nominal/nominal_fresh_fun.ML"):
### Value identifier (j) has not been referenced.
### ML warning (line 137 of "~~/src/HOL/Nominal/nominal_fresh_fun.ML"):
### Value identifier (x) has not been referenced.
### ML warning (line 139 of "~~/src/HOL/Nominal/nominal_fresh_fun.ML"):
### Value identifier (n) has not been referenced.
### ML warning (line 150 of "~~/src/HOL/Nominal/nominal_fresh_fun.ML"):
### Value identifier (i) has not been referenced.
val gen_res_inst_tac_term = fn:
   Proof.context ->
     ((typ * ctyp) list -> (term * cterm) list -> thm -> thm) ->
       (typ * typ) list ->
         (term * term) list -> bool -> thm -> int -> thm -> thm Seq.seq
val res_inst_tac_term = fn:
   Proof.context ->
     (typ * typ) list ->
       (term * term) list -> bool -> thm -> int -> thm -> thm Seq.seq
val res_inst_tac_term' = fn:
   Proof.context ->
     (term * term) list -> bool -> thm -> int -> thm -> thm Seq.seq
val cut_inst_tac_term' = fn:
   Proof.context -> (term * term) list -> thm -> int -> thm -> thm Seq.seq
val get_dyn_thm = fn: theory -> xstring -> string -> thm
val at_exists_fresh' =
   "[| at TYPE(?'x); finite (supp ?x) |] ==> EX c. c \<sharp> ?x": thm
val fresh_fun_app' =
   "[| pt TYPE(?'a) TYPE(?'x); at TYPE(?'x); finite (supp ?h);
       ?a \<sharp> ?h; ?a \<sharp> ?h ?a |]
    ==> fresh_fun ?h = ?h ?a":
   thm
val fresh_prod = "?a \<sharp> (?x, ?y) = (?a \<sharp> ?x & ?a \<sharp> ?y)":
   thm
val generate_fresh_tac = fn: Proof.context -> string -> tactic
val get_inner_fresh_fun = fn: term -> string option
val generate_fresh_fun_tac = fn: Proof.context -> tactic
val search_fun = fn: EqSubst.searchinfo -> term -> EqSubst.match Seq.seq
val search_fun_asm = fn:
   EqSubst.searchinfo -> int -> term -> EqSubst.match EqSubst.skipseq
val subst_inner_tac = fn: Proof.context -> thm -> int -> thm -> thm Seq.seq
val subst_inner_asm_tac_aux = fn:
   int -> Proof.context -> thm -> int -> tactic
val subst_inner_asm_tac = fn: Proof.context -> thm -> int -> tactic
val fresh_fun_tac = fn: Proof.context -> bool -> int -> tactic
### ML warning (line 62 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (put_nominal_datatypes) has not been referenced.
### ML warning (line 89 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Matches are not exhaustive.
### ML warning (line 93 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (t) has not been referenced.
### ML warning (line 101 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 102 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 183 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (constrs) has not been referenced.
### ML warning (line 183 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (tvs) has not been referenced.
### ML warning (line 185 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (cargs) has not been referenced.
### ML warning (line 189 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (rps) has not been referenced.
### ML warning (line 197 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (mx) has not been referenced.
### ML warning (line 199 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (mx) has not been referenced.
### ML warning (line 202 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (new_type_names') has not been referenced.
### ML warning (line 257 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (perm_simps) has not been referenced.
### ML warning (line 277 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (s) has not been referenced.
### ML warning (line 278 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 278 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (T1) has not been referenced.
### ML warning (line 316 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (at_pt_inst) has not been referenced.
### ML warning (line 441 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (perm_thmss) has not been referenced.
### ML warning (line 474 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (i) has not been referenced.
### ML warning (line 553 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (x) has not been referenced.
### ML warning (line 692 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (i) has not been referenced.
### ML warning (line 708 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (i) has not been referenced.
### ML warning (line 711 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 744 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (full_new_type_names) has not been referenced.
### ML warning (line 780 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 829 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 830 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 850 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (dist_rewrites) has not been referenced.
### ML warning (line 1137 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Matches are not exhaustive.
### ML warning (line 1156 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (xs) has not been referenced.
### ML warning (line 1162 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (xss) has not been referenced.
### ML warning (line 1213 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (induct) has not been referenced.
### ML warning (line 1216 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Matches are not exhaustive.
### ML warning (line 1228 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (induct') has not been referenced.
### ML warning (line 1245 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Matches are not exhaustive.
### ML warning (line 1247 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Matches are not exhaustive.
### ML warning (line 1269 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1280 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1312 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (prems2) has not been referenced.
### ML warning (line 1334 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1366 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (t) has not been referenced.
### ML warning (line 1400 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Matches are not exhaustive.
### ML warning (line 1439 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Matches are not exhaustive.
### ML warning (line 1465 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (p) has not been referenced.
### ML warning (line 1464 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (rs) has not been referenced.
### ML warning (line 1645 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1649 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1662 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Matches are not exhaustive.
### ML warning (line 1699 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (T) has not been referenced.
### ML warning (line 1717 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1773 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (asms) has not been referenced.
### ML warning (line 1775 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1777 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1778 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1780 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Value identifier (c) has not been referenced.
### ML warning (line 1786 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1874 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1875 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1881 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1909 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1926 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 1932 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Matches are not exhaustive.
### ML warning (line 1949 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Matches are not exhaustive.
### ML warning (line 1963 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Matches are not exhaustive.
### ML warning (line 1988 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Matches are not exhaustive.
### ML warning (line 2055 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Pattern is not exhaustive.
### ML warning (line 2057 of "~~/src/HOL/Nominal/nominal_datatype.ML"):
### Matches are not exhaustive.
signature NOMINAL_DATATYPE =
  sig
    type descr
    val fresh_const: typ -> typ -> term
    val fresh_star_const: typ -> typ -> term
    val get_nominal_datatype:
       theory -> string -> nominal_datatype_info option
    val get_nominal_datatypes: theory -> nominal_datatype_info Symtab.table
    val mk_not_sym: thm list -> thm list
    val mk_perm: typ list -> term -> term -> term
    val nominal_datatype:
       Old_Datatype_Aux.config -> Old_Datatype.spec list -> theory -> theory
    val nominal_datatype_cmd:
       Old_Datatype_Aux.config ->
         Old_Datatype.spec_cmd list -> theory -> theory
    type nominal_datatype_info
    val perm_of_pair: term * term -> term
    val perm_simproc: simproc
  end
structure NominalDatatype: NOMINAL_DATATYPE
### ML warning (line 144 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Matches are not exhaustive.
### ML warning (line 155 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Value identifier (rs) has not been referenced.
### ML warning (line 155 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Value identifier (ls) has not been referenced.
### ML warning (line 173 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Pattern is not exhaustive.
### ML warning (line 204 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Value identifier (tname) has not been referenced.
### ML warning (line 213 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Pattern is not exhaustive.
### ML warning (line 223 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Value identifier (dt_info) has not been referenced.
### ML warning (line 233 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Value identifier (eq) has not been referenced.
### ML warning (line 232 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Value identifier (eq) has not been referenced.
### ML warning (line 248 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Pattern is not exhaustive.
### ML warning (line 287 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Pattern is not exhaustive.
### ML warning (line 289 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Pattern is not exhaustive.
### ML warning (line 290 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Pattern is not exhaustive.
### ML warning (line 291 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Pattern is not exhaustive.
### ML warning (line 292 of "~~/src/HOL/Nominal/nominal_primrec.ML"):
### Pattern is not exhaustive.
signature NOMINAL_PRIMREC =
  sig
    val primrec:
       term list option ->
         term option ->
           (binding * typ option * mixfix) list ->
             (binding * typ option * mixfix) list ->
               Specification.multi_specs -> local_theory -> Proof.state
    val primrec_cmd:
       string list option ->
         string option ->
           (binding * string option * mixfix) list ->
             (binding * string option * mixfix) list ->
               Specification.multi_specs_cmd -> local_theory -> Proof.state
  end
structure NominalPrimrec: NOMINAL_PRIMREC
### ML warning (line 74 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Value identifier (i) has not been referenced.
### ML warning (line 74 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Value identifier (thy) has not been referenced.
### ML warning (line 63 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Value identifier (x) has not been referenced.
### ML warning (line 64 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Pattern is not exhaustive.
### ML warning (line 83 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Value identifier (T) has not been referenced.
### ML warning (line 83 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Value identifier (s) has not been referenced.
### ML warning (line 82 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Matches are not exhaustive.
### ML warning (line 102 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Value identifier (names) has not been referenced.
### ML warning (line 94 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Value identifier (ps) has not been referenced.
### ML warning (line 107 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Pattern 3 is redundant.
### ML warning (line 121 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Value identifier (T') has not been referenced.
### ML warning (line 121 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Value identifier (s') has not been referenced.
### ML warning (line 207 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Pattern is not exhaustive.
### ML warning (line 213 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Matches are not exhaustive.
### ML warning (line 306 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Pattern is not exhaustive.
### ML warning (line 371 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Matches are not exhaustive.
### ML warning (line 420 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Value identifier (name) has not been referenced.
### ML warning (line 422 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Pattern is not exhaustive.
### ML warning (line 423 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Pattern is not exhaustive.
### ML warning (line 437 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Pattern is not exhaustive.
### ML warning (line 451 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Value identifier (prem) has not been referenced.
### ML warning (line 478 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Matches are not exhaustive.
### ML warning (line 574 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Pattern is not exhaustive.
### ML warning (line 623 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Pattern is not exhaustive.
### ML warning (line 635 of "~~/src/HOL/Nominal/nominal_inductive.ML"):
### Pattern is not exhaustive.
signature NOMINAL_INDUCTIVE =
  sig
    val prove_eqvt: string -> string list -> local_theory -> local_theory
    val prove_strong_ind:
       string -> (string * string list) list -> local_theory -> Proof.state
  end
structure NominalInductive: NOMINAL_INDUCTIVE
### ML warning (line 56 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (transp) has not been referenced.
### ML warning (line 79 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (i) has not been referenced.
### ML warning (line 79 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (thy) has not been referenced.
### ML warning (line 67 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (x) has not been referenced.
### ML warning (line 68 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Pattern is not exhaustive.
### ML warning (line 88 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (T) has not been referenced.
### ML warning (line 88 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (s) has not been referenced.
### ML warning (line 87 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Matches are not exhaustive.
### ML warning (line 107 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (names) has not been referenced.
### ML warning (line 99 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (ps) has not been referenced.
### ML warning (line 112 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Pattern 3 is redundant.
### ML warning (line 126 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (T') has not been referenced.
### ML warning (line 126 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (s') has not been referenced.
### ML warning (line 161 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (ind_params) has not been referenced.
### ML warning (line 163 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (elims) has not been referenced.
### ML warning (line 194 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Matches are not exhaustive.
### ML warning (line 233 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Pattern is not exhaustive.
### ML warning (line 239 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Matches are not exhaustive.
### ML warning (line 329 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Pattern is not exhaustive.
### ML warning (line 337 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Pattern is not exhaustive.
### ML warning (line 341 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Pattern is not exhaustive.
### ML warning (line 370 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (pi_sets) has not been referenced.
### ML warning (line 462 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (induct_cases') has not been referenced.
### ML warning (line 465 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Value identifier (thsss) has not been referenced.
### ML warning (line 479 of "~~/src/HOL/Nominal/nominal_inductive2.ML"):
### Pattern is not exhaustive.
signature NOMINAL_INDUCTIVE2 =
  sig
    val prove_strong_ind:
       string ->
         string option ->
           (string * string list) list -> local_theory -> Proof.state
  end
structure NominalInductive2: NOMINAL_INDUCTIVE2
### ML warning (line 17 of "~~/src/HOL/Nominal/nominal_induct.ML"):
### Value identifier (tupleT) has not been referenced.
### ML warning (line 48 of "~~/src/HOL/Nominal/nominal_induct.ML"):
### Pattern is not exhaustive.
structure NominalInduct:
  sig
    val nominal_induct_method:
       (Proof.context -> Proof.method) context_parser
    val nominal_induct_tac:
       bool ->
         (binding option * (term * bool)) option list list ->
           (string * typ) list ->
             (string * typ) list list ->
               thm list -> thm list -> int -> context_tactic
  end
### theory "HOL-Nominal.Nominal"
### 4.159s elapsed time, 9.195s cpu time, 2.781s GC time
Loading theory "Draft.Chain" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.Weak_Sim_Pres" via "Draft.Sim_Pres" via "Draft.Simulation" via "Draft.Semantics" via "Draft.Frame" via "Draft.Agent" via "Draft.Subst_Term")
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
### theory "Draft.Chain"
### 0.604s elapsed time, 0.641s cpu time, 0.047s GC time
Loading theory "Draft.Subst_Term" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.Weak_Sim_Pres" via "Draft.Sim_Pres" via "Draft.Simulation" via "Draft.Semantics" via "Draft.Frame" via "Draft.Agent")
### Ambiguous input (line 15 of "$AFP/Psi_Calculi/Subst_Term.thy") produces 2 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" Tvec) ("_idts" ("_position" T) ("_position" x))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq"
###           ("_applC" ("_position" length) ("_position" xvec))
###           ("_applC" ("_position" length) ("_position" Tvec))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" T))))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh"
###                 ("_constrain" ("_position" x) ("_type_name" name))
###                 ("\<^fixed>subst" ("_position" T) ("_position" xvec)
###                   ("_position" Tvec))))))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" Tvec)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" Tvec) ("_idts" ("_position" T) ("_position" x))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq"
###           ("_applC" ("_position" length) ("_position" xvec))
###           ("_applC" ("_position" length) ("_position" Tvec))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" T))))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^fixed>subst"
###                 ("\<^const>Nominal.fresh"
###                   ("_constrain" ("_position" x) ("_type_name" name))
###                   ("_position" T))
###                 ("_position" xvec) ("_position" Tvec)))))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" Tvec)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
locale substType
  fixes
    subst :: "'a => name list => 'b list => 'a"
      (\<open>_[_::=_]\<close> [80, 80, 80] 130)
  assumes "substType subst"
### Ambiguous input (line 55 of "$AFP/Psi_Calculi/Subst_Term.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^fixed>subst"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" M))
###     ("_position" xvec) ("_position" Tvec)))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x)
###     ("\<^fixed>subst" ("_position" M) ("_position" xvec)
###       ("_position" Tvec))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 69 of "$AFP/Psi_Calculi/Subst_Term.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^fixed>subst"
###     ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" M))
###     ("_position" xvec) ("_position" Tvec)))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" yvec)
###     ("\<^fixed>subst" ("_position" M) ("_position" xvec)
###       ("_position" Tvec))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 100 of "$AFP/Psi_Calculi/Subst_Term.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^fixed>subst"
###     ("\<^const>Nominal.fresh_star" ("_position" Xs) ("_position" T))
###     ("_position" xvec) ("_position" Tvec)))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" Xs)
###     ("\<^fixed>subst" ("_position" T) ("_position" xvec)
###       ("_position" Tvec))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 115 of "$AFP/Psi_Calculi/Subst_Term.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^fixed>subst"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" T))
###     ("_position" xvec) ("_position" Tvec)))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("\<^fixed>subst" ("_position" T) ("_position" xvec)
###       ("_position" Tvec))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 187 of "$AFP/Psi_Calculi/Subst_Term.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.seqSubst"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" T))
###     ("_position" \<sigma>)))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x)
###     ("\<^const>local.seqSubst" ("_position" T) ("_position" \<sigma>))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 199 of "$AFP/Psi_Calculi/Subst_Term.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.seqSubst"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" T))
###     ("_position" \<sigma>)))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("\<^const>local.seqSubst" ("_position" T) ("_position" \<sigma>))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### theory "Draft.Subst_Term"
### 0.084s elapsed time, 0.087s cpu time, 0.000s GC time
Loading theory "Draft.Agent" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.Weak_Sim_Pres" via "Draft.Sim_Pres" via "Draft.Simulation" via "Draft.Semantics" via "Draft.Frame")
### length descr: 5
### length new_type_names: 3
### perm_empty_thms
### perm_append_thms
### perm_eq_thms
### representing sets
### big_rep_name: psi_Rep_input_Rep_psiCase_Rep_set
Proofs for inductive predicate(s) "psi_Rep_set", "input_Rep_set", "psiCase_Rep_set"
### proving closure under permutation...
### defining type...
### prove that new types are in class pt_<name> ...
### prove that new types are in class cp_<name1>_<name2> ...
### proving finite support for the new datatype
### proving strong induction theorem ...
### defining recursion combinator ...
Proofs for inductive predicate(s) "psi_input_psiCase_rec_set_1", "psi_input_psiCase_rec_set_2", "psi_input_psiCase_rec_set_3"
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### ~ False == True
### Ignoring duplicate rewrite rule:
### ?a1 \<sharp> ?b1 == ?a1 ~= ?b1
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### finite (supp ?x1) == True
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### ~ False == True
### Ignoring duplicate rewrite rule:
### ?a1 \<sharp> ?b1 == ?a1 ~= ?b1
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### finite (supp ?x1) == True
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### ~ False == True
### Ignoring duplicate rewrite rule:
### ?a1 \<sharp> ?b1 == ?a1 ~= ?b1
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### finite (supp ?x1) == True
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### ~ False == True
### Ignoring duplicate rewrite rule:
### ?a1 \<sharp> ?b1 == ?a1 ~= ?b1
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### finite (supp ?x1) == True
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
Found termination order: "size_list size <*mlex*> {}"
consts
  resChain :: "name list => ('a, 'b, 'c) psi => ('a, 'b, 'c) psi"
consts
  inputChain :: "name list => 'a => ('a, 'b, 'c) psi => ('a, 'b, 'c) input"
locale substPsi
  fixes substTerm :: "'a => name list => 'a list => 'a"
    and substAssert :: "'b => name list => 'a list => 'b"
    and substCond :: "'c => name list => 'a list => 'c"
  assumes "substPsi substTerm substAssert substCond"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (fst p)) <*mlex*> {}"
### theory "Draft.Agent"
### 7.246s elapsed time, 8.068s cpu time, 1.108s GC time
Loading theory "Draft.Frame" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.Weak_Sim_Pres" via "Draft.Sim_Pres" via "Draft.Simulation" via "Draft.Semantics")
### length descr: 2
### length new_type_names: 1
### perm_empty_thms
### perm_append_thms
### perm_eq_thms
### representing sets
### big_rep_name: frame_Rep_set
Proofs for inductive predicate(s) "frame_Rep_set"
### proving closure under permutation...
### defining type...
### prove that new types are in class pt_<name> ...
### prove that new types are in class cp_<name1>_<name2> ...
### proving finite support for the new datatype
### proving strong induction theorem ...
### defining recursion combinator ...
Proofs for inductive predicate(s) "frame_rec_set"
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### ~ False == True
### Ignoring duplicate rewrite rule:
### ?a1 \<sharp> ?b1 == ?a1 ~= ?b1
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### finite (supp ?x1) == True
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### ~ False == True
### Ignoring duplicate rewrite rule:
### ?a1 \<sharp> ?b1 == ?a1 ~= ?b1
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### finite (supp ?x1) == True
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### Ambiguous input (line 22 of "$AFP/Psi_Calculi/Frame.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" frameResChain)
###       ("_cargs" ("\<^const>List.list.Cons" ("_position" x) ("_position" xs))
###         ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("_applC" ("_position" frameResChain)
###         ("_cargs" ("_position" xs) ("_position" F))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" frameResChain)
###       ("_cargs" ("\<^const>List.list.Cons" ("_position" x) ("_position" xs))
###         ("_position" F)))
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("_applC" ("_position" frameResChain)
###         ("_cargs" ("_position" xs) ("_position" F))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
consts
  frameResChain :: "name list => 'a frame => 'a frame"
### Ambiguous input (line 33 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.perm" ("_position" perm)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.perm" ("_position" perm)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.perm" ("_position" perm)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.perm" ("_position" perm)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" F)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 41 of "$AFP/Psi_Calculi/Frame.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>HOL.disj"
###       ("\<^const>Set.member" ("_position" x)
###         ("_applC" ("_position" set) ("_position" xvec)))
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>HOL.disj"
###       ("\<^const>Set.member" ("_position" x)
###         ("_applC" ("_position" set) ("_position" xvec)))
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" F)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 49 of "$AFP/Psi_Calculi/Frame.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" Xs)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("_Ball" ("_position" x) ("_position" Xs)
###       ("\<^const>HOL.disj"
###         ("\<^const>Set.member" ("_position" x)
###           ("_applC" ("_position" set) ("_position" xvec)))
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" F))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" Xs)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))
###     ("_Ball" ("_position" x) ("_position" Xs)
###       ("\<^const>HOL.disj"
###         ("\<^const>Set.member" ("_position" x)
###           ("_applC" ("_position" set) ("_position" xvec)))
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" F))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 60 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" F)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 91 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###     ("\<^const>Agent.psi.Res" ("_position" y)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###     ("\<^const>Agent.psi.Res" ("_position" y)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" F)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 106 of "$AFP/Psi_Calculi/Frame.thy") produces 8 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" F))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" F))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" F))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" F))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" F))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" F))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" F))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" F))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" F)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 171 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###     ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###     ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###     ("\<^const>Agent.psi.Res" ("_position" y) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###     ("\<^const>Agent.psi.Res" ("_position" y) ("_position" G))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 184 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###     ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###     ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###     ("\<^const>Agent.psi.Res" ("_position" y) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###     ("\<^const>Agent.psi.Res" ("_position" y) ("_position" G))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
locale assertionAux
  fixes SCompose :: "'b => 'b => 'b"  (infixr \<open>\<otimes>\<close> 80)
    and
    SImp :: "'b => 'c => bool"
      (\<open>_ \<turnstile> _\<close> [70, 70] 70)
    and SBottom :: "'b"  (\<open>\<bottom>\<close> 90)
    and
    SChanEq :: "'a => 'a => 'c"
      (\<open>_ \<leftrightarrow> _\<close> [80, 80] 80)
  assumes "assertionAux (\<otimes>) SImp (\<bottom>) SChanEq"
### Ambiguous input (line 696 of "$AFP/Psi_Calculi/Frame.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x)
###     ("\<^fixed>SChanEq" ("_position" M) ("_position" N))))
### ("\<^const>HOL.Trueprop"
###   ("\<^fixed>SChanEq"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" M))
###     ("_position" N)))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1108 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>')))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs"
###           ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###           ("_position" \<Psi>')))
###       ("\<^const>Frame.frame.FRes" ("_position" x)
###         ("_applC" ("_position" insertAssertion)
###           ("_cargs" ("_position" F) ("_position" \<Psi>')))))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>')))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs" ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###           ("_position" \<Psi>')))
###       ("\<^const>Frame.frame.FRes" ("_position" x)
###         ("_applC" ("_position" insertAssertion)
###           ("_cargs" ("_position" F) ("_position" \<Psi>')))))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>')))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs"
###           ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###           ("_position" \<Psi>')))
###       ("\<^const>Agent.psi.Res" ("_position" x)
###         ("_applC" ("_position" insertAssertion)
###           ("_cargs" ("_position" F) ("_position" \<Psi>')))))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>')))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs" ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###           ("_position" \<Psi>')))
###       ("\<^const>Agent.psi.Res" ("_position" x)
###         ("_applC" ("_position" insertAssertion)
###           ("_cargs" ("_position" F) ("_position" \<Psi>')))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1134 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" G)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("_applC" ("_position" mergeFrame)
###         ("_cargs"
###           ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###           ("_position" G)))
###       ("\<^const>Frame.frame.FRes" ("_position" x)
###         ("_applC" ("_position" mergeFrame)
###           ("_cargs" ("_position" F) ("_position" G)))))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" G)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("_applC" ("_position" mergeFrame)
###         ("_cargs" ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###           ("_position" G)))
###       ("\<^const>Frame.frame.FRes" ("_position" x)
###         ("_applC" ("_position" mergeFrame)
###           ("_cargs" ("_position" F) ("_position" G)))))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" G)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("_applC" ("_position" mergeFrame)
###         ("_cargs"
###           ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###           ("_position" G)))
###       ("\<^const>Agent.psi.Res" ("_position" x)
###         ("_applC" ("_position" mergeFrame)
###           ("_cargs" ("_position" F) ("_position" G)))))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" G)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("_applC" ("_position" mergeFrame)
###         ("_cargs" ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###           ("_position" G)))
###       ("\<^const>Agent.psi.Res" ("_position" x)
###         ("_applC" ("_position" mergeFrame)
###           ("_cargs" ("_position" F) ("_position" G)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1174 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P)))
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P)))
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P)))
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P)))
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1300 of "$AFP/Psi_Calculi/Frame.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" F)))
###     ("_Ball" ("_position" x) ("_applC" ("_position" set) ("_position" xvec))
###       ("\<^const>HOL.disj"
###         ("\<^const>Set.member" ("_position" x)
###           ("_applC" ("_position" set) ("_position" yvec)))
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" F))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))
###     ("_Ball" ("_position" x) ("_applC" ("_position" set) ("_position" xvec))
###       ("\<^const>HOL.disj"
###         ("\<^const>Set.member" ("_position" x)
###           ("_applC" ("_position" set) ("_position" yvec)))
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" F))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1319 of "$AFP/Psi_Calculi/Frame.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" F))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" F))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1332 of "$AFP/Psi_Calculi/Frame.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" F))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" F))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ignoring duplicate rewrite rule:
### ?xvec1 \<sharp>* (\<bottom>) == True
### Ignoring duplicate rewrite rule:
### ?Xs1 \<sharp>* (\<bottom>) == True
### Ambiguous input (line 1427 of "$AFP/Psi_Calculi/Frame.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###     ("_position" F)))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###     ("_position" F)))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1450 of "$AFP/Psi_Calculi/Frame.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp" ("_position" F)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp" ("_position" F)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1472 of "$AFP/Psi_Calculi/Frame.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###     ("_position" F)))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###     ("_position" F)))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1483 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" G))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1522 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" G))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1531 of "$AFP/Psi_Calculi/Frame.thy") produces 16 parse trees (10 displayed):
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" F)))
###     ("\<^const>Agent.psi.Res" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" F)))
###     ("\<^const>Agent.psi.Res" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" F)))
###     ("\<^const>Agent.psi.Res" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" F)))
###     ("\<^const>Agent.psi.Res" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1588 of "$AFP/Psi_Calculi/Frame.thy") produces 16 parse trees (10 displayed):
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" F)))
###     ("\<^const>Agent.psi.Res" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" F)))
###     ("\<^const>Agent.psi.Res" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" F)))
###     ("\<^const>Agent.psi.Res" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" F)))
###     ("\<^const>Agent.psi.Res" ("_position" y)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1596 of "$AFP/Psi_Calculi/Frame.thy") produces 16 parse trees (10 displayed):
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1604 of "$AFP/Psi_Calculi/Frame.thy") produces 16 parse trees (10 displayed):
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F)))
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F)))
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1612 of "$AFP/Psi_Calculi/Frame.thy") produces 16 parse trees (10 displayed):
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" F)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1620 of "$AFP/Psi_Calculi/Frame.thy") produces 16 parse trees (10 displayed):
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1628 of "$AFP/Psi_Calculi/Frame.thy") produces 16 parse trees (10 displayed):
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" F)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1650 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1657 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1667 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("_applC" ("_position" insertAssertion)
###       ("_cargs"
###         ("_applC" ("_position" extractFrame)
###           ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P)))
###         ("_position" \<Psi>)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs" ("_applC" ("_position" extractFrame) ("_position" P))
###           ("_position" \<Psi>))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("_applC" ("_position" insertAssertion)
###       ("_cargs"
###         ("_applC" ("_position" extractFrame)
###           ("\<^const>Frame.frameResChain" ("_position" xvec)
###             ("_position" P)))
###         ("_position" \<Psi>)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs" ("_applC" ("_position" extractFrame) ("_position" P))
###           ("_position" \<Psi>))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("_applC" ("_position" insertAssertion)
###       ("_cargs"
###         ("_applC" ("_position" extractFrame)
###           ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P)))
###         ("_position" \<Psi>)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs" ("_applC" ("_position" extractFrame) ("_position" P))
###           ("_position" \<Psi>))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("_applC" ("_position" insertAssertion)
###       ("_cargs"
###         ("_applC" ("_position" extractFrame)
###           ("\<^const>Frame.frameResChain" ("_position" xvec)
###             ("_position" P)))
###         ("_position" \<Psi>)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs" ("_applC" ("_position" extractFrame) ("_position" P))
###           ("_position" \<Psi>))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1678 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("_applC" ("_position" insertAssertion)
###       ("_cargs"
###         ("_applC" ("_position" extractFrame)
###           ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P)))
###         ("_position" \<Psi>)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs" ("_applC" ("_position" extractFrame) ("_position" P))
###           ("_position" \<Psi>))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("_applC" ("_position" insertAssertion)
###       ("_cargs"
###         ("_applC" ("_position" extractFrame)
###           ("\<^const>Frame.frameResChain" ("_position" xvec)
###             ("_position" P)))
###         ("_position" \<Psi>)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs" ("_applC" ("_position" extractFrame) ("_position" P))
###           ("_position" \<Psi>))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("_applC" ("_position" insertAssertion)
###       ("_cargs"
###         ("_applC" ("_position" extractFrame)
###           ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P)))
###         ("_position" \<Psi>)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs" ("_applC" ("_position" extractFrame) ("_position" P))
###           ("_position" \<Psi>))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("_applC" ("_position" insertAssertion)
###       ("_cargs"
###         ("_applC" ("_position" extractFrame)
###           ("\<^const>Frame.frameResChain" ("_position" xvec)
###             ("_position" P)))
###         ("_position" \<Psi>)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs" ("_applC" ("_position" extractFrame) ("_position" P))
###           ("_position" \<Psi>))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1689 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F))
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F))
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F))
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatImp"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F))
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" G))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1700 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F))
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F))
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F))
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" G))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F))
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" G))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1841 of "$AFP/Psi_Calculi/Frame.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>local.mergeFrame"
###       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>F)
###         ("_position" \<Psi>\<^sub>F))
###       ("\<^const>Agent.psi.Res" ("_position" x)
###         ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>G)
###           ("_position" \<Psi>\<^sub>G))))
###     ("\<^const>Frame.FAssertJudge"
###       ("\<^const>List.append" ("_position" A\<^sub>F)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" A\<^sub>G)))
###       ("\<^fixed>SCompose" ("_position" \<Psi>\<^sub>F)
###         ("_position" \<Psi>\<^sub>G)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>local.mergeFrame"
###       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>F)
###         ("_position" \<Psi>\<^sub>F))
###       ("\<^const>Frame.frame.FRes" ("_position" x)
###         ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>G)
###           ("_position" \<Psi>\<^sub>G))))
###     ("\<^const>Frame.FAssertJudge"
###       ("\<^const>List.append" ("_position" A\<^sub>F)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" A\<^sub>G)))
###       ("\<^fixed>SCompose" ("_position" \<Psi>\<^sub>F)
###         ("_position" \<Psi>\<^sub>G)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1859 of "$AFP/Psi_Calculi/Frame.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>local.mergeFrame"
###       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>F)
###         ("_position" \<Psi>\<^sub>F))
###       ("\<^const>Agent.psi.Res" ("_position" x)
###         ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>G)
###           ("_position" \<Psi>\<^sub>G))))
###     ("\<^const>Frame.FAssertJudge"
###       ("\<^const>List.append" ("_position" A\<^sub>F)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" A\<^sub>G)))
###       ("\<^fixed>SCompose" ("_position" \<Psi>\<^sub>F)
###         ("_position" \<Psi>\<^sub>G)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>local.mergeFrame"
###       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>F)
###         ("_position" \<Psi>\<^sub>F))
###       ("\<^const>Frame.frame.FRes" ("_position" x)
###         ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>G)
###           ("_position" \<Psi>\<^sub>G))))
###     ("\<^const>Frame.FAssertJudge"
###       ("\<^const>List.append" ("_position" A\<^sub>F)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" A\<^sub>G)))
###       ("\<^fixed>SCompose" ("_position" \<Psi>\<^sub>F)
###         ("_position" \<Psi>\<^sub>G)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1871 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" insertAssertion)
###       ("_cargs"
###         ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F))
###         ("_position" \<Psi>)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs" ("_position" F) ("_position" \<Psi>))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" insertAssertion)
###       ("_cargs"
###         ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F))
###         ("_position" \<Psi>)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs" ("_position" F) ("_position" \<Psi>))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" insertAssertion)
###       ("_cargs"
###         ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F))
###         ("_position" \<Psi>)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs" ("_position" F) ("_position" \<Psi>))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" insertAssertion)
###       ("_cargs"
###         ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F))
###         ("_position" \<Psi>)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("_applC" ("_position" insertAssertion)
###         ("_cargs" ("_position" F) ("_position" \<Psi>))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1879 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" extractFrame)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("_applC" ("_position" extractFrame) ("_position" P)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1888 of "$AFP/Psi_Calculi/Frame.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" F))
###     ("_position" F)))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" F))
###     ("_position" F)))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
locale assertion
  fixes SCompose :: "'b => 'b => 'b"
    and SImp :: "'b => 'c => bool"
    and SBottom :: "'b"
    and SChanEq :: "'a => 'a => 'c"
  assumes "assertion SCompose SImp SBottom SChanEq"
### Ambiguous input (line 2085 of "$AFP/Psi_Calculi/Frame.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>local.mergeFrame" ("_position" F) ("_position" G)))
###     ("\<^const>local.mergeFrame" ("_position" F)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" G)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>local.mergeFrame" ("_position" F) ("_position" G)))
###     ("\<^const>local.mergeFrame" ("_position" F)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" G)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>local.mergeFrame" ("_position" F) ("_position" G)))
###     ("\<^const>local.mergeFrame" ("_position" F)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" G)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.FrameStatEq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>local.mergeFrame" ("_position" F) ("_position" G)))
###     ("\<^const>local.mergeFrame" ("_position" F)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" G)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### theory "Draft.Frame"
### 1.304s elapsed time, 1.446s cpu time, 0.178s GC time
Loading theory "Draft.Semantics" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.Weak_Sim_Pres" via "Draft.Sim_Pres" via "Draft.Simulation")
### length descr: 2
### length new_type_names: 1
### perm_empty_thms
### perm_append_thms
### perm_eq_thms
### representing sets
### big_rep_name: boundOutput_Rep_set
Proofs for inductive predicate(s) "boundOutput_Rep_set"
### proving closure under permutation...
### defining type...
### prove that new types are in class pt_<name> ...
### prove that new types are in class cp_<name1>_<name2> ...
### proving finite support for the new datatype
### proving strong induction theorem ...
### defining recursion combinator ...
Proofs for inductive predicate(s) "boundOutput_rec_set"
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### ~ False == True
### Ignoring duplicate rewrite rule:
### ?a1 \<sharp> ?b1 == ?a1 ~= ?b1
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### finite (supp ?x1) == True
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### ~ False == True
### Ignoring duplicate rewrite rule:
### ?a1 \<sharp> ?b1 == ?a1 ~= ?b1
### Ignoring duplicate rewrite rule:
### ?y & ?y == ?y
### Ignoring duplicate rewrite rule:
### finite (supp ?x1) == True
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### Ambiguous input (line 16 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" BOresChain)
###       ("_cargs" ("\<^const>List.list.Cons" ("_position" x) ("_position" xs))
###         ("_position" B)))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_applC" ("_position" BOresChain)
###         ("_cargs" ("_position" xs) ("_position" B))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" BOresChain)
###       ("_cargs" ("\<^const>List.list.Cons" ("_position" x) ("_position" xs))
###         ("_position" B)))
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("_applC" ("_position" BOresChain)
###         ("_cargs" ("_position" xs) ("_position" B))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" BOresChain)
###       ("_cargs" ("\<^const>List.list.Cons" ("_position" x) ("_position" xs))
###         ("_position" B)))
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("_applC" ("_position" BOresChain)
###         ("_cargs" ("_position" xs) ("_position" B))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
consts
  BOresChain ::
    "name list => ('a, 'b, 'c) boundOutput => ('a, 'b, 'c) boundOutput"
### Ambiguous input (line 19 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.eq"
###   ("\<^fixed>BOresChainJudge" ("_position" xvec) ("_position" B))
###   ("_applC" ("_position" BOresChain)
###     ("_cargs" ("_position" xvec) ("_position" B))))
### ("\<^const>Pure.eq"
###   ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B))
###   ("_applC" ("_position" BOresChain)
###     ("_cargs" ("_position" xvec) ("_position" B))))
### ("\<^const>Pure.eq"
###   ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B))
###   ("_applC" ("_position" BOresChain)
###     ("_cargs" ("_position" xvec) ("_position" B))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 26 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.perm" ("_position" perm)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.perm" ("_position" perm)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.perm" ("_position" perm)
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("_position" B)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.perm" ("_position" perm)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.perm" ("_position" perm)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.perm" ("_position" perm)
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("_position" B)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.perm" ("_position" perm)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.perm" ("_position" perm)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.perm" ("_position" perm)
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("_position" B)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" xvec))
###       ("\<^const>Nominal.perm" ("_position" perm) ("_position" B)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 38 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Agent.resChain" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" P)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N')
###         ("_position" P')))
###     ("\<^const>HOL.conj"
###       ("\<^const>HOL.eq" ("_position" xvec) ("\<^const>List.list.Nil"))
###       ("\<^const>HOL.conj"
###         ("\<^const>HOL.eq" ("_position" N) ("_position" N'))
###         ("\<^const>HOL.eq" ("_position" P) ("_position" P'))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Frame.frameResChain" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" P)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N')
###         ("_position" P')))
###     ("\<^const>HOL.conj"
###       ("\<^const>HOL.eq" ("_position" xvec) ("\<^const>List.list.Nil"))
###       ("\<^const>HOL.conj"
###         ("\<^const>HOL.eq" ("_position" N) ("_position" N'))
###         ("\<^const>HOL.eq" ("_position" P) ("_position" P'))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" P)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N')
###         ("_position" P')))
###     ("\<^const>HOL.conj"
###       ("\<^const>HOL.eq" ("_position" xvec) ("\<^const>List.list.Nil"))
###       ("\<^const>HOL.conj"
###         ("\<^const>HOL.eq" ("_position" N) ("_position" N'))
###         ("\<^const>HOL.eq" ("_position" P) ("_position" P'))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 39 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N')
###         ("_position" P'))
###       ("\<^const>Agent.resChain" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" P))))
###     ("\<^const>HOL.conj"
###       ("\<^const>HOL.eq" ("_position" xvec) ("\<^const>List.list.Nil"))
###       ("\<^const>HOL.conj"
###         ("\<^const>HOL.eq" ("_position" N) ("_position" N'))
###         ("\<^const>HOL.eq" ("_position" P) ("_position" P'))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N')
###         ("_position" P'))
###       ("\<^const>Frame.frameResChain" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" P))))
###     ("\<^const>HOL.conj"
###       ("\<^const>HOL.eq" ("_position" xvec) ("\<^const>List.list.Nil"))
###       ("\<^const>HOL.conj"
###         ("\<^const>HOL.eq" ("_position" N) ("_position" N'))
###         ("\<^const>HOL.eq" ("_position" P) ("_position" P'))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N')
###         ("_position" P'))
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" P))))
###     ("\<^const>HOL.conj"
###       ("\<^const>HOL.eq" ("_position" xvec) ("\<^const>List.list.Nil"))
###       ("\<^const>HOL.conj"
###         ("\<^const>HOL.eq" ("_position" N) ("_position" N'))
###         ("\<^const>HOL.eq" ("_position" P) ("_position" P'))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 41 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B))
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B')))
###     ("\<^const>HOL.eq" ("_position" B) ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B))
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B')))
###     ("\<^const>HOL.eq" ("_position" B) ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("_position" B))
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B')))
###     ("\<^const>HOL.eq" ("_position" B) ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B))
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B')))
###     ("\<^const>HOL.eq" ("_position" B) ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B))
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B')))
###     ("\<^const>HOL.eq" ("_position" B) ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("_position" B))
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B')))
###     ("\<^const>HOL.eq" ("_position" B) ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B))
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("_position" B')))
###     ("\<^const>HOL.eq" ("_position" B) ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B))
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("_position" B')))
###     ("\<^const>HOL.eq" ("_position" B) ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("_position" B))
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("_position" B')))
###     ("\<^const>HOL.eq" ("_position" B) ("_position" B'))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 59 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh" ("_position" x)
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("_position" B)))
###     ("\<^const>HOL.disj"
###       ("\<^const>Set.member" ("_position" x)
###         ("_applC" ("_position" set) ("_position" xvec)))
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B)))
###     ("\<^const>HOL.disj"
###       ("\<^const>Set.member" ("_position" x)
###         ("_applC" ("_position" set) ("_position" xvec)))
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B)))
###     ("\<^const>HOL.disj"
###       ("\<^const>Set.member" ("_position" x)
###         ("_applC" ("_position" set) ("_position" xvec)))
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" B)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 69 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" Xs)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B)))
###     ("_Ball" ("_position" x) ("_position" Xs)
###       ("\<^const>HOL.disj"
###         ("\<^const>Set.member" ("_position" x)
###           ("_applC" ("_position" set) ("_position" xvec)))
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" B))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" Xs)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B)))
###     ("_Ball" ("_position" x) ("_position" Xs)
###       ("\<^const>HOL.disj"
###         ("\<^const>Set.member" ("_position" x)
###           ("_applC" ("_position" set) ("_position" xvec)))
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" B))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" Xs)
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("_position" B)))
###     ("_Ball" ("_position" x) ("_position" Xs)
###       ("\<^const>HOL.disj"
###         ("\<^const>Set.member" ("_position" x)
###           ("_applC" ("_position" set) ("_position" xvec)))
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" B))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 70 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" yvec)
###       ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B)))
###     ("_Ball" ("_position" x) ("_applC" ("_position" set) ("_position" yvec))
###       ("\<^const>HOL.disj"
###         ("\<^const>Set.member" ("_position" x)
###           ("_applC" ("_position" set) ("_position" xvec)))
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" B))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" yvec)
###       ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B)))
###     ("_Ball" ("_position" x) ("_applC" ("_position" set) ("_position" yvec))
###       ("\<^const>HOL.disj"
###         ("\<^const>Set.member" ("_position" x)
###           ("_applC" ("_position" set) ("_position" xvec)))
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" B))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" yvec)
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("_position" B)))
###     ("_Ball" ("_position" x) ("_applC" ("_position" set) ("_position" yvec))
###       ("\<^const>HOL.disj"
###         ("\<^const>Set.member" ("_position" x)
###           ("_applC" ("_position" set) ("_position" xvec)))
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" B))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 71 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" Xs)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B)))
###     ("\<^const>Nominal.fresh_star" ("_position" Xs)
###       ("\<^const>Nominal.abs_fun" ("_position" x) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" Xs)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" B)))
###     ("\<^const>Nominal.fresh_star" ("_position" Xs)
###       ("\<^const>Nominal.abs_fun" ("_position" x) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" Xs)
###       ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###         ("_position" B)))
###     ("\<^const>Nominal.fresh_star" ("_position" Xs)
###       ("\<^const>Nominal.abs_fun" ("_position" x) ("_position" B)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 72 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B)))
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("\<^const>Nominal.abs_fun" ("_position" x) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" B)))
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("\<^const>Nominal.abs_fun" ("_position" x) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###         ("_position" B)))
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("\<^const>Nominal.abs_fun" ("_position" x) ("_position" B)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 79 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_constrain"
###       ("_applC" ("_position" supp)
###         ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###           ("_position" B)))
###       ("_tapp" ("_type_name" name) ("_type_name" set)))
###     ("\<^const>Groups.minus_class.minus"
###       ("_applC" ("_position" supp) ("_position" B))
###       ("_applC" ("_position" supp) ("_position" xvec)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_constrain"
###       ("_applC" ("_position" supp)
###         ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B)))
###       ("_tapp" ("_type_name" name) ("_type_name" set)))
###     ("\<^const>Groups.minus_class.minus"
###       ("_applC" ("_position" supp) ("_position" B))
###       ("_applC" ("_position" supp) ("_position" xvec)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_constrain"
###       ("_applC" ("_position" supp)
###         ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B)))
###       ("_tapp" ("_type_name" name) ("_type_name" set)))
###     ("\<^const>Groups.minus_class.minus"
###       ("_applC" ("_position" supp) ("_position" B))
###       ("_applC" ("_position" supp) ("_position" xvec)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 90 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" Xs) ("_position" xvec)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("\<^const>Nominal.fresh_star" ("_position" Xs)
###         ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###           ("_position" B)))
###       ("\<^const>Nominal.fresh_star" ("_position" Xs) ("_position" B)))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" Xs) ("_position" xvec)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("\<^const>Nominal.fresh_star" ("_position" Xs)
###         ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B)))
###       ("\<^const>Nominal.fresh_star" ("_position" Xs) ("_position" B)))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" Xs) ("_position" xvec)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("\<^const>Nominal.fresh_star" ("_position" Xs)
###         ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B)))
###       ("\<^const>Nominal.fresh_star" ("_position" Xs) ("_position" B)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 91 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" xvec)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###         ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B)))
###       ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" B)))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" xvec)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###         ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B)))
###       ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" B)))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" xvec)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###         ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###           ("_position" B)))
###       ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" B)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 92 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" B))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 93 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" xvec)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("\<^const>Nominal.fresh" ("_position" x)
###         ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###           ("_position" B)))
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" B)))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" xvec)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("\<^const>Nominal.fresh" ("_position" x)
###         ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B)))
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" B)))))
### ("\<^const>Pure.imp"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" xvec)))
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>HOL.eq"
###       ("\<^const>Nominal.fresh" ("_position" x)
###         ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B)))
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" B)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 109 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" B))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("_position" B))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" B))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("_position" B))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 130 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" yvec)
###     ("\<^const>Agent.resChain" ("_position" zvec) ("_position" B))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" yvec)
###     ("\<^const>Frame.frameResChain" ("_position" zvec) ("_position" B))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" yvec)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" zvec)
###       ("_position" B))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 132 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" zvec) ("_position" B))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" zvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" zvec) ("_position" B))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" zvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" zvec)
###       ("_position" B))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" zvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" zvec) ("_position" B))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" zvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" zvec) ("_position" B))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" zvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" zvec)
###       ("_position" B))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" zvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" zvec) ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" zvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" zvec) ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" zvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" zvec)
###       ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" zvec))
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" B)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 154 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" M))
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" M))
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" M))
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" M))
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" M))
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" M))
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" M))
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" M))
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm" ("_position" p) ("_position" yvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" M))
###         ("\<^const>Nominal.perm" ("_position" p) ("_position" P))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 169 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" xvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" xvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" xvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" xvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" xvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" xvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" xvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" xvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" xvec))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" P))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 186 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" B))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" B))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" B))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" B))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" B))
###     ("\<^const>Agent.psi.Res" ("_position" y)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" B))
###     ("\<^const>Agent.psi.Res" ("_position" y)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B))
###     ("\<^const>Agent.psi.Res" ("_position" y)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 196 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" B))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" B))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" B))
###     ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" B))
###     ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B))
###     ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" B))
###     ("\<^const>Agent.psi.Res" ("_position" y) ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" B))
###     ("\<^const>Agent.psi.Res" ("_position" y) ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B))
###     ("\<^const>Agent.psi.Res" ("_position" y) ("_position" C))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 209 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" B))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" B))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" B))
###     ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" B))
###     ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B))
###     ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" B))
###     ("\<^const>Agent.psi.Res" ("_position" y) ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" B))
###     ("\<^const>Agent.psi.Res" ("_position" y) ("_position" C))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B))
###     ("\<^const>Agent.psi.Res" ("_position" y) ("_position" C))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 224 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" B))
###     ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" B))
###     ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B'))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 328 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 386 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 403 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 492 of "$AFP/Psi_Calculi/Semantics.thy") produces 81 parse trees (10 displayed):
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###           ("_position" P))))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("\<^const>Agent.resChain" ("_position" yvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###           ("_position" P))))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("\<^const>Agent.resChain" ("_position" yvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###           ("_position" P))))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("\<^const>Agent.resChain" ("_position" yvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###           ("_position" P))))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("\<^const>Agent.resChain" ("_position" yvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###           ("_position" P))))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("\<^const>Agent.resChain" ("_position" yvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Frame.frameResChain" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###           ("_position" P))))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("\<^const>Agent.resChain" ("_position" yvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###           ("_position" P))))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("\<^const>Agent.resChain" ("_position" yvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frame.FRes" ("_position" x)
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###           ("_position" P))))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("\<^const>Agent.resChain" ("_position" yvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.psi.Res" ("_position" x)
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###           ("_position" P))))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###       ("\<^const>Agent.resChain" ("_position" yvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("\<^const>Agent.resChain" ("_position" xvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###           ("_position" P))))
###     ("\<^const>Frame.frame.FRes" ("_position" y)
###       ("\<^const>Agent.resChain" ("_position" yvec)
###         ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###           ("_position" Q))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 525 of "$AFP/Psi_Calculi/Semantics.thy") produces 81 parse trees (10 displayed):
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" B)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" B)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" B)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###         ("_position" B)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###         ("_position" B)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###         ("_position" B)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" B)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Agent.psi.Res" ("_position" y) ("_position" B')))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 531 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" B))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" B))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Nominal.perm"
###         ("_list" ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###         ("_position" B')))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 614 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 618 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 688 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 691 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 777 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 781 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 853 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Par" ("_position" Q) ("_position" R))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 856 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" T)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" R)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 938 of "$AFP/Psi_Calculi/Semantics.thy") produces 27 parse trees (10 displayed):
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" B))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" B))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" B))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" B))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" B))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" B))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.resChain" ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###       ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Frame.frameResChain" ("_position" yvec) ("_position" B)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1014 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1023 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" yvec1) ("_position" yvec2))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" yvec1) ("_position" yvec2))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" yvec1) ("_position" yvec2))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" yvec1) ("_position" yvec2))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" yvec1) ("_position" yvec2))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" yvec1) ("_position" yvec2))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" yvec1) ("_position" yvec2))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" yvec1) ("_position" yvec2))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" yvec1) ("_position" yvec2))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1053 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec1)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" xvec2)))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1061 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" yvec1)
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" yvec2)))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" yvec1)
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" yvec2)))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" yvec1)
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" yvec2)))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" yvec1)
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" yvec2)))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" yvec1)
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" yvec2)))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" yvec1)
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" yvec2)))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" yvec1)
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" yvec2)))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" yvec1)
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" yvec2)))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" xvec1) ("_position" xvec2))
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain"
###       ("\<^const>List.append" ("_position" yvec1)
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" yvec2)))
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" N))
###         ("\<^const>Nominal.perm"
###           ("_list"
###             ("_tuple" ("_position" x) ("_tuple_arg" ("_position" y))))
###           ("_position" Q))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1089 of "$AFP/Psi_Calculi/Semantics.thy") produces 18 parse trees (10 displayed):
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Semantics.boundOutput.BStep" ("_position" z)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Semantics.boundOutput.BStep" ("_position" z)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Semantics.boundOutput.BStep" ("_position" z)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Semantics.boundOutput.BStep" ("_position" z)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Semantics.boundOutput.BStep" ("_position" z)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Semantics.boundOutput.BStep" ("_position" z)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Semantics.boundOutput.BStep" ("_position" z)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Semantics.boundOutput.BStep" ("_position" z)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Semantics.boundOutput.BStep" ("_position" z)
###           ("_position" Q))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("\<^const>Agent.psi.Res" ("_position" z) ("_position" Q))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1093 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq" ("_position" P)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" z)
###       ("_position" R))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq" ("_position" P)
###     ("\<^const>Frame.frame.FRes" ("_position" z) ("_position" R))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq" ("_position" P)
###     ("\<^const>Agent.psi.Res" ("_position" z) ("_position" R))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1093 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" R)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" R)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" R)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" R)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" R)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" R)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" R)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" R)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" M)
###         ("_position" R)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" Q)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### length descr: 1
### length new_type_names: 1
### perm_empty_thms
### perm_append_thms
### perm_eq_thms
### representing sets
### big_rep_name: residual_Rep_set
Proofs for inductive predicate(s) "residual_Rep_set"
### proving closure under permutation...
### defining type...
### prove that new types are in class pt_<name> ...
### prove that new types are in class cp_<name1>_<name2> ...
### proving finite support for the new datatype
### proving strong induction theorem ...
### defining recursion combinator ...
Proofs for inductive predicate(s) "residual_rec_set"
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### length descr: 1
### length new_type_names: 1
### perm_empty_thms
### perm_append_thms
### perm_eq_thms
### representing sets
### big_rep_name: action_Rep_set
Proofs for inductive predicate(s) "action_Rep_set"
### proving closure under permutation...
### defining type...
### prove that new types are in class pt_<name> ...
### prove that new types are in class cp_<name1>_<name2> ...
### proving finite support for the new datatype
### proving strong induction theorem ...
### defining recursion combinator ...
Proofs for inductive predicate(s) "action_rec_set"
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### step 1: obtaining fresh names
### step 2: as, bs, cs # K as ts, K bs us
### step 3: pi1 o (K as ts) = pi2 o (K bs us)
### step 4: pi1 o ts = pi2 o us
### step 5: pi1^-1 o pi2 o us = ts
### step 6: (ts, pi1^-1 o pi2 o vs) in rec_set
### step 7: pi1 o rs = pi2 o vs , rs = pi1^-1 o pi2 o vs
### step 8: as # rs
### step 9: as # fK as ts rs , bs # fK bs us vs
### step 10: cs # fK as ts rs , cs # fK bs us vs
### step 11: pi1 o (fK as ts rs) = pi2 o (fK bs us vs)
### final result
### finished!
### Ambiguous input (line 1182 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^fixed>create_residual"
###       ("\<^const>Semantics.action.Out" ("_position" M) ("_position" xvec)
###         ("_position" N))
###       ("_position" P))
###     ("_applC" ("_position" ROut)
###       ("_cargs" ("_position" M)
###         ("\<^const>Agent.resChain" ("_position" xvec)
###           ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###             ("_position" P)))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^fixed>create_residual"
###       ("\<^const>Semantics.action.Out" ("_position" M) ("_position" xvec)
###         ("_position" N))
###       ("_position" P))
###     ("_applC" ("_position" ROut)
###       ("_cargs" ("_position" M)
###         ("\<^const>Frame.frameResChain" ("_position" xvec)
###           ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###             ("_position" P)))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^fixed>create_residual"
###       ("\<^const>Semantics.action.Out" ("_position" M) ("_position" xvec)
###         ("_position" N))
###       ("_position" P))
###     ("_applC" ("_position" ROut)
###       ("_cargs" ("_position" M)
###         ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###           ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###             ("_position" P)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1268 of "$AFP/Psi_Calculi/Semantics.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Semantics.create_residual"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<alpha>))
###     ("_position" P)))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x)
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("_position" P))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1290 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh" ("_position" x)
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Out" ("_position" M) ("_position" xvec)
###           ("_position" N))
###         ("_position" P)))
###     ("\<^const>HOL.conj"
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" M))
###       ("\<^const>Nominal.fresh" ("_position" x)
###         ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###           ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###             ("_position" P)))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh" ("_position" x)
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Out" ("_position" M) ("_position" xvec)
###           ("_position" N))
###         ("_position" P)))
###     ("\<^const>HOL.conj"
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" M))
###       ("\<^const>Nominal.fresh" ("_position" x)
###         ("\<^const>Frame.frameResChain" ("_position" xvec)
###           ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###             ("_position" P)))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh" ("_position" x)
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Out" ("_position" M) ("_position" xvec)
###           ("_position" N))
###         ("_position" P)))
###     ("\<^const>HOL.conj"
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" M))
###       ("\<^const>Nominal.fresh" ("_position" x)
###         ("\<^const>Agent.resChain" ("_position" xvec)
###           ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###             ("_position" P)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1297 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("_position" P))
###       ("_applC" ("_position" ROut)
###         ("_cargs" ("_position" M) ("_position" B))))
###     ("\<^const>HOL.Ex_binder" ("_idts" ("_position" xvec) ("_position" N))
###       ("\<^const>HOL.conj"
###         ("\<^const>HOL.eq" ("_position" \<alpha>)
###           ("\<^const>Semantics.action.Out" ("_position" M)
###             ("_position" xvec) ("_position" N)))
###         ("\<^const>HOL.eq" ("_position" B)
###           ("\<^const>Agent.resChain" ("_position" xvec)
###             ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###               ("_position" P))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("_position" P))
###       ("_applC" ("_position" ROut)
###         ("_cargs" ("_position" M) ("_position" B))))
###     ("\<^const>HOL.Ex_binder" ("_idts" ("_position" xvec) ("_position" N))
###       ("\<^const>HOL.conj"
###         ("\<^const>HOL.eq" ("_position" \<alpha>)
###           ("\<^const>Semantics.action.Out" ("_position" M)
###             ("_position" xvec) ("_position" N)))
###         ("\<^const>HOL.eq" ("_position" B)
###           ("\<^const>Frame.frameResChain" ("_position" xvec)
###             ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###               ("_position" P))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("_position" P))
###       ("_applC" ("_position" ROut)
###         ("_cargs" ("_position" M) ("_position" B))))
###     ("\<^const>HOL.Ex_binder" ("_idts" ("_position" xvec) ("_position" N))
###       ("\<^const>HOL.conj"
###         ("\<^const>HOL.eq" ("_position" \<alpha>)
###           ("\<^const>Semantics.action.Out" ("_position" M)
###             ("_position" xvec) ("_position" N)))
###         ("\<^const>HOL.eq" ("_position" B)
###           ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###             ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###               ("_position" P))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1300 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("_applC" ("_position" ROut)
###         ("_cargs" ("_position" M) ("_position" B)))
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("_position" P)))
###     ("\<^const>HOL.Ex_binder" ("_idts" ("_position" xvec) ("_position" N))
###       ("\<^const>HOL.conj"
###         ("\<^const>HOL.eq" ("_position" \<alpha>)
###           ("\<^const>Semantics.action.Out" ("_position" M)
###             ("_position" xvec) ("_position" N)))
###         ("\<^const>HOL.eq" ("_position" B)
###           ("\<^const>Agent.resChain" ("_position" xvec)
###             ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###               ("_position" P))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("_applC" ("_position" ROut)
###         ("_cargs" ("_position" M) ("_position" B)))
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("_position" P)))
###     ("\<^const>HOL.Ex_binder" ("_idts" ("_position" xvec) ("_position" N))
###       ("\<^const>HOL.conj"
###         ("\<^const>HOL.eq" ("_position" \<alpha>)
###           ("\<^const>Semantics.action.Out" ("_position" M)
###             ("_position" xvec) ("_position" N)))
###         ("\<^const>HOL.eq" ("_position" B)
###           ("\<^const>Frame.frameResChain" ("_position" xvec)
###             ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###               ("_position" P))))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>HOL.eq"
###       ("_applC" ("_position" ROut)
###         ("_cargs" ("_position" M) ("_position" B)))
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("_position" P)))
###     ("\<^const>HOL.Ex_binder" ("_idts" ("_position" xvec) ("_position" N))
###       ("\<^const>HOL.conj"
###         ("\<^const>HOL.eq" ("_position" \<alpha>)
###           ("\<^const>Semantics.action.Out" ("_position" M)
###             ("_position" xvec) ("_position" N)))
###         ("\<^const>HOL.eq" ("_position" B)
###           ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###             ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###               ("_position" P))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1337 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Out" ("_position" M) ("_position" yvec)
###           ("_position" N))
###         ("_position" P)))
###     ("\<^const>HOL.conj"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M))
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###           ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###             ("_position" P)))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Out" ("_position" M) ("_position" yvec)
###           ("_position" N))
###         ("_position" P)))
###     ("\<^const>HOL.conj"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M))
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("\<^const>Frame.frameResChain" ("_position" yvec)
###           ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###             ("_position" P)))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Out" ("_position" M) ("_position" yvec)
###           ("_position" N))
###         ("_position" P)))
###     ("\<^const>HOL.conj"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M))
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("\<^const>Agent.resChain" ("_position" yvec)
###           ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###             ("_position" P)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1340 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" X)
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Out" ("_position" M) ("_position" yvec)
###           ("_position" N))
###         ("_position" P)))
###     ("\<^const>HOL.conj"
###       ("\<^const>Nominal.fresh_star" ("_position" X) ("_position" M))
###       ("\<^const>Nominal.fresh_star" ("_position" X)
###         ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###           ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###             ("_position" P)))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" X)
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Out" ("_position" M) ("_position" yvec)
###           ("_position" N))
###         ("_position" P)))
###     ("\<^const>HOL.conj"
###       ("\<^const>Nominal.fresh_star" ("_position" X) ("_position" M))
###       ("\<^const>Nominal.fresh_star" ("_position" X)
###         ("\<^const>Frame.frameResChain" ("_position" yvec)
###           ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###             ("_position" P)))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Nominal.fresh_star" ("_position" X)
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Out" ("_position" M) ("_position" yvec)
###           ("_position" N))
###         ("_position" P)))
###     ("\<^const>HOL.conj"
###       ("\<^const>Nominal.fresh_star" ("_position" X) ("_position" M))
###       ("\<^const>Nominal.fresh_star" ("_position" X)
###         ("\<^const>Agent.resChain" ("_position" yvec)
###           ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###             ("_position" P)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1366 of "$AFP/Psi_Calculi/Semantics.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Semantics.create_residual"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<alpha>))
###     ("_position" P)))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x)
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("_position" P))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1389 of "$AFP/Psi_Calculi/Semantics.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Semantics.create_residual"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<alpha>))
###     ("_position" P)))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x)
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("_position" P))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1493 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<beta>)
###       ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###         ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<beta>)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" Q)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<beta>)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" Q)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1497 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq" ("_position" P)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" R))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq" ("_position" P)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" R))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq" ("_position" P)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" R))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
locale env
  fixes substTerm :: "'a => name list => 'a list => 'a"
    and substAssert :: "'b => name list => 'a list => 'b"
    and substCond :: "'c => name list => 'a list => 'c"
    and SCompose' :: "'b => 'b => 'b"
    and SImp' :: "'b => 'c => bool"
    and SBottom' :: "'b"
    and SChanEq' :: "'a => 'a => 'c"
  assumes
    "env substTerm substAssert substCond SCompose' SImp' SBottom' SChanEq'"
### Ambiguous input (line 1534 of "$AFP/Psi_Calculi/Semantics.thy") produces 4 parse trees:
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>SImp'" ("_position" \<Psi>)
###         ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct) ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.subset_eq"
###             ("_applC" ("_position" set) ("_position" xvec))
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" Tvec)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asm"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###         ("_position" N) ("_position" P))
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.In" ("_position" K)
###           ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###             ("_position" Tvec)))
###         ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###           ("_position" Tvec))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>SImp'" ("_position" \<Psi>)
###         ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct) ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.subset_eq"
###             ("_applC" ("_position" set) ("_position" xvec))
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" Tvec)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asm"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###         ("_position" N) ("_position" P))
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.In" ("_position" K)
###           ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###             ("_position" Tvec)))
###         ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###           ("_position" Tvec))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>SImp'" ("_position" \<Psi>)
###         ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct) ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.subset_eq"
###             ("_applC" ("_position" set) ("_position" xvec))
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" Tvec)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asm"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###         ("_position" N) ("_position" P))
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.In" ("_position" K)
###           ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###             ("_position" Tvec)))
###         ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###           ("_position" Tvec))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>SImp'" ("_position" \<Psi>)
###         ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct) ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.subset_eq"
###             ("_applC" ("_position" set) ("_position" xvec))
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" Tvec)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asm"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###         ("_position" N) ("_position" P))
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.In" ("_position" K)
###           ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###             ("_position" Tvec)))
###         ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###           ("_position" Tvec))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1548 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics"
###         ("\<^fixed>SCompose'" ("_position" \<Psi>)
###           ("_position" \<Psi>\<^sub>Q))
###         ("_position" P)
###         ("\<^const>Semantics.create_residual"
###           ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq"
###           ("_applC" ("_position" extractFrame) ("_position" P))
###           ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###             ("_position" \<Psi>\<^sub>P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>P))
###               ("_position" Q)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" K)
###                   ("_position" xvec) ("_position" N))
###                 ("_position" Q'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^fixed>SImp'"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                         ("_position" \<Psi>\<^sub>Q)))
###                     ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" N)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P')))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" Q')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" A\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###     ("_position" \<Psi>)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>\<^sub>P)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" N)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" P')))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" Q')))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct) ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asm"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position"
### K)))))))))))))))))))))))))))))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Tau")
###         ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###           ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics"
###         ("\<^fixed>SCompose'" ("_position" \<Psi>)
###           ("_position" \<Psi>\<^sub>Q))
###         ("_position" P)
###         ("\<^const>Semantics.create_residual"
###           ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq"
###           ("_applC" ("_position" extractFrame) ("_position" P))
###           ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###             ("_position" \<Psi>\<^sub>P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>P))
###               ("_position" Q)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" K)
###                   ("_position" xvec) ("_position" N))
###                 ("_position" Q'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^fixed>SImp'"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                         ("_position" \<Psi>\<^sub>Q)))
###                     ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" N)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P')))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" Q')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" A\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###     ("_position" \<Psi>)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>\<^sub>P)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" N)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" P')))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" Q')))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct) ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asm"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position"
### K)))))))))))))))))))))))))))))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Tau")
###         ("\<^const>Frame.frameResChain" ("_position" xvec)
###           ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics"
###         ("\<^fixed>SCompose'" ("_position" \<Psi>)
###           ("_position" \<Psi>\<^sub>Q))
###         ("_position" P)
###         ("\<^const>Semantics.create_residual"
###           ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq"
###           ("_applC" ("_position" extractFrame) ("_position" P))
###           ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###             ("_position" \<Psi>\<^sub>P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>P))
###               ("_position" Q)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" K)
###                   ("_position" xvec) ("_position" N))
###                 ("_position" Q'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^fixed>SImp'"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                         ("_position" \<Psi>\<^sub>Q)))
###                     ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" N)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P')))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" Q')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" A\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###     ("_position" \<Psi>)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>\<^sub>P)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" N)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" P')))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" Q')))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct) ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asm"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position"
### K)))))))))))))))))))))))))))))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Tau")
###         ("\<^const>Agent.resChain" ("_position" xvec)
###           ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1558 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics"
###         ("\<^fixed>SCompose'" ("_position" \<Psi>)
###           ("_position" \<Psi>\<^sub>Q))
###         ("_position" P)
###         ("\<^const>Semantics.create_residual"
###           ("\<^const>Semantics.action.Out" ("_position" M)
###             ("_position" xvec) ("_position" N))
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq"
###           ("_applC" ("_position" extractFrame) ("_position" P))
###           ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###             ("_position" \<Psi>\<^sub>P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>P))
###               ("_position" Q)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("_position" N))
###                 ("_position" Q'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^fixed>SImp'"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                         ("_position" \<Psi>\<^sub>Q)))
###                     ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" N)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P')))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" Q')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" A\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###     ("_position" \<Psi>)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>\<^sub>P)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" N)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" P')))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" Q')))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct) ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asm"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position"
### K)))))))))))))))))))))))))))))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Tau")
###         ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###           ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics"
###         ("\<^fixed>SCompose'" ("_position" \<Psi>)
###           ("_position" \<Psi>\<^sub>Q))
###         ("_position" P)
###         ("\<^const>Semantics.create_residual"
###           ("\<^const>Semantics.action.Out" ("_position" M)
###             ("_position" xvec) ("_position" N))
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq"
###           ("_applC" ("_position" extractFrame) ("_position" P))
###           ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###             ("_position" \<Psi>\<^sub>P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>P))
###               ("_position" Q)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("_position" N))
###                 ("_position" Q'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^fixed>SImp'"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                         ("_position" \<Psi>\<^sub>Q)))
###                     ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" N)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P')))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" Q')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" A\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###     ("_position" \<Psi>)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>\<^sub>P)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" N)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" P')))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" Q')))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct) ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asm"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position"
### K)))))))))))))))))))))))))))))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Tau")
###         ("\<^const>Frame.frameResChain" ("_position" xvec)
###           ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics"
###         ("\<^fixed>SCompose'" ("_position" \<Psi>)
###           ("_position" \<Psi>\<^sub>Q))
###         ("_position" P)
###         ("\<^const>Semantics.create_residual"
###           ("\<^const>Semantics.action.Out" ("_position" M)
###             ("_position" xvec) ("_position" N))
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq"
###           ("_applC" ("_position" extractFrame) ("_position" P))
###           ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###             ("_position" \<Psi>\<^sub>P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>P))
###               ("_position" Q)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("_position" N))
###                 ("_position" Q'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^fixed>SImp'"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                         ("_position" \<Psi>\<^sub>Q)))
###                     ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" N)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P')))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" Q')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" A\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###     ("_position" \<Psi>)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>\<^sub>P)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" N)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" P')))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" Q')))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct) ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asm"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position"
### K)))))))))))))))))))))))))))))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Tau")
###         ("\<^const>Agent.resChain" ("_position" xvec)
###           ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1568 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics" ("_position" \<Psi>) ("_position" P)
###         ("\<^const>Semantics.create_residual"
###           ("\<^const>Semantics.action.Out" ("_position" M)
###             ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###             ("_position" N))
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member" ("_position" x)
###           ("_applC" ("_position" supp) ("_position" N))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" yvec)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct) ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" yvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" P)))
###                               ("_asm"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec)
###                                     ("_position" M))))))))))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###         ("_position" P))
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Out" ("_position" M)
###           ("\<^const>List.append" ("_position" xvec)
###             ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###           ("_position" N))
###         ("_position" P')))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics" ("_position" \<Psi>) ("_position" P)
###         ("\<^const>Semantics.create_residual"
###           ("\<^const>Semantics.action.Out" ("_position" M)
###             ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###             ("_position" N))
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member" ("_position" x)
###           ("_applC" ("_position" supp) ("_position" N))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" yvec)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct) ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" yvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" P)))
###                               ("_asm"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec)
###                                     ("_position" M))))))))))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Out" ("_position" M)
###           ("\<^const>List.append" ("_position" xvec)
###             ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###           ("_position" N))
###         ("_position" P')))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics" ("_position" \<Psi>) ("_position" P)
###         ("\<^const>Semantics.create_residual"
###           ("\<^const>Semantics.action.Out" ("_position" M)
###             ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###             ("_position" N))
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member" ("_position" x)
###           ("_applC" ("_position" supp) ("_position" N))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" yvec)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct) ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" yvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" P)))
###                               ("_asm"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec)
###                                     ("_position" M))))))))))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###       ("\<^const>Semantics.create_residual"
###         ("\<^const>Semantics.action.Out" ("_position" M)
###           ("\<^const>List.append" ("_position" xvec)
###             ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###           ("_position" N))
###         ("_position" P')))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1572 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics" ("_position" \<Psi>) ("_position" P)
###         ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<alpha>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star"
###               ("_applC" ("_position" bn) ("_position" \<alpha>))
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star"
###                 ("_applC" ("_position" bn) ("_position" \<alpha>))
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_applC" ("_position" subject) ("_position" \<alpha>))))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct)
###                     ("_applC" ("_position" bn)
###                       ("_position" \<alpha>)))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###         ("_position" P))
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P'))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics" ("_position" \<Psi>) ("_position" P)
###         ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<alpha>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star"
###               ("_applC" ("_position" bn) ("_position" \<alpha>))
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star"
###                 ("_applC" ("_position" bn) ("_position" \<alpha>))
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_applC" ("_position" subject) ("_position" \<alpha>))))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct)
###                     ("_applC" ("_position" bn)
###                       ("_position" \<alpha>)))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P'))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics" ("_position" \<Psi>) ("_position" P)
###         ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<alpha>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star"
###               ("_applC" ("_position" bn) ("_position" \<alpha>))
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star"
###                 ("_applC" ("_position" bn) ("_position" \<alpha>))
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_applC" ("_position" subject) ("_position" \<alpha>))))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct)
###                     ("_applC" ("_position" bn)
###                       ("_position" \<alpha>)))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P'))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics" ("_position" \<Psi>) ("_position" P)
###         ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<alpha>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star"
###               ("_applC" ("_position" bn) ("_position" \<alpha>))
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star"
###                 ("_applC" ("_position" bn) ("_position" \<alpha>))
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_applC" ("_position" subject) ("_position" \<alpha>))))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct)
###                     ("_applC" ("_position" bn)
###                       ("_position" \<alpha>)))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###         ("_position" P))
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P'))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics" ("_position" \<Psi>) ("_position" P)
###         ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<alpha>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star"
###               ("_applC" ("_position" bn) ("_position" \<alpha>))
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star"
###                 ("_applC" ("_position" bn) ("_position" \<alpha>))
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_applC" ("_position" subject) ("_position" \<alpha>))))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct)
###                     ("_applC" ("_position" bn)
###                       ("_position" \<alpha>)))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P'))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics" ("_position" \<Psi>) ("_position" P)
###         ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<alpha>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star"
###               ("_applC" ("_position" bn) ("_position" \<alpha>))
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star"
###                 ("_applC" ("_position" bn) ("_position" \<alpha>))
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_applC" ("_position" subject) ("_position" \<alpha>))))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct)
###                     ("_applC" ("_position" bn)
###                       ("_position" \<alpha>)))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P'))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics" ("_position" \<Psi>) ("_position" P)
###         ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<alpha>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star"
###               ("_applC" ("_position" bn) ("_position" \<alpha>))
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star"
###                 ("_applC" ("_position" bn) ("_position" \<alpha>))
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_applC" ("_position" subject) ("_position" \<alpha>))))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct)
###                     ("_applC" ("_position" bn)
###                       ("_position" \<alpha>)))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###         ("_position" P))
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###           ("_position" P'))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics" ("_position" \<Psi>) ("_position" P)
###         ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<alpha>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star"
###               ("_applC" ("_position" bn) ("_position" \<alpha>))
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star"
###                 ("_applC" ("_position" bn) ("_position" \<alpha>))
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_applC" ("_position" subject) ("_position" \<alpha>))))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct)
###                     ("_applC" ("_position" bn)
###                       ("_position" \<alpha>)))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###           ("_position" P'))))))
### ("_bigimpl"
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^fixed>semantics" ("_position" \<Psi>) ("_position" P)
###         ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###           ("_position" P'))))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<alpha>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star"
###               ("_applC" ("_position" bn) ("_position" \<alpha>))
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star"
###                 ("_applC" ("_position" bn) ("_position" \<alpha>))
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_applC" ("_position" subject) ("_position" \<alpha>))))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct)
###                     ("_applC" ("_position" bn)
###                       ("_position" \<alpha>)))))))))))
###   ("\<^const>HOL.Trueprop"
###     ("\<^fixed>semantics" ("_position" \<Psi>)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###       ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###         ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###           ("_position" P'))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Proofs for inductive predicate(s) "semantics"
  Proving monotonicity ...
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
### Ambiguous input (line 1667 of "$AFP/Psi_Calculi/Semantics.thy") produces 4 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec)))
###                 ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###                   ("_position" Tvec))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec)))
###                 ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###                   ("_position" Tvec))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec)))
###                 ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###                   ("_position" Tvec))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec)))
###                 ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###                   ("_position" Tvec))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1688 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>Q))
###                   ("_cargs" ("_position" P)
###                     ("_cargs"
###                       ("\<^const>Semantics.action.In" ("_position" M)
###                         ("_position" N))
###                       ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>HOL.eq"
###               ("_applC" ("_position" extractFrame) ("_position" P))
###               ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                 ("_position" \<Psi>\<^sub>P))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.Out" ("_position" K)
###                       ("_position" xvec) ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs"
###                               ("\<^const>Semantics.action.Out"
###                                 ("_position" K) ("_position" xvec)
###                                 ("_position" N))
###                               ("_position" Q'))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" N)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P')))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" K)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" distinct)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" Q')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>Q))
###                   ("_cargs" ("_position" P)
###                     ("_cargs"
###                       ("\<^const>Semantics.action.In" ("_position" M)
###                         ("_position" N))
###                       ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>HOL.eq"
###               ("_applC" ("_position" extractFrame) ("_position" P))
###               ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                 ("_position" \<Psi>\<^sub>P))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.Out" ("_position" K)
###                       ("_position" xvec) ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs"
###                               ("\<^const>Semantics.action.Out"
###                                 ("_position" K) ("_position" xvec)
###                                 ("_position" N))
###                               ("_position" Q'))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" N)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P')))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" K)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" distinct)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" Q')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>Q))
###                   ("_cargs" ("_position" P)
###                     ("_cargs"
###                       ("\<^const>Semantics.action.In" ("_position" M)
###                         ("_position" N))
###                       ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>HOL.eq"
###               ("_applC" ("_position" extractFrame) ("_position" P))
###               ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                 ("_position" \<Psi>\<^sub>P))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.Out" ("_position" K)
###                       ("_position" xvec) ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs"
###                               ("\<^const>Semantics.action.Out"
###                                 ("_position" K) ("_position" xvec)
###                                 ("_position" N))
###                               ("_position" Q'))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" N)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P')))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" K)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" distinct)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" Q')))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1700 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>Q))
###                   ("_cargs" ("_position" P)
###                     ("_cargs"
###                       ("\<^const>Semantics.action.Out" ("_position" M)
###                         ("_position" xvec) ("_position" N))
###                       ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>HOL.eq"
###               ("_applC" ("_position" extractFrame) ("_position" P))
###               ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                 ("_position" \<Psi>\<^sub>P))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.In" ("_position" K)
###                       ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs"
###                               ("\<^const>Semantics.action.In"
###                                 ("_position" K) ("_position" N))
###                               ("_position" Q'))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" N)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P')))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" K)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" distinct)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" Q')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>Q))
###                   ("_cargs" ("_position" P)
###                     ("_cargs"
###                       ("\<^const>Semantics.action.Out" ("_position" M)
###                         ("_position" xvec) ("_position" N))
###                       ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>HOL.eq"
###               ("_applC" ("_position" extractFrame) ("_position" P))
###               ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                 ("_position" \<Psi>\<^sub>P))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.In" ("_position" K)
###                       ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs"
###                               ("\<^const>Semantics.action.In"
###                                 ("_position" K) ("_position" N))
###                               ("_position" Q'))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" N)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P')))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" K)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" distinct)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" Q')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>Q))
###                   ("_cargs" ("_position" P)
###                     ("_cargs"
###                       ("\<^const>Semantics.action.Out" ("_position" M)
###                         ("_position" xvec) ("_position" N))
###                       ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>HOL.eq"
###               ("_applC" ("_position" extractFrame) ("_position" P))
###               ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                 ("_position" \<Psi>\<^sub>P))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.In" ("_position" K)
###                       ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs"
###                               ("\<^const>Semantics.action.In"
###                                 ("_position" K) ("_position" N))
###                               ("_position" Q'))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" N)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P')))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" K)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" distinct)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" Q')))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1712 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs"
###                         ("\<^const>Semantics.action.Out" ("_position" M)
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("_position" N))
###                         ("_position" P'))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" distinct)
###                               ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("_applC" ("_position" distinct)
###                                 ("_position" yvec)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("_position" N))
###                 ("_position" P')))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs"
###                         ("\<^const>Semantics.action.Out" ("_position" M)
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("_position" N))
###                         ("_position" P'))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" distinct)
###                               ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("_applC" ("_position" distinct)
###                                 ("_position" yvec)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("_position" N))
###                 ("_position" P')))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs"
###                         ("\<^const>Semantics.action.Out" ("_position" M)
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("_position" N))
###                         ("_position" P'))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" distinct)
###                               ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("_applC" ("_position" distinct)
###                                 ("_position" yvec)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("_position" N))
###                 ("_position" P')))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1717 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x) ("_position" C))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" \<alpha>) ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<alpha>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star"
###                     ("_applC" ("_position" bn) ("_position" \<alpha>))
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_applC" ("_position" subject)
###                         ("_position" \<alpha>))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" C)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("\<^const>Agent.psi.Res" ("_position" x)
###                   ("_position" P'))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x) ("_position" C))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" \<alpha>) ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<alpha>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star"
###                     ("_applC" ("_position" bn) ("_position" \<alpha>))
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_applC" ("_position" subject)
###                         ("_position" \<alpha>))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" C)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("\<^const>Agent.psi.Res" ("_position" x)
###                   ("_position" P'))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x) ("_position" C))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" \<alpha>) ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<alpha>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star"
###                     ("_applC" ("_position" bn) ("_position" \<alpha>))
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_applC" ("_position" subject)
###                         ("_position" \<alpha>))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" C)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("\<^const>Agent.psi.Res" ("_position" x)
###                   ("_position" P'))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x) ("_position" C))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" \<alpha>) ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<alpha>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star"
###                     ("_applC" ("_position" bn) ("_position" \<alpha>))
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_applC" ("_position" subject)
###                         ("_position" \<alpha>))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" C)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("\<^const>Frame.frame.FRes" ("_position" x)
###                   ("_position" P'))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x) ("_position" C))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" \<alpha>) ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<alpha>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star"
###                     ("_applC" ("_position" bn) ("_position" \<alpha>))
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_applC" ("_position" subject)
###                         ("_position" \<alpha>))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" C)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("\<^const>Frame.frame.FRes" ("_position" x)
###                   ("_position" P'))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x) ("_position" C))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" \<alpha>) ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<alpha>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star"
###                     ("_applC" ("_position" bn) ("_position" \<alpha>))
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_applC" ("_position" subject)
###                         ("_position" \<alpha>))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" C)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("\<^const>Frame.frame.FRes" ("_position" x)
###                   ("_position" P'))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x) ("_position" C))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" \<alpha>) ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<alpha>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star"
###                     ("_applC" ("_position" bn) ("_position" \<alpha>))
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_applC" ("_position" subject)
###                         ("_position" \<alpha>))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" C)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                   ("_position" P'))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x) ("_position" C))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" \<alpha>) ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<alpha>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star"
###                     ("_applC" ("_position" bn) ("_position" \<alpha>))
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_applC" ("_position" subject)
###                         ("_position" \<alpha>))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" C)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                   ("_position" P'))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x) ("_position" C))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" \<alpha>) ("_position" P'))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<alpha>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star"
###                   ("_applC" ("_position" bn) ("_position" \<alpha>))
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star"
###                     ("_applC" ("_position" bn) ("_position" \<alpha>))
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_applC" ("_position" subject)
###                         ("_position" \<alpha>))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" C)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                   ("_position" P'))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1883 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" Q))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>Q))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Semantics.BOresChainJudge"
###                             ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" P'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" Q))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>Q))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Frame.frameResChain" ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" P'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" Q))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>Q))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Agent.resChain" ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" P'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" Q))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>Q))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Semantics.BOresChainJudge"
###                             ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" P'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" Q))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>Q))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Frame.frameResChain" ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" P'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" Q))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>Q))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Agent.resChain" ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" P'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" Q))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>Q))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Semantics.BOresChainJudge"
###                             ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" P'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" Q))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>Q))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Frame.frameResChain" ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" P'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" Q))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>Q))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Agent.resChain" ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" P'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q))))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1890 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>P))
###                       ("_cargs" ("_position" Q)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Semantics.BOresChainJudge"
###                             ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" Q'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" Q'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>P))
###                       ("_cargs" ("_position" Q)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Frame.frameResChain" ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" Q'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" Q'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>P))
###                       ("_cargs" ("_position" Q)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Agent.resChain" ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" Q'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" Q'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>P))
###                       ("_cargs" ("_position" Q)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Semantics.BOresChainJudge"
###                             ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" Q'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" Q'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>P))
###                       ("_cargs" ("_position" Q)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Frame.frameResChain" ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" Q'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" Q'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>P))
###                       ("_cargs" ("_position" Q)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Agent.resChain" ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" Q'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" Q'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>P))
###                       ("_cargs" ("_position" Q)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Semantics.BOresChainJudge"
###                             ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" Q'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" Q'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>P))
###                       ("_cargs" ("_position" Q)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Frame.frameResChain" ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" Q'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" Q'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P) ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>P))
###                       ("_cargs" ("_position" Q)
###                         ("_cargs" ("_position" M)
###                           ("\<^const>Agent.resChain" ("_position" xvec)
###                             ("\<^const>Semantics.boundOutput.BOut"
###                               ("_position" N) ("_position" Q'))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" N)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" Q'))))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1897 of "$AFP/Psi_Calculi/Semantics.thy") produces 27 parse trees (10 displayed):
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs" ("_position" M)
###                         ("\<^const>Semantics.BOresChainJudge"
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("\<^const>Semantics.boundOutput.BOut"
###                             ("_position" N) ("_position" P'))))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" yvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain"
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs" ("_position" M)
###                         ("\<^const>Frame.frameResChain"
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("\<^const>Semantics.boundOutput.BOut"
###                             ("_position" N) ("_position" P'))))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" yvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain"
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs" ("_position" M)
###                         ("\<^const>Agent.resChain"
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("\<^const>Semantics.boundOutput.BOut"
###                             ("_position" N) ("_position" P'))))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" yvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain"
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs" ("_position" M)
###                         ("\<^const>Semantics.BOresChainJudge"
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("\<^const>Semantics.boundOutput.BOut"
###                             ("_position" N) ("_position" P'))))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" yvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain"
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs" ("_position" M)
###                         ("\<^const>Frame.frameResChain"
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("\<^const>Semantics.boundOutput.BOut"
###                             ("_position" N) ("_position" P'))))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" yvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain"
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs" ("_position" M)
###                         ("\<^const>Agent.resChain"
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("\<^const>Semantics.boundOutput.BOut"
###                             ("_position" N) ("_position" P'))))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" yvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain"
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs" ("_position" M)
###                         ("\<^const>Semantics.BOresChainJudge"
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("\<^const>Semantics.boundOutput.BOut"
###                             ("_position" N) ("_position" P'))))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" yvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain"
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs" ("_position" M)
###                         ("\<^const>Frame.frameResChain"
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("\<^const>Semantics.boundOutput.BOut"
###                             ("_position" N) ("_position" P'))))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" yvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain"
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs" ("_position" M)
###                         ("\<^const>Agent.resChain"
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("\<^const>Semantics.boundOutput.BOut"
###                             ("_position" N) ("_position" P'))))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" yvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain"
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs" ("_position" M)
###                         ("\<^const>Semantics.BOresChainJudge"
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("\<^const>Semantics.boundOutput.BOut"
###                             ("_position" N) ("_position" P'))))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" yvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Frame.frameResChain"
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("_position" P')))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1902 of "$AFP/Psi_Calculi/Semantics.thy") produces 54 parse trees (10 displayed):
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Semantics.BOresChainJudge"
###                         ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Frame.frameResChain" ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Agent.resChain" ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Semantics.BOresChainJudge"
###                         ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Frame.frameResChain" ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Agent.resChain" ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Semantics.BOresChainJudge"
###                         ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Frame.frameResChain" ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Agent.resChain" ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Semantics.BOresChainJudge"
###                         ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2013 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Chain.composePermJudge" ("_position" xvec)
###         ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Chain.composePermJudge" ("_position" xvec)
###         ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Chain.composePermJudge" ("_position" xvec)
###         ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" B))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Chain.composePermJudge" ("_position" xvec)
###         ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Chain.composePermJudge" ("_position" xvec)
###         ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Chain.composePermJudge" ("_position" xvec)
###         ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" B))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Chain.composePermJudge" ("_position" xvec)
###         ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Chain.composePermJudge" ("_position" xvec)
###         ("_position" yvec) ("_position" B)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" B))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Chain.composePermJudge" ("_position" xvec)
###         ("_position" yvec) ("_position" B)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2037 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" N))
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" N))
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" N))
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" N))
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" N))
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Frame.frameResChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" N))
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" N))
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" N))
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" P))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###         ("_position" P)))
###     ("\<^const>Agent.resChain" ("_position" yvec)
###       ("\<^const>Semantics.boundOutput.BOut"
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" N))
###         ("\<^const>Chain.composePermJudge" ("_position" xvec)
###           ("_position" yvec) ("_position" P))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2240 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs" ("_position" M)
###                         ("_cargs"
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("_cargs" ("_position" N)
###                             ("_position" P'))))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" yvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" C)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" x) ("_position" C)))
###                                   ("_asm"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec)
###   ("_position" C)))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("_cargs" ("_position" N) ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs" ("_position" M)
###                         ("_cargs"
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("_cargs" ("_position" N)
###                             ("_position" P'))))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" yvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" C)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" x) ("_position" C)))
###                                   ("_asm"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec)
###   ("_position" C)))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("_cargs" ("_position" N) ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x) ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.member" ("_position" x)
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("_position" P)
###                       ("_cargs" ("_position" M)
###                         ("_cargs"
###                           ("\<^const>List.append" ("_position" xvec)
###                             ("_position" yvec))
###                           ("_cargs" ("_position" N)
###                             ("_position" P'))))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" xvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" yvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" yvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" yvec) ("_position" C)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" x) ("_position" C)))
###                                   ("_asm"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec)
###   ("_position" C)))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" yvec)))
###                   ("_cargs" ("_position" N) ("_position" P')))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2245 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" xvec)
###                         ("_cargs" ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" xvec)
###                   ("_cargs" ("_position" N)
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" xvec)
###                         ("_cargs" ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" xvec)
###                   ("_cargs" ("_position" N)
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" xvec)
###                         ("_cargs" ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" xvec)
###                   ("_cargs" ("_position" N)
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" xvec)
###                         ("_cargs" ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" xvec)
###                   ("_cargs" ("_position" N)
###                     ("\<^const>Frame.frame.FRes" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" xvec)
###                         ("_cargs" ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" xvec)
###                   ("_cargs" ("_position" N)
###                     ("\<^const>Frame.frame.FRes" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" xvec)
###                         ("_cargs" ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" xvec)
###                   ("_cargs" ("_position" N)
###                     ("\<^const>Frame.frame.FRes" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" xvec)
###                         ("_cargs" ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" xvec)
###                   ("_cargs" ("_position" N)
###                     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" xvec)
###                         ("_cargs" ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" xvec)
###                   ("_cargs" ("_position" N)
###                     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" xvec)
###                         ("_cargs" ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" N)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" xvec)
###                   ("_cargs" ("_position" N)
###                     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                       ("_position" P'))))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2329 of "$AFP/Psi_Calculi/Semantics.thy") produces 4 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs" ("_position" K)
###                 ("_cargs"
###                   ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec))
###                   ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###                     ("_position" Tvec)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs" ("_position" K)
###                 ("_cargs"
###                   ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec))
###                   ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###                     ("_position" Tvec)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs" ("_position" K)
###                 ("_cargs"
###                   ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec))
###                   ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###                     ("_position" Tvec)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs" ("_position" K)
###                 ("_cargs"
###                   ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec))
###                   ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###                     ("_position" Tvec)))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2349 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" N) ("_position" P')))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" N)))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("\<^const>Agent.psi.Res" ("_position" x)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" N) ("_position" P')))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" N)))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("\<^const>Agent.psi.Res" ("_position" x)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" N) ("_position" P')))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" N)))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("\<^const>Agent.psi.Res" ("_position" x)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" N) ("_position" P')))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" N)))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("\<^const>Frame.frame.FRes" ("_position" x)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" N) ("_position" P')))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" N)))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("\<^const>Frame.frame.FRes" ("_position" x)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" N) ("_position" P')))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" N)))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("\<^const>Frame.frame.FRes" ("_position" x)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" N) ("_position" P')))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" N)))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" N) ("_position" P')))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" N)))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                     ("_position" P')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P)
###                     ("_cargs" ("_position" M)
###                       ("_cargs" ("_position" N) ("_position" P')))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x) ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x) ("_position" N)))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                     ("_position" P')))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2412 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###   ("_position" A\<^sub>Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" xvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" P)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" Q)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" K)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" K)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C)))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###   ("_position" A\<^sub>Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" xvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" P)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" Q)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" K)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" K)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C)))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###   ("_position" A\<^sub>Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" xvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" P)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" Q)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" K)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" K)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C)))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2422 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###   ("_position" A\<^sub>Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" xvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" P)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" Q)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" K)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" K)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C)))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###   ("_position" A\<^sub>Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" xvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" P)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" Q)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" K)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" K)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C)))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###   ("_position" A\<^sub>Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" xvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" P)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" Q)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" K)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" Q')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" K)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" C)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###                                     ("_asm"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" C)))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2432 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P') ("_idts" ("_position" x) ("_position" C)))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P) ("_position" P')))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" C)))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("\<^const>Agent.psi.Res" ("_position" x)
###                 ("_position" P')))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P') ("_idts" ("_position" x) ("_position" C)))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P) ("_position" P')))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" C)))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("\<^const>Agent.psi.Res" ("_position" x)
###                 ("_position" P')))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P') ("_idts" ("_position" x) ("_position" C)))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P) ("_position" P')))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" C)))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("\<^const>Agent.psi.Res" ("_position" x)
###                 ("_position" P')))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P') ("_idts" ("_position" x) ("_position" C)))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P) ("_position" P')))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" C)))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("\<^const>Frame.frame.FRes" ("_position" x)
###                 ("_position" P')))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P') ("_idts" ("_position" x) ("_position" C)))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P) ("_position" P')))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" C)))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("\<^const>Frame.frame.FRes" ("_position" x)
###                 ("_position" P')))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P') ("_idts" ("_position" x) ("_position" C)))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P) ("_position" P')))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" C)))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("\<^const>Frame.frame.FRes" ("_position" x)
###                 ("_position" P')))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P') ("_idts" ("_position" x) ("_position" C)))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P) ("_position" P')))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" C)))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P')))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P') ("_idts" ("_position" x) ("_position" C)))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P) ("_position" P')))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" C)))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P')))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P') ("_idts" ("_position" x) ("_position" C)))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("_position" P) ("_position" P')))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" x) ("_position" \<Psi>)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" C)))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P')))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2487 of "$AFP/Psi_Calculi/Semantics.thy") produces 4 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###                       ("_position" Tvec)))
###                   ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###                     ("_position" Tvec)))
###                 ("_cargs" ("\<^const>List.list.Nil")
###                   ("\<^fixed>SBottom'"))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("\<^const>local.subs" ("_position" N)
###                       ("_position" xvec) ("_position" Tvec)))
###                   ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###                     ("_position" Tvec)))
###                 ("_cargs" ("\<^const>List.list.Nil")
###                   ("\<^fixed>SBottom'"))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###                       ("_position" Tvec)))
###                   ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###                     ("_position" Tvec)))
###                 ("_cargs" ("\<^const>List.list.Nil")
###                   ("\<^fixed>SBottom'"))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("\<^const>local.subs" ("_position" N)
###                       ("_position" xvec) ("_position" Tvec)))
###                   ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###                     ("_position" Tvec)))
###                 ("_cargs" ("\<^const>List.list.Nil")
###                   ("\<^fixed>SBottom'"))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2517 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("\<^const>Semantics.action.In" ("_position" M)
###                               ("_position" N))
###                             ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.Out" ("_position" K)
###                       ("_position" xvec) ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" extractFrame) ("_position" Q))
###                     ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>\<^sub>Q))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" A\<^sub>Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^fixed>SImp'"
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("\<^fixed>SChanEq'" ("_position" M)
###                           ("_position" K))))
###                     ("_asms"
###                       ("\<^const>Pure.all_binder" ("_position" C)
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" Prop)
###                             ("_cargs" ("_position" C)
###                               ("_cargs"
###                                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                                   ("_position" \<Psi>\<^sub>P))
###                                 ("_cargs" ("_position" Q)
###                                   ("_cargs"
###                                     ("\<^const>Semantics.create_residual"
### ("\<^const>Semantics.action.Out" ("_position" K) ("_position" xvec)
###   ("_position" N))
### ("_position" Q'))
###                                     ("_cargs" ("_position" A\<^sub>Q)
### ("_position" \<Psi>\<^sub>Q)))))))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" Q')))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" A\<^sub>Q)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Tau")
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q'))))
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" A\<^sub>P)
###                     ("_position" A\<^sub>Q))
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                     ("_position" \<Psi>\<^sub>Q)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("\<^const>Semantics.action.In" ("_position" M)
###                               ("_position" N))
###                             ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.Out" ("_position" K)
###                       ("_position" xvec) ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" extractFrame) ("_position" Q))
###                     ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>\<^sub>Q))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" A\<^sub>Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^fixed>SImp'"
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("\<^fixed>SChanEq'" ("_position" M)
###                           ("_position" K))))
###                     ("_asms"
###                       ("\<^const>Pure.all_binder" ("_position" C)
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" Prop)
###                             ("_cargs" ("_position" C)
###                               ("_cargs"
###                                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                                   ("_position" \<Psi>\<^sub>P))
###                                 ("_cargs" ("_position" Q)
###                                   ("_cargs"
###                                     ("\<^const>Semantics.create_residual"
### ("\<^const>Semantics.action.Out" ("_position" K) ("_position" xvec)
###   ("_position" N))
### ("_position" Q'))
###                                     ("_cargs" ("_position" A\<^sub>Q)
### ("_position" \<Psi>\<^sub>Q)))))))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" Q')))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" A\<^sub>Q)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Tau")
###                   ("\<^const>Frame.frameResChain" ("_position" xvec)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q'))))
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" A\<^sub>P)
###                     ("_position" A\<^sub>Q))
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                     ("_position" \<Psi>\<^sub>Q)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("\<^const>Semantics.action.In" ("_position" M)
###                               ("_position" N))
###                             ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.Out" ("_position" K)
###                       ("_position" xvec) ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" extractFrame) ("_position" Q))
###                     ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>\<^sub>Q))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" A\<^sub>Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^fixed>SImp'"
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("\<^fixed>SChanEq'" ("_position" M)
###                           ("_position" K))))
###                     ("_asms"
###                       ("\<^const>Pure.all_binder" ("_position" C)
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" Prop)
###                             ("_cargs" ("_position" C)
###                               ("_cargs"
###                                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                                   ("_position" \<Psi>\<^sub>P))
###                                 ("_cargs" ("_position" Q)
###                                   ("_cargs"
###                                     ("\<^const>Semantics.create_residual"
### ("\<^const>Semantics.action.Out" ("_position" K) ("_position" xvec)
###   ("_position" N))
### ("_position" Q'))
###                                     ("_cargs" ("_position" A\<^sub>Q)
### ("_position" \<Psi>\<^sub>Q)))))))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" Q')))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" A\<^sub>Q)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Tau")
###                   ("\<^const>Agent.resChain" ("_position" xvec)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q'))))
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" A\<^sub>P)
###                     ("_position" A\<^sub>Q))
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                     ("_position" \<Psi>\<^sub>Q)))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2529 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("\<^const>Semantics.action.Out" ("_position" M)
###                               ("_position" xvec) ("_position" N))
###                             ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.In" ("_position" K)
###                       ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" extractFrame) ("_position" Q))
###                     ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>\<^sub>Q))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" A\<^sub>Q)))
###                   ("_asms"
###                     ("\<^const>Pure.all_binder" ("_position" C)
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" Prop)
###                           ("_cargs" ("_position" C)
###                             ("_cargs"
###                               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                                 ("_position" \<Psi>\<^sub>P))
###                               ("_cargs" ("_position" Q)
###                                 ("_cargs"
###                                   ("\<^const>Semantics.create_residual"
###                                     ("\<^const>Semantics.action.In"
### ("_position" K) ("_position" N))
###                                     ("_position" Q'))
###                                   ("_cargs" ("_position" A\<^sub>Q)
###                                     ("_position" \<Psi>\<^sub>Q)))))))))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" Q')))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" A\<^sub>Q)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Tau")
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q'))))
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" A\<^sub>P)
###                     ("_position" A\<^sub>Q))
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                     ("_position" \<Psi>\<^sub>Q)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("\<^const>Semantics.action.Out" ("_position" M)
###                               ("_position" xvec) ("_position" N))
###                             ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.In" ("_position" K)
###                       ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" extractFrame) ("_position" Q))
###                     ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>\<^sub>Q))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" A\<^sub>Q)))
###                   ("_asms"
###                     ("\<^const>Pure.all_binder" ("_position" C)
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" Prop)
###                           ("_cargs" ("_position" C)
###                             ("_cargs"
###                               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                                 ("_position" \<Psi>\<^sub>P))
###                               ("_cargs" ("_position" Q)
###                                 ("_cargs"
###                                   ("\<^const>Semantics.create_residual"
###                                     ("\<^const>Semantics.action.In"
### ("_position" K) ("_position" N))
###                                     ("_position" Q'))
###                                   ("_cargs" ("_position" A\<^sub>Q)
###                                     ("_position" \<Psi>\<^sub>Q)))))))))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" Q')))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" A\<^sub>Q)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Tau")
###                   ("\<^const>Frame.frameResChain" ("_position" xvec)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q'))))
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" A\<^sub>P)
###                     ("_position" A\<^sub>Q))
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                     ("_position" \<Psi>\<^sub>Q)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("\<^const>Semantics.action.Out" ("_position" M)
###                               ("_position" xvec) ("_position" N))
###                             ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.In" ("_position" K)
###                       ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" extractFrame) ("_position" Q))
###                     ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>\<^sub>Q))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" A\<^sub>Q)))
###                   ("_asms"
###                     ("\<^const>Pure.all_binder" ("_position" C)
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" Prop)
###                           ("_cargs" ("_position" C)
###                             ("_cargs"
###                               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                                 ("_position" \<Psi>\<^sub>P))
###                               ("_cargs" ("_position" Q)
###                                 ("_cargs"
###                                   ("\<^const>Semantics.create_residual"
###                                     ("\<^const>Semantics.action.In"
### ("_position" K) ("_position" N))
###                                     ("_position" Q'))
###                                   ("_cargs" ("_position" A\<^sub>Q)
###                                     ("_position" \<Psi>\<^sub>Q)))))))))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" Q')))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" A\<^sub>Q)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Tau")
###                   ("\<^const>Agent.resChain" ("_position" xvec)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q'))))
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" A\<^sub>P)
###                     ("_position" A\<^sub>Q))
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                     ("_position" \<Psi>\<^sub>Q)))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2541 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_position" C)))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("\<^const>Semantics.action.Out" ("_position" M)
###                               ("\<^const>List.append" ("_position" xvec)
###                                 ("_position" yvec))
###                               ("_position" N))
###                             ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" yvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" distinct) ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct) ("_position" yvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                     ("_position" \<Psi>\<^sub>P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh" ("_position" x)
###                               ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" M)
###                     ("\<^const>List.append" ("_position" xvec)
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" yvec)))
###                     ("_position" N))
###                   ("_position" P'))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_position" C)))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("\<^const>Semantics.action.Out" ("_position" M)
###                               ("\<^const>List.append" ("_position" xvec)
###                                 ("_position" yvec))
###                               ("_position" N))
###                             ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" yvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" distinct) ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct) ("_position" yvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                     ("_position" \<Psi>\<^sub>P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh" ("_position" x)
###                               ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" M)
###                     ("\<^const>List.append" ("_position" xvec)
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" yvec)))
###                     ("_position" N))
###                   ("_position" P'))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_position" C)))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("\<^const>Semantics.action.Out" ("_position" M)
###                               ("\<^const>List.append" ("_position" xvec)
###                                 ("_position" yvec))
###                               ("_position" N))
###                             ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" yvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" distinct) ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct) ("_position" yvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                     ("_position" \<Psi>\<^sub>P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh" ("_position" x)
###                               ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" yvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" M)
###                     ("\<^const>List.append" ("_position" xvec)
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" yvec)))
###                     ("_position" N))
###                   ("_position" P'))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2549 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("_position" \<alpha>) ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("_applC" ("_position" distinct)
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_applC" ("_position" subject) ("_position" \<alpha>))))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star"
###   ("_applC" ("_position" bn) ("_position" \<alpha>))
###   ("_position" \<Psi>\<^sub>P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###   ("_asm"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star"
###         ("_applC" ("_position" bn) ("_position" \<alpha>))
###         ("_position" C))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                   ("\<^const>Agent.psi.Res" ("_position" x)
###                     ("_position" P')))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("_position" \<alpha>) ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("_applC" ("_position" distinct)
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_applC" ("_position" subject) ("_position" \<alpha>))))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star"
###   ("_applC" ("_position" bn) ("_position" \<alpha>))
###   ("_position" \<Psi>\<^sub>P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###   ("_asm"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star"
###         ("_applC" ("_position" bn) ("_position" \<alpha>))
###         ("_position" C))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                   ("\<^const>Agent.psi.Res" ("_position" x)
###                     ("_position" P')))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("_position" \<alpha>) ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("_applC" ("_position" distinct)
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_applC" ("_position" subject) ("_position" \<alpha>))))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star"
###   ("_applC" ("_position" bn) ("_position" \<alpha>))
###   ("_position" \<Psi>\<^sub>P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###   ("_asm"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star"
###         ("_applC" ("_position" bn) ("_position" \<alpha>))
###         ("_position" C))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                   ("\<^const>Agent.psi.Res" ("_position" x)
###                     ("_position" P')))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("_position" \<alpha>) ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("_applC" ("_position" distinct)
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_applC" ("_position" subject) ("_position" \<alpha>))))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star"
###   ("_applC" ("_position" bn) ("_position" \<alpha>))
###   ("_position" \<Psi>\<^sub>P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###   ("_asm"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star"
###         ("_applC" ("_position" bn) ("_position" \<alpha>))
###         ("_position" C))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                   ("\<^const>Frame.frame.FRes" ("_position" x)
###                     ("_position" P')))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("_position" \<alpha>) ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("_applC" ("_position" distinct)
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_applC" ("_position" subject) ("_position" \<alpha>))))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star"
###   ("_applC" ("_position" bn) ("_position" \<alpha>))
###   ("_position" \<Psi>\<^sub>P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###   ("_asm"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star"
###         ("_applC" ("_position" bn) ("_position" \<alpha>))
###         ("_position" C))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                   ("\<^const>Frame.frame.FRes" ("_position" x)
###                     ("_position" P')))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("_position" \<alpha>) ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("_applC" ("_position" distinct)
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_applC" ("_position" subject) ("_position" \<alpha>))))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star"
###   ("_applC" ("_position" bn) ("_position" \<alpha>))
###   ("_position" \<Psi>\<^sub>P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###   ("_asm"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star"
###         ("_applC" ("_position" bn) ("_position" \<alpha>))
###         ("_position" C))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                   ("\<^const>Frame.frame.FRes" ("_position" x)
###                     ("_position" P')))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("_position" \<alpha>) ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("_applC" ("_position" distinct)
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_applC" ("_position" subject) ("_position" \<alpha>))))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star"
###   ("_applC" ("_position" bn) ("_position" \<alpha>))
###   ("_position" \<Psi>\<^sub>P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###   ("_asm"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star"
###         ("_applC" ("_position" bn) ("_position" \<alpha>))
###         ("_position" C))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                   ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                     ("_position" P')))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("_position" \<alpha>) ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("_applC" ("_position" distinct)
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_applC" ("_position" subject) ("_position" \<alpha>))))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star"
###   ("_applC" ("_position" bn) ("_position" \<alpha>))
###   ("_position" \<Psi>\<^sub>P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###   ("_asm"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star"
###         ("_applC" ("_position" bn) ("_position" \<alpha>))
###         ("_position" C))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                   ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                     ("_position" P')))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.create_residual"
###                             ("_position" \<alpha>) ("_position" P'))
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("_applC" ("_position" distinct)
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_applC" ("_position" subject) ("_position" \<alpha>))))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star"
###   ("_applC" ("_position" bn) ("_position" \<alpha>))
###   ("_position" \<Psi>\<^sub>P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###   ("_asm"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star"
###         ("_applC" ("_position" bn) ("_position" \<alpha>))
###         ("_position" C))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                   ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                     ("_position" P')))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2840 of "$AFP/Psi_Calculi/Semantics.thy") produces 4 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec)))
###                 ("_cargs"
###                   ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###                     ("_position" Tvec))
###                   ("_cargs" ("\<^const>List.list.Nil")
###                     ("\<^fixed>SBottom'")))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec)))
###                 ("_cargs"
###                   ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###                     ("_position" Tvec))
###                   ("_cargs" ("\<^const>List.list.Nil")
###                     ("\<^fixed>SBottom'")))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec)))
###                 ("_cargs"
###                   ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###                     ("_position" Tvec))
###                   ("_cargs" ("\<^const>List.list.Nil")
###                     ("\<^fixed>SBottom'")))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec)))
###                 ("_cargs"
###                   ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###                     ("_position" Tvec))
###                   ("_cargs" ("\<^const>List.list.Nil")
###                     ("\<^fixed>SBottom'")))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2870 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.action.In" ("_position" M)
###                             ("_position" N))
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.Out" ("_position" K)
###                       ("_position" xvec) ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" extractFrame) ("_position" Q))
###                     ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>\<^sub>Q))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" A\<^sub>Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^fixed>SImp'"
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("\<^fixed>SChanEq'" ("_position" M)
###                           ("_position" K))))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" distinct)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>Pure.all_binder" ("_position" C)
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" Prop)
###                               ("_cargs" ("_position" C)
###                                 ("_cargs"
###                                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                                     ("_position" \<Psi>\<^sub>P))
###                                   ("_cargs" ("_position" Q)
###                                     ("_cargs"
### ("\<^const>Semantics.action.Out" ("_position" K) ("_position" xvec)
###   ("_position" N))
### ("_cargs" ("_position" Q')
###   ("_cargs" ("_position" A\<^sub>Q) ("_position" \<Psi>\<^sub>Q))))))))))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" Q')))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" A\<^sub>Q)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q')))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.action.In" ("_position" M)
###                             ("_position" N))
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.Out" ("_position" K)
###                       ("_position" xvec) ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" extractFrame) ("_position" Q))
###                     ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>\<^sub>Q))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" A\<^sub>Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^fixed>SImp'"
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("\<^fixed>SChanEq'" ("_position" M)
###                           ("_position" K))))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" distinct)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>Pure.all_binder" ("_position" C)
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" Prop)
###                               ("_cargs" ("_position" C)
###                                 ("_cargs"
###                                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                                     ("_position" \<Psi>\<^sub>P))
###                                   ("_cargs" ("_position" Q)
###                                     ("_cargs"
### ("\<^const>Semantics.action.Out" ("_position" K) ("_position" xvec)
###   ("_position" N))
### ("_cargs" ("_position" Q')
###   ("_cargs" ("_position" A\<^sub>Q) ("_position" \<Psi>\<^sub>Q))))))))))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" Q')))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" A\<^sub>Q)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("_cargs"
###                   ("\<^const>Frame.frameResChain" ("_position" xvec)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q')))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.action.In" ("_position" M)
###                             ("_position" N))
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.Out" ("_position" K)
###                       ("_position" xvec) ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" extractFrame) ("_position" Q))
###                     ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>\<^sub>Q))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" A\<^sub>Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^fixed>SImp'"
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("\<^fixed>SChanEq'" ("_position" M)
###                           ("_position" K))))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" distinct)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>Pure.all_binder" ("_position" C)
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" Prop)
###                               ("_cargs" ("_position" C)
###                                 ("_cargs"
###                                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                                     ("_position" \<Psi>\<^sub>P))
###                                   ("_cargs" ("_position" Q)
###                                     ("_cargs"
### ("\<^const>Semantics.action.Out" ("_position" K) ("_position" xvec)
###   ("_position" N))
### ("_cargs" ("_position" Q')
###   ("_cargs" ("_position" A\<^sub>Q) ("_position" \<Psi>\<^sub>Q))))))))))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" Q')))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" A\<^sub>Q)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("_cargs"
###                   ("\<^const>Agent.resChain" ("_position" xvec)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q')))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2882 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.action.Out" ("_position" M)
###                             ("_position" xvec) ("_position" N))
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.In" ("_position" K)
###                       ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" extractFrame) ("_position" Q))
###                     ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>\<^sub>Q))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" A\<^sub>Q)))
###                   ("_asms"
###                     ("\<^const>Pure.all_binder" ("_position" C)
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" Prop)
###                           ("_cargs" ("_position" C)
###                             ("_cargs"
###                               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                                 ("_position" \<Psi>\<^sub>P))
###                               ("_cargs" ("_position" Q)
###                                 ("_cargs"
###                                   ("\<^const>Semantics.action.In"
###                                     ("_position" K) ("_position" N))
###                                   ("_cargs" ("_position" Q')
###                                     ("_cargs" ("_position" A\<^sub>Q)
### ("_position" \<Psi>\<^sub>Q))))))))))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" Q')))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" A\<^sub>Q)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q')))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.action.Out" ("_position" M)
###                             ("_position" xvec) ("_position" N))
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.In" ("_position" K)
###                       ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" extractFrame) ("_position" Q))
###                     ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>\<^sub>Q))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" A\<^sub>Q)))
###                   ("_asms"
###                     ("\<^const>Pure.all_binder" ("_position" C)
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" Prop)
###                           ("_cargs" ("_position" C)
###                             ("_cargs"
###                               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                                 ("_position" \<Psi>\<^sub>P))
###                               ("_cargs" ("_position" Q)
###                                 ("_cargs"
###                                   ("\<^const>Semantics.action.In"
###                                     ("_position" K) ("_position" N))
###                                   ("_cargs" ("_position" Q')
###                                     ("_cargs" ("_position" A\<^sub>Q)
### ("_position" \<Psi>\<^sub>Q))))))))))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" Q')))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" A\<^sub>Q)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("_cargs"
###                   ("\<^const>Frame.frameResChain" ("_position" xvec)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q')))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("_position" \<Psi>\<^sub>Q))
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.action.Out" ("_position" M)
###                             ("_position" xvec) ("_position" N))
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>local.semantics"
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                     ("_position" \<Psi>\<^sub>P))
###                   ("_position" Q)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.In" ("_position" K)
###                       ("_position" N))
###                     ("_position" Q'))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" extractFrame) ("_position" Q))
###                     ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                       ("_position" \<Psi>\<^sub>Q))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" A\<^sub>Q)))
###                   ("_asms"
###                     ("\<^const>Pure.all_binder" ("_position" C)
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" Prop)
###                           ("_cargs" ("_position" C)
###                             ("_cargs"
###                               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                                 ("_position" \<Psi>\<^sub>P))
###                               ("_cargs" ("_position" Q)
###                                 ("_cargs"
###                                   ("\<^const>Semantics.action.In"
###                                     ("_position" K) ("_position" N))
###                                   ("_cargs" ("_position" Q')
###                                     ("_cargs" ("_position" A\<^sub>Q)
### ("_position" \<Psi>\<^sub>Q))))))))))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" Q')))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" A\<^sub>Q)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position" \<Psi>\<^sub>Q)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" M)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("_cargs"
###                   ("\<^const>Agent.resChain" ("_position" xvec)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("_position" Q')))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2894 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_idts" ("_position" y) ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.action.Out" ("_position" M)
###                             ("\<^const>List.append" ("_position" xvec)
###                               ("_position" yvec))
###                             ("_position" N))
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" yvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" distinct) ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct) ("_position" yvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" C)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>HOL.not_equal" ("_position" y)
###                                   ("_position" x)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh" ("_position" y)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" y) ("_position" P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh" ("_position" y) ("_position" M)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" y) ("_position" xvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" y) ("_position" yvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh" ("_position" y) ("_position" N)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh" ("_position" y) ("_position" P')))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" A\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" y)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" y)
###                 ("_position" C)))))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" y)
###                       ("_position" yvec)))
###                   ("\<^const>Nominal.perm"
###                     ("_list"
###                       ("_tuple" ("_position" x)
###                         ("_tuple_arg" ("_position" y))))
###                     ("_position" N)))
###                 ("_cargs"
###                   ("\<^const>Nominal.perm"
###                     ("_list"
###                       ("_tuple" ("_position" x)
###                         ("_tuple_arg" ("_position" y))))
###                     ("_position" P'))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_idts" ("_position" y) ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.action.Out" ("_position" M)
###                             ("\<^const>List.append" ("_position" xvec)
###                               ("_position" yvec))
###                             ("_position" N))
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" yvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" distinct) ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct) ("_position" yvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" C)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>HOL.not_equal" ("_position" y)
###                                   ("_position" x)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh" ("_position" y)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" y) ("_position" P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh" ("_position" y) ("_position" M)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" y) ("_position" xvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" y) ("_position" yvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh" ("_position" y) ("_position" N)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh" ("_position" y) ("_position" P')))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" A\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" y)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" y)
###                 ("_position" C)))))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" y)
###                       ("_position" yvec)))
###                   ("\<^const>Nominal.perm"
###                     ("_list"
###                       ("_tuple" ("_position" x)
###                         ("_tuple_arg" ("_position" y))))
###                     ("_position" N)))
###                 ("_cargs"
###                   ("\<^const>Nominal.perm"
###                     ("_list"
###                       ("_tuple" ("_position" x)
###                         ("_tuple_arg" ("_position" y))))
###                     ("_position" P'))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_idts" ("_position" y) ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs"
###                           ("\<^const>Semantics.action.Out" ("_position" M)
###                             ("\<^const>List.append" ("_position" xvec)
###                               ("_position" yvec))
###                             ("_position" N))
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" yvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" distinct) ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct) ("_position" yvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" C)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" yvec) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>HOL.not_equal" ("_position" y)
###                                   ("_position" x)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh" ("_position" y)
###                                     ("_position" \<Psi>)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" y) ("_position" P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh" ("_position" y) ("_position" M)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" y) ("_position" xvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh" ("_position" y) ("_position" yvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh" ("_position" y) ("_position" N)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh" ("_position" y) ("_position" P')))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" A\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh" ("_position" y)
###               ("_position" \<Psi>\<^sub>P)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" y)
###                 ("_position" C)))))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" y)
###                       ("_position" yvec)))
###                   ("\<^const>Nominal.perm"
###                     ("_list"
###                       ("_tuple" ("_position" x)
###                         ("_tuple_arg" ("_position" y))))
###                     ("_position" N)))
###                 ("_cargs"
###                   ("\<^const>Nominal.perm"
###                     ("_list"
###                       ("_tuple" ("_position" x)
###                         ("_tuple_arg" ("_position" y))))
###                     ("_position" P'))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 2903 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" \<alpha>)
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))
###                                 ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_applC" ("_position" subject)
### ("_position" \<alpha>))))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star"
###       ("_applC" ("_position" bn) ("_position" \<alpha>))
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("_cargs"
###                   ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                     ("_position" P'))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" \<alpha>)
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))
###                                 ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_applC" ("_position" subject)
### ("_position" \<alpha>))))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star"
###       ("_applC" ("_position" bn) ("_position" \<alpha>))
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("_cargs"
###                   ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                     ("_position" P'))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" \<alpha>)
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))
###                                 ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_applC" ("_position" subject)
### ("_position" \<alpha>))))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star"
###       ("_applC" ("_position" bn) ("_position" \<alpha>))
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("_cargs"
###                   ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                     ("_position" P'))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" \<alpha>)
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))
###                                 ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_applC" ("_position" subject)
### ("_position" \<alpha>))))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star"
###       ("_applC" ("_position" bn) ("_position" \<alpha>))
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("_cargs"
###                   ("\<^const>Frame.frame.FRes" ("_position" x)
###                     ("_position" P'))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" \<alpha>)
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))
###                                 ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_applC" ("_position" subject)
### ("_position" \<alpha>))))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star"
###       ("_applC" ("_position" bn) ("_position" \<alpha>))
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("_cargs"
###                   ("\<^const>Frame.frame.FRes" ("_position" x)
###                     ("_position" P'))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" \<alpha>)
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))
###                                 ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_applC" ("_position" subject)
### ("_position" \<alpha>))))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star"
###       ("_applC" ("_position" bn) ("_position" \<alpha>))
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("_cargs"
###                   ("\<^const>Frame.frame.FRes" ("_position" x)
###                     ("_position" P'))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" \<alpha>)
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))
###                                 ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_applC" ("_position" subject)
### ("_position" \<alpha>))))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star"
###       ("_applC" ("_position" bn) ("_position" \<alpha>))
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("_cargs"
###                   ("\<^const>Agent.psi.Res" ("_position" x)
###                     ("_position" P'))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" \<alpha>)
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))
###                                 ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_applC" ("_position" subject)
### ("_position" \<alpha>))))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star"
###       ("_applC" ("_position" bn) ("_position" \<alpha>))
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("_cargs"
###                   ("\<^const>Agent.psi.Res" ("_position" x)
###                     ("_position" P'))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" \<alpha>)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" x)
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" \<alpha>)
###                           ("_cargs" ("_position" P')
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<alpha>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" A\<^sub>P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<alpha>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_applC" ("_position" bn)
###                                   ("_position" \<alpha>))
###                                 ("_position" \<Psi>)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_applC" ("_position" bn)
###                                     ("_position" \<alpha>))
###                                   ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_applC" ("_position" bn)
### ("_position" \<alpha>))
###                                     ("_applC" ("_position" subject)
### ("_position" \<alpha>))))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_applC" ("_position" bn) ("_position" \<alpha>))
### ("_position" \<Psi>\<^sub>P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star"
###       ("_applC" ("_position" bn) ("_position" \<alpha>))
###       ("_position" C)))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" \<alpha>)
###                 ("_cargs"
###                   ("\<^const>Agent.psi.Res" ("_position" x)
###                     ("_position" P'))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 3173 of "$AFP/Psi_Calculi/Semantics.thy") produces 4 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs" ("_position" K)
###                 ("_cargs"
###                   ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec))
###                   ("_cargs"
###                     ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###                       ("_position" Tvec))
###                     ("_cargs" ("\<^const>List.list.Nil")
###                       ("\<^fixed>SBottom'"))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs" ("_position" K)
###                 ("_cargs"
###                   ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec))
###                   ("_cargs"
###                     ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###                       ("_position" Tvec))
###                     ("_cargs" ("\<^const>List.list.Nil")
###                       ("\<^fixed>SBottom'"))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs" ("_position" K)
###                 ("_cargs"
###                   ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec))
###                   ("_cargs"
###                     ("\<^const>local.subs" ("_position" P)
###                       ("_position" xvec) ("_position" Tvec))
###                     ("_cargs" ("\<^const>List.list.Nil")
###                       ("\<^fixed>SBottom'"))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" K)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" Tvec)
###               ("_idts" ("_position" P) ("_position" C))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("_applC" ("_position" distinct) ("_position" xvec)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Set.subset_eq"
###               ("_applC" ("_position" set) ("_position" xvec))
###               ("_applC" ("_position" supp) ("_position" N))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" length) ("_position" xvec))
###                 ("_applC" ("_position" length) ("_position" Tvec))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.inputChainJudge" ("_position" M)
###                 ("_position" xvec) ("_position" N) ("_position" P))
###               ("_cargs" ("_position" K)
###                 ("_cargs"
###                   ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###                     ("_position" Tvec))
###                   ("_cargs"
###                     ("\<^const>local.subs" ("_position" P)
###                       ("_position" xvec) ("_position" Tvec))
###                     ("_cargs" ("\<^const>List.list.Nil")
###                       ("\<^fixed>SBottom'"))))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 3200 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x)
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs" ("_position" N)
###                             ("_cargs" ("_position" P')
###                               ("_cargs" ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>P)))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" C)))
###                                 ("_asm"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" x) ("_position" C))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("_cargs"
###                     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                       ("_position" P'))
###                     ("_cargs"
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" A\<^sub>P))
###                       ("_position" \<Psi>\<^sub>P))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x)
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs" ("_position" N)
###                             ("_cargs" ("_position" P')
###                               ("_cargs" ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>P)))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" C)))
###                                 ("_asm"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" x) ("_position" C))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("_cargs"
###                     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                       ("_position" P'))
###                     ("_cargs"
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" A\<^sub>P))
###                       ("_position" \<Psi>\<^sub>P))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x)
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs" ("_position" N)
###                             ("_cargs" ("_position" P')
###                               ("_cargs" ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>P)))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" C)))
###                                 ("_asm"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" x) ("_position" C))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("_cargs"
###                     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                       ("_position" P'))
###                     ("_cargs"
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" A\<^sub>P))
###                       ("_position" \<Psi>\<^sub>P))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x)
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs" ("_position" N)
###                             ("_cargs" ("_position" P')
###                               ("_cargs" ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>P)))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" C)))
###                                 ("_asm"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" x) ("_position" C))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("_cargs"
###                     ("\<^const>Frame.frame.FRes" ("_position" x)
###                       ("_position" P'))
###                     ("_cargs"
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" A\<^sub>P))
###                       ("_position" \<Psi>\<^sub>P))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x)
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs" ("_position" N)
###                             ("_cargs" ("_position" P')
###                               ("_cargs" ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>P)))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" C)))
###                                 ("_asm"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" x) ("_position" C))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("_cargs"
###                     ("\<^const>Frame.frame.FRes" ("_position" x)
###                       ("_position" P'))
###                     ("_cargs"
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" A\<^sub>P))
###                       ("_position" \<Psi>\<^sub>P))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x)
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs" ("_position" N)
###                             ("_cargs" ("_position" P')
###                               ("_cargs" ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>P)))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" C)))
###                                 ("_asm"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" x) ("_position" C))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("_cargs"
###                     ("\<^const>Frame.frame.FRes" ("_position" x)
###                       ("_position" P'))
###                     ("_cargs"
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" A\<^sub>P))
###                       ("_position" \<Psi>\<^sub>P))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x)
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs" ("_position" N)
###                             ("_cargs" ("_position" P')
###                               ("_cargs" ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>P)))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" C)))
###                                 ("_asm"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" x) ("_position" C))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("_cargs"
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))
###                     ("_cargs"
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" A\<^sub>P))
###                       ("_position" \<Psi>\<^sub>P))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x)
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs" ("_position" N)
###                             ("_cargs" ("_position" P')
###                               ("_cargs" ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>P)))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" C)))
###                                 ("_asm"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" x) ("_position" C))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("_cargs"
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))
###                     ("_cargs"
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" A\<^sub>P))
###                       ("_position" \<Psi>\<^sub>P))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" x)
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_position" C)))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs" ("_position" N)
###                             ("_cargs" ("_position" P')
###                               ("_cargs" ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>P)))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" M)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" C)))
###                                 ("_asm"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh"
### ("_position" x) ("_position" C))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs" ("_position" N)
###                   ("_cargs"
###                     ("\<^const>Agent.psi.Res" ("_position" x)
###                       ("_position" P'))
###                     ("_cargs"
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" A\<^sub>P))
###                       ("_position" \<Psi>\<^sub>P))))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 3236 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" A\<^sub>P)
###                       ("_idts" ("_position" \<Psi>\<^sub>P)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>Q))
###                           ("_cargs" ("_position" P)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Agent.resChain"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" P')))
###                                 ("_cargs" ("_position" A\<^sub>P)
###                                   ("_position" \<Psi>\<^sub>P))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P')
###                         ("_position" Q))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" A\<^sub>P)
###                       ("_idts" ("_position" \<Psi>\<^sub>P)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>Q))
###                           ("_cargs" ("_position" P)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Frame.frameResChain"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" P')))
###                                 ("_cargs" ("_position" A\<^sub>P)
###                                   ("_position" \<Psi>\<^sub>P))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P')
###                         ("_position" Q))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" A\<^sub>P)
###                       ("_idts" ("_position" \<Psi>\<^sub>P)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>Q))
###                           ("_cargs" ("_position" P)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Semantics.BOresChainJudge"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" P')))
###                                 ("_cargs" ("_position" A\<^sub>P)
###                                   ("_position" \<Psi>\<^sub>P))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P')
###                         ("_position" Q))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" A\<^sub>P)
###                       ("_idts" ("_position" \<Psi>\<^sub>P)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>Q))
###                           ("_cargs" ("_position" P)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Agent.resChain"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" P')))
###                                 ("_cargs" ("_position" A\<^sub>P)
###                                   ("_position" \<Psi>\<^sub>P))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Frame.frameResChain" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P')
###                         ("_position" Q))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" A\<^sub>P)
###                       ("_idts" ("_position" \<Psi>\<^sub>P)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>Q))
###                           ("_cargs" ("_position" P)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Frame.frameResChain"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" P')))
###                                 ("_cargs" ("_position" A\<^sub>P)
###                                   ("_position" \<Psi>\<^sub>P))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Frame.frameResChain" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P')
###                         ("_position" Q))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" A\<^sub>P)
###                       ("_idts" ("_position" \<Psi>\<^sub>P)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>Q))
###                           ("_cargs" ("_position" P)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Semantics.BOresChainJudge"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" P')))
###                                 ("_cargs" ("_position" A\<^sub>P)
###                                   ("_position" \<Psi>\<^sub>P))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Frame.frameResChain" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P')
###                         ("_position" Q))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" A\<^sub>P)
###                       ("_idts" ("_position" \<Psi>\<^sub>P)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>Q))
###                           ("_cargs" ("_position" P)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Agent.resChain"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" P')))
###                                 ("_cargs" ("_position" A\<^sub>P)
###                                   ("_position" \<Psi>\<^sub>P))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Agent.resChain" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P')
###                         ("_position" Q))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" A\<^sub>P)
###                       ("_idts" ("_position" \<Psi>\<^sub>P)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>Q))
###                           ("_cargs" ("_position" P)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Frame.frameResChain"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" P')))
###                                 ("_cargs" ("_position" A\<^sub>P)
###                                   ("_position" \<Psi>\<^sub>P))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Agent.resChain" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P')
###                         ("_position" Q))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>Q)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" A\<^sub>P)
###                       ("_idts" ("_position" \<Psi>\<^sub>P)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>Q))
###                           ("_cargs" ("_position" P)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Semantics.BOresChainJudge"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" P')))
###                                 ("_cargs" ("_position" A\<^sub>P)
###                                   ("_position" \<Psi>\<^sub>P))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Agent.resChain" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P')
###                         ("_position" Q))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 3246 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P)
###                     ("_idts" ("_position" A\<^sub>Q)
###                       ("_idts" ("_position" \<Psi>\<^sub>Q)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Agent.resChain"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" Q')))
###                                 ("_cargs" ("_position" A\<^sub>Q)
###                                   ("_position" \<Psi>\<^sub>Q))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P)
###                         ("_position" Q'))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P)
###                     ("_idts" ("_position" A\<^sub>Q)
###                       ("_idts" ("_position" \<Psi>\<^sub>Q)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Frame.frameResChain"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" Q')))
###                                 ("_cargs" ("_position" A\<^sub>Q)
###                                   ("_position" \<Psi>\<^sub>Q))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P)
###                         ("_position" Q'))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P)
###                     ("_idts" ("_position" A\<^sub>Q)
###                       ("_idts" ("_position" \<Psi>\<^sub>Q)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Semantics.BOresChainJudge"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" Q')))
###                                 ("_cargs" ("_position" A\<^sub>Q)
###                                   ("_position" \<Psi>\<^sub>Q))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P)
###                         ("_position" Q'))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P)
###                     ("_idts" ("_position" A\<^sub>Q)
###                       ("_idts" ("_position" \<Psi>\<^sub>Q)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Agent.resChain"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" Q')))
###                                 ("_cargs" ("_position" A\<^sub>Q)
###                                   ("_position" \<Psi>\<^sub>Q))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Frame.frameResChain" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P)
###                         ("_position" Q'))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P)
###                     ("_idts" ("_position" A\<^sub>Q)
###                       ("_idts" ("_position" \<Psi>\<^sub>Q)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Frame.frameResChain"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" Q')))
###                                 ("_cargs" ("_position" A\<^sub>Q)
###                                   ("_position" \<Psi>\<^sub>Q))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Frame.frameResChain" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P)
###                         ("_position" Q'))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P)
###                     ("_idts" ("_position" A\<^sub>Q)
###                       ("_idts" ("_position" \<Psi>\<^sub>Q)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Semantics.BOresChainJudge"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" Q')))
###                                 ("_cargs" ("_position" A\<^sub>Q)
###                                   ("_position" \<Psi>\<^sub>Q))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Frame.frameResChain" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P)
###                         ("_position" Q'))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P)
###                     ("_idts" ("_position" A\<^sub>Q)
###                       ("_idts" ("_position" \<Psi>\<^sub>Q)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Agent.resChain"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" Q')))
###                                 ("_cargs" ("_position" A\<^sub>Q)
###                                   ("_position" \<Psi>\<^sub>Q))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Agent.resChain" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P)
###                         ("_position" Q'))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P)
###                     ("_idts" ("_position" A\<^sub>Q)
###                       ("_idts" ("_position" \<Psi>\<^sub>Q)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Frame.frameResChain"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" Q')))
###                                 ("_cargs" ("_position" A\<^sub>Q)
###                                   ("_position" \<Psi>\<^sub>Q))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Agent.resChain" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P)
###                         ("_position" Q'))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>P)
###       ("_idts" ("_position" Q)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" Q')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" P)
###                     ("_idts" ("_position" A\<^sub>Q)
###                       ("_idts" ("_position" \<Psi>\<^sub>Q)
###                         ("_position" C))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>P))
###           ("_position" Q)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" Q'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" Q))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                   ("_position" \<Psi>\<^sub>Q))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###               ("_asms"
###                 ("\<^const>Pure.all_binder" ("_position" C)
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" Prop)
###                       ("_cargs" ("_position" C)
###                         ("_cargs"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("_position" \<Psi>\<^sub>P))
###                           ("_cargs" ("_position" Q)
###                             ("_cargs" ("_position" M)
###                               ("_cargs"
###                                 ("\<^const>Semantics.BOresChainJudge"
###                                   ("_position" xvec)
###                                   ("\<^const>Semantics.boundOutput.BOut"
###                                     ("_position" N) ("_position" Q')))
###                                 ("_cargs" ("_position" A\<^sub>Q)
###                                   ("_position" \<Psi>\<^sub>Q))))))))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" P)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" M)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" xvec)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" N)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" Q')))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" A\<^sub>Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" \<Psi>\<^sub>Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###       ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" M)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" xvec)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" N)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" Q')))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" C)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asm"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec)
###                                   ("_position"
###                                     C)))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Agent.resChain" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Par" ("_position" P)
###                         ("_position" Q'))))
###                   ("_cargs"
###                     ("\<^const>List.append" ("_position" A\<^sub>P)
###                       ("_position" A\<^sub>Q))
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                       ("_position" \<Psi>\<^sub>Q))))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 3256 of "$AFP/Psi_Calculi/Semantics.thy") produces 27 parse trees (10 displayed):
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_position" C)))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Agent.resChain"
###                               ("\<^const>List.append" ("_position" xvec)
###                                 ("_position" yvec))
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" yvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" C)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))
###                     ("_asm"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" C)))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge"
###                     ("\<^const>List.append" ("_position" xvec)
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" yvec)))
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("_position" P')))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_position" C)))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Frame.frameResChain"
###                               ("\<^const>List.append" ("_position" xvec)
###                                 ("_position" yvec))
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" yvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" C)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))
###                     ("_asm"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" C)))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge"
###                     ("\<^const>List.append" ("_position" xvec)
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" yvec)))
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("_position" P')))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_position" C)))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Semantics.BOresChainJudge"
###                               ("\<^const>List.append" ("_position" xvec)
###                                 ("_position" yvec))
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" yvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" C)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))
###                     ("_asm"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" C)))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge"
###                     ("\<^const>List.append" ("_position" xvec)
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" yvec)))
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("_position" P')))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_position" C)))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Agent.resChain"
###                               ("\<^const>List.append" ("_position" xvec)
###                                 ("_position" yvec))
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" yvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" C)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))
###                     ("_asm"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" C)))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge"
###                     ("\<^const>List.append" ("_position" xvec)
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" yvec)))
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("_position" P')))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_position" C)))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Frame.frameResChain"
###                               ("\<^const>List.append" ("_position" xvec)
###                                 ("_position" yvec))
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" yvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" C)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))
###                     ("_asm"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" C)))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge"
###                     ("\<^const>List.append" ("_position" xvec)
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" yvec)))
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("_position" P')))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_position" C)))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Semantics.BOresChainJudge"
###                               ("\<^const>List.append" ("_position" xvec)
###                                 ("_position" yvec))
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" yvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" C)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))
###                     ("_asm"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" C)))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge"
###                     ("\<^const>List.append" ("_position" xvec)
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" yvec)))
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("_position" P')))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_position" C)))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Agent.resChain"
###                               ("\<^const>List.append" ("_position" xvec)
###                                 ("_position" yvec))
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" yvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" C)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))
###                     ("_asm"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" C)))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge"
###                     ("\<^const>List.append" ("_position" xvec)
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" yvec)))
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("_position" P')))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_position" C)))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Frame.frameResChain"
###                               ("\<^const>List.append" ("_position" xvec)
###                                 ("_position" yvec))
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" yvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" C)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))
###                     ("_asm"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" C)))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge"
###                     ("\<^const>List.append" ("_position" xvec)
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" yvec)))
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("_position" P')))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_position" C)))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Semantics.BOresChainJudge"
###                               ("\<^const>List.append" ("_position" xvec)
###                                 ("_position" yvec))
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" yvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" C)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))
###                     ("_asm"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" C)))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge"
###                     ("\<^const>List.append" ("_position" xvec)
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" yvec)))
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("_position" P')))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" x)
###                   ("_idts" ("_position" A\<^sub>P)
###                     ("_idts" ("_position" \<Psi>\<^sub>P)
###                       ("_position" C)))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("\<^const>List.append" ("_position" xvec) ("_position" yvec))
###               ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Agent.resChain"
###                               ("\<^const>List.append" ("_position" xvec)
###                                 ("_position" yvec))
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.member" ("_position" x)
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" \<Psi>)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" A\<^sub>P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh" ("_position" x)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" yvec)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" yvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" C)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))
###                     ("_asm"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" C)))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Frame.frameResChain"
###                     ("\<^const>List.append" ("_position" xvec)
###                       ("\<^const>List.list.Cons" ("_position" x)
###                         ("_position" yvec)))
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("_position" P')))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 3264 of "$AFP/Psi_Calculi/Semantics.thy") produces 81 parse trees (10 displayed):
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x)
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Agent.resChain" ("_position" xvec)
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" N)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" A\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" xvec)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" C)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###         ("_asm"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" C)))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Res" ("_position" x)
###                         ("_position" P'))))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x)
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Frame.frameResChain"
###                               ("_position" xvec)
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" N)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" A\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" xvec)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" C)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###         ("_asm"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" C)))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Res" ("_position" x)
###                         ("_position" P'))))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x)
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Semantics.BOresChainJudge"
###                               ("_position" xvec)
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" N)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" A\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" xvec)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" C)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###         ("_asm"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" C)))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Res" ("_position" x)
###                         ("_position" P'))))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x)
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Agent.resChain" ("_position" xvec)
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" N)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" A\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" xvec)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" C)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###         ("_asm"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" C)))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Res" ("_position" x)
###                         ("_position" P'))))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x)
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Frame.frameResChain"
###                               ("_position" xvec)
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" N)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" A\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" xvec)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" C)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###         ("_asm"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" C)))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Res" ("_position" x)
###                         ("_position" P'))))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x)
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Semantics.BOresChainJudge"
###                               ("_position" xvec)
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" N)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" A\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" xvec)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" C)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###         ("_asm"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" C)))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Res" ("_position" x)
###                         ("_position" P'))))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x)
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Agent.resChain" ("_position" xvec)
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" N)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" A\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" xvec)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" C)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###         ("_asm"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" C)))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Res" ("_position" x)
###                         ("_position" P'))))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x)
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Frame.frameResChain"
###                               ("_position" xvec)
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" N)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" A\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" xvec)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" C)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###         ("_asm"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" C)))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Res" ("_position" x)
###                         ("_position" P'))))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x)
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Semantics.BOresChainJudge"
###                               ("_position" xvec)
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" N)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" A\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" xvec)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" C)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###         ("_asm"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" C)))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Res" ("_position" x)
###                         ("_position" P'))))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" x)
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_position" C))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" M)
###                           ("_cargs"
###                             ("\<^const>Agent.resChain" ("_position" xvec)
###                               ("\<^const>Semantics.boundOutput.BOut"
###                                 ("_position" N) ("_position" P')))
###                             ("_cargs" ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>P))))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" xvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" N)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh" ("_position" x)
###                           ("_position" A\<^sub>P)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" xvec)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" \<Psi>)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" P)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>P)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" C)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###         ("_asm"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" C)))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs" ("_position" M)
###                 ("_cargs"
###                   ("\<^const>Frame.frameResChain" ("_position" xvec)
###                     ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                       ("\<^const>Agent.psi.Res" ("_position" x)
###                         ("_position" P'))))
###                   ("_cargs"
###                     ("\<^const>List.list.Cons" ("_position" x)
###                       ("_position" A\<^sub>P))
###                     ("_position" \<Psi>\<^sub>P)))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 3357 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" A\<^sub>Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" xvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" \<Psi>)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>\<^sub>P)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" N)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P')))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" Q)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" K)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q')))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs"
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" Q')))
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" A\<^sub>P)
###                     ("_position" A\<^sub>Q))
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                     ("_position" \<Psi>\<^sub>Q)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" A\<^sub>Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" xvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" \<Psi>)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>\<^sub>P)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" N)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P')))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" Q)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" K)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q')))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs"
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" Q')))
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" A\<^sub>P)
###                     ("_position" A\<^sub>Q))
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                     ("_position" \<Psi>\<^sub>Q)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" xvec)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" A\<^sub>Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" xvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" \<Psi>)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>\<^sub>P)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" N)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P')))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" Q)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" K)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q')))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs"
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" Q')))
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" A\<^sub>P)
###                     ("_position" A\<^sub>Q))
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                     ("_position" \<Psi>\<^sub>Q)))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 3367 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" A\<^sub>Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" xvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" \<Psi>)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>\<^sub>P)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" N)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P')))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" Q)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" K)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q')))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs"
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" Q')))
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" A\<^sub>P)
###                     ("_position" A\<^sub>Q))
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                     ("_position" \<Psi>\<^sub>Q)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" A\<^sub>Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" xvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" \<Psi>)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>\<^sub>P)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" N)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P')))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" Q)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" K)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q')))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs"
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" Q')))
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" A\<^sub>P)
###                     ("_position" A\<^sub>Q))
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                     ("_position" \<Psi>\<^sub>Q)))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" \<Psi>\<^sub>Q)
###       ("_idts" ("_position" P)
###         ("_idts" ("_position" M)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" N)
###               ("_idts" ("_position" P')
###                 ("_idts" ("_position" A\<^sub>P)
###                   ("_idts" ("_position" \<Psi>\<^sub>P)
###                     ("_idts" ("_position" Q)
###                       ("_idts" ("_position" K)
###                         ("_idts" ("_position" Q')
###                           ("_idts" ("_position" A\<^sub>Q)
###                             ("_position" C))))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###     ("_position" A\<^sub>Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" xvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###         ("_position" \<Psi>)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>\<^sub>P)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" N)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" P')))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" Q)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" K)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q')))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>\<^sub>P)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" Q)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###               ("_cargs"
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" Q')))
###                 ("_cargs"
###                   ("\<^const>List.append" ("_position" A\<^sub>P)
###                     ("_position" A\<^sub>Q))
###                   ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                     ("_position" \<Psi>\<^sub>Q)))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 3377 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" x)
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" P')
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" A\<^sub>P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh" ("_position" x)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                   ("_position" P'))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" x)
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" P')
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" A\<^sub>P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh" ("_position" x)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                   ("_position" P'))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" x)
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" P')
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" A\<^sub>P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh" ("_position" x)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                   ("_position" P'))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" x)
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" P')
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" A\<^sub>P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh" ("_position" x)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs"
###                 ("\<^const>Frame.frame.FRes" ("_position" x)
###                   ("_position" P'))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" x)
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" P')
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" A\<^sub>P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh" ("_position" x)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Frame.frame.FRes" ("_position" x)
###                   ("_position" P'))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" x)
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" P')
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" A\<^sub>P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh" ("_position" x)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Frame.frame.FRes" ("_position" x)
###                   ("_position" P'))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" x)
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" P')
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" A\<^sub>P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh" ("_position" x)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P))
###               ("_cargs"
###                 ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P'))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" x)
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" P')
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" A\<^sub>P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh" ("_position" x)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P'))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" x)
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P) ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>Pure.all_binder" ("_position" C)
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" Prop)
###                   ("_cargs" ("_position" C)
###                     ("_cargs" ("_position" \<Psi>)
###                       ("_cargs" ("_position" P)
###                         ("_cargs" ("_position" P')
###                           ("_cargs" ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>P)))))))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" A\<^sub>P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" P')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh" ("_position" x)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###               ("_cargs"
###                 ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P'))
###                 ("_cargs"
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" A\<^sub>P))
###                   ("_position" \<Psi>\<^sub>P))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 3758 of "$AFP/Psi_Calculi/Semantics.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###       ("_position" N) ("_position" P))
###     ("\<^const>Semantics.create_residual"
###       ("\<^const>Semantics.action.In" ("_position" K)
###         ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###           ("_position" Tvec)))
###       ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###         ("_position" Tvec)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###       ("_position" N) ("_position" P))
###     ("\<^const>Semantics.create_residual"
###       ("\<^const>Semantics.action.In" ("_position" K)
###         ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###           ("_position" Tvec)))
###       ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###         ("_position" Tvec)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###       ("_position" N) ("_position" P))
###     ("\<^const>Semantics.create_residual"
###       ("\<^const>Semantics.action.In" ("_position" K)
###         ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###           ("_position" Tvec)))
###       ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###         ("_position" Tvec)))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###       ("_position" N) ("_position" P))
###     ("\<^const>Semantics.create_residual"
###       ("\<^const>Semantics.action.In" ("_position" K)
###         ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###           ("_position" Tvec)))
###       ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###         ("_position" Tvec)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 4063 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual"
###       ("\<^const>Semantics.action.Out" ("_position" M)
###         ("\<^const>List.append" ("_position" xvec)
###           ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###         ("_position" N))
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual"
###       ("\<^const>Semantics.action.Out" ("_position" M)
###         ("\<^const>List.append" ("_position" xvec)
###           ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###         ("_position" N))
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual"
###       ("\<^const>Semantics.action.Out" ("_position" M)
###         ("\<^const>List.append" ("_position" xvec)
###           ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###         ("_position" N))
###       ("_position" P'))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 4129 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###         ("_position" P')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###         ("_position" P')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###         ("_position" P')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P')))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 4737 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###     ("\<^const>Semantics.create_residual" ("\<^const>Semantics.action.Tau")
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q'))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###     ("\<^const>Semantics.create_residual" ("\<^const>Semantics.action.Tau")
###       ("\<^const>Frame.frameResChain" ("_position" xvec)
###         ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q'))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###     ("\<^const>Semantics.create_residual" ("\<^const>Semantics.action.Tau")
###       ("\<^const>Agent.resChain" ("_position" xvec)
###         ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q'))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 4910 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###     ("\<^const>Semantics.create_residual" ("\<^const>Semantics.action.Tau")
###       ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###         ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q'))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###     ("\<^const>Semantics.create_residual" ("\<^const>Semantics.action.Tau")
###       ("\<^const>Frame.frameResChain" ("_position" xvec)
###         ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q'))))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###     ("\<^const>Semantics.create_residual" ("\<^const>Semantics.action.Tau")
###       ("\<^const>Agent.resChain" ("_position" xvec)
###         ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q'))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 5063 of "$AFP/Psi_Calculi/Semantics.thy") produces 4 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" K)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" Tvec) ("_position" P))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.inputChainJudge" ("_position" M)
###             ("_position" xvec) ("_position" N) ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.In" ("_position" K)
###                 ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###                   ("_position" Tvec)))
###               ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###                 ("_position" Tvec)))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>SImp'" ("_position" \<Psi>)
###               ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" distinct) ("_position" xvec)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.subset_eq"
###                   ("_applC" ("_position" set) ("_position" xvec))
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" length) ("_position" xvec))
###                     ("_applC" ("_position" length) ("_position" Tvec))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Tvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" K)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" K)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" Tvec) ("_position" P))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.inputChainJudge" ("_position" M)
###             ("_position" xvec) ("_position" N) ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.In" ("_position" K)
###                 ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###                   ("_position" Tvec)))
###               ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###                 ("_position" Tvec)))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>SImp'" ("_position" \<Psi>)
###               ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" distinct) ("_position" xvec)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.subset_eq"
###                   ("_applC" ("_position" set) ("_position" xvec))
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" length) ("_position" xvec))
###                     ("_applC" ("_position" length) ("_position" Tvec))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Tvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" K)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" K)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" Tvec) ("_position" P))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.inputChainJudge" ("_position" M)
###             ("_position" xvec) ("_position" N) ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.In" ("_position" K)
###                 ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###                   ("_position" Tvec)))
###               ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###                 ("_position" Tvec)))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>SImp'" ("_position" \<Psi>)
###               ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" distinct) ("_position" xvec)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.subset_eq"
###                   ("_applC" ("_position" set) ("_position" xvec))
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" length) ("_position" xvec))
###                     ("_applC" ("_position" length) ("_position" Tvec))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Tvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" K)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" K)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" Tvec) ("_position" P))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.inputChainJudge" ("_position" M)
###             ("_position" xvec) ("_position" N) ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.In" ("_position" K)
###                 ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###                   ("_position" Tvec)))
###               ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###                 ("_position" Tvec)))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>SImp'" ("_position" \<Psi>)
###               ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" distinct) ("_position" xvec)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Set.subset_eq"
###                   ("_applC" ("_position" set) ("_position" xvec))
###                   ("_applC" ("_position" supp) ("_position" N))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>HOL.eq"
###                     ("_applC" ("_position" length) ("_position" xvec))
###                     ("_applC" ("_position" length) ("_position" Tvec))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" Tvec)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" M)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" K)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" C))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 5079 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" Q)
###                   ("_idts" ("_position" K)
###                     ("_idts" ("_position" xvec)
###                       ("_idts" ("_position" Q')
###                         ("_position" A\<^sub>Q))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Tau")
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>Q))
###               ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.In" ("_position" M)
###                   ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" P))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                   ("_position" \<Psi>\<^sub>P))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>local.semantics"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("_position" \<Psi>\<^sub>P))
###                     ("_position" Q)
###                     ("\<^const>Semantics.create_residual"
###                       ("\<^const>Semantics.action.Out" ("_position" K)
###                         ("_position" xvec) ("_position" N))
###                       ("_position" Q'))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct)
###           ("_position" xvec))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" Q)
###                   ("_idts" ("_position" K)
###                     ("_idts" ("_position" xvec)
###                       ("_idts" ("_position" Q')
###                         ("_position" A\<^sub>Q))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Tau")
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>Q))
###               ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.In" ("_position" M)
###                   ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" P))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                   ("_position" \<Psi>\<^sub>P))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>local.semantics"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("_position" \<Psi>\<^sub>P))
###                     ("_position" Q)
###                     ("\<^const>Semantics.create_residual"
###                       ("\<^const>Semantics.action.Out" ("_position" K)
###                         ("_position" xvec) ("_position" N))
###                       ("_position" Q'))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct)
###           ("_position" xvec))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" Q)
###                   ("_idts" ("_position" K)
###                     ("_idts" ("_position" xvec)
###                       ("_idts" ("_position" Q')
###                         ("_position" A\<^sub>Q))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Tau")
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>Q))
###               ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.In" ("_position" M)
###                   ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" P))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                   ("_position" \<Psi>\<^sub>P))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>local.semantics"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("_position" \<Psi>\<^sub>P))
###                     ("_position" Q)
###                     ("\<^const>Semantics.create_residual"
###                       ("\<^const>Semantics.action.Out" ("_position" K)
###                         ("_position" xvec) ("_position" N))
###                       ("_position" Q'))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct)
###           ("_position" xvec))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 5088 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" Q')
###                         ("_position" A\<^sub>Q))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Tau")
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>Q))
###               ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("_position" xvec) ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" P))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                   ("_position" \<Psi>\<^sub>P))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>local.semantics"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("_position" \<Psi>\<^sub>P))
###                     ("_position" Q)
###                     ("\<^const>Semantics.create_residual"
###                       ("\<^const>Semantics.action.In" ("_position" K)
###                         ("_position" N))
###                       ("_position" Q'))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct)
###           ("_position" xvec))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" Q')
###                         ("_position" A\<^sub>Q))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Tau")
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>Q))
###               ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("_position" xvec) ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" P))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                   ("_position" \<Psi>\<^sub>P))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>local.semantics"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("_position" \<Psi>\<^sub>P))
###                     ("_position" Q)
###                     ("\<^const>Semantics.create_residual"
###                       ("\<^const>Semantics.action.In" ("_position" K)
###                         ("_position" N))
###                       ("_position" Q'))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct)
###           ("_position" xvec))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" Q')
###                         ("_position" A\<^sub>Q))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Tau")
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>Q))
###               ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("_position" xvec) ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" P))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                   ("_position" \<Psi>\<^sub>P))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>local.semantics"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("_position" \<Psi>\<^sub>P))
###                     ("_position" Q)
###                     ("\<^const>Semantics.create_residual"
###                       ("\<^const>Semantics.action.In" ("_position" K)
###                         ("_position" N))
###                       ("_position" Q'))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct)
###           ("_position" xvec))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 5097 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" yvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P') ("_position" x)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Out" ("_position" M)
###                 ("\<^const>List.append" ("_position" xvec)
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" yvec)))
###                 ("_position" N))
###               ("_position" P'))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("_position" yvec))
###                   ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Set.member" ("_position" x)
###                 ("_applC" ("_position" supp) ("_position" N))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" yvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" distinct)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" yvec)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" \<Psi>)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" M)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###           ("_position" C)))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" yvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P') ("_position" x)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Out" ("_position" M)
###                 ("\<^const>List.append" ("_position" xvec)
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" yvec)))
###                 ("_position" N))
###               ("_position" P'))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("_position" yvec))
###                   ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Set.member" ("_position" x)
###                 ("_applC" ("_position" supp) ("_position" N))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" yvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" distinct)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" yvec)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" \<Psi>)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" M)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###           ("_position" C)))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" yvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P') ("_position" x)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###             ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Out" ("_position" M)
###                 ("\<^const>List.append" ("_position" xvec)
###                   ("\<^const>List.list.Cons" ("_position" x)
###                     ("_position" yvec)))
###                 ("_position" N))
###               ("_position" P'))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("_position" yvec))
###                   ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Set.member" ("_position" x)
###                 ("_applC" ("_position" supp) ("_position" N))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" xvec)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" yvec)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x)
###                         ("_position" \<Psi>)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("_applC" ("_position" distinct)
###                           ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" yvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" yvec)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" \<Psi>)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" P)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" M)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh" ("_position" x) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###           ("_position" C)))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 5102 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>)
###       ("_idts" ("_position" P') ("_position" x))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P')))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<alpha>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_applC" ("_position" subject)
###                             ("_position" \<alpha>))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" distinct)
###                               ("_applC" ("_position" bn)
###                                 ("_position" \<alpha>)))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>)
###       ("_idts" ("_position" P') ("_position" x))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P')))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<alpha>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_applC" ("_position" subject)
###                             ("_position" \<alpha>))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" distinct)
###                               ("_applC" ("_position" bn)
###                                 ("_position" \<alpha>)))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>)
###       ("_idts" ("_position" P') ("_position" x))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###             ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###               ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P')))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<alpha>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_applC" ("_position" subject)
###                             ("_position" \<alpha>))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" distinct)
###                               ("_applC" ("_position" bn)
###                                 ("_position" \<alpha>)))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>)
###       ("_idts" ("_position" P') ("_position" x))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###               ("\<^const>Frame.frame.FRes" ("_position" x)
###                 ("_position" P')))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<alpha>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_applC" ("_position" subject)
###                             ("_position" \<alpha>))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" distinct)
###                               ("_applC" ("_position" bn)
###                                 ("_position" \<alpha>)))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>)
###       ("_idts" ("_position" P') ("_position" x))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###               ("\<^const>Frame.frame.FRes" ("_position" x)
###                 ("_position" P')))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<alpha>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_applC" ("_position" subject)
###                             ("_position" \<alpha>))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" distinct)
###                               ("_applC" ("_position" bn)
###                                 ("_position" \<alpha>)))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>)
###       ("_idts" ("_position" P') ("_position" x))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###             ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###               ("\<^const>Frame.frame.FRes" ("_position" x)
###                 ("_position" P')))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<alpha>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_applC" ("_position" subject)
###                             ("_position" \<alpha>))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" distinct)
###                               ("_applC" ("_position" bn)
###                                 ("_position" \<alpha>)))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>)
###       ("_idts" ("_position" P') ("_position" x))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P')))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<alpha>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_applC" ("_position" subject)
###                             ("_position" \<alpha>))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" distinct)
###                               ("_applC" ("_position" bn)
###                                 ("_position" \<alpha>)))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>)
###       ("_idts" ("_position" P') ("_position" x))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P')))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<alpha>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_applC" ("_position" subject)
###                             ("_position" \<alpha>))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" distinct)
###                               ("_applC" ("_position" bn)
###                                 ("_position" \<alpha>)))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>)
###       ("_idts" ("_position" P') ("_position" x))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###             ("_position" P))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###                 ("_position" P')))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh" ("_position" x)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x)
###                   ("_position" \<alpha>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x)
###                     ("_position" C)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star"
###                       ("_applC" ("_position" bn) ("_position" \<alpha>))
###                       ("_position" \<Psi>)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_position" P)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_applC" ("_position" bn) ("_position" \<alpha>))
###                           ("_applC" ("_position" subject)
###                             ("_position" \<alpha>))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_applC" ("_position" bn)
###                               ("_position" \<alpha>))
###                             ("_position" C)))
###                         ("_asm"
###                           ("\<^const>HOL.Trueprop"
###                             ("_applC" ("_position" distinct)
###                               ("_applC" ("_position" bn)
###                                 ("_position" \<alpha>)))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 5585 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" inputLength)
###       ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P)))
###     ("\<^const>Groups.zero_class.zero")))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" inputLength)
###       ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P)))
###     ("\<^const>Groups.zero_class.zero")))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>HOL.eq"
###     ("_applC" ("_position" inputLength)
###       ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###         ("_position" P)))
###     ("\<^const>Groups.zero_class.zero")))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 5733 of "$AFP/Psi_Calculi/Semantics.thy") produces 4 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" K)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" Tvec) ("_position" P)))))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###               ("_position" cP)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                 ("_position" cRs))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Agent.inputChainJudge" ("_position" M)
###               ("_position" xvec1) ("_position" N) ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("\<^const>local.subs" ("_position" N) ("_position" xvec1)
###                     ("_position" Tvec)))
###                 ("\<^const>local.subs" ("_position" P) ("_position" xvec1)
###                   ("_position" Tvec))))
###             ("\<^const>HOL.conj"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K)))
###               ("\<^const>HOL.conj"
###                 ("_applC" ("_position" distinct) ("_position" xvec1))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Set.subset_eq"
###                     ("_applC" ("_position" set) ("_position" xvec1))
###                     ("_applC" ("_position" supp) ("_position" N)))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" length) ("_position" xvec1))
###                       ("_applC" ("_position" length) ("_position" Tvec)))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                         ("_position" Tvec))
###                       ("\<^const>HOL.conj"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                           ("_position" \<Psi>))
###                         ("\<^const>HOL.conj"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                             ("_position" M))
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                             ("_position" K)))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" K)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" Tvec) ("_position" P)))))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###               ("_position" cP)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                 ("_position" cRs))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Agent.inputChainJudge" ("_position" M)
###               ("_position" xvec1) ("_position" N) ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("\<^fixed>substTerm" ("_position" N) ("_position" xvec1)
###                     ("_position" Tvec)))
###                 ("\<^const>local.subs" ("_position" P) ("_position" xvec1)
###                   ("_position" Tvec))))
###             ("\<^const>HOL.conj"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K)))
###               ("\<^const>HOL.conj"
###                 ("_applC" ("_position" distinct) ("_position" xvec1))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Set.subset_eq"
###                     ("_applC" ("_position" set) ("_position" xvec1))
###                     ("_applC" ("_position" supp) ("_position" N)))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" length) ("_position" xvec1))
###                       ("_applC" ("_position" length) ("_position" Tvec)))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                         ("_position" Tvec))
###                       ("\<^const>HOL.conj"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                           ("_position" \<Psi>))
###                         ("\<^const>HOL.conj"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                             ("_position" M))
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                             ("_position" K)))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" K)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" Tvec) ("_position" P)))))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###               ("_position" cP)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                 ("_position" cRs))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Agent.inputChainJudge" ("_position" M)
###               ("_position" xvec1) ("_position" N) ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("\<^const>local.subs" ("_position" N) ("_position" xvec1)
###                     ("_position" Tvec)))
###                 ("\<^fixed>substTerm" ("_position" P) ("_position" xvec1)
###                   ("_position" Tvec))))
###             ("\<^const>HOL.conj"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K)))
###               ("\<^const>HOL.conj"
###                 ("_applC" ("_position" distinct) ("_position" xvec1))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Set.subset_eq"
###                     ("_applC" ("_position" set) ("_position" xvec1))
###                     ("_applC" ("_position" supp) ("_position" N)))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" length) ("_position" xvec1))
###                       ("_applC" ("_position" length) ("_position" Tvec)))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                         ("_position" Tvec))
###                       ("\<^const>HOL.conj"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                           ("_position" \<Psi>))
###                         ("\<^const>HOL.conj"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                             ("_position" M))
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                             ("_position" K)))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" K)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" Tvec) ("_position" P)))))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###               ("_position" cP)))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                 ("_position" cRs))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Agent.inputChainJudge" ("_position" M)
###               ("_position" xvec1) ("_position" N) ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.In" ("_position" K)
###                   ("\<^fixed>substTerm" ("_position" N) ("_position" xvec1)
###                     ("_position" Tvec)))
###                 ("\<^fixed>substTerm" ("_position" P) ("_position" xvec1)
###                   ("_position" Tvec))))
###             ("\<^const>HOL.conj"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K)))
###               ("\<^const>HOL.conj"
###                 ("_applC" ("_position" distinct) ("_position" xvec1))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Set.subset_eq"
###                     ("_applC" ("_position" set) ("_position" xvec1))
###                     ("_applC" ("_position" supp) ("_position" N)))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" length) ("_position" xvec1))
###                       ("_applC" ("_position" length) ("_position" Tvec)))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                         ("_position" Tvec))
###                       ("\<^const>HOL.conj"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                           ("_position" \<Psi>))
###                         ("\<^const>HOL.conj"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                             ("_position" M))
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec1)
###                             ("_position" K)))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 5746 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" Q)
###                   ("_idts" ("_position" K)
###                     ("_idts" ("_position" xvec)
###                       ("_idts" ("_position" Q')
###                         ("_position" A\<^sub>Q))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Tau")
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>Q))
###               ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.In" ("_position" M)
###                   ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" P))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                   ("_position" \<Psi>\<^sub>P))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>local.semantics"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("_position" \<Psi>\<^sub>P))
###                     ("_position" Q)
###                     ("\<^const>Semantics.create_residual"
###                       ("\<^const>Semantics.action.Out" ("_position" K)
###                         ("_position" xvec) ("_position" N))
###                       ("_position" Q'))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct)
###           ("_position" xvec))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" Q)
###                   ("_idts" ("_position" K)
###                     ("_idts" ("_position" xvec)
###                       ("_idts" ("_position" Q')
###                         ("_position" A\<^sub>Q))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Tau")
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>Q))
###               ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.In" ("_position" M)
###                   ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" P))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                   ("_position" \<Psi>\<^sub>P))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>local.semantics"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("_position" \<Psi>\<^sub>P))
###                     ("_position" Q)
###                     ("\<^const>Semantics.create_residual"
###                       ("\<^const>Semantics.action.Out" ("_position" K)
###                         ("_position" xvec) ("_position" N))
###                       ("_position" Q'))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct)
###           ("_position" xvec))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" Q)
###                   ("_idts" ("_position" K)
###                     ("_idts" ("_position" xvec)
###                       ("_idts" ("_position" Q')
###                         ("_position" A\<^sub>Q))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Tau")
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>Q))
###               ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.In" ("_position" M)
###                   ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" P))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                   ("_position" \<Psi>\<^sub>P))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>local.semantics"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("_position" \<Psi>\<^sub>P))
###                     ("_position" Q)
###                     ("\<^const>Semantics.create_residual"
###                       ("\<^const>Semantics.action.Out" ("_position" K)
###                         ("_position" xvec) ("_position" N))
###                       ("_position" Q'))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct)
###           ("_position" xvec))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 5755 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" Q')
###                         ("_position" A\<^sub>Q))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Tau")
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>Q))
###               ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("_position" xvec) ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" P))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                   ("_position" \<Psi>\<^sub>P))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>local.semantics"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("_position" \<Psi>\<^sub>P))
###                     ("_position" Q)
###                     ("\<^const>Semantics.create_residual"
###                       ("\<^const>Semantics.action.In" ("_position" K)
###                         ("_position" N))
###                       ("_position" Q'))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct)
###           ("_position" xvec))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" Q')
###                         ("_position" A\<^sub>Q))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Tau")
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>Q))
###               ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("_position" xvec) ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" P))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                   ("_position" \<Psi>\<^sub>P))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>local.semantics"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("_position" \<Psi>\<^sub>P))
###                     ("_position" Q)
###                     ("\<^const>Semantics.create_residual"
###                       ("\<^const>Semantics.action.In" ("_position" K)
###                         ("_position" N))
###                       ("_position" Q'))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct)
###           ("_position" xvec))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" P)
###       ("_idts" ("_position" M)
###         ("_idts" ("_position" xvec)
###           ("_idts" ("_position" N)
###             ("_idts" ("_position" P')
###               ("_idts" ("_position" A\<^sub>P)
###                 ("_idts" ("_position" \<Psi>\<^sub>P)
###                   ("_idts" ("_position" Q)
###                     ("_idts" ("_position" K)
###                       ("_idts" ("_position" Q')
###                         ("_position" A\<^sub>Q))))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.eq" ("_position" cP)
###           ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq" ("_position" cRs)
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Tau")
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" Q'))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>local.semantics"
###               ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                 ("_position" \<Psi>\<^sub>Q))
###               ("_position" P)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("_position" xvec) ("_position" N))
###                 ("_position" P'))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>HOL.eq"
###                 ("_applC" ("_position" extractFrame) ("_position" P))
###                 ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###                   ("_position" \<Psi>\<^sub>P))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>local.semantics"
###                     ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                       ("_position" \<Psi>\<^sub>P))
###                     ("_position" Q)
###                     ("\<^const>Semantics.create_residual"
###                       ("\<^const>Semantics.action.In" ("_position" K)
###                         ("_position" N))
###                       ("_position" Q'))))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>HOL.eq"
###                       ("_applC" ("_position" extractFrame) ("_position" Q))
###                       ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                         ("_position" \<Psi>\<^sub>Q))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct)
###                         ("_position" A\<^sub>Q)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^fixed>SImp'"
###                           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                             ("\<^fixed>SCompose'"
###                               ("_position" \<Psi>\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("\<^fixed>SChanEq'" ("_position" M)
###                             ("_position" K))))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P)
###                               ("_position" \<Psi>\<^sub>Q)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" M)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" N)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" P')))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" xvec)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" Q')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" xvec)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                             ("_position" \<Psi>)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec)
###                               ("_position" \<Psi>\<^sub>P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" C)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q) ("_position" C)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" C)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("_applC" ("_position" distinct)
###           ("_position" xvec))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 5764 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" y)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N) ("_position" P')))))))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec4)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec4)
###               ("_position" cP)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec4)
###                 ("_position" cRs)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x1)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x1)
###                     ("_position" cP)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x1)
###                       ("_position" cRs)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x1)
###                         ("_position" xvec4))))))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Agent.psi.Res" ("_position" x1) ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x1)
###                       ("_position" yvec)))
###                   ("_position" N))
###                 ("_position" P')))
###             ("\<^const>HOL.conj"
###               ("\<^const>HOL.eq" ("_position" xvec4)
###                 ("\<^const>List.append" ("_position" xvec)
###                   ("\<^const>List.list.Cons" ("_position" y)
###                     ("_position" yvec))))
###               ("\<^const>HOL.conj"
###                 ("\<^const>local.semantics" ("_position" \<Psi>)
###                   ("_position" P)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.Out" ("_position" M)
###                       ("\<^const>List.append" ("_position" xvec)
###                         ("_position" yvec))
###                       ("_position" N))
###                     ("_position" P')))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Set.member" ("_position" x1)
###                     ("_applC" ("_position" supp) ("_position" N)))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>Nominal.fresh" ("_position" x1)
###                       ("_position" xvec))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh" ("_position" x1)
###                         ("_position" yvec))
###                       ("\<^const>HOL.conj"
###                         ("_applC" ("_position" distinct) ("_position" xvec))
###                         ("\<^const>HOL.conj"
###                           ("_applC" ("_position" distinct)
###                             ("_position" yvec))
###                           ("\<^const>HOL.conj"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>))
###                             ("\<^const>HOL.conj"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" P))
###                               ("\<^const>HOL.conj"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" M))
###                                 ("\<^const>HOL.conj"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" yvec))
###                                   ("\<^const>HOL.conj"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" \<Psi>))
###                                     ("\<^const>HOL.conj"
### ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" P))
### ("\<^const>Nominal.fresh_star" ("_position" yvec)
###   ("_position" M)))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" y)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N) ("_position" P')))))))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec4)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec4)
###               ("_position" cP)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec4)
###                 ("_position" cRs)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x1)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x1)
###                     ("_position" cP)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x1)
###                       ("_position" cRs)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x1)
###                         ("_position" xvec4))))))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Frame.frame.FRes" ("_position" x1) ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x1)
###                       ("_position" yvec)))
###                   ("_position" N))
###                 ("_position" P')))
###             ("\<^const>HOL.conj"
###               ("\<^const>HOL.eq" ("_position" xvec4)
###                 ("\<^const>List.append" ("_position" xvec)
###                   ("\<^const>List.list.Cons" ("_position" y)
###                     ("_position" yvec))))
###               ("\<^const>HOL.conj"
###                 ("\<^const>local.semantics" ("_position" \<Psi>)
###                   ("_position" P)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.Out" ("_position" M)
###                       ("\<^const>List.append" ("_position" xvec)
###                         ("_position" yvec))
###                       ("_position" N))
###                     ("_position" P')))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Set.member" ("_position" x1)
###                     ("_applC" ("_position" supp) ("_position" N)))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>Nominal.fresh" ("_position" x1)
###                       ("_position" xvec))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh" ("_position" x1)
###                         ("_position" yvec))
###                       ("\<^const>HOL.conj"
###                         ("_applC" ("_position" distinct) ("_position" xvec))
###                         ("\<^const>HOL.conj"
###                           ("_applC" ("_position" distinct)
###                             ("_position" yvec))
###                           ("\<^const>HOL.conj"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>))
###                             ("\<^const>HOL.conj"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" P))
###                               ("\<^const>HOL.conj"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" M))
###                                 ("\<^const>HOL.conj"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" yvec))
###                                   ("\<^const>HOL.conj"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" \<Psi>))
###                                     ("\<^const>HOL.conj"
### ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" P))
### ("\<^const>Nominal.fresh_star" ("_position" yvec)
###   ("_position" M)))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" y)
###           ("_idts" ("_position" yvec)
###             ("_idts" ("_position" N) ("_position" P')))))))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec4)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec4)
###               ("_position" cP)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec4)
###                 ("_position" cRs)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x1)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x1)
###                     ("_position" cP)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x1)
###                       ("_position" cRs)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x1)
###                         ("_position" xvec4))))))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Semantics.boundOutput.BStep" ("_position" x1)
###               ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Out" ("_position" M)
###                   ("\<^const>List.append" ("_position" xvec)
###                     ("\<^const>List.list.Cons" ("_position" x1)
###                       ("_position" yvec)))
###                   ("_position" N))
###                 ("_position" P')))
###             ("\<^const>HOL.conj"
###               ("\<^const>HOL.eq" ("_position" xvec4)
###                 ("\<^const>List.append" ("_position" xvec)
###                   ("\<^const>List.list.Cons" ("_position" y)
###                     ("_position" yvec))))
###               ("\<^const>HOL.conj"
###                 ("\<^const>local.semantics" ("_position" \<Psi>)
###                   ("_position" P)
###                   ("\<^const>Semantics.create_residual"
###                     ("\<^const>Semantics.action.Out" ("_position" M)
###                       ("\<^const>List.append" ("_position" xvec)
###                         ("_position" yvec))
###                       ("_position" N))
###                     ("_position" P')))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Set.member" ("_position" x1)
###                     ("_applC" ("_position" supp) ("_position" N)))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>Nominal.fresh" ("_position" x1)
###                       ("_position" xvec))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh" ("_position" x1)
###                         ("_position" yvec))
###                       ("\<^const>HOL.conj"
###                         ("_applC" ("_position" distinct) ("_position" xvec))
###                         ("\<^const>HOL.conj"
###                           ("_applC" ("_position" distinct)
###                             ("_position" yvec))
###                           ("\<^const>HOL.conj"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>))
###                             ("\<^const>HOL.conj"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec) ("_position" P))
###                               ("\<^const>HOL.conj"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" M))
###                                 ("\<^const>HOL.conj"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" yvec))
###                                   ("\<^const>HOL.conj"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" yvec) ("_position" \<Psi>))
###                                     ("\<^const>HOL.conj"
### ("\<^const>Nominal.fresh_star" ("_position" yvec) ("_position" P))
### ("\<^const>Nominal.fresh_star" ("_position" yvec)
###   ("_position" M)))))))))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 5770 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>) ("_position" P')))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###               ("_position" cP)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###                 ("_position" cRs)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x2)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" cP)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" cRs)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x2)
###                         ("_position" xvec5))))))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Agent.psi.Res" ("_position" x2) ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("\<^const>Agent.psi.Res" ("_position" x2)
###                   ("_position" P'))))
###             ("\<^const>HOL.conj"
###               ("\<^const>HOL.eq" ("_position" xvec5)
###                 ("_applC" ("_position" bn) ("_position" \<alpha>)))
###               ("\<^const>HOL.conj"
###                 ("\<^const>local.semantics" ("_position" \<Psi>)
###                   ("_position" P)
###                   ("\<^const>Semantics.create_residual"
###                     ("_position" \<alpha>) ("_position" P')))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" \<Psi>))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" \<alpha>))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_applC" ("_position" subject)
###                           ("_position" \<alpha>)))
###                       ("_applC" ("_position" distinct)
###                         ("_applC" ("_position" bn)
###                           ("_position" \<alpha>))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>) ("_position" P')))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###               ("_position" cP)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###                 ("_position" cRs)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x2)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" cP)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" cRs)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x2)
###                         ("_position" xvec5))))))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Frame.frame.FRes" ("_position" x2) ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("\<^const>Agent.psi.Res" ("_position" x2)
###                   ("_position" P'))))
###             ("\<^const>HOL.conj"
###               ("\<^const>HOL.eq" ("_position" xvec5)
###                 ("_applC" ("_position" bn) ("_position" \<alpha>)))
###               ("\<^const>HOL.conj"
###                 ("\<^const>local.semantics" ("_position" \<Psi>)
###                   ("_position" P)
###                   ("\<^const>Semantics.create_residual"
###                     ("_position" \<alpha>) ("_position" P')))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" \<Psi>))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" \<alpha>))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_applC" ("_position" subject)
###                           ("_position" \<alpha>)))
###                       ("_applC" ("_position" distinct)
###                         ("_applC" ("_position" bn)
###                           ("_position" \<alpha>))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>) ("_position" P')))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###               ("_position" cP)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###                 ("_position" cRs)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x2)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" cP)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" cRs)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x2)
###                         ("_position" xvec5))))))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Semantics.boundOutput.BStep" ("_position" x2)
###               ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("\<^const>Agent.psi.Res" ("_position" x2)
###                   ("_position" P'))))
###             ("\<^const>HOL.conj"
###               ("\<^const>HOL.eq" ("_position" xvec5)
###                 ("_applC" ("_position" bn) ("_position" \<alpha>)))
###               ("\<^const>HOL.conj"
###                 ("\<^const>local.semantics" ("_position" \<Psi>)
###                   ("_position" P)
###                   ("\<^const>Semantics.create_residual"
###                     ("_position" \<alpha>) ("_position" P')))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" \<Psi>))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" \<alpha>))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_applC" ("_position" subject)
###                           ("_position" \<alpha>)))
###                       ("_applC" ("_position" distinct)
###                         ("_applC" ("_position" bn)
###                           ("_position" \<alpha>))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>) ("_position" P')))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###               ("_position" cP)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###                 ("_position" cRs)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x2)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" cP)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" cRs)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x2)
###                         ("_position" xvec5))))))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Agent.psi.Res" ("_position" x2) ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("\<^const>Frame.frame.FRes" ("_position" x2)
###                   ("_position" P'))))
###             ("\<^const>HOL.conj"
###               ("\<^const>HOL.eq" ("_position" xvec5)
###                 ("_applC" ("_position" bn) ("_position" \<alpha>)))
###               ("\<^const>HOL.conj"
###                 ("\<^const>local.semantics" ("_position" \<Psi>)
###                   ("_position" P)
###                   ("\<^const>Semantics.create_residual"
###                     ("_position" \<alpha>) ("_position" P')))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" \<Psi>))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" \<alpha>))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_applC" ("_position" subject)
###                           ("_position" \<alpha>)))
###                       ("_applC" ("_position" distinct)
###                         ("_applC" ("_position" bn)
###                           ("_position" \<alpha>))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>) ("_position" P')))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###               ("_position" cP)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###                 ("_position" cRs)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x2)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" cP)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" cRs)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x2)
###                         ("_position" xvec5))))))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Frame.frame.FRes" ("_position" x2) ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("\<^const>Frame.frame.FRes" ("_position" x2)
###                   ("_position" P'))))
###             ("\<^const>HOL.conj"
###               ("\<^const>HOL.eq" ("_position" xvec5)
###                 ("_applC" ("_position" bn) ("_position" \<alpha>)))
###               ("\<^const>HOL.conj"
###                 ("\<^const>local.semantics" ("_position" \<Psi>)
###                   ("_position" P)
###                   ("\<^const>Semantics.create_residual"
###                     ("_position" \<alpha>) ("_position" P')))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" \<Psi>))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" \<alpha>))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_applC" ("_position" subject)
###                           ("_position" \<alpha>)))
###                       ("_applC" ("_position" distinct)
###                         ("_applC" ("_position" bn)
###                           ("_position" \<alpha>))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>) ("_position" P')))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###               ("_position" cP)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###                 ("_position" cRs)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x2)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" cP)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" cRs)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x2)
###                         ("_position" xvec5))))))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Semantics.boundOutput.BStep" ("_position" x2)
###               ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("\<^const>Frame.frame.FRes" ("_position" x2)
###                   ("_position" P'))))
###             ("\<^const>HOL.conj"
###               ("\<^const>HOL.eq" ("_position" xvec5)
###                 ("_applC" ("_position" bn) ("_position" \<alpha>)))
###               ("\<^const>HOL.conj"
###                 ("\<^const>local.semantics" ("_position" \<Psi>)
###                   ("_position" P)
###                   ("\<^const>Semantics.create_residual"
###                     ("_position" \<alpha>) ("_position" P')))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" \<Psi>))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" \<alpha>))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_applC" ("_position" subject)
###                           ("_position" \<alpha>)))
###                       ("_applC" ("_position" distinct)
###                         ("_applC" ("_position" bn)
###                           ("_position" \<alpha>))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>) ("_position" P')))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###               ("_position" cP)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###                 ("_position" cRs)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x2)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" cP)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" cRs)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x2)
###                         ("_position" xvec5))))))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Agent.psi.Res" ("_position" x2) ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("\<^const>Semantics.boundOutput.BStep" ("_position" x2)
###                   ("_position" P'))))
###             ("\<^const>HOL.conj"
###               ("\<^const>HOL.eq" ("_position" xvec5)
###                 ("_applC" ("_position" bn) ("_position" \<alpha>)))
###               ("\<^const>HOL.conj"
###                 ("\<^const>local.semantics" ("_position" \<Psi>)
###                   ("_position" P)
###                   ("\<^const>Semantics.create_residual"
###                     ("_position" \<alpha>) ("_position" P')))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" \<Psi>))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" \<alpha>))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_applC" ("_position" subject)
###                           ("_position" \<alpha>)))
###                       ("_applC" ("_position" distinct)
###                         ("_applC" ("_position" bn)
###                           ("_position" \<alpha>))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>) ("_position" P')))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###               ("_position" cP)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###                 ("_position" cRs)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x2)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" cP)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" cRs)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x2)
###                         ("_position" xvec5))))))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Frame.frame.FRes" ("_position" x2) ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("\<^const>Semantics.boundOutput.BStep" ("_position" x2)
###                   ("_position" P'))))
###             ("\<^const>HOL.conj"
###               ("\<^const>HOL.eq" ("_position" xvec5)
###                 ("_applC" ("_position" bn) ("_position" \<alpha>)))
###               ("\<^const>HOL.conj"
###                 ("\<^const>local.semantics" ("_position" \<Psi>)
###                   ("_position" P)
###                   ("\<^const>Semantics.create_residual"
###                     ("_position" \<alpha>) ("_position" P')))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" \<Psi>))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" \<alpha>))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_applC" ("_position" subject)
###                           ("_position" \<alpha>)))
###                       ("_applC" ("_position" distinct)
###                         ("_applC" ("_position" bn)
###                           ("_position" \<alpha>))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" P)
###     ("_idts" ("_position" \<alpha>) ("_position" P')))
###   ("\<^const>Pure.imp"
###     ("_bigimpl"
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###               ("_position" cP)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec5)
###                 ("_position" cRs)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh" ("_position" x2)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" cP)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" cRs)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh" ("_position" x2)
###                         ("_position" xvec5))))))))))
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>HOL.conj"
###           ("\<^const>HOL.eq" ("_position" cP)
###             ("\<^const>Semantics.boundOutput.BStep" ("_position" x2)
###               ("_position" P)))
###           ("\<^const>HOL.conj"
###             ("\<^const>HOL.eq" ("_position" cRs)
###               ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###                 ("\<^const>Semantics.boundOutput.BStep" ("_position" x2)
###                   ("_position" P'))))
###             ("\<^const>HOL.conj"
###               ("\<^const>HOL.eq" ("_position" xvec5)
###                 ("_applC" ("_position" bn) ("_position" \<alpha>)))
###               ("\<^const>HOL.conj"
###                 ("\<^const>local.semantics" ("_position" \<Psi>)
###                   ("_position" P)
###                   ("\<^const>Semantics.create_residual"
###                     ("_position" \<alpha>) ("_position" P')))
###                 ("\<^const>HOL.conj"
###                   ("\<^const>Nominal.fresh" ("_position" x2)
###                     ("_position" \<Psi>))
###                   ("\<^const>HOL.conj"
###                     ("\<^const>Nominal.fresh" ("_position" x2)
###                       ("_position" \<alpha>))
###                     ("\<^const>HOL.conj"
###                       ("\<^const>Nominal.fresh_star"
###                         ("_applC" ("_position" bn) ("_position" \<alpha>))
###                         ("_applC" ("_position" subject)
###                           ("_position" \<alpha>)))
###                       ("_applC" ("_position" distinct)
###                         ("_applC" ("_position" bn)
###                           ("_position" \<alpha>))))))))))))
###     ("\<^const>HOL.Trueprop" ("_position" Prop))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 6029 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P)
###               ("_idts" ("_position" K)
###                 ("_idts" ("_position" xvec)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" C)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" \<Psi>\<^sub>Q)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("\<^const>Semantics.action.Tau")
###           ("\<^const>Agent.resChain" ("_position" xvec)
###             ("\<^const>Agent.psi.Par" ("_position" P')
###               ("_position" Q'))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P)
###               ("_idts" ("_position" K)
###                 ("_idts" ("_position" xvec)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" C)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" \<Psi>\<^sub>Q)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("\<^const>Semantics.action.Tau")
###           ("\<^const>Frame.frameResChain" ("_position" xvec)
###             ("\<^const>Agent.psi.Par" ("_position" P')
###               ("_position" Q'))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P)
###               ("_idts" ("_position" K)
###                 ("_idts" ("_position" xvec)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" C)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" \<Psi>\<^sub>Q)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("\<^const>Semantics.action.Tau")
###           ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###             ("\<^const>Agent.psi.Par" ("_position" P')
###               ("_position" Q'))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 6037 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" K)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" C)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" \<Psi>\<^sub>Q)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("\<^const>Semantics.action.Tau")
###           ("\<^const>Agent.resChain" ("_position" xvec)
###             ("\<^const>Agent.psi.Par" ("_position" P')
###               ("_position" Q'))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" K)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" C)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" \<Psi>\<^sub>Q)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("\<^const>Semantics.action.Tau")
###           ("\<^const>Frame.frameResChain" ("_position" xvec)
###             ("\<^const>Agent.psi.Par" ("_position" P')
###               ("_position" Q'))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" K)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" C)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" \<Psi>\<^sub>Q)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("\<^const>Semantics.action.Tau")
###           ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###             ("\<^const>Agent.psi.Par" ("_position" P')
###               ("_position" Q'))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 6432 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P)
###               ("_idts" ("_position" K)
###                 ("_idts" ("_position" xvec)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" K)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" xvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" Q')))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" A\<^sub>Q)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###             ("_position" C)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" K)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" P')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>\<^sub>P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>Q)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("\<^const>Semantics.action.Tau")
###           ("\<^const>Agent.resChain" ("_position" xvec)
###             ("\<^const>Agent.psi.Par" ("_position" P')
###               ("_position" Q'))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P)
###               ("_idts" ("_position" K)
###                 ("_idts" ("_position" xvec)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" K)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" xvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" Q')))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" A\<^sub>Q)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###             ("_position" C)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" K)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" P')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>\<^sub>P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>Q)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("\<^const>Semantics.action.Tau")
###           ("\<^const>Frame.frameResChain" ("_position" xvec)
###             ("\<^const>Agent.psi.Par" ("_position" P')
###               ("_position" Q'))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P)
###               ("_idts" ("_position" K)
###                 ("_idts" ("_position" xvec)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" K)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" xvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" Q')))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" A\<^sub>Q)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###             ("_position" C)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" K)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" P')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>\<^sub>P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>Q)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("\<^const>Semantics.action.Tau")
###           ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###             ("\<^const>Agent.psi.Par" ("_position" P')
###               ("_position" Q'))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 6440 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" K)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" K)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" xvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" Q')))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" A\<^sub>Q)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###             ("_position" C)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" K)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" P')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>\<^sub>P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>Q)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("\<^const>Semantics.action.Tau")
###           ("\<^const>Agent.resChain" ("_position" xvec)
###             ("\<^const>Agent.psi.Par" ("_position" P')
###               ("_position" Q'))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" K)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" K)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" xvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" Q')))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" A\<^sub>Q)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###             ("_position" C)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" K)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" P')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>\<^sub>P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>Q)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("\<^const>Semantics.action.Tau")
###           ("\<^const>Frame.frameResChain" ("_position" xvec)
###             ("\<^const>Agent.psi.Par" ("_position" P')
###               ("_position" Q'))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" K)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                         ("_position" M)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" yvec)
###                           ("_position" K)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P)
###                                 ("_position" \<Psi>\<^sub>Q)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" N)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" P')))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" xvec)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" Q')))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###           ("_position" A\<^sub>Q)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###             ("_position" C)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" \<Psi>\<^sub>P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" K)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" N)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" P')))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" xvec)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>Q) ("_position" Q')))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>Q) ("_position" C)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" \<Psi>)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec)
###                                     ("_position" \<Psi>\<^sub>P)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" P)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" M)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" K)))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###         ("_position" \<Psi>\<^sub>Q)))
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" C))))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("\<^const>Semantics.action.Tau")
###           ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###             ("\<^const>Agent.psi.Par" ("_position" P')
###               ("_position" Q'))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 6543 of "$AFP/Psi_Calculi/Semantics.thy") produces 4 parse trees:
### ("\<^const>Pure.all_binder" ("_idts" ("_position" K) ("_position" Tvec))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.subset_eq"
###             ("_applC" ("_position" set) ("_position" xvec))
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>HOL.eq"
###               ("_applC" ("_position" length) ("_position" xvec))
###               ("_applC" ("_position" length) ("_position" Tvec))))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" distinct) ("_position" xvec)))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs"
###           ("\<^const>Semantics.action.In" ("_position" K)
###             ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###               ("_position" Tvec)))
###           ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###             ("_position" Tvec)))))))
### ("\<^const>Pure.all_binder" ("_idts" ("_position" K) ("_position" Tvec))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.subset_eq"
###             ("_applC" ("_position" set) ("_position" xvec))
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>HOL.eq"
###               ("_applC" ("_position" length) ("_position" xvec))
###               ("_applC" ("_position" length) ("_position" Tvec))))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" distinct) ("_position" xvec)))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs"
###           ("\<^const>Semantics.action.In" ("_position" K)
###             ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###               ("_position" Tvec)))
###           ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###             ("_position" Tvec)))))))
### ("\<^const>Pure.all_binder" ("_idts" ("_position" K) ("_position" Tvec))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.subset_eq"
###             ("_applC" ("_position" set) ("_position" xvec))
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>HOL.eq"
###               ("_applC" ("_position" length) ("_position" xvec))
###               ("_applC" ("_position" length) ("_position" Tvec))))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" distinct) ("_position" xvec)))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs"
###           ("\<^const>Semantics.action.In" ("_position" K)
###             ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###               ("_position" Tvec)))
###           ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###             ("_position" Tvec)))))))
### ("\<^const>Pure.all_binder" ("_idts" ("_position" K) ("_position" Tvec))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^fixed>SImp'" ("_position" \<Psi>)
###           ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Set.subset_eq"
###             ("_applC" ("_position" set) ("_position" xvec))
###             ("_applC" ("_position" supp) ("_position" N))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>HOL.eq"
###               ("_applC" ("_position" length) ("_position" xvec))
###               ("_applC" ("_position" length) ("_position" Tvec))))
###           ("_asm"
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" distinct) ("_position" xvec)))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs"
###           ("\<^const>Semantics.action.In" ("_position" K)
###             ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###               ("_position" Tvec)))
###           ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###             ("_position" Tvec)))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 6637 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("_position" P'))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 6649 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder" ("_position" P')
###   ("_bigimpl"
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P')))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" \<alpha>)
###           ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P')))))))
### ("\<^const>Pure.all_binder" ("_position" P')
###   ("_bigimpl"
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P')))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" \<alpha>)
###           ("\<^const>Frame.frame.FRes" ("_position" x)
###             ("_position" P')))))))
### ("\<^const>Pure.all_binder" ("_position" P')
###   ("_bigimpl"
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P')))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" \<alpha>)
###           ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###             ("_position" P')))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 6681 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###       ("_position" P'))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 6693 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder" ("_position" P')
###   ("_bigimpl"
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P')))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" \<alpha>)
###           ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P')))))))
### ("\<^const>Pure.all_binder" ("_position" P')
###   ("_bigimpl"
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P')))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" \<alpha>)
###           ("\<^const>Frame.frame.FRes" ("_position" x)
###             ("_position" P')))))))
### ("\<^const>Pure.all_binder" ("_position" P')
###   ("_bigimpl"
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual" ("_position" \<alpha>)
###             ("_position" P')))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" \<alpha>)
###           ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###             ("_position" P')))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Proofs for inductive predicate(s) "bangPred"
  Proving monotonicity ...
### Ambiguous input (line 8372 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" N)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" K)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Out" ("_position" K)
###                 ("_position" xvec) ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                       ("\<^const>Semantics.create_residual"
###                         ("\<^const>Semantics.action.Out" ("_position" K)
###                           ("_position" xvec) ("_position" N))
###                         ("_position" P''))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" P'')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" N)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" K)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Out" ("_position" K)
###                 ("_position" xvec) ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                       ("\<^const>Semantics.create_residual"
###                         ("\<^const>Semantics.action.Out" ("_position" K)
###                           ("_position" xvec) ("_position" N))
###                         ("_position" P''))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" P'')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" N)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" K)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Out" ("_position" K)
###                 ("_position" xvec) ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                       ("\<^const>Semantics.create_residual"
###                         ("\<^const>Semantics.action.Out" ("_position" K)
###                           ("_position" xvec) ("_position" N))
###                         ("_position" P''))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" P'')))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 8374 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" xvec)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" K)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.In" ("_position" K)
###                 ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                       ("\<^const>Semantics.create_residual"
###                         ("\<^const>Semantics.action.In" ("_position" K)
###                           ("_position" N))
###                         ("_position" P''))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" P'')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" xvec)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" K)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.In" ("_position" K)
###                 ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                       ("\<^const>Semantics.create_residual"
###                         ("\<^const>Semantics.action.In" ("_position" K)
###                           ("_position" N))
###                         ("_position" P''))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" P'')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" xvec)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" K)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.In" ("_position" K)
###                 ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                       ("\<^const>Semantics.create_residual"
###                         ("\<^const>Semantics.action.In" ("_position" K)
###                           ("_position" N))
###                         ("_position" P''))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("\<^const>Semantics.create_residual"
###                 ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" P'')))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 8541 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" N) ("_idts" ("_position" P') ("_position" C))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" C)))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct)
###                     ("_position" xvec)))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("\<^const>Agent.psi.Bang" ("_position" P)))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" N) ("_idts" ("_position" P') ("_position" C))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" C)))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct)
###                     ("_position" xvec)))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("\<^const>Agent.psi.Bang" ("_position" P)))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" N) ("_idts" ("_position" P') ("_position" C))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" M)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" C)))
###               ("_asm"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct)
###                     ("_position" xvec)))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P')
###                       ("\<^const>Agent.psi.Bang" ("_position" P)))))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 8542 of "$AFP/Psi_Calculi/Semantics.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" N) ("_idts" ("_position" P') ("_position" C))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>)
###           ("\<^const>Agent.psi.Bang" ("_position" P))
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Semantics.BOresChainJudge"
###                         ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" C)))
###                 ("_asm"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" xvec))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" N) ("_idts" ("_position" P') ("_position" C))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>)
###           ("\<^const>Agent.psi.Bang" ("_position" P))
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Frame.frameResChain" ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" C)))
###                 ("_asm"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" xvec))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" N) ("_idts" ("_position" P') ("_position" C))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>)
###           ("\<^const>Agent.psi.Bang" ("_position" P))
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Agent.resChain" ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" C)))
###                 ("_asm"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" xvec))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" N) ("_idts" ("_position" P') ("_position" C))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>)
###           ("\<^const>Agent.psi.Bang" ("_position" P))
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Semantics.BOresChainJudge"
###                         ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" C)))
###                 ("_asm"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" xvec))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" N) ("_idts" ("_position" P') ("_position" C))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>)
###           ("\<^const>Agent.psi.Bang" ("_position" P))
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Frame.frameResChain" ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" C)))
###                 ("_asm"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" xvec))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" N) ("_idts" ("_position" P') ("_position" C))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>)
###           ("\<^const>Agent.psi.Bang" ("_position" P))
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Agent.resChain" ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" C)))
###                 ("_asm"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" xvec))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" N) ("_idts" ("_position" P') ("_position" C))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>)
###           ("\<^const>Agent.psi.Bang" ("_position" P))
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Semantics.BOresChainJudge"
###                         ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" C)))
###                 ("_asm"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" xvec))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" N) ("_idts" ("_position" P') ("_position" C))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>)
###           ("\<^const>Agent.psi.Bang" ("_position" P))
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Frame.frameResChain" ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" C)))
###                 ("_asm"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" xvec))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" P'))))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" N) ("_idts" ("_position" P') ("_position" C))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>)
###           ("\<^const>Agent.psi.Bang" ("_position" P))
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>Pure.all_binder" ("_position" C)
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" Prop)
###               ("_cargs" ("_position" C)
###                 ("_cargs" ("_position" \<Psi>)
###                   ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                     ("_cargs" ("_position" M)
###                       ("\<^const>Agent.resChain" ("_position" xvec)
###                         ("\<^const>Semantics.boundOutput.BOut"
###                           ("_position" N) ("_position" P'))))))))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" xvec)
###               ("_position" \<Psi>)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" P)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" M)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" C)))
###                 ("_asm"
###                   ("\<^const>HOL.Trueprop"
###                     ("_applC" ("_position" distinct)
###                       ("_position" xvec))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("_position" M)
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                     ("\<^const>Agent.psi.Par" ("_position" P)
###                       ("_position" P'))))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 8546 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("_applC" ("_position" Prop)
###     ("_cargs" ("_position" C)
###       ("_cargs" ("_position" \<Psi>)
###         ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###           ("_cargs" ("_position" M)
###             ("\<^const>Agent.resChain" ("_position" xvec)
###               ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                 ("_position" P')))))))))
### ("\<^const>HOL.Trueprop"
###   ("_applC" ("_position" Prop)
###     ("_cargs" ("_position" C)
###       ("_cargs" ("_position" \<Psi>)
###         ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###           ("_cargs" ("_position" M)
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                 ("_position" P')))))))))
### ("\<^const>HOL.Trueprop"
###   ("_applC" ("_position" Prop)
###     ("_cargs" ("_position" C)
###       ("_cargs" ("_position" \<Psi>)
###         ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###           ("_cargs" ("_position" M)
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("\<^const>Semantics.boundOutput.BOut" ("_position" N)
###                 ("_position" P')))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 8562 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" N)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" K)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Out" ("_position" K)
###                 ("_position" xvec) ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>SImp'" ("_position" \<Psi>)
###               ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" P''))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" N)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" K)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Out" ("_position" K)
###                 ("_position" xvec) ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>SImp'" ("_position" \<Psi>)
###               ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" P''))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" N)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" K)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Out" ("_position" K)
###                 ("_position" xvec) ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>SImp'" ("_position" \<Psi>)
###               ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" P''))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 8564 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" N)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" K)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.In" ("_position" K)
###                 ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>SImp'" ("_position" \<Psi>)
###               ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" P''))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" N)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" K)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.In" ("_position" K)
###                 ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>SImp'" ("_position" \<Psi>)
###               ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" P''))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" N)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" K)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.In" ("_position" K)
###                 ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^fixed>SImp'" ("_position" \<Psi>)
###               ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                 ("_position" \<Psi>)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" P)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" M)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" K)))
###                   ("_asm"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" C)))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("\<^const>Agent.psi.Par" ("_position" P')
###                   ("_position" P''))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 8594 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" N)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" K)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Out" ("_position" K)
###                 ("_position" xvec) ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                       ("_cargs"
###                         ("\<^const>Semantics.action.Out" ("_position" K)
###                           ("_position" xvec) ("_position" N))
###                         ("_position" P''))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" P'')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" N)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" K)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Out" ("_position" K)
###                 ("_position" xvec) ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                       ("_cargs"
###                         ("\<^const>Semantics.action.Out" ("_position" K)
###                           ("_position" xvec) ("_position" N))
###                         ("_position" P''))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" P'')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" N)
###       ("_idts" ("_position" P')
###         ("_idts" ("_position" K)
###           ("_idts" ("_position" xvec)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.Out" ("_position" K)
###                 ("_position" xvec) ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                       ("_cargs"
###                         ("\<^const>Semantics.action.Out" ("_position" K)
###                           ("_position" xvec) ("_position" N))
###                         ("_position" P''))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" P'')))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 8596 of "$AFP/Psi_Calculi/Semantics.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" xvec)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" K)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.In" ("_position" K)
###                 ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                       ("_cargs"
###                         ("\<^const>Semantics.action.In" ("_position" K)
###                           ("_position" N))
###                         ("_position" P''))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" P'')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" xvec)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" K)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.In" ("_position" K)
###                 ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                       ("_cargs"
###                         ("\<^const>Semantics.action.In" ("_position" K)
###                           ("_position" N))
###                         ("_position" P''))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" P'')))))))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" M)
###     ("_idts" ("_position" xvec)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" K)
###             ("_idts" ("_position" P'') ("_position" C)))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>local.semantics" ("_position" \<Psi>)
###             ("\<^const>Agent.psi.Bang" ("_position" P))
###             ("\<^const>Semantics.create_residual"
###               ("\<^const>Semantics.action.In" ("_position" K)
###                 ("_position" N))
###               ("_position" P''))))
###         ("_asms"
###           ("\<^const>Pure.all_binder" ("_position" C)
###             ("\<^const>HOL.Trueprop"
###               ("_applC" ("_position" Prop)
###                 ("_cargs" ("_position" C)
###                   ("_cargs" ("_position" \<Psi>)
###                     ("_cargs" ("\<^const>Agent.psi.Bang" ("_position" P))
###                       ("_cargs"
###                         ("\<^const>Semantics.action.In" ("_position" K)
###                           ("_position" N))
###                         ("_position" P''))))))))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^fixed>SImp'" ("_position" \<Psi>)
###                 ("\<^fixed>SChanEq'" ("_position" M) ("_position" K))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                   ("_position" \<Psi>)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                     ("_position" P)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                       ("_position" M)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                         ("_position" K)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###                           ("_position" C)))
###                       ("_asm"
###                         ("\<^const>HOL.Trueprop"
###                           ("_applC" ("_position" distinct)
###                             ("_position" xvec)))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("_cargs" ("_position" C)
###           ("_cargs" ("_position" \<Psi>)
###             ("_cargs"
###               ("\<^const>Agent.psi.Par" ("_position" P)
###                 ("\<^const>Agent.psi.Bang" ("_position" P)))
###               ("_cargs" ("\<^const>Semantics.action.Tau")
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("\<^const>Agent.psi.Par" ("_position" P')
###                     ("_position" P'')))))))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### theory "Draft.Semantics"
### 6.441s elapsed time, 7.097s cpu time, 0.638s GC time
Loading theory "Draft.Simulation" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.Weak_Sim_Pres" via "Draft.Sim_Pres")
Loading theory "Draft.Tau_Chain" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.Weak_Sim_Pres" via "Draft.Weak_Simulation")
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
locale env
  fixes substTerm :: "'a => name list => 'a list => 'a"
    and substAssert :: "'b => name list => 'a list => 'b"
    and substCond :: "'c => name list => 'a list => 'c"
    and SCompose' :: "'b => 'b => 'b"
    and SImp' :: "'b => 'c => bool"
    and SBottom' :: "'b"
    and SChanEq' :: "'a => 'a => 'c"
  assumes
    "env substTerm substAssert substCond (\<otimes>) SImp' (\<one>)
      SChanEq'"
locale env
  fixes substTerm :: "'a => name list => 'a list => 'a"
    and substAssert :: "'b => name list => 'a list => 'b"
    and substCond :: "'c => name list => 'a list => 'c"
    and SCompose' :: "'b => 'b => 'b"
    and SImp' :: "'b => 'c => bool"
    and SBottom' :: "'b"
    and SChanEq' :: "'a => 'a => 'c"
  assumes
    "env substTerm substAssert substCond (\<otimes>) SImp' (\<one>)
      SChanEq'"
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> p_ \<bullet> P'_
### theory "Draft.Simulation"
### 0.281s elapsed time, 0.603s cpu time, 0.060s GC time
Loading theory "Draft.Sim_Pres" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.Weak_Sim_Pres")
### Ambiguous input (line 177 of "$AFP/Psi_Calculi/Tau_Chain.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P'))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 190 of "$AFP/Psi_Calculi/Tau_Chain.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P'))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 203 of "$AFP/Psi_Calculi/Tau_Chain.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P))
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P))
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P))
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P))
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P))
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P))
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P'))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 216 of "$AFP/Psi_Calculi/Tau_Chain.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P))
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P))
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P))
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P))
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P))
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauChain" ("_position" \<Psi>)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P))
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P'))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
locale env
  fixes substTerm :: "'a => name list => 'a list => 'a"
    and substAssert :: "'b => name list => 'a list => 'b"
    and substCond :: "'c => name list => 'a list => 'c"
    and SCompose' :: "'b => 'b => 'b"
    and SImp' :: "'b => 'c => bool"
    and SBottom' :: "'b"
    and SChanEq' :: "'a => 'a => 'c"
  assumes
    "env substTerm substAssert substCond (\<otimes>) SImp' (\<one>)
      SChanEq'"
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ : Q_ \<rhd> P_ \<Longrightarrow>\<alpha>_ \<prec> P'_ =
p_ \<bullet>
\<Psi>_ : p_ \<bullet>
          Q_ \<rhd> p_ \<bullet>
                    P_ \<Longrightarrow>p_ \<bullet>
  \<alpha>_ \<prec> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ : Q_ \<rhd> P_ \<Longrightarrow>\<alpha>_ \<prec> P'_ =
p_ \<bullet>
\<Psi>_ : p_ \<bullet>
          Q_ \<rhd> p_ \<bullet>
                    P_ \<Longrightarrow>p_ \<bullet>
  \<alpha>_ \<prec> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ : Q_ \<rhd> P_ \<Longrightarrow>\<alpha>_ \<prec> P'_ =
p_ \<bullet>
\<Psi>_ : p_ \<bullet>
          Q_ \<rhd> p_ \<bullet>
                    P_ \<Longrightarrow>p_ \<bullet>
  \<alpha>_ \<prec> p_ \<bullet> P'_
### Ambiguous input (line 20 of "$AFP/Psi_Calculi/Sim_Pres.thy") produces 4 parse trees:
### ("\<^const>Pure.all_binder" ("_position" Tvec)
###   ("\<^const>Pure.imp"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>HOL.eq" ("_applC" ("_position" length) ("_position" xvec))
###         ("_applC" ("_position" length) ("_position" Tvec))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>)
###           ("_tuple_args"
###             ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###               ("_position" Tvec))
###             ("_tuple_arg"
###               ("\<^const>local.subs" ("_position" Q) ("_position" xvec)
###                 ("_position" Tvec)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder" ("_position" Tvec)
###   ("\<^const>Pure.imp"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>HOL.eq" ("_applC" ("_position" length) ("_position" xvec))
###         ("_applC" ("_position" length) ("_position" Tvec))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>)
###           ("_tuple_args"
###             ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###               ("_position" Tvec))
###             ("_tuple_arg"
###               ("\<^const>local.subs" ("_position" Q) ("_position" xvec)
###                 ("_position" Tvec)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder" ("_position" Tvec)
###   ("\<^const>Pure.imp"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>HOL.eq" ("_applC" ("_position" length) ("_position" xvec))
###         ("_applC" ("_position" length) ("_position" Tvec))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>)
###           ("_tuple_args"
###             ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###               ("_position" Tvec))
###             ("_tuple_arg"
###               ("\<^fixed>substTerm" ("_position" Q) ("_position" xvec)
###                 ("_position" Tvec)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder" ("_position" Tvec)
###   ("\<^const>Pure.imp"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>HOL.eq" ("_applC" ("_position" length) ("_position" xvec))
###         ("_applC" ("_position" length) ("_position" Tvec))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>)
###           ("_tuple_args"
###             ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###               ("_position" Tvec))
###             ("_tuple_arg"
###               ("\<^fixed>substTerm" ("_position" Q) ("_position" xvec)
###                 ("_position" Tvec)))))
###         ("_position" Rel)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 22 of "$AFP/Psi_Calculi/Sim_Pres.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###       ("_position" N) ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###       ("_position" N) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Agent.inputChainJudge"
###     ("\<^const>local.simulation" ("_position" \<Psi>)
###       ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###         ("_position" N) ("_position" P))
###       ("_position" Rel) ("_position" M))
###     ("_position" xvec) ("_position" N) ("_position" Q)))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 93 of "$AFP/Psi_Calculi/Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.psi.Res" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Res" ("_position" y) ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Res" ("_position" y) ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Res" ("_position" y) ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.psi.Res" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Frame.frame.FRes" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Frame.frame.FRes" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Frame.frame.FRes" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.psi.Res" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel')))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 95 of "$AFP/Psi_Calculi/Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" Q))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 151 of "$AFP/Psi_Calculi/Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.psi.Res" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Res" ("_position" y) ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Res" ("_position" y) ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Res" ("_position" y) ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.psi.Res" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Frame.frame.FRes" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Frame.frame.FRes" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Frame.frame.FRes" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.psi.Res" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 153 of "$AFP/Psi_Calculi/Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.simulation" ("_position" \<Psi>)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" Q))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 679 of "$AFP/Psi_Calculi/Tau_Chain.thy") produces 4 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>) ("_position" Q)
###     ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###       ("_position" N) ("_position" P))
###     ("\<^const>Semantics.action.In" ("_position" K)
###       ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###         ("_position" Tvec)))
###     ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###       ("_position" Tvec))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>) ("_position" Q)
###     ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###       ("_position" N) ("_position" P))
###     ("\<^const>Semantics.action.In" ("_position" K)
###       ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###         ("_position" Tvec)))
###     ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###       ("_position" Tvec))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>) ("_position" Q)
###     ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###       ("_position" N) ("_position" P))
###     ("\<^const>Semantics.action.In" ("_position" K)
###       ("\<^fixed>substTerm" ("_position" N) ("_position" xvec)
###         ("_position" Tvec)))
###     ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###       ("_position" Tvec))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>) ("_position" Q)
###     ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###       ("_position" N) ("_position" P))
###     ("\<^const>Semantics.action.In" ("_position" K)
###       ("\<^const>local.subs" ("_position" N) ("_position" xvec)
###         ("_position" Tvec)))
###     ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###       ("_position" Tvec))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 187 of "$AFP/Psi_Calculi/Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 790 of "$AFP/Psi_Calculi/Tau_Chain.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" Q))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.action.Out" ("_position" M)
###       ("\<^const>List.append" ("_position" xvec)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###       ("_position" N))
###     ("_position" P')))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" Q))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.action.Out" ("_position" M)
###       ("\<^const>List.append" ("_position" xvec)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###       ("_position" N))
###     ("_position" P')))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" Q))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.action.Out" ("_position" M)
###       ("\<^const>List.append" ("_position" xvec)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###       ("_position" N))
###     ("_position" P')))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" Q))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.action.Out" ("_position" M)
###       ("\<^const>List.append" ("_position" xvec)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###       ("_position" N))
###     ("_position" P')))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" Q))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.action.Out" ("_position" M)
###       ("\<^const>List.append" ("_position" xvec)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###       ("_position" N))
###     ("_position" P')))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" Q))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.action.Out" ("_position" M)
###       ("\<^const>List.append" ("_position" xvec)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###       ("_position" N))
###     ("_position" P')))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" Q))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.action.Out" ("_position" M)
###       ("\<^const>List.append" ("_position" xvec)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###       ("_position" N))
###     ("_position" P')))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" Q))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.action.Out" ("_position" M)
###       ("\<^const>List.append" ("_position" xvec)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###       ("_position" N))
###     ("_position" P')))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" Q))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.action.Out" ("_position" M)
###       ("\<^const>List.append" ("_position" xvec)
###         ("\<^const>List.list.Cons" ("_position" x) ("_position" yvec)))
###       ("_position" N))
###     ("_position" P')))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 814 of "$AFP/Psi_Calculi/Tau_Chain.thy") produces 27 parse trees (10 displayed):
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" Q))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("_position" \<alpha>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" Q))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("_position" \<alpha>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" Q))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("_position" \<alpha>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" Q))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("_position" \<alpha>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" Q))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("_position" \<alpha>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" Q))
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("_position" \<alpha>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" Q))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("_position" \<alpha>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" Q))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("_position" \<alpha>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" Q))
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("_position" \<alpha>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakTransition" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" Q))
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("_position" \<alpha>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P'))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 972 of "$AFP/Psi_Calculi/Tau_Chain.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 1048 of "$AFP/Psi_Calculi/Tau_Chain.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###     ("\<^const>Agent.resChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###     ("\<^const>Frame.frameResChain" ("_position" xvec)
###       ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.tauStepChain" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Par" ("_position" P) ("_position" Q))
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 484 of "$AFP/Psi_Calculi/Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 485 of "$AFP/Psi_Calculi/Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" S) ("_position" T))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" S) ("_position" T))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" S) ("_position" T))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" S) ("_position" T))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" S) ("_position" T))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" S) ("_position" T))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" S) ("_position" T))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" S) ("_position" T))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" S) ("_position" T))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
Proofs for coinductive predicate(s) "quiet"
  Proving monotonicity ...
### theory "Draft.Tau_Chain"
### 0.761s elapsed time, 1.579s cpu time, 0.120s GC time
Loading theory "Draft.Weak_Simulation" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.Weak_Sim_Pres")
Loading theory "Draft.Weak_Stat_Imp" (required by "Draft.Weak_Sim_PresMoreTemplates" via "Draft.Weak_Sim_Pres")
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
### theory "Draft.Sim_Pres"
### 0.573s elapsed time, 1.271s cpu time, 0.116s GC time
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ : Q_ \<rhd> P_ \<Longrightarrow>\<alpha>_ \<prec> P'_ =
p_ \<bullet>
\<Psi>_ : p_ \<bullet>
          Q_ \<rhd> p_ \<bullet>
                    P_ \<Longrightarrow>p_ \<bullet>
  \<alpha>_ \<prec> p_ \<bullet> P'_
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ : Q_ \<rhd> P_ \<Longrightarrow>\<alpha>_ \<prec> P'_ =
p_ \<bullet>
\<Psi>_ : p_ \<bullet>
          Q_ \<rhd> p_ \<bullet>
                    P_ \<Longrightarrow>p_ \<bullet>
  \<alpha>_ \<prec> p_ \<bullet> P'_
locale env
  fixes substTerm :: "'a => name list => 'a list => 'a"
    and substAssert :: "'b => name list => 'a list => 'b"
    and substCond :: "'c => name list => 'a list => 'c"
    and SCompose' :: "'b => 'b => 'b"
    and SImp' :: "'b => 'c => bool"
    and SBottom' :: "'b"
    and SChanEq' :: "'a => 'a => 'c"
  assumes
    "env substTerm substAssert substCond (\<otimes>) SImp' (\<one>)
      SChanEq'"
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ : Q_ \<rhd> P_ \<Longrightarrow>\<alpha>_ \<prec> P'_ =
p_ \<bullet>
\<Psi>_ : p_ \<bullet>
          Q_ \<rhd> p_ \<bullet>
                    P_ \<Longrightarrow>p_ \<bullet>
  \<alpha>_ \<prec> p_ \<bullet> P'_
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ : Q_ \<rhd> P_ \<Longrightarrow>\<alpha>_ \<prec> P'_ =
p_ \<bullet>
\<Psi>_ : p_ \<bullet>
          Q_ \<rhd> p_ \<bullet>
                    P_ \<Longrightarrow>p_ \<bullet>
  \<alpha>_ \<prec> p_ \<bullet> P'_
locale env
  fixes substTerm :: "'a => name list => 'a list => 'a"
    and substAssert :: "'b => name list => 'a list => 'b"
    and substCond :: "'c => name list => 'a list => 'c"
    and SCompose' :: "'b => 'b => 'b"
    and SImp' :: "'b => 'c => bool"
    and SBottom' :: "'b"
    and SChanEq' :: "'a => 'a => 'c"
  assumes
    "env substTerm substAssert substCond (\<otimes>) SImp' (\<one>)
      SChanEq'"
### theory "Draft.Weak_Stat_Imp"
### 0.262s elapsed time, 0.619s cpu time, 0.057s GC time
### theory "Draft.Weak_Simulation"
### 0.493s elapsed time, 0.888s cpu time, 0.117s GC time
Loading theory "Draft.Weak_Sim_Pres" (required by "Draft.Weak_Sim_PresMoreTemplates")
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ : Q_ \<rhd> P_ \<Longrightarrow>\<alpha>_ \<prec> P'_ =
p_ \<bullet>
\<Psi>_ : p_ \<bullet>
          Q_ \<rhd> p_ \<bullet>
                    P_ \<Longrightarrow>p_ \<bullet>
  \<alpha>_ \<prec> p_ \<bullet> P'_
### equivariance lemma of the relational form
pi_ \<bullet> (x1_ \<rhd> x2_ \<longmapsto> x3_) =
(pi_ \<bullet> x1_ \<rhd> pi_ \<bullet> x2_ \<longmapsto> pi_ \<bullet> x3_)
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ \<rhd> P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> P'_ =
p_ \<bullet>
\<Psi>_ \<rhd> p_ \<bullet>
               P_ \<Longrightarrow>\<^sup>^\<^sub>\<tau> p_ \<bullet> P'_
### equivariance lemma of the relational form
p_ \<bullet> \<Psi>_ : Q_ \<rhd> P_ \<Longrightarrow>\<alpha>_ \<prec> P'_ =
p_ \<bullet>
\<Psi>_ : p_ \<bullet>
          Q_ \<rhd> p_ \<bullet>
                    P_ \<Longrightarrow>p_ \<bullet>
  \<alpha>_ \<prec> p_ \<bullet> P'_
locale env
  fixes substTerm :: "'a => name list => 'a list => 'a"
    and substAssert :: "'b => name list => 'a list => 'b"
    and substCond :: "'c => name list => 'a list => 'c"
    and SCompose' :: "'b => 'b => 'b"
    and SImp' :: "'b => 'c => bool"
    and SBottom' :: "'b"
    and SChanEq' :: "'a => 'a => 'c"
  assumes
    "env substTerm substAssert substCond (\<otimes>) SImp' (\<one>)
      SChanEq'"
### Ambiguous input (line 20 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 4 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" Tvec) ("_position" \<Psi>'))
###   ("\<^const>Pure.imp"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>HOL.eq" ("_applC" ("_position" length) ("_position" xvec))
###         ("_applC" ("_position" length) ("_position" Tvec))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>) ("_position" \<Psi>'))
###           ("_tuple_args"
###             ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###               ("_position" Tvec))
###             ("_tuple_arg"
###               ("\<^const>local.subs" ("_position" Q) ("_position" xvec)
###                 ("_position" Tvec)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" Tvec) ("_position" \<Psi>'))
###   ("\<^const>Pure.imp"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>HOL.eq" ("_applC" ("_position" length) ("_position" xvec))
###         ("_applC" ("_position" length) ("_position" Tvec))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>) ("_position" \<Psi>'))
###           ("_tuple_args"
###             ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###               ("_position" Tvec))
###             ("_tuple_arg"
###               ("\<^const>local.subs" ("_position" Q) ("_position" xvec)
###                 ("_position" Tvec)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" Tvec) ("_position" \<Psi>'))
###   ("\<^const>Pure.imp"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>HOL.eq" ("_applC" ("_position" length) ("_position" xvec))
###         ("_applC" ("_position" length) ("_position" Tvec))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>) ("_position" \<Psi>'))
###           ("_tuple_args"
###             ("\<^const>local.subs" ("_position" P) ("_position" xvec)
###               ("_position" Tvec))
###             ("_tuple_arg"
###               ("\<^fixed>substTerm" ("_position" Q) ("_position" xvec)
###                 ("_position" Tvec)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" Tvec) ("_position" \<Psi>'))
###   ("\<^const>Pure.imp"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>HOL.eq" ("_applC" ("_position" length) ("_position" xvec))
###         ("_applC" ("_position" length) ("_position" Tvec))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>) ("_position" \<Psi>'))
###           ("_tuple_args"
###             ("\<^fixed>substTerm" ("_position" P) ("_position" xvec)
###               ("_position" Tvec))
###             ("_tuple_arg"
###               ("\<^fixed>substTerm" ("_position" Q) ("_position" xvec)
###                 ("_position" Tvec)))))
###         ("_position" Rel)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 22 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 2 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###       ("_position" N) ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###       ("_position" N) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Agent.inputChainJudge"
###     ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###       ("\<^const>Agent.inputChainJudge" ("_position" M) ("_position" xvec)
###         ("_position" N) ("_position" P))
###       ("_position" Rel) ("_position" M))
###     ("_position" xvec) ("_position" N) ("_position" Q)))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 77 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 3 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("\<^const>Semantics.action.Tau")
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("\<^const>Semantics.action.Tau")
###       ("_position" P'))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.semantics" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("\<^const>Semantics.create_residual" ("\<^const>Semantics.action.Tau")
###       ("_position" P'))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 80 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder" ("_position" P')
###   ("_bigimpl"
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P')))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P'))))))
### ("\<^const>Pure.all_binder" ("_position" P')
###   ("_bigimpl"
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P')))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P'))))))
### ("\<^const>Pure.all_binder" ("_position" P')
###   ("_bigimpl"
###     ("_asm"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics" ("_position" \<Psi>) ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Tau") ("_position" P')))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###           ("_position" P'))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 104 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.psi.Res" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Res" ("_position" y) ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Res" ("_position" y) ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Res" ("_position" y) ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.psi.Res" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Frame.frame.FRes" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Frame.frame.FRes" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Frame.frame.FRes" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.psi.Res" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frame.FRes" ("_position" y) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" y))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh" ("_position" y)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Semantics.boundOutput.BStep" ("_position" y)
###                 ("_position" S)))))
###         ("_position" Rel')))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 106 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x)
###       ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Semantics.boundOutput.BStep" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Frame.frame.FRes" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" P))
###     ("_position" Rel')
###     ("\<^const>Agent.psi.Res" ("_position" x) ("_position" Q))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 180 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" yvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" yvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" yvec) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" yvec)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" yvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" yvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" yvec)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" yvec)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" yvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" yvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" yvec)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" yvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" yvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" yvec) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" yvec)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" yvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" yvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" yvec)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" yvec)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" yvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" yvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" yvec)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" yvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" yvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" yvec) ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" yvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" yvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" yvec)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" R) ("_idts" ("_position" S) ("_position" yvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" R) ("_tuple_arg" ("_position" S))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" yvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###               ("_position" R))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" yvec)
###                 ("_position" S)))))
###         ("_position" Rel)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 182 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###       ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Frame.frameResChain" ("_position" xvec) ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" Q))))
### ("\<^const>HOL.Trueprop"
###   ("\<^const>local.weakSimulation" ("_position" \<Psi>)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" P))
###     ("_position" Rel)
###     ("\<^const>Agent.resChain" ("_position" xvec) ("_position" Q))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 215 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P)
###               ("_idts" ("_position" K)
###                 ("_idts" ("_position" xvec)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" C)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" \<Psi>\<^sub>Q)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("\<^const>Agent.resChain" ("_position" xvec)
###           ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P)
###               ("_idts" ("_position" K)
###                 ("_idts" ("_position" xvec)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" C)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" \<Psi>\<^sub>Q)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("\<^const>Frame.frameResChain" ("_position" xvec)
###           ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" N)
###         ("_idts" ("_position" P')
###           ("_idts" ("_position" A\<^sub>P)
###             ("_idts" ("_position" \<Psi>\<^sub>P)
###               ("_idts" ("_position" K)
###                 ("_idts" ("_position" xvec)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.In" ("_position" M) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.Out" ("_position" K)
###                     ("_position" xvec) ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" C)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" \<Psi>\<^sub>Q)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###           ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 223 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 3 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" K)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" C)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" \<Psi>\<^sub>Q)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("\<^const>Agent.resChain" ("_position" xvec)
###           ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" K)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" C)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" \<Psi>\<^sub>Q)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("\<^const>Frame.frameResChain" ("_position" xvec)
###           ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>\<^sub>Q)
###     ("_idts" ("_position" M)
###       ("_idts" ("_position" xvec)
###         ("_idts" ("_position" N)
###           ("_idts" ("_position" P')
###             ("_idts" ("_position" A\<^sub>P)
###               ("_idts" ("_position" \<Psi>\<^sub>P)
###                 ("_idts" ("_position" K)
###                   ("_idts" ("_position" Q') ("_position" A\<^sub>Q))))))))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>local.semantics"
###           ("\<^fixed>SCompose'" ("_position" \<Psi>)
###             ("_position" \<Psi>\<^sub>Q))
###           ("_position" P)
###           ("\<^const>Semantics.create_residual"
###             ("\<^const>Semantics.action.Out" ("_position" M)
###               ("_position" xvec) ("_position" N))
###             ("_position" P'))))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>HOL.eq"
###             ("_applC" ("_position" extractFrame) ("_position" P))
###             ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>P)
###               ("_position" \<Psi>\<^sub>P))))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("_applC" ("_position" distinct) ("_position" A\<^sub>P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>local.semantics"
###                 ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                   ("_position" \<Psi>\<^sub>P))
###                 ("_position" Q)
###                 ("\<^const>Semantics.create_residual"
###                   ("\<^const>Semantics.action.In" ("_position" K)
###                     ("_position" N))
###                   ("_position" Q'))))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>HOL.eq"
###                   ("_applC" ("_position" extractFrame) ("_position" Q))
###                   ("\<^const>Frame.FAssertJudge" ("_position" A\<^sub>Q)
###                     ("_position" \<Psi>\<^sub>Q))))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("_applC" ("_position" distinct) ("_position" A\<^sub>Q)))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^fixed>SImp'"
###                       ("\<^fixed>SCompose'" ("_position" \<Psi>)
###                         ("\<^fixed>SCompose'" ("_position" \<Psi>\<^sub>P)
###                           ("_position" \<Psi>\<^sub>Q)))
###                       ("\<^fixed>SChanEq'" ("_position" M)
###                         ("_position" K))))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("_applC" ("_position" distinct) ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>P) ("_position" \<Psi>)))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>P)
###                             ("_position" \<Psi>\<^sub>Q)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" A\<^sub>P) ("_position" P)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" A\<^sub>P) ("_position" M)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" A\<^sub>P) ("_position" N)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" A\<^sub>P)
###                                     ("_position" P')))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" A\<^sub>P) ("_position" Q)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" xvec)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P) ("_position" Q')))
### ("_asms"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###       ("_position" A\<^sub>Q)))
###   ("_asms"
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>P)
###         ("_position" C)))
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###           ("_position" \<Psi>)))
###       ("_asms"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###             ("_position" \<Psi>\<^sub>P)))
###         ("_asms"
###           ("\<^const>HOL.Trueprop"
###             ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###               ("_position" P)))
###           ("_asms"
###             ("\<^const>HOL.Trueprop"
###               ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                 ("_position" K)))
###             ("_asms"
###               ("\<^const>HOL.Trueprop"
###                 ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                   ("_position" N)))
###               ("_asms"
###                 ("\<^const>HOL.Trueprop"
###                   ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                     ("_position" P')))
###                 ("_asms"
###                   ("\<^const>HOL.Trueprop"
###                     ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                       ("_position" Q)))
###                   ("_asms"
###                     ("\<^const>HOL.Trueprop"
###                       ("\<^const>Nominal.fresh_star" ("_position" A\<^sub>Q)
###                         ("_position" xvec)))
###                     ("_asms"
###                       ("\<^const>HOL.Trueprop"
###                         ("\<^const>Nominal.fresh_star"
###                           ("_position" A\<^sub>Q) ("_position" Q')))
###                       ("_asms"
###                         ("\<^const>HOL.Trueprop"
###                           ("\<^const>Nominal.fresh_star"
###                             ("_position" A\<^sub>Q) ("_position" C)))
###                         ("_asms"
###                           ("\<^const>HOL.Trueprop"
###                             ("\<^const>Nominal.fresh_star"
###                               ("_position" xvec) ("_position" \<Psi>)))
###                           ("_asms"
###                             ("\<^const>HOL.Trueprop"
###                               ("\<^const>Nominal.fresh_star"
###                                 ("_position" xvec)
###                                 ("_position" \<Psi>\<^sub>P)))
###                             ("_asms"
###                               ("\<^const>HOL.Trueprop"
###                                 ("\<^const>Nominal.fresh_star"
###                                   ("_position" xvec) ("_position" P)))
###                               ("_asms"
###                                 ("\<^const>HOL.Trueprop"
###                                   ("\<^const>Nominal.fresh_star"
###                                     ("_position" xvec) ("_position" M)))
###                                 ("_asms"
###                                   ("\<^const>HOL.Trueprop"
###                                     ("\<^const>Nominal.fresh_star"
### ("_position" xvec) ("_position" K)))
###                                   ("_asms"
###                                     ("\<^const>HOL.Trueprop"
### ("\<^const>Nominal.fresh_star" ("_position" xvec) ("_position" Q)))
###                                     ("_asms"
### ("\<^const>HOL.Trueprop"
###   ("\<^const>Nominal.fresh_star" ("_position" xvec)
###     ("_position" \<Psi>\<^sub>Q)))
### ("_asm"
###   ("\<^const>HOL.Trueprop"
###     ("\<^const>Nominal.fresh_star" ("_position" xvec)
###       ("_position" C))))))))))))))))))))))))))))))))))))))))
###     ("\<^const>HOL.Trueprop"
###       ("_applC" ("_position" Prop)
###         ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###           ("\<^const>Agent.psi.Par" ("_position" P') ("_position" Q')))))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 256 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 692 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel)))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 693 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Agent.resChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Frame.frameResChain" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec) ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" \<Psi>')
###     ("_idts" ("_position" S) ("_idts" ("_position" T) ("_position" xvec))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Set.member"
###           ("_tuple" ("_position" \<Psi>')
###             ("_tuple_args" ("_position" S) ("_tuple_arg" ("_position" T))))
###           ("_position" Rel')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" \<Psi>')))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("_position" S))
###             ("_tuple_arg"
###               ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                 ("_position" T)))))
###         ("_position" Rel')))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 714 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel)))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### Ambiguous input (line 715 of "$AFP/Psi_Calculi/Weak_Sim_Pres.thy") produces 9 parse trees:
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Frame.frameResChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Agent.resChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Frame.frameResChain" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel')))))
### ("\<^const>Pure.all_binder"
###   ("_idts" ("_position" xvec)
###     ("_idts" ("_position" \<Psi>')
###       ("_idts" ("_position" T) ("_position" S))))
###   ("_bigimpl"
###     ("_asms"
###       ("\<^const>HOL.Trueprop"
###         ("\<^const>Nominal.fresh_star" ("_position" xvec)
###           ("_position" \<Psi>')))
###       ("_asm"
###         ("\<^const>HOL.Trueprop"
###           ("\<^const>Nominal.fresh_star" ("_position" xvec)
###             ("_position" T)))))
###     ("\<^const>HOL.Trueprop"
###       ("\<^const>Set.member"
###         ("_tuple" ("_position" \<Psi>')
###           ("_tuple_args"
###             ("\<^const>Semantics.BOresChainJudge" ("_position" xvec)
###               ("\<^const>Agent.psi.Par" ("_position" S) ("_position" T)))
###             ("_tuple_arg"
###               ("\<^const>Agent.psi.Par"
###                 ("\<^const>Agent.resChain" ("_position" xvec)
###                   ("_position" S))
###                 ("_position" T)))))
###         ("_position" Rel')))))
### Fortunately, only one parse tree is well-formed and type-correct,
### but you may still want to disambiguate your grammar or your input.
### theory "Draft.Weak_Sim_Pres"
### 1.661s elapsed time, 1.769s cpu time, 0.152s GC time
Loading theory "Draft.Weak_Sim_PresMoreTemplates"
val templateLemmas = []: (string * thm * template) list
### theory "Draft.Weak_Sim_PresMoreTemplates"
### 0.501s elapsed time, 0.638s cpu time, 0.000s GC time
val it = (): unit
