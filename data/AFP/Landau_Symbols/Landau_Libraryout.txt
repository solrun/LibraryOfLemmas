Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Landau_LibraryMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Landau_LibraryMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Landau_LibraryMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Tree" (required by "Draft.Landau_LibraryMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.127s elapsed time, 0.526s cpu time, 0.045s GC time
Loading theory "Draft.Landau_Library" (required by "Draft.Landau_LibraryMoreTemplates")
### theory "HOL-Library.Set_Algebras"
### 0.197s elapsed time, 0.806s cpu time, 0.045s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Landau_LibraryMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.Landau_Library"
### 0.101s elapsed time, 0.401s cpu time, 0.000s GC time
### theory "HOL-Library.Nat_Bijection"
### 0.329s elapsed time, 1.239s cpu time, 0.123s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Landau_LibraryMoreTemplates" via "Draft.ExtrEqs")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.BigO"
### 0.749s elapsed time, 2.310s cpu time, 0.270s GC time
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Stream"
### 0.779s elapsed time, 2.216s cpu time, 0.193s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.862s elapsed time, 4.567s cpu time, 0.812s GC time
Loading theory "Draft.Templates" (required by "Draft.Landau_LibraryMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.064s elapsed time, 0.112s cpu time, 0.041s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Landau_LibraryMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.443s elapsed time, 0.449s cpu time, 0.000s GC time
Loading theory "Draft.Landau_LibraryMoreTemplates"
val templateLemmas =
   [("Landau_Library.zero_powr", "0 powr ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Landau_Library.eventually_not_equal",
     "\<forall>\<^sub>F x in at_top. x ~= ?a",
     template_predicate
      (
         template_app
          (template_app (template_hole 3, t_empty), template_hole 0)
         )),
    ("Landau_Library.eventually_ln_not_equal",
     "\<forall>\<^sub>F x in at_top. ln x ~= ?a",
     template_predicate
      (
         template_app
          (template_app (template_hole 4, t_empty), template_hole 0)
         )),
    ("Landau_Library.eventually_ln_at_top",
     "(\<forall>\<^sub>F x in at_top. ?P (ln x)) = eventually ?P at_top",
     template_equation
      (template_app
        (template_app (template_hole 2, t_empty), template_hole 0),
       template_app
        (template_app (template_hole 2, template_var 0), template_hole 0))),
    ("Landau_Library.powr_negD", "?a powr ?b <= 0 ==> ?a = 0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 1), template_var 0),
          template_hole 1)],
       template_equation (template_var 1, template_hole 1))),
    ("Landau_Library.eventually_nat_real",
     "eventually ?P at_top ==>
      \<forall>\<^sub>F x in sequentially. ?P (real x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty), template_hole 0)
           ))),
    ("Landau_Library.powr_eventually_exp_ln",
     "\<forall>\<^sub>F x in at_top. x powr ?p = exp (?p * ln x)",
     template_predicate
      (
         template_app
          (template_app (template_hole 6, t_empty), template_hole 0)
         )),
    ("Landau_Library.powr_at_top",
     "0 < ?p ==> LIM x at_top. x powr ?p :> at_top",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_hole 0),
             template_hole 0)
           ))),
    ("Landau_Library.powr_at_bot",
     "1 < ?a ==> ((powr) ?a \<longlongrightarrow> 0) at_bot",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Landau_Library.inverse_powr",
     "0 <= ?x ==> inverse ?x powr ?y = inverse (?x powr ?y)",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Landau_Library.prod_list_pos",
     "(!!x. x : set ?xs ==> (0::?'a) < x) ==> (0::?'a) < prod_list ?xs",
     template_implication
      ([template_predicate (template_app (template_hole 6, t_empty))],
       template_inequation
        (less_than, template_hole 1,
         template_app (template_hole 0, template_var 0)))),
    ("Landau_Library.powr_at_bot_neg",
     "[| 0 < ?a; ?a < 1 |] ==> filterlim ((powr) ?a) at_top at_bot",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0),
        template_inequation (less_than, template_var 0, template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty), template_hole 1),
             template_hole 0)
           ))),
    ("Landau_Library.powr_eventually_exp_ln'",
     "0 < ?x ==>
      \<forall>\<^sub>F x in nhds ?x. x powr ?p = exp (?p * ln x)",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, t_empty),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Landau_Library.powr_at_top_neg",
     "[| 0 < ?a; ?a < 1 |] ==> ((powr) ?a \<longlongrightarrow> 0) at_top",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0),
        template_inequation (less_than, template_var 0, template_hole 4)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app (template_hole 1, template_hole 5)),
             template_hole 0)
           ))),
    ("Landau_Library.powr_realpow_eventually",
     "filterlim ?f at_top ?F ==>
      \<forall>\<^sub>F x in ?F. ?f x powr real ?n = ?f x ^ ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_hole 5),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty), template_var 1)
           ))),
    ("Landau_Library.DERIV_powr",
     "0 < ?x ==>
      ((%x. x powr ?p) has_real_derivative ?p * ?x powr (?p - 1)) (at ?x)",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app (template_hole 5, template_var 1),
                   template_app
                    (template_app (template_hole 3, template_var 0),
                     template_hole 2)))),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_hole 0))
           ))),
    ("Landau_Library.filterlim_cong'",
     "[| filterlim ?f ?F ?G; \<forall>\<^sub>F x in ?G. ?f x = ?g x |]
      ==> filterlim ?g ?F ?G",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, t_empty), template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Landau_Library.ln_mono_strict",
     "[| 0 < ?x; 0 < ?y; ?x < ?y |] ==> ln ?x < ln ?y",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Landau_Library.ln_mono",
     "[| 0 < ?x; 0 < ?y; ?x <= ?y |] ==> ln ?x <= ln ?y",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Landau_Library.eventually_at_top_compose",
     "[| !!c. \<forall>\<^sub>F x in ?F. c <= ?f x; eventually ?P at_top |]
      ==> \<forall>\<^sub>F x in ?F. ?P (?f x)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_hole 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty), template_var 1)
           ))),
    ("Landau_Library.powr_less_mono'",
     "[| 0 < ?x; ?x < 1; ?a < ?b |] ==> ?x powr ?b < ?x powr ?a",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 2),
        template_inequation (less_than, template_var 2, template_hole 1),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Landau_Library.powr_mono'",
     "[| 0 < ?x; ?x <= 1; ?a <= ?b |] ==> ?x powr ?b <= ?x powr ?a",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 2),
        template_inequation (less_equals, template_var 2, template_hole 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 1)))),
    ("Landau_Library.eventually_subst'",
     "\<forall>\<^sub>F x in ?F. ?f x = ?g x ==>
      (\<forall>\<^sub>F x in ?F. ?P x (?f x)) =
      (\<forall>\<^sub>F x in ?F. ?P x (?g x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty), template_var 1),
         template_app
          (template_app (template_hole 2, t_empty), template_var 1)))),
    ("Landau_Library.powr_upper_bound",
     "[| 0 < ?l; ?l <= ?x; ?x <= ?u |]
      ==> ?x powr ?z <= max (?l powr ?z) (?u powr ?z)",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 3),
        template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 2), template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Landau_Library.powr_lower_bound",
     "[| 0 < ?l; ?l <= ?x; ?x <= ?u |]
      ==> min (?l powr ?z) (?u powr ?z) <= ?x powr ?z",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 3),
        template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0))))]:
   (string * thm * template) list
### theory "Draft.Landau_LibraryMoreTemplates"
### 0.291s elapsed time, 0.410s cpu time, 0.060s GC time
val it = (): unit
