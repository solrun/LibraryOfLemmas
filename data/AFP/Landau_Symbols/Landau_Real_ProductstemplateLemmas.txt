   [("Landau_Real_Products.eventually_nonneg_primfun",
     "eventually_nonneg at_top (eval_primfun ?f)",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Landau_Real_Products.eval_primfun'_at_top",
     "filterlim (eval_primfun' ?f) at_top at_top",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0),
           template_hole 0)
         )),
    ("Landau_Real_Products.landau_product_preprocess", "?a ^ 0 = (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Landau_Real_Products.landau_product_preprocess",
     "(0::?'a) * ?a = (0::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Landau_Real_Products.landau_product_preprocess",
     "?a * (0::?'a) = (0::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_hole 0)),
    ("Landau_Real_Products.landau_product_preprocess", "?a - (0::?'a) = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Landau_Real_Products.landau_product_preprocess", "(0::?'a) + ?a = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Landau_Real_Products.landau_product_preprocess", "?a + (0::?'a) = ?a",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Landau_Real_Products.landau_product_preprocess", "num.One * ?n = ?n",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Landau_Real_Products.landau_product_preprocess", "?m * num.One = ?m",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Landau_Real_Products.landau_product_preprocess",
     "(0::?'a) - ?a = - ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Landau_Real_Products.landau_product_preprocess",
     "\<bar>numeral ?n\<bar> = numeral ?n",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Landau_Real_Products.BIGTHETA_FUN_tag",
     "\<Theta>(?f) = BIGTHETA_FUN ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Landau_Real_Products.eventually_nonzero_ident_at_within",
     "eventually_nonzero (at ?a within ?A) (%x. x)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           t_empty)
         )),
    ("Landau_Real_Products.fold_fun_chain", "?g ?x = (?g ^^ 1) ?x",
     template_equation
      (template_app (template_var 1, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0))),
    ("Landau_Real_Products.landau_product_preprocess",
     "neg_numeral_class.dbl (numeral ?k) = numeral (num.Bit0 ?k)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "neg_numeral_class.dbl_dec (numeral ?k) = numeral (Num.BitM ?k)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "neg_numeral_class.dbl_inc (numeral ?k) = numeral (num.Bit1 ?k)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "ln ?x = (ln ^^ 1) ?x",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_hole 0),
           template_hole 2),
         template_var 0))),
    ("Landau_Real_Products.landau_product_preprocess",
     "\<bar>- numeral ?n\<bar> = numeral ?n",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Landau_Real_Products.LANDAU_PROD'_fold",
     "eval_primfun ?f = eval_primfuns [?f]",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "Num.BitM (num.Bit0 ?n) = num.Bit1 (Num.BitM ?n)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "Num.BitM (num.Bit1 ?n) = num.Bit1 (num.Bit0 ?n)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "num.One + num.Bit0 ?n = num.Bit1 ?n",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Landau_Real_Products.landau_product_preprocess",
     "num.Bit0 ?m + num.One = num.Bit1 ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app (template_hole 0, template_var 0))),
    ("Landau_Real_Products.set_mult_is_times", "set_mult ?A ?B = ?A * ?B",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Landau_Real_Products.BIGTHETA_CONST'_tag",
     "\<Theta>(%x. ?c) = BIGTHETA_CONST' ?c",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), t_empty),
       template_app (template_hole 0, template_var 0))),
    ("Landau_Real_Products.nonneg_primfun_list_iff",
     "nonneg_primfun_list ?fs = nonneg_list (map snd ?fs)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Landau_Real_Products.pos_primfun_list_iff",
     "pos_primfun_list ?fs = pos_list (map snd ?fs)",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Landau_Real_Products.eventually_nonneg_powr",
     "eventually_nonneg ?F (%x. ?f x powr ?y)",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_var 2), t_empty)
         )),
    ("Landau_Real_Products.eval_primfun_pos",
     "\<forall>\<^sub>F x in at_top. 0 < eval_primfun ?f x",
     template_predicate
      (
         template_app
          (template_app (template_hole 4, t_empty), template_hole 0)
         )),
    ("Landau_Real_Products.eval_primfuns_pos",
     "\<forall>\<^sub>F x in at_top. 0 < eval_primfuns ?fs x",
     template_predicate
      (
         template_app
          (template_app (template_hole 4, t_empty), template_hole 0)
         )),
    ("Landau_Real_Products.landau_product_preprocess",
     "neg_numeral_class.sub (num.Bit0 ?k) num.One = numeral (Num.BitM ?k)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "neg_numeral_class.sub (num.Bit1 ?k) num.One = numeral (num.Bit0 ?k)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Landau_Real_Products.set_divide_inverse",
     "set_divide ?A ?B = set_mult ?A (set_inverse ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Landau_Real_Products.BIGTHETA_CONST_fold",
     "BIGTHETA_FUN ?f = BIGTHETA_CONST 1 \<Theta>(?f)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app (template_hole 3, template_hole 2),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Landau_Real_Products.powr_closureI",
     "(%x. ?f x powr ?p) : powr_closure ?f",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 1))
         )),
    ("Landau_Real_Products.const_smallo_ln_chain", "(%_. 1) : o(ln ^^ ?n)",
     template_predicate
      (
         template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))
         )),
    ("Landau_Real_Products.eval_primfun_nonzero",
     "\<forall>\<^sub>F x in at_top. eval_primfun ?f x ~= 0",
     template_predicate
      (
         template_app
          (template_app (template_hole 5, t_empty), template_hole 0)
         )),
    ("Landau_Real_Products.eval_primfuns_nonzero",
     "\<forall>\<^sub>F x in at_top. eval_primfuns ?fs x ~= 0",
     template_predicate
      (
         template_app
          (template_app (template_hole 5, t_empty), template_hole 0)
         )),
    ("Landau_Real_Products.landau_product_preprocess",
     "(1::?'a) + numeral ?n = numeral (num.One + ?n)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "numeral ?n + (1::?'a) = numeral (?n + num.One)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 0)),
         template_hole 2),
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "neg_numeral_class.dbl (- numeral ?k) =
      - neg_numeral_class.dbl (numeral ?k)",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_hole 2,
           template_app (template_hole 0, template_var 0))))),
    ("Landau_Real_Products.landau_product_preprocess",
     "neg_numeral_class.dbl_dec (- numeral ?k) =
      - neg_numeral_class.dbl_inc (numeral ?k)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))))),
    ("Landau_Real_Products.landau_product_preprocess",
     "neg_numeral_class.dbl_inc (- numeral ?k) =
      - neg_numeral_class.dbl_dec (numeral ?k)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))))),
    ("Landau_Real_Products.landau_product_preprocess",
     "neg_numeral_class.sub num.One (num.Bit0 ?l) =
      - numeral (Num.BitM ?l)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Landau_Real_Products.landau_product_preprocess",
     "neg_numeral_class.sub num.One (num.Bit1 ?l) =
      - numeral (num.Bit0 ?l)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Landau_Real_Products.landau_product_preprocess",
     "numeral ?m - numeral ?n = neg_numeral_class.sub ?m ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Landau_Real_Products.LANDAU_PROD'_fold",
     "LANDAU_PROD' ?c (%_. 1) = LANDAU_PROD' ?c (eval_primfuns [])",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 0), t_empty),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "num.One + num.Bit1 ?n = num.Bit0 (?n + num.One)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "num.Bit1 ?m + num.One = num.Bit0 (?m + num.One)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_hole 1),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 1)))),
    ("Landau_Real_Products.BIGTHETA_CONST_tag",
     "\<Theta>(?f) = BIGTHETA_CONST (1::?'b) \<Theta>(?f)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_hole 2), template_var 0),
       template_app
        (template_app (template_hole 1, template_hole 0),
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 0)))),
    ("Landau_Real_Products.BIGTHETA_CONST_fold",
     "BIGTHETA_CONST' ?c = BIGTHETA_CONST ?c \<Theta>(%_. 1)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1), t_empty)))),
    ("Landau_Real_Products.iszero_primfun_list_iff",
     "iszero_primfun_list ?fs = list_all ((=) (0::?'b)) (map snd ?fs)",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app (template_hole 3, template_hole 2)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Landau_Real_Products.eval_inverse_primfun",
     "eval_primfun (inverse_primfun ?f) ?x = inverse (eval_primfun ?f ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.eventually_nonneg_at_top",
     "filterlim ?f at_top ?F ==> eventually_nonneg ?F ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Landau_Real_Products.eventually_nonzero_at_top",
     "filterlim ?f at_top ?F ==> eventually_nonzero ?F ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Landau_Real_Products.landau_product_preprocess",
     "numeral ?m + numeral ?n = numeral (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "neg_numeral_class.sub (num.Bit0 ?k) (num.Bit0 ?l) =
      neg_numeral_class.dbl (neg_numeral_class.sub ?k ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "neg_numeral_class.sub (num.Bit0 ?k) (num.Bit1 ?l) =
      neg_numeral_class.dbl_dec (neg_numeral_class.sub ?k ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "neg_numeral_class.sub (num.Bit1 ?k) (num.Bit0 ?l) =
      neg_numeral_class.dbl_inc (neg_numeral_class.sub ?k ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "neg_numeral_class.sub (num.Bit1 ?k) (num.Bit1 ?l) =
      neg_numeral_class.dbl (neg_numeral_class.sub ?k ?l)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "numeral ?m + - numeral ?n = neg_numeral_class.sub ?m ?n",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Landau_Real_Products.landau_product_preprocess",
     "- numeral ?m + numeral ?n = neg_numeral_class.sub ?n ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Landau_Real_Products.landau_product_preprocess",
     "numeral ?m * numeral ?n = numeral (?m * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "num.Bit0 ?m + num.Bit0 ?n = num.Bit0 (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "num.Bit0 ?m + num.Bit1 ?n = num.Bit1 (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "num.Bit1 ?m + num.Bit0 ?n = num.Bit1 (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.eventually_nonzero_ident_nhds",
     "eventually_nonzero (nhds ?a) (%x. x) = (?a ~= (0::?'a))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 0)),
              t_empty)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("Landau_Real_Products.eventually_nonneg_inverse",
     "eventually_nonneg ?F (%x. inverse (?f x)) = eventually_nonneg ?F ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), t_empty),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Landau_Real_Products.eventually_nonzero_inverse",
     "eventually_nonzero ?F (%x. inverse (?f x)) =
      eventually_nonzero ?F ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), t_empty),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Landau_Real_Products.eventually_nonneg_ident_nhds",
     "(0::?'a) < ?a ==> eventually_nonneg (nhds ?a) (%x. x)",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             t_empty)
           ))),
    ("Landau_Real_Products.eventually_nonneg_at_top_ASSUMPTION",
     "ASSUMPTION (filterlim ?f at_top ?F) ==> eventually_nonneg ?F ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Landau_Real_Products.eventually_nonzero_at_top_ASSUMPTION",
     "ASSUMPTION (filterlim ?f at_top ?F) ==> eventually_nonzero ?F ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 1),
                  template_hole 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Landau_Real_Products.landau_product_preprocess",
     "numeral ?m - - numeral ?n = numeral (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "- numeral ?m - - numeral ?n = neg_numeral_class.sub ?n ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Landau_Real_Products.landau_product_preprocess",
     "num.Bit0 ?m * num.Bit0 ?n = num.Bit0 (num.Bit0 (?m * ?n))",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Landau_Real_Products.landau_product_preprocess",
     "num.Bit0 ?m * num.Bit1 ?n = num.Bit0 (?m * num.Bit1 ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Landau_Real_Products.landau_product_preprocess",
     "num.Bit1 ?m * num.Bit0 ?n = num.Bit0 (num.Bit1 ?m * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1)),
           template_var 0)))),
    ("Landau_Real_Products.bigtheta_inverse_eq_set_inverse",
     "\<Theta>[?F](%x. inverse (?f x)) = set_inverse \<Theta>[?F](?f)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), t_empty),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.BIGTHETA_CONST_fold",
     "BIGTHETA_CONST ?c (BIGTHETA_CONST ?d ?A) =
      BIGTHETA_CONST (?c * ?d) ?A",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Landau_Real_Products.eventually_nonzero_simps",
     "(\<forall>\<^sub>F x in ?F. (0::?'b) <= ?f x) =
      eventually_nonneg ?F ?f",
     template_equation
      (template_app
        (template_app (template_hole 3, t_empty), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Landau_Real_Products.eventually_nonzero_powr_at_top",
     "eventually_nonzero at_top (%x. ?f x powr ?p) =
      eventually_nonzero at_top ?f",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), t_empty),
       template_app
        (template_app (template_hole 2, template_hole 1), template_var 1))),
    ("Landau_Real_Products.landau_primfuns_iff",
     "((%_. 1) : O(eval_primfuns ?fs)) =
      nonneg_primfun_list (group_primfuns ?fs)",
     template_equation
      (template_app
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Landau_Real_Products.landau_primfuns_iff",
     "((%_. 1) : \<Theta>(eval_primfuns ?fs)) =
      iszero_primfun_list (group_primfuns ?fs)",
     template_equation
      (template_app
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Landau_Real_Products.landau_primfuns_iff",
     "((%_. 1) : o(eval_primfuns ?fs)) =
      pos_primfun_list (group_primfuns ?fs)",
     template_equation
      (template_app
        (template_app (template_hole 6, t_empty),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Landau_Real_Products.eval_primfun_altdef",
     "eval_primfun ?f ?x = eval_primfun' (fst ?f) ?x powr snd ?f",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0)),
         template_app (template_hole 0, template_var 1)))),
    ("Landau_Real_Products.eval_powr_primfun",
     "eval_primfun (powr_primfun ?f ?e) ?x = eval_primfun ?f ?x powr ?e",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Landau_Real_Products.eventually_nonneg_ident_at_within",
     "(0::?'a) < ?a ==> eventually_nonneg (at ?a within ?A) (%x. x)",
     template_implication
      ([template_inequation (less_than, template_hole 2, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             t_empty)
           ))),
    ("Landau_Real_Products.primfun_dominates",
     "?f < ?g ==> dominates at_top (eval_primfun' ?f) (eval_primfun' ?g)",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Landau_Real_Products.landau_product_preprocess",
     "numeral ?m * - numeral ?n = - numeral (?m * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app
          (template_hole 1,
           template_app (template_hole 2, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Landau_Real_Products.landau_product_preprocess",
     "- numeral ?m * numeral ?n = - numeral (?m * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Landau_Real_Products.landau_product_preprocess",
     "- numeral ?m * - numeral ?n = numeral (?m * ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "- numeral ?m - numeral ?n = - numeral (?m + ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Landau_Real_Products.landau_product_preprocess",
     "num.Bit1 ?m + num.Bit1 ?n = num.Bit0 (?m + ?n + num.One)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_hole 0)))),
    ("Landau_Real_Products.eventually_nonneg_const",
     "eventually_nonneg ?F (%_. ?c) = (?F = bot | (0::?'b) <= ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("Landau_Real_Products.eventually_nonzero_simps",
     "(\<forall>\<^sub>F x in ?F. ?f x ~= (0::?'b)) =
      eventually_nonzero ?F ?f",
     template_equation
      (template_app
        (template_app (template_hole 4, t_empty), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Landau_Real_Products.eventually_nonneg_pow",
     "eventually_nonneg ?F ?f ==> eventually_nonneg ?F (%x. ?f x ^ ?n)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Landau_Real_Products.eventually_nonneg_ln_const'",
     "0 < ?b ==> eventually_nonneg at_top (%x. ln (x * ?b))",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_hole 2), t_empty)
           ))),
    ("Landau_Real_Products.eventually_nonneg_ln_const",
     "0 < ?b ==> eventually_nonneg at_top (%x. ln (?b * x))",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_hole 2), t_empty)
           ))),
    ("Landau_Real_Products.eventually_nonzero_ln_const'_at_top",
     "0 < ?b ==> eventually_nonzero at_top (%x. ln (x * ?b))",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_hole 2), t_empty)
           ))),
    ("Landau_Real_Products.eventually_nonzero_ln_const_at_top",
     "0 < ?b ==> eventually_nonzero at_top (%x. ln (?b * x))",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_hole 2), t_empty)
           ))),
    ("Landau_Real_Products.real_powr_at_top",
     "0 < ?p ==> LIM x at_top. x powr ?p :> at_top",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_hole 0),
             template_hole 0)
           ))),
    ("Landau_Real_Products.fun_chain_at_top_at_top",
     "filterlim ?f at_top at_top ==> filterlim (?f ^^ ?n) at_top at_top",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1)),
               template_hole 1),
             template_hole 1)
           ))),
    ("Landau_Real_Products.numeral_power_Suc",
     "numeral ?n ^ Suc ?a = numeral ?n * numeral ?n ^ ?a",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_var 0)))),
    ("Landau_Real_Products.inverse_prod_list_field",
     "(PROD x<-?xs. inverse (?f x)) = inverse (prod_list (map ?f ?xs))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty), template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Landau_Real_Products.eventually_nonzero_const",
     "eventually_nonzero ?F (%_. ?c) = (?F = bot | ?c ~= (0::?'b))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_var 1),
                 template_hole 3)),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)))
           ))),
    ("Landau_Real_Products.landau_real_prod_simps",
     "iszero_primfun_list ((?uu, ?x) # ?xs) =
      (?x = (0::?'b) & iszero_primfun_list ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 5,
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_app (template_hole 5, template_var 0))
           ))),
    ("Landau_Real_Products.LANDAU_PROD'_fold",
     "eval_primfuns ?fs ?x * eval_primfuns ?gs ?x =
      eval_primfuns (?fs @ ?gs) ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 0), template_var 1)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Landau_Real_Products.eventually_nonzeroD",
     "eventually_nonzero ?F ?f ==>
      \<forall>\<^sub>F x in ?F. ?f x ~= (0::?'b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty), template_var 1)
           ))),
    ("Landau_Real_Products.ln_chain_dominates",
     "?n < ?m ==> dominates at_top (ln ^^ ?n) (ln ^^ ?m)",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0))
           ))),
    ("Landau_Real_Products.primfun_cases",
     "(!!n e. ?P (LnChain n, e)) ==> ?P ?x",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Landau_Real_Products.fold_fun_chain",
     "(?g ^^ ?m) ((?g ^^ ?n) ?x) = (?g ^^ (?m + ?n)) ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 2),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 1)),
           template_var 2),
         template_var 0))),
    ("Landau_Real_Products.landau_product_preprocess",
     "- numeral ?m + - numeral ?n = - (numeral ?m + numeral ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Landau_Real_Products.landau_product_preprocess",
     "(ln ^^ ?m) ((ln ^^ ?n) ?x) = (ln ^^ (?m + ?n)) ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_hole 1),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_hole 1),
         template_var 0))),
    ("Landau_Real_Products.bigtheta_pow_eq_set_pow",
     "\<Theta>[?F](%x. ?f x ^ ?n) = bigtheta_pow ?F \<Theta>[?F](?f) ?n",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Landau_Real_Products.reify_monom_powr",
     "\<Theta>(%x. x powr ?e) = \<Theta>(eval_primfun (LnChain 0, ?e))",
     template_equation
      (template_app
        (template_app (template_hole 6, template_hole 5), t_empty),
       template_app
        (template_app (template_hole 6, template_hole 5),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_hole 0)),
             template_var 0))))),
    ("Landau_Real_Products.landau_bigtheta_congs",
     "?f : \<Theta>[?F](?g) ==> O[?F](?f) = O[?F](?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_bigtheta_congs",
     "?f : \<Theta>[?F](?g) ==> \<Omega>[?F](?f) = \<Omega>[?F](?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_bigtheta_congs",
     "?f : \<Theta>[?F](?g) ==> \<Theta>[?F](?f) = \<Theta>[?F](?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app
               (template_app (template_hole 1, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_bigtheta_congs",
     "?f : \<Theta>[?F](?g) ==> o[?F](?f) = o[?F](?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_bigtheta_congs",
     "?f : \<Theta>[?F](?g) ==> \<omega>[?F](?f) = \<omega>[?F](?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.eventually_nonzero_bigtheta'",
     "?f : \<Theta>[?F](?g) ==>
      eventually_nonzero ?F ?f = eventually_nonzero ?F ?g",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.landau_product_preprocess",
     "num.Bit1 ?m * num.Bit1 ?n = num.Bit1 (?m + ?n + num.Bit0 (?m * ?n))",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)))))),
    ("Landau_Real_Products.LANDAU_PROD'_fold",
     "BIGTHETA_CONST ?e \<Theta>(%_. ?d) =
      BIGTHETA_CONST (?e * ?d) \<Theta>(eval_primfuns [])",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_app (template_hole 4, template_hole 3), t_empty)),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app (template_hole 1, template_hole 0))))),
    ("Landau_Real_Products.reify_monom_pow",
     "\<Theta>(%x. x ^ ?e) = \<Theta>(eval_primfun (LnChain 0, real ?e))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6), t_empty),
       template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)),
             template_app (template_hole 0, template_var 0)))))),
    ("Landau_Real_Products.reify_ln_chain1",
     "\<Theta>(ln ^^ ?n) = \<Theta>(eval_primfun (LnChain ?n, 1))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6), t_empty),
       template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))))),
    ("Landau_Real_Products.filterlim_at_top_iff_smallomega",
     "filterlim ?f at_top ?F =
      (?f : \<omega>[?F](%_. 1) & eventually_nonneg ?F ?f)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 1), template_hole 5),
         template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_app
              (template_app (template_hole 2, template_var 0), t_empty))),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Landau_Real_Products.eventually_nonzero_pow",
     "eventually_nonzero ?F (%x. ?f x ^ ?n) =
      (?n = 0 | eventually_nonzero ?F ?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_hole 0)),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 1))
           ))),
    ("Landau_Real_Products.bigtheta_mult_eq",
     "\<Theta>[?F](%x. ?f x * ?g x) = \<Theta>[?F](?f) * \<Theta>[?F](?g)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Landau_Real_Products.bigtheta_mult_eq_set_mult",
     "\<Theta>[?F](%x. ?f x * ?g x) =
      set_mult \<Theta>[?F](?f) \<Theta>[?F](?g)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Landau_Real_Products.bigtheta_divide_eq_set_divide",
     "\<Theta>[?F](%x. ?f x / ?g x) =
      set_divide \<Theta>[?F](?f) \<Theta>[?F](?g)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Landau_Real_Products.BIGTHETA_CONST_fold",
     "set_inverse (BIGTHETA_CONST ?c \<Theta>(?f)) =
      BIGTHETA_CONST (inverse ?c) \<Theta>(%x. inverse (?f x))",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 0, template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1), t_empty)))),
    ("Landau_Real_Products.eventually_nonzero_mult",
     "eventually_nonzero ?F (%x. ?f x * ?g x) =
      (eventually_nonzero ?F ?f & eventually_nonzero ?F ?g)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Landau_Real_Products.eventually_nonzero_divide",
     "eventually_nonzero ?F (%x. ?f x / ?g x) =
      (eventually_nonzero ?F ?f & eventually_nonzero ?F ?g)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2), t_empty),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Landau_Real_Products.landau_real_prod_simps",
     "groupsort_primfun.group_part_aux ?p [] (?ls, ?eq, ?gs) =
      (?ls, ?eq, ?gs)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 5, template_hole 4),
               template_hole 3),
             template_var 3),
           template_hole 2),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.smallomega_1_iff",
     "eventually_nonneg ?F ?f ==>
      (?f : \<omega>[?F](%_. 1)) = filterlim ?f at_top ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0),
           template_var 1)))),
    ("Landau_Real_Products.smallo_1_iff",
     "eventually_nonneg ?F ?f ==>
      ((%_. 1) : o[?F](?f)) = filterlim ?f at_top ?F",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0),
           template_var 1)))),
    ("Landau_Real_Products.tendsto_ln_over_powr",
     "0 < ?a ==> ((%x. ln x / x powr ?a) \<longlongrightarrow> 0) at_top",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 1, template_hole 6)),
             template_hole 0)
           ))),
    ("Landau_Real_Products.bigtheta_const_ln",
     "0 < ?a ==> (%x. ln (?a * x)) : \<Theta>(ln)",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_app (template_hole 1, template_hole 0), t_empty))
           ))),
    ("Landau_Real_Products.ln_fun_in_smallo_fun",
     "filterlim ?f at_top at_top ==> (%x. ln (?f x) powr ?p) : o(?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_hole 5),
              template_hole 4)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 0, template_hole 4),
               template_var 1))
           ))),
    ("Landau_Real_Products.landau_function_family_powr_closure",
     "[| ?F ~= bot; filterlim ?f at_top ?F |]
      ==> landau_function_family ?F (powr_closure ?f)",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 0),
                template_hole 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Landau_Real_Products.reify_ln_chain_powr",
     "\<Theta>(%x. (ln ^^ ?n) x powr ?e) =
      \<Theta>(eval_primfun (LnChain ?n, ?e))",
     template_equation
      (template_app
        (template_app (template_hole 7, template_hole 6), t_empty),
       template_app
        (template_app (template_hole 7, template_hole 6),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0))))),
    ("Landau_Real_Products.landau_real_prod_simps",
     "nonneg_primfun_list ((?uu, ?x) # ?xs) =
      ((0::?'b) < ?x | ?x = (0::?'b) & nonneg_primfun_list ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_hole 2)),
               template_app (template_hole 7, template_var 0)))
           ))),
    ("Landau_Real_Products.landau_real_prod_simps",
     "pos_primfun_list ((?uu, ?x) # ?xs) =
      ((0::?'b) < ?x | ?x = (0::?'b) & pos_primfun_list ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app
                   (template_app (template_hole 5, template_var 2),
                    template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 1)),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_hole 2)),
               template_app (template_hole 7, template_var 0)))
           ))),
    ("Landau_Real_Products.landau_real_prod_simps",
     "groupsort_primfun.group_part ?p ?xs =
      groupsort_primfun.group_part_aux (fst ?p) ?xs ([], ?p, [])",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 6, template_hole 5),
             template_hole 4),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_hole 5),
               template_hole 4),
             template_app (template_hole 5, template_var 1)),
           template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_hole 1))))),
    ("Landau_Real_Products.eventually_nonneg_bigtheta_pow_realpow",
     "\<Theta>(%x. eval_primfun ?f x ^ ?e) =
      \<Theta>(%x. eval_primfun ?f x powr real ?e)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_hole 4), t_empty),
       template_app
        (template_app (template_hole 5, template_hole 4), t_empty))),
    ("Landau_Real_Products.reify_ln_chain_pow",
     "\<Theta>(%x. (ln ^^ ?n) x ^ ?e) =
      \<Theta>(eval_primfun (LnChain ?n, real ?e))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_hole 7), t_empty),
       template_app
        (template_app (template_hole 8, template_hole 7),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0)))))),
    ("Landau_Real_Products.tendsto_ln_powr_over_powr'",
     "0 < ?b ==>
      ((%x. ln x powr ?a / x powr ?b) \<longlongrightarrow> 0) at_top",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 1, template_hole 6)),
             template_hole 0)
           ))),
    ("Landau_Real_Products.eventually_nonneg_add",
     "[| eventually_nonneg ?F ?f; eventually_nonneg ?F ?g |]
      ==> eventually_nonneg ?F (%x. ?f x + ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Landau_Real_Products.eventually_nonneg_mult",
     "[| eventually_nonneg ?F ?f; eventually_nonneg ?F ?g |]
      ==> eventually_nonneg ?F (%x. ?f x * ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Landau_Real_Products.eventually_nonneg_divide",
     "[| eventually_nonneg ?F ?f; eventually_nonneg ?F ?g |]
      ==> eventually_nonneg ?F (%x. ?f x / ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), t_empty)
           ))),
    ("Landau_Real_Products.LANDAU_PROD_bigo_iff",
     "LANDAU_PROD bigo_at_top ?c1.0 ?c2.0 ?fs =
      (?c1.0 = 0 | ?c2.0 ~= 0 & nonneg_primfun_list (group_primfuns ?fs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_hole 7)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_hole 4)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 4))),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Landau_Real_Products.LANDAU_PROD_smallo_iff",
     "LANDAU_PROD smallo_at_top ?c1.0 ?c2.0 ?fs =
      (?c1.0 = 0 | ?c2.0 ~= 0 & pos_primfun_list (group_primfuns ?fs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_hole 7)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_hole 4)),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 5, template_var 1),
                     template_hole 4))),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Landau_Real_Products.bigtheta_powr_eq_set_powr",
     "eventually_nonneg ?F ?f ==>
      \<Theta>[?F](%x. ?f x powr ?y) =
      bigtheta_powr ?F \<Theta>[?F](?f) ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), t_empty),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("Landau_Real_Products.landau_function_family_chain_primfuns",
     "[| sorted (map fst ?fs); distinct (map fst ?fs) |]
      ==> landau_function_family_chain at_top ?fs (eval_primfun' o fst)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_hole 4,
              template_app
               (template_app (template_hole 6, template_hole 5),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 3, template_hole 2),
               template_var 0),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 5))
           ))),
    ("Landau_Real_Products.bigtheta_const_ln_pow",
     "0 < ?a ==> (%x. ln (?a * x) ^ ?d) : \<Theta>(%x. ln x ^ ?d)",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app (template_hole 1, template_hole 0), t_empty))
           ))),
    ("Landau_Real_Products.bigtheta_const_ln_powr",
     "0 < ?a ==> (%x. ln (?a * x) powr ?d) : \<Theta>(%x. ln x powr ?d)",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, t_empty),
             template_app
              (template_app (template_hole 1, template_hole 0), t_empty))
           ))),
    ("Landau_Real_Products.eval_merge_primfun",
     "fst ?f = fst ?g ==>
      eval_primfun (merge_primfun ?f ?g) ?x =
      eval_primfun ?f ?x * eval_primfun ?g ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0)),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0))))),
    ("Landau_Real_Products.eventually_nonneg_diff1",
     "[| eventually_nonneg ?F ?f; ?g : o[?F](?f) |]
      ==> eventually_nonneg ?F (%x. ?f x - ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), t_empty)
           ))),
    ("Landau_Real_Products.eventually_nonneg_add1",
     "[| eventually_nonneg ?F ?f; ?g : o[?F](?f) |]
      ==> eventually_nonneg ?F (%x. ?f x + ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), t_empty)
           ))),
    ("Landau_Real_Products.eventually_nonneg_add2",
     "[| eventually_nonneg ?F ?g; ?f : o[?F](?g) |]
      ==> eventually_nonneg ?F (%x. ?f x + ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2), t_empty)
           ))),
    ("Landau_Real_Products.tendsto_ln_powr_over_ln_powr''",
     "0 < ?a ==>
      ((%x. ln (?a * x) powr ?d / ln x powr ?d) \<longlongrightarrow> 1)
       at_top",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Landau_Real_Products.tendsto_ln_powr_over_ln_powr'",
     "0 < ?c ==>
      ((%x. ln x powr ?d / ln (?c * x) powr ?d) \<longlongrightarrow> 1)
       at_top",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Landau_Real_Products.powr_closureE",
     "[| ?g : powr_closure ?f; !!p. ?g = (%x. ?f x powr p) ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Landau_Real_Products.landau_function_family_pair_trans",
     "[| landau_function_family_pair ?Ftr ?F ?G ?f;
         landau_function_family_pair ?Ftr ?G ?H ?g |]
      ==> landau_function_family_pair ?Ftr ?F (?G * ?H) ?f",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 3),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_var 2)
           ))),
    ("Landau_Real_Products.BIGTHETA_CONST_fold",
     "bigtheta_pow at_top (BIGTHETA_CONST ?c \<Theta>(eval_primfun ?pf))
       ?k =
      BIGTHETA_CONST (?c ^ ?k)
       \<Theta>(%x. eval_primfun ?pf x powr real ?k)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_hole 6),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_app
              (template_app (template_hole 4, template_hole 6),
               template_app (template_hole 3, template_var 1)))),
         template_var 0),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 4, template_hole 6), t_empty)))),
    ("Landau_Real_Products.tendsto_ln_powr_over_powr",
     "[| 0 < ?a; 0 < ?b |]
      ==> ((%x. ln x powr ?a / x powr ?b) \<longlongrightarrow> 0) at_top",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 1),
        template_inequation (less_than, template_hole 6, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 5, t_empty),
               template_app (template_hole 1, template_hole 6)),
             template_hole 0)
           ))),
    ("Landau_Real_Products.eventually_nonneg_diff2",
     "[| eventually_nonneg ?F (%x. - ?g x); ?f : o[?F](?g) |]
      ==> eventually_nonneg ?F (%x. ?f x - ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2), t_empty)
           ))),
    ("Landau_Real_Products.BIGTHETA_CONST_fold",
     "set_mult (BIGTHETA_CONST ?c \<Theta>(?f))
       (BIGTHETA_CONST ?d \<Theta>(?g)) =
      BIGTHETA_CONST (?c * ?d) \<Theta>(%x. ?f x * ?g x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 2))),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_hole 1), t_empty)))),
    ("Landau_Real_Products.tendsto_ln_over_ln",
     "[| 0 < ?a; 0 < ?c |]
      ==> ((%x. ln (?a * x) / ln (?c * x)) \<longlongrightarrow> 1) at_top",
     template_implication
      ([template_inequation (less_than, template_hole 7, template_var 1),
        template_inequation (less_than, template_hole 7, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 6, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Landau_Real_Products.eventually_nonneg_mult'",
     "[| eventually_nonneg ?F (%x. - ?f x);
         eventually_nonneg ?F (%x. - ?g x) |]
      ==> eventually_nonneg ?F (%x. ?f x * ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)
           ))),
    ("Landau_Real_Products.eventually_nonneg_divide'",
     "[| eventually_nonneg ?F (%x. - ?f x);
         eventually_nonneg ?F (%x. - ?g x) |]
      ==> eventually_nonneg ?F (%x. ?f x / ?g x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2), t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2), t_empty)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)
           ))),
    ("Landau_Real_Products.dominates_trans",
     "[| \<forall>\<^sub>F x in ?F. 0 < ?g x; dominates ?F ?f ?g;
         dominates ?F ?g ?h |]
      ==> dominates ?F ?f ?h",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, t_empty), template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 0, template_var 2),
                template_var 3),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("Landau_Real_Products.LANDAU_PROD_bigtheta_iff",
     "LANDAU_PROD bigtheta_at_top ?c1.0 ?c2.0 ?fs =
      (?c1.0 = 0 & ?c2.0 = 0 |
       ?c1.0 ~= 0 & ?c2.0 ~= 0 & iszero_primfun_list (group_primfuns ?fs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, template_hole 7)),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 3)),
                 template_app
                  (template_app (template_hole 4, template_var 1),
                   template_hole 3))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 4, template_var 2),
                     template_hole 3))),
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_hole 2,
                     template_app
                      (template_app (template_hole 4, template_var 1),
                       template_hole 3))),
                 template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("Landau_Real_Products.landau_real_prod_simps",
     "groupsort_primfun.group_sort (?x # ?xs) =
      (case groupsort_primfun.group_part ?x ?xs of
       (ls, eq, gs) =>
         groupsort_primfun.group_sort ls @
         eq # groupsort_primfun.group_sort gs)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_hole 6),
           template_hole 5),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 3, t_empty),
         template_app
          (template_app
            (template_app
              (template_app (template_hole 0, template_hole 6),
               template_hole 5),
             template_var 1),
           template_var 0)))),
    ("Landau_Real_Products.tendsto_ln_powr_over_ln_powr",
     "[| 0 < ?a; 0 < ?c |]
      ==> ((%x. ln (?a * x) powr ?d /
                ln (?c * x) powr ?d) \<longlongrightarrow>
           1)
           at_top",
     template_implication
      ([template_inequation (less_than, template_hole 8, template_var 2),
        template_inequation (less_than, template_hole 8, template_var 1)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 7, t_empty),
               template_app (template_hole 2, template_hole 1)),
             template_hole 0)
           ))),
    ("Landau_Real_Products.dominating_chain_imp_dominating_chain'",
     "[| ?Ftr ~= bot; !!g. g : set ?gs ==> filterlim g at_top ?Ftr;
         landau_dominating_chain ?Ftr ?gs |]
      ==> landau_dominating_chain' ?Ftr ?gs",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 7)),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("Landau_Real_Products.landau_real_prod_simps",
     "fst ?x = ?p ==>
      groupsort_primfun.group_part_aux ?p (?x # ?xs) (?ls, ?eq, ?gs) =
      groupsort_primfun.group_part_aux ?p ?xs
       (?ls, merge_primfun ?x ?eq, ?gs)",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_var 5), template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 6),
                 template_hole 3),
               template_var 4),
             template_app
              (template_app (template_hole 2, template_var 5),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 6),
                 template_hole 3),
               template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 3, template_var 5),
                   template_var 1)),
               template_var 0)))))),
    ("Landau_Real_Products.landau_real_prod_simps",
     "?p < fst ?x ==>
      groupsort_primfun.group_part_aux ?p (?x # ?xs) (?ls, ?eq, ?gs) =
      groupsort_primfun.group_part_aux ?p ?xs (?ls, ?eq, ?x # ?gs)",
     template_implication
      ([template_inequation
         (less_than, template_var 5,
          template_app (template_hole 6, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 6),
                 template_hole 3),
               template_var 5),
             template_app
              (template_app (template_hole 2, template_var 4),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 6),
                 template_hole 3),
               template_var 5),
             template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 0))))))),
    ("Landau_Real_Products.landau_real_prod_simps",
     "fst ?x < ?p ==>
      groupsort_primfun.group_part_aux ?p (?x # ?xs) (?ls, ?eq, ?gs) =
      groupsort_primfun.group_part_aux ?p ?xs (?x # ?ls, ?eq, ?gs)",
     template_implication
      ([template_inequation
         (less_than, template_app (template_hole 6, template_var 5),
          template_var 4)],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 6),
                 template_hole 3),
               template_var 4),
             template_app
              (template_app (template_hole 2, template_var 5),
               template_var 3)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))),
         template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 4, template_hole 6),
                 template_hole 3),
               template_var 4),
             template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))))),
    ("Landau_Real_Products.list_ConsCons_induct",
     "[| ?P []; !!x. ?P [x]; !!x y xs. ?P (y # xs) ==> ?P (x # y # xs) |]
      ==> ?P ?xs",
     template_implication
      ([template_predicate (template_app (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Landau_Real_Products.set_powr_mult",
     "[| eventually_nonneg ?F ?f; eventually_nonneg ?F ?g |]
      ==> \<Theta>[?F](%x. (?f x * ?g x) powr ?p) =
          set_mult \<Theta>[?F](%x. ?f x powr ?p)
           \<Theta>[?F](%x. ?g x powr ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 3), t_empty),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 3), t_empty)),
           template_app
            (template_app (template_hole 3, template_var 3), t_empty))))),
    ("Landau_Real_Products.landau_function_family_pair_trans_powr",
     "[| landau_function_family_pair ?F (powr_closure ?g) ?H
          (%x. ?g x powr 1);
         filterlim ?f at_top ?F; !!p. (%x. ?g x powr p) : o[?F](?f) |]
      ==> landau_function_family_pair ?F (powr_closure ?f)
           (powr_closure ?g * ?H) (%x. ?f x powr 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 3),
                  template_app (template_hole 8, template_var 2)),
                template_var 1),
              t_empty)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 0),
                template_hole 4),
              template_var 3)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 9, template_var 3),
                 template_app (template_hole 8, template_var 0)),
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 8, template_var 2)),
                 template_var 1)),
             t_empty)
           )))]
