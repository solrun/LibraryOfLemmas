Loading theory "HOL-Library.Cancellation" (required by "Draft.Landau_MoreMoreTemplates" via "Draft.Landau_More" via "Draft.Landau_Simprocs" via "Draft.Landau_Real_Products" via "Draft.Group_Sort" via "HOL-Library.Multiset")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Landau_MoreMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Landau_MoreMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Landau_MoreMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.149s elapsed time, 0.605s cpu time, 0.041s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.Landau_MoreMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.213s elapsed time, 0.858s cpu time, 0.041s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Landau_MoreMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Nat_Bijection"
### 0.317s elapsed time, 1.275s cpu time, 0.041s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Landau_MoreMoreTemplates" via "Draft.ExtrEqs")
signature CANCEL = sig val proc: Proof.context -> cterm -> thm option end
functor Cancel_Fun (Data: CANCEL_NUMERALS_DATA): CANCEL
signature CANCEL_DATA =
  sig
    val dest_coeff: term -> int * term
    val dest_sum: term -> term list
    val find_first_coeff: term -> term list -> int * term list
    val mk_coeff: int * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss1: simpset
    val norm_ss2: simpset
    val norm_tac: Proof.context -> tactic
    val numeral_simp_tac: Proof.context -> tactic
    val prove_conv:
       tactic list -> Proof.context -> thm list -> term * term -> thm option
    val simplify_meta_eq: Proof.context -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Cancel_Data: CANCEL_DATA
signature CANCEL_SIMPROCS =
  sig
    val diff_cancel: Proof.context -> cterm -> thm option
    val eq_cancel: Proof.context -> cterm -> thm option
    val less_cancel: Proof.context -> cterm -> thm option
    val less_eq_cancel: Proof.context -> cterm -> thm option
  end
structure Cancel_Simprocs: CANCEL_SIMPROCS
### theory "HOL-Library.Cancellation"
### 0.486s elapsed time, 1.946s cpu time, 0.120s GC time
Loading theory "HOL-Library.Multiset" (required by "Draft.Landau_MoreMoreTemplates" via "Draft.Landau_More" via "Draft.Landau_Simprocs" via "Draft.Landau_Real_Products" via "Draft.Group_Sort")
instantiation
  multiset :: (type) cancel_comm_monoid_add
  zero_multiset == zero_class.zero :: 'a multiset
  minus_multiset == minus :: 'a multiset => 'a multiset => 'a multiset
  plus_multiset == plus :: 'a multiset => 'a multiset => 'a multiset
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
Found termination order: "size <*mlex*> {}"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  cycle :: "'a list => 'a stream"
### theory "HOL-Library.BigO"
### 0.977s elapsed time, 3.693s cpu time, 0.843s GC time
Loading theory "HOL-Library.Landau_Symbols" (required by "Draft.Landau_MoreMoreTemplates" via "Draft.Landau_More")
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.117s elapsed time, 4.217s cpu time, 0.964s GC time
### Partially applied constant "Multiset.inter_mset" on left hand side of equation, in theorem:
### semilattice_inf.Inf_fin (\<inter>#) (set (?x # ?xs)) ==
### fold (\<inter>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
### Partially applied constant "Multiset.union_mset" on left hand side of equation, in theorem:
### semilattice_sup.Sup_fin (\<union>#) (set (?x # ?xs)) ==
### fold (\<union>#) ?xs ?x
Found termination order: "size <*mlex*> {}"
locale landau_symbol
  fixes L :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and L' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and Lr :: "'a filter => ('a => real) => ('a => real) set"
  assumes "landau_symbol L L' Lr"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
signature MULTISET_SIMPROCS =
  sig
    val subset_cancel_msets: Proof.context -> cterm -> thm option
    val subseteq_cancel_msets: Proof.context -> cterm -> thm option
  end
structure Multiset_Simprocs: MULTISET_SIMPROCS
instantiation
  multiset :: (type) Inf
  Inf_multiset == Inf :: 'a multiset set => 'a multiset
instantiation
  multiset :: (type) Sup
  Sup_multiset == Sup :: 'a multiset set => 'a multiset
Found termination order: "size <*mlex*> {}"
locale landau_pair
  fixes L :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and l :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and L' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and l' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and Lr :: "'a filter => ('a => real) => ('a => real) set"
    and lr :: "'a filter => ('a => real) => ('a => real) set"
    and R :: "real => real => bool"
  assumes "landau_pair L l L' l' Lr lr R"
locale landau_pair
  fixes L :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and l :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and L' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and l' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and Lr :: "'a filter => ('a => real) => ('a => real) set"
    and lr :: "'a filter => ('a => real) => ('a => real) set"
    and R :: "real => real => bool"
  assumes "landau_pair L l L' l' Lr lr R"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale landau_pair
  fixes L :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and l :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and L' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and l' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and Lr :: "'a filter => ('a => real) => ('a => real) set"
    and lr :: "'a filter => ('a => real) => ('a => real) set"
    and R :: "real => real => bool"
  assumes "landau_pair L l L' l' Lr lr R"
instantiation
  multiset :: (type) size
  size_multiset == size :: 'a multiset => nat
locale comp_fun_commute
  fixes f :: "'a => 'b => 'b"
  assumes "comp_fun_commute f"
locale landau_symbol
  fixes L :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and L' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and Lr :: "'a filter => ('a => real) => ('a => real) set"
  assumes "landau_symbol L L' Lr"
consts
  mset :: "'a list => 'a multiset"
Found termination order: "size <*mlex*> {}"
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
### theory "HOL-Library.Tree"
### 2.143s elapsed time, 7.516s cpu time, 1.235s GC time
Loading theory "Draft.Templates" (required by "Draft.Landau_MoreMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.060s elapsed time, 0.180s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Landau_MoreMoreTemplates")
locale comm_monoid_mset
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_mset (\<^bold>*) \<^bold>1"
locale landau_symbol
  fixes L :: "'a filter => ('a => 'b) => ('a => 'b) set"
    and L' :: "'c filter => ('c => 'b) => ('c => 'b) set"
    and Lr :: "'a filter => ('a => real) => ('a => real) set"
  assumes "landau_symbol L L' Lr"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class comm_monoid_add = ab_semigroup_add + monoid_add +
  assumes "add_0": "!!a. (0::'a) + a = a"
class canonically_ordered_monoid_add = ordered_comm_monoid_add +
  assumes "le_iff_add": "!!a b. (a <= b) = (EX c. b = a + c)"
bundle asymp_equiv_notation
class comm_monoid_mult = ab_semigroup_mult + monoid_mult + dvd +
  assumes "mult_1": "!!a. (1::'a) * a = a"
### theory "HOL-Library.Landau_Symbols"
### 1.653s elapsed time, 5.185s cpu time, 0.481s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.631s elapsed time, 1.850s cpu time, 0.195s GC time
class linorder = order +
  assumes "linear": "!!x y. x <= y | y <= x"
instantiation
  multiset :: (preorder) order
  less_eq_multiset == less_eq :: 'a multiset => 'a multiset => bool
  less_multiset == less :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (preorder) ordered_ab_semigroup_add
Proofs for inductive predicate(s) "pw_leq"
  Proving monotonicity ...
Found termination order: "(%p. length (fst p)) <*mlex*> {}"
instantiation
  multiset :: (equal) equal
  equal_multiset == equal_class.equal :: 'a multiset => 'a multiset => bool
instantiation
  multiset :: (random) random
  random_multiset == random_class.random ::
    natural
    => natural * natural
       => ('a multiset * (unit => term)) * natural * natural
instantiation
  multiset :: (full_exhaustive) full_exhaustive
  full_exhaustive_multiset == full_exhaustive_class.full_exhaustive ::
    ('a multiset * (unit => term) => (bool * term list) option)
    => natural => (bool * term list) option
Proofs for inductive predicate(s) "pred_mset"
  Proving monotonicity ...
Proofs for inductive predicate(s) "rel_mset'"
  Proving monotonicity ...
### theory "HOL-Library.Multiset"
### 3.226s elapsed time, 8.865s cpu time, 1.366s GC time
Loading theory "Draft.Group_Sort" (required by "Draft.Landau_MoreMoreTemplates" via "Draft.Landau_More" via "Draft.Landau_Simprocs" via "Draft.Landau_Real_Products")
locale groupsort
  fixes f :: "'a => 'b"
    and merge :: "'a => 'a => 'a"
    and g :: "'a list => 'c"
  assumes "groupsort f merge g"
Found termination order: "length <*mlex*> {}"
### theory "Draft.Group_Sort"
### 0.959s elapsed time, 1.626s cpu time, 0.835s GC time
Loading theory "Draft.Landau_Real_Products" (required by "Draft.Landau_MoreMoreTemplates" via "Draft.Landau_More" via "Draft.Landau_Simprocs")
consts
  bigtheta_pow :: "'a filter => ('a => 'b) set => nat => ('a => 'b) set"
locale landau_function_family
  fixes F :: "'a filter"
    and H :: "('a => real) set"
  assumes "landau_function_family F H"
locale landau_function_family_pair
  fixes F :: "'a filter"
    and G :: "('a => real) set"
    and H :: "('a => real) set"
    and g :: "'a => real"
  assumes "landau_function_family_pair F G H g"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  landau_dominating_chain' :: "'a filter => ('a => real) list => bool"
consts
  nonneg_list :: "'a list => bool"
consts
  pos_list :: "'a list => bool"
locale landau_function_family_chain
  fixes F :: "'b filter"
    and gs :: "'a list"
    and get_param :: "'a => real"
    and get_fun :: "'a => 'b => real"
  assumes "landau_function_family_chain F gs get_fun"
instantiation
  primfun :: linorder
  less_eq_primfun == less_eq :: primfun => primfun => bool
  less_primfun == less :: primfun => primfun => bool
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### Ignoring duplicate rewrite rule:
### pos_primfun_list [] == False
### Ignoring duplicate rewrite rule:
### pos_primfun_list ((?uu1, ?x1) # ?xs1) ==
### (0::?'b1) < ?x1 | ?x1 = (0::?'b1) & pos_primfun_list ?xs1
### Ignoring duplicate rewrite rule:
### nonneg_primfun_list [] == True
### Ignoring duplicate rewrite rule:
### nonneg_primfun_list ((?uu1, ?x1) # ?xs1) ==
### (0::?'b1) < ?x1 | ?x1 = (0::?'b1) & nonneg_primfun_list ?xs1
### Ignoring duplicate rewrite rule:
### iszero_primfun_list [] == True
### Ignoring duplicate rewrite rule:
### iszero_primfun_list ((?uu1, ?x1) # ?xs1) ==
### ?x1 = (0::?'b1) & iszero_primfun_list ?xs1
### theory "Draft.Landau_Real_Products"
### 2.031s elapsed time, 2.347s cpu time, 0.340s GC time
Loading theory "Draft.Landau_Simprocs" (required by "Draft.Landau_MoreMoreTemplates" via "Draft.Landau_More")
### ML warning (line 63 of "$AFP/Landau_Symbols/landau_simprocs.ML"):
### Value identifier (dest_bigtheta) has not been referenced.
### ML warning (line 176 of "$AFP/Landau_Symbols/landau_simprocs.ML"):
### Value identifier (x_name2) has not been referenced.
### ML warning (line 185 of "$AFP/Landau_Symbols/landau_simprocs.ML"):
### Value identifier (rest2) has not been referenced.
### ML warning (line 185 of "$AFP/Landau_Symbols/landau_simprocs.ML"):
### Value identifier (rest1) has not been referenced.
### ML warning (line 318 of "$AFP/Landau_Symbols/landau_simprocs.ML"):
### Pattern is not exhaustive.
### ML warning (line 373 of "$AFP/Landau_Symbols/landau_simprocs.ML"):
### Pattern is not exhaustive.
signature LANDAU =
  sig
    val cancel_factor_conv: Proof.context -> cterm -> thm
    val cancel_factor_simproc: Proof.context -> cterm -> thm option
    val dest_landau: term -> term * term * term
    val landau_const_names: string list
    val landau_sum_limit: int Config.T
    val lift_landau_conv: conv -> conv
    val lift_landau_simproc:
       (Proof.context -> cterm -> thm option) ->
         Proof.context -> cterm -> thm option
    val simplify_landau_product_conv: Proof.context -> conv
    val simplify_landau_product_simproc:
       Proof.context -> cterm -> thm option
    val simplify_landau_real_prod_prop_conv: Proof.context -> conv
    val simplify_landau_real_prod_prop_simproc:
       Proof.context -> cterm -> thm option
    val simplify_landau_sum_conv: Proof.context -> conv
    val simplify_landau_sum_simproc: Proof.context -> cterm -> thm option
  end
structure Landau: LANDAU
### theory "Draft.Landau_Simprocs"
### 0.599s elapsed time, 1.379s cpu time, 1.035s GC time
Loading theory "Draft.Landau_More" (required by "Draft.Landau_MoreMoreTemplates")
val it =
   "(%x. 5 * (ln (ln x))\<^sup>2 / (2 * x) powr (15 / 10) * inverse 2)
    : \<omega>(%x. 3 * ln x * ln x / x * ln (ln (ln (ln x)))) ==
    3 = 0 |
    5 * inverse (2 powr (15 / 10)) * inverse 2 ~= 0 &
    pos_primfun_list
     (group_primfuns
       [(LnChain 1, - 1), (LnChain 1, - 1), (LnChain 0, 1),
        (LnChain 4, - 1), (LnChain 2, real 2), (LnChain 0, - (15 / 10))])":
   thm
### theory "Draft.Landau_More"
### 0.099s elapsed time, 0.108s cpu time, 0.000s GC time
Loading theory "Draft.Landau_MoreMoreTemplates"
val templateLemmas =
   [("Landau_More.smallomega_1_conv_filterlim",
     "(?f : \<omega>[?F](%_. 1::?'b)) = filterlim ?f at_infinity ?F",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app
          (template_app (template_hole 3, template_var 0), t_empty)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0))),
    ("Landau_More.const_in_smallo_const",
     "((%_. ?b) : o(%_. ?c)) = (?b = (0::?'b))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, t_empty),
              template_app
               (template_app (template_hole 3, template_hole 2), t_empty))
            )],
       template_equation (template_var 1, template_hole 0))),
    ("Landau_More.filterlim_powr_at_top",
     "1 < ?b ==> filterlim ((powr) ?b) at_top at_top",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, t_empty), template_hole 0),
             template_hole 0)
           ))),
    ("Landau_More.inverse_powr",
     "0 <= ?x ==> inverse ?x powr ?y = inverse (?x powr ?y)",
     template_implication
      ([template_inequation (less_equals, template_hole 3, template_var 1)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_var 0),
         template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Landau_More.power_smallo_exponential",
     "1 < ?b ==> (%x. x powr ?n) : o((powr) ?b)",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 1, template_hole 0), t_empty))
           ))),
    ("Landau_More.bigtheta_powr_1",
     "\<forall>\<^sub>F x in ?F. 0 <= ?f x ==>
      (%x. ?f x powr 1) : \<Theta>[?F](?f)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Landau_More.bigtheta_powr_0",
     "\<forall>\<^sub>F x in ?F. ?f x ~= 0 ==>
      (%x. ?f x powr 0) : \<Theta>[?F](%_. 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty), template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 1, template_var 0), t_empty))
           ))),
    ("Landau_More.bigtheta_powr_nonneg'",
     "\<forall>\<^sub>F x in ?F. 0 <= ?f x ==>
      (%x. if ?f x < 0 then ?g x else ?h x) : \<Theta>[?F](?h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Landau_More.bigtheta_powr_nonneg",
     "\<forall>\<^sub>F x in ?F. 0 <= ?f x ==>
      (%x. if 0 <= ?f x then ?g x else ?h x) : \<Theta>[?F](?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Landau_More.bigtheta_powr_nonzero",
     "\<forall>\<^sub>F x in ?F. ?f x ~= 0 ==>
      (%x. if ?f x = 0 then ?g x else ?h x) : \<Theta>[?F](?h)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Landau_More.bigo_const_inverse_powr",
     "filterlim ?f at_top at_top ==>
      ((%_. ?c) : O(%x. inverse (?f x powr ?p))) = (?c = 0 | ?p <= 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_hole 10),
              template_hole 9)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 7, t_empty),
                template_app
                 (template_app (template_hole 6, template_hole 9), t_empty))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_hole 1)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_hole 1))
             )))),
    ("Landau_More.const_smallo_inverse_powr",
     "filterlim ?f at_top at_top ==>
      ((%_. ?c) : o(%x. inverse (?f x powr ?p))) = (0 <= ?p --> ?c = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_hole 10),
              template_hole 9)
            )],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 7, t_empty),
                template_app
                 (template_app (template_hole 6, template_hole 9), t_empty))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_hole 1))
             )))),
    ("Landau_More.bigtheta_powr_nonzero'",
     "\<forall>\<^sub>F x in ?F. ?f x ~= 0 ==>
      (%x. if ?f x ~= 0 then ?g x else ?h x) : \<Theta>[?F](?g)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, t_empty), template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("Landau_More.bigo_const_inverse",
     "[| filterlim ?f at_top ?F; ?F ~= bot |]
      ==> ((%_. ?c) : O[?F](%x. inverse (?f x))) = (?c = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_hole 9),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 4, t_empty),
                template_app
                 (template_app (template_hole 3, template_var 1), t_empty))
              )],
         template_equation (template_var 0, template_hole 0)))),
    ("Landau_More.smallo_const_inverse",
     "[| filterlim ?f at_top ?F; ?F ~= bot |]
      ==> ((%_. ?c) : o[?F](%x. inverse (?f x))) = (?c = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 2),
                template_hole 9),
              template_var 1)
            ),
        template_negation
         (template_equation (template_var 1, template_hole 6))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 4, t_empty),
                template_app
                 (template_app (template_hole 3, template_var 1), t_empty))
              )],
         template_equation (template_var 0, template_hole 0)))),
    ("Landau_More.bigo_abs_powr_iff",
     "0 < ?p ==>
      ((%x. \<bar>?f x\<bar> powr ?p)
       : O[?F](%x. \<bar>?g x\<bar> powr ?p)) =
      (?f : O[?F](?g))",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Landau_More.smallo_abs_powr_iff",
     "0 < ?p ==>
      ((%x. \<bar>?f x\<bar> powr ?p)
       : o[?F](%x. \<bar>?g x\<bar> powr ?p)) =
      (?f : o[?F](?g))",
     template_implication
      ([template_inequation (less_than, template_hole 5, template_var 3)],
       template_equation
        (template_app
          (template_app (template_hole 3, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Landau_More.bigo_const_powr",
     "[| filterlim ?f at_top ?F; ?F ~= bot |]
      ==> ((%_. ?c) : O[?F](%x. ?f x powr ?p)) = (0 <= ?p | ?c = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 3),
                template_hole 11),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 8))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 6, t_empty),
                template_app
                 (template_app (template_hole 5, template_var 2), t_empty))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_hole 1))
             )))),
    ("Landau_More.const_smallo_powr",
     "[| filterlim ?f at_top ?F; ?F ~= bot |]
      ==> ((%_. ?c) : o[?F](%x. ?f x powr ?p)) = (0 < ?p | ?c = 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 3),
                template_hole 11),
              template_var 2)
            ),
        template_negation
         (template_equation (template_var 2, template_hole 8))],
       template_implication
        ([template_predicate
           (
              template_app
               (template_app (template_hole 6, t_empty),
                template_app
                 (template_app (template_hole 5, template_var 2), t_empty))
              )],
         template_predicate
          (
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_hole 1),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_hole 1))
             )))),
    ("Landau_More.bigo_powr_iff",
     "[| 0 < ?p; \<forall>\<^sub>F x in ?F. 0 <= ?f x;
         \<forall>\<^sub>F x in ?F. 0 <= ?g x |]
      ==> ((%x. ?f x powr ?p) : O[?F](%x. ?g x powr ?p)) =
          (?f : O[?F](?g))",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Landau_More.smallo_powr_iff",
     "[| 0 < ?p; \<forall>\<^sub>F x in ?F. 0 <= ?f x;
         \<forall>\<^sub>F x in ?F. 0 <= ?g x |]
      ==> ((%x. ?f x powr ?p) : o[?F](%x. ?g x powr ?p)) =
          (?f : o[?F](?g))",
     template_implication
      ([template_inequation (less_than, template_hole 6, template_var 3),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, t_empty), template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Landau_More.powr_fast_growth_tendsto",
     "[| ?g : O[?F](?f); 0 <= ?n; 1 < ?k; filterlim ?f at_top ?F;
         \<forall>\<^sub>F x in ?F. 0 <= ?g x |]
      ==> (%x. ?g x powr ?n) : o[?F](%x. ?k powr ?f x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app
               (template_app (template_hole 9, template_var 3),
                template_var 2))
            ),
        template_inequation (less_equals, template_hole 7, template_var 1),
        template_inequation (less_than, template_hole 5, template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_hole 3),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, t_empty), template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, t_empty),
             template_app
              (template_app (template_hole 0, template_var 3), t_empty))
           ))),
    ("Landau_More.bigo_neg_powr_iff",
     "[| ?p < 0; \<forall>\<^sub>F x in ?F. 0 <= ?f x;
         \<forall>\<^sub>F x in ?F. 0 <= ?g x;
         \<forall>\<^sub>F x in ?F. ?f x ~= 0;
         \<forall>\<^sub>F x in ?F. ?g x ~= 0 |]
      ==> ((%x. ?f x powr ?p) : O[?F](%x. ?g x powr ?p)) =
          (?g : O[?F](?f))",
     template_implication
      ([template_inequation (less_than, template_var 3, template_hole 8),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty), template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2))))),
    ("Landau_More.smallo_neg_powr_iff",
     "[| ?p < 0; \<forall>\<^sub>F x in ?F. 0 <= ?f x;
         \<forall>\<^sub>F x in ?F. 0 <= ?g x;
         \<forall>\<^sub>F x in ?F. ?f x ~= 0;
         \<forall>\<^sub>F x in ?F. ?g x ~= 0 |]
      ==> ((%x. ?f x powr ?p) : o[?F](%x. ?g x powr ?p)) =
          (?g : o[?F](?f))",
     template_implication
      ([template_inequation (less_than, template_var 3, template_hole 8),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty), template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, t_empty), template_var 1)
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, t_empty),
           template_app
            (template_app (template_hole 0, template_var 1), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2)))))]:
   (string * thm * template) list
### theory "Draft.Landau_MoreMoreTemplates"
### 0.440s elapsed time, 0.633s cpu time, 0.044s GC time
val it = (): unit
