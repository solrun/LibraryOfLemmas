   [("Wetzels_Problem.gcard_eq_vcard", "gcard (elts ?x) = vcard ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Wetzels_Problem.gcard_single_1", "gcard {?x} = 1",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)),
       template_hole 0)),
    ("Wetzels_Problem.cadd_ac", "?i \<oplus> ?j = ?j \<oplus> ?i",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Wetzels_Problem.finite_iff_less_Aleph0",
     "finite (elts ?x) = (vcard ?x < \<omega>)",
     template_equation
      (template_app
        (template_hole 4, template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Wetzels_Problem.inv_V_of_image_eq", "inv V_of ` V_of ` ?X = ?X",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_hole 1)),
         template_app
          (template_app (template_hole 0, template_hole 1),
           template_var 0)),
       template_var 0)),
    ("Wetzels_Problem.countable_iff_vcard_less1",
     "countable (elts ?x) = (vcard ?x < \<omega>1)",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 0)),
         template_app (template_hole 1, template_hole 0)))),
    ("Wetzels_Problem.gcard_Times",
     "gcard (?X \<times> ?Y) = gcard ?X \<otimes> gcard ?Y",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), t_empty)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Wetzels_Problem.cadd_left_commute",
     "?j \<oplus> (?i \<oplus> ?k) = ?i \<oplus> (?j \<oplus> ?k)",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Wetzels_Problem.cadd_ac",
     "?i \<oplus> ?j \<oplus> ?k = ?i \<oplus> (?j \<oplus> ?k)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Wetzels_Problem.countable_infinite_gcard",
     "(countable ?X & infinite ?X) = (gcard ?X = \<aleph>0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 0)))
            )],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("Wetzels_Problem.transrec",
     "Wetzels_Problem.transrec ?H ?a =
      ?H (restrict (Wetzels_Problem.transrec ?H) (elts ?a)) ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_var 1,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 0))),
         template_var 0))),
    ("Wetzels_Problem.countable_infinite_vcard",
     "(countable (elts ?x) & infinite (elts ?x)) = (vcard ?x = \<aleph>0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app (template_hole 6, template_var 0))),
              template_app
               (template_hole 5,
                template_app
                 (template_hole 4,
                  template_app (template_hole 6, template_var 0))))
            )],
       template_equation
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_hole 0)))),
    ("Wetzels_Problem.small_Times_iff",
     "small (?X \<times> ?Y) = (small ?X & small ?Y | ?X = {} | ?Y = {})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 9,
              template_app
               (template_app (template_hole 8, template_var 1), t_empty))
            )],
       template_dunno))]
