   [("SmallStepLam.val_stuck", "isval ?e ==> stuck ?e",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("SmallStepLam.isval_var_inv", "isval (EVar ?x) ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate (template_var 0))),
    ("SmallStepLam.isval_app_inv", "isval (EApp ?e1.0 ?e2.0) ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            )],
       template_predicate (template_var 0))),
    ("SmallStepLam.red_int_inv", "ENat ?n \<longrightarrow> ?e ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 2)),
              template_var 1)
            )],
       template_predicate (template_var 0))),
    ("SmallStepLam.red_var_inv", "EVar ?x \<longrightarrow> ?e ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app (template_hole 0, template_var 2)),
              template_var 1)
            )],
       template_predicate (template_var 0))),
    ("SmallStepLam.isval_if_inv", "isval (EIf ?e1.0 ?e2.0 ?e3.0) ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2),
                template_var 1))
            )],
       template_predicate (template_var 0))),
    ("SmallStepLam.isval_prim_inv", "isval (EPrim ?f ?e1.0 ?e2.0) ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2),
                template_var 1))
            )],
       template_predicate (template_var 0))),
    ("SmallStepLam.red_lam_inv", "ELam ?x ?e \<longrightarrow> ?e' ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 2)),
              template_var 1)
            )],
       template_predicate (template_var 0))),
    ("SmallStepLam.reduction_pres_fv",
     "[| ?e \<longrightarrow>* ?e'; FV ?e = {} |] ==> FV ?e' = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 1, template_var 1), template_hole 0)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("SmallStepLam.red_pres_fv",
     "[| ?e \<longrightarrow> ?e'; FV ?e = {} |] ==> FV ?e' = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 1, template_var 1), template_hole 0)],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("SmallStepLam.subst_fv_aux",
     "FV ?v = {} ==> FV (subst ?x ?v ?e) <= FV ?e - {?x}",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 2), template_hole 4)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 1),
               template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 5, template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_hole 4))))),
    ("SmallStepLam.subst_fv",
     "[| FV ?e <= {?x}; FV ?v = {} |] ==> FV (subst ?x ?v ?e) = {}",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_app
           (template_app (template_hole 3, template_var 1),
            template_hole 2)),
        template_equation
         (template_app (template_hole 4, template_var 0), template_hole 2)],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0),
             template_var 2)),
         template_hole 2))),
    ("SmallStepLam.red_app_inv",
     "[| EApp ?e1.0 ?e2.0 \<longrightarrow> ?e';
         !!x e.
            [| ?e1.0 = ELam x e; ?e' = subst x ?e2.0 e; isval ?e2.0;
               FV ?e2.0 = {} |]
            ==> ?P;
         !!e1'.
            [| ?e' = EApp e1' ?e2.0; ?e1.0 \<longrightarrow> e1' |] ==> ?P;
         !!e2'.
            [| ?e' = EApp ?e1.0 e2'; ?e2.0 \<longrightarrow> e2' |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0)))]
