   [("DenotCompleteFSet.multi_reduce_pres_denot",
     "?e \<longrightarrow>* ?e' ==> E ?e = E ?e'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("DenotCompleteFSet.reduce_pres_denot",
     "?e \<longrightarrow> ?e' ==> E ?e = E ?e'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("DenotCompleteFSet.e_val", "isval ?v ==> EX v'. v' : E ?v ?\<rho>",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("DenotCompleteFSet.le_union1",
     "?v1.0 \<squnion> ?v2.0 = Some ?v12.0 ==> ?v1.0 \<sqsubseteq> ?v12.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("DenotCompleteFSet.le_union2",
     "?v1.0 \<squnion> ?v2.0 = Some ?v12.0 ==> ?v2.0 \<sqsubseteq> ?v12.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 2), template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("DenotCompleteFSet.complete_wrt_op_sem",
     "?e \<Down> ONat ?n ==> E ?e [] = E (ENat ?n) []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_hole 1),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 0, template_var 0)),
           template_hole 1)))),
    ("DenotCompleteFSet.reverse_multi_step_pres_denot",
     "[| ?e \<longrightarrow>* ?e'; ?v : E ?e' ?\<rho> |]
      ==> ?v : E ?e ?\<rho>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("DenotCompleteFSet.reverse_step_pres_denot",
     "[| ?e \<longrightarrow> ?e'; ?v : E ?e' ?\<rho> |]
      ==> ?v : E ?e ?\<rho>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("DenotCompleteFSet.le_union_left",
     "[| ?v1.0 \<squnion> ?v2.0 = Some ?v12.0; ?v1.0 \<sqsubseteq> ?v3.0;
         ?v2.0 \<sqsubseteq> ?v3.0 |]
      ==> ?v12.0 \<sqsubseteq> ?v3.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 2, template_var 3), template_var 2),
          template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 1), template_var 0)
           ))),
    ("DenotCompleteFSet.completeness",
     "[| ?e \<longrightarrow>* ?v; is_val ?v |]
      ==> EX v'. v' : E ?e ?\<rho> & v' : E ?v []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("DenotCompleteFSet.lookup_ext_none",
     "[| lookup ?\<rho> ?y = None; ?x ~= ?y |]
      ==> lookup ((?x, ?v) # ?\<rho>) ?y = None",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_hole 4),
        template_negation
         (template_equation (template_var 1, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0)),
               template_var 3)),
           template_var 2),
         template_hole 4))),
    ("DenotCompleteFSet.combine_values",
     "[| isval ?v; ?v1.0 : E ?v ?\<rho>; ?v2.0 : E ?v ?\<rho> |]
      ==> EX v3. v3 : E ?v ?\<rho> & ?v1.0 \<squnion> ?v2.0 = Some v3",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 1))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("DenotCompleteFSet.reverse_subst_pres_denot",
     "[| ?v' : E ?e' ?\<rho>; is_val ?v; ?e' = subst ?y ?v ?e |]
      ==> EX \<rho>' v''.
             v'' : E ?v [] &
             ?v' : E ?e \<rho>' & \<rho>' \<approx> (?y, v'') # ?\<rho>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 5),
              template_app
               (template_app (template_hole 10, template_var 4),
                template_var 3))
            ),
        template_predicate (template_app (template_hole 9, template_var 2)),
        template_equation
         (template_var 4,
          template_app
           (template_app
             (template_app (template_hole 7, template_var 1),
              template_var 2),
            template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("DenotCompleteFSet.rev_subst_var",
     "[| ?e = EVar ?y & ?v = ?e'; is_val ?v; ?v' : E ?e' ?\<rho> |]
      ==> EX \<rho>' v''.
             v'' : E ?v [] &
             ?v' : E ?e \<rho>' & \<rho>' \<approx> (?y, v'') # ?\<rho>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 5),
                  template_app (template_hole 9, template_var 4))),
              template_app
               (template_app (template_hole 10, template_var 3),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 8, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("DenotCompleteFSet.reverse_subst_lam",
     "[| VFun ?f : E (ELam ?x ?e) ?\<rho>; is_val ?v;
         ELam ?x ?e = ELam ?x (subst ?y ?v ?e'); ?x ~= ?y;
         ALL v1 v2.
            v2 : E (subst ?y ?v ?e') ((?x, v1) # ?\<rho>) -->
            (EX \<rho>' v'.
                v' : E ?v [] &
                v2 : E ?e' \<rho>' &
                \<rho>' \<approx> (?y, v') # (?x, v1) # ?\<rho>) |]
      ==> EX \<rho>' v''.
             v'' : E ?v [] &
             VFun ?f : E (ELam ?x ?e') \<rho>' &
             \<rho>' \<approx> (?y, v'') # ?\<rho>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 6)),
              template_app
               (template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_var 5),
                    template_var 4)),
                template_var 3))
            ),
        template_predicate
         (template_app (template_hole 13, template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 14, template_var 5),
            template_var 4),
          template_app
           (template_app (template_hole 14, template_var 5),
            template_app
             (template_app
               (template_app (template_hole 11, template_var 1),
                template_var 2),
              template_var 0))),
        template_negation
         (template_equation (template_var 5, template_var 1)),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty))))]
