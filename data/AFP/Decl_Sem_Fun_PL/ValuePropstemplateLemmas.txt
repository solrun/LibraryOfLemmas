   [("ValueProps.fun_eq_refl", "?t \<sim> ?t",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("ValueProps.val_eq_refl", "?v \<sim> ?v",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("ValueProps.fun_le_refl", "?t \<lesssim> ?t",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("ValueProps.val_le_refl", "?v \<sqsubseteq> ?v",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("ValueProps.append_eq_symm", "?t2.0 @ ?t1.0 \<sim> ?t1.0 @ ?t2.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("ValueProps.append_leq_symm", "?t2.0 @ ?t1.0 \<lesssim> ?t1.0 @ ?t2.0",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("ValueProps.val_eq_symm", "?v1.0 \<sim> ?v2.0 ==> ?v2.0 \<sim> ?v1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("ValueProps.le_fun_nat_inv",
     "VFun ?t2.0 \<sqsubseteq> VNat ?x1.0 ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_app (template_hole 0, template_var 1))
            )],
       template_predicate (template_var 0))),
    ("ValueProps.vfun_eq", "?t \<sim> ?t' ==> VFun ?t \<sim> VFun ?t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("ValueProps.le_any_nat", "?v \<sqsubseteq> VNat ?n ==> ?v = VNat ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation
        (template_var 1, template_app (template_hole 1, template_var 0)))),
    ("ValueProps.le_nat_any", "VNat ?n \<sqsubseteq> ?v ==> ?v = VNat ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_var 1)))),
    ("ValueProps.fun_le_cons",
     "?a # ?t1.0 \<lesssim> ?t2.0 ==> ?t1.0 \<lesssim> ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("ValueProps.le_nat_nat", "VNat ?n \<sqsubseteq> VNat ?n' ==> ?n = ?n'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("ValueProps.val_size_mem_l",
     "(?a, ?b) : set ?t ==> val_size ?a < fun_size ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app (template_hole 3, template_var 0))
            )],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 0)))),
    ("ValueProps.val_size_mem_r",
     "(?a, ?b) : set ?t ==> val_size ?b < fun_size ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app (template_hole 3, template_var 0))
            )],
       template_inequation
        (less_than, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("ValueProps.fun_eq_trans",
     "[| ?t1.0 \<sim> ?t2.0; ?t2.0 \<sim> ?t3.0 |] ==> ?t1.0 \<sim> ?t3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("ValueProps.val_eq_trans",
     "[| ?v1.0 \<sim> ?v2.0; ?v2.0 \<sim> ?v3.0 |] ==> ?v1.0 \<sim> ?v3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("ValueProps.fun_le_trans",
     "[| ?t1.0 \<lesssim> ?t2.0; ?t2.0 \<lesssim> ?t3.0 |]
      ==> ?t1.0 \<lesssim> ?t3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("ValueProps.val_le_trans",
     "[| ?v1.0 \<sqsubseteq> ?v2.0; ?v2.0 \<sqsubseteq> ?v3.0 |]
      ==> ?v1.0 \<sqsubseteq> ?v3.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 0, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("ValueProps.val_size_mem",
     "(?a, ?b) : set ?t ==> val_size ?a + val_size ?b < fun_size ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_app (template_hole 4, template_var 0))
            )],
       template_inequation
        (less_than,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("ValueProps.le_any_nat_inv",
     "[| ?v \<sqsubseteq> VNat ?n; ?v = VNat ?n ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_implication
         ([template_equation
            (template_var 2,
             template_app (template_hole 1, template_var 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("ValueProps.le_nat_any_inv",
     "[| VNat ?n \<sqsubseteq> ?v; ?v = VNat ?n ==> ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("ValueProps.vfun_le_inv",
     "[| VFun ?t1.0 \<sqsubseteq> VFun ?t2.0;
         ?t1.0 \<lesssim> ?t2.0 ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 2)),
              template_app (template_hole 1, template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("ValueProps.append_fun_equiv",
     "[| ?t1' \<sim> ?t1.0; ?t2' \<sim> ?t2.0 |]
      ==> ?t1' @ ?t2' \<sim> ?t1.0 @ ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("ValueProps.append_fun_le",
     "[| ?t1' \<lesssim> ?t1.0; ?t2' \<lesssim> ?t2.0 |]
      ==> ?t1' @ ?t2' \<lesssim> ?t1.0 @ ?t2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("ValueProps.val_fun_le_refl",
     "ALL v t.
         ?n = val_size v + fun_size t -->
         v \<sqsubseteq> v & t \<lesssim> t",
     template_predicate (template_app (template_hole 9, t_empty))),
    ("ValueProps.le_any_fun_inv",
     "[| ?v \<sqsubseteq> VFun ?t;
         !!t1. [| ?v = VFun t1; t1 \<lesssim> ?t |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("ValueProps.le_fun_any_inv",
     "[| VFun ?t \<sqsubseteq> ?v;
         !!t2. [| ?v = VFun t2; ?t \<lesssim> t2 |] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("ValueProps.val_le_fun_le_trans",
     "ALL v2 t2.
         ?n = val_size v2 + fun_size t2 -->
         (ALL v1 v3.
             v1 \<sqsubseteq> v2 -->
             v2 \<sqsubseteq> v3 --> v1 \<sqsubseteq> v3) &
         (ALL t1 t3.
             t1 \<lesssim> t2 --> t2 \<lesssim> t3 --> t1 \<lesssim> t3)",
     template_predicate (template_app (template_hole 9, t_empty))),
    ("ValueProps.fun_le_inv",
     "[| ?t1.0 \<lesssim> ?t2.0;
         ALL v1 v2.
            (v1, v2) : set ?t1.0 -->
            (EX v3 v4.
                (v3, v4) : set ?t2.0 &
                v1 \<sqsubseteq> v3 &
                v3 \<sqsubseteq> v1 &
                v2 \<sqsubseteq> v4 & v4 \<sqsubseteq> v2) ==>
         ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 7, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("ValueProps.le_fun_cons_inv",
     "[| (?v1.0, ?v2.0) # ?t1.0 \<lesssim> ?t2.0;
         ALL v1 v2.
            (v1, v2) : set ((?v1.0, ?v2.0) # ?t1.0) -->
            (EX v3 v4.
                (v3, v4) : set ?t2.0 &
                v1 \<sqsubseteq> v3 &
                v3 \<sqsubseteq> v1 &
                v2 \<sqsubseteq> v4 & v4 \<sqsubseteq> v2) ==>
         ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 4),
                      template_var 3)),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate (template_app (template_hole 6, t_empty))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0)))]
