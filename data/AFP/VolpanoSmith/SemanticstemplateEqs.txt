   [("Semantics.FVc", "fv (Val ?V) = {}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantics.FVv", "fv (Var ?V) = {?V}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Semantics.Val", "\<lbrakk>Val ?v\<rbrakk>?s = Some ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Semantics.Var", "\<lbrakk>Var ?V\<rbrakk>?s = ?s ?V",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Semantics.FVe",
     "fv (?e1.0 \<guillemotleft>?bop\<guillemotright> ?e2.0) =
      fv ?e1.0 Un fv ?e2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 2)),
         template_app (template_hole 2, template_var 0)))),
    ("Semantics.BinOp",
     "\<lbrakk>?e\<^sub>1 \<guillemotleft>?bop\<guillemotright> ?e\<^sub>2\<rbrakk>?s =
      (case \<lbrakk>?e\<^sub>1\<rbrakk>?s of None => None
       | Some v\<^sub>1 =>
           case \<lbrakk>?e\<^sub>2\<rbrakk>?s of None => None
           | Some x => binop ?bop v\<^sub>1 x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), t_empty),
         template_app
          (template_app (template_hole 4, template_var 3),
           template_var 0))))]
