   [("Semantics.FVc", "fv (Val ?V) = {}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Semantics.FVv", "fv (Var ?V) = {?V}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Semantics.Val", "\<lbrakk>Val ?v\<rbrakk>?s = Some ?v",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Semantics.Var", "\<lbrakk>Var ?V\<rbrakk>?s = ?s ?V",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Semantics.FVe",
     "fv (?e1.0 \<guillemotleft>?bop\<guillemotright> ?e2.0) =
      fv ?e1.0 Un fv ?e2.0",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 2)),
         template_app (template_hole 2, template_var 0)))),
    ("Semantics.red_n_to_reds",
     "\<langle>?c,
       ?s\<rangle> \<rightarrow>\<^bsup>?n\<^esup> \<langle>?c',
              ?s'\<rangle> ==>
      \<langle>?c,?s\<rangle> \<rightarrow>* \<langle>?c',?s'\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Semantics.Skip_reds",
     "\<langle>Skip,?s\<rangle> \<rightarrow>* \<langle>?c',?s'\<rangle> ==>
      ?s = ?s' & ?c' = Skip",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_hole 5),
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_hole 3))
           ))),
    ("Semantics.reds_to_red_n",
     "\<langle>?c,?s\<rangle> \<rightarrow>* \<langle>?c',?s'\<rangle> ==>
      EX n. \<langle>?c,
             ?s\<rangle> \<rightarrow>\<^bsup>n\<^esup> \<langle>?c',
                   ?s'\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Semantics.LAss_reds",
     "\<langle>?V:=?e,?s\<rangle> \<rightarrow>*
      \<langle>Skip,?s'\<rangle> ==>
      ?s' = ?s(?V := \<lbrakk>?e\<rbrakk>?s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_hole 6),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_app (template_hole 5, template_hole 3),
                template_var 0))
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 1),
             template_var 3),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1))))),
    ("Semantics.Seq2_reds",
     "\<langle>Skip;; ?c\<^sub>2,?s\<rangle> \<rightarrow>*
      \<langle>Skip,?s'\<rangle> ==>
      \<langle>?c\<^sub>2,?s\<rangle> \<rightarrow>*
      \<langle>Skip,?s'\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app (template_hole 1, template_hole 0),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_app (template_hole 2, template_hole 0),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 2, template_hole 0),
               template_var 0))
           ))),
    ("Semantics.BinOp",
     "\<lbrakk>?e\<^sub>1 \<guillemotleft>?bop\<guillemotright> ?e\<^sub>2\<rbrakk>?s =
      (case \<lbrakk>?e\<^sub>1\<rbrakk>?s of None => None
       | Some v\<^sub>1 =>
           case \<lbrakk>?e\<^sub>2\<rbrakk>?s of None => None
           | Some x => binop ?bop v\<^sub>1 x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 2, template_hole 1), t_empty),
         template_app
          (template_app (template_hole 4, template_var 3),
           template_var 0)))),
    ("Semantics.reds_det",
     "[| \<langle>?c,?s\<rangle> \<rightarrow>*
         \<langle>Skip,?s\<^sub>1\<rangle>;
         \<langle>?c,?s\<rangle> \<rightarrow>*
         \<langle>Skip,?s\<^sub>2\<rangle> |]
      ==> ?s\<^sub>1 = ?s\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_hole 3),
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_hole 1),
                template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Semantics.WhileFalse_reds",
     "[| \<langle>while (?b) ?cx,?s\<rangle> \<rightarrow>*
         \<langle>Skip,?s'\<rangle>;
         \<lbrakk>?b\<rbrakk>?s = Some false |]
      ==> ?s = ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_hole 9),
                template_app
                 (template_app
                   (template_hole 8,
                    template_app
                     (template_app (template_hole 7, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_app (template_hole 8, template_hole 6),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_app (template_hole 4, template_var 3), template_var 1),
          template_app
           (template_hole 3,
            template_app (template_hole 2, template_hole 1)))],
       template_equation (template_var 1, template_var 0))),
    ("Semantics.red_det",
     "[| \<langle>?c,?s\<rangle> \<rightarrow>
         \<langle>?c\<^sub>1,?s\<^sub>1\<rangle>;
         \<langle>?c,?s\<rangle> \<rightarrow>
         \<langle>?c\<^sub>2,?s\<^sub>2\<rangle> |]
      ==> ?c\<^sub>1 = ?c\<^sub>2 & ?s\<^sub>1 = ?s\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Semantics.While_True_or_False",
     "\<langle>while (?b) ?com,?s\<rangle> \<rightarrow>*
      \<langle>Skip,?s'\<rangle> ==>
      \<lbrakk>?b\<rbrakk>?s = Some true |
      \<lbrakk>?b\<rbrakk>?s = Some false",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_hole 10),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_app (template_hole 9, template_hole 7),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 3),
                     template_var 1)),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 3),
                   template_var 1)),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 0))))
           ))),
    ("Semantics.Cond_True_or_False",
     "\<langle>if (?b) ?c\<^sub>1 else ?c\<^sub>2,?s\<rangle> \<rightarrow>*
      \<langle>Skip,?s'\<rangle> ==>
      \<lbrakk>?b\<rbrakk>?s = Some true |
      \<lbrakk>?b\<rbrakk>?s = Some false",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_hole 10),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app
                       (template_app (template_hole 8, template_var 4),
                        template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_app (template_hole 9, template_hole 7),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_var 4),
                     template_var 1)),
                 template_app
                  (template_hole 3,
                   template_app (template_hole 2, template_hole 1)))),
             template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 4),
                   template_var 1)),
               template_app
                (template_hole 3,
                 template_app (template_hole 2, template_hole 0))))
           ))),
    ("Semantics.CondFalse_reds",
     "[| \<langle>if (?b) ?c\<^sub>1 else ?c\<^sub>2,
          ?s\<rangle> \<rightarrow>*
         \<langle>Skip,?s'\<rangle>;
         \<lbrakk>?b\<rbrakk>?s = Some false |]
      ==> \<langle>?c\<^sub>2,?s\<rangle> \<rightarrow>*
          \<langle>Skip,?s'\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_hole 8),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_app (template_hole 6, template_var 4),
                        template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_app (template_hole 7, template_hole 5),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 9, template_hole 8),
               template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 7, template_hole 5),
               template_var 0))
           ))),
    ("Semantics.CondTrue_reds",
     "[| \<langle>if (?b) ?c\<^sub>1 else ?c\<^sub>2,
          ?s\<rangle> \<rightarrow>*
         \<langle>Skip,?s'\<rangle>;
         \<lbrakk>?b\<rbrakk>?s = Some true |]
      ==> \<langle>?c\<^sub>1,?s\<rangle> \<rightarrow>*
          \<langle>Skip,?s'\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_hole 8),
                template_app
                 (template_app
                   (template_hole 7,
                    template_app
                     (template_app
                       (template_app (template_hole 6, template_var 4),
                        template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_app (template_hole 7, template_hole 5),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_app (template_hole 3, template_var 4), template_var 1),
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_hole 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 9, template_hole 8),
               template_app
                (template_app (template_hole 7, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 7, template_hole 5),
               template_var 0))
           ))),
    ("Semantics.Seq_reds",
     "[| \<langle>?c\<^sub>1;; ?c\<^sub>2,?s\<rangle> \<rightarrow>*
         \<langle>Skip,?s'\<rangle>;
         !!s''.
            [| \<langle>?c\<^sub>1,?s\<rangle> \<rightarrow>*
               \<langle>Skip,s''\<rangle>;
               \<langle>?c\<^sub>2,s''\<rangle> \<rightarrow>*
               \<langle>Skip,?s'\<rangle> |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_hole 4),
                template_app
                 (template_app
                   (template_hole 3,
                    template_app
                     (template_app (template_hole 2, template_var 4),
                      template_var 3)),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_hole 1),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 0, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics.WhileTrue_reds",
     "[| \<langle>while (?b) ?cx,?s\<rangle> \<rightarrow>*
         \<langle>Skip,?s'\<rangle>;
         \<lbrakk>?b\<rbrakk>?s = Some true |]
      ==> EX sx.
             \<langle>?cx,?s\<rangle> \<rightarrow>*
             \<langle>Skip,sx\<rangle> &
             \<langle>while (?b) ?cx,sx\<rangle> \<rightarrow>*
             \<langle>Skip,?s'\<rangle>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_hole 10),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 3),
                      template_var 2)),
                  template_var 1)),
              template_app
               (template_app (template_hole 9, template_hole 7),
                template_var 0))
            ),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 1),
          template_app
           (template_hole 4,
            template_app (template_hole 3, template_hole 2)))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Semantics.Seq_red_nE",
     "[| \<langle>?c\<^sub>1;; ?c\<^sub>2,
          ?s\<rangle> \<rightarrow>\<^bsup>?n\<^esup> \<langle>Skip,
                 ?s'\<rangle>;
         !!i j s''.
            [| \<langle>?c\<^sub>1,
                ?s\<rangle> \<rightarrow>\<^bsup>i\<^esup> \<langle>Skip,
                      s''\<rangle>;
               \<langle>?c\<^sub>2,
                s''\<rangle> \<rightarrow>\<^bsup>j\<^esup> \<langle>Skip,
                       ?s'\<rangle>;
               ?n = i + j + 1 |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 7,
                      template_app
                       (template_app (template_hole 6, template_var 5),
                        template_var 4)),
                    template_var 3),
                  template_var 2),
                template_hole 5),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Semantics.while_red_nE",
     "\<langle>while (?b) ?cx,
       ?s\<rangle> \<rightarrow>\<^bsup>?n\<^esup> \<langle>Skip,
              ?s'\<rangle> ==>
      \<lbrakk>?b\<rbrakk>?s = Some false & ?s = ?s' & ?n = 1 |
      (EX i j s''.
          \<lbrakk>?b\<rbrakk>?s = Some true &
          \<langle>?cx,
           ?s\<rangle> \<rightarrow>\<^bsup>i\<^esup> \<langle>Skip,
                 s''\<rangle> &
          \<langle>while (?b) ?cx,
           s''\<rangle> \<rightarrow>\<^bsup>j\<^esup> \<langle>Skip,
                  ?s'\<rangle> &
          ?n = i + j + 2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 19,
                      template_app
                       (template_app (template_hole 18, template_var 4),
                        template_var 3)),
                    template_var 2),
                  template_var 1),
                template_hole 17),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app
                  (template_hole 15,
                   template_app
                    (template_app
                      (template_hole 14,
                       template_app
                        (template_app (template_hole 13, template_var 4),
                         template_var 2)),
                     template_app
                      (template_hole 12,
                       template_app (template_hole 11, template_hole 10)))),
                 template_app
                  (template_app
                    (template_hole 15,
                     template_app
                      (template_app (template_hole 9, template_var 2),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 8, template_var 1),
                     template_hole 7)))),
             template_app (template_hole 6, t_empty))
           ))),
    ("Semantics.while_red_n_induct",
     "[| \<langle>while (?b) ?cx,
          ?s\<rangle> \<rightarrow>\<^bsup>?n\<^esup> \<langle>Skip,
                 ?s'\<rangle>;
         !!s. \<lbrakk>?b\<rbrakk>s = Some false ==> ?P s s;
         !!s i j s''.
            [| \<lbrakk>?b\<rbrakk>s = Some true;
               \<langle>?cx,
                s\<rangle> \<rightarrow>\<^bsup>i\<^esup> \<langle>Skip,
                     s''\<rangle>;
               \<langle>while (?b) ?cx,
                s''\<rangle> \<rightarrow>\<^bsup>j\<^esup> \<langle>Skip,
                       ?s'\<rangle>;
               ?P s'' ?s' |]
            ==> ?P s ?s' |]
      ==> ?P ?s ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_hole 10,
                      template_app
                       (template_app (template_hole 9, template_var 5),
                        template_var 4)),
                    template_var 3),
                  template_var 2),
                template_hole 8),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 3), template_var 1)
           ))),
    ("Semantics.while_reds_induct",
     "[| \<langle>while (?b) ?cx,?s\<rangle> \<rightarrow>*
         \<langle>Skip,?s'\<rangle>;
         !!s. \<lbrakk>?b\<rbrakk>s = Some false ==> ?P s s;
         !!s s''.
            [| \<lbrakk>?b\<rbrakk>s = Some true;
               \<langle>?cx,s\<rangle> \<rightarrow>*
               \<langle>Skip,s''\<rangle>;
               \<langle>while (?b) ?cx,s''\<rangle> \<rightarrow>*
               \<langle>Skip,?s'\<rangle>;
               ?P s'' ?s' |]
            ==> ?P s ?s' |]
      ==> ?P ?s ?s'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_hole 10),
                template_app
                 (template_app
                   (template_hole 9,
                    template_app
                     (template_app (template_hole 8, template_var 4),
                      template_var 3)),
                  template_var 2)),
              template_app
               (template_app (template_hole 9, template_hole 7),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 6, t_empty)),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("Semantics.red_induct",
     "[| \<langle>?x1a,?x1b\<rangle> \<rightarrow>
         \<langle>?x2a,?x2b\<rangle>;
         !!V e s. ?P (V:=e) s Skip (s(V := \<lbrakk>e\<rbrakk>s));
         !!c\<^sub>1 s c\<^sub>1' s' c\<^sub>2.
            [| \<langle>c\<^sub>1,s\<rangle> \<rightarrow>
               \<langle>c\<^sub>1',s'\<rangle>;
               ?P c\<^sub>1 s c\<^sub>1' s' |]
            ==> ?P (c\<^sub>1;; c\<^sub>2) s (c\<^sub>1';; c\<^sub>2) s';
         !!c\<^sub>2 s. ?P (Skip;; c\<^sub>2) s c\<^sub>2 s;
         !!b s c\<^sub>1 c\<^sub>2.
            \<lbrakk>b\<rbrakk>s = Some true ==>
            ?P (if (b) c\<^sub>1 else c\<^sub>2) s c\<^sub>1 s;
         !!b s c\<^sub>1 c\<^sub>2.
            \<lbrakk>b\<rbrakk>s = Some false ==>
            ?P (if (b) c\<^sub>1 else c\<^sub>2) s c\<^sub>2 s;
         !!b s c.
            \<lbrakk>b\<rbrakk>s = Some true ==>
            ?P (while (b) c) s (c;; while (b) c) s;
         !!b s c.
            \<lbrakk>b\<rbrakk>s = Some false ==>
            ?P (while (b) c) s Skip s |]
      ==> ?P ?x1a ?x1b ?x2a ?x2b",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 16, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_var 0, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)
           )))]
