Loading theory "HOL-Library.Function_Algebras" (required by "Draft.Dedekind_RealMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.Dedekind_RealMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.Dedekind_RealMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Tree" (required by "Draft.Dedekind_RealMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.126s elapsed time, 0.525s cpu time, 0.047s GC time
Loading theory "Draft.Dedekind_Real" (required by "Draft.Dedekind_RealMoreTemplates")
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Set_Algebras"
### 0.212s elapsed time, 0.869s cpu time, 0.047s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.Dedekind_RealMoreTemplates" via "Draft.ExtrEqs")
instantiation
  preal :: {inverse,minus,one,plus,times,ord}
  less_eq_preal == less_eq :: preal => preal => bool
  less_preal == less :: preal => preal => bool
  times_preal == times :: preal => preal => preal
  plus_preal == plus :: preal => preal => preal
  one_preal == one_class.one :: preal
  minus_preal == minus :: preal => preal => preal
  inverse_preal == inverse :: preal => preal
  divide_preal == divide :: preal => preal => preal
### theory "HOL-Library.Nat_Bijection"
### 0.333s elapsed time, 1.331s cpu time, 0.131s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.Dedekind_RealMoreTemplates" via "Draft.ExtrEqs")
instantiation
  preal :: distrib_lattice
  inf_preal == inf :: preal => preal => preal
  sup_preal == sup :: preal => preal => preal
instantiation
  Dedekind_Real.real ::
    {inverse,abs,minus,one,plus,sgn,times,uminus,zero,ord}
  less_eq_real == less_eq ::
    Dedekind_Real.real => Dedekind_Real.real => bool
  less_real == less :: Dedekind_Real.real => Dedekind_Real.real => bool
  zero_real == zero_class.zero :: Dedekind_Real.real
  uminus_real == uminus :: Dedekind_Real.real => Dedekind_Real.real
  times_real == times ::
    Dedekind_Real.real => Dedekind_Real.real => Dedekind_Real.real
  sgn_real == sgn :: Dedekind_Real.real => Dedekind_Real.real
  plus_real == plus ::
    Dedekind_Real.real => Dedekind_Real.real => Dedekind_Real.real
  one_real == one_class.one :: Dedekind_Real.real
  minus_real == minus ::
    Dedekind_Real.real => Dedekind_Real.real => Dedekind_Real.real
  abs_real == abs :: Dedekind_Real.real => Dedekind_Real.real
  inverse_real == inverse :: Dedekind_Real.real => Dedekind_Real.real
  divide_real == divide ::
    Dedekind_Real.real => Dedekind_Real.real => Dedekind_Real.real
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
instantiation
  Dedekind_Real.real :: distrib_lattice
  inf_real == inf ::
    Dedekind_Real.real => Dedekind_Real.real => Dedekind_Real.real
  sup_real == sup ::
    Dedekind_Real.real => Dedekind_Real.real => Dedekind_Real.real
Found termination order: "size <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
### theory "Draft.Dedekind_Real"
### 0.686s elapsed time, 2.686s cpu time, 0.322s GC time
Dedekind_Real.cut ?A ==> EX x. x : ?A
Found termination order: "size <*mlex*> {}"
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### theory "HOL-Library.BigO"
### 1.004s elapsed time, 3.587s cpu time, 0.876s GC time
Found termination order: "size <*mlex*> {}"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.054s elapsed time, 3.483s cpu time, 0.835s GC time
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 1.953s elapsed time, 5.509s cpu time, 1.095s GC time
Loading theory "Draft.Templates" (required by "Draft.Dedekind_RealMoreTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.049s elapsed time, 0.063s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Dedekind_RealMoreTemplates")
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.458s elapsed time, 0.464s cpu time, 0.000s GC time
Loading theory "Draft.Dedekind_RealMoreTemplates"
val templateLemmas =
   [("Dedekind_Real.cut_Rep_preal", "Dedekind_Real.cut (Rep_preal ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Dedekind_Real.real_le_refl", "?w <= ?w",
     template_inequation (less_equals, template_var 0, template_var 0)),
    ("Dedekind_Real.real_of_preal_zero_less", "0 < real_of_preal ?m",
     template_inequation
      (less_than, template_hole 1,
       template_app (template_hole 0, template_var 0))),
    ("Dedekind_Real.real_mult_1", "1 * ?z = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Dedekind_Real.preal_mult_1", "1 * ?z = ?z",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Dedekind_Real.preal_self_less_add_left", "?r < ?r + ?s",
     template_inequation
      (less_than, template_var 1,
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Dedekind_Real.reals_Archimedean2", "EX n. ?x < of_nat n",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("Dedekind_Real.mem_Rep_preal_Ex", "EX x. x : Rep_preal ?X",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("Dedekind_Real.preal_mult_inverse_right", "?r * inverse ?r = 1",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0),
         template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Dedekind_Real.preal_mult_inverse", "inverse ?r * ?r = 1",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_var 0),
       template_hole 0)),
    ("Dedekind_Real.add_eq_exists", "EX x. ?a + x = ?b",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("Dedekind_Real.real_mult_commute", "?z * ?w = ?w * ?z",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Dedekind_Real.preal_add_commute", "?x + ?y = ?y + ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Dedekind_Real.preal_mult_commute", "?x * ?y = ?y * ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("Dedekind_Real.Rep_preal_self_subset",
     "Rep_preal ?r <= Rep_preal (?r + ?s)",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Dedekind_Real.mem_inverse_set",
     "Dedekind_Real.cut ?A ==> Dedekind_Real.cut (inverse_set ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0))
           ))),
    ("Dedekind_Real.Rep_preal_sum_not_subset",
     "~ Rep_preal (?r + ?s) <= Rep_preal ?r",
     template_negation
      (
         template_inequation
          (less_equals,
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)),
           template_app (template_hole 1, template_var 1))
         )),
    ("Dedekind_Real.subset_inverse_mult",
     "Rep_preal 1 <= Rep_preal (inverse ?r * ?r)",
     template_inequation
      (less_equals, template_app (template_hole 3, template_hole 2),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)),
           template_var 0)))),
    ("Dedekind_Real.inverse_mult_subset",
     "Rep_preal (inverse ?r * ?r) <= Rep_preal 1",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 0)),
       template_app (template_hole 3, template_hole 0))),
    ("Dedekind_Real.real_le_eq_diff", "(?x <= ?y) = (?x - ?y <= 0)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_hole 0))),
    ("Dedekind_Real.real_of_preal_less_iff",
     "(real_of_preal ?m1.0 < real_of_preal ?m2.0) = (?m1.0 < ?m2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Dedekind_Real.real_of_preal_le_iff",
     "(real_of_preal ?m1.0 <= real_of_preal ?m2.0) = (?m1.0 <= ?m2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Dedekind_Real.realrel_in_real",
     "Dedekind_Real.realrel `` {(?x, ?y)} : Real",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 1),
                     template_var 0)),
                 template_hole 1))),
           template_hole 0)
         )),
    ("Dedekind_Real.preal_Ex_mem", "Dedekind_Real.cut ?A ==> EX x. x : ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate (template_app (template_hole 1, t_empty)))),
    ("Dedekind_Real.real_gt_zero_preal_Ex",
     "(0 < ?x) = (EX y. ?x = real_of_preal y)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_hole 3), template_var 0),
       template_app (template_hole 2, t_empty))),
    ("Dedekind_Real.real_of_preal_add",
     "real_of_preal (?x + ?y) = real_of_preal ?x + real_of_preal ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Dedekind_Real.real_of_preal_mult",
     "real_of_preal (?x * ?y) = real_of_preal ?x * real_of_preal ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Dedekind_Real.real_zero_iff",
     "Abs_Real (Dedekind_Real.realrel `` {(?x, ?x)}) = 0",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_var 0)),
             template_hole 1))),
       template_hole 0)),
    ("Dedekind_Real.preal_nonempty",
     "Dedekind_Real.cut ?A ==> EX x:?A. 0 < x",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), t_empty)
           ))),
    ("Dedekind_Real.Rep_preal_exists_bound", "EX x>0. x ~: Rep_preal ?X",
     template_predicate (template_app (template_hole 6, t_empty))),
    ("Dedekind_Real.preal_add_less_cancel_right",
     "(?r + ?t < ?s + ?t) = (?r < ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 0))),
    ("Dedekind_Real.preal_add_less_cancel_left",
     "(?t + ?r < ?t + ?s) = (?r < ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Dedekind_Real.preal_add_le_cancel_right",
     "(?r + ?t <= ?s + ?t) = (?r <= ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 0), template_var 1)),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 0))),
    ("Dedekind_Real.preal_add_le_cancel_left",
     "(?t + ?r <= ?t + ?s) = (?r <= ?s)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Dedekind_Real.real_mult_assoc",
     "?z1.0 * ?z2.0 * ?z3.0 = ?z1.0 * (?z2.0 * ?z3.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Dedekind_Real.preal_add_assoc", "?x + ?y + ?z = ?x + (?y + ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Dedekind_Real.preal_mult_assoc", "?x * ?y * ?z = ?x * (?y * ?z)",
     template_equation
      (template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Dedekind_Real.real_less_sum_gt_zero", "?w < ?s ==> 0 < ?s + - ?w",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than, template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Dedekind_Real.mem_diff_set",
     "?r < ?s ==>
      Dedekind_Real.cut (diff_set (Rep_preal ?s) (Rep_preal ?r))",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Dedekind_Real.real_sum_gt_zero_less", "0 < ?s + - ?w ==> ?w < ?s",
     template_implication
      ([template_inequation
         (less_than, template_hole 2,
          template_app
           (template_app (template_hole 1, template_var 1),
            template_app (template_hole 0, template_var 0)))],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Dedekind_Real.less_add_left", "?r < ?s ==> ?r + (?s - ?r) = ?s",
     template_implication
      ([template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("Dedekind_Real.preal_add_less2_mono1", "?r < ?s ==> ?r + ?t < ?s + ?t",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Dedekind_Real.preal_add_less2_mono2", "?r < ?s ==> ?t + ?r < ?t + ?s",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Dedekind_Real.real_add_left_mono", "?x <= ?y ==> ?z + ?x <= ?z + ?y",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 0, template_var 0), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Dedekind_Real.real_mult_inverse_left",
     "?x ~= 0 ==> inverse ?x * ?x = 1",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_var 0),
         template_hole 0))),
    ("Dedekind_Real.preal_add_left_cancel", "?c + ?a = ?c + ?b ==> ?a = ?b",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Dedekind_Real.preal_add_right_cancel",
     "?r + ?t = ?s + ?t ==> ?r = ?s",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_equation (template_var 2, template_var 0))),
    ("Dedekind_Real.preal_add_right_less_cancel",
     "?r + ?t < ?s + ?t ==> ?r < ?s",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 1))],
       template_inequation (less_than, template_var 2, template_var 0))),
    ("Dedekind_Real.preal_add_left_less_cancel",
     "?t + ?r < ?t + ?s ==> ?r < ?s",
     template_implication
      ([template_inequation
         (less_than,
          template_app
           (template_app (template_hole 0, template_var 2), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 2),
            template_var 0))],
       template_inequation (less_than, template_var 1, template_var 0))),
    ("Dedekind_Real.mem_add_set",
     "[| Dedekind_Real.cut ?A; Dedekind_Real.cut ?B |]
      ==> Dedekind_Real.cut (add_set ?A ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Dedekind_Real.mem_mult_set",
     "[| Dedekind_Real.cut ?A; Dedekind_Real.cut ?B |]
      ==> Dedekind_Real.cut (mult_set ?A ?B)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Dedekind_Real.preal_imp_pos",
     "[| Dedekind_Real.cut ?A; ?r : ?A |] ==> 0 < ?r",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_inequation (less_than, template_hole 0, template_var 0))),
    ("Dedekind_Real.real_add_mult_distrib",
     "(?z1.0 + ?z2.0) * ?w = ?z1.0 * ?w + ?z2.0 * ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Dedekind_Real.preal_add_mult_distrib2",
     "?w * (?x + ?y) = ?w * ?x + ?w * ?y",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Dedekind_Real.preal_add_mult_distrib",
     "(?x + ?y) * ?w = ?x * ?w + ?y * ?w",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Dedekind_Real.reals_Archimedean",
     "0 < ?x ==> EX n. inverse (of_nat (Suc n)) < ?x",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 0)],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Dedekind_Real.Abs_preal_induct",
     "(!!x. Dedekind_Real.cut x ==> ?P (Abs_preal x)) ==> ?P ?x",
     template_implication
      ([template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Dedekind_Real.real_le_trans", "[| ?i <= ?j; ?j <= ?k |] ==> ?i <= ?k",
     template_implication
      ([template_inequation (less_equals, template_var 2, template_var 1),
        template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Dedekind_Real.real_le_antisym",
     "[| ?z <= ?w; ?w <= ?z |] ==> ?z = ?w",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_equation (template_var 1, template_var 0))),
    ("Dedekind_Real.preal_exists_bound",
     "Dedekind_Real.cut ?A ==> EX x>0. x ~: ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Dedekind_Real.distrib_subset1",
     "Rep_preal (?w * (?x + ?y)) <= Rep_preal (?w * ?x + ?w * ?y)",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0))))),
    ("Dedekind_Real.distrib_subset2",
     "Rep_preal (?w * ?x + ?w * ?y) <= Rep_preal (?w * (?x + ?y))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2,
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0))),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))))),
    ("Dedekind_Real.cut_of_rat",
     "0 < ?q ==> Dedekind_Real.cut {r. 0 < r & r < ?q}",
     template_implication
      ([template_inequation (less_than, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_hole 2, template_app (template_hole 1, t_empty))
           ))),
    ("Dedekind_Real.preal_exists_greater",
     "[| Dedekind_Real.cut ?A; ?y : ?A |] ==> EX u:?A. ?y < u",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), t_empty)
           ))),
    ("Dedekind_Real.real_mult_order",
     "[| 0 < ?x; 0 < ?y |] ==> 0 < ?x * ?y",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1),
        template_inequation (less_than, template_hole 1, template_var 0)],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Dedekind_Real.real_of_preal_trichotomy",
     "EX m. ?x = real_of_preal m | ?x = 0 | ?x = - real_of_preal m",
     template_predicate (template_app (template_hole 5, t_empty))),
    ("Dedekind_Real.realrel_iff",
     "(((?x1.0, ?y1.0), ?x2.0, ?y2.0) : Dedekind_Real.realrel) =
      (?x1.0 + ?y2.0 = ?x2.0 + ?y1.0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app
                   (template_hole 4,
                    template_app
                     (template_app (template_hole 3, template_var 3),
                      template_var 2)),
                  template_app
                   (template_app (template_hole 3, template_var 1),
                    template_var 0))),
              template_hole 2)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Dedekind_Real.equiv_realrel_iff",
     "(Dedekind_Real.realrel `` {?x} = Dedekind_Real.realrel `` {?y}) =
      ((?x, ?y) : Dedekind_Real.realrel)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_hole 2))),
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0)),
         template_hole 4))),
    ("Dedekind_Real.real_mult_less_mono2",
     "[| 0 < ?z; ?x < ?y |] ==> ?z * ?x < ?z * ?y",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 2),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_inequation
        (less_than,
         template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Dedekind_Real.preal_eq_le_imp_le",
     "[| ?a + ?b = ?c + ?d; ?c <= ?a |] ==> ?b <= ?d",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_var 0)),
        template_inequation (less_equals, template_var 1, template_var 3)],
       template_inequation (less_equals, template_var 2, template_var 0))),
    ("Dedekind_Real.real_minus",
     "- Abs_Real (Dedekind_Real.realrel `` {(?x, ?y)}) =
      Abs_Real (Dedekind_Real.realrel `` {(?y, ?x)})",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_hole 0)))),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1)),
             template_hole 0))))),
    ("Dedekind_Real.lemma_gleason9_36",
     "[| Dedekind_Real.cut ?A; 1 < ?x |] ==> EX r:?A. r * ?x ~: ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("Dedekind_Real.Gleason9_34",
     "[| Dedekind_Real.cut ?A; 0 < ?u |] ==> EX r:?A. r + ?u ~: ?A",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 1)),
        template_inequation (less_than, template_hole 4, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 1), t_empty)
           ))),
    ("Dedekind_Real.real_mult_inverse_left_ex",
     "[| ?x ~= 0; !!y. y * ?x = 1 ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_negation
         (template_equation (template_var 1, template_hole 3)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Dedekind_Real.mem_Rep_preal_add_iff",
     "(?z : Rep_preal (?r + ?s)) =
      (EX x:Rep_preal ?r. EX y:Rep_preal ?s. ?z = x + y)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 1)),
         t_empty))),
    ("Dedekind_Real.mem_Rep_preal_mult_iff",
     "(?z : Rep_preal (?r * ?s)) =
      (EX x:Rep_preal ?r. EX y:Rep_preal ?s. ?z = x * y)",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 2),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 4, template_var 1)),
         t_empty))),
    ("Dedekind_Real.eq_Abs_Real",
     "(!!x y. ?z = Abs_Real (Dedekind_Real.realrel `` {(x, y)}) ==> ?P) ==>
      ?P",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("Dedekind_Real.preal_psup_le",
     "[| !!X. X : ?P ==> X <= ?Y; ?x : ?P |] ==> ?x <= psup ?P",
     template_implication
      ([template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            )],
       template_inequation
        (less_equals, template_var 0,
         template_app (template_hole 0, template_var 2)))),
    ("Dedekind_Real.not_in_Rep_preal_ub",
     "[| ?x ~: Rep_preal ?xa; ?y : Rep_preal ?xa; 0 < ?x |] ==> ?y < ?x",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_app (template_hole 2, template_var 1))
            ),
        template_inequation (less_than, template_hole 0, template_var 2)],
       template_inequation (less_than, template_var 0, template_var 2))),
    ("Dedekind_Real.mem_Rep_preal_inverse_iff",
     "(?z : Rep_preal (inverse ?r)) =
      (0 < ?z & (EX y>?z. inverse y ~: Rep_preal ?r))",
     template_equation
      (template_app
        (template_app (template_hole 8, template_var 1),
         template_app
          (template_hole 7,
           template_app (template_hole 6, template_var 0))),
       template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_app (template_hole 2, t_empty)))),
    ("Dedekind_Real.psup_le_ub",
     "[| !!X. X : ?P ==> X <= ?Y; ?P ~= {} |] ==> psup ?P <= ?Y",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_negation
         (template_equation (template_var 1, template_hole 1))],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 0))),
    ("Dedekind_Real.preal_downwards_closed",
     "[| Dedekind_Real.cut ?A; ?y : ?A; 0 < ?z; ?z < ?y |] ==> ?z : ?A",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 2)
            ),
        template_inequation (less_than, template_hole 0, template_var 0),
        template_inequation (less_than, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), template_var 2)
           ))),
    ("Dedekind_Real.preal_downwards_closed'",
     "[| Dedekind_Real.cut ?A; ?y : ?A; 0 < ?z; ?z <= ?y |] ==> ?z : ?A",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_inequation (less_than, template_hole 1, template_var 0),
        template_inequation (less_equals, template_var 0, template_var 1)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 0), template_var 2)
           ))),
    ("Dedekind_Real.not_in_preal_ub",
     "[| Dedekind_Real.cut ?A; ?x ~: ?A; ?y : ?A; 0 < ?x |] ==> ?y < ?x",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 2)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 2)
            ),
        template_inequation (less_than, template_hole 0, template_var 1)],
       template_inequation (less_than, template_var 0, template_var 1))),
    ("Dedekind_Real.real_le",
     "(Abs_Real (Dedekind_Real.realrel `` {(?x1.0, ?y1.0)})
       <= Abs_Real (Dedekind_Real.realrel `` {(?x2.0, ?y2.0)})) =
      (?x1.0 + ?y2.0 <= ?x2.0 + ?y1.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 2)),
                 template_hole 2)))),
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_hole 2)))),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 0)),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Dedekind_Real.preal_trans_lemma",
     "[| ?x + ?y1.0 = ?x1.0 + ?y; ?x + ?y2.0 = ?x2.0 + ?y |]
      ==> ?x1.0 + ?y2.0 = ?x2.0 + ?y1.0",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 0, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 0, template_var 3),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 5), template_var 1),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 2))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 4)))),
    ("Dedekind_Real.preal_sup",
     "[| !!X. X : ?P ==> X <= ?Y; ?P ~= {} |]
      ==> Dedekind_Real.cut (\<Union> (Rep_preal ` ?P))",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate
        (
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, t_empty), template_var 1)))
           ))),
    ("Dedekind_Real.preal_complete",
     "[| !!X. X : ?P ==> X <= ?Y; ?P ~= {} |]
      ==> (EX X:?P. ?Z < X) = (?Z < psup ?P)",
     template_implication
      ([template_predicate (template_app (template_hole 10, t_empty)),
        template_negation
         (template_equation (template_var 2, template_hole 4))],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2), t_empty),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 2))))),
    ("Dedekind_Real.real_add",
     "Abs_Real (Dedekind_Real.realrel `` {(?x, ?y)}) +
      Abs_Real (Dedekind_Real.realrel `` {(?u, ?v)}) =
      Abs_Real (Dedekind_Real.realrel `` {(?x + ?u, ?y + ?v)})",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_hole 4),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_var 2)),
                 template_hole 1)))),
         template_app
          (template_hole 6,
           template_app
            (template_app (template_hole 5, template_hole 4),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0)),
               template_hole 1)))),
       template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 1)),
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0))),
             template_hole 1))))),
    ("Dedekind_Real.Gleason9_34_exists",
     "[| Dedekind_Real.cut ?A; ALL x:?A. x + ?u : ?A; 0 <= ?z |]
      ==> EX b:?A. b + rat_of_int ?z * ?u : ?A",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2), t_empty)
            ),
        template_inequation (less_equals, template_hole 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)
           ))),
    ("Dedekind_Real.Gleason9_34_contra",
     "[| Dedekind_Real.cut ?A; ALL x:?A. x + ?u : ?A; 0 < ?u; 0 < ?y;
         ?y ~: ?A |]
      ==> False",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2), t_empty)
            ),
        template_inequation (less_than, template_hole 2, template_var 1),
        template_inequation (less_than, template_hole 2, template_var 0),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 5, template_var 0),
                  template_var 2)
                )
            )],
       template_predicate (template_hole 0))),
    ("Dedekind_Real.reals_complete",
     "[| EX X. X : ?S; bdd_above ?S |]
      ==> EX x. (ALL s:?S. s <= x) &
                (ALL y. (ALL s:?S. s <= y) --> x <= y)",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Dedekind_Real.mem_Rep_preal_diff_iff",
     "?r < ?s ==>
      (?z : Rep_preal (?s - ?r)) =
      (EX x>0. 0 < ?z & x ~: Rep_preal ?r & x + ?z : Rep_preal ?s)",
     template_implication
      ([template_inequation (less_than, template_var 2, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 0),
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_var 1),
               template_var 2))),
         template_app (template_hole 5, t_empty)))),
    ("Dedekind_Real.real_le_lemma",
     "[| ?u1.0 + ?v2.0 <= ?u2.0 + ?v1.0; ?x1.0 + ?v1.0 = ?u1.0 + ?y1.0;
         ?x2.0 + ?v2.0 = ?u2.0 + ?y2.0 |]
      ==> ?x1.0 + ?y2.0 <= ?x2.0 + ?y1.0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 1, template_var 7), template_var 6),
          template_app
           (template_app (template_hole 1, template_var 5),
            template_var 4)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 3), template_var 4),
          template_app
           (template_app (template_hole 1, template_var 7),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 1, template_var 1), template_var 6),
          template_app
           (template_app (template_hole 1, template_var 5),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 1, template_var 3), template_var 0),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Dedekind_Real.real_trans_lemma",
     "[| ?x + ?v <= ?u + ?y; ?u + ?v' <= ?u' + ?v;
         ?x2.0 + ?v2.0 = ?u2.0 + ?y2.0 |]
      ==> ?x + ?v' <= ?u' + ?y",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 9), template_var 8),
          template_app
           (template_app (template_hole 2, template_var 7),
            template_var 6)),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 7), template_var 5),
          template_app
           (template_app (template_hole 2, template_var 4),
            template_var 8)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 1),
            template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, template_var 9), template_var 5),
         template_app
          (template_app (template_hole 2, template_var 4),
           template_var 6)))),
    ("Dedekind_Real.real_mult",
     "Abs_Real (Dedekind_Real.realrel `` {(?x1.0, ?y1.0)}) *
      Abs_Real (Dedekind_Real.realrel `` {(?x2.0, ?y2.0)}) =
      Abs_Real
       (Dedekind_Real.realrel ``
        {(?x1.0 * ?x2.0 + ?y1.0 * ?y2.0, ?x1.0 * ?y2.0 + ?y1.0 * ?x2.0)})",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 5),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 3),
                     template_var 2)),
                 template_hole 2)))),
         template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_hole 5),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 1),
                   template_var 0)),
               template_hole 2)))),
       template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_hole 5),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_hole 1,
                       template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 0))),
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1)))),
             template_hole 2))))),
    ("Dedekind_Real.posreal_complete",
     "[| ALL x:?P. 0 < x; EX x. x : ?P; EX y. ALL x:?P. x < y |]
      ==> EX s. ALL y. (EX x:?P. y < x) = (y < s)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0), t_empty)
            ),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Dedekind_Real.real_mult_congruent2_lemma",
     "?x1.0 + ?y2.0 = ?x2.0 + ?y1.0 ==>
      ?x * ?x1.0 + ?y * ?y1.0 + (?x * ?y2.0 + ?y * ?x2.0) =
      ?x * ?x2.0 + ?y * ?y2.0 + (?x * ?y1.0 + ?y * ?x1.0)",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 1, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 1, template_var 3),
            template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 5)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 4)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 3))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 4))),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 5)))))),
    ("Dedekind_Real.subset_inverse_mult_lemma",
     "[| 0 < ?x; ?x < 1 |]
      ==> EX v u y.
             0 < v &
             v < y &
             inverse y ~: Rep_preal ?R & u : Rep_preal ?R & ?x = v * u",
     template_implication
      ([template_inequation (less_than, template_hole 9, template_var 1),
        template_inequation (less_than, template_var 1, template_hole 8)],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Dedekind_Real.preal_add_mult_distrib_mean",
     "[| ?a : Rep_preal ?w; ?b : Rep_preal ?w; ?d : Rep_preal ?x;
         ?e : Rep_preal ?y |]
      ==> EX c:Rep_preal ?w. ?a * ?d + ?b * ?e = c * (?d + ?e)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 6),
              template_app (template_hole 4, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app (template_hole 4, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 4, template_var 5)),
             t_empty)
           )))]:
   (string * thm * template) list
### theory "Draft.Dedekind_RealMoreTemplates"
### 0.328s elapsed time, 0.444s cpu time, 0.056s GC time
val it = (): unit
