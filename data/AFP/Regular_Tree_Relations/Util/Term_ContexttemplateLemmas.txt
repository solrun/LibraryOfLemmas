   [("Term_Context.position_less_Nil_is_bot", "[] \<le>\<^sub>p ?p",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("Term_Context.position_less_refl", "?p \<le>\<^sub>p ?p",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("Term_Context.Nil_in_poss", "[] : poss ?t",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Term_Context.Nil_not_par", "[] \<bottom> ?p = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("Term_Context.Nil_not_par", "?p \<bottom> [] = False",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Term_Context.par_not_refl", "?p \<bottom> ?p = False",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_var 0),
       template_hole 0)),
    ("Term_Context.position_diff_Nil", "?q -\<^sub>p [] = ?q",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Term_Context.funas_term_adapt_vars",
     "funas_term (adapt_vars ?t) = funas_term ?t",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Term_Context.ground_adapt_vars", "ground (adapt_vars ?t) = ground ?t",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Term_Context.adapt_vars2",
     "adapt_vars (adapt_vars ?t) = adapt_vars ?t",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Term_Context.remove_prefix_Nil", "remove_prefix ?xs ?xs = Some []",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("Term_Context.position_less_Nil_is_bot2",
     "?p \<le>\<^sub>p [] = (?p = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("Term_Context.hole_pos_in_ctxt_apply",
     "hole_pos ?C : poss ?C\<langle>?u\<rangle>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("Term_Context.ground_map_term",
     "ground (map_term ?f ?h ?t) = ground ?t",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Term_Context.remove_prefix_append",
     "remove_prefix ?xs (?xs @ ?ys) = Some ?ys",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Term_Context.ctxt_at_pos_hole_pos",
     "ctxt_at_pos ?C\<langle>?s\<rangle> (hole_pos ?C) = ?C",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app (template_hole 0, template_var 1)),
       template_var 1)),
    ("Term_Context.ground_vars_term_empty",
     "ground ?t ==> vars_term ?t = {}",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Term_Context.ctxt_comp_n_pres_ground",
     "ground_ctxt ?C ==> ground_ctxt (?C ^ ?n)",
     template_implication
      ([template_predicate
         (template_app (template_hole 1, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Term_Context.hole_pos_map_vars",
     "hole_pos (map_vars_ctxt ?f ?C) = hole_pos ?C",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 1),
           template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Term_Context.adapt_vars_adapt_vars",
     "ground ?t ==> adapt_vars (adapt_vars ?t) = ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 0)),
         template_var 0))),
    ("Term_Context.vars_term_ctxt_apply",
     "vars_term ?C\<langle>?t\<rangle> = vars_ctxt ?C Un vars_term ?t",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Term_Context.funas_ctxt_comp",
     "funas_ctxt (?C \<circ>\<^sub>c ?D) = funas_ctxt ?C Un funas_ctxt ?D",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Term_Context.funas_ctxt_apply",
     "funas_term ?C\<langle>?t\<rangle> = funas_ctxt ?C Un funas_term ?t",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Term_Context.ground_ctxt_apply",
     "ground ?C\<langle>?t\<rangle> = (ground_ctxt ?C & ground ?t)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Term_Context.adapt_vars_ctxt",
     "adapt_vars ?C\<langle>?t\<rangle> =
      (adapt_vars_ctxt ?C)\<langle>adapt_vars ?t\<rangle>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Term_Context.adapt_vars_simps",
     "adapt_vars (Fun ?f ?ts) = Fun ?f (map adapt_vars ?ts)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_app (template_hole 0, template_hole 3),
           template_var 0)))),
    ("Term_Context.fun_at_hole_pos_ctxt_apply",
     "fun_at ?C\<langle>?t\<rangle> (hole_pos ?C) = fun_at ?t []",
     template_equation
      (template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app (template_hole 1, template_var 1)),
       template_app
        (template_app (template_hole 3, template_var 0), template_hole 0))),
    ("Term_Context.fun_at_None_nposs_iff",
     "(fun_at ?t ?p = None) = (?p ~: poss ?t)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 1),
             template_var 0)),
         template_hole 3),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Term_Context.position_diff_Cons",
     "(?i # ?ps) -\<^sub>p (?i # ?qs) = ?ps -\<^sub>p ?qs",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Term_Context.adapt_vars_subst",
     "adapt_vars (?l \<cdot> ?\<sigma>) =
      ?l \<cdot> (%x. adapt_vars (?\<sigma> x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Term_Context.replace_at_hole_pos",
     "?C\<langle>?s\<rangle>[hole_pos ?C \<leftarrow> ?t] =
      ?C\<langle>?t\<rangle>",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_app (template_hole 0, template_var 2)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 0))),
    ("Term_Context.position_less_eq_remove_prefix",
     "?p \<le>\<^sub>p ?q ==> remove_prefix ?p ?q ~= None",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("Term_Context.remove_prefix_iff",
     "(remove_prefix ?xs ?ys = Some ?zs) = (?ys = ?xs @ ?zs)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_app (template_hole 2, template_var 0)),
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Term_Context.adapt_vars_gr_map_vars",
     "ground ?t ==> map_vars_term ?f ?t = adapt_vars ?t",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 0),
           template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Term_Context.adapt_vars_gr_ctxt_of_map_vars",
     "ground_ctxt ?C ==> map_vars_ctxt ?f ?C = adapt_vars_ctxt ?C",
     template_implication
      ([template_predicate
         (template_app (template_hole 3, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, t_empty), template_var 0),
           template_var 1),
         template_app (template_hole 0, template_var 1)))),
    ("Term_Context.ctxt_comp_n_pres_funas",
     "funas_ctxt ?C <= ?\<F> ==> funas_ctxt (?C ^ ?n) <= ?\<F>",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 2),
          template_var 1)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_var 1))),
    ("Term_Context.ground_ctxt_comp",
     "[| ground_ctxt ?C; ground_ctxt ?D |]
      ==> ground_ctxt (?C \<circ>\<^sub>c ?D)",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Term_Context.subt_at_subterm_eq",
     "?p : poss ?t ==> ?t \<unrhd> ?t |_ ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1))),
             template_hole 0)
           ))),
    ("Term_Context.replace_term_at_not_poss",
     "?p ~: poss ?s ==> ?s[?p \<leftarrow> ?t] = ?s",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_app (template_hole 2, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0),
         template_var 1))),
    ("Term_Context.remove_prefix_Some",
     "remove_prefix ?xs ?ys = Some ?zs ==> ?ys = ?xs @ ?zs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 2), template_var 1),
          template_app (template_hole 2, template_var 0))],
       template_equation
        (template_var 1,
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Term_Context.subterm_eq_pres_ground",
     "[| ground ?s; ?s \<unrhd> ?t |] ==> ground ?t",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 1),
                  template_var 0)),
              template_hole 0)
            )],
       template_predicate
        (template_app (template_hole 3, template_var 0)))),
    ("Term_Context.poss_Cons", "?i # ?p : poss ?t ==> [?i] : poss ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 0)),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Term_Context.adapt_vars_reverse",
     "[| ground ?t; adapt_vars ?t' = ?t |] ==> adapt_vars ?t = ?t'",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 1)),
        template_equation
         (template_app (template_hole 2, template_var 0), template_var 1)],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Term_Context.funas_term_subst",
     "funas_term (?l \<cdot> ?\<sigma>) =
      funas_term ?l Un \<Union> (funas_term ` ?\<sigma> ` vars_term ?l)",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_app (template_hole 6, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 7),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 1))))))),
    ("Term_Context.position_less_eq_Cons",
     "(?i # ?ps) \<le>\<^sub>p (?j # ?qs) =
      (?i = ?j & ?ps \<le>\<^sub>p ?qs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 0))
           ))),
    ("Term_Context.ctxt_at_pos_subt_at_id",
     "?p : poss ?t ==> (ctxt_at_pos ?t ?p)\<langle>?t |_ ?p\<rangle> = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_var 0))),
    ("Term_Context.ctxt_at_pos_subt_at_pos",
     "?p : poss ?t ==> (ctxt_at_pos ?t ?p)\<langle>?u\<rangle> |_ ?p = ?u",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 2)),
               template_var 0)),
           template_var 2),
         template_var 0))),
    ("Term_Context.ground_substD",
     "[| ground (?l \<cdot> ?\<sigma>); ?x : vars_term ?l |]
      ==> ground (?\<sigma> ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 3,
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 0),
              template_app (template_hole 0, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 3, template_app (template_var 1, template_var 0))
           ))),
    ("Term_Context.funas_term_map",
     "funas_term (map_term ?f ?h ?t) =
      (%(g, n). (?f g, n)) ` funas_term ?t",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, t_empty)),
         template_app (template_hole 0, template_var 0)))),
    ("Term_Context.par_Cons_iff",
     "(?i # ?ps) \<bottom> (?j # ?qs) = (?i ~= ?j | ?ps \<bottom> ?qs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1))),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_var 0))
           ))),
    ("Term_Context.replace_term_at_replace_at_conv",
     "?p : poss ?s ==>
      (ctxt_at_pos ?s ?p)\<langle>?t\<rangle> = ?s[?p \<leftarrow> ?t]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("Term_Context.ctxt_comp_n_funas",
     "(?f, ?v) : funas_ctxt (?C ^ ?n) ==> (?f, ?v) : funas_ctxt ?C",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)),
              template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Term_Context.adapt_vars_ctxt_simps",
     "adapt_vars_ctxt (More ?f ?bef ?C ?aft) =
      More ?f (map adapt_vars ?bef) (adapt_vars_ctxt ?C)
       (map adapt_vars ?aft)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 2)),
           template_app (template_hole 4, template_var 1)),
         template_app
          (template_app (template_hole 1, template_hole 0),
           template_var 0)))),
    ("Term_Context.replace_term_at_above",
     "?p \<le>\<^sub>p ?q ==>
      ?s[?q \<leftarrow> ?t][?p \<leftarrow> ?u] = ?s[?p \<leftarrow> ?u]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 1)),
             template_var 4),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 4),
           template_var 0)))),
    ("Term_Context.ground_substI",
     "(!!x. x : vars_term ?s ==> ground (?\<sigma> x)) ==>
      ground (?s \<cdot> ?\<sigma>)",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Term_Context.poss_append_poss",
     "(?p @ ?q : poss ?t) = (?p : poss ?t & ?q : poss (?t |_ ?p))",
     template_equation
      (template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1)),
         template_app (template_hole 2, template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 2)))))),
    ("Term_Context.adapt_vars_inj",
     "[| adapt_vars ?x = adapt_vars ?y; ground ?x; ground ?y |]
      ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 2, template_var 1),
          template_app (template_hole 2, template_var 0)),
        template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("Term_Context.map_vars_term_ctxt_apply",
     "map_vars_term ?f ?C\<langle>?t\<rangle> =
      (map_vars_ctxt ?f ?C)\<langle>map_vars_term ?f ?t\<rangle>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, t_empty), template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, t_empty), template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 3, t_empty), template_var 2),
           template_var 0)))),
    ("Term_Context.subt_at_subterm",
     "[| ?p : poss ?t; ?p ~= [] |] ==> ?t \<rhd> ?t |_ ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1))),
             template_hole 0)
           ))),
    ("Term_Context.poss_Cons_poss",
     "(?i # ?q : poss ?t) =
      (?i < length (args ?t) & ?q : poss (args ?t ! ?i))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)))),
         template_app
          (template_app (template_hole 7, template_var 1),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 0)),
               template_var 2)))))),
    ("Term_Context.parallel_replace_term_commute",
     "?p \<bottom> ?q ==>
      ?s[?p \<leftarrow> ?t][?q \<leftarrow> ?u] =
      ?s[?q \<leftarrow> ?u][?p \<leftarrow> ?t]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3)
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 4),
                 template_var 1)),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 0)),
             template_var 4),
           template_var 1)))),
    ("Term_Context.subt_at_Cons_comp",
     "?i # ?p : poss ?s ==> ?s |_ [?i] |_ ?p = ?s |_ (?i # ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1)),
              template_app (template_hole 3, template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app (template_hole 4, template_var 2),
                 template_hole 0))),
           template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1))))),
    ("Term_Context.map_term_replace_at_dist",
     "?p : poss ?s ==>
      (map_term ?f ?g ?s)[?p \<leftarrow> map_term ?f ?g ?t] =
      map_term ?f ?g ?s[?p \<leftarrow> ?t]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 4),
              template_app (template_hole 4, template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 3)),
             template_var 4),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 3),
               template_var 4),
             template_var 0))))),
    ("Term_Context.subst_at_ctxt_at_eq_termD",
     "[| ?s = ?t; ?p : poss ?t |]
      ==> ?s |_ ?p = ?t |_ ?p & ctxt_at_pos ?s ?p = ctxt_at_pos ?t ?p",
     template_implication
      ([template_equation (template_var 2, template_var 1),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0)),
                 template_app
                  (template_app (template_hole 2, template_var 1),
                   template_var 0))),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 0)),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Term_Context.replace_term_at_below",
     "?p <\<^sub>p ?q ==>
      ?s[?p \<leftarrow> ?t][?q \<leftarrow> ?u] =
      ?s[?p \<leftarrow> ?t[?q -\<^sub>p ?p \<leftarrow> ?u]]",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3))),
              template_app
               (template_app (template_hole 3, template_var 4),
                template_var 3))
            )],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 4),
                 template_var 1)),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 4),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 4)),
             template_var 0))))),
    ("Term_Context.eq_term_by_poss_fun_at",
     "[| poss ?s = poss ?t;
         !!p. p : poss ?s ==> fun_at ?s p = fun_at ?t p |]
      ==> ?s = ?t",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation (template_var 1, template_var 0))),
    ("Term_Context.subst_at_ctxt_at_eq_termI",
     "[| ?p : poss ?s; ?p : poss ?t; ?s |_ ?p = ?t |_ ?p;
         ctxt_at_pos ?s ?p = ctxt_at_pos ?t ?p |]
      ==> ?s = ?t",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 0))
            ),
        template_equation
         (template_app
           (template_app (template_hole 2, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_var 2)),
        template_equation
         (template_app
           (template_app (template_hole 0, template_var 1), template_var 2),
          template_app
           (template_app (template_hole 0, template_var 0),
            template_var 2))],
       template_equation (template_var 1, template_var 0))),
    ("Term_Context.position_less_eq_induct",
     "[| ?p \<le>\<^sub>p ?q; !!p. ?P p p;
         !!p q r. [| p \<le>\<^sub>p q; ?P p q |] ==> ?P p (q @ r) |]
      ==> ?P ?p ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 0, template_var 2), template_var 1)
           ))),
    ("Term_Context.eq_ctxt_at_pos_by_poss",
     "[| ?p : poss ?s; ?p : poss ?t;
         !!q. ~ ?p \<le>\<^sub>p q ==> (q : poss ?s) = (q : poss ?t);
         !!q. [| q : poss ?s; ~ ?p \<le>\<^sub>p q |]
              ==> fun_at ?s q = fun_at ?t q |]
      ==> ctxt_at_pos ?s ?p = ctxt_at_pos ?t ?p",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app (template_hole 8, template_var 0))
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 2))))]
