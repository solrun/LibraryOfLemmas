   [("Basic_Utils.not_is_Inr_is_Inl", "(~ is_Inl ?t) = is_Inr ?t",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Basic_Utils.not_is_Inr_is_Inl", "(~ is_Inr ?t) = is_Inl ?t",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Basic_Utils.trancl_full_on", "(?X \<times> ?X)^+ = ?X \<times> ?X",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0), t_empty)),
       template_app
        (template_app (template_hole 0, template_var 0), t_empty))),
    ("Basic_Utils.map_prod_simp'",
     "map_prod ?f ?g ?G = (?f (fst ?G), ?g (snd ?G))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_var 2,
             template_app (template_hole 1, template_var 0))),
         template_app
          (template_var 1,
           template_app (template_hole 0, template_var 0))))),
    ("Basic_Utils.trancl_map_prod_mono",
     "map_both ?f ` ?R^+ <= (map_both ?f ` ?R)^+",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_var 1)),
           template_var 0)))),
    ("Basic_Utils.length_add_elem_list_lists",
     "?ys : set (add_elem_list_lists ?x ?xs) ==>
      length ?ys = Suc (length ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_hole 0,
           template_app (template_hole 1, template_var 0))))),
    ("Basic_Utils.filter_rev_nth_butlast",
     "~ ?P (last ?xs) ==>
      filter_rev_nth ?P ?xs ?i = filter_rev_nth ?P (butlast ?xs) ?i",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_var 2,
                  template_app (template_hole 3, template_var 1))
                )
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_app (template_hole 0, template_var 1)),
           template_var 0)))),
    ("Basic_Utils.is_InlE",
     "[| is_Inl ?q; !!p. ?q = Inl p ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Basic_Utils.is_InrE",
     "[| is_Inr ?q; !!p. ?q = Inr p ==> ?thesis |] ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("Basic_Utils.map_prod_times",
     "?f ` ?A \<times> ?g ` ?B = map_prod ?f ?g ` (?A \<times> ?B)",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         t_empty),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2), t_empty)))),
    ("Basic_Utils.set_list_subset_eq_nth_conv",
     "(set ?xs <= ?A) = (ALL i<length ?xs. ?xs ! i : ?A)",
     template_equation
      (template_app
        (template_app
          (template_hole 7, template_app (template_hole 6, template_var 1)),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("Basic_Utils.in_set_idx",
     "?x : set ?xs ==> EX i<length ?xs. ?xs ! i = ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Basic_Utils.rtrancl_Un2_separatorE",
     "?B O ?A = {} ==> (?A Un ?B)^* = ?A^* Un ?A^* O ?B^*",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 1, template_var 0)),
             template_app (template_hole 1, template_var 1)))))),
    ("Basic_Utils.trancl_Un2_separatorE",
     "?B O ?A = {} ==> (?A Un ?B)^+ = ?A^+ Un ?A^+ O ?B^+ Un ?B^+",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 3, template_var 1), template_var 0),
          template_hole 2)],
       template_equation
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app
                (template_hole 0,
                 template_app (template_hole 1, template_var 0)),
               template_app
                (template_app
                  (template_hole 3,
                   template_app (template_hole 1, template_var 0)),
                 template_app (template_hole 1, template_var 1)))),
           template_app (template_hole 1, template_var 1))))),
    ("Basic_Utils.inj_on_trancl_map_both",
     "inj_on ?f (fst ` ?R Un snd ` ?R) ==>
      (map_both ?f ` ?R)^+ = map_both ?f ` ?R^+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app (template_hole 7, template_hole 6),
                    template_var 0)),
                template_app
                 (template_app (template_hole 7, template_hole 5),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 1)),
           template_app (template_hole 0, template_var 0))))),
    ("Basic_Utils.add_elem_list_listsI",
     "[| ?n <= length ?xs; ?ys = take ?n ?xs @ ?x # drop ?n ?xs |]
      ==> ?ys : set (add_elem_list_lists ?x ?xs)",
     template_implication
      ([template_inequation
         (less_equals, template_var 3,
          template_app (template_hole 8, template_var 2)),
        template_equation
         (template_var 1,
          template_app
           (template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 2)),
            template_app
             (template_app (template_hole 4, template_var 0),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 2)))
           ))),
    ("Basic_Utils.add_elem_list_listsE",
     "?ys : set (add_elem_list_lists ?x ?xs) ==>
      EX n<=length ?xs. ?ys = take n ?xs @ ?x # drop n ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 1),
                  template_var 0)))
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Basic_Utils.trancl_map_both_Restr",
     "inj_on ?f ?X ==>
      (map_both ?f ` Restr ?R ?X)^+ = map_both ?f ` (Restr ?R ?X)^+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 2),
                 template_var 2)),
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 t_empty)))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 2)),
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 0),
               template_app
                (template_app (template_hole 1, template_var 1),
                 t_empty))))))),
    ("Basic_Utils.kleene_induct",
     "[| ?A <= ?X; ?B O ?X <= ?X; ?X O ?C <= ?X |]
      ==> ?B^* O ?A O ?C^* <= ?X",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 1), template_var 2),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 0),
          template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app (template_hole 0, template_var 0))),
         template_var 2))),
    ("Basic_Utils.kleene_trancl_induct",
     "[| ?A <= ?X; ?B O ?X <= ?X; ?X O ?C <= ?X |]
      ==> ?B^+ O ?A O ?C^+ <= ?X",
     template_implication
      ([template_inequation (less_equals, template_var 3, template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 3, template_var 1), template_var 2),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 2, template_var 2), template_var 0),
          template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 1, template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app (template_hole 0, template_var 0))),
         template_var 2))),
    ("Basic_Utils.nth_append_Cons",
     "(?xs @ ?y # ?zs) ! ?i =
      (if ?i < length ?xs then ?xs ! ?i
       else if ?i = length ?xs then ?y else ?zs ! (?i - Suc (length ?xs)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_app
                   (template_app (template_hole 6, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_var 0),
                   template_app (template_hole 3, template_var 3))),
               template_app
                (template_app (template_hole 8, template_var 3),
                 template_var 0)),
             template_app
              (template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 2, template_var 0),
                     template_app (template_hole 3, template_var 3))),
                 template_var 2),
               template_app
                (template_app (template_hole 8, template_var 1),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_app
                    (template_hole 0,
                     template_app (template_hole 3, template_var 3))))))
           ))),
    ("Basic_Utils.map_eq_nth_conv",
     "(map ?f ?xs = map ?g ?ys) =
      (length ?xs = length ?ys &
       (ALL i<length ?ys. ?f (?xs ! i) = ?g (?ys ! i)))",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 11, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 10, template_var 1),
           template_var 0)),
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app (template_hole 7, template_var 2)),
                 template_app (template_hole 6, template_var 0))),
             template_app (template_hole 5, t_empty))
           ))),
    ("Basic_Utils.list_of_permutation_element_n_conv'",
     "[| ?x : set ?L; 0 < ?n |]
      ==> set (list_of_permutation_element_n ?x ?n ?L) =
          {xs.
           set xs <= insert ?x (set ?L) & length xs = ?n & ?x : set xs}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app (template_hole 11, template_var 1))
            ),
        template_inequation (less_than, template_hole 9, template_var 0)],
       template_equation
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0),
             template_var 1)),
         template_app (template_hole 5, t_empty)))),
    ("Basic_Utils.trancl_map",
     "[| !!x y. (x, y) : ?r ==> (?f x, ?f y) : ?s; (?x, ?y) : ?r^+ |]
      ==> (?f ?x, ?f ?y) : ?s^+",
     template_implication
      ([template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_app (template_hole 1, template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_var 3, template_var 1)),
                 template_app (template_var 3, template_var 0))),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Basic_Utils.filter_rev_nth_idx",
     "[| ?i < length ?xs; ?P (?xs ! ?i); ?ys = filter ?P ?xs |]
      ==> ?xs ! ?i = ?ys ! filter_rev_nth ?P ?xs ?i &
          filter_rev_nth ?P ?xs ?i < length ?ys",
     template_implication
      ([template_inequation
         (less_than, template_var 3,
          template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_var 1,
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 3))
            ),
        template_equation
         (template_var 0,
          template_app
           (template_app (template_hole 3, template_var 1),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_var 3)),
                 template_app
                  (template_app (template_hole 5, template_var 0),
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 2),
                     template_var 3)))),
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 2),
                   template_var 3)),
               template_app (template_hole 6, template_var 0)))
           ))),
    ("Basic_Utils.list_of_permutation_element_n_conv",
     "?n ~= 0 ==>
      set (list_of_permutation_element_n ?x ?n ?L) =
      {uu_.
       EX xs i.
          uu_ = xs &
          i < length xs &
          (ALL j<length xs. j ~= i --> xs ! j : set ?L) &
          length xs = ?n & xs ! i = ?x}",
     template_implication
      ([template_negation
         (template_equation (template_var 2, template_hole 16))],
       template_equation
        (template_app
          (template_hole 14,
           template_app
            (template_app
              (template_app (template_hole 13, template_var 1),
               template_var 2),
             template_var 0)),
         template_app (template_hole 12, t_empty)))),
    ("Basic_Utils.list_of_permutation_element_n_iff",
     "set (list_of_permutation_element_n ?x ?n ?L) =
      (if ?n = 0 then {[]}
       else {uu_.
             EX xs i.
                uu_ = xs &
                i < length xs &
                (ALL j<length xs. j ~= i --> xs ! j : set ?L) &
                length xs = ?n & xs ! i = ?x})",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 21,
              template_app
               (template_app
                 (template_app (template_hole 20, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 19,
                 template_app
                  (template_app (template_hole 18, template_var 1),
                   template_hole 17)),
               template_app
                (template_app (template_hole 16, template_hole 15),
                 template_hole 14)),
             template_app (template_hole 13, t_empty))
           )))]
