   [("ISQ_Quantities.qequiv_refl", "?a \<cong>\<^sub>Q ?a",
     template_predicate
      (
         template_app
          (template_app (template_hole 0, template_var 0), template_var 0)
         )),
    ("ISQ_Quantities.mmore", "mmore (| unit_sys = ?x, ... = ?y |) = ?y",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("ISQ_Quantities.mmore_ext",
     "(| unit_sys = unit, ... = mmore ?a |) = ?a",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1),
         template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("ISQ_Quantities.mag_inverse", "mag (inverse ?x) = inverse (mag ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("ISQ_Quantities.more_inverse",
     "Quantity.more (inverse ?x) = inverse (Quantity.more ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("ISQ_Quantities.qeq_iff_same_dim",
     "(?x \<cong>\<^sub>Q ?y) = (?x = ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("ISQ_Quantities.dim_inverse",
     "Quantity.dim (inverse ?x) = inverse (Quantity.dim ?x)",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("ISQ_Quantities.qequiv_sym",
     "?a \<cong>\<^sub>Q ?b ==> ?b \<cong>\<^sub>Q ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("ISQ_Quantities.unit_system_intro",
     "UNIV = {?a} ==> OFCLASS(?'s, unit_system_class)",
     template_implication
      ([template_equation
         (template_hole 4,
          template_app
           (template_app (template_hole 3, template_var 0),
            template_hole 2))],
       template_predicate
        (template_app (template_hole 1, template_hole 0)))),
    ("ISQ_Quantities.mag_times",
     "mag (?x \<cdot> ?y) = mag ?x \<cdot> mag ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ISQ_Quantities.more_times",
     "Quantity.more (?x \<cdot> ?y) =
      Quantity.more ?x \<cdot> Quantity.more ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ISQ_Quantities.mag_divide", "mag (?x / ?y) = mag ?x / mag ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ISQ_Quantities.more_divide",
     "Quantity.more (?x / ?y) = Quantity.more ?x / Quantity.more ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ISQ_Quantities.dim_times",
     "Quantity.dim (?x \<cdot> ?y) =
      Quantity.dim ?x \<cdot> Quantity.dim ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ISQ_Quantities.dim_divide",
     "Quantity.dim (?x / ?y) = Quantity.dim ?x / Quantity.dim ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ISQ_Quantities.qeq",
     "?x \<cong>\<^sub>Q ?y ==> QD(?'d\<^sub>1) = QD(?'d\<^sub>2)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 3, template_hole 2),
         template_app (template_hole 1, template_hole 0)))),
    ("ISQ_Quantities.coerceQuant_eq_iff",
     "QD(?'d\<^sub>1) = QD(?'d\<^sub>2) ==>
      QCOERCE[?'d\<^sub>2] ?x \<cong>\<^sub>Q ?x",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_hole 4),
          template_app (template_hole 3, template_hole 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 2),
                 template_var 0)),
             template_var 0)
           ))),
    ("ISQ_Quantities.qequiv_trans",
     "[| ?a \<cong>\<^sub>Q ?b; ?b \<cong>\<^sub>Q ?c |]
      ==> ?a \<cong>\<^sub>Q ?c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 2), template_var 0)
           ))),
    ("ISQ_Quantities.updown_eq_iff",
     "[| QD(?'d\<^sub>1) = QD(?'d\<^sub>2); ?y = toQ (fromQ ?x) |]
      ==> ?x \<cong>\<^sub>Q ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 7, template_hole 6),
          template_app (template_hole 5, template_hole 4)),
        template_equation
         (template_var 1,
          template_app
           (template_hole 2,
            template_app (template_hole 1, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("ISQ_Quantities.coerceQuant_eq_iff2",
     "[| QD(?'d\<^sub>1) = QD(?'d\<^sub>2); ?y = QCOERCE[?'d\<^sub>2] ?x |]
      ==> ?x \<cong>\<^sub>Q ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 6, template_hole 5),
          template_app (template_hole 4, template_hole 3)),
        template_equation
         (template_var 1,
          template_app
           (template_app (template_hole 1, template_hole 3),
            template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("ISQ_Quantities.Quantity_eq_intro",
     "[| mag ?x = mag ?y; Quantity.dim ?x = Quantity.dim ?y;
         Quantity.more ?x = Quantity.more ?y |]
      ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("ISQ_Quantities.Measurement_System_eq_intro",
     "[| mag ?x = mag ?y; Quantity.dim ?x = Quantity.dim ?y;
         Measurement_System.more ?x = Measurement_System.more ?y |]
      ==> ?x = ?y",
     template_implication
      ([template_equation
         (template_app (template_hole 5, template_var 1),
          template_app (template_hole 5, template_var 0)),
        template_equation
         (template_app (template_hole 3, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_equation
         (template_app (template_hole 1, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0)))]
