   [("Power_int.one_intpow", "(1::?'a) ^\<^sub>Z ?n = (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Power_int.intpow_one", "?x ^\<^sub>Z 1 = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Power_int.intpow_zero", "?x ^\<^sub>Z 0 = (1::?'a)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Power_int.intpow_uminus",
     "?x ^\<^sub>Z - ?n = inverse (?x ^\<^sub>Z ?n)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Power_int.intpow_inverse",
     "inverse ?a ^\<^sub>Z ?n = inverse (?a ^\<^sub>Z ?n)",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Power_int.intpow_spos",
     "(0::?'a) < ?x ==> (0::?'a) < ?x ^\<^sub>Z ?n",
     template_implication
      ([template_inequation (less_than, template_hole 1, template_var 1)],
       template_inequation
        (less_than, template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Power_int.intpow_mult_distrib",
     "(?x * ?y) ^\<^sub>Z ?m = ?x ^\<^sub>Z ?m * ?y ^\<^sub>Z ?m",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Power_int.intpow_pos", "0 <= ?n ==> ?x ^\<^sub>Z ?n = ?x ^ nat ?n",
     template_implication
      ([template_inequation (less_equals, template_hole 4, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 0), template_var 1),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 1))))),
    ("Power_int.intpow_uminus_nat",
     "0 <= ?n ==> ?x ^\<^sub>Z - ?n = inverse (?x ^ nat ?n)",
     template_implication
      ([template_inequation (less_equals, template_hole 6, template_var 1)],
       template_equation
        (template_app
          (template_app (template_hole 4, template_var 0),
           template_app (template_hole 3, template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1)))))),
    ("Power_int.intpow_plus",
     "(0::?'a) < ?x ==>
      ?x ^\<^sub>Z (?m + ?n) = ?x ^\<^sub>Z ?m * ?x ^\<^sub>Z ?n",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 2)],
       template_equation
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1)),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Power_int.intpow_mult_combine",
     "(0::?'a) < ?x ==>
      ?x ^\<^sub>Z ?m * (?x ^\<^sub>Z ?n * ?y) =
      ?x ^\<^sub>Z (?m + ?n) * ?y",
     template_implication
      ([template_inequation (less_than, template_hole 4, template_var 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1))),
           template_var 0))))]
