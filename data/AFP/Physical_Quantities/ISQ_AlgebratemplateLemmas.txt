   [("ISQ_Algebra.scaleQ_one", "(1::?'a) *\<^sub>Q ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("ISQ_Algebra.scaleQ_zero", "(0::?'a) *\<^sub>Q ?x = 0",
     template_equation
      (template_app
        (template_app (template_hole 2, template_hole 1), template_var 0),
       template_hole 0)),
    ("ISQ_Algebra.qinverse_qinverse",
     "?x\<^sup>-\<^sup>\<one>\<^sup>-\<^sup>\<one> \<cong>\<^sub>Q ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0))),
           template_var 0)
         )),
    ("ISQ_Algebra.qtimes_right_unit",
     "?x \<^bold>\<cdot> \<one> \<cong>\<^sub>Q ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)),
           template_var 0)
         )),
    ("ISQ_Algebra.qtimes_left_unit",
     "\<one> \<^bold>\<cdot> ?x \<cong>\<^sub>Q ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)),
           template_var 0)
         )),
    ("ISQ_Algebra.qtimes_commute",
     "?x \<^bold>\<cdot> ?y \<cong>\<^sub>Q ?y \<^bold>\<cdot> ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))
         )),
    ("ISQ_Algebra.qinverse_nonzero_iff_nonzero",
     "(?x\<^sup>-\<^sup>\<one> = 0) = (?x = 0)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("ISQ_Algebra.scaleQ_inv", "- ?a *\<^sub>Q ?x = ?a *\<^sub>Q - ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("ISQ_Algebra.scaleQ_as_qprod",
     "?a *\<^sub>Q ?x \<cong>\<^sub>Q
      (?a *\<^sub>Q \<one>) \<^bold>\<cdot> ?x",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_hole 0)),
             template_var 0))
         )),
    ("ISQ_Algebra.qinverse_qtimes",
     "(?x \<^bold>\<cdot> ?y)\<^sup>-\<^sup>\<one> \<cong>\<^sub>Q
      ?x\<^sup>-\<^sup>\<one> \<^bold>\<cdot> ?y\<^sup>-\<^sup>\<one>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0))),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0)))
         )),
    ("ISQ_Algebra.qinverse_qdivide",
     "(?x \<^bold>\<cdot>
       ?y\<^sup>-\<^sup>\<one>)\<^sup>-\<^sup>\<one> \<cong>\<^sub>Q
      ?y \<^bold>\<cdot> ?x\<^sup>-\<^sup>\<one>",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_app (template_hole 2, template_var 0)))),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1)))
         )),
    ("ISQ_Algebra.qinverse_weak_cong",
     "?x \<cong>\<^sub>Q ?y ==>
      ?x\<^sup>-\<^sup>\<one> \<cong>\<^sub>Q ?y\<^sup>-\<^sup>\<one>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("ISQ_Algebra.scaleQ_scaleQ",
     "?a *\<^sub>Q ?b *\<^sub>Q ?x = ?a \<cdot> ?b *\<^sub>Q ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("ISQ_Algebra.mult_scaleQ_right",
     "?x \<^bold>\<cdot> (?a *\<^sub>Q ?y) =
      ?a *\<^sub>Q ?x \<^bold>\<cdot> ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("ISQ_Algebra.mult_scaleQ_left",
     "(?a *\<^sub>Q ?x) \<^bold>\<cdot> ?y =
      ?a *\<^sub>Q ?x \<^bold>\<cdot> ?y",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("ISQ_Algebra.qtimes_assoc",
     "?x \<^bold>\<cdot> ?y \<^bold>\<cdot> ?z \<cong>\<^sub>Q
      ?x \<^bold>\<cdot> (?y \<^bold>\<cdot> ?z)",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0)))
         )),
    ("ISQ_Algebra.qtimes_weak_cong_left",
     "?x \<cong>\<^sub>Q ?y ==>
      ?x \<^bold>\<cdot> ?z \<cong>\<^sub>Q ?y \<^bold>\<cdot> ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("ISQ_Algebra.qtimes_weak_cong_right",
     "?x \<cong>\<^sub>Q ?y ==>
      ?z \<^bold>\<cdot> ?x \<cong>\<^sub>Q ?z \<^bold>\<cdot> ?y",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("ISQ_Algebra.scaleQ_cong",
     "?y \<cong>\<^sub>Q ?z ==>
      ?x *\<^sub>Q ?y \<cong>\<^sub>Q ?x *\<^sub>Q ?z",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("ISQ_Algebra.qtimes_cancel",
     "?x ~= 0 ==>
      ?x \<^bold>\<cdot> ?x\<^sup>-\<^sup>\<one> \<cong>\<^sub>Q \<one>",
     template_implication
      ([template_negation
         (template_equation (template_var 0, template_hole 4))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 0))),
             template_hole 0)
           ))),
    ("ISQ_Algebra.scaleQ_add_right",
     "?a *\<^sub>Q ?x + ?y = (?a *\<^sub>Q ?x) + (?a *\<^sub>Q ?y)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("ISQ_Algebra.scaleQ_add_left",
     "?a + ?b *\<^sub>Q ?x = (?a *\<^sub>Q ?x) + (?b *\<^sub>Q ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0))))]
