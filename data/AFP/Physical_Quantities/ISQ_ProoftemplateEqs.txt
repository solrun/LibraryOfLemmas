   [("ISQ_Proof.dimQ", "dimQ ?x = QD(?'d)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, template_hole 0))),
    ("ISQ_Proof.magQ_numeral",
     "\<lbrakk>numeral ?n\<rbrakk>\<^sub>Q = numeral ?n",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("ISQ_Proof.magQ_qinverse",
     "\<lbrakk>?x\<^sup>-\<^sup>\<one>\<rbrakk>\<^sub>Q =
      inverse \<lbrakk>?x\<rbrakk>\<^sub>Q",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("ISQ_Proof.magQ_uminus",
     "\<lbrakk>- ?x\<rbrakk>\<^sub>Q = - \<lbrakk>?x\<rbrakk>\<^sub>Q",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("ISQ_Proof.magQ_scaleQ",
     "\<lbrakk>?x *\<^sub>Q ?y\<rbrakk>\<^sub>Q =
      ?x \<cdot> \<lbrakk>?y\<rbrakk>\<^sub>Q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("ISQ_Proof.quant_eq_iff_mag_eq",
     "(?x = ?y) =
      (\<lbrakk>?x\<rbrakk>\<^sub>Q = \<lbrakk>?y\<rbrakk>\<^sub>Q)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("ISQ_Proof.quant_less_iff_magn_less",
     "(?x < ?y) =
      (\<lbrakk>?x\<rbrakk>\<^sub>Q < \<lbrakk>?y\<rbrakk>\<^sub>Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("ISQ_Proof.quant_le_iff_magn_le",
     "(?x <= ?y) =
      (\<lbrakk>?x\<rbrakk>\<^sub>Q <= \<lbrakk>?y\<rbrakk>\<^sub>Q)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("ISQ_Proof.magQ_plus",
     "\<lbrakk>?x + ?y\<rbrakk>\<^sub>Q =
      \<lbrakk>?x\<rbrakk>\<^sub>Q + \<lbrakk>?y\<rbrakk>\<^sub>Q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ISQ_Proof.magQ_minus",
     "\<lbrakk>?x - ?y\<rbrakk>\<^sub>Q =
      \<lbrakk>?x\<rbrakk>\<^sub>Q - \<lbrakk>?y\<rbrakk>\<^sub>Q",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("ISQ_Proof.magQ_qtimes",
     "\<lbrakk>?x \<^bold>\<cdot> ?y\<rbrakk>\<^sub>Q =
      \<lbrakk>?x\<rbrakk>\<^sub>Q \<cdot> \<lbrakk>?y\<rbrakk>\<^sub>Q",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("ISQ_Proof.magQ_qdivivide",
     "\<lbrakk>?x \<^bold>\<cdot> ?y\<^sup>-\<^sup>\<one>\<rbrakk>\<^sub>Q =
      \<lbrakk>?x\<rbrakk>\<^sub>Q / \<lbrakk>?y\<rbrakk>\<^sub>Q",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("ISQ_Proof.quant_equiv_iff",
     "(?x \<cong>\<^sub>Q ?y) =
      (\<lbrakk>?x\<rbrakk>\<^sub>Q = \<lbrakk>?y\<rbrakk>\<^sub>Q &
       QD(?'u\<^sub>1) = QD(?'u\<^sub>2))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 0)
            )],
       template_dunno))]
