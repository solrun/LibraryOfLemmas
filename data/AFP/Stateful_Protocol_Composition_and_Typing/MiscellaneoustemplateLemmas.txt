   [("Miscellaneous.list_all_concat",
     "list_all (list_all ?f) ?P = list_all ?f (concat ?P)",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Miscellaneous.map_subseqs",
     "map (map ?f) (subseqs ?xs) = subseqs (map ?f ?xs)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Miscellaneous.list_all_filter_eq",
     "list_all ?P ?xs ==> filter ?P ?xs = ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0))),
    ("Miscellaneous.inv_set_fset", "finite ?M ==> set (inv set ?M) = ?M",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_hole 2),
             template_var 0)),
         template_var 0))),
    ("Miscellaneous.subseqs_subset",
     "?ys : set (subseqs ?xs) ==> set ?ys <= set ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Miscellaneous.prefix_Cons'",
     "prefix (?x # ?xs) (?x # ?ys) ==> prefix ?xs ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 1,
                template_app
                 (template_app (template_hole 0, template_var 2),
                  template_var 1)),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1), template_var 0)
           ))),
    ("Miscellaneous.subseqs_Cons",
     "?ys : set (subseqs ?xs) ==> ?ys : set (subseqs (?x # ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 1))))
           ))),
    ("Miscellaneous.filter_nth",
     "?i < length (filter ?P ?xs) ==> ?P (filter ?P ?xs ! ?i)",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app
           (template_hole 2,
            template_app
             (template_app (template_hole 1, template_var 1),
              template_var 0)))],
       template_predicate
        (
           template_app
            (template_var 1,
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 0)),
               template_var 2))
           ))),
    ("Miscellaneous.subset_sublist_exists",
     "?ys <= set ?xs ==> EX zs. set zs = ?ys & zs : set (subseqs ?xs)",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 6, template_var 0))],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Miscellaneous.prefix_map",
     "prefix ?xs (map ?f ?ys) ==> EX zs. prefix zs ?ys & map ?f zs = ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Miscellaneous.remdups_ex2",
     "1 < length (remdups ?xs) ==> EX a:set ?xs. EX b:set ?xs. a ~= b",
     template_implication
      ([template_inequation
         (less_than, template_hole 6,
          template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 0)))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0)),
             t_empty)
           ))),
    ("Miscellaneous.product_lists_Cons",
     "(?x # ?xs : set (product_lists (?y # ?ys))) =
      (?xs : set (product_lists ?ys) & ?x : set ?y)",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 3),
             template_var 2)),
         template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 1),
               template_var 0)))),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)))),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_app (template_hole 0, template_var 1))))),
    ("Miscellaneous.length_prefix_ex",
     "?n <= length ?xs ==> EX ys zs. ?xs = ys @ zs & length ys = ?n",
     template_implication
      ([template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Miscellaneous.preordered_finite_set_has_maxima",
     "[| finite ?A; ?A ~= {} |] ==> EX a:?A. ALL b:?A. ~ a < b",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0), t_empty)
           ))),
    ("Miscellaneous.lfp_while''",
     "[| mono ?f; finite (lfp ?f) |]
      ==> lfp ?f = while (%A. ?f A ~= A) ?f {}",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 0))
            )],
       template_equation
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 0),
           template_hole 0)))),
    ("Miscellaneous.list_all_filter_nil",
     "[| list_all ?P ?xs; !!x. ?P x ==> ~ ?Q x |] ==> filter ?Q ?xs = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 0), template_var 1),
         template_hole 0))),
    ("Miscellaneous.product_lists_in_set_nth",
     "?xs : set (product_lists ?ys) ==>
      ALL i<length ?ys. ?xs ! i : set (?ys ! i)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 0)))
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Miscellaneous.suffix_Cons'",
     "suffix [?x] (?y # ?ys) ==> suffix [?x] ?ys | ?y = ?x & ?ys = []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_hole 4)),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app (template_hole 5, template_var 2),
                     template_hole 4)),
                 template_var 0)),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 1),
                   template_var 2)),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_hole 4)))
           ))),
    ("Miscellaneous.map_upt_index_eq",
     "?j < length ?xs ==>
      map (%i. ?xs ! ?is i) [0..<length ?xs] ! ?j = ?xs ! ?is ?j",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 5, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_app (template_hole 5, template_var 1)))),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app (template_var 0, template_var 2))))),
    ("Miscellaneous.length_prefix_ex'",
     "?n < length ?xs ==>
      EX ys zs. ?xs = ys @ ?xs ! ?n # zs & length ys = ?n",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 7, template_var 0))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Miscellaneous.trancl_eqI",
     "ALL (a, b):?A. ALL (c, d):?A. b = c --> (a, d) : ?A ==> ?A = ?A^+",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, t_empty))
            )],
       template_equation
        (template_var 0, template_app (template_hole 0, template_var 0)))),
    ("Miscellaneous.lfp_eqI'",
     "[| mono ?f; ?f ?C = ?C; ALL X:Pow ?C. ?f X = X --> X = ?C |]
      ==> lfp ?f = ?C",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 1)),
        template_equation
         (template_app (template_var 1, template_var 0), template_var 0),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              t_empty)
            )],
       template_equation
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Miscellaneous.product_lists_in_set_nth'",
     "[| ALL i<length ?xs. ?ys ! i : set (?xs ! i);
         length ?xs = length ?ys |]
      ==> ?ys : set (product_lists ?xs)",
     template_implication
      ([template_predicate (template_app (template_hole 12, t_empty)),
        template_equation
         (template_app (template_hole 9, template_var 1),
          template_app (template_hole 3, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)))
           ))),
    ("Miscellaneous.map_append_inv",
     "map ?f ?xs = ?ys @ ?zs ==>
      EX vs ws. ?xs = vs @ ws & map ?f vs = ?ys & map ?f ws = ?zs",
     template_implication
      ([template_equation
         (template_app
           (template_app (template_hole 5, template_var 3), template_var 2),
          template_app
           (template_app (template_hole 4, template_var 1),
            template_var 0))],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("Miscellaneous.infinite_chain_mono",
     "[| ?S <= ?T; EX f. ALL i. (f i, f (Suc i)) : ?S |]
      ==> EX f. ALL i. (f i, f (Suc i)) : ?T",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Miscellaneous.infinite_chain_intro",
     "[| ALL (a, b):?r. EX c. (b, c) : ?r; ?r ~= {} |]
      ==> EX f. ALL i. (f i, f (Suc i)) : ?r",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app (template_hole 9, t_empty))
            ),
        template_negation
         (template_equation (template_var 0, template_hole 3))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Miscellaneous.distinct_concat_idx_disjoint",
     "[| distinct (concat ?xs); ?i < length ?xs; ?j < length ?xs; ?i < ?j |]
      ==> set (?xs ! ?i) Int set (?xs ! ?j) = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2))
            ),
        template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 2)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 5, template_var 2)),
        template_inequation (less_than, template_var 1, template_var 0)],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_hole 0))),
    ("Miscellaneous.finite_lists_length_eq'",
     "(!!x. x : set ?xs ==> finite {y. ?P x y}) ==>
      finite
       {ys. length ?xs = length ys & (ALL y:set ys. EX x:set ?xs. ?P x y)}",
     template_implication
      ([template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate
        (
           template_app
            (template_hole 8, template_app (template_hole 7, t_empty))
           ))),
    ("Miscellaneous.map_snd_list_insert_distrib",
     "ALL (i, p):insert ?x (set ?xs).
         ALL (i', p'):insert ?x (set ?xs). p = p' --> i = i' ==>
      map snd (List.insert ?x ?xs) = List.insert (snd ?x) (map snd ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_app (template_hole 9, template_var 0))),
              template_app (template_hole 8, t_empty))
            )],
       template_equation
        (template_app
          (template_app (template_hole 3, template_hole 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))))),
    ("Miscellaneous.infinite_chain_intro'",
     "[| EX b. (?x, b) : ?r;
         ALL b. (?x, b) : ?r^+ --> (EX c. (b, c) : ?r) |]
      ==> EX f. ALL i. (f i, f (Suc i)) : ?r",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty)),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Miscellaneous.zip_arg_index",
     "[| (?x, ?y) : set (zip ?xs ?ys);
         !!i. [| ?xs ! i = ?x; ?ys ! i = ?y; i < length ?xs;
                 i < length ?ys |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 4),
                  template_var 3)),
              template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1)))
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("Miscellaneous.trancl_minus_refl_idem",
     "{(a, b). (a, b) : {(a, b). (a, b) : ?ts^+ & a ~= b}^+ & a ~= b} =
      {(a, b). (a, b) : ?ts^+ & a ~= b}",
     template_equation
      (template_app
        (template_hole 7, template_app (template_hole 6, t_empty)),
       template_app
        (template_hole 7, template_app (template_hole 6, t_empty)))),
    ("Miscellaneous.zip_arg_subterm_split",
     "[| (?x, ?y) : set (zip ?xs ?ys);
         !!xs' xs'' ys' ys''.
            [| ?xs = xs' @ ?x # xs''; ?ys = ys' @ ?y # ys'';
               length xs' = length ys' |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app
                 (template_app (template_hole 13, template_var 4),
                  template_var 3)),
              template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 2),
                  template_var 1)))
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0))),
    ("Miscellaneous.partition_index_bij",
     "(!!I k.
          [| bij_betw I {0..<?n} {0..<?n}; k <= ?n; ALL i<k. ?P (I i);
             ALL i. k <= i & i < ?n --> ~ ?P (I i) |]
          ==> ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("Miscellaneous.lfp_while'",
     "[| mono ?f; finite (while (%A. ?f A ~= A) ?f {});
         ?f (while (%A. ?f A ~= A) ?f {}) <= while (%A. ?f A ~= A) ?f {} |]
      ==> lfp ?f = while (%A. ?f A ~= A) ?f {}",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_app (template_hole 5, t_empty), template_var 0),
                template_hole 2))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_var 0,
            template_app
             (template_app
               (template_app (template_hole 5, t_empty), template_var 0),
              template_hole 2)),
          template_app
           (template_app
             (template_app (template_hole 5, t_empty), template_var 0),
            template_hole 2))],
       template_equation
        (template_app (template_hole 0, template_var 0),
         template_app
          (template_app
            (template_app (template_hole 5, t_empty), template_var 0),
           template_hole 2)))),
    ("Miscellaneous.length_prefix_ex2",
     "[| ?i < length ?xs; ?j < length ?xs; ?i < ?j |]
      ==> EX ys zs vs.
             ?xs = ys @ ?xs ! ?i # zs @ ?xs ! ?j # vs &
             length ys = ?i & length zs = ?j - ?i - 1",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 9, template_var 1)),
        template_inequation
         (less_than, template_var 0,
          template_app (template_hole 9, template_var 1)),
        template_inequation (less_than, template_var 2, template_var 0)],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("Miscellaneous.trancl_eqI'",
     "[| ALL (a, b):?A. ALL (c, d):?A. b = c & a ~= d --> (a, d) : ?A;
         ALL (a, b):?A. a ~= b |]
      ==> ?A = {(a, b). (a, b) : ?A^+ & a ~= b}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app (template_hole 9, t_empty))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 0),
              template_app (template_hole 9, t_empty))
            )],
       template_equation
        (template_var 0,
         template_app
          (template_hole 1, template_app (template_hole 9, t_empty)))))]
