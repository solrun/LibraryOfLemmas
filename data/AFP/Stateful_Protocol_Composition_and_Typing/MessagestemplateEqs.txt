   [("Messages.fv_list\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s_is_fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s",
     "fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F =
      set (fv_list\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Messages.fv_list_is_fv", "fv ?t = set (fv_list ?t)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Messages.fv_subterms",
     "fv\<^sub>s\<^sub>e\<^sub>t (subterms ?t) = fv ?t",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Messages.subterms_list_is_subterms",
     "subterms ?t = set (subterms_list ?t)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Messages.fv_simps", "fv (Var ?x1.0) = {?x1.0}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 0), template_hole 0))),
    ("Messages.fv_subterms_set",
     "fv\<^sub>s\<^sub>e\<^sub>t (subterms\<^sub>s\<^sub>e\<^sub>t ?M) =
      fv\<^sub>s\<^sub>e\<^sub>t ?M",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))),
       template_app (template_hole 3, template_var 0))),
    ("Messages.subterm_of_iff_subtermeq",
     "(?t \<sqsubseteq> ?t') = subterm_of ?t ?t'",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Messages.fv_map_fv_set",
     "\<Union> (set (map fv ?L)) = fv\<^sub>s\<^sub>e\<^sub>t (set ?L)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Messages.fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s_append",
     "fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s (?F @ ?G) =
      fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F Un
      fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?G",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Messages.fv\<^sub>s\<^sub>e\<^sub>t_union",
     "fv\<^sub>s\<^sub>e\<^sub>t (?M Un ?N) =
      fv\<^sub>s\<^sub>e\<^sub>t ?M Un fv\<^sub>s\<^sub>e\<^sub>t ?N",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Messages.funs_term_subterms_eq",
     "\<Union> (funs_term ` subterms ?t) = funs_term ?t",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 0))),
       template_app (template_hole 1, template_var 0))),
    ("Messages.subterms_const", "subterms (Fun ?f []) = {Fun ?f []}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 3, template_var 0),
             template_hole 2)),
         template_hole 0))),
    ("Messages.vars_iff_subtermeq",
     "(?x : fv ?t) = (Var ?x \<sqsubseteq> ?t)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Messages.fv_list\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s_append",
     "fv_list\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s (?F @ ?G) =
      fv_list\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F @
      fv_list\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?G",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Messages.fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s_singleton",
     "fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s [(?t, ?s)] =
      fv ?t Un fv ?s",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 1),
               template_var 0)),
           template_hole 3)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Messages.fv_simps",
     "fv (Fun ?x21.0 ?x22.0) = \<Union> (fv ` set ?x22.0)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("Messages.vars_iff_subtermeq_set",
     "(?x : fv\<^sub>s\<^sub>e\<^sub>t ?M) =
      (Var ?x \<sqsubseteq>\<^sub>s\<^sub>e\<^sub>t ?M)",
     template_equation
      (template_app
        (template_app (template_hole 6, template_var 1),
         template_app (template_hole 5, template_var 0)),
       template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Messages.subterm_of_ex_set_iff_subtermeqset",
     "(?t \<sqsubseteq>\<^sub>s\<^sub>e\<^sub>t ?M) =
      (EX t':?M. subterm_of ?t t')",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 1),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 0), t_empty))),
    ("Messages.funs_term_subterms_eq",
     "\<Union> (funs_term ` subterms\<^sub>s\<^sub>e\<^sub>t ?M) =
      \<Union> (funs_term ` ?M)",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, t_empty),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 0)))),
    ("Messages.fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s_Cons",
     "fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ((?s, ?t) # ?F) =
      fv ?s Un fv ?t Un fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1)),
           template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app (template_hole 0, template_var 1))),
         template_app (template_hole 5, template_var 0)))),
    ("Messages.ground_iff_no_vars",
     "ground ?M = (ALL v. Var v ~: subterms\<^sub>s\<^sub>e\<^sub>t ?M)",
     template_equation
      (template_app
        (template_app
          (template_hole 9, template_app (template_hole 8, template_var 0)),
         template_hole 7),
       template_app (template_hole 6, t_empty))),
    ("Messages.vars_iff_subterm_or_eq",
     "(?x : fv ?t) = (Var ?x \<sqsubset> ?t | Var ?x = ?t)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_dunno)),
    ("Messages.Fun_subterm_inside_params",
     "(?t \<sqsubset> Fun ?f ?X) =
      (?t \<sqsubseteq>\<^sub>s\<^sub>e\<^sub>t set ?X)",
     template_equation
      (template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app (template_hole 7, template_var 2),
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_var 0)))),
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 2),
             template_app
              (template_app (template_hole 5, template_var 1),
               template_var 0)))),
       template_app
        (template_app (template_hole 7, template_var 2),
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, t_empty),
             template_app (template_hole 0, template_var 0))))))]
