Loading theory "Draft.Miscellaneous" (required by "Draft.Strands_and_ConstraintsTemplates" via "Draft.Strands_and_Constraints" via "Draft.Messages")
Loading theory "Draft.Templates" (required by "Draft.Strands_and_ConstraintsTemplates" via "Draft.ExtrEqs")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.049s elapsed time, 0.125s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.Strands_and_ConstraintsTemplates")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Draft.Miscellaneous"
### 0.379s elapsed time, 0.868s cpu time, 0.245s GC time
Loading theory "Draft.Messages" (required by "Draft.Strands_and_ConstraintsTemplates" via "Draft.Strands_and_Constraints")
Found termination order: "size <*mlex*> {}"
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.580s elapsed time, 1.270s cpu time, 0.296s GC time
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "Draft.Messages"
### 0.832s elapsed time, 1.150s cpu time, 0.124s GC time
Loading theory "Draft.More_Unification" (required by "Draft.Strands_and_ConstraintsTemplates" via "Draft.Strands_and_Constraints")
Proofs for inductive predicate(s) "fsubstp"
  Proving monotonicity ...
Proofs for inductive predicate(s) "wf\<^sub>s\<^sub>u\<^sub>b\<^sub>s\<^sub>t_setp"
  Proving monotonicity ...
### theory "Draft.More_Unification"
### 1.220s elapsed time, 1.421s cpu time, 0.286s GC time
Loading theory "Draft.Intruder_Deduction" (required by "Draft.Strands_and_ConstraintsTemplates" via "Draft.Strands_and_Constraints")
locale intruder_model
  fixes arity :: "'fun => nat"
    and public :: "'fun => bool"
    and
    Ana ::
      "('fun, 'var) Term.term
       => ('fun, 'var) Term.term list * ('fun, 'var) Term.term list"
  assumes "intruder_model arity Ana"
Proofs for inductive predicate(s) "intruder_deduct"
  Proving monotonicity ...
Proofs for inductive predicate(s) "intruder_synth"
  Proving monotonicity ...
Proofs for inductive predicate(s) "public_ground_wf_term"
  Proving monotonicity ...
Proofs for inductive predicate(s) "intruder_deduct_restricted"
  Proving monotonicity ...
Proofs for inductive predicate(s) "intruder_deduct_num"
  Proving monotonicity ...
Found termination order: "(%p. size (snd (snd (snd p)))) <*mlex*> {}"
### theory "Draft.Intruder_Deduction"
### 0.986s elapsed time, 1.420s cpu time, 0.604s GC time
Loading theory "Draft.Strands_and_Constraints" (required by "Draft.Strands_and_ConstraintsTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "size_list size <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
locale intruder_model
  fixes arity :: "'fun => nat"
    and public :: "'fun => bool"
    and
    Ana ::
      "('fun, 'var) Term.term
       => ('fun, 'var) Term.term list * ('fun, 'var) Term.term list"
  assumes "intruder_model arity Ana"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "(%p. size_list size (snd p)) <*mlex*> {}"
Found termination order: "size_list size <*mlex*> {}"
### theory "Draft.Strands_and_Constraints"
### 3.849s elapsed time, 5.024s cpu time, 1.485s GC time
Loading theory "Draft.Strands_and_ConstraintsTemplates"
val templateLemmas =
   [("Strands_and_Constraints.finite_bvars\<^sub>s\<^sub>t",
     "finite (bvars\<^sub>s\<^sub>t ?S)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Strands_and_Constraints.finite_funs\<^sub>s\<^sub>t",
     "finite (funs\<^sub>s\<^sub>t ?S)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Strands_and_Constraints.finite_fv\<^sub>r\<^sub>c\<^sub>v",
     "finite (fv\<^sub>r\<^sub>c\<^sub>v ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Strands_and_Constraints.finite_fv\<^sub>s\<^sub>n\<^sub>d",
     "finite (fv\<^sub>s\<^sub>n\<^sub>d ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Strands_and_Constraints.finite_fv\<^sub>s\<^sub>t",
     "finite (fv\<^sub>s\<^sub>t ?S)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Strands_and_Constraints.finite_fv\<^sub>s\<^sub>t\<^sub>p",
     "finite (fv\<^sub>s\<^sub>t\<^sub>p ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Strands_and_Constraints.finite_funs\<^sub>s\<^sub>t\<^sub>p",
     "finite (funs\<^sub>s\<^sub>t\<^sub>p ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Strands_and_Constraints.finite_vars\<^sub>s\<^sub>t\<^sub>p",
     "finite (vars\<^sub>s\<^sub>t\<^sub>p ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Strands_and_Constraints.finite_vars\<^sub>s\<^sub>t",
     "finite (vars\<^sub>s\<^sub>t ?S)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Strands_and_Constraints.finite_wfrestrictedvars\<^sub>s\<^sub>t",
     "finite (wfrestrictedvars\<^sub>s\<^sub>t ?S)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Strands_and_Constraints.finite_wfvarsoccs\<^sub>s\<^sub>t",
     "finite (wfvarsoccs\<^sub>s\<^sub>t ?S)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Strands_and_Constraints.finite_assignment_rhs\<^sub>s\<^sub>t",
     "finite (assignment_rhs\<^sub>s\<^sub>t ?S)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Strands_and_Constraints.finite_ik\<^sub>s\<^sub>t",
     "finite (ik\<^sub>s\<^sub>t ?S)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Strands_and_Constraints.finite_trms\<^sub>s\<^sub>t\<^sub>p",
     "finite (trms\<^sub>s\<^sub>t\<^sub>p ?x)",
     template_predicate
      (
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 0))
         )),
    ("Strands_and_Constraints.finite_bvars\<^sub>s\<^sub>t\<^sub>p",
     "finite (set (bvars\<^sub>s\<^sub>t\<^sub>p ?x))",
     template_predicate
      (
         template_app
          (template_hole 2,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 0)))
         )),
    ("Strands_and_Constraints.dual\<^sub>s\<^sub>t_self_inverse",
     "dual\<^sub>s\<^sub>t (dual\<^sub>s\<^sub>t ?S) = ?S",
     template_equation
      (template_app
        (template_hole 0, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Strands_and_Constraints.subst_apply_strand_nil",
     "[] \<cdot>\<^sub>s\<^sub>t ?\<delta> = []",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_hole 0)),
    ("Strands_and_Constraints.strand_id_subst",
     "?S \<cdot>\<^sub>s\<^sub>t Var = ?S",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Strands_and_Constraints.strand_step_id_subst",
     "?x \<cdot>\<^sub>s\<^sub>t\<^sub>p Var = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Strands_and_Constraints.fv\<^sub>s\<^sub>t_subset_vars\<^sub>s\<^sub>t",
     "fv\<^sub>s\<^sub>t ?S <= vars\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.wfrestrictedvars\<^sub>s\<^sub>t_subset_vars\<^sub>s\<^sub>t",
     "wfrestrictedvars\<^sub>s\<^sub>t ?S <= vars\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.fv_snd_rcv_strand_subset",
     "wfvarsoccs\<^sub>s\<^sub>t ?S <= fv\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.vars_snd_rcv_strand_subset2",
     "wfvarsoccs\<^sub>s\<^sub>t ?S <= wfrestrictedvars\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.dual\<^sub>s\<^sub>t_bvars",
     "bvars\<^sub>s\<^sub>t (dual\<^sub>s\<^sub>t ?A) =
      bvars\<^sub>s\<^sub>t ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Strands_and_Constraints.dual\<^sub>s\<^sub>t_fv",
     "fv\<^sub>s\<^sub>t (dual\<^sub>s\<^sub>t ?A) = fv\<^sub>s\<^sub>t ?A",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Strands_and_Constraints.trms_list\<^sub>s\<^sub>t_is_trms\<^sub>s\<^sub>t",
     "trms\<^sub>s\<^sub>t ?S = set (trms_list\<^sub>s\<^sub>t ?S)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Strands_and_Constraints.dual\<^sub>s\<^sub>t_trms_eq",
     "trms\<^sub>s\<^sub>t (dual\<^sub>s\<^sub>t ?S) =
      trms\<^sub>s\<^sub>t ?S",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_app (template_hole 1, template_var 0))),
    ("Strands_and_Constraints.eqs_rcv_map_empty",
     "assignment_rhs\<^sub>s\<^sub>t (map Receive ?M) = {}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_hole 0)),
    ("Strands_and_Constraints.ik_snd_empty",
     "ik\<^sub>s\<^sub>t (map Send ?X) = {}",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_var 0)),
       template_hole 0)),
    ("Strands_and_Constraints.fv_assignment_rhs_subset_fv_st'",
     "fv\<^sub>s\<^sub>e\<^sub>t (assignment_rhs\<^sub>s\<^sub>t ?S)
      <= fv\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.fv_assignment_rhs_subset_fv_st",
     "fv\<^sub>s\<^sub>e\<^sub>t (assignment_rhs\<^sub>s\<^sub>t ?S)
      <= wfrestrictedvars\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.fv_ik_subset_fv_st'",
     "fv\<^sub>s\<^sub>e\<^sub>t (ik\<^sub>s\<^sub>t ?S)
      <= fv\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.fv_ik_subset_fv_st",
     "fv\<^sub>s\<^sub>e\<^sub>t (ik\<^sub>s\<^sub>t ?S)
      <= wfrestrictedvars\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals,
       template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.bvars_subst_ident",
     "bvars\<^sub>s\<^sub>t ?S =
      bvars\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)",
     template_equation
      (template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Strands_and_Constraints.fv_trm_snd_rcv",
     "fv\<^sub>s\<^sub>e\<^sub>t
       (trms\<^sub>s\<^sub>t\<^sub>p
         (receive\<langle>?t\<rangle>\<^sub>s\<^sub>t)) =
      fv ?t",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.fv_trm_snd_rcv",
     "fv\<^sub>s\<^sub>e\<^sub>t
       (trms\<^sub>s\<^sub>t\<^sub>p
         (send\<langle>?t\<rangle>\<^sub>s\<^sub>t)) =
      fv ?t",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.ik_snd_empty'",
     "ik\<^sub>s\<^sub>t [send\<langle>?t\<rangle>\<^sub>s\<^sub>t] = {}",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_hole 1)),
       template_hole 0)),
    ("Strands_and_Constraints.assignment_rhs_append_subset",
     "assignment_rhs\<^sub>s\<^sub>t ?S
      <= assignment_rhs\<^sub>s\<^sub>t (?S @ ?S')",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Strands_and_Constraints.assignment_rhs_append_subset",
     "assignment_rhs\<^sub>s\<^sub>t ?S'
      <= assignment_rhs\<^sub>s\<^sub>t (?S @ ?S')",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Strands_and_Constraints.ik_append_subset",
     "ik\<^sub>s\<^sub>t ?S <= ik\<^sub>s\<^sub>t (?S @ ?S')",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Strands_and_Constraints.ik_append_subset",
     "ik\<^sub>s\<^sub>t ?S' <= ik\<^sub>s\<^sub>t (?S @ ?S')",
     template_inequation
      (less_equals, template_app (template_hole 1, template_var 1),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Strands_and_Constraints.vars\<^sub>s\<^sub>t_is_fv\<^sub>s\<^sub>t_bvars\<^sub>s\<^sub>t",
     "vars\<^sub>s\<^sub>t ?S =
      fv\<^sub>s\<^sub>t ?S Un bvars\<^sub>s\<^sub>t ?S",
     template_equation
      (template_app (template_hole 3, template_var 0),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("Strands_and_Constraints.bvars\<^sub>s\<^sub>t_singleton",
     "bvars\<^sub>s\<^sub>t [?x] = set (bvars\<^sub>s\<^sub>t\<^sub>p ?x)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)))),
    ("Strands_and_Constraints.fv_snd_rcv_strand_subset",
     "\<Union> (set (map fv\<^sub>i\<^sub>n\<^sub>e\<^sub>q ?S))
      <= fv\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.fv_snd_rcv_strand_subset",
     "\<Union> (set (map fv\<^sub>r\<^sub>c\<^sub>v ?S))
      <= fv\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.vars_snd_rcv_strand_subset2",
     "\<Union> (set (map fv\<^sub>r\<^sub>c\<^sub>v ?S))
      <= wfrestrictedvars\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.fv_snd_rcv_strand_subset",
     "\<Union> (set (map fv\<^sub>s\<^sub>n\<^sub>d ?S))
      <= fv\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.vars_snd_rcv_strand_subset2",
     "\<Union> (set (map fv\<^sub>s\<^sub>n\<^sub>d ?S))
      <= wfrestrictedvars\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.simple_split",
     "simple (?S @ ?S') ==> simple ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 1)))),
    ("Strands_and_Constraints.simple_split",
     "simple (?S @ ?S') ==> simple ?S'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Strands_and_Constraints.simple_Cons",
     "simple (?s # ?S) ==> simple ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("Strands_and_Constraints.fv_snd_rcv_empty",
     "fv\<^sub>s\<^sub>n\<^sub>d ?x = {} |
      fv\<^sub>r\<^sub>c\<^sub>v ?x = {}",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_hole 1)),
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 0, template_var 0)),
             template_hole 1))
         )),
    ("Strands_and_Constraints.fv_ik_is_fv_rcv",
     "fv\<^sub>s\<^sub>e\<^sub>t (ik\<^sub>s\<^sub>t ?S) =
      \<Union> (set (map fv\<^sub>r\<^sub>c\<^sub>v ?S))",
     template_equation
      (template_app
        (template_hole 5, template_app (template_hole 4, template_var 0)),
       template_app
        (template_hole 3,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0))))),
    ("Strands_and_Constraints.vars_st_rcv_map",
     "vars\<^sub>s\<^sub>t (map Receive ?X) = fv (Fun ?f ?X)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 1)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Strands_and_Constraints.vars_st_snd_map",
     "vars\<^sub>s\<^sub>t (map Send ?X) = fv (Fun ?f ?X)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 1)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Strands_and_Constraints.strand_size_map_fun_lt",
     "size\<^sub>s\<^sub>t (map Send ?X) < size (Fun ?f ?X)",
     template_inequation
      (less_than,
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_hole 2),
           template_var 1)),
       template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 0),
           template_var 1)))),
    ("Strands_and_Constraints.vars_snd_rcv_strand_subset2",
     "\<Union> (set (map (fv\<^sub>e\<^sub>q assign) ?S))
      <= wfrestrictedvars\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_hole 1)),
             template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.fv_snd_rcv_strand_subset",
     "\<Union> (set (map (fv\<^sub>e\<^sub>q ?ac) ?S))
      <= fv\<^sub>s\<^sub>t ?S",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.ik\<^sub>s\<^sub>t_assignment_rhs\<^sub>s\<^sub>t_wfrestrictedvars_subset",
     "fv\<^sub>s\<^sub>e\<^sub>t
       (ik\<^sub>s\<^sub>t ?A Un assignment_rhs\<^sub>s\<^sub>t ?A)
      <= wfrestrictedvars\<^sub>s\<^sub>t ?A",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app (template_hole 1, template_var 0))),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.wf\<^sub>s\<^sub>tI",
     "wfrestrictedvars\<^sub>s\<^sub>t ?S <= ?V ==>
      wf\<^sub>s\<^sub>t ?V ?S",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 1, template_var 1),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Strands_and_Constraints.strand_size_append",
     "size\<^sub>s\<^sub>t (?S @ ?S') =
      size\<^sub>s\<^sub>t ?S + size\<^sub>s\<^sub>t ?S'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Strands_and_Constraints.vars\<^sub>s\<^sub>t\<^sub>p_unfold",
     "vars\<^sub>s\<^sub>t\<^sub>p ?x =
      fv\<^sub>s\<^sub>e\<^sub>t (trms\<^sub>s\<^sub>t\<^sub>p ?x) Un
      set (bvars\<^sub>s\<^sub>t\<^sub>p ?x)",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Strands_and_Constraints.bvars\<^sub>s\<^sub>t_split",
     "bvars\<^sub>s\<^sub>t (?S @ ?S') =
      bvars\<^sub>s\<^sub>t ?S Un bvars\<^sub>s\<^sub>t ?S'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Strands_and_Constraints.strand_vars_split",
     "fv\<^sub>s\<^sub>t (?S @ ?S') =
      fv\<^sub>s\<^sub>t ?S Un fv\<^sub>s\<^sub>t ?S'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Strands_and_Constraints.strand_vars_split",
     "vars\<^sub>s\<^sub>t (?S @ ?S') =
      vars\<^sub>s\<^sub>t ?S Un vars\<^sub>s\<^sub>t ?S'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Strands_and_Constraints.strand_vars_split",
     "wfrestrictedvars\<^sub>s\<^sub>t (?S @ ?S') =
      wfrestrictedvars\<^sub>s\<^sub>t ?S Un
      wfrestrictedvars\<^sub>s\<^sub>t ?S'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Strands_and_Constraints.ik\<^sub>s\<^sub>t_is_rcv_set",
     "ik\<^sub>s\<^sub>t ?A =
      {t. receive\<langle>t\<rangle>\<^sub>s\<^sub>t : set ?A}",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Strands_and_Constraints.assignment_rhs_append",
     "assignment_rhs\<^sub>s\<^sub>t (?S @ ?S') =
      assignment_rhs\<^sub>s\<^sub>t ?S Un
      assignment_rhs\<^sub>s\<^sub>t ?S'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Strands_and_Constraints.ik_append",
     "ik\<^sub>s\<^sub>t (?S @ ?S') =
      ik\<^sub>s\<^sub>t ?S Un ik\<^sub>s\<^sub>t ?S'",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Strands_and_Constraints.trms\<^sub>s\<^sub>t_append",
     "trms\<^sub>s\<^sub>t (?A @ ?B) =
      trms\<^sub>s\<^sub>t ?A Un trms\<^sub>s\<^sub>t ?B",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Strands_and_Constraints.trms\<^sub>s\<^sub>t_cons",
     "trms\<^sub>s\<^sub>t (?x # ?S) =
      trms\<^sub>s\<^sub>t\<^sub>p ?x Un trms\<^sub>s\<^sub>t ?S",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 3, template_var 0)))),
    ("Strands_and_Constraints.dual\<^sub>s\<^sub>t_append",
     "dual\<^sub>s\<^sub>t (?A @ ?B) =
      dual\<^sub>s\<^sub>t ?A @ dual\<^sub>s\<^sub>t ?B",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Strands_and_Constraints.subst_sends_strand_fv_to_img",
     "fv\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)
      <= fv\<^sub>s\<^sub>t ?S Un range_vars ?\<delta>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Strands_and_Constraints.subst_sends_strand_step_fv_to_img",
     "fv\<^sub>s\<^sub>t\<^sub>p
       (?x \<cdot>\<^sub>s\<^sub>t\<^sub>p ?\<delta>)
      <= fv\<^sub>s\<^sub>t\<^sub>p ?x Un range_vars ?\<delta>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Strands_and_Constraints.strand_subst_vars_union_bound",
     "vars\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)
      <= vars\<^sub>s\<^sub>t ?S Un range_vars ?\<delta>",
     template_inequation
      (less_equals,
       template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 3, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Strands_and_Constraints.wf_vars_mono",
     "wf\<^sub>s\<^sub>t ?V ?S ==> wf\<^sub>s\<^sub>t (?V Un ?W) ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("Strands_and_Constraints.vars\<^sub>s\<^sub>tI",
     "?x : fv\<^sub>s\<^sub>t ?S ==> ?x : vars\<^sub>s\<^sub>t ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Strands_and_Constraints.vars\<^sub>s\<^sub>t\<^sub>pI",
     "?x : fv\<^sub>s\<^sub>t\<^sub>p ?s ==>
      ?x : vars\<^sub>s\<^sub>t\<^sub>p ?s",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Strands_and_Constraints.ik\<^sub>s\<^sub>tD'",
     "?t : ik\<^sub>s\<^sub>t ?S ==> ?t : trms\<^sub>s\<^sub>t ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Strands_and_Constraints.simple_append_sym",
     "simple (?S @ ?S') ==> simple (?S' @ ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 1,
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("Strands_and_Constraints.wf_prefix",
     "wf\<^sub>s\<^sub>t ?V (?S @ ?S') ==> wf\<^sub>s\<^sub>t ?V ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 2),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2), template_var 1)
           ))),
    ("Strands_and_Constraints.wf_snd_append'",
     "wf\<^sub>s\<^sub>t ?V ?S ==>
      wf\<^sub>s\<^sub>t ?V
       (send\<langle>?t\<rangle>\<^sub>s\<^sub>t # ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0)),
               template_var 1))
           ))),
    ("Strands_and_Constraints.strand_substI'",
     "fv\<^sub>s\<^sub>t ?S = {} ==>
      ?S \<cdot>\<^sub>s\<^sub>t ?\<theta> = ?S",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1), template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Strands_and_Constraints.strand_substI'",
     "vars\<^sub>s\<^sub>t ?S = {} ==>
      ?S \<cdot>\<^sub>s\<^sub>t ?\<theta> = ?S",
     template_implication
      ([template_equation
         (template_app (template_hole 3, template_var 1), template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 1))),
    ("Strands_and_Constraints.fv_subset_if_in_strand_ik'",
     "?t : ik\<^sub>s\<^sub>t ?S ==> fv ?t <= fv\<^sub>s\<^sub>t ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Strands_and_Constraints.vars_subset_if_in_strand_ik2",
     "?t : ik\<^sub>s\<^sub>t ?S ==>
      fv ?t <= wfrestrictedvars\<^sub>s\<^sub>t ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Strands_and_Constraints.ik\<^sub>s\<^sub>tD",
     "?t : ik\<^sub>s\<^sub>t ?S ==>
      receive\<langle>?t\<rangle>\<^sub>s\<^sub>t : set ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Strands_and_Constraints.in_strand_fv_subset",
     "?x : set ?S ==>
      vars\<^sub>s\<^sub>t\<^sub>p ?x <= vars\<^sub>s\<^sub>t ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Strands_and_Constraints.ik_cons",
     "ik\<^sub>s\<^sub>t (?x # ?S) =
      ik\<^sub>s\<^sub>t [?x] Un ik\<^sub>s\<^sub>t ?S",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 1),
               template_hole 0))),
         template_app (template_hole 3, template_var 0)))),
    ("Strands_and_Constraints.ik_subst",
     "ik\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>) =
      ik\<^sub>s\<^sub>t ?S \<cdot>\<^sub>s\<^sub>e\<^sub>t ?\<delta>",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 3, template_var 1)))),
    ("Strands_and_Constraints.strand_subst_set",
     "set (?S \<cdot>\<^sub>s\<^sub>t ?\<theta>) =
      (%x. x \<cdot>\<^sub>s\<^sub>t\<^sub>p ?\<theta>) ` set ?S",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 1, t_empty),
         template_app (template_hole 3, template_var 1)))),
    ("Strands_and_Constraints.wf_snd_append",
     "wf\<^sub>s\<^sub>t ?V
       (?S @ [send\<langle>?t\<rangle>\<^sub>s\<^sub>t]) =
      wf\<^sub>s\<^sub>t ?V ?S",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1),
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_hole 0))),
       template_app
        (template_app (template_hole 4, template_var 2), template_var 1))),
    ("Strands_and_Constraints.strand_size_map_fun_lt",
     "size\<^sub>s\<^sub>t (map Send ?X)
      < size\<^sub>s\<^sub>t
         [receive\<langle>Fun ?f ?X\<rangle>\<^sub>s\<^sub>t]",
     template_inequation
      (less_than,
       template_app
        (template_hole 6,
         template_app
          (template_app (template_hole 5, template_hole 4),
           template_var 1)),
       template_app
        (template_hole 6,
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1))),
           template_hole 0)))),
    ("Strands_and_Constraints.strand_size_map_fun_lt",
     "size\<^sub>s\<^sub>t (map Send ?X)
      < size\<^sub>s\<^sub>t
         [send\<langle>Fun ?f ?X\<rangle>\<^sub>s\<^sub>t]",
     template_inequation
      (less_than,
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_hole 3),
           template_var 1)),
       template_app
        (template_hole 5,
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 1))),
           template_hole 0)))),
    ("Strands_and_Constraints.simple_wfvarsoccs\<^sub>s\<^sub>t_is_fv\<^sub>s\<^sub>n\<^sub>d",
     "simple ?S ==>
      wfvarsoccs\<^sub>s\<^sub>t ?S =
      \<Union> (set (map fv\<^sub>s\<^sub>n\<^sub>d ?S))",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 0))],
       template_equation
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))))),
    ("Strands_and_Constraints.ik_rcv_map",
     "?t : set ?L ==> ?t : ik\<^sub>s\<^sub>t (map Receive ?L)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app (template_hole 3, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)))
           ))),
    ("Strands_and_Constraints.ik_rcv_map'",
     "?t : ik\<^sub>s\<^sub>t (map Receive ?L) ==> ?t : set ?L",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Strands_and_Constraints.wf_rcv_fv_single",
     "wf\<^sub>s\<^sub>t ?V
       (receive\<langle>?t\<rangle>\<^sub>s\<^sub>t # ?S') ==>
      fv ?t <= ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 2, template_var 1)),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_var 2))),
    ("Strands_and_Constraints.simple_append",
     "[| simple ?S; simple ?S' |] ==> simple (?S @ ?S')",
     template_implication
      ([template_predicate (template_app (template_hole 1, template_var 1)),
        template_predicate
         (template_app (template_hole 1, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Strands_and_Constraints.finite_trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s",
     "finite (trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?x)",
     template_predicate
      (
         template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4, template_app (template_hole 3, t_empty)),
               template_app (template_hole 0, template_var 0))))
         )),
    ("Strands_and_Constraints.strand_subst_hom",
     "?S @ ?S' \<cdot>\<^sub>s\<^sub>t ?\<theta> =
      (?S \<cdot>\<^sub>s\<^sub>t ?\<theta>) @
      (?S' \<cdot>\<^sub>s\<^sub>t ?\<theta>)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 0)))),
    ("Strands_and_Constraints.strand_subst_hom",
     "?x # ?S \<cdot>\<^sub>s\<^sub>t ?\<theta> =
      (?x \<cdot>\<^sub>s\<^sub>t\<^sub>p ?\<theta>) #
      (?S \<cdot>\<^sub>s\<^sub>t ?\<theta>)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Strands_and_Constraints.wf_subst_apply",
     "wf\<^sub>s\<^sub>t ?V ?S ==>
      wf\<^sub>s\<^sub>t (fv\<^sub>s\<^sub>e\<^sub>t (?\<delta> ` ?V))
       (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Strands_and_Constraints.wf_append_exec",
     "wf\<^sub>s\<^sub>t ?V (?S @ ?S') ==>
      wf\<^sub>s\<^sub>t (?V Un wfvarsoccs\<^sub>s\<^sub>t ?S) ?S'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_app (template_hole 0, template_var 1))),
             template_var 0)
           ))),
    ("Strands_and_Constraints.strand_size_rm_fun_lt",
     "size\<^sub>s\<^sub>t (?S @ ?S')
      < size\<^sub>s\<^sub>t
         (?S @ receive\<langle>Fun ?f ?X\<rangle>\<^sub>s\<^sub>t # ?S')",
     template_inequation
      (less_than,
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 3), template_var 2)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_var 2))))),
    ("Strands_and_Constraints.strand_size_rm_fun_lt",
     "size\<^sub>s\<^sub>t (?S @ ?S')
      < size\<^sub>s\<^sub>t
         (?S @ send\<langle>Fun ?f ?X\<rangle>\<^sub>s\<^sub>t # ?S')",
     template_inequation
      (less_than,
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 3), template_var 2)),
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 3),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 0))),
             template_var 2))))),
    ("Strands_and_Constraints.wf_ineq_append''",
     "wf\<^sub>s\<^sub>t ?V ?S ==>
      wf\<^sub>s\<^sub>t ?V
       (?S @
        [\<forall>?X\<langle>\<or>\<noteq>: ?F\<rangle>\<^sub>s\<^sub>t])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 0)),
                 template_hole 0)))
           ))),
    ("Strands_and_Constraints.fv\<^sub>s\<^sub>t_is_subterm_trms\<^sub>s\<^sub>t",
     "?x : fv\<^sub>s\<^sub>t ?A ==>
      Var ?x \<sqsubseteq>\<^sub>s\<^sub>e\<^sub>t trms\<^sub>s\<^sub>t ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1)),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Strands_and_Constraints.fv\<^sub>s\<^sub>t\<^sub>p_is_subterm_trms\<^sub>s\<^sub>t\<^sub>p",
     "?x : fv\<^sub>s\<^sub>t\<^sub>p ?a ==>
      Var ?x \<sqsubseteq>\<^sub>s\<^sub>e\<^sub>t
      trms\<^sub>s\<^sub>t\<^sub>p ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 1)),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_hole 1),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Strands_and_Constraints.fv_subset_if_in_strand_ik",
     "?t : ik\<^sub>s\<^sub>t ?S ==>
      fv ?t <= \<Union> (set (map fv\<^sub>r\<^sub>c\<^sub>v ?S))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 4, template_var 1),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))))),
    ("Strands_and_Constraints.strand_ground_subst_vars_subset",
     "ground (subst_range ?\<theta>) ==>
      vars\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<theta>)
      <= vars\<^sub>s\<^sub>t ?S",
     template_implication
      ([template_equation
         (template_app
           (template_hole 5,
            template_app (template_hole 4, template_var 1)),
          template_hole 3)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Strands_and_Constraints.strand_subst_fv_bounded_if_img_bounded",
     "range_vars ?\<delta> <= fv\<^sub>s\<^sub>t ?S ==>
      fv\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)
      <= fv\<^sub>s\<^sub>t ?S",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 2, template_var 1),
          template_app (template_hole 1, template_var 0))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Strands_and_Constraints.strand_substI",
     "subst_domain ?\<theta> Int fv\<^sub>s\<^sub>t ?S = {} ==>
      ?S \<cdot>\<^sub>s\<^sub>t ?\<theta> = ?S",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("Strands_and_Constraints.strand_substI",
     "subst_domain ?\<theta> Int vars\<^sub>s\<^sub>t ?S = {} ==>
      ?S \<cdot>\<^sub>s\<^sub>t ?\<theta> = ?S",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1)),
            template_app (template_hole 3, template_var 0)),
          template_hole 2)],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 0), template_var 1),
         template_var 0))),
    ("Strands_and_Constraints.ik\<^sub>s\<^sub>t_var_is_fv",
     "Var ?x \<sqsubseteq>\<^sub>s\<^sub>e\<^sub>t ik\<^sub>s\<^sub>t ?A ==>
      ?x : fv\<^sub>s\<^sub>t ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 1)),
              template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_hole 3),
                  template_app (template_hole 2, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Strands_and_Constraints.wf_constr_bvars_disj",
     "wf\<^sub>c\<^sub>o\<^sub>n\<^sub>s\<^sub>t\<^sub>r ?S ?\<theta> ==>
      (subst_domain ?\<theta> Un range_vars ?\<theta>) Int
      bvars\<^sub>s\<^sub>t ?S =
      {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               template_app (template_hole 2, template_var 0))),
           template_app (template_hole 1, template_var 1)),
         template_hole 0))),
    ("Strands_and_Constraints.wf_eq_check_append''",
     "wf\<^sub>s\<^sub>t ?V ?S ==>
      wf\<^sub>s\<^sub>t ?V
       (?S @ [\<langle>check: ?t \<doteq> ?t'\<rangle>\<^sub>s\<^sub>t])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app (template_hole 4, template_var 2),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app
                      (template_app (template_hole 2, template_hole 1),
                       template_var 1),
                     template_var 0)),
                 template_hole 0)))
           ))),
    ("Strands_and_Constraints.assignment_rhs\<^sub>s\<^sub>tD",
     "?t : assignment_rhs\<^sub>s\<^sub>t ?S ==>
      EX t'.
         \<langle>assign: t' \<doteq> ?t\<rangle>\<^sub>s\<^sub>t : set ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app (template_hole 5, template_var 0))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("Strands_and_Constraints.in_strand_fv_subset_rcv",
     "receive\<langle>?t\<rangle>\<^sub>s\<^sub>t : set ?S ==>
      fv ?t <= \<Union> (set (map fv\<^sub>r\<^sub>c\<^sub>v ?S))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_app (template_hole 6, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 4, template_var 1),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))))),
    ("Strands_and_Constraints.in_strand_fv_subset_snd",
     "send\<langle>?t\<rangle>\<^sub>s\<^sub>t : set ?S ==>
      fv ?t <= \<Union> (set (map fv\<^sub>s\<^sub>n\<^sub>d ?S))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1)),
              template_app (template_hole 6, template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 4, template_var 1),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0)))))),
    ("Strands_and_Constraints.wf_rcv_prefix_ground",
     "wf\<^sub>s\<^sub>t {} (map Receive ?M @ ?S) ==>
      vars\<^sub>s\<^sub>t (map Receive ?M) = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_hole 5),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_hole 2),
                    template_var 1)),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_var 1)),
         template_hole 5))),
    ("Strands_and_Constraints.wf_rcv_append",
     "wf\<^sub>s\<^sub>t ?V
       (?S @ receive\<langle>?t\<rangle>\<^sub>s\<^sub>t # ?S') ==>
      wf\<^sub>s\<^sub>t ?V (?S @ ?S')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_app
                 (template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 1)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 0))
           ))),
    ("Strands_and_Constraints.fv_trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s_is_fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s",
     "fv\<^sub>s\<^sub>e\<^sub>t
       (trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F) =
      fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F",
     template_equation
      (template_app
        (template_hole 7,
         template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 5, template_app (template_hole 4, t_empty)),
             template_app (template_hole 1, template_var 0)))),
       template_app (template_hole 0, template_var 0))),
    ("Strands_and_Constraints.strand_fv_card_rm_eq_le",
     "card (fv\<^sub>s\<^sub>t (?S @ ?S'))
      <= card
          (fv\<^sub>s\<^sub>t
            (?S @
             \<langle>?a: ?t \<doteq> ?t'\<rangle>\<^sub>s\<^sub>t # ?S'))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 4),
             template_var 3))),
       template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 4),
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 0)),
               template_var 3)))))),
    ("Strands_and_Constraints.strand_fv_card_rm_fun_le",
     "card (fv\<^sub>s\<^sub>t (?S @ ?S'))
      <= card
          (fv\<^sub>s\<^sub>t
            (?S @ send\<langle>Fun ?f ?X\<rangle>\<^sub>s\<^sub>t # ?S'))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 2))),
       template_app
        (template_hole 5,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_app
              (template_app
                (template_hole 2,
                 template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0))),
               template_var 2)))))),
    ("Strands_and_Constraints.ik_union_subset",
     "\<Union> (?P ` ik\<^sub>s\<^sub>t ?S)
      <= (UN x:set ?S. \<Union> (?P ` trms\<^sub>s\<^sub>t\<^sub>p x))",
     template_inequation
      (less_equals,
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 4, template_var 1),
           template_app (template_hole 3, template_var 0))),
       template_app
        (template_hole 5,
         template_app
          (template_app (template_hole 2, t_empty),
           template_app (template_hole 0, template_var 0))))),
    ("Strands_and_Constraints.wf_ineq_append'",
     "wf\<^sub>s\<^sub>t ?V (?S @ ?S') ==>
      wf\<^sub>s\<^sub>t ?V
       (?S @
        \<forall>?X\<langle>\<or>\<noteq>: ?F\<rangle>\<^sub>s\<^sub>t #
        ?S')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 0)),
                 template_var 2)))
           ))),
    ("Strands_and_Constraints.assignment_rhs\<^sub>s\<^sub>tD'",
     "?t \<sqsubseteq>\<^sub>s\<^sub>e\<^sub>t
      assignment_rhs\<^sub>s\<^sub>t ?S ==>
      ?t \<sqsubseteq>\<^sub>s\<^sub>e\<^sub>t trms\<^sub>s\<^sub>t ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_app (template_hole 1, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Strands_and_Constraints.ik\<^sub>s\<^sub>tD''",
     "?t \<sqsubseteq>\<^sub>s\<^sub>e\<^sub>t ik\<^sub>s\<^sub>t ?S ==>
      ?t \<sqsubseteq>\<^sub>s\<^sub>e\<^sub>t trms\<^sub>s\<^sub>t ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_hole 2),
                  template_app (template_hole 1, template_var 0))))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 1),
             template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_app (template_hole 0, template_var 0))))
           ))),
    ("Strands_and_Constraints.wf_ineq_append",
     "wf\<^sub>s\<^sub>t ?V
       (?S @
        \<forall>?X\<langle>\<or>\<noteq>: ?F\<rangle>\<^sub>s\<^sub>t #
        ?S') ==>
      wf\<^sub>s\<^sub>t ?V (?S @ ?S')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app
                   (template_hole 1,
                    template_app
                     (template_app (template_hole 0, template_var 2),
                      template_var 1)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_var 4),
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 0))
           ))),
    ("Strands_and_Constraints.ik\<^sub>s\<^sub>t_subterm_exD",
     "?t : ik\<^sub>s\<^sub>t ?S ==>
      EX x:set ?S.
         ?t \<sqsubseteq>\<^sub>s\<^sub>e\<^sub>t
         trms\<^sub>s\<^sub>t\<^sub>p x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0)),
             t_empty)
           ))),
    ("Strands_and_Constraints.wf_eq_check_append'",
     "wf\<^sub>s\<^sub>t ?V (?S @ ?S') ==>
      wf\<^sub>s\<^sub>t ?V
       (?S @
        \<langle>check: ?t \<doteq> ?t'\<rangle>\<^sub>s\<^sub>t # ?S')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 4),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_hole 0),
                       template_var 1),
                     template_var 0)),
                 template_var 2)))
           ))),
    ("Strands_and_Constraints.wf_rcv_fv",
     "wf\<^sub>s\<^sub>t ?V
       (?S @ receive\<langle>?t\<rangle>\<^sub>s\<^sub>t # ?S') ==>
      fv ?t <= wfvarsoccs\<^sub>s\<^sub>t ?S Un ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 1)),
                  template_var 0)))
            )],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 3)))),
    ("Strands_and_Constraints.wf_eq_check_append",
     "wf\<^sub>s\<^sub>t ?V
       (?S @
        \<langle>check: ?t \<doteq> ?t'\<rangle>\<^sub>s\<^sub>t # ?S') ==>
      wf\<^sub>s\<^sub>t ?V (?S @ ?S')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 4),
              template_app
               (template_app (template_hole 3, template_var 3),
                template_app
                 (template_app
                   (template_hole 2,
                    template_app
                     (template_app
                       (template_app (template_hole 1, template_hole 0),
                        template_var 2),
                      template_var 1)),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 4),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_var 0))
           ))),
    ("Strands_and_Constraints.simple_snd_is_var",
     "[| send\<langle>?t\<rangle>\<^sub>s\<^sub>t : set ?S; simple ?S |]
      ==> EX v. ?t = Var v",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 1)),
              template_app (template_hole 4, template_var 0))
            ),
        template_predicate
         (template_app (template_hole 3, template_var 0))],
       template_predicate (template_app (template_hole 2, t_empty)))),
    ("Strands_and_Constraints.subterm_if_in_strand_ik",
     "?t : ik\<^sub>s\<^sub>t ?S ==>
      EX t'.
         receive\<langle>t'\<rangle>\<^sub>s\<^sub>t : set ?S &
         ?t \<sqsubseteq> t'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app (template_hole 6, template_var 0))
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Strands_and_Constraints.wf_trm_stp_dom_fv_disjoint",
     "[| wf\<^sub>c\<^sub>o\<^sub>n\<^sub>s\<^sub>t\<^sub>r ?S ?\<theta>;
         ?t : trms\<^sub>s\<^sub>t ?S |]
      ==> subst_domain ?\<theta> Int fv ?t = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 0),
              template_app (template_hole 5, template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 1)),
           template_app (template_hole 1, template_var 0)),
         template_hole 0))),
    ("Strands_and_Constraints.finite_wfvarsoccs\<^sub>s\<^sub>t\<^sub>p",
     "finite (wfvarsoccs\<^sub>s\<^sub>t\<^sub>p ?x)",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, t_empty), t_empty),
                 t_empty),
               t_empty),
             template_var 0))
         )),
    ("Strands_and_Constraints.fv_snd_rcv_union",
     "fv\<^sub>s\<^sub>t\<^sub>p ?x =
      fv\<^sub>s\<^sub>n\<^sub>d ?x Un fv\<^sub>r\<^sub>c\<^sub>v ?x Un
      fv\<^sub>e\<^sub>q assign ?x Un
      fv\<^sub>e\<^sub>q check ?x Un
      fv\<^sub>i\<^sub>n\<^sub>e\<^sub>q ?x",
     template_equation
      (template_app (template_hole 7, template_var 0),
       template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 6,
                   template_app
                    (template_app
                      (template_hole 6,
                       template_app (template_hole 5, template_var 0)),
                     template_app (template_hole 4, template_var 0))),
                 template_app
                  (template_app (template_hole 3, template_hole 2),
                   template_var 0))),
             template_app
              (template_app (template_hole 3, template_hole 1),
               template_var 0))),
         template_app (template_hole 0, template_var 0)))),
    ("Strands_and_Constraints.wf_eq_fv",
     "wf\<^sub>s\<^sub>t ?V
       (?S @
        \<langle>assign: ?t \<doteq> ?t'\<rangle>\<^sub>s\<^sub>t # ?S') ==>
      fv ?t' <= wfvarsoccs\<^sub>s\<^sub>t ?S Un ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_app
                 (template_app
                   (template_hole 6,
                    template_app
                     (template_app
                       (template_app (template_hole 5, template_hole 4),
                        template_var 2),
                      template_var 1)),
                  template_var 0)))
            )],
       template_inequation
        (less_equals, template_app (template_hole 2, template_var 1),
         template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 3)),
           template_var 4)))),
    ("Strands_and_Constraints.wf\<^sub>s\<^sub>tI'",
     "\<Union> (fv\<^sub>r\<^sub>c\<^sub>v ` set ?S) Un
      \<Union> (fv_r\<^sub>e\<^sub>q assign ` set ?S)
      <= ?V ==>
      wf\<^sub>s\<^sub>t ?V ?S",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 7,
              template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_hole 4),
                  template_app (template_hole 3, template_var 1)))),
            template_app
             (template_hole 6,
              template_app
               (template_app
                 (template_hole 5,
                  template_app (template_hole 2, template_hole 1)),
                template_app (template_hole 3, template_var 1)))),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 0), template_var 1)
           ))),
    ("Strands_and_Constraints.wf_append_suffix",
     "[| wf\<^sub>s\<^sub>t ?V ?S;
         wfrestrictedvars\<^sub>s\<^sub>t ?S'
         <= wfrestrictedvars\<^sub>s\<^sub>t ?S Un ?V |]
      ==> wf\<^sub>s\<^sub>t ?V (?S @ ?S')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 0),
          template_app
           (template_app
             (template_hole 1,
              template_app (template_hole 2, template_var 1)),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Strands_and_Constraints.strand_subst_not_dom_fixed",
     "[| ?v : fv\<^sub>s\<^sub>t ?S; ?v ~: subst_domain ?\<delta> |]
      ==> ?v : fv\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app (template_hole 3, template_var 1))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 4, template_var 2),
                  template_app (template_hole 1, template_var 0))
                )
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 2),
             template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("Strands_and_Constraints.finite_wfrestrictedvars\<^sub>s\<^sub>t\<^sub>p",
     "finite (wfrestrictedvars\<^sub>s\<^sub>t\<^sub>p ?x)",
     template_predicate
      (
         template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 3, t_empty), t_empty),
                 t_empty),
               t_empty),
             template_var 0))
         )),
    ("Strands_and_Constraints.strand_fv_card_map_fun_eq",
     "card
       (fv\<^sub>s\<^sub>t
         (?S @ send\<langle>Fun ?f ?X\<rangle>\<^sub>s\<^sub>t # ?S')) =
      card (fv\<^sub>s\<^sub>t (?S @ map Send ?X @ ?S'))",
     template_equation
      (template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 2),
                     template_var 1))),
               template_var 0)))),
       template_app
        (template_hole 6,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 0, template_hole 2),
                   template_var 1)),
               template_var 0)))))),
    ("Strands_and_Constraints.wf_send_compose",
     "wf\<^sub>s\<^sub>t ?V (?S @ map Send ?X @ ?S') =
      wf\<^sub>s\<^sub>t ?V
       (?S @ send\<langle>Fun ?f ?X\<rangle>\<^sub>s\<^sub>t # ?S')",
     template_equation
      (template_app
        (template_app (template_hole 5, template_var 4),
         template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_hole 2),
                 template_var 2)),
             template_var 1))),
       template_app
        (template_app (template_hole 5, template_var 4),
         template_app
          (template_app (template_hole 4, template_var 3),
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 2))),
             template_var 1))))),
    ("Strands_and_Constraints.strand_subst_comp",
     "range_vars ?\<delta> Int bvars\<^sub>s\<^sub>t ?S = {} ==>
      ?S \<cdot>\<^sub>s\<^sub>t ?\<delta> \<circ>\<^sub>s ?\<theta> =
      (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>) \<cdot>\<^sub>s\<^sub>t
      ?\<theta>",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 2)),
            template_app (template_hole 4, template_var 1)),
          template_hole 3)],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_var 0)))),
    ("Strands_and_Constraints.ineq_apply_subst",
     "subst_domain ?\<delta> Int set ?X = {} ==>
      \<forall>?X\<langle>\<or>\<noteq>: ?F\<rangle>\<^sub>s\<^sub>t \<cdot>\<^sub>s\<^sub>t\<^sub>p
      ?\<delta> =
      \<forall>?X\<langle>\<or>\<noteq>: (?F \<cdot>\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s
    ?\<delta>)\<rangle>\<^sub>s\<^sub>t",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 2)),
            template_app (template_hole 5, template_var 1)),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2))))),
    ("Strands_and_Constraints.vars_snd_rcv_strand2",
     "wfrestrictedvars\<^sub>s\<^sub>t ?S =
      \<Union> (set (map fv\<^sub>s\<^sub>n\<^sub>d ?S)) Un
      \<Union> (set (map fv\<^sub>r\<^sub>c\<^sub>v ?S)) Un
      \<Union> (set (map (fv\<^sub>e\<^sub>q assign) ?S))",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_hole 6,
                 template_app
                  (template_hole 5,
                   template_app
                    (template_app (template_hole 4, template_hole 3),
                     template_var 0)))),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app (template_hole 4, template_hole 2),
                   template_var 0))))),
         template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 1, template_hole 0)),
               template_var 0)))))),
    ("Strands_and_Constraints.fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s_in_fv_trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s",
     "?x : fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F ==>
      ?x : fv\<^sub>s\<^sub>e\<^sub>t
            (trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 1),
             template_app
              (template_hole 6,
               template_app
                (template_hole 5,
                 template_app
                  (template_app
                    (template_hole 4,
                     template_app (template_hole 3, t_empty)),
                   template_app (template_hole 0, template_var 0)))))
           ))),
    ("Strands_and_Constraints.trms\<^sub>s\<^sub>t_subst",
     "subst_domain ?\<theta> Int bvars\<^sub>s\<^sub>t ?A = {} ==>
      trms\<^sub>s\<^sub>t (?A \<cdot>\<^sub>s\<^sub>t ?\<theta>) =
      trms\<^sub>s\<^sub>t ?A \<cdot>\<^sub>s\<^sub>e\<^sub>t ?\<theta>",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1)),
            template_app (template_hole 6, template_var 0)),
          template_hole 5)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 3, template_var 0))))),
    ("Strands_and_Constraints.strand_map_inv_set_snd_rcv_subst",
     "finite ?M ==>
      set (map Receive (inv set ?M) \<cdot>\<^sub>s\<^sub>t ?\<theta>) =
      Receive ` (?M \<cdot>\<^sub>s\<^sub>e\<^sub>t ?\<theta>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1))],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_hole 3),
                   template_var 1))),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 6),
           template_app
            (template_app (template_hole 1, t_empty), template_var 1))))),
    ("Strands_and_Constraints.strand_map_inv_set_snd_rcv_subst",
     "finite ?M ==>
      set (map Send (inv set ?M) \<cdot>\<^sub>s\<^sub>t ?\<theta>) =
      Send ` (?M \<cdot>\<^sub>s\<^sub>e\<^sub>t ?\<theta>)",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1))],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app (template_hole 7, template_hole 6),
                 template_app
                  (template_app
                    (template_app (template_hole 5, template_hole 4),
                     template_hole 3),
                   template_var 1))),
             template_var 0)),
         template_app
          (template_app (template_hole 2, template_hole 6),
           template_app
            (template_app (template_hole 1, t_empty), template_var 1))))),
    ("Strands_and_Constraints.trm\<^sub>s\<^sub>t\<^sub>p_subst",
     "subst_domain ?\<theta> Int set (bvars\<^sub>s\<^sub>t\<^sub>p ?a) =
      {} ==>
      trms\<^sub>s\<^sub>t\<^sub>p
       (?a \<cdot>\<^sub>s\<^sub>t\<^sub>p ?\<theta>) =
      trms\<^sub>s\<^sub>t\<^sub>p ?a \<cdot>\<^sub>s\<^sub>e\<^sub>t
      ?\<theta>",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 1)),
            template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 0))),
          template_hole 5)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_var 1)),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app (template_hole 3, template_var 0))))),
    ("Strands_and_Constraints.fv_strand_subst'",
     "bvars\<^sub>s\<^sub>t ?S Int
      (subst_domain ?\<delta> Un range_vars ?\<delta>) =
      {} ==>
      fv\<^sub>s\<^sub>e\<^sub>t (?\<delta> ` fv\<^sub>s\<^sub>t ?S) =
      fv\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 1)),
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_app (template_hole 5, template_var 0))),
          template_hole 4)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Strands_and_Constraints.fv_strand_subst2",
     "bvars\<^sub>s\<^sub>t ?S Int
      (subst_domain ?\<delta> Un range_vars ?\<delta>) =
      {} ==>
      fv\<^sub>s\<^sub>e\<^sub>t
       (?\<delta> ` wfrestrictedvars\<^sub>s\<^sub>t ?S) =
      wfrestrictedvars\<^sub>s\<^sub>t
       (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 1)),
            template_app
             (template_app
               (template_hole 7,
                template_app (template_hole 6, template_var 0)),
              template_app (template_hole 5, template_var 0))),
          template_hole 4)],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app (template_hole 1, template_var 1))),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Strands_and_Constraints.wf_rcv_append'''",
     "[| wf\<^sub>s\<^sub>t ?V ?S;
         fv ?t <= wfrestrictedvars\<^sub>s\<^sub>t ?S Un ?V |]
      ==> wf\<^sub>s\<^sub>t ?V
           (?S @ [receive\<langle>?t\<rangle>\<^sub>s\<^sub>t])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 0),
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 1)),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_hole 0)))
           ))),
    ("Strands_and_Constraints.strand_fv_bvars_disjointD",
     "[| fv\<^sub>s\<^sub>t ?S Int bvars\<^sub>s\<^sub>t ?S = {};
         \<forall>?X\<langle>\<or>\<noteq>: ?F\<rangle>\<^sub>s\<^sub>t
         : set ?S |]
      ==> set ?X <= bvars\<^sub>s\<^sub>t ?S",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2)),
            template_app (template_hole 6, template_var 2)),
          template_hole 5),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 1),
                  template_var 0)),
              template_app (template_hole 2, template_var 2))
            )],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 6, template_var 2)))),
    ("Strands_and_Constraints.vars_snd_rcv_union",
     "vars\<^sub>s\<^sub>t\<^sub>p ?x =
      fv\<^sub>s\<^sub>n\<^sub>d ?x Un fv\<^sub>r\<^sub>c\<^sub>v ?x Un
      fv\<^sub>e\<^sub>q assign ?x Un
      fv\<^sub>e\<^sub>q check ?x Un
      fv\<^sub>i\<^sub>n\<^sub>e\<^sub>q ?x Un
      set (bvars\<^sub>s\<^sub>t\<^sub>p ?x)",
     template_equation
      (template_app (template_hole 9, template_var 0),
       template_app
        (template_app
          (template_hole 8,
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_hole 8,
                       template_app
                        (template_app
                          (template_hole 8,
                           template_app (template_hole 7, template_var 0)),
                         template_app (template_hole 6, template_var 0))),
                     template_app
                      (template_app (template_hole 5, template_hole 4),
                       template_var 0))),
                 template_app
                  (template_app (template_hole 5, template_hole 3),
                   template_var 0))),
             template_app (template_hole 2, template_var 0))),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Strands_and_Constraints.not_simple_if_snd_fun",
     "EX S' S'' f X.
         ?S = S' @ send\<langle>Fun f X\<rangle>\<^sub>s\<^sub>t # S'' ==>
      ~ simple ?S",
     template_implication
      ([template_predicate (template_app (template_hole 9, t_empty))],
       template_negation
        (
           template_predicate
            (template_app (template_hole 0, template_var 0))
           ))),
    ("Strands_and_Constraints.wf_rcv_append''",
     "[| wf\<^sub>s\<^sub>t ?V ?S;
         fv ?t <= \<Union> (set (map fv\<^sub>s\<^sub>n\<^sub>d ?S)) |]
      ==> wf\<^sub>s\<^sub>t ?V
           (?S @ [receive\<langle>?t\<rangle>\<^sub>s\<^sub>t])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals, template_app (template_hole 8, template_var 0),
          template_app
           (template_hole 7,
            template_app
             (template_hole 6,
              template_app
               (template_app (template_hole 5, template_hole 4),
                template_var 1))))],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, template_var 2),
             template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app
                  (template_hole 2,
                   template_app (template_hole 1, template_var 0)),
                 template_hole 0)))
           ))),
    ("Strands_and_Constraints.strand_fv_unfold",
     "?v : fv\<^sub>s\<^sub>t ?S ==>
      EX S' x S''. ?S = S' @ x # S'' & ?v : fv\<^sub>s\<^sub>t\<^sub>p x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Strands_and_Constraints.strand_vars_unfold",
     "?v : vars\<^sub>s\<^sub>t ?S ==>
      EX S' x S''. ?S = S' @ x # S'' & ?v : vars\<^sub>s\<^sub>t\<^sub>p x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 1),
              template_app (template_hole 7, template_var 0))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Strands_and_Constraints.wf_eq_append'''",
     "[| wf\<^sub>s\<^sub>t ?V ?S;
         fv ?t' <= wfrestrictedvars\<^sub>s\<^sub>t ?S Un ?V |]
      ==> wf\<^sub>s\<^sub>t ?V
           (?S @ [\<langle>?a: ?t \<doteq> ?t'\<rangle>\<^sub>s\<^sub>t])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_var 3)
            ),
        template_inequation
         (less_equals, template_app (template_hole 6, template_var 2),
          template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 4, template_var 3)),
            template_var 4))],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 4),
             template_app
              (template_app (template_hole 3, template_var 3),
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 0),
                     template_var 2)),
                 template_hole 0)))
           ))),
    ("Strands_and_Constraints.wf_rcv_append'",
     "[| wf\<^sub>s\<^sub>t ?V (?S @ ?S');
         fv ?t <= wfrestrictedvars\<^sub>s\<^sub>t ?S Un ?V |]
      ==> wf\<^sub>s\<^sub>t ?V
           (?S @ receive\<langle>?t\<rangle>\<^sub>s\<^sub>t # ?S')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 0),
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 2)),
            template_var 3))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 3),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 0)),
                 template_var 1)))
           ))),
    ("Strands_and_Constraints.trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s_fv_subst_subset",
     "?t : trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F ==>
      fv (?t \<cdot> ?\<theta>)
      <= fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s
          (?F \<cdot>\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?\<theta>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 9,
                    template_app (template_hole 8, t_empty)),
                  template_app (template_hole 5, template_var 1))))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Strands_and_Constraints.wf_constr_bvars_disj'",
     "[| wf\<^sub>c\<^sub>o\<^sub>n\<^sub>s\<^sub>t\<^sub>r ?S ?\<theta>;
         subst_domain ?\<delta> Un range_vars ?\<delta>
         <= fv\<^sub>s\<^sub>t ?S |]
      ==> (subst_domain ?\<delta> Un range_vars ?\<delta>) Int
          bvars\<^sub>s\<^sub>t ?S =
          {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 7,
              template_app (template_hole 6, template_var 0)),
            template_app (template_hole 5, template_var 0)),
          template_app (template_hole 4, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 7,
                 template_app (template_hole 6, template_var 0)),
               template_app (template_hole 5, template_var 0))),
           template_app (template_hole 1, template_var 2)),
         template_hole 0))),
    ("Strands_and_Constraints.strand_fv_bvars_disjointD",
     "[| fv\<^sub>s\<^sub>t ?S Int bvars\<^sub>s\<^sub>t ?S = {};
         \<forall>?X\<langle>\<or>\<noteq>: ?F\<rangle>\<^sub>s\<^sub>t
         : set ?S |]
      ==> fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F - set ?X
          <= fv\<^sub>s\<^sub>t ?S",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 2)),
            template_app (template_hole 8, template_var 2)),
          template_hole 7),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_var 0)),
              template_app (template_hole 4, template_var 2))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 0)),
           template_app (template_hole 0, template_var 1)),
         template_app (template_hole 9, template_var 2)))),
    ("Strands_and_Constraints.strand_fv_subst_subset_if_subst_elim'",
     "[| subst_elim ?\<delta> ?v; ?v : fv\<^sub>s\<^sub>t ?S;
         range_vars ?\<delta> <= fv\<^sub>s\<^sub>t ?S |]
      ==> fv\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)
          < fv\<^sub>s\<^sub>t ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 0))
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_app (template_hole 4, template_var 0))],
       template_inequation
        (less_than,
         template_app
          (template_hole 4,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app (template_hole 4, template_var 0)))),
    ("Strands_and_Constraints.wf_eq_append'",
     "[| wf\<^sub>s\<^sub>t ?V (?S @ ?S');
         fv ?t' <= wfrestrictedvars\<^sub>s\<^sub>t ?S Un ?V |]
      ==> wf\<^sub>s\<^sub>t ?V
           (?S @
            \<langle>?a: ?t \<doteq> ?t'\<rangle>\<^sub>s\<^sub>t # ?S')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_app
               (template_app (template_hole 6, template_var 4),
                template_var 3))
            ),
        template_inequation
         (less_equals, template_app (template_hole 4, template_var 2),
          template_app
           (template_app
             (template_hole 3,
              template_app (template_hole 2, template_var 4)),
            template_var 5))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 5),
             template_app
              (template_app (template_hole 6, template_var 4),
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 0),
                     template_var 2)),
                 template_var 3)))
           ))),
    ("Strands_and_Constraints.wf_eq_append",
     "[| wf\<^sub>s\<^sub>t ?V
          (?S @
           \<langle>?a: ?t \<doteq> ?t'\<rangle>\<^sub>s\<^sub>t # ?S');
         fv ?t <= wfrestrictedvars\<^sub>s\<^sub>t ?S Un ?V |]
      ==> wf\<^sub>s\<^sub>t ?V (?S @ ?S')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_app
               (template_app (template_hole 6, template_var 4),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app
                       (template_app (template_hole 4, template_var 3),
                        template_var 2),
                      template_var 1)),
                  template_var 0)))
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_var 2),
          template_app
           (template_app
             (template_hole 1,
              template_app (template_hole 0, template_var 4)),
            template_var 5))],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 5),
             template_app
              (template_app (template_hole 6, template_var 4),
               template_var 0))
           ))),
    ("Strands_and_Constraints.not_list_all_elim",
     "~ list_all ?P ?A ==>
      EX B x C. ?A = B @ x # C & ~ ?P x & list_all ?P B",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate (template_app (template_hole 5, t_empty)))),
    ("Strands_and_Constraints.wf_constr_bvars_disj'",
     "[| wf\<^sub>c\<^sub>o\<^sub>n\<^sub>s\<^sub>t\<^sub>r ?S ?\<theta>;
         subst_domain ?\<delta> Un range_vars ?\<delta>
         <= fv\<^sub>s\<^sub>t ?S |]
      ==> (subst_domain ?\<theta> Un range_vars ?\<theta>) Int
          bvars\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>) =
          {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 0)),
            template_app (template_hole 6, template_var 0)),
          template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_hole 8,
                 template_app (template_hole 7, template_var 1)),
               template_app (template_hole 6, template_var 1))),
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 0))),
         template_hole 0))),
    ("Strands_and_Constraints.trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s_fv_subst_subset'",
     "?t \<sqsubseteq>\<^sub>s\<^sub>e\<^sub>t
      trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F ==>
      fv (?t \<cdot> ?\<theta>)
      <= fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s
          (?F \<cdot>\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?\<theta>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_hole 10),
                  template_app
                   (template_hole 12,
                    template_app
                     (template_app
                       (template_hole 9,
                        template_app (template_hole 8, t_empty)),
                      template_app (template_hole 5, template_var 1))))))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Strands_and_Constraints.strand_subst_all_fv_subset",
     "[| fv ?t <= fv\<^sub>s\<^sub>t ?S;
         (subst_domain ?\<delta> Un range_vars ?\<delta>) Int
         bvars\<^sub>s\<^sub>t ?S =
         {} |]
      ==> fv (?t \<cdot> ?\<delta>)
          <= fv\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_var 2),
          template_app (template_hole 9, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 5, template_var 0)),
                template_app (template_hole 4, template_var 0))),
            template_app (template_hole 3, template_var 1)),
          template_hole 2)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 0)),
         template_app
          (template_hole 9,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Strands_and_Constraints.wf_eq_append''",
     "[| wf\<^sub>s\<^sub>t ?V (?S @ ?S');
         fv ?t' <= wfvarsoccs\<^sub>s\<^sub>t ?S Un ?V |]
      ==> wf\<^sub>s\<^sub>t ?V
           (?S @
            [\<langle>?a: ?t \<doteq> ?t'\<rangle>\<^sub>s\<^sub>t] @ ?S')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 3))
            ),
        template_inequation
         (less_equals, template_app (template_hole 5, template_var 2),
          template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 3, template_var 4)),
            template_var 5))],
       template_predicate
        (
           template_app
            (template_app (template_hole 8, template_var 5),
             template_app
              (template_app (template_hole 7, template_var 4),
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_hole 2,
                       template_app
                        (template_app
                          (template_app (template_hole 1, template_var 1),
                           template_var 0),
                         template_var 2)),
                     template_hole 0)),
                 template_var 3)))
           ))),
    ("Strands_and_Constraints.fv\<^sub>r\<^sub>c\<^sub>vE",
     "[| ?v : \<Union> (set (map fv\<^sub>r\<^sub>c\<^sub>v ?S));
         !!t. [| receive\<langle>t\<rangle>\<^sub>s\<^sub>t : set ?S;
                 ?v : fv t |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 1))))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Strands_and_Constraints.fv\<^sub>s\<^sub>n\<^sub>dE",
     "[| ?v : \<Union> (set (map fv\<^sub>s\<^sub>n\<^sub>d ?S));
         !!t. [| send\<langle>t\<rangle>\<^sub>s\<^sub>t : set ?S;
                 ?v : fv t |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 2),
              template_app
               (template_hole 8,
                template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_hole 5),
                    template_var 1))))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("Strands_and_Constraints.strand_fv_subst_subset_if_subst_elim",
     "[| subst_elim ?\<delta> ?v;
         ?v : fv\<^sub>s\<^sub>t ?S |
         bvars\<^sub>s\<^sub>t ?S Int
         (subst_domain ?\<delta> Un range_vars ?\<delta>) =
         {} |]
      ==> ?v ~: fv\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 1),
                  template_app (template_hole 9, template_var 0))),
              template_app
               (template_app
                 (template_hole 8,
                  template_app
                   (template_app
                     (template_hole 7,
                      template_app (template_hole 6, template_var 0)),
                    template_app
                     (template_app
                       (template_hole 5,
                        template_app (template_hole 4, template_var 2)),
                      template_app (template_hole 3, template_var 2)))),
                template_hole 2))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 10, template_var 1),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_app (template_hole 0, template_var 0),
                     template_var 2)))
               )
           ))),
    ("Strands_and_Constraints.wf_append_suffix'",
     "[| wf\<^sub>s\<^sub>t ?V ?S;
         \<Union> (fv\<^sub>r\<^sub>c\<^sub>v ` set ?S') Un
         \<Union> (fv_r\<^sub>e\<^sub>q assign ` set ?S')
         <= wfvarsoccs\<^sub>s\<^sub>t ?S Un ?V |]
      ==> wf\<^sub>s\<^sub>t ?V (?S @ ?S')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_hole 5),
                  template_app (template_hole 4, template_var 0)))),
            template_app
             (template_hole 7,
              template_app
               (template_app
                 (template_hole 6,
                  template_app (template_hole 3, template_hole 2)),
                template_app (template_hole 4, template_var 0)))),
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 1, template_var 1)),
            template_var 2))],
       template_predicate
        (
           template_app
            (template_app (template_hole 10, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("Strands_and_Constraints.strand_subst_img_bound",
     "[| subst_domain ?\<delta> Un range_vars ?\<delta>
         <= fv\<^sub>s\<^sub>t ?S;
         (subst_domain ?\<delta> Un range_vars ?\<delta>) Int
         bvars\<^sub>s\<^sub>t ?S =
         {} |]
      ==> range_vars ?\<delta>
          <= fv\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1)),
            template_app (template_hole 6, template_var 1)),
          template_app (template_hole 5, template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 1)),
                template_app (template_hole 6, template_var 1))),
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_inequation
        (less_equals, template_app (template_hole 6, template_var 1),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Strands_and_Constraints.strand_subst_img_bound'",
     "[| subst_domain ?\<delta> Un range_vars ?\<delta>
         <= vars\<^sub>s\<^sub>t ?S;
         (subst_domain ?\<delta> Un range_vars ?\<delta>) Int
         bvars\<^sub>s\<^sub>t ?S =
         {} |]
      ==> range_vars ?\<delta>
          <= vars\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1)),
            template_app (template_hole 6, template_var 1)),
          template_app (template_hole 5, template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 3,
              template_app
               (template_app
                 (template_hole 8,
                  template_app (template_hole 7, template_var 1)),
                template_app (template_hole 6, template_var 1))),
            template_app (template_hole 2, template_var 0)),
          template_hole 1)],
       template_inequation
        (less_equals, template_app (template_hole 6, template_var 1),
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 1))))),
    ("Strands_and_Constraints.strand_map_set_subst",
     "bvars\<^sub>s\<^sub>t ?S Int
      (subst_domain ?\<delta> Un range_vars ?\<delta>) =
      {} ==>
      \<Union>
       (set (map trms\<^sub>s\<^sub>t\<^sub>p
              (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>))) =
      \<Union>
       (set (map trms\<^sub>s\<^sub>t\<^sub>p
              ?S)) \<cdot>\<^sub>s\<^sub>e\<^sub>t
      ?\<delta>",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 1)),
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 10, template_var 0)),
              template_app (template_hole 9, template_var 0))),
          template_hole 8)],
       template_equation
        (template_app
          (template_hole 6,
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_hole 3),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_var 0)))),
         template_app
          (template_app (template_hole 1, t_empty),
           template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app (template_hole 4, template_hole 3),
                 template_var 1))))))),
    ("Strands_and_Constraints.trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s_subst",
     "trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s
       (?a \<cdot>\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?\<theta>) =
      trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s
       ?a \<cdot>\<^sub>s\<^sub>e\<^sub>t
      ?\<theta>",
     template_equation
      (template_app
        (template_hole 14,
         template_app
          (template_app
            (template_hole 13, template_app (template_hole 12, t_empty)),
           template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 8, template_var 1),
               template_var 0)))),
       template_app
        (template_app (template_hole 7, t_empty),
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 4, template_app (template_hole 3, t_empty)),
             template_app (template_hole 0, template_var 1)))))),
    ("Strands_and_Constraints.fv_snd_rcv_strand",
     "fv\<^sub>s\<^sub>t ?S =
      \<Union> (set (map fv\<^sub>s\<^sub>n\<^sub>d ?S)) Un
      \<Union> (set (map fv\<^sub>r\<^sub>c\<^sub>v ?S)) Un
      \<Union> (set (map (fv\<^sub>e\<^sub>q assign) ?S)) Un
      \<Union> (set (map (fv\<^sub>e\<^sub>q check) ?S)) Un
      \<Union> (set (map fv\<^sub>i\<^sub>n\<^sub>e\<^sub>q ?S))",
     template_equation
      (template_app (template_hole 10, template_var 0),
       template_app
        (template_app
          (template_hole 9,
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 7,
                           template_app
                            (template_app
                              (template_hole 6, template_hole 5),
                             template_var 0)))),
                     template_app
                      (template_hole 8,
                       template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 6, template_hole 4),
                           template_var 0))))),
                 template_app
                  (template_hole 8,
                   template_app
                    (template_hole 7,
                     template_app
                      (template_app
                        (template_hole 6,
                         template_app (template_hole 3, template_hole 2)),
                       template_var 0))))),
             template_app
              (template_hole 8,
               template_app
                (template_hole 7,
                 template_app
                  (template_app
                    (template_hole 6,
                     template_app (template_hole 3, template_hole 1)),
                   template_var 0))))),
         template_app
          (template_hole 8,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 6, template_hole 0),
               template_var 0)))))),
    ("Strands_and_Constraints.wf_simple_fv_occurrence",
     "[| wf\<^sub>s\<^sub>t {} ?S; simple ?S;
         ?v : wfrestrictedvars\<^sub>s\<^sub>t ?S |]
      ==> EX S\<^sub>p\<^sub>r\<^sub>e S\<^sub>s\<^sub>u\<^sub>f.
             ?S =
             S\<^sub>p\<^sub>r\<^sub>e @
             send\<langle>Var ?v\<rangle>\<^sub>s\<^sub>t #
             S\<^sub>s\<^sub>u\<^sub>f &
             ?v ~: wfrestrictedvars\<^sub>s\<^sub>t
                    S\<^sub>p\<^sub>r\<^sub>e",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_hole 11),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app (template_hole 8, template_var 1))
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("Strands_and_Constraints.subst_apply_fv_subset_strand_trm2",
     "[| fv ?t <= wfrestrictedvars\<^sub>s\<^sub>t ?S Un ?V;
         bvars\<^sub>s\<^sub>t ?S Int
         (subst_domain ?\<delta> Un range_vars ?\<delta>) =
         {} |]
      ==> fv (?t \<cdot> ?\<delta>)
          <= wfrestrictedvars\<^sub>s\<^sub>t
              (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>) Un
             fv\<^sub>s\<^sub>e\<^sub>t (?\<delta> ` ?V)",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 12, template_var 3),
          template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 2)),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2)),
            template_app
             (template_app
               (template_hole 11,
                template_app (template_hole 6, template_var 0)),
              template_app (template_hole 5, template_var 0))),
          template_hole 4)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 12,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 11,
             template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0))),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("Strands_and_Constraints.strand_fv_bvars_disjoint_unfold",
     "[| fv\<^sub>s\<^sub>t ?S Int bvars\<^sub>s\<^sub>t ?S = {};
         \<forall>?X\<langle>\<or>\<noteq>: ?F\<rangle>\<^sub>s\<^sub>t
         : set ?S;
         \<forall>?Y\<langle>\<or>\<noteq>: ?G\<rangle>\<^sub>s\<^sub>t
         : set ?S |]
      ==> set ?Y Int
          (fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F - set ?X) =
          {}",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 4)),
            template_app (template_hole 7, template_var 4)),
          template_hole 6),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2)),
              template_app (template_hole 3, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 5,
                template_app
                 (template_app (template_hole 4, template_var 1),
                  template_var 0)),
              template_app (template_hole 3, template_var 4))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 9,
             template_app (template_hole 2, template_var 1)),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 2)),
             template_app (template_hole 2, template_var 3))),
         template_hole 6))),
    ("Strands_and_Constraints.vars_snd_rcv_strand",
     "vars\<^sub>s\<^sub>t ?S =
      \<Union> (set (map fv\<^sub>s\<^sub>n\<^sub>d ?S)) Un
      \<Union> (set (map fv\<^sub>r\<^sub>c\<^sub>v ?S)) Un
      \<Union> (set (map (fv\<^sub>e\<^sub>q assign) ?S)) Un
      \<Union> (set (map (fv\<^sub>e\<^sub>q check) ?S)) Un
      \<Union> (set (map fv\<^sub>i\<^sub>n\<^sub>e\<^sub>q ?S)) Un
      bvars\<^sub>s\<^sub>t ?S",
     template_equation
      (template_app (template_hole 11, template_var 0),
       template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app
                          (template_hole 10,
                           template_app
                            (template_hole 9,
                             template_app
                              (template_hole 8,
                               template_app
                                (template_app
                                  (template_hole 7, template_hole 6),
                                 template_var 0)))),
                         template_app
                          (template_hole 9,
                           template_app
                            (template_hole 8,
                             template_app
                              (template_app
                                (template_hole 7, template_hole 5),
                               template_var 0))))),
                     template_app
                      (template_hole 9,
                       template_app
                        (template_hole 8,
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_hole 4, template_hole 3)),
                           template_var 0))))),
                 template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 4, template_hole 2)),
                       template_var 0))))),
             template_app
              (template_hole 9,
               template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_hole 1),
                   template_var 0))))),
         template_app (template_hole 0, template_var 0)))),
    ("Strands_and_Constraints.trm_strand_subst_cong",
     "?t : trms\<^sub>s\<^sub>t ?S ==>
      ?t \<cdot> ?\<delta>
      : trms\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>) |
      (EX X F.
          \<forall>X\<langle>\<or>\<noteq>: F\<rangle>\<^sub>s\<^sub>t
          : set ?S &
          ?t \<cdot> rm_vars (set X) ?\<delta>
          : trms\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app (template_hole 13, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app
                  (template_hole 14,
                   template_app
                    (template_app (template_hole 11, template_var 2),
                     template_var 0)),
                 template_app
                  (template_hole 13,
                   template_app
                    (template_app (template_hole 10, template_var 1),
                     template_var 0)))),
             template_app (template_hole 9, t_empty))
           ))),
    ("Strands_and_Constraints.Unifier_strand_fv_subset",
     "[| ?t : ik\<^sub>s\<^sub>t ?S; Unifier ?\<delta> (Fun ?f ?X) ?t;
         bvars\<^sub>s\<^sub>t ?S Int
         (subst_domain ?\<delta> Un range_vars ?\<delta>) =
         {} |]
      ==> fv (Fun ?f ?X \<cdot> ?\<delta>)
          <= \<Union>
              (set (map fv\<^sub>r\<^sub>c\<^sub>v
                     (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 4),
              template_app (template_hole 17, template_var 3))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 15,
              template_app
               (template_app (template_hole 14, template_var 2),
                template_var 1)),
            template_var 0),
          template_app
           (template_app (template_hole 15, template_var 4),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 12,
              template_app (template_hole 11, template_var 3)),
            template_app
             (template_app
               (template_hole 10,
                template_app (template_hole 9, template_var 0)),
              template_app (template_hole 8, template_var 0))),
          template_hole 7)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 14, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_hole 4,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0))))))),
    ("Strands_and_Constraints.fv_strand_step_subst",
     "[| ?P = fv\<^sub>s\<^sub>t\<^sub>p |
         ?P = fv\<^sub>r\<^sub>c\<^sub>v |
         ?P = fv\<^sub>s\<^sub>n\<^sub>d |
         ?P = fv\<^sub>e\<^sub>q ?ac |
         ?P = fv\<^sub>i\<^sub>n\<^sub>e\<^sub>q;
         set (bvars\<^sub>s\<^sub>t\<^sub>p ?x) Int
         (subst_domain ?\<delta> Un range_vars ?\<delta>) =
         {} |]
      ==> fv\<^sub>s\<^sub>e\<^sub>t (?\<delta> ` ?P ?x) =
          ?P (?x \<cdot>\<^sub>s\<^sub>t\<^sub>p ?\<delta>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app
                 (template_app (template_hole 16, template_var 3),
                  template_hole 15)),
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app (template_hole 16, template_var 3),
                    template_hole 14)),
                template_app
                 (template_app
                   (template_hole 17,
                    template_app
                     (template_app (template_hole 16, template_var 3),
                      template_hole 13)),
                  template_app
                   (template_app
                     (template_hole 17,
                      template_app
                       (template_app (template_hole 16, template_var 3),
                        template_app (template_hole 12, template_var 2))),
                    template_app
                     (template_app (template_hole 16, template_var 3),
                      template_hole 11)))))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 9,
              template_app
               (template_hole 8,
                template_app (template_hole 7, template_var 1))),
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              template_app (template_hole 4, template_var 0))),
          template_hole 3)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_var 3, template_var 1))),
         template_app
          (template_var 3,
           template_app
            (template_app (template_hole 0, template_var 1),
             template_var 0))))),
    ("Strands_and_Constraints.not_simple\<^sub>s\<^sub>t\<^sub>p_elim",
     "~ simple\<^sub>s\<^sub>t\<^sub>p ?x ==>
      (EX f T. ?x = send\<langle>Fun f T\<rangle>\<^sub>s\<^sub>t) |
      (EX a t t'. ?x = \<langle>a: t \<doteq> t'\<rangle>\<^sub>s\<^sub>t) |
      (EX X F.
          ?x =
          \<forall>X\<langle>\<or>\<noteq>: F\<rangle>\<^sub>s\<^sub>t &
          (\<nexists>\<I>. ineq_model \<I> X F))",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 15, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14, template_app (template_hole 13, t_empty)),
             template_app
              (template_app
                (template_hole 14, template_app (template_hole 8, t_empty)),
               template_app (template_hole 5, t_empty)))
           ))),
    ("Strands_and_Constraints.wf_equality",
     "[| wf\<^sub>s\<^sub>t ?V
          (?S @
           \<langle>?ac: ?t \<doteq> ?t'\<rangle>\<^sub>s\<^sub>t # ?S');
         mgu ?t ?t' = Some ?\<delta>;
         bvars\<^sub>s\<^sub>t
          (?S @
           \<langle>?ac: ?t \<doteq> ?t'\<rangle>\<^sub>s\<^sub>t # ?S') Int
         (subst_domain ?\<delta> Un range_vars ?\<delta>) =
         {} |]
      ==> wf\<^sub>s\<^sub>t (fv\<^sub>s\<^sub>e\<^sub>t (?\<delta> ` ?V))
           (?S @ ?S' \<cdot>\<^sub>s\<^sub>t ?\<delta>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 6),
              template_app
               (template_app (template_hole 15, template_var 5),
                template_app
                 (template_app
                   (template_hole 14,
                    template_app
                     (template_app
                       (template_app (template_hole 13, template_var 4),
                        template_var 3),
                      template_var 2)),
                  template_var 1)))
            ),
        template_equation
         (template_app
           (template_app (template_hole 11, template_var 3),
            template_var 2),
          template_app (template_hole 10, template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 15, template_var 5),
                  template_app
                   (template_app
                     (template_hole 14,
                      template_app
                       (template_app
                         (template_app (template_hole 13, template_var 4),
                          template_var 3),
                        template_var 2)),
                    template_var 1)))),
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              template_app (template_hole 4, template_var 0))),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 6))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 15, template_var 5),
                   template_var 1)),
               template_var 0))
           ))),
    ("Strands_and_Constraints.fv_strand_subst",
     "[| ?P = fv\<^sub>s\<^sub>t\<^sub>p |
         ?P = fv\<^sub>r\<^sub>c\<^sub>v |
         ?P = fv\<^sub>s\<^sub>n\<^sub>d |
         ?P = fv\<^sub>e\<^sub>q ?ac |
         ?P = fv\<^sub>i\<^sub>n\<^sub>e\<^sub>q;
         bvars\<^sub>s\<^sub>t ?S Int
         (subst_domain ?\<delta> Un range_vars ?\<delta>) =
         {} |]
      ==> fv\<^sub>s\<^sub>e\<^sub>t
           (?\<delta> ` \<Union> (set (map ?P ?S))) =
          \<Union> (set (map ?P (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app (template_hole 18, template_var 3),
                  template_hole 17)),
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app (template_hole 18, template_var 3),
                    template_hole 16)),
                template_app
                 (template_app
                   (template_hole 19,
                    template_app
                     (template_app (template_hole 18, template_var 3),
                      template_hole 15)),
                  template_app
                   (template_app
                     (template_hole 19,
                      template_app
                       (template_app (template_hole 18, template_var 3),
                        template_app (template_hole 14, template_var 2))),
                    template_app
                     (template_app (template_hole 18, template_var 3),
                      template_hole 13)))))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 11,
              template_app (template_hole 10, template_var 1)),
            template_app
             (template_app
               (template_hole 9,
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 7, template_var 0))),
          template_hole 6)],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 0),
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 1))))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))))),
    ("Strands_and_Constraints.strand_subst_subst_idem",
     "[| subst_idem ?\<delta>;
         subst_domain ?\<delta> Un range_vars ?\<delta>
         <= fv\<^sub>s\<^sub>t ?S;
         subst_domain ?\<theta> Int fv\<^sub>s\<^sub>t ?S = {};
         range_vars ?\<delta> Int bvars\<^sub>s\<^sub>t ?S = {};
         range_vars ?\<theta> Int bvars\<^sub>s\<^sub>t ?S = {} |]
      ==> (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>) \<cdot>\<^sub>s\<^sub>t
          ?\<theta> =
          ?S \<cdot>\<^sub>s\<^sub>t ?\<delta>",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 9,
              template_app (template_hole 8, template_var 2)),
            template_app (template_hole 7, template_var 2)),
          template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 8, template_var 0)),
            template_app (template_hole 6, template_var 1)),
          template_hole 3),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 7, template_var 2)),
            template_app (template_hole 2, template_var 1)),
          template_hole 3),
        template_equation
         (template_app
           (template_app
             (template_hole 4,
              template_app (template_hole 7, template_var 0)),
            template_app (template_hole 2, template_var 1)),
          template_hole 3)],
       template_equation
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 2)),
           template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 2)))),
    ("Strands_and_Constraints.trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s_funs_term_cases",
     "[| ?t : trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s
               (?F \<cdot>\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s
                ?\<theta>);
         ?f : funs_term ?t |]
      ==> (EX u:trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F.
              ?f : funs_term u) |
          (EX x:fv\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s ?F.
              ?f : funs_term (?\<theta> x))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 3),
              template_app
               (template_hole 19,
                template_app
                 (template_app
                   (template_hole 18,
                    template_app (template_hole 17, t_empty)),
                  template_app
                   (template_hole 14,
                    template_app
                     (template_app (template_hole 13, template_var 2),
                      template_var 1)))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 0),
              template_app (template_hole 11, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 9,
                   template_app
                    (template_hole 8,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 6, t_empty)),
                       template_app (template_hole 3, template_var 2)))),
                 t_empty)),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               t_empty))
           ))),
    ("Strands_and_Constraints.strand_subst_subst_idem",
     "[| subst_idem ?\<delta>;
         subst_domain ?\<delta> Un range_vars ?\<delta>
         <= fv\<^sub>s\<^sub>t ?S;
         subst_domain ?\<theta> Int fv\<^sub>s\<^sub>t ?S = {};
         range_vars ?\<delta> Int bvars\<^sub>s\<^sub>t ?S = {};
         range_vars ?\<theta> Int bvars\<^sub>s\<^sub>t ?S = {} |]
      ==> (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>) \<cdot>\<^sub>s\<^sub>t
          ?\<theta> \<circ>\<^sub>s ?\<delta> =
          ?S \<cdot>\<^sub>s\<^sub>t ?\<delta>",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 2)),
            template_app (template_hole 8, template_var 2)),
          template_app (template_hole 7, template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 9, template_var 0)),
            template_app (template_hole 7, template_var 1)),
          template_hole 4),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 8, template_var 2)),
            template_app (template_hole 3, template_var 1)),
          template_hole 4),
        template_equation
         (template_app
           (template_app
             (template_hole 5,
              template_app (template_hole 8, template_var 0)),
            template_app (template_hole 3, template_var 1)),
          template_hole 4)],
       template_equation
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 1, template_var 1),
               template_var 2)),
           template_app
            (template_app (template_hole 0, template_var 0),
             template_var 2)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_var 2)))),
    ("Strands_and_Constraints.simple_fun_prefix_unique",
     "[| ?A = ?S @ send\<langle>Fun ?f ?X\<rangle>\<^sub>s\<^sub>t # ?S';
         simple ?S |]
      ==> ALL T g Y T'.
             ?A = T @ send\<langle>Fun g Y\<rangle>\<^sub>s\<^sub>t # T' &
             simple T -->
             ?S = T & ?f = g & ?X = Y & ?S' = T'",
     template_implication
      ([template_equation
         (template_var 4,
          template_app
           (template_app (template_hole 11, template_var 3),
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 2),
                    template_var 1))),
              template_var 0))),
        template_predicate
         (template_app (template_hole 7, template_var 3))],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("Strands_and_Constraints.wf_unify",
     "[| wf\<^sub>s\<^sub>t ?V
          (?S @ send\<langle>Fun ?f ?X\<rangle>\<^sub>s\<^sub>t # ?S');
         ?t : ik\<^sub>s\<^sub>t ?S; Unifier ?\<delta> (Fun ?f ?X) ?t;
         bvars\<^sub>s\<^sub>t
          (?S @ send\<langle>Fun ?f ?X\<rangle>\<^sub>s\<^sub>t # ?S') Int
         (subst_domain ?\<delta> Un range_vars ?\<delta>) =
         {} |]
      ==> wf\<^sub>s\<^sub>t (fv\<^sub>s\<^sub>e\<^sub>t (?\<delta> ` ?V))
           (?S @ ?S' \<cdot>\<^sub>s\<^sub>t ?\<delta>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 6),
              template_app
               (template_app (template_hole 17, template_var 5),
                template_app
                 (template_app
                   (template_hole 16,
                    template_app
                     (template_hole 15,
                      template_app
                       (template_app (template_hole 14, template_var 4),
                        template_var 3))),
                  template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 1),
              template_app (template_hole 12, template_var 5))
            ),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_app (template_hole 14, template_var 4),
                template_var 3)),
            template_var 0),
          template_app
           (template_app (template_hole 10, template_var 1),
            template_var 0)),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 17, template_var 5),
                  template_app
                   (template_app
                     (template_hole 16,
                      template_app
                       (template_hole 15,
                        template_app
                         (template_app (template_hole 14, template_var 4),
                          template_var 3))),
                    template_var 2)))),
            template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 0)),
              template_app (template_hole 4, template_var 0))),
          template_hole 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_hole 2,
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 6))),
             template_app
              (template_app
                (template_hole 0,
                 template_app
                  (template_app (template_hole 17, template_var 5),
                   template_var 2)),
               template_var 0))
           ))),
    ("Strands_and_Constraints.trm_strand_subst_cong",
     "?t : trms\<^sub>s\<^sub>t (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>) ==>
      (EX t'. ?t = t' \<cdot> ?\<delta> & t' : trms\<^sub>s\<^sub>t ?S) |
      (EX X F.
          \<forall>X\<langle>\<or>\<noteq>: F\<rangle>\<^sub>s\<^sub>t
          : set ?S &
          (EX t':trms\<^sub>p\<^sub>a\<^sub>i\<^sub>r\<^sub>s F.
              ?t = t' \<cdot> rm_vars (set X) ?\<delta>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 23, template_var 2),
              template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_var 1),
                  template_var 0)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 20, template_app (template_hole 19, t_empty)),
             template_app (template_hole 15, t_empty))
           ))),
    ("Strands_and_Constraints.subst_apply_fv_subset_strand_trm",
     "[| ?P = fv\<^sub>s\<^sub>t\<^sub>p |
         ?P = fv\<^sub>r\<^sub>c\<^sub>v |
         ?P = fv\<^sub>s\<^sub>n\<^sub>d |
         ?P = fv\<^sub>e\<^sub>q ?ac |
         ?P = fv\<^sub>i\<^sub>n\<^sub>e\<^sub>q;
         fv ?t <= \<Union> (set (map ?P ?S)) Un ?V;
         bvars\<^sub>s\<^sub>t ?S Int
         (subst_domain ?\<delta> Un range_vars ?\<delta>) =
         {} |]
      ==> fv (?t \<cdot> ?\<delta>)
          <= \<Union>
              (set (map ?P (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>))) Un
             fv\<^sub>s\<^sub>e\<^sub>t (?\<delta> ` ?V)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_var 5),
                  template_hole 20)),
              template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 21, template_var 5),
                    template_hole 19)),
                template_app
                 (template_app
                   (template_hole 22,
                    template_app
                     (template_app (template_hole 21, template_var 5),
                      template_hole 18)),
                  template_app
                   (template_app
                     (template_hole 22,
                      template_app
                       (template_app (template_hole 21, template_var 5),
                        template_app (template_hole 17, template_var 4))),
                    template_app
                     (template_app (template_hole 21, template_var 5),
                      template_hole 16)))))
            ),
        template_inequation
         (less_equals, template_app (template_hole 14, template_var 3),
          template_app
           (template_app
             (template_hole 13,
              template_app
               (template_hole 12,
                template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 5),
                    template_var 2)))),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 2)),
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 6, template_var 0)),
              template_app (template_hole 5, template_var 0))),
          template_hole 4)],
       template_inequation
        (less_equals,
         template_app
          (template_hole 14,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_var 5),
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0))))),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("Strands_and_Constraints.subst_apply_fv_subset_strand2",
     "[| ?P = fv\<^sub>s\<^sub>t\<^sub>p |
         ?P = fv\<^sub>r\<^sub>c\<^sub>v |
         ?P = fv\<^sub>s\<^sub>n\<^sub>d |
         ?P = fv\<^sub>e\<^sub>q ?ac |
         ?P = fv\<^sub>i\<^sub>n\<^sub>e\<^sub>q |
         ?P = fv_r\<^sub>e\<^sub>q ?ac;
         ?P ?x <= wfrestrictedvars\<^sub>s\<^sub>t ?S Un ?V;
         bvars\<^sub>s\<^sub>t ?S Int
         (subst_domain ?\<delta> Un range_vars ?\<delta>) =
         {};
         set (bvars\<^sub>s\<^sub>t\<^sub>p ?x) Int
         (subst_domain ?\<delta> Un range_vars ?\<delta>) =
         {} |]
      ==> ?P (?x \<cdot>\<^sub>s\<^sub>t\<^sub>p ?\<delta>)
          <= wfrestrictedvars\<^sub>s\<^sub>t
              (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>) Un
             fv\<^sub>s\<^sub>e\<^sub>t (?\<delta> ` ?V)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app (template_hole 21, template_var 5),
                  template_hole 20)),
              template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 21, template_var 5),
                    template_hole 19)),
                template_app
                 (template_app
                   (template_hole 22,
                    template_app
                     (template_app (template_hole 21, template_var 5),
                      template_hole 18)),
                  template_app
                   (template_app
                     (template_hole 22,
                      template_app
                       (template_app (template_hole 21, template_var 5),
                        template_app (template_hole 17, template_var 4))),
                    template_app
                     (template_app
                       (template_hole 22,
                        template_app
                         (template_app (template_hole 21, template_var 5),
                          template_hole 16)),
                      template_app
                       (template_app (template_hole 21, template_var 5),
                        template_app
                         (template_hole 15, template_var 4)))))))
            ),
        template_inequation
         (less_equals, template_app (template_var 5, template_var 3),
          template_app
           (template_app
             (template_hole 13,
              template_app (template_hole 12, template_var 2)),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 2)),
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 7, template_var 0))),
          template_hole 6),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 3))),
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 7, template_var 0))),
          template_hole 6)],
       template_inequation
        (less_equals,
         template_app
          (template_var 5,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 13,
             template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0))),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("Strands_and_Constraints.ik\<^sub>s\<^sub>t_induct",
     "[| ?P [];
         !!t S.
            ?P S ==> ?P (receive\<langle>t\<rangle>\<^sub>s\<^sub>t # S);
         !!v S. ?P S ==> ?P (send\<langle>v\<rangle>\<^sub>s\<^sub>t # S);
         !!v va vb S.
            ?P S ==>
            ?P (\<langle>v: va \<doteq> vb\<rangle>\<^sub>s\<^sub>t # S);
         !!v va S.
            ?P S ==>
            ?P (\<forall>v\<langle>\<or>\<noteq>: va\<rangle>\<^sub>s\<^sub>t #
                S) |]
      ==> ?P ?a0.0",
     template_implication
      ([template_predicate
         (template_app (template_var 1, template_hole 10)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 9, t_empty)),
        template_predicate (template_app (template_hole 4, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Strands_and_Constraints.not_simple_elim",
     "~ simple ?S ==>
      (EX A B f T.
          ?S = A @ send\<langle>Fun f T\<rangle>\<^sub>s\<^sub>t # B &
          simple A) |
      (EX A B a t t'.
          ?S = A @ \<langle>a: t \<doteq> t'\<rangle>\<^sub>s\<^sub>t # B &
          simple A) |
      (EX A B X F.
          ?S =
          A @
          \<forall>X\<langle>\<or>\<noteq>: F\<rangle>\<^sub>s\<^sub>t # B &
          (\<nexists>\<I>. ineq_model \<I> X F))",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 18, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17, template_app (template_hole 16, t_empty)),
             template_app
              (template_app
                (template_hole 17,
                 template_app (template_hole 16, t_empty)),
               template_app (template_hole 16, t_empty)))
           ))),
    ("Strands_and_Constraints.subst_apply_fv_subset_strand",
     "[| ?P = fv\<^sub>s\<^sub>t\<^sub>p |
         ?P = fv\<^sub>r\<^sub>c\<^sub>v |
         ?P = fv\<^sub>s\<^sub>n\<^sub>d |
         ?P = fv\<^sub>e\<^sub>q ?ac |
         ?P = fv\<^sub>i\<^sub>n\<^sub>e\<^sub>q;
         ?P ?x <= \<Union> (set (map ?P ?S)) Un ?V;
         bvars\<^sub>s\<^sub>t ?S Int
         (subst_domain ?\<delta> Un range_vars ?\<delta>) =
         {};
         set (bvars\<^sub>s\<^sub>t\<^sub>p ?x) Int
         (subst_domain ?\<delta> Un range_vars ?\<delta>) =
         {} |]
      ==> ?P (?x \<cdot>\<^sub>s\<^sub>t\<^sub>p ?\<delta>)
          <= \<Union>
              (set (map ?P (?S \<cdot>\<^sub>s\<^sub>t ?\<delta>))) Un
             fv\<^sub>s\<^sub>e\<^sub>t (?\<delta> ` ?V)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 23,
                template_app
                 (template_app (template_hole 22, template_var 5),
                  template_hole 21)),
              template_app
               (template_app
                 (template_hole 23,
                  template_app
                   (template_app (template_hole 22, template_var 5),
                    template_hole 20)),
                template_app
                 (template_app
                   (template_hole 23,
                    template_app
                     (template_app (template_hole 22, template_var 5),
                      template_hole 19)),
                  template_app
                   (template_app
                     (template_hole 23,
                      template_app
                       (template_app (template_hole 22, template_var 5),
                        template_app (template_hole 18, template_var 4))),
                    template_app
                     (template_app (template_hole 22, template_var 5),
                      template_hole 17)))))
            ),
        template_inequation
         (less_equals, template_app (template_var 5, template_var 3),
          template_app
           (template_app
             (template_hole 15,
              template_app
               (template_hole 14,
                template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 5),
                    template_var 2)))),
            template_var 1)),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app (template_hole 9, template_var 2)),
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 7, template_var 0))),
          template_hole 6),
        template_equation
         (template_app
           (template_app
             (template_hole 10,
              template_app
               (template_hole 5,
                template_app (template_hole 4, template_var 3))),
            template_app
             (template_app
               (template_hole 15,
                template_app (template_hole 8, template_var 0)),
              template_app (template_hole 7, template_var 0))),
          template_hole 6)],
       template_inequation
        (less_equals,
         template_app
          (template_var 5,
           template_app
            (template_app (template_hole 3, template_var 3),
             template_var 0)),
         template_app
          (template_app
            (template_hole 15,
             template_app
              (template_hole 14,
               template_app
                (template_hole 13,
                 template_app
                  (template_app (template_hole 12, template_var 5),
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 0))))),
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1)))))),
    ("Strands_and_Constraints.assignment_rhs\<^sub>s\<^sub>t_induct",
     "[| ?P [];
         !!t t' S.
            ?P S ==>
            ?P (\<langle>assign: t \<doteq> t'\<rangle>\<^sub>s\<^sub>t #
                S);
         !!v S. ?P S ==> ?P (send\<langle>v\<rangle>\<^sub>s\<^sub>t # S);
         !!v S.
            ?P S ==> ?P (receive\<langle>v\<rangle>\<^sub>s\<^sub>t # S);
         !!va vb S.
            ?P S ==>
            ?P (\<langle>check: va \<doteq> vb\<rangle>\<^sub>s\<^sub>t #
                S);
         !!v va S.
            ?P S ==>
            ?P (\<forall>v\<langle>\<or>\<noteq>: va\<rangle>\<^sub>s\<^sub>t #
                S) |]
      ==> ?P ?a0.0",
     template_implication
      ([template_predicate
         (template_app (template_var 1, template_hole 11)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 10, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Strands_and_Constraints.wf\<^sub>s\<^sub>t_simple_induct",
     "[| wf\<^sub>s\<^sub>t ?V ?S; simple ?S; ?P [];
         !!v S.
            [| wf\<^sub>s\<^sub>t ?V S; simple S; ?P S |]
            ==> ?P (S @ [send\<langle>Var v\<rangle>\<^sub>s\<^sub>t]);
         !!t S.
            [| wf\<^sub>s\<^sub>t ?V S; simple S; ?P S;
               fv t
               <= ?V Un \<Union> (set (map fv\<^sub>s\<^sub>n\<^sub>d S)) |]
            ==> ?P (S @ [receive\<langle>t\<rangle>\<^sub>s\<^sub>t]);
         !!X F S.
            [| wf\<^sub>s\<^sub>t ?V S; simple S; ?P S |]
            ==> ?P (S @
                    [\<forall>X\<langle>\<or>\<noteq>: F\<rangle>\<^sub>s\<^sub>t]) |]
      ==> ?P ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 20, template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_hole 19, template_var 1)),
        template_predicate
         (template_app (template_var 0, template_hole 18)),
        template_predicate (template_app (template_hole 17, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 0, template_var 1)))),
    ("Strands_and_Constraints.wf\<^sub>s\<^sub>t_induct",
     "[| !!V. ?P V [];
         !!V t S.
            ?P V S ==>
            ?P V (receive\<langle>t\<rangle>\<^sub>s\<^sub>t # S);
         !!V t S.
            ?P (V Un fv t) S ==>
            ?P V (send\<langle>t\<rangle>\<^sub>s\<^sub>t # S);
         !!V s t S.
            ?P (V Un fv s) S ==>
            ?P V
             (\<langle>assign: s \<doteq> t\<rangle>\<^sub>s\<^sub>t # S);
         !!V s t S.
            ?P V S ==>
            ?P V
             (\<langle>check: s \<doteq> t\<rangle>\<^sub>s\<^sub>t # S);
         !!V uu_ uv_ S.
            ?P V S ==>
            ?P V
             (\<forall>uu_\<langle>\<or>\<noteq>: uv_\<rangle>\<^sub>s\<^sub>t #
              S) |]
      ==> ?P ?a0.0 ?a1.0",
     template_implication
      ([template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_var 2, template_var 1), template_var 0)
           ))),
    ("Strands_and_Constraints.wf\<^sub>s\<^sub>t_induct'",
     "[| wf\<^sub>s\<^sub>t ?V ?S; ?P [];
         !!t S.
            [| wf\<^sub>s\<^sub>t ?V S; ?P S |]
            ==> ?P (S @ [send\<langle>t\<rangle>\<^sub>s\<^sub>t]);
         !!t S.
            [| wf\<^sub>s\<^sub>t ?V S; ?P S;
               fv t <= ?V Un wfvarsoccs\<^sub>s\<^sub>t S |]
            ==> ?P (S @ [receive\<langle>t\<rangle>\<^sub>s\<^sub>t]);
         !!t t' S.
            [| wf\<^sub>s\<^sub>t ?V S; ?P S;
               fv t' <= ?V Un wfvarsoccs\<^sub>s\<^sub>t S |]
            ==> ?P (S @
                    [\<langle>assign: t \<doteq> t'\<rangle>\<^sub>s\<^sub>t]);
         !!t t' S.
            [| wf\<^sub>s\<^sub>t ?V S; ?P S |]
            ==> ?P (S @
                    [\<langle>check: t \<doteq> t'\<rangle>\<^sub>s\<^sub>t]);
         !!X F S.
            [| wf\<^sub>s\<^sub>t ?V S; ?P S |]
            ==> ?P (S @
                    [\<forall>X\<langle>\<or>\<noteq>: F\<rangle>\<^sub>s\<^sub>t]) |]
      ==> ?P ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 2),
              template_var 1)
            ),
        template_predicate
         (template_app (template_var 0, template_hole 16)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 15, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate
        (template_app (template_var 0, template_var 1))))]:
   (string * thm * template) list
### theory "Draft.Strands_and_ConstraintsTemplates"
### 0.572s elapsed time, 0.808s cpu time, 0.169s GC time
val it = (): unit
