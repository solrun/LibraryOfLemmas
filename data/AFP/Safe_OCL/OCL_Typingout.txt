Loading theory "Draft.Errorable" (required by "Draft.OCL_TypingTemplates" via "Draft.OCL_Typing" via "Draft.OCL_Object_Model" via "Draft.OCL_Syntax" via "Draft.OCL_Types")
Loading theory "Draft.Transitive_Closure_Ext" (required by "Draft.OCL_TypingTemplates" via "Draft.OCL_Typing" via "Draft.OCL_Object_Model" via "Draft.OCL_Syntax" via "Draft.OCL_Types" via "Draft.Tuple")
Loading theory "Draft.Templates" (required by "Draft.OCL_TypingTemplates" via "Draft.ExtrEqs")
Loading theory "Draft.OCL_Basic_Types" (required by "Draft.OCL_TypingTemplates" via "Draft.OCL_Typing" via "Draft.OCL_Object_Model" via "Draft.OCL_Syntax" via "Draft.OCL_Types")
instantiation
  errorable :: (type) bot
  bot_errorable == bot :: 'a\<^sub>\<bottom>
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.069s elapsed time, 0.311s cpu time, 0.000s GC time
Loading theory "Draft.Finite_Map_Ext" (required by "Draft.OCL_TypingTemplates" via "Draft.OCL_Typing" via "Draft.OCL_Object_Model" via "Draft.OCL_Syntax" via "Draft.Object_Model")
### theory "Draft.Transitive_Closure_Ext"
### 0.078s elapsed time, 0.345s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.OCL_TypingTemplates")
### The transfer theorems can't be generated:
### No quotient theorem has been registered for errorable.
### Use setup_lifting to register a quotient or type definition theorem.
### theory "Draft.Errorable"
### 0.165s elapsed time, 0.668s cpu time, 0.030s GC time
### theory "Draft.Finite_Map_Ext"
### 0.194s elapsed time, 0.653s cpu time, 0.030s GC time
Loading theory "Draft.Tuple" (required by "Draft.OCL_TypingTemplates" via "Draft.OCL_Typing" via "Draft.OCL_Object_Model" via "Draft.OCL_Syntax" via "Draft.OCL_Types")
Loading theory "Draft.Object_Model" (required by "Draft.OCL_TypingTemplates" via "Draft.OCL_Typing" via "Draft.OCL_Object_Model" via "Draft.OCL_Syntax")
### theory "Draft.Tuple"
### 0.367s elapsed time, 1.420s cpu time, 0.154s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.609s elapsed time, 2.212s cpu time, 0.184s GC time
Proofs for inductive predicate(s) "owned_attribute'"
  Proving monotonicity ...
Proofs for inductive predicate(s) "attribute_not_closest"
  Proving monotonicity ...
Proofs for inductive predicate(s) "closest_attribute"
  Proving monotonicity ...
Proofs for inductive predicate(s) "closest_attribute_not_unique"
  Proving monotonicity ...
Proofs for inductive predicate(s) "unique_closest_attribute"
  Proving monotonicity ...
Proofs for inductive predicate(s) "role_refer_class"
  Proving monotonicity ...
Proofs for inductive predicate(s) "association_ends'"
  Proving monotonicity ...
Proofs for inductive predicate(s) "association_ends_not_unique'"
  Proving monotonicity ...
Proofs for inductive predicate(s) "basic_subtype"
Proofs for inductive predicate(s) "owned_association_end'"
  Proving monotonicity ...
  Proving monotonicity ...
Proofs for inductive predicate(s) "association_end_not_closest"
  Proving monotonicity ...
Proofs for inductive predicate(s) "closest_association_end"
  Proving monotonicity ...
Proofs for inductive predicate(s) "closest_association_end_not_unique"
  Proving monotonicity ...
Proofs for inductive predicate(s) "unique_closest_association_end"
  Proving monotonicity ...
instantiation
  basic_type :: (order) order
  less_eq_basic_type == less_eq :: 'a basic_type => 'a basic_type => bool
  less_basic_type == less :: 'a basic_type => 'a basic_type => bool
Proofs for inductive predicate(s) "referred_by_association_class''"
  Proving monotonicity ...
Proofs for inductive predicate(s) "referred_by_association_class'"
  Proving monotonicity ...
Proofs for inductive predicate(s) "association_class_not_closest"
  Proving monotonicity ...
Proofs for inductive predicate(s) "closest_association_class"
instantiation
  basic_type :: (semilattice_sup) semilattice_sup
  sup_basic_type == sup :: 'a basic_type => 'a basic_type => 'a basic_type
  Proving monotonicity ...
Proofs for inductive predicate(s) "closest_association_class_not_unique"
  Proving monotonicity ...
Proofs for inductive predicate(s) "unique_closest_association_class"
  Proving monotonicity ...
Proofs for inductive predicate(s) "association_class_end'"
  Proving monotonicity ...
Proofs for inductive predicate(s) "association_class_end_not_unique"
  Proving monotonicity ...
Proofs for inductive predicate(s) "unique_association_class_end"
  Proving monotonicity ...
Found termination order: "{}"
Proofs for inductive predicate(s) "any_operation'"
  Proving monotonicity ...
Proofs for inductive predicate(s) "operation'"
  Proving monotonicity ...
Proofs for inductive predicate(s) "operation_not_unique"
  Proving monotonicity ...
Proofs for inductive predicate(s) "unique_operation"
  Proving monotonicity ...
Proofs for inductive predicate(s) "operation_defined'"
  Proving monotonicity ...
Proofs for inductive predicate(s) "static_operation'"
  Proving monotonicity ...
Proofs for inductive predicate(s) "static_operation_not_unique"
  Proving monotonicity ...
Proofs for inductive predicate(s) "unique_static_operation"
  Proving monotonicity ...
Proofs for inductive predicate(s) "static_operation_defined'"
  Proving monotonicity ...
Proofs for inductive predicate(s) "has_literal'"
  Proving monotonicity ...
locale object_model
  fixes classes :: "'a fset"
    and
    attributes ::
      "'a \<rightharpoonup>\<^sub>f 
       String.literal \<rightharpoonup>\<^sub>f 't"
    and
    associations ::
      "String.literal \<rightharpoonup>\<^sub>f 
       String.literal \<rightharpoonup>\<^sub>f 
       ('a * nat * enat * bool * bool)"
    and association_classes :: "'a \<rightharpoonup>\<^sub>f String.literal"
    and
    operations ::
      "(String.literal *
        't *
        (String.literal * 't * param_dir) list *
        't * bool * 'e option) list"
    and literals :: "'n \<rightharpoonup>\<^sub>f String.literal fset"
  assumes "object_model classes associations"
Found termination order: "{}"
### theory "Draft.OCL_Basic_Types"
### 2.232s elapsed time, 5.921s cpu time, 0.828s GC time
Loading theory "Draft.OCL_Types" (required by "Draft.OCL_TypingTemplates" via "Draft.OCL_Typing" via "Draft.OCL_Object_Model" via "Draft.OCL_Syntax")
instantiation
  OCL_Types.type :: (type) size
  size_type == size :: 'a OCL_Types.type => nat
consts
  size_type :: "'a OCL_Types.type => nat"
Proofs for inductive predicate(s) "subtype"
  Proving monotonicity ...
instantiation
  OCL_Types.type :: (order) order
  less_eq_type == less_eq :: 'a OCL_Types.type => 'a OCL_Types.type => bool
  less_type == less :: 'a OCL_Types.type => 'a OCL_Types.type => bool
instantiation
  OCL_Types.type :: (semilattice_sup) semilattice_sup
  sup_type == sup ::
    'a OCL_Types.type => 'a OCL_Types.type => 'a OCL_Types.type
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
Proofs for inductive predicate(s) "element_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "update_element_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "to_unique_collection"
  Proving monotonicity ...
Proofs for inductive predicate(s) "to_nonunique_collection"
  Proving monotonicity ...
Proofs for inductive predicate(s) "to_ordered_collection"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "{}"
Found termination order: "size <*mlex*> {}"
### theory "Draft.OCL_Types"
### 3.658s elapsed time, 7.770s cpu time, 1.167s GC time
### theory "Draft.Object_Model"
### 10.525s elapsed time, 17.726s cpu time, 2.114s GC time
Loading theory "Draft.OCL_Syntax" (required by "Draft.OCL_TypingTemplates" via "Draft.OCL_Typing" via "Draft.OCL_Object_Model")
instantiation
  unat :: infinity
  infinity_unat == infinity :: unat
### theory "Draft.OCL_Syntax"
### 17.813s elapsed time, 20.866s cpu time, 4.265s GC time
Loading theory "Draft.OCL_Object_Model" (required by "Draft.OCL_TypingTemplates" via "Draft.OCL_Typing")
class ocl_object_model = semilattice_sup +
  fixes classes :: "'a fset"
    and
    attributes ::
      "'a \<rightharpoonup>\<^sub>f 
       String.literal \<rightharpoonup>\<^sub>f 'a OCL_Types.type"
    and
    associations ::
      "String.literal \<rightharpoonup>\<^sub>f 
       String.literal \<rightharpoonup>\<^sub>f 
       ('a * nat * enat * bool * bool)"
    and association_classes :: "'a \<rightharpoonup>\<^sub>f String.literal"
    and
    operations ::
      "(String.literal *
        'a OCL_Types.type *
        (String.literal * 'a OCL_Types.type * param_dir) list *
        'a OCL_Types.type * bool * 'a expr option) list"
    and
    literals ::
      "('a, String.literal) phantom \<rightharpoonup>\<^sub>f 
       String.literal fset"
  assumes
    "assoc_end_min_less_eq_max":
      "!!assoc ends role end.
          [| assoc |\<in>| fmdom associations;
             fmlookup associations assoc = Some ends;
             role |\<in>| fmdom ends; fmlookup ends role = Some end |]
          ==> enat (assoc_end_min end) <= assoc_end_max end"
  assumes
    "association_ends_unique":
      "!!\<C> from role end\<^sub>1 end\<^sub>2.
          [| association_ends' classes associations \<C> from role
              end\<^sub>1;
             association_ends' classes associations \<C> from role
              end\<^sub>2 |]
          ==> end\<^sub>1 = end\<^sub>2"
### theory "Draft.OCL_Object_Model"
### 0.182s elapsed time, 0.242s cpu time, 0.026s GC time
Loading theory "Draft.OCL_Typing" (required by "Draft.OCL_TypingTemplates")
Proofs for inductive predicate(s) "mataop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "typeop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "super_binop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "any_unop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "boolean_unop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "boolean_binop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "numeric_unop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "numeric_binop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "string_unop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "string_binop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "string_ternop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "collection_unop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "collection_binop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "collection_ternop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "unop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "binop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "ternop_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "op_type"
  Proving monotonicity ...
Proofs for inductive predicate(s) "typing", "collection_parts_typing", "collection_part_typing", "iterator_typing", "expr_list_typing"
  Proving monotonicity ...
### theory "Draft.OCL_Typing"
### 24.290s elapsed time, 25.006s cpu time, 1.154s GC time
Loading theory "Draft.OCL_TypingTemplates"
val templateLemmas =
   [("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>L [] : ?\<pi>) = (?\<pi> = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_hole 2),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>P CollectionItem ?a : ?\<tau>) =
      (?\<Gamma> \<turnstile>\<^sub>E ?a : ?\<tau>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E Literal NullLiteral : ?\<tau>) =
      (?\<tau> = OclVoid[?])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 1),
                template_app (template_hole 4, template_hole 3)),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_hole 0)))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>C [?x] : ?\<tau>) =
      (?\<Gamma> \<turnstile>\<^sub>P ?x : ?\<tau>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 3, template_var 2),
           template_app
            (template_app (template_hole 2, template_var 1),
             template_hole 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        Literal (BooleanLiteral ?c) : ?\<tau>) =
      (?\<tau> = Boolean[1])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_hole 0)))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        Literal (IntegerLiteral ?c) : ?\<tau>) =
      (?\<tau> = Integer[1])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_hole 0)))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E Literal (RealLiteral ?c) : ?\<tau>) =
      (?\<tau> = Real[1])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_hole 0)))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        Literal (StringLiteral ?c) : ?\<tau>) =
      (?\<tau> = String[1])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_hole 0)))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E Literal (TupleLiteral []) : ?\<tau>) =
      (?\<tau> = Tuple fmempty)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 1),
                template_app
                 (template_hole 5,
                  template_app (template_hole 4, template_hole 3))),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_hole 0)))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        Literal (UnlimitedNaturalLiteral ?c) : ?\<tau>) =
      (?\<tau> = UnlimitedNatural[1])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 1))),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_hole 0)))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        MetaOperationCall ?\<tau> ?op : ?\<sigma>) =
      mataop_type ?\<tau> ?op ?\<sigma>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 3),
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("OCL_Typing.any_unop_type_i_i_oI",
     "any_unop_type ?x ?xa ?xb ==>
      pred.eval (any_unop_type_i_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.any_unop_type_o_i_iI",
     "any_unop_type ?x ?xa ?xb ==>
      pred.eval (any_unop_type_o_i_i ?xa ?xb) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("OCL_Typing.boolean_unop_type_i_i_oI",
     "boolean_unop_type ?x ?xa ?xb ==>
      pred.eval (boolean_unop_type_i_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.boolean_unop_type_i_o_iI",
     "boolean_unop_type ?x ?xa ?xb ==>
      pred.eval (boolean_unop_type_i_o_i ?x ?xb) ?xa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("OCL_Typing.boolean_unop_type_o_i_iI",
     "boolean_unop_type ?x ?xa ?xb ==>
      pred.eval (boolean_unop_type_o_i_i ?xa ?xb) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("OCL_Typing.collection_part_typing_i_i_oI",
     "?x \<turnstile>\<^sub>P ?xa : ?xb ==>
      pred.eval (collection_part_typing_i_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.collection_parts_typing_i_i_oI",
     "?x \<turnstile>\<^sub>C ?xa : ?xb ==>
      pred.eval (collection_parts_typing_i_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.collection_unop_type_i_i_oI",
     "collection_unop_type ?x ?xa ?xb ==>
      pred.eval (collection_unop_type_i_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.collection_unop_type_o_i_iI",
     "collection_unop_type ?x ?xa ?xb ==>
      pred.eval (collection_unop_type_o_i_i ?xa ?xb) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("OCL_Typing.expr_list_typing_i_i_oI",
     "?x \<turnstile>\<^sub>L ?xa : ?xb ==>
      pred.eval (expr_list_typing_i_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.iterator_typing_i_i_oI",
     "?x \<turnstile>\<^sub>I ?xa : ?xb ==>
      pred.eval (iterator_typing_i_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.mataop_type_i_i_oI",
     "mataop_type ?x ?xa ?xb ==> pred.eval (mataop_type_i_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.mataop_type_o_i_iI",
     "mataop_type ?x ?xa ?xb ==> pred.eval (mataop_type_o_i_i ?xa ?xb) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("OCL_Typing.mataop_type_i_o_iI",
     "mataop_type ?x ?xa ?xb ==> pred.eval (mataop_type_i_o_i ?x ?xb) ?xa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("OCL_Typing.numeric_unop_type_i_i_oI",
     "numeric_unop_type ?x ?xa ?xb ==>
      pred.eval (numeric_unop_type_i_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.numeric_unop_type_o_i_iI",
     "numeric_unop_type ?x ?xa ?xb ==>
      pred.eval (numeric_unop_type_o_i_i ?xa ?xb) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("OCL_Typing.string_unop_type_i_o_iI",
     "string_unop_type ?x ?xa ?xb ==>
      pred.eval (string_unop_type_i_o_i ?x ?xb) ?xa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_var 1)
           ))),
    ("OCL_Typing.string_unop_type_i_i_oI",
     "string_unop_type ?x ?xa ?xb ==>
      pred.eval (string_unop_type_i_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.string_unop_type_o_i_iI",
     "string_unop_type ?x ?xa ?xb ==>
      pred.eval (string_unop_type_o_i_i ?xa ?xb) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("OCL_Typing.typing_i_i_oI",
     "?x \<turnstile>\<^sub>E ?xa : ?xb ==>
      pred.eval (typing_i_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E Var ?v : ?\<tau>) =
      (fmlookup ?\<Gamma> ?v = Some ?\<tau>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app (template_hole 3, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("OCL_Typing.any_unop_type_o_i_oI",
     "any_unop_type ?x ?xa ?xb ==>
      pred.eval (any_unop_type_o_i_o ?xa) (?x, ?xb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("OCL_Typing.any_unop_type_i_i_iI",
     "any_unop_type ?x ?xa ?xb ==>
      pred.eval (any_unop_type_i_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.boolean_unop_type_o_i_oI",
     "boolean_unop_type ?x ?xa ?xb ==>
      pred.eval (boolean_unop_type_o_i_o ?xa) (?x, ?xb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("OCL_Typing.boolean_unop_type_o_o_iI",
     "boolean_unop_type ?x ?xa ?xb ==>
      pred.eval (boolean_unop_type_o_o_i ?xb) (?x, ?xa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("OCL_Typing.boolean_unop_type_i_i_iI",
     "boolean_unop_type ?x ?xa ?xb ==>
      pred.eval (boolean_unop_type_i_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.collection_part_typing_i_i_iI",
     "?x \<turnstile>\<^sub>P ?xa : ?xb ==>
      pred.eval (collection_part_typing_i_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.collection_parts_typing_i_i_iI",
     "?x \<turnstile>\<^sub>C ?xa : ?xb ==>
      pred.eval (collection_parts_typing_i_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.collection_unop_type_o_i_oI",
     "collection_unop_type ?x ?xa ?xb ==>
      pred.eval (collection_unop_type_o_i_o ?xa) (?x, ?xb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("OCL_Typing.collection_unop_type_i_i_iI",
     "collection_unop_type ?x ?xa ?xb ==>
      pred.eval (collection_unop_type_i_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.expr_list_typing_i_i_iI",
     "?x \<turnstile>\<^sub>L ?xa : ?xb ==>
      pred.eval (expr_list_typing_i_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.iterator_typing_i_i_iI",
     "?x \<turnstile>\<^sub>I ?xa : ?xb ==>
      pred.eval (iterator_typing_i_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.mataop_type_o_o_iI",
     "mataop_type ?x ?xa ?xb ==>
      pred.eval (mataop_type_o_o_i ?xb) (?x, ?xa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("OCL_Typing.mataop_type_i_o_oI",
     "mataop_type ?x ?xa ?xb ==>
      pred.eval (mataop_type_i_o_o ?x) (?xa, ?xb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("OCL_Typing.mataop_type_i_i_iI",
     "mataop_type ?x ?xa ?xb ==>
      pred.eval (mataop_type_i_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.numeric_unop_type_o_i_oI",
     "numeric_unop_type ?x ?xa ?xb ==>
      pred.eval (numeric_unop_type_o_i_o ?xa) (?x, ?xb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("OCL_Typing.numeric_unop_type_i_i_iI",
     "numeric_unop_type ?x ?xa ?xb ==>
      pred.eval (numeric_unop_type_i_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.string_unop_type_i_o_oI",
     "string_unop_type ?x ?xa ?xb ==>
      pred.eval (string_unop_type_i_o_o ?x) (?xa, ?xb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 2)),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("OCL_Typing.string_unop_type_o_o_iI",
     "string_unop_type ?x ?xa ?xb ==>
      pred.eval (string_unop_type_o_o_i ?xb) (?x, ?xa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("OCL_Typing.string_unop_type_o_i_oI",
     "string_unop_type ?x ?xa ?xb ==>
      pred.eval (string_unop_type_o_i_o ?xa) (?x, ?xb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("OCL_Typing.string_unop_type_i_i_iI",
     "string_unop_type ?x ?xa ?xb ==>
      pred.eval (string_unop_type_i_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.typing_i_i_iI",
     "?x \<turnstile>\<^sub>E ?xa : ?xb ==>
      pred.eval (typing_i_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.op_type_alt_simps",
     "mataop_type ?\<tau> ?op ?\<sigma> =
      (?op = AllInstancesOp & ?\<sigma> = Set ?\<tau>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 4,
               template_app
                (template_app (template_hole 3, template_var 1),
                 template_hole 2)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("OCL_Typing.string_unop_type_o_o_oI",
     "string_unop_type ?x ?xa ?xb ==>
      pred.eval string_unop_type_o_o_o (?x, ?xa, ?xb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, template_hole 2),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)))
           ))),
    ("OCL_Typing.boolean_binop_type_i_i_i_oI",
     "boolean_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (boolean_binop_type_i_i_i_o ?x ?xa ?xb) ?xc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.boolean_binop_type_o_i_i_iI",
     "boolean_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (boolean_binop_type_o_i_i_i ?xa ?xb ?xc) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("OCL_Typing.collection_binop_type_i_i_i_oI",
     "collection_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (collection_binop_type_i_i_i_o ?x ?xa ?xb) ?xc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.collection_binop_type_o_i_i_iI",
     "collection_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (collection_binop_type_o_i_i_i ?xa ?xb ?xc) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("OCL_Typing.numeric_binop_type_i_i_i_oI",
     "numeric_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (numeric_binop_type_i_i_i_o ?x ?xa ?xb) ?xc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.numeric_binop_type_o_i_i_iI",
     "numeric_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (numeric_binop_type_o_i_i_i ?xa ?xb ?xc) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("OCL_Typing.string_binop_type_i_o_i_iI",
     "string_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (string_binop_type_i_o_i_i ?x ?xb ?xc) ?xa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("OCL_Typing.string_binop_type_i_i_i_oI",
     "string_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (string_binop_type_i_i_i_o ?x ?xa ?xb) ?xc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.string_binop_type_o_i_i_iI",
     "string_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (string_binop_type_o_i_i_i ?xa ?xb ?xc) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("OCL_Typing.super_binop_type_i_i_i_oI",
     "super_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (super_binop_type_i_i_i_o ?x ?xa ?xb) ?xc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.super_binop_type_o_i_i_iI",
     "super_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (super_binop_type_o_i_i_i ?xa ?xb ?xc) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("OCL_Typing.unop_type_o_i_i_iI",
     "unop_type ?x ?xa ?xb ?xc ==>
      pred.eval (unop_type_o_i_i_i ?xa ?xb ?xc) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("OCL_Typing.unop_type_i_i_i_oI",
     "unop_type ?x ?xa ?xb ?xc ==>
      pred.eval (unop_type_i_i_i_o ?x ?xa ?xb) ?xc",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.unop_type_i_o_i_iI",
     "unop_type ?x ?xa ?xb ?xc ==>
      pred.eval (unop_type_i_o_i_i ?x ?xb ?xc) ?xa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_var 2)
           ))),
    ("OCL_Typing.boolean_binop_type_o_i_i_oI",
     "boolean_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (boolean_binop_type_o_i_i_o ?xa ?xb) (?x, ?xc)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("OCL_Typing.boolean_binop_type_i_i_i_iI",
     "boolean_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (boolean_binop_type_i_i_i_i ?x ?xa ?xb ?xc) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.collection_binop_type_o_i_i_oI",
     "collection_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (collection_binop_type_o_i_i_o ?xa ?xb) (?x, ?xc)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("OCL_Typing.collection_binop_type_i_i_i_iI",
     "collection_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (collection_binop_type_i_i_i_i ?x ?xa ?xb ?xc) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.numeric_binop_type_o_i_i_oI",
     "numeric_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (numeric_binop_type_o_i_i_o ?xa ?xb) (?x, ?xc)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("OCL_Typing.numeric_binop_type_i_i_i_iI",
     "numeric_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (numeric_binop_type_i_i_i_i ?x ?xa ?xb ?xc) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.string_binop_type_i_o_i_oI",
     "string_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (string_binop_type_i_o_i_o ?x ?xb) (?xa, ?xc)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("OCL_Typing.string_binop_type_o_o_i_iI",
     "string_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (string_binop_type_o_o_i_i ?xb ?xc) (?x, ?xa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("OCL_Typing.string_binop_type_o_i_i_oI",
     "string_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (string_binop_type_o_i_i_o ?xa ?xb) (?x, ?xc)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("OCL_Typing.string_binop_type_i_i_i_iI",
     "string_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (string_binop_type_i_i_i_i ?x ?xa ?xb ?xc) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.super_binop_type_o_i_i_oI",
     "super_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (super_binop_type_o_i_i_o ?xa ?xb) (?x, ?xc)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("OCL_Typing.super_binop_type_i_i_i_iI",
     "super_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (super_binop_type_i_i_i_i ?x ?xa ?xb ?xc) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.unop_type_o_i_i_oI",
     "unop_type ?x ?xa ?xb ?xc ==>
      pred.eval (unop_type_o_i_i_o ?xa ?xb) (?x, ?xc)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("OCL_Typing.unop_type_o_o_i_iI",
     "unop_type ?x ?xa ?xb ?xc ==>
      pred.eval (unop_type_o_o_i_i ?xb ?xc) (?x, ?xa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2))
           ))),
    ("OCL_Typing.unop_type_i_o_i_oI",
     "unop_type ?x ?xa ?xb ?xc ==>
      pred.eval (unop_type_i_o_i_o ?x ?xb) (?xa, ?xc)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("OCL_Typing.unop_type_i_i_i_iI",
     "unop_type ?x ?xa ?xb ?xc ==>
      pred.eval (unop_type_i_i_i_i ?x ?xa ?xb ?xc) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.string_binop_type_o_o_i_oI",
     "string_binop_type ?x ?xa ?xb ?xc ==>
      pred.eval (string_binop_type_o_o_i_o ?xb) (?x, ?xa, ?xc)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("OCL_Typing.unop_type_o_o_i_oI",
     "unop_type ?x ?xa ?xb ?xc ==>
      pred.eval (unop_type_o_o_i_o ?xb) (?x, ?xa, ?xc)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 3),
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)))
           ))),
    ("OCL_Typing.binop_type_o_i_i_i_iI",
     "binop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (binop_type_o_i_i_i_i ?xa ?xb ?xc ?xd) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 4)
           ))),
    ("OCL_Typing.binop_type_i_i_i_i_oI",
     "binop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (binop_type_i_i_i_i_o ?x ?xa ?xb ?xc) ?xd",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.binop_type_i_o_i_i_iI",
     "binop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (binop_type_i_o_i_i_i ?x ?xb ?xc ?xd) ?xa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("OCL_Typing.collection_ternop_type_i_i_i_i_oI",
     "collection_ternop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (collection_ternop_type_i_i_i_i_o ?x ?xa ?xb ?xc) ?xd",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.collection_ternop_type_i_o_i_i_iI",
     "collection_ternop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (collection_ternop_type_i_o_i_i_i ?x ?xb ?xc ?xd) ?xa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("OCL_Typing.collection_ternop_type_o_i_i_i_iI",
     "collection_ternop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (collection_ternop_type_o_i_i_i_i ?xa ?xb ?xc ?xd) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 4)
           ))),
    ("OCL_Typing.op_type_i_i_i_i_oI",
     "op_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (op_type_i_i_i_i_o ?x ?xa ?xb ?xc) ?xd",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.op_type_i_o_i_i_iI",
     "op_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (op_type_i_o_i_i_i ?x ?xb ?xc ?xd) ?xa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("OCL_Typing.string_ternop_type_i_o_i_i_iI",
     "string_ternop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (string_ternop_type_i_o_i_i_i ?x ?xb ?xc ?xd) ?xa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("OCL_Typing.string_ternop_type_i_i_i_i_oI",
     "string_ternop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (string_ternop_type_i_i_i_i_o ?x ?xa ?xb ?xc) ?xd",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.string_ternop_type_o_i_i_i_iI",
     "string_ternop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (string_ternop_type_o_i_i_i_i ?xa ?xb ?xc ?xd) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 4)
           ))),
    ("OCL_Typing.typeop_type_i_i_i_i_oI",
     "typeop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (typeop_type_i_i_i_i_o ?x ?xa ?xb ?xc) ?xd",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.typeop_type_i_o_i_i_iI",
     "typeop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (typeop_type_i_o_i_i_i ?x ?xb ?xc ?xd) ?xa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("OCL_Typing.typeop_type_o_i_i_i_iI",
     "typeop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (typeop_type_o_i_i_i_i ?xa ?xb ?xc ?xd) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 4)
           ))),
    ("OCL_Typing.any_unop_type_det",
     "[| any_unop_type ?op ?\<tau> ?\<sigma>\<^sub>1;
         any_unop_type ?op ?\<tau> ?\<sigma>\<^sub>2 |]
      ==> ?\<sigma>\<^sub>1 = ?\<sigma>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.boolean_unop_type_det",
     "[| boolean_unop_type ?op ?\<tau> ?\<sigma>\<^sub>1;
         boolean_unop_type ?op ?\<tau> ?\<sigma>\<^sub>2 |]
      ==> ?\<sigma>\<^sub>1 = ?\<sigma>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.collection_part_typing_det",
     "[| ?\<Gamma> \<turnstile>\<^sub>P ?prt : ?\<tau>;
         ?\<Gamma> \<turnstile>\<^sub>P ?prt : ?\<sigma> |]
      ==> ?\<tau> = ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.collection_parts_typing_det",
     "[| ?\<Gamma> \<turnstile>\<^sub>C ?prts : ?\<tau>;
         ?\<Gamma> \<turnstile>\<^sub>C ?prts : ?\<sigma> |]
      ==> ?\<tau> = ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.collection_unop_type_det",
     "[| collection_unop_type ?op ?\<tau> ?\<sigma>\<^sub>1;
         collection_unop_type ?op ?\<tau> ?\<sigma>\<^sub>2 |]
      ==> ?\<sigma>\<^sub>1 = ?\<sigma>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.expr_list_typing_det",
     "[| ?\<Gamma> \<turnstile>\<^sub>L ?exprs : ?\<pi>;
         ?\<Gamma> \<turnstile>\<^sub>L ?exprs : ?\<xi> |]
      ==> ?\<pi> = ?\<xi>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.numeric_unop_type_det",
     "[| numeric_unop_type ?op ?\<tau> ?\<sigma>\<^sub>1;
         numeric_unop_type ?op ?\<tau> ?\<sigma>\<^sub>2 |]
      ==> ?\<sigma>\<^sub>1 = ?\<sigma>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.string_unop_type_det",
     "[| string_unop_type ?op ?\<tau> ?\<sigma>\<^sub>1;
         string_unop_type ?op ?\<tau> ?\<sigma>\<^sub>2 |]
      ==> ?\<sigma>\<^sub>1 = ?\<sigma>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.typing_det",
     "[| ?\<Gamma> \<turnstile>\<^sub>E ?expr : ?\<tau>;
         ?\<Gamma> \<turnstile>\<^sub>E ?expr : ?\<sigma> |]
      ==> ?\<tau> = ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.binop_type_o_i_i_i_oI",
     "binop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (binop_type_o_i_i_i_o ?xa ?xb ?xc) (?x, ?xd)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("OCL_Typing.binop_type_o_o_i_i_iI",
     "binop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (binop_type_o_o_i_i_i ?xb ?xc ?xd) (?x, ?xa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3))
           ))),
    ("OCL_Typing.binop_type_i_o_i_i_oI",
     "binop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (binop_type_i_o_i_i_o ?x ?xb ?xc) (?xa, ?xd)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("OCL_Typing.binop_type_i_i_i_i_iI",
     "binop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (binop_type_i_i_i_i_i ?x ?xa ?xb ?xc ?xd) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.collection_ternop_type_o_i_i_i_oI",
     "collection_ternop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (collection_ternop_type_o_i_i_i_o ?xa ?xb ?xc) (?x, ?xd)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("OCL_Typing.collection_ternop_type_o_o_i_i_iI",
     "collection_ternop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (collection_ternop_type_o_o_i_i_i ?xb ?xc ?xd) (?x, ?xa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3))
           ))),
    ("OCL_Typing.collection_ternop_type_i_i_i_i_iI",
     "collection_ternop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (collection_ternop_type_i_i_i_i_i ?x ?xa ?xb ?xc ?xd) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.op_type_i_o_i_i_oI",
     "op_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (op_type_i_o_i_i_o ?x ?xb ?xc) (?xa, ?xd)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("OCL_Typing.op_type_i_i_i_i_iI",
     "op_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (op_type_i_i_i_i_i ?x ?xa ?xb ?xc ?xd) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.string_ternop_type_i_o_i_i_oI",
     "string_ternop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (string_ternop_type_i_o_i_i_o ?x ?xb ?xc) (?xa, ?xd)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("OCL_Typing.string_ternop_type_o_o_i_i_iI",
     "string_ternop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (string_ternop_type_o_o_i_i_i ?xb ?xc ?xd) (?x, ?xa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3))
           ))),
    ("OCL_Typing.string_ternop_type_o_i_i_i_oI",
     "string_ternop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (string_ternop_type_o_i_i_i_o ?xa ?xb ?xc) (?x, ?xd)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("OCL_Typing.string_ternop_type_i_i_i_i_iI",
     "string_ternop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (string_ternop_type_i_i_i_i_i ?x ?xa ?xb ?xc ?xd) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.typeop_type_i_o_i_i_oI",
     "typeop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (typeop_type_i_o_i_i_o ?x ?xb ?xc) (?xa, ?xd)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 4),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("OCL_Typing.typeop_type_o_i_i_i_oI",
     "typeop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (typeop_type_o_i_i_i_o ?xa ?xb ?xc) (?x, ?xd)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("OCL_Typing.typeop_type_o_o_i_i_iI",
     "typeop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (typeop_type_o_o_i_i_i ?xb ?xc ?xd) (?x, ?xa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3))
           ))),
    ("OCL_Typing.typeop_type_i_i_i_i_iI",
     "typeop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (typeop_type_i_i_i_i_i ?x ?xa ?xb ?xc ?xd) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.op_type_alt_simps",
     "boolean_unop_type ?op ?\<tau> ?\<sigma> =
      (?op = NotOp & ?\<sigma> = ?\<tau> & ?\<tau> <= Boolean[?])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 5, template_var 2),
                 template_hole 4)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 3, template_var 0),
                   template_var 1)),
               template_app
                (template_app (template_hole 2, template_var 1),
                 template_app (template_hole 1, template_hole 0))))
           ))),
    ("OCL_Typing.binop_type_o_o_i_i_oI",
     "binop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (binop_type_o_o_i_i_o ?xb ?xc) (?x, ?xa, ?xd)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)))
           ))),
    ("OCL_Typing.string_ternop_type_o_o_i_i_oI",
     "string_ternop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (string_ternop_type_o_o_i_i_o ?xb ?xc) (?x, ?xa, ?xd)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)))
           ))),
    ("OCL_Typing.typeop_type_o_o_i_i_oI",
     "typeop_type ?x ?xa ?xb ?xc ?xd ==>
      pred.eval (typeop_type_o_o_i_i_o ?xb ?xc) (?x, ?xa, ?xd)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 4, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 4),
               template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0)))
           ))),
    ("OCL_Typing.ternop_type_o_i_i_i_i_iI",
     "ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==>
      pred.eval (ternop_type_o_i_i_i_i_i ?xa ?xb ?xc ?xd ?xe) ?x",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 5)
           ))),
    ("OCL_Typing.ternop_type_i_i_i_i_i_oI",
     "ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==>
      pred.eval (ternop_type_i_i_i_i_i_o ?x ?xa ?xb ?xc ?xd) ?xe",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Typing.ternop_type_i_i_o_i_i_iI",
     "ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==>
      pred.eval (ternop_type_i_i_o_i_i_i ?x ?xa ?xc ?xd ?xe) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 3)
           ))),
    ("OCL_Typing.ternop_type_i_o_i_i_i_iI",
     "ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==>
      pred.eval (ternop_type_i_o_i_i_i_i ?x ?xb ?xc ?xd ?xe) ?xa",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_var 4)
           ))),
    ("OCL_Typing.boolean_binop_type_det",
     "[| boolean_binop_type ?op ?\<tau> ?\<sigma> ?\<rho>\<^sub>1;
         boolean_binop_type ?op ?\<tau> ?\<sigma> ?\<rho>\<^sub>2 |]
      ==> ?\<rho>\<^sub>1 = ?\<rho>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.collection_binop_type_det",
     "[| collection_binop_type ?op ?\<tau> ?\<sigma> ?\<rho>\<^sub>1;
         collection_binop_type ?op ?\<tau> ?\<sigma> ?\<rho>\<^sub>2 |]
      ==> ?\<rho>\<^sub>1 = ?\<rho>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.CollectionItemTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>P CollectionItem ?a : ?\<tau>;
         ?\<Gamma> \<turnstile>\<^sub>E ?a : ?\<tau> ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.numeric_binop_type_det",
     "[| numeric_binop_type ?op ?\<tau> ?\<sigma> ?\<rho>\<^sub>1;
         numeric_binop_type ?op ?\<tau> ?\<sigma> ?\<rho>\<^sub>2 |]
      ==> ?\<rho>\<^sub>1 = ?\<rho>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.string_binop_type_det",
     "[| string_binop_type ?op ?\<tau> ?\<sigma> ?\<rho>\<^sub>1;
         string_binop_type ?op ?\<tau> ?\<sigma> ?\<rho>\<^sub>2 |]
      ==> ?\<rho>\<^sub>1 = ?\<rho>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.super_binop_type_det",
     "[| super_binop_type ?op ?\<tau> ?\<sigma> ?\<rho>\<^sub>1;
         super_binop_type ?op ?\<tau> ?\<sigma> ?\<rho>\<^sub>2 |]
      ==> ?\<rho>\<^sub>1 = ?\<rho>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.NullLiteralTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E Literal NullLiteral : ?\<tau>;
         ?\<tau> = OclVoid[?] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 2),
                template_app (template_hole 4, template_hole 3)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_hole 0))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.unop_type_det",
     "[| unop_type ?op ?k ?\<tau> ?\<sigma>\<^sub>1;
         unop_type ?op ?k ?\<tau> ?\<sigma>\<^sub>2 |]
      ==> ?\<sigma>\<^sub>1 = ?\<sigma>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.expr_list_typing_i_i_oE",
     "[| pred.eval (expr_list_typing_i_i_o ?x ?xa) ?xb;
         ?x \<turnstile>\<^sub>L ?xa : ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.mataop_type_i_i_oE",
     "[| pred.eval (mataop_type_i_i_o ?x ?xa) ?xb;
         mataop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.mataop_type_o_i_iE",
     "[| pred.eval (mataop_type_o_i_i ?xa ?xb) ?x;
         mataop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.any_unop_type_i_i_oE",
     "[| pred.eval (any_unop_type_i_i_o ?x ?xa) ?xb;
         any_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.boolean_unop_type_i_i_oE",
     "[| pred.eval (boolean_unop_type_i_i_o ?x ?xa) ?xb;
         boolean_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.boolean_unop_type_i_o_iE",
     "[| pred.eval (boolean_unop_type_i_o_i ?x ?xb) ?xa;
         boolean_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_unop_type_i_o_iE",
     "[| pred.eval (string_unop_type_i_o_i ?x ?xb) ?xa;
         string_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_part_typing_i_i_oE",
     "[| pred.eval (collection_part_typing_i_i_o ?x ?xa) ?xb;
         ?x \<turnstile>\<^sub>P ?xa : ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_parts_typing_i_i_oE",
     "[| pred.eval (collection_parts_typing_i_i_o ?x ?xa) ?xb;
         ?x \<turnstile>\<^sub>C ?xa : ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_unop_type_i_i_oE",
     "[| pred.eval (collection_unop_type_i_i_o ?x ?xa) ?xb;
         collection_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typing_i_i_oE",
     "[| pred.eval (typing_i_i_o ?x ?xa) ?xb;
         ?x \<turnstile>\<^sub>E ?xa : ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.numeric_unop_type_i_i_oE",
     "[| pred.eval (numeric_unop_type_i_i_o ?x ?xa) ?xb;
         numeric_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_unop_type_i_i_oE",
     "[| pred.eval (string_unop_type_i_i_o ?x ?xa) ?xb;
         string_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.mataop_type_i_o_iE",
     "[| pred.eval (mataop_type_i_o_i ?x ?xb) ?xa;
         mataop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.iterator_typing_i_i_oE",
     "[| pred.eval (iterator_typing_i_i_o ?x ?xa) ?xb;
         ?x \<turnstile>\<^sub>I ?xa : ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.any_unop_type_o_i_iE",
     "[| pred.eval (any_unop_type_o_i_i ?xa ?xb) ?x;
         any_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_unop_type_o_i_iE",
     "[| pred.eval (string_unop_type_o_i_i ?xa ?xb) ?x;
         string_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.boolean_unop_type_o_i_iE",
     "[| pred.eval (boolean_unop_type_o_i_i ?xa ?xb) ?x;
         boolean_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.numeric_unop_type_o_i_iE",
     "[| pred.eval (numeric_unop_type_o_i_i ?xa ?xb) ?x;
         numeric_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_unop_type_o_i_iE",
     "[| pred.eval (collection_unop_type_o_i_i ?xa ?xb) ?x;
         collection_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 1),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ternop_type_o_i_i_i_i_oI",
     "ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==>
      pred.eval (ternop_type_o_i_i_i_i_o ?xa ?xb ?xc ?xd) (?x, ?xe)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 0))
           ))),
    ("OCL_Typing.ternop_type_o_i_o_i_i_iI",
     "ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==>
      pred.eval (ternop_type_o_i_o_i_i_i ?xa ?xc ?xd ?xe) (?x, ?xb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 4),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 3))
           ))),
    ("OCL_Typing.ternop_type_o_o_i_i_i_iI",
     "ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==>
      pred.eval (ternop_type_o_o_i_i_i_i ?xb ?xc ?xd ?xe) (?x, ?xa)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 5),
               template_var 4))
           ))),
    ("OCL_Typing.ternop_type_i_o_i_i_i_oI",
     "ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==>
      pred.eval (ternop_type_i_o_i_i_i_o ?x ?xb ?xc ?xd) (?xa, ?xe)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 0))
           ))),
    ("OCL_Typing.ternop_type_i_o_o_i_i_iI",
     "ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==>
      pred.eval (ternop_type_i_o_o_i_i_i ?x ?xc ?xd ?xe) (?xa, ?xb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3))
           ))),
    ("OCL_Typing.ternop_type_i_i_i_i_i_iI",
     "ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==>
      pred.eval (ternop_type_i_i_i_i_i_i ?x ?xa ?xb ?xc ?xd ?xe) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 3, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 5),
                         template_var 4),
                       template_var 3),
                     template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Typing.CollectionPartsNilTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>C [?x] : ?\<tau>;
         ?\<Gamma> \<turnstile>\<^sub>P ?x : ?\<tau> ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 3),
                template_app
                 (template_app (template_hole 2, template_var 2),
                  template_hole 1)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.BooleanLiteralTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          Literal (BooleanLiteral ?c) : ?\<tau>;
         ?\<tau> = Boolean[1] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2))),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_hole 0))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.IntegerLiteralTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          Literal (IntegerLiteral ?c) : ?\<tau>;
         ?\<tau> = Integer[1] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2))),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_hole 0))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.RealLiteralTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E Literal (RealLiteral ?c) : ?\<tau>;
         ?\<tau> = Real[1] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2))),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_hole 0))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.StringLiteralTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          Literal (StringLiteral ?c) : ?\<tau>;
         ?\<tau> = String[1] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2))),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_hole 0))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.UnlimitedNaturalLiteralTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          Literal (UnlimitedNaturalLiteral ?c) : ?\<tau>;
         ?\<tau> = UnlimitedNatural[1] ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_hole 4,
                  template_app (template_hole 3, template_var 2))),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_hole 0))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.MetaOperationCallTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          MetaOperationCall ?\<tau> ?op : ?\<sigma>;
         mataop_type ?\<tau> ?op ?\<sigma> ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.mataop_type_o_o_iE",
     "[| pred.eval (mataop_type_o_o_i ?xb) (?x, ?xa);
         mataop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_unop_type_i_o_oE",
     "[| pred.eval (string_unop_type_i_o_o ?x) (?xa, ?xb);
         string_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.mataop_type_i_o_oE",
     "[| pred.eval (mataop_type_i_o_o ?x) (?xa, ?xb);
         mataop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.any_unop_type_o_i_oE",
     "[| pred.eval (any_unop_type_o_i_o ?xa) (?x, ?xb);
         any_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_unop_type_o_o_iE",
     "[| pred.eval (string_unop_type_o_o_i ?xb) (?x, ?xa);
         string_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_unop_type_o_i_oE",
     "[| pred.eval (string_unop_type_o_i_o ?xa) (?x, ?xb);
         string_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.boolean_unop_type_o_i_oE",
     "[| pred.eval (boolean_unop_type_o_i_o ?xa) (?x, ?xb);
         boolean_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.boolean_unop_type_o_o_iE",
     "[| pred.eval (boolean_unop_type_o_o_i ?xb) (?x, ?xa);
         boolean_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 1),
                 template_var 3)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.numeric_unop_type_o_i_oE",
     "[| pred.eval (numeric_unop_type_o_i_o ?xa) (?x, ?xb);
         numeric_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_unop_type_o_i_oE",
     "[| pred.eval (collection_unop_type_o_i_o ?xa) (?x, ?xb);
         collection_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 2),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.any_unop_type_i_i_iE",
     "[| pred.eval (any_unop_type_i_i_i ?x ?xa ?xb) ?y;
         any_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.boolean_unop_type_i_i_iE",
     "[| pred.eval (boolean_unop_type_i_i_i ?x ?xa ?xb) ?y;
         boolean_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_part_typing_i_i_iE",
     "[| pred.eval (collection_part_typing_i_i_i ?x ?xa ?xb) ?y;
         ?x \<turnstile>\<^sub>P ?xa : ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_parts_typing_i_i_iE",
     "[| pred.eval (collection_parts_typing_i_i_i ?x ?xa ?xb) ?y;
         ?x \<turnstile>\<^sub>C ?xa : ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_unop_type_i_i_iE",
     "[| pred.eval (collection_unop_type_i_i_i ?x ?xa ?xb) ?y;
         collection_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.expr_list_typing_i_i_iE",
     "[| pred.eval (expr_list_typing_i_i_i ?x ?xa ?xb) ?y;
         ?x \<turnstile>\<^sub>L ?xa : ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.iterator_typing_i_i_iE",
     "[| pred.eval (iterator_typing_i_i_i ?x ?xa ?xb) ?y;
         ?x \<turnstile>\<^sub>I ?xa : ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.mataop_type_i_i_iE",
     "[| pred.eval (mataop_type_i_i_i ?x ?xa ?xb) ?y;
         mataop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.numeric_unop_type_i_i_iE",
     "[| pred.eval (numeric_unop_type_i_i_i ?x ?xa ?xb) ?y;
         numeric_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_unop_type_i_i_iE",
     "[| pred.eval (string_unop_type_i_i_i ?x ?xa ?xb) ?y;
         string_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typing_i_i_iE",
     "[| pred.eval (typing_i_i_i ?x ?xa ?xb) ?y;
         ?x \<turnstile>\<^sub>E ?xa : ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ternop_type_o_o_i_i_i_oI",
     "ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==>
      pred.eval (ternop_type_o_o_i_i_i_o ?xb ?xc ?xd) (?x, ?xa, ?xe)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 3),
                   template_var 2),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 5),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 0)))
           ))),
    ("OCL_Typing.ternop_type_o_o_o_i_i_iI",
     "ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==>
      pred.eval (ternop_type_o_o_o_i_i_i ?xc ?xd ?xe) (?x, ?xa, ?xb)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_app
              (template_app (template_hole 1, template_var 5),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 3)))
           ))),
    ("OCL_Typing.VarTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E Var ?v : ?\<tau>;
         fmlookup ?\<Gamma> ?v = Some ?\<tau> ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_app (template_hole 0, template_var 1))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.binop_type_det",
     "[| binop_type ?op ?k ?\<tau> ?\<sigma> ?\<rho>\<^sub>1;
         binop_type ?op ?k ?\<tau> ?\<sigma> ?\<rho>\<^sub>2 |]
      ==> ?\<rho>\<^sub>1 = ?\<rho>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.collection_ternop_type_det",
     "[| collection_ternop_type ?op ?\<tau> ?\<sigma> ?\<rho>
          ?\<upsilon>\<^sub>1;
         collection_ternop_type ?op ?\<tau> ?\<sigma> ?\<rho>
          ?\<upsilon>\<^sub>2 |]
      ==> ?\<upsilon>\<^sub>1 = ?\<upsilon>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.op_type_det",
     "[| op_type ?op ?k ?\<tau> ?\<pi> ?\<sigma>;
         op_type ?op ?k ?\<tau> ?\<pi> ?\<rho> |]
      ==> ?\<sigma> = ?\<rho>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.string_ternop_type_det",
     "[| string_ternop_type ?op ?\<tau> ?\<sigma> ?\<rho>
          ?\<upsilon>\<^sub>1;
         string_ternop_type ?op ?\<tau> ?\<sigma> ?\<rho>
          ?\<upsilon>\<^sub>2 |]
      ==> ?\<upsilon>\<^sub>1 = ?\<upsilon>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.typeop_type_det",
     "[| typeop_type ?op ?k ?\<tau> ?\<sigma> ?\<rho>\<^sub>1;
         typeop_type ?op ?k ?\<tau> ?\<sigma> ?\<rho>\<^sub>2 |]
      ==> ?\<rho>\<^sub>1 = ?\<rho>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.unop_type_o_i_i_iE",
     "[| pred.eval (unop_type_o_i_i_i ?xa ?xb ?xc) ?x;
         unop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_binop_type_i_o_i_iE",
     "[| pred.eval (string_binop_type_i_o_i_i ?x ?xb ?xc) ?xa;
         string_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.super_binop_type_i_i_i_oE",
     "[| pred.eval (super_binop_type_i_i_i_o ?x ?xa ?xb) ?xc;
         super_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.boolean_binop_type_i_i_i_oE",
     "[| pred.eval (boolean_binop_type_i_i_i_o ?x ?xa ?xb) ?xc;
         boolean_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_binop_type_i_i_i_oE",
     "[| pred.eval (collection_binop_type_i_i_i_o ?x ?xa ?xb) ?xc;
         collection_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.numeric_binop_type_i_i_i_oE",
     "[| pred.eval (numeric_binop_type_i_i_i_o ?x ?xa ?xb) ?xc;
         numeric_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.unop_type_i_i_i_oE",
     "[| pred.eval (unop_type_i_i_i_o ?x ?xa ?xb) ?xc;
         unop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_binop_type_i_i_i_oE",
     "[| pred.eval (string_binop_type_i_i_i_o ?x ?xa ?xb) ?xc;
         string_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.unop_type_i_o_i_iE",
     "[| pred.eval (unop_type_i_o_i_i ?x ?xb ?xc) ?xa;
         unop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 1),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.super_binop_type_o_i_i_iE",
     "[| pred.eval (super_binop_type_o_i_i_i ?xa ?xb ?xc) ?x;
         super_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_binop_type_o_i_i_iE",
     "[| pred.eval (string_binop_type_o_i_i_i ?xa ?xb ?xc) ?x;
         string_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.boolean_binop_type_o_i_i_iE",
     "[| pred.eval (boolean_binop_type_o_i_i_i ?xa ?xb ?xc) ?x;
         boolean_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.numeric_binop_type_o_i_i_iE",
     "[| pred.eval (numeric_binop_type_o_i_i_i ?xa ?xb ?xc) ?x;
         numeric_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_binop_type_o_i_i_iE",
     "[| pred.eval (collection_binop_type_o_i_i_i ?xa ?xb ?xc) ?x;
         collection_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 1),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_unop_type_o_o_oE",
     "[| pred.eval string_unop_type_o_o_o (?x, ?xa, ?xb);
         string_unop_type ?x ?xa ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.unop_type_o_i_i_oE",
     "[| pred.eval (unop_type_o_i_i_o ?xa ?xb) (?x, ?xc);
         unop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.unop_type_o_o_i_iE",
     "[| pred.eval (unop_type_o_o_i_i ?xb ?xc) (?x, ?xa);
         unop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 4),
                 template_var 3)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_binop_type_i_o_i_oE",
     "[| pred.eval (string_binop_type_i_o_i_o ?x ?xb) (?xa, ?xc);
         string_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.unop_type_i_o_i_oE",
     "[| pred.eval (unop_type_i_o_i_o ?x ?xb) (?xa, ?xc);
         unop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 4),
                     template_var 2),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.super_binop_type_o_i_i_oE",
     "[| pred.eval (super_binop_type_o_i_i_o ?xa ?xb) (?x, ?xc);
         super_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_binop_type_o_o_i_iE",
     "[| pred.eval (string_binop_type_o_o_i_i ?xb ?xc) (?x, ?xa);
         string_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 1),
                   template_var 4),
                 template_var 3)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_binop_type_o_i_i_oE",
     "[| pred.eval (string_binop_type_o_i_i_o ?xa ?xb) (?x, ?xc);
         string_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.boolean_binop_type_o_i_i_oE",
     "[| pred.eval (boolean_binop_type_o_i_i_o ?xa ?xb) (?x, ?xc);
         boolean_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.numeric_binop_type_o_i_i_oE",
     "[| pred.eval (numeric_binop_type_o_i_i_o ?xa ?xb) (?x, ?xc);
         numeric_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_binop_type_o_i_i_oE",
     "[| pred.eval (collection_binop_type_o_i_i_o ?xa ?xb) (?x, ?xc);
         collection_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 2),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.boolean_binop_type_i_i_i_iE",
     "[| pred.eval (boolean_binop_type_i_i_i_i ?x ?xa ?xb ?xc) ?y;
         boolean_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_binop_type_i_i_i_iE",
     "[| pred.eval (collection_binop_type_i_i_i_i ?x ?xa ?xb ?xc) ?y;
         collection_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.numeric_binop_type_i_i_i_iE",
     "[| pred.eval (numeric_binop_type_i_i_i_i ?x ?xa ?xb ?xc) ?y;
         numeric_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_binop_type_i_i_i_iE",
     "[| pred.eval (string_binop_type_i_i_i_i ?x ?xa ?xb ?xc) ?y;
         string_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.super_binop_type_i_i_i_iE",
     "[| pred.eval (super_binop_type_i_i_i_i ?x ?xa ?xb ?xc) ?y;
         super_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.unop_type_i_i_i_iE",
     "[| pred.eval (unop_type_i_i_i_i ?x ?xa ?xb ?xc) ?y;
         unop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ternop_type_det",
     "[| ternop_type ?op ?k ?\<tau> ?\<sigma> ?\<rho> ?\<upsilon>\<^sub>1;
         ternop_type ?op ?k ?\<tau> ?\<sigma> ?\<rho> ?\<upsilon>\<^sub>2 |]
      ==> ?\<upsilon>\<^sub>1 = ?\<upsilon>\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.binop_type_o_i_i_i_iE",
     "[| pred.eval (binop_type_o_i_i_i_i ?xa ?xb ?xc ?xd) ?x;
         binop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_ternop_type_i_i_i_i_oE",
     "[| pred.eval (collection_ternop_type_i_i_i_i_o ?x ?xa ?xb ?xc) ?xd;
         collection_ternop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_ternop_type_i_o_i_i_iE",
     "[| pred.eval (collection_ternop_type_i_o_i_i_i ?x ?xb ?xc ?xd) ?xa;
         collection_ternop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 1),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_ternop_type_i_o_i_i_iE",
     "[| pred.eval (string_ternop_type_i_o_i_i_i ?x ?xb ?xc ?xd) ?xa;
         string_ternop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 1),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typeop_type_i_i_i_i_oE",
     "[| pred.eval (typeop_type_i_i_i_i_o ?x ?xa ?xb ?xc) ?xd;
         typeop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.binop_type_i_i_i_i_oE",
     "[| pred.eval (binop_type_i_i_i_i_o ?x ?xa ?xb ?xc) ?xd;
         binop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.op_type_i_i_i_i_oE",
     "[| pred.eval (op_type_i_i_i_i_o ?x ?xa ?xb ?xc) ?xd;
         op_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_ternop_type_i_i_i_i_oE",
     "[| pred.eval (string_ternop_type_i_i_i_i_o ?x ?xa ?xb ?xc) ?xd;
         string_ternop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typeop_type_i_o_i_i_iE",
     "[| pred.eval (typeop_type_i_o_i_i_i ?x ?xb ?xc ?xd) ?xa;
         typeop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 1),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.binop_type_i_o_i_i_iE",
     "[| pred.eval (binop_type_i_o_i_i_i ?x ?xb ?xc ?xd) ?xa;
         binop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 1),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.op_type_i_o_i_i_iE",
     "[| pred.eval (op_type_i_o_i_i_i ?x ?xb ?xc ?xd) ?xa;
         op_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 1),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typeop_type_o_i_i_i_iE",
     "[| pred.eval (typeop_type_o_i_i_i_i ?xa ?xb ?xc ?xd) ?x;
         typeop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_ternop_type_o_i_i_i_iE",
     "[| pred.eval (string_ternop_type_o_i_i_i_i ?xa ?xb ?xc ?xd) ?x;
         string_ternop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_ternop_type_o_i_i_i_iE",
     "[| pred.eval (collection_ternop_type_o_i_i_i_i ?xa ?xb ?xc ?xd) ?x;
         collection_ternop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 1, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 1),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.unop_type_o_o_i_oE",
     "[| pred.eval (unop_type_o_o_i_o ?xb) (?x, ?xa, ?xc);
         unop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 4)),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 4),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_binop_type_o_o_i_oE",
     "[| pred.eval (string_binop_type_o_o_i_o ?xb) (?x, ?xa, ?xc);
         string_binop_type ?x ?xa ?xb ?xc ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app (template_hole 3, template_var 4)),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_var 2),
                   template_var 4),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.binop_type_o_i_i_i_oE",
     "[| pred.eval (binop_type_o_i_i_i_o ?xa ?xb ?xc) (?x, ?xd);
         binop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.binop_type_o_o_i_i_iE",
     "[| pred.eval (binop_type_o_o_i_i_i ?xb ?xc ?xd) (?x, ?xa);
         binop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1),
                     template_var 5),
                   template_var 4),
                 template_var 3)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_ternop_type_i_o_i_i_oE",
     "[| pred.eval (string_ternop_type_i_o_i_i_o ?x ?xb ?xc) (?xa, ?xd);
         string_ternop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 2),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typeop_type_i_o_i_i_oE",
     "[| pred.eval (typeop_type_i_o_i_i_o ?x ?xb ?xc) (?xa, ?xd);
         typeop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 2),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typeop_type_o_i_i_i_oE",
     "[| pred.eval (typeop_type_o_i_i_i_o ?xa ?xb ?xc) (?x, ?xd);
         typeop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.binop_type_i_o_i_i_oE",
     "[| pred.eval (binop_type_i_o_i_i_o ?x ?xb ?xc) (?xa, ?xd);
         binop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 2),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.op_type_i_o_i_i_oE",
     "[| pred.eval (op_type_i_o_i_i_o ?x ?xb ?xc) (?xa, ?xd);
         op_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 5),
                       template_var 2),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typeop_type_o_o_i_i_iE",
     "[| pred.eval (typeop_type_o_o_i_i_i ?xb ?xc ?xd) (?x, ?xa);
         typeop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1),
                     template_var 5),
                   template_var 4),
                 template_var 3)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_ternop_type_o_o_i_i_iE",
     "[| pred.eval (string_ternop_type_o_o_i_i_i ?xb ?xc ?xd) (?x, ?xa);
         string_ternop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1),
                     template_var 5),
                   template_var 4),
                 template_var 3)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_ternop_type_o_i_i_i_oE",
     "[| pred.eval (string_ternop_type_o_i_i_i_o ?xa ?xb ?xc) (?x, ?xd);
         string_ternop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_ternop_type_o_i_i_i_oE",
     "[| pred.eval (collection_ternop_type_o_i_i_i_o ?xa ?xb ?xc) (?x, ?xd);
         collection_ternop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_ternop_type_o_o_i_i_iE",
     "[| pred.eval (collection_ternop_type_o_o_i_i_i ?xb ?xc ?xd) (?x, ?xa);
         collection_ternop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 2),
                       template_var 1),
                     template_var 5),
                   template_var 4),
                 template_var 3)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.binop_type_i_i_i_i_iE",
     "[| pred.eval (binop_type_i_i_i_i_i ?x ?xa ?xb ?xc ?xd) ?y;
         binop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.collection_ternop_type_i_i_i_i_iE",
     "[| pred.eval (collection_ternop_type_i_i_i_i_i ?x ?xa ?xb ?xc ?xd) ?y;
         collection_ternop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.op_type_i_i_i_i_iE",
     "[| pred.eval (op_type_i_i_i_i_i ?x ?xa ?xb ?xc ?xd) ?y;
         op_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_ternop_type_i_i_i_i_iE",
     "[| pred.eval (string_ternop_type_i_i_i_i_i ?x ?xa ?xb ?xc ?xd) ?y;
         string_ternop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typeop_type_i_i_i_i_iE",
     "[| pred.eval (typeop_type_i_i_i_i_i ?x ?xa ?xb ?xc ?xd) ?y;
         typeop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        TypeOperationCall ?a ?k ?op ?\<sigma> : ?\<tau>) =
      (EX \<tau>.
          ?\<Gamma> \<turnstile>\<^sub>E ?a : \<tau> &
          typeop_type ?k ?op \<tau> ?\<sigma> ?\<tau>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 5),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 4),
               template_var 3),
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1))),
         template_var 0),
       template_app (template_hole 2, t_empty))),
    ("OCL_Typing.iterator_typing_det",
     "[| ?\<Gamma> \<turnstile>\<^sub>I (?src, ?its, ?body) : ?xs;
         ?\<Gamma> \<turnstile>\<^sub>I (?src, ?its, ?body) : ?ys |]
      ==> ?xs = ?ys",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_app
                 (template_app (template_hole 2, template_var 4),
                  template_app
                   (template_app (template_hole 1, template_var 3),
                    template_var 2))),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Typing.ternop_type_o_i_i_i_i_iE",
     "[| pred.eval (ternop_type_o_i_i_i_i_i ?xa ?xb ?xc ?xd ?xe) ?x;
         ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 1),
                         template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ternop_type_i_i_i_i_i_oE",
     "[| pred.eval (ternop_type_i_i_i_i_i_o ?x ?xa ?xb ?xc ?xd) ?xe;
         ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 4),
                     template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ternop_type_i_i_o_i_i_iE",
     "[| pred.eval (ternop_type_i_i_o_i_i_i ?x ?xa ?xc ?xd ?xe) ?xb;
         ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 5),
                       template_var 1),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ternop_type_i_o_i_i_i_iE",
     "[| pred.eval (ternop_type_i_o_i_i_i_i ?x ?xb ?xc ?xd ?xe) ?xa;
         ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 1),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.binop_type_o_o_i_i_oE",
     "[| pred.eval (binop_type_o_o_i_i_o ?xb ?xc) (?x, ?xa, ?xd);
         binop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 2),
                     template_var 5),
                   template_var 4),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typeop_type_o_o_i_i_oE",
     "[| pred.eval (typeop_type_o_o_i_i_o ?xb ?xc) (?x, ?xa, ?xd);
         typeop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 2),
                     template_var 5),
                   template_var 4),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.string_ternop_type_o_o_i_i_oE",
     "[| pred.eval (string_ternop_type_o_o_i_i_o ?xb ?xc) (?x, ?xa, ?xd);
         string_ternop_type ?x ?xa ?xb ?xc ?xd ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 3),
                       template_var 2),
                     template_var 5),
                   template_var 4),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ternop_type_o_i_i_i_i_oE",
     "[| pred.eval (ternop_type_o_i_i_i_i_o ?xa ?xb ?xc ?xd) (?x, ?xe);
         ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ternop_type_o_i_o_i_i_iE",
     "[| pred.eval (ternop_type_o_i_o_i_i_i ?xa ?xc ?xd ?xe) (?x, ?xb);
         ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 6),
                       template_var 1),
                     template_var 5),
                   template_var 4),
                 template_var 3)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ternop_type_o_o_i_i_i_iE",
     "[| pred.eval (ternop_type_o_o_i_i_i_i ?xb ?xc ?xd ?xe) (?x, ?xa);
         ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 2),
                         template_var 1),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 3)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ternop_type_i_o_i_i_i_oE",
     "[| pred.eval (ternop_type_i_o_i_i_i_o ?x ?xb ?xc ?xd) (?xa, ?xe);
         ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 2),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ternop_type_i_o_o_i_i_iE",
     "[| pred.eval (ternop_type_i_o_o_i_i_i ?x ?xc ?xd ?xe) (?xa, ?xb);
         ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 1))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 6),
                         template_var 2),
                       template_var 1),
                     template_var 5),
                   template_var 4),
                 template_var 3)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ternop_type_i_i_i_i_i_iE",
     "[| pred.eval (ternop_type_i_i_i_i_i_i ?x ?xa ?xb ?xc ?xd ?xe) ?y;
         ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 1, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 7),
                         template_var 6),
                       template_var 5),
                     template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ternop_type_o_o_i_i_i_oE",
     "[| pred.eval (ternop_type_o_o_i_i_i_o ?xb ?xc ?xd) (?x, ?xa, ?xe);
         ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 2),
                       template_var 6),
                     template_var 5),
                   template_var 4),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ternop_type_o_o_o_i_i_iE",
     "[| pred.eval (ternop_type_o_o_o_i_i_i ?xc ?xd ?xe) (?x, ?xa, ?xb);
         ternop_type ?x ?xa ?xb ?xc ?xd ?xe ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 4,
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 6),
                    template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)))
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 2),
                       template_var 1),
                     template_var 6),
                   template_var 5),
                 template_var 4)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>L ?x # ?xs : ?\<pi>) =
      (EX \<tau> \<pi>.
          ?\<pi> = \<tau> # \<pi> &
          ?\<Gamma> \<turnstile>\<^sub>E ?x : \<tau> &
          ?\<Gamma> \<turnstile>\<^sub>L ?xs : \<pi>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 3),
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        Literal (EnumLiteral ?enm ?lit) : ?\<tau>) =
      (?\<tau> = (Enum ?enm)[1] &
       (EX lits. fmlookup literals ?enm = Some lits & ?lit |\<in>| lits))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 3),
                template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 0),
                 template_app
                  (template_hole 7,
                   template_app (template_hole 6, template_var 2)))),
             template_app (template_hole 5, t_empty))
           ))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        TupleElementCall ?src ?k ?elem : ?\<tau>) =
      (?k = DotCall &
       (EX \<pi>.
           ?\<Gamma> \<turnstile>\<^sub>E ?src : Tuple \<pi> &
           fmlookup \<pi> ?elem = Some ?\<tau>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 9, template_var 3),
                    template_var 2),
                  template_app (template_hole 8, template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_hole 5)),
             template_app (template_hole 4, t_empty))
           ))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>C ?x # ?y # ?xs : ?\<tau>) =
      (EX \<tau> \<sigma>.
          ?\<tau> = \<tau> \<squnion> \<sigma> &
          ?\<Gamma> \<turnstile>\<^sub>P ?x : \<tau> &
          ?\<Gamma> \<turnstile>\<^sub>C ?y # ?xs : \<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 4),
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1))),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        AttributeCall ?src ?k ?prop : ?\<tau>) =
      (?k = DotCall &
       (EX \<C>.
           ?\<Gamma> \<turnstile>\<^sub>E
            ?src : \<langle>\<C>\<rangle>\<^sub>\<T>[1] &
           (EX \<D>. attribute \<C> ?prop \<D> ?\<tau>)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 9, template_var 3),
                    template_var 2),
                  template_app (template_hole 8, template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 2),
                 template_hole 5)),
             template_app (template_hole 4, t_empty))
           ))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        OperationCall ?src ?k ?op ?params : ?\<tau>) =
      (EX \<tau>.
          ?\<Gamma> \<turnstile>\<^sub>E ?src : \<tau> &
          (EX \<pi>.
              ?\<Gamma> \<turnstile>\<^sub>L ?params : \<pi> &
              op_type ?op ?k \<tau> \<pi> ?\<tau>))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 5),
           template_app
            (template_app
              (template_app (template_hole 6, template_var 4),
               template_var 3),
             template_app
              (template_app (template_hole 5, template_var 2),
               template_var 1))),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("OCL_Typing.TypeOperationCallTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          TypeOperationCall ?a ?k ?op ?\<sigma> : ?\<tau>;
         !!\<tau>.
            [| ?\<Gamma> \<turnstile>\<^sub>E ?a : \<tau>;
               typeop_type ?k ?op \<tau> ?\<sigma> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E expr.If ?a ?b ?c : ?\<tau>) =
      (EX \<sigma> \<rho>.
          ?\<tau> = \<sigma> \<squnion> \<rho> &
          ?\<Gamma> \<turnstile>\<^sub>E ?a : Boolean[1] &
          ?\<Gamma> \<turnstile>\<^sub>E ?b : \<sigma> &
          ?\<Gamma> \<turnstile>\<^sub>E ?c : \<rho>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        expr.Let ?v ?\<tau> ?init ?body : ?\<sigma>) =
      (EX \<sigma> \<tau>.
          ?\<tau> = Some \<tau> &
          ?\<Gamma> \<turnstile>\<^sub>E ?init : \<sigma> &
          \<sigma> <= \<tau> &
          ?\<Gamma>(?v |->f \<tau>) \<turnstile>\<^sub>E
           ?body : ?\<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 7, template_var 5),
           template_app
            (template_app
              (template_app
                (template_app (template_hole 6, template_var 4),
                 template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 5, t_empty))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        AssociationClassCall ?src ?k ?a ?from : ?\<tau>) =
      (?k = DotCall &
       ?\<tau> = class_assoc_type ?from &
       (EX \<C>.
           ?\<Gamma> \<turnstile>\<^sub>E
            ?src : \<langle>\<C>\<rangle>\<^sub>\<T>[1] &
           Ex (referred_by_association_class \<C> ?a ?from)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 12, template_var 4),
                    template_var 3),
                  template_app
                   (template_app (template_hole 11, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_app (template_hole 9, template_var 3),
                 template_hole 8)),
             template_app
              (template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 7, template_var 0),
                   template_app (template_hole 6, template_var 1))),
               template_app (template_hole 5, t_empty)))
           ))),
    ("OCL_Typing.EnumLiteralTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          Literal (EnumLiteral ?enm ?lit) : ?\<tau>;
         !!lits.
            [| ?\<tau> = (Enum ?enm)[1]; fmlookup literals ?enm = Some lits;
               ?lit |\<in>| lits |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 4),
                template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 9, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.TupleElementCallTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          TupleElementCall ?src ?k ?elem : ?\<tau>;
         !!\<pi>.
            [| ?k = DotCall;
               ?\<Gamma> \<turnstile>\<^sub>E ?src : Tuple \<pi>;
               fmlookup \<pi> ?elem = Some ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 8, template_var 4),
                    template_var 3),
                  template_app (template_hole 7, template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.StaticOperationCallTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          StaticOperationCall ?\<tau> ?op ?as : ?\<sigma>;
         !!\<pi> oper.
            [| ?\<sigma> = oper_type oper;
               ?\<Gamma> \<turnstile>\<^sub>L ?as : \<pi>;
               static_operation ?\<tau> ?op \<pi> oper |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 7, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.op_type_alt_simps",
     "super_binop_type ?op ?\<tau> ?\<sigma> ?\<rho> =
      (?op = EqualOp &
       ?\<rho> = Boolean[1] & (?\<tau> <= ?\<sigma> | ?\<sigma> < ?\<tau>) |
       ?op = NotEqualOp &
       ?\<rho> = Boolean[1] &
       (?\<tau> <= ?\<sigma> | ?\<sigma> < ?\<tau>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 3),
                     template_hole 6)),
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 5, template_var 0),
                       template_app (template_hole 4, template_hole 3))),
                   template_app
                    (template_app
                      (template_hole 9,
                       template_app
                        (template_app (template_hole 2, template_var 2),
                         template_var 1)),
                     template_app
                      (template_app (template_hole 1, template_var 1),
                       template_var 2))))),
             template_app
              (template_app
                (template_hole 8,
                 template_app
                  (template_app (template_hole 7, template_var 3),
                   template_hole 0)),
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_app (template_hole 4, template_hole 3))),
                 template_app
                  (template_app
                    (template_hole 9,
                     template_app
                      (template_app (template_hole 2, template_var 2),
                       template_var 1)),
                   template_app
                    (template_app (template_hole 1, template_var 1),
                     template_var 2)))))
           ))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        ExistsIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>) =
      (?k = ArrowCall &
       (EX \<tau> \<sigma>.
           ?\<Gamma> \<turnstile>\<^sub>I
            (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, ?\<tau>)) &
       ?\<tau> <= Boolean[?])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 15, template_var 5),
                    template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 14, template_hole 13),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_var 4),
                 template_hole 10)),
             template_app
              (template_app
                (template_hole 12, template_app (template_hole 9, t_empty)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_hole 0))))
           ))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        ForAllIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>) =
      (?k = ArrowCall &
       (EX \<tau> \<sigma>.
           ?\<Gamma> \<turnstile>\<^sub>I
            (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, ?\<tau>)) &
       ?\<tau> <= Boolean[?])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 15, template_var 5),
                    template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 14, template_hole 13),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 12,
               template_app
                (template_app (template_hole 11, template_var 4),
                 template_hole 10)),
             template_app
              (template_app
                (template_hole 12, template_app (template_hole 9, t_empty)),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_hole 0))))
           ))),
    ("OCL_Typing.CollectionPartsItemTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>C ?x # ?y # ?xs : ?\<tau>;
         !!\<tau> \<sigma>.
            [| ?\<tau> = \<tau> \<squnion> \<sigma>;
               ?\<Gamma> \<turnstile>\<^sub>P ?x : \<tau>;
               ?\<Gamma> \<turnstile>\<^sub>C ?y # ?xs : \<sigma> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 5),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.AttributeCallTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          AttributeCall ?src ?k ?prop : ?\<tau>;
         !!\<C> \<D>.
            [| ?k = DotCall;
               ?\<Gamma> \<turnstile>\<^sub>E
                ?src : \<langle>\<C>\<rangle>\<^sub>\<T>[1];
               attribute \<C> ?prop \<D> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 8, template_var 4),
                    template_var 3),
                  template_app (template_hole 7, template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.OperationCallTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          OperationCall ?src ?k ?op ?params : ?\<tau>;
         !!\<tau> \<pi>.
            [| ?\<Gamma> \<turnstile>\<^sub>E ?src : \<tau>;
               ?\<Gamma> \<turnstile>\<^sub>L ?params : \<pi>;
               op_type ?op ?k \<tau> \<pi> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 4, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.op_type_alt_simps",
     "string_ternop_type ?op ?\<tau> ?\<sigma> ?\<rho> ?\<upsilon> =
      (?op = SubstringOp &
       ?\<tau> = String[1] &
       ?\<upsilon> = String[1] &
       UnlimitedNatural[1] <= ?\<sigma> &
       ?\<sigma> <= Integer[1] & ?\<rho>
       = UnlimitedNatural[1]\<midarrow>Integer[1])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 17, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, template_var 4),
                 template_hole 14)),
             template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app (template_hole 13, template_var 3),
                   template_app (template_hole 12, template_hole 11))),
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_app (template_hole 10, template_var 0),
                     template_app (template_hole 9, template_hole 8))),
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app (template_hole 6, template_hole 5)),
                       template_var 2)),
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app
                        (template_app (template_hole 7, template_var 2),
                         template_app (template_hole 6, template_hole 4))),
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app
                            (template_hole 3,
                             template_app
                              (template_hole 2, template_hole 1)),
                           template_var 1)),
                       template_app
                        (template_app (template_hole 3, template_var 1),
                         template_app
                          (template_hole 2, template_hole 0))))))))
           ))),
    ("OCL_Typing.op_type_alt_simps",
     "ternop_type ?op ?k ?\<tau> ?\<sigma> ?\<rho> ?\<upsilon> =
      ((EX op.
           ?op = Inl op &
           ?k = DotCall &
           string_ternop_type op ?\<tau> ?\<sigma> ?\<rho> ?\<upsilon>) |
       (EX op.
           ?op = Inr op &
           ?k = ArrowCall &
           collection_ternop_type op ?\<tau> ?\<sigma> ?\<rho>
            ?\<upsilon>))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app
                (template_app (template_hole 12, template_var 5),
                 template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 11, template_app (template_hole 10, t_empty)),
         template_app (template_hole 3, t_empty)))),
    ("OCL_Typing.IfTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E expr.If ?a ?b ?c : ?\<tau>;
         !!\<sigma> \<rho>.
            [| ?\<tau> = \<sigma> \<squnion> \<rho>;
               ?\<Gamma> \<turnstile>\<^sub>E ?a : Boolean[1];
               ?\<Gamma> \<turnstile>\<^sub>E ?b : \<sigma>;
               ?\<Gamma> \<turnstile>\<^sub>E ?c : \<rho> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.LetTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          expr.Let ?v ?\<tau> ?init ?body : ?\<sigma>;
         !!\<sigma> \<tau>.
            [| ?\<tau> = Some \<tau>;
               ?\<Gamma> \<turnstile>\<^sub>E ?init : \<sigma>;
               \<sigma> <= \<tau>;
               ?\<Gamma>(?v |->f \<tau>) \<turnstile>\<^sub>E
                ?body : ?\<sigma> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 6),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 5, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>P CollectionRange ?a ?b : ?\<tau>) =
      (?\<tau> = Integer[1] &
       (EX \<tau>.
           ?\<Gamma> \<turnstile>\<^sub>E ?a : \<tau> &
           (EX \<sigma>.
               ?\<Gamma> \<turnstile>\<^sub>E ?b : \<sigma> &
               UnlimitedNatural[1] <= \<tau> &
               \<tau> <= Integer[1] & \<sigma>
               = UnlimitedNatural[1]\<midarrow>Integer[1])))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 3),
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app (template_hole 6, template_var 0),
                 template_app (template_hole 5, template_hole 4))),
             template_app (template_hole 3, t_empty))
           ))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        AnyIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>) =
      (?k = ArrowCall &
       (EX \<tau> \<rho>.
           ?\<Gamma> \<turnstile>\<^sub>I
            (?src, ?its, ?its_ty, ?body) : (\<tau>, ?\<tau>, \<rho>) &
           length ?its <= Suc 0 & \<rho> <= Boolean[?]))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 19, template_var 5),
                    template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 18, template_hole 17),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, template_var 4),
                 template_hole 14)),
             template_app (template_hole 13, t_empty))
           ))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        RejectIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>) =
      (?k = ArrowCall &
       (EX \<sigma> \<rho>.
           ?\<Gamma> \<turnstile>\<^sub>I
            (?src, ?its, ?its_ty, ?body) : (?\<tau>, \<sigma>, \<rho>) &
           length ?its <= Suc 0 & \<rho> <= Boolean[?]))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 19, template_var 5),
                    template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 18, template_hole 17),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, template_var 4),
                 template_hole 14)),
             template_app (template_hole 13, t_empty))
           ))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        SelectIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>) =
      (?k = ArrowCall &
       (EX \<sigma> \<rho>.
           ?\<Gamma> \<turnstile>\<^sub>I
            (?src, ?its, ?its_ty, ?body) : (?\<tau>, \<sigma>, \<rho>) &
           length ?its <= Suc 0 & \<rho> <= Boolean[?]))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 19, template_var 5),
                    template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 18, template_hole 17),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, template_var 4),
                 template_hole 14)),
             template_app (template_hole 13, t_empty))
           ))),
    ("OCL_Typing.AssociationClassEndCallTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          AssociationClassEndCall ?src ?k ?role : ?\<tau>;
         !!\<A> end.
            [| ?k = DotCall; ?\<tau> = class_assoc_end_type end;
               ?\<Gamma> \<turnstile>\<^sub>E
                ?src : \<langle>\<A>\<rangle>\<^sub>\<T>[1];
               association_class_end \<A> ?role end |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 12, template_var 4),
                    template_var 3),
                  template_app (template_hole 11, template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        SortedByIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>) =
      (?k = ArrowCall &
       (EX \<tau>.
           (EX \<sigma> \<rho>.
               ?\<Gamma> \<turnstile>\<^sub>I
                (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, \<rho>)) &
           length ?its <= Suc 0 & to_ordered_collection \<tau> ?\<tau>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 18, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 17, template_var 5),
                    template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 16, template_hole 15),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 14,
               template_app
                (template_app (template_hole 13, template_var 4),
                 template_hole 12)),
             template_app (template_hole 11, t_empty))
           ))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        Literal (TupleLiteral (?x # ?xs)) : ?\<tau>) =
      (EX \<xi> \<tau> \<sigma>.
          ?\<tau> = Tuple (\<xi>(tuple_element_name ?x |->f \<sigma>)) &
          ?\<Gamma> \<turnstile>\<^sub>E
           Literal (TupleLiteral ?xs) : Tuple \<xi> &
          ?\<Gamma> \<turnstile>\<^sub>E tuple_element_expr ?x : \<tau> &
          tuple_element_type ?x = Some \<sigma> & \<tau> <= \<sigma>)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 15, template_var 3),
           template_app
            (template_hole 14,
             template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 12, template_var 2),
                 template_var 1)))),
         template_var 0),
       template_app (template_hole 11, t_empty))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        IsUniqueIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>) =
      (?k = ArrowCall &
       ?\<tau> = Boolean[1] &
       (EX \<tau> \<sigma> \<rho>.
           ?\<Gamma> \<turnstile>\<^sub>I
            (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, \<rho>)) &
       length ?its <= Suc 0)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 19, template_var 5),
                    template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 18, template_hole 17),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, template_var 4),
                 template_hole 14)),
             template_app
              (template_app
                (template_hole 16,
                 template_app
                  (template_app (template_hole 13, template_var 0),
                   template_app (template_hole 12, template_hole 11))),
               template_app
                (template_app
                  (template_hole 16,
                   template_app (template_hole 10, t_empty)),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 3)),
                   template_app (template_hole 1, template_hole 0)))))
           ))),
    ("OCL_Typing.AssociationClassCallTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          AssociationClassCall ?src ?k ?a ?from : ?\<tau>;
         !!\<C> \<D>.
            [| ?k = DotCall; ?\<tau> = class_assoc_type ?from;
               ?\<Gamma> \<turnstile>\<^sub>E
                ?src : \<langle>\<C>\<rangle>\<^sub>\<T>[1];
               referred_by_association_class \<C> ?a ?from \<D> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 11, template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 10, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ExistsIteratorTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          ExistsIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>;
         !!\<tau> \<sigma>.
            [| ?k = ArrowCall;
               ?\<Gamma> \<turnstile>\<^sub>I
                (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, ?\<tau>);
               ?\<tau> <= Boolean[?] |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 7),
                template_app
                 (template_app
                   (template_app (template_hole 14, template_var 6),
                    template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 13, template_hole 12),
                        template_var 4),
                      template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ForAllIteratorTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          ForAllIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>;
         !!\<tau> \<sigma>.
            [| ?k = ArrowCall;
               ?\<Gamma> \<turnstile>\<^sub>I
                (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, ?\<tau>);
               ?\<tau> <= Boolean[?] |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 7),
                template_app
                 (template_app
                   (template_app (template_hole 14, template_var 6),
                    template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 13, template_hole 12),
                        template_var 4),
                      template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.AssociationEndCallTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          AssociationEndCall ?src ?k ?role ?from : ?\<tau>;
         !!\<C> \<D> end.
            [| ?k = DotCall; ?\<tau> = assoc_end_type end;
               ?\<Gamma> \<turnstile>\<^sub>E
                ?src : \<langle>\<C>\<rangle>\<^sub>\<T>[1];
               association_end \<C> ?role ?from \<D> end |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 12, template_var 5),
                    template_var 4),
                  template_app
                   (template_app (template_hole 11, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        ClosureIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>) =
      (?k = ArrowCall &
       (EX \<tau> \<sigma> \<rho>.
           ?\<Gamma> \<turnstile>\<^sub>I
            (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, \<rho>) &
           length ?its <= Suc 0 &
           to_single_type \<rho> <= \<sigma> &
           to_unique_collection \<tau> ?\<tau>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 19, template_var 5),
                    template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 18, template_hole 17),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, template_var 4),
                 template_hole 14)),
             template_app (template_hole 13, t_empty))
           ))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        OneIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>) =
      (?k = ArrowCall &
       ?\<tau> = Boolean[1] &
       (EX \<tau> \<sigma> \<rho>.
           ?\<Gamma> \<turnstile>\<^sub>I
            (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, \<rho>) &
           length ?its <= Suc 0 & \<rho> <= Boolean[?]))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 22, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 21, template_var 5),
                    template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 20, template_hole 19),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 18,
               template_app
                (template_app (template_hole 17, template_var 4),
                 template_hole 16)),
             template_app
              (template_app
                (template_hole 18,
                 template_app
                  (template_app (template_hole 15, template_var 0),
                   template_app (template_hole 14, template_hole 13))),
               template_app (template_hole 12, t_empty)))
           ))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        IterateCall ?src ?k ?its ?its_ty ?res ?res_t ?res_init ?body :
        ?\<tau>) =
      (?k = ArrowCall &
       (EX res_t.
           ?res_t = Some res_t &
           (EX \<tau> \<sigma>.
               ?\<Gamma> \<turnstile>\<^sub>I
                (?src, ?its, ?its_ty,
                 expr.Let ?res (Some res_t) ?res_init ?body) :
                (\<tau>, \<sigma>, ?\<tau>)) &
           ?\<tau> <= res_t))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 9),
                template_app
                 (template_app
                   (template_app (template_hole 15, template_var 8),
                    template_var 7),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 14, template_var 6),
                            template_var 5),
                          template_var 4),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app (template_hole 12, template_var 7),
                 template_hole 11)),
             template_app (template_hole 10, t_empty))
           ))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        CollectNestedIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>) =
      (?k = ArrowCall &
       (EX \<tau> \<sigma> \<rho>.
           ?\<Gamma> \<turnstile>\<^sub>I
            (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, \<rho>) &
           length ?its <= Suc 0 &
           (EX \<upsilon>.
               to_nonunique_collection \<tau> \<upsilon> &
               update_element_type \<upsilon> \<rho> ?\<tau>)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 19, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 18, template_var 5),
                    template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 17, template_hole 16),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15,
               template_app
                (template_app (template_hole 14, template_var 4),
                 template_hole 13)),
             template_app (template_hole 12, t_empty))
           ))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        CollectIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>) =
      (?k = ArrowCall &
       (EX \<tau> \<sigma> \<rho>.
           ?\<Gamma> \<turnstile>\<^sub>I
            (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, \<rho>) &
           length ?its <= Suc 0 &
           (EX \<upsilon>.
               to_nonunique_collection \<tau> \<upsilon> &
               update_element_type \<upsilon> (to_single_type \<rho>)
                ?\<tau>)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 6),
                template_app
                 (template_app
                   (template_app (template_hole 19, template_var 5),
                    template_var 4),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 18, template_hole 17),
                        template_var 3),
                      template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 16,
               template_app
                (template_app (template_hole 15, template_var 4),
                 template_hole 14)),
             template_app (template_hole 13, t_empty))
           ))),
    ("OCL_Typing.AnyIteratorTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          AnyIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>;
         !!\<tau> \<rho>.
            [| ?k = ArrowCall;
               ?\<Gamma> \<turnstile>\<^sub>I
                (?src, ?its, ?its_ty, ?body) : (\<tau>, ?\<tau>, \<rho>);
               length ?its <= Suc 0; \<rho> <= Boolean[?] |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 19, template_var 7),
                template_app
                 (template_app
                   (template_app (template_hole 18, template_var 6),
                    template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 17, template_hole 16),
                        template_var 4),
                      template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.RejectIteratorTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          RejectIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>;
         !!\<sigma> \<rho>.
            [| ?k = ArrowCall;
               ?\<Gamma> \<turnstile>\<^sub>I
                (?src, ?its, ?its_ty, ?body) : (?\<tau>, \<sigma>, \<rho>);
               length ?its <= Suc 0; \<rho> <= Boolean[?] |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 19, template_var 7),
                template_app
                 (template_app
                   (template_app (template_hole 18, template_var 6),
                    template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 17, template_hole 16),
                        template_var 4),
                      template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.SelectIteratorTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          SelectIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>;
         !!\<sigma> \<rho>.
            [| ?k = ArrowCall;
               ?\<Gamma> \<turnstile>\<^sub>I
                (?src, ?its, ?its_ty, ?body) : (?\<tau>, \<sigma>, \<rho>);
               length ?its <= Suc 0; \<rho> <= Boolean[?] |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 19, template_var 7),
                template_app
                 (template_app
                   (template_app (template_hole 18, template_var 6),
                    template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 17, template_hole 16),
                        template_var 4),
                      template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.SortedByIteratorTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          SortedByIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>;
         !!\<tau> \<sigma> \<rho>.
            [| ?k = ArrowCall;
               ?\<Gamma> \<turnstile>\<^sub>I
                (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, \<rho>);
               length ?its <= Suc 0; to_ordered_collection \<tau> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 17, template_var 7),
                template_app
                 (template_app
                   (template_app (template_hole 16, template_var 6),
                    template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 15, template_hole 14),
                        template_var 4),
                      template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 13, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.IsUniqueIteratorTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          IsUniqueIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>;
         !!\<tau> \<sigma> \<rho>.
            [| ?k = ArrowCall; ?\<tau> = Boolean[1];
               ?\<Gamma> \<turnstile>\<^sub>I
                (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, \<rho>);
               length ?its <= Suc 0 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 19, template_var 7),
                template_app
                 (template_app
                   (template_app (template_hole 18, template_var 6),
                    template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 17, template_hole 16),
                        template_var 4),
                      template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.ExprListTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>L ?exprs : ?\<pi>;
         [| ?exprs = []; ?\<pi> = [] |] ==> ?P;
         !!expr \<tau> exprs \<pi>.
            [| ?exprs = expr # exprs; ?\<pi> = \<tau> # \<pi>;
               ?\<Gamma> \<turnstile>\<^sub>E expr : \<tau>;
               ?\<Gamma> \<turnstile>\<^sub>L exprs : \<pi> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 2, template_hole 9)],
          template_implication
           ([template_equation (template_var 1, template_hole 7)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        StaticOperationCall ?\<tau> ?op ?as : ?\<sigma>) =
      (EX \<pi> a aa ab ac ad b.
          ?\<sigma> = oper_type (a, aa, ab, ac, ad, b) &
          ?\<Gamma> \<turnstile>\<^sub>L ?as : \<pi> &
          static_operation ?\<tau> ?op \<pi> (a, aa, ab, ac, ad, b))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 18, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 17, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 16, t_empty))),
    ("OCL_Typing.CollectionRangeTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>P CollectionRange ?a ?b : ?\<tau>;
         !!\<tau> \<sigma>.
            [| ?\<tau> = Integer[1];
               ?\<Gamma> \<turnstile>\<^sub>E ?a : \<tau>;
               ?\<Gamma> \<turnstile>\<^sub>E ?b : \<sigma>;
               UnlimitedNatural[1] <= \<tau>; \<tau> <= Integer[1];
               UnlimitedNatural[1] <= \<sigma>; \<sigma> <= Integer[1] |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 4),
                template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>I (?src, ?its, ?body) : ?ys) =
      (EX \<tau> \<sigma> its_ty body.
          ?body = (Some its_ty, body) &
          (EX \<rho>.
              ?ys = (\<tau>, \<sigma>, \<rho>) &
              ?\<Gamma> \<turnstile>\<^sub>E ?src : \<tau> &
              element_type \<tau> \<sigma> &
              \<sigma> <= its_ty &
              ?\<Gamma> ++\<^sub>f
              fmap_of_list (map (%it. (it, its_ty)) ?its)
               \<turnstile>\<^sub>E body : \<rho>))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 18, template_var 4),
           template_app
            (template_app (template_hole 17, template_var 3),
             template_app
              (template_app (template_hole 16, template_var 2),
               template_var 1))),
         template_var 0),
       template_app (template_hole 15, t_empty))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        AssociationClassEndCall ?src ?k ?role : ?\<tau>) =
      (?k = DotCall &
       (EX \<A> a aa ab ac b.
           ?\<tau> = class_assoc_end_type (a, aa, ab, ac, b) &
           ?\<Gamma> \<turnstile>\<^sub>E
            ?src : \<langle>\<A>\<rangle>\<^sub>\<T>[1] &
           association_class_end \<A> ?role (a, aa, ab, ac, b)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 19, template_var 3),
                    template_var 2),
                  template_app (template_hole 18, template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, template_var 2),
                 template_hole 15)),
             template_app (template_hole 14, t_empty))
           ))),
    ("OCL_Typing.ClosureIteratorTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          ClosureIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>;
         !!\<tau> \<sigma> \<rho>.
            [| ?k = ArrowCall;
               ?\<Gamma> \<turnstile>\<^sub>I
                (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, \<rho>);
               length ?its <= Suc 0; to_single_type \<rho> <= \<sigma>;
               to_unique_collection \<tau> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 19, template_var 7),
                template_app
                 (template_app
                   (template_app (template_hole 18, template_var 6),
                    template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 17, template_hole 16),
                        template_var 4),
                      template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.IterateTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          IterateCall ?src ?k ?its ?its_ty ?res ?res_t ?res_init ?body :
          ?\<tau>;
         !!res_t \<tau> \<sigma>.
            [| ?\<Gamma> \<turnstile>\<^sub>I
                (?src, ?its, ?its_ty,
                 expr.Let ?res (Some res_t) ?res_init ?body) :
                (\<tau>, \<sigma>, ?\<tau>);
               ?\<tau> <= res_t; ?k = ArrowCall; ?res_t = Some res_t |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 15, template_var 10),
                template_app
                 (template_app
                   (template_app (template_hole 14, template_var 9),
                    template_var 8),
                  template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app
                           (template_app (template_hole 13, template_var 7),
                            template_var 6),
                          template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.OneIteratorTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          OneIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>;
         !!\<tau> \<sigma> \<rho>.
            [| ?k = ArrowCall; ?\<tau> = Boolean[1];
               ?\<Gamma> \<turnstile>\<^sub>I
                (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, \<rho>);
               length ?its <= Suc 0; \<rho> <= Boolean[?] |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 21, template_var 7),
                template_app
                 (template_app
                   (template_app (template_hole 20, template_var 6),
                    template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 19, template_hole 18),
                        template_var 4),
                      template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 17, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        AssociationEndCall ?src ?k ?role ?from : ?\<tau>) =
      (?k = DotCall &
       (EX \<C> \<D> a aa ab ac b.
           ?\<tau> = assoc_end_type (a, aa, ab, ac, b) &
           ?\<Gamma> \<turnstile>\<^sub>E
            ?src : \<langle>\<C>\<rangle>\<^sub>\<T>[1] &
           association_end \<C> ?role ?from \<D> (a, aa, ab, ac, b)))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 19, template_var 4),
                    template_var 3),
                  template_app
                   (template_app (template_hole 18, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app (template_hole 16, template_var 3),
                 template_hole 15)),
             template_app (template_hole 14, t_empty))
           ))),
    ("OCL_Typing.CollectNestedIteratorTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          CollectNestedIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>;
         !!\<tau> \<sigma> \<rho> \<upsilon>.
            [| ?k = ArrowCall;
               ?\<Gamma> \<turnstile>\<^sub>I
                (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, \<rho>);
               length ?its <= Suc 0;
               to_nonunique_collection \<tau> \<upsilon>;
               update_element_type \<upsilon> \<rho> ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 18, template_var 7),
                template_app
                 (template_app
                   (template_app (template_hole 17, template_var 6),
                    template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 16, template_hole 15),
                        template_var 4),
                      template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.op_type_alt_simps",
     "boolean_binop_type ?op ?\<tau> ?\<sigma> ?\<rho> =
      (?op = AndOp &
       ?\<tau> \<squnion> ?\<sigma> = ?\<rho> & ?\<rho> <= Boolean[?] |
       ?op = OrOp &
       ?\<tau> \<squnion> ?\<sigma> = ?\<rho> & ?\<rho> <= Boolean[?] |
       ?op = XorOp &
       ?\<tau> \<squnion> ?\<sigma> = ?\<rho> & ?\<rho> <= Boolean[?] |
       ?op = ImpliesOp &
       ?\<tau> \<squnion> ?\<sigma> = ?\<rho> & ?\<rho> <= Boolean[?])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_app
                  (template_hole 10,
                   template_app
                    (template_app (template_hole 9, template_var 3),
                     template_hole 8)),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app
                        (template_hole 7,
                         template_app
                          (template_app (template_hole 6, template_var 2),
                           template_var 1)),
                       template_var 0)),
                   template_app
                    (template_app (template_hole 5, template_var 0),
                     template_app (template_hole 4, template_hole 3))))),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 9, template_var 3),
                       template_hole 2)),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app (template_hole 6, template_var 2),
                             template_var 1)),
                         template_var 0)),
                     template_app
                      (template_app (template_hole 5, template_var 0),
                       template_app (template_hole 4, template_hole 3))))),
               template_app
                (template_app
                  (template_hole 11,
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app (template_hole 9, template_var 3),
                         template_hole 1)),
                     template_app
                      (template_app
                        (template_hole 10,
                         template_app
                          (template_app
                            (template_hole 7,
                             template_app
                              (template_app
                                (template_hole 6, template_var 2),
                               template_var 1)),
                           template_var 0)),
                       template_app
                        (template_app (template_hole 5, template_var 0),
                         template_app
                          (template_hole 4, template_hole 3))))),
                 template_app
                  (template_app
                    (template_hole 10,
                     template_app
                      (template_app (template_hole 9, template_var 3),
                       template_hole 0)),
                   template_app
                    (template_app
                      (template_hole 10,
                       template_app
                        (template_app
                          (template_hole 7,
                           template_app
                            (template_app (template_hole 6, template_var 2),
                             template_var 1)),
                         template_var 0)),
                     template_app
                      (template_app (template_hole 5, template_var 0),
                       template_app (template_hole 4, template_hole 3)))))))
           ))),
    ("OCL_Typing.CollectIteratorTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          CollectIteratorCall ?src ?k ?its ?its_ty ?body : ?\<tau>;
         !!\<tau> \<sigma> \<rho> \<upsilon>.
            [| ?k = ArrowCall;
               ?\<Gamma> \<turnstile>\<^sub>I
                (?src, ?its, ?its_ty, ?body) : (\<tau>, \<sigma>, \<rho>);
               length ?its <= Suc 0;
               to_nonunique_collection \<tau> \<upsilon>;
               update_element_type \<upsilon> (to_single_type \<rho>)
                ?\<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 19, template_var 7),
                template_app
                 (template_app
                   (template_app (template_hole 18, template_var 6),
                    template_var 5),
                  template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 17, template_hole 16),
                        template_var 4),
                      template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 15, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.typing_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>E
        Literal (CollectionLiteral ?k ?prts) : ?\<tau>) =
      (?k = SetKind &
       (EX \<tau>.
           ?\<tau> = Set \<tau> &
           ?\<Gamma> \<turnstile>\<^sub>C ?prts : \<tau>) |
       ?k = OrderedSetKind &
       (EX \<tau>.
           ?\<tau> = OrderedSet \<tau> &
           ?\<Gamma> \<turnstile>\<^sub>C ?prts : \<tau>) |
       ?k = BagKind &
       (EX \<tau>.
           ?\<tau> = Bag \<tau> &
           ?\<Gamma> \<turnstile>\<^sub>C ?prts : \<tau>) |
       ?k = SequenceKind &
       (EX \<tau>.
           ?\<tau> = Sequence \<tau> &
           ?\<Gamma> \<turnstile>\<^sub>C ?prts : \<tau>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 3),
                template_app
                 (template_hole 15,
                  template_app
                   (template_app (template_hole 14, template_var 2),
                    template_var 1))),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13,
               template_app
                (template_app
                  (template_hole 12,
                   template_app
                    (template_app (template_hole 11, template_var 2),
                     template_hole 10)),
                 template_app (template_hole 9, t_empty))),
             template_app
              (template_app
                (template_hole 13,
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app (template_hole 11, template_var 2),
                       template_hole 5)),
                   template_app (template_hole 9, t_empty))),
               template_app
                (template_app
                  (template_hole 13,
                   template_app
                    (template_app
                      (template_hole 12,
                       template_app
                        (template_app (template_hole 11, template_var 2),
                         template_hole 3)),
                     template_app (template_hole 9, t_empty))),
                 template_app
                  (template_app
                    (template_hole 12,
                     template_app
                      (template_app (template_hole 11, template_var 2),
                       template_hole 1)),
                   template_app (template_hole 9, t_empty)))))
           ))),
    ("OCL_Typing.IteratorTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>I (?src, ?its, ?body) : ?ys;
         !!\<tau> \<sigma> its_ty body \<rho>.
            [| ?body = (Some its_ty, body);
               ?ys = (\<tau>, \<sigma>, \<rho>);
               ?\<Gamma> \<turnstile>\<^sub>E ?src : \<tau>;
               element_type \<tau> \<sigma>; \<sigma> <= its_ty;
               ?\<Gamma> ++\<^sub>f
               fmap_of_list (map (%it. (it, its_ty)) ?its)
                \<turnstile>\<^sub>E body : \<rho> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 17, template_var 5),
                template_app
                 (template_app (template_hole 16, template_var 4),
                  template_app
                   (template_app (template_hole 15, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.TupleLiteralTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          Literal (TupleLiteral ?elems) : ?\<tau>;
         [| ?elems = []; ?\<tau> = Tuple fmempty |] ==> ?P;
         !!elems \<xi> el \<tau> \<sigma>.
            [| ?elems = el # elems;
               ?\<tau> = Tuple (\<xi>(tuple_element_name el |->f \<sigma>));
               ?\<Gamma> \<turnstile>\<^sub>E
                Literal (TupleLiteral elems) : Tuple \<xi>;
               ?\<Gamma> \<turnstile>\<^sub>E
                tuple_element_expr el : \<tau>;
               tuple_element_type el = Some \<sigma>; \<tau> <= \<sigma> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 19, template_var 3),
                template_app
                 (template_hole 18,
                  template_app (template_hole 17, template_var 2))),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 2, template_hole 15)],
          template_implication
           ([template_equation
              (template_var 1,
               template_app (template_hole 13, template_hole 12))],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.op_type_alt_simps",
     "any_unop_type ?op ?\<tau> ?\<sigma> =
      (?op = OclAsSetOp &
       ?\<sigma> = Set (to_required_type ?\<tau>) & ?\<tau> <= OclAny[?] |
       ?op = OclIsNewOp & ?\<sigma> = Boolean[1] & ?\<tau> <= OclAny[?] |
       ?op = OclIsUndefinedOp &
       ?\<sigma> = Boolean[1] & ?\<tau> <= OclAny[?] |
       ?op = OclIsInvalidOp &
       ?\<sigma> = Boolean[1] & ?\<tau> <= OclAny[?] |
       ?op = OclLocaleOp & ?\<sigma> = String[1] & ?\<tau> <= OclAny[?] |
       ?op = ToStringOp & ?\<sigma> = String[1] & ?\<tau> <= OclAny[?])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 18, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_app (template_hole 15, template_var 2),
                     template_hole 14)),
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 13, template_var 0),
                       template_app
                        (template_hole 12,
                         template_app (template_hole 11, template_var 1)))),
                   template_app
                    (template_app (template_hole 10, template_var 1),
                     template_app (template_hole 9, template_hole 8))))),
             template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 15, template_var 2),
                       template_hole 7)),
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app
                        (template_app (template_hole 13, template_var 0),
                         template_app (template_hole 6, template_hole 5))),
                     template_app
                      (template_app (template_hole 10, template_var 1),
                       template_app (template_hole 9, template_hole 8))))),
               template_app
                (template_app
                  (template_hole 17,
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app
                        (template_app (template_hole 15, template_var 2),
                         template_hole 4)),
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app (template_hole 13, template_var 0),
                           template_app
                            (template_hole 6, template_hole 5))),
                       template_app
                        (template_app (template_hole 10, template_var 1),
                         template_app
                          (template_hole 9, template_hole 8))))),
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app (template_hole 15, template_var 2),
                           template_hole 3)),
                       template_app
                        (template_app
                          (template_hole 16,
                           template_app
                            (template_app
                              (template_hole 13, template_var 0),
                             template_app
                              (template_hole 6, template_hole 5))),
                         template_app
                          (template_app (template_hole 10, template_var 1),
                           template_app
                            (template_hole 9, template_hole 8))))),
                   template_app
                    (template_app
                      (template_hole 17,
                       template_app
                        (template_app
                          (template_hole 16,
                           template_app
                            (template_app
                              (template_hole 15, template_var 2),
                             template_hole 2)),
                         template_app
                          (template_app
                            (template_hole 16,
                             template_app
                              (template_app
                                (template_hole 13, template_var 0),
                               template_app
                                (template_hole 6, template_hole 1))),
                           template_app
                            (template_app
                              (template_hole 10, template_var 1),
                             template_app
                              (template_hole 9, template_hole 8))))),
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app (template_hole 15, template_var 2),
                           template_hole 0)),
                       template_app
                        (template_app
                          (template_hole 16,
                           template_app
                            (template_app
                              (template_hole 13, template_var 0),
                             template_app
                              (template_hole 6, template_hole 1))),
                         template_app
                          (template_app (template_hole 10, template_var 1),
                           template_app
                            (template_hole 9, template_hole 8)))))))))
           ))),
    ("OCL_Typing.op_type_alt_simps",
     "unop_type ?op ?k ?\<tau> ?\<sigma> =
      ((EX op.
           ?op = Inl op &
           ?k = DotCall & any_unop_type op ?\<tau> ?\<sigma>) |
       (EX op.
           ?op = Inr (Inl op) &
           ?k = DotCall & boolean_unop_type op ?\<tau> ?\<sigma>) |
       (EX op.
           ?op = Inr (Inr (Inl op)) &
           ?k = DotCall & numeric_unop_type op ?\<tau> ?\<sigma>) |
       (EX op.
           ?op = Inr (Inr (Inr (Inl op))) &
           ?k = DotCall & string_unop_type op ?\<tau> ?\<sigma>) |
       (EX op.
           ?op = Inr (Inr (Inr (Inr op))) &
           ?k = ArrowCall & collection_unop_type op ?\<tau> ?\<sigma>))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app (template_hole 24, template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 23, template_app (template_hole 22, t_empty)),
         template_app
          (template_app
            (template_hole 23, template_app (template_hole 15, t_empty)),
           template_app
            (template_app
              (template_hole 23, template_app (template_hole 11, t_empty)),
             template_app
              (template_app
                (template_hole 23, template_app (template_hole 7, t_empty)),
               template_app (template_hole 3, t_empty))))))),
    ("OCL_Typing.CollectionLiteralTE",
     "[| ?\<Gamma> \<turnstile>\<^sub>E
          Literal (CollectionLiteral ?k ?prts) : ?\<tau>;
         !!\<tau>.
            [| ?k = SetKind; ?\<tau> = Set \<tau>;
               ?\<Gamma> \<turnstile>\<^sub>C ?prts : \<tau> |]
            ==> ?P;
         !!\<tau>.
            [| ?k = OrderedSetKind; ?\<tau> = OrderedSet \<tau>;
               ?\<Gamma> \<turnstile>\<^sub>C ?prts : \<tau> |]
            ==> ?P;
         !!\<tau>.
            [| ?k = BagKind; ?\<tau> = Bag \<tau>;
               ?\<Gamma> \<turnstile>\<^sub>C ?prts : \<tau> |]
            ==> ?P;
         !!\<tau>.
            [| ?k = SequenceKind; ?\<tau> = Sequence \<tau>;
               ?\<Gamma> \<turnstile>\<^sub>C ?prts : \<tau> |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 14, template_var 4),
                template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 3),
                    template_var 2))),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Typing.op_type_alt_simps",
     "binop_type ?op ?k ?\<tau> ?\<sigma> ?\<rho> =
      ((EX op.
           ?op = Inl op &
           ?k = DotCall & super_binop_type op ?\<tau> ?\<sigma> ?\<rho>) |
       (EX op.
           ?op = Inr (Inl op) &
           ?k = DotCall & boolean_binop_type op ?\<tau> ?\<sigma> ?\<rho>) |
       (EX op.
           ?op = Inr (Inr (Inl op)) &
           ?k = DotCall & numeric_binop_type op ?\<tau> ?\<sigma> ?\<rho>) |
       (EX op.
           ?op = Inr (Inr (Inr (Inl op))) &
           ?k = DotCall & string_binop_type op ?\<tau> ?\<sigma> ?\<rho>) |
       (EX op.
           ?op = Inr (Inr (Inr (Inr op))) &
           ?k = ArrowCall &
           collection_binop_type op ?\<tau> ?\<sigma> ?\<rho>))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 24, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 23, template_app (template_hole 22, t_empty)),
         template_app
          (template_app
            (template_hole 23, template_app (template_hole 15, t_empty)),
           template_app
            (template_app
              (template_hole 23, template_app (template_hole 11, t_empty)),
             template_app
              (template_app
                (template_hole 23, template_app (template_hole 7, t_empty)),
               template_app (template_hole 3, t_empty))))))),
    ("OCL_Typing.op_type_alt_simps",
     "string_unop_type ?op ?\<tau> ?\<sigma> =
      (?op = SizeOp & ?\<tau> = String[1] & ?\<sigma> = Integer[1] |
       ?op = CharactersOp &
       ?\<tau> = String[1] & ?\<sigma> = Sequence String[1] |
       ?op = ToUpperCaseOp & ?\<tau> = String[1] & ?\<sigma> = String[1] |
       ?op = ToLowerCaseOp & ?\<tau> = String[1] & ?\<sigma> = String[1] |
       ?op = ToBooleanOp & ?\<tau> = String[1] & ?\<sigma> = Boolean[1] |
       ?op = string_unop.ToIntegerOp &
       ?\<tau> = String[1] & ?\<sigma> = Integer[1] |
       ?op = ToRealOp & ?\<tau> = String[1] & ?\<sigma> = Real[1])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 20, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 19,
               template_app
                (template_app
                  (template_hole 18,
                   template_app
                    (template_app (template_hole 17, template_var 2),
                     template_hole 16)),
                 template_app
                  (template_app
                    (template_hole 18,
                     template_app
                      (template_app (template_hole 15, template_var 1),
                       template_app (template_hole 14, template_hole 13))),
                   template_app
                    (template_app (template_hole 12, template_var 0),
                     template_app (template_hole 11, template_hole 10))))),
             template_app
              (template_app
                (template_hole 19,
                 template_app
                  (template_app
                    (template_hole 18,
                     template_app
                      (template_app (template_hole 17, template_var 2),
                       template_hole 9)),
                   template_app
                    (template_app
                      (template_hole 18,
                       template_app
                        (template_app (template_hole 15, template_var 1),
                         template_app
                          (template_hole 14, template_hole 13))),
                     template_app
                      (template_app (template_hole 12, template_var 0),
                       template_app
                        (template_hole 8,
                         template_app
                          (template_hole 11, template_hole 7)))))),
               template_app
                (template_app
                  (template_hole 19,
                   template_app
                    (template_app
                      (template_hole 18,
                       template_app
                        (template_app (template_hole 17, template_var 2),
                         template_hole 6)),
                     template_app
                      (template_app
                        (template_hole 18,
                         template_app
                          (template_app (template_hole 15, template_var 1),
                           template_app
                            (template_hole 14, template_hole 13))),
                       template_app
                        (template_app (template_hole 12, template_var 0),
                         template_app
                          (template_hole 11, template_hole 7))))),
                 template_app
                  (template_app
                    (template_hole 19,
                     template_app
                      (template_app
                        (template_hole 18,
                         template_app
                          (template_app (template_hole 17, template_var 2),
                           template_hole 5)),
                       template_app
                        (template_app
                          (template_hole 18,
                           template_app
                            (template_app
                              (template_hole 15, template_var 1),
                             template_app
                              (template_hole 14, template_hole 13))),
                         template_app
                          (template_app (template_hole 12, template_var 0),
                           template_app
                            (template_hole 11, template_hole 7))))),
                   template_app
                    (template_app
                      (template_hole 19,
                       template_app
                        (template_app
                          (template_hole 18,
                           template_app
                            (template_app
                              (template_hole 17, template_var 2),
                             template_hole 4)),
                         template_app
                          (template_app
                            (template_hole 18,
                             template_app
                              (template_app
                                (template_hole 15, template_var 1),
                               template_app
                                (template_hole 14, template_hole 13))),
                           template_app
                            (template_app
                              (template_hole 12, template_var 0),
                             template_app
                              (template_hole 11, template_hole 3))))),
                     template_app
                      (template_app
                        (template_hole 19,
                         template_app
                          (template_app
                            (template_hole 18,
                             template_app
                              (template_app
                                (template_hole 17, template_var 2),
                               template_hole 2)),
                           template_app
                            (template_app
                              (template_hole 18,
                               template_app
                                (template_app
                                  (template_hole 15, template_var 1),
                                 template_app
                                  (template_hole 14, template_hole 13))),
                             template_app
                              (template_app
                                (template_hole 12, template_var 0),
                               template_app
                                (template_hole 11, template_hole 10))))),
                       template_app
                        (template_app
                          (template_hole 18,
                           template_app
                            (template_app
                              (template_hole 17, template_var 2),
                             template_hole 1)),
                         template_app
                          (template_app
                            (template_hole 18,
                             template_app
                              (template_app
                                (template_hole 15, template_var 1),
                               template_app
                                (template_hole 14, template_hole 13))),
                           template_app
                            (template_app
                              (template_hole 12, template_var 0),
                             template_app
                              (template_hole 11, template_hole 0))))))))))
           ))),
    ("OCL_Typing.op_type_alt_simps",
     "typeop_type ?k ?op ?\<tau> ?\<sigma> ?\<rho> =
      (?k = DotCall &
       ?op = OclAsTypeOp &
       ?\<rho> = ?\<sigma> & (?\<sigma> < ?\<tau> | ?\<tau> < ?\<sigma>) |
       ?k = DotCall &
       ?op = OclIsTypeOfOp & ?\<rho> = Boolean[1] & ?\<sigma> < ?\<tau> |
       ?k = DotCall &
       ?op = OclIsKindOfOp & ?\<rho> = Boolean[1] & ?\<sigma> < ?\<tau> |
       ?k = ArrowCall &
       ?op = SelectByKindOp &
       (EX \<rho>.
           element_type ?\<tau> \<rho> &
           ?\<sigma> < \<rho> &
           update_element_type ?\<tau> ?\<sigma> ?\<rho>) |
       ?k = ArrowCall &
       ?op = SelectByTypeOp &
       (EX \<rho>.
           element_type ?\<tau> \<rho> &
           ?\<sigma> < \<rho> &
           update_element_type ?\<tau> ?\<sigma> ?\<rho>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 18, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_app (template_hole 15, template_var 4),
                     template_hole 14)),
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 13, template_var 3),
                       template_hole 12)),
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app
                        (template_app (template_hole 11, template_var 0),
                         template_var 1)),
                     template_app
                      (template_app
                        (template_hole 17,
                         template_app
                          (template_app (template_hole 10, template_var 1),
                           template_var 2)),
                       template_app
                        (template_app (template_hole 10, template_var 2),
                         template_var 1)))))),
             template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 15, template_var 4),
                       template_hole 14)),
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app
                        (template_app (template_hole 13, template_var 3),
                         template_hole 9)),
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app (template_hole 11, template_var 0),
                           template_app
                            (template_hole 8, template_hole 7))),
                       template_app
                        (template_app (template_hole 10, template_var 1),
                         template_var 2))))),
               template_app
                (template_app
                  (template_hole 17,
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app
                        (template_app (template_hole 15, template_var 4),
                         template_hole 14)),
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app (template_hole 13, template_var 3),
                           template_hole 6)),
                       template_app
                        (template_app
                          (template_hole 16,
                           template_app
                            (template_app
                              (template_hole 11, template_var 0),
                             template_app
                              (template_hole 8, template_hole 7))),
                         template_app
                          (template_app (template_hole 10, template_var 1),
                           template_var 2))))),
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app (template_hole 15, template_var 4),
                           template_hole 5)),
                       template_app
                        (template_app
                          (template_hole 16,
                           template_app
                            (template_app
                              (template_hole 13, template_var 3),
                             template_hole 4)),
                         template_app (template_hole 3, t_empty)))),
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app
                        (template_app (template_hole 15, template_var 4),
                         template_hole 5)),
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app (template_hole 13, template_var 3),
                           template_hole 0)),
                       template_app (template_hole 3, t_empty)))))))
           ))),
    ("OCL_Typing.op_type_alt_simps",
     "numeric_unop_type ?op ?\<tau> ?\<sigma> =
      (?op = UMinusOp & ?\<sigma> = Real[1] & ?\<tau> = Real[1] |
       ?op = UMinusOp &
       ?\<sigma> = Integer[1] & ?\<tau>
       = UnlimitedNatural[1]\<midarrow>Integer[1] |
       ?op = AbsOp & ?\<sigma> = Real[1] & ?\<tau> = Real[1] |
       ?op = AbsOp &
       ?\<sigma> = Integer[1] & ?\<tau>
       = UnlimitedNatural[1]\<midarrow>Integer[1] |
       ?op = FloorOp &
       ?\<sigma> = Integer[1] & ?\<tau>
       = UnlimitedNatural[1]\<midarrow>Real[1] |
       ?op = RoundOp &
       ?\<sigma> = Integer[1] & ?\<tau>
       = UnlimitedNatural[1]\<midarrow>Real[1] |
       ?op = numeric_unop.ToIntegerOp &
       ?\<sigma> = Integer[1] & ?\<tau> = UnlimitedNatural[1])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 18, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_app (template_hole 15, template_var 2),
                     template_hole 14)),
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 13, template_var 0),
                       template_app (template_hole 12, template_hole 11))),
                   template_app
                    (template_app (template_hole 10, template_var 1),
                     template_app (template_hole 9, template_hole 8))))),
             template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 15, template_var 2),
                       template_hole 14)),
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app
                        (template_app (template_hole 13, template_var 0),
                         template_app (template_hole 12, template_hole 7))),
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app
                            (template_hole 6,
                             template_app
                              (template_hole 9, template_hole 5)),
                           template_var 1)),
                       template_app
                        (template_app (template_hole 6, template_var 1),
                         template_app
                          (template_hole 9, template_hole 4)))))),
               template_app
                (template_app
                  (template_hole 17,
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app
                        (template_app (template_hole 15, template_var 2),
                         template_hole 3)),
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app (template_hole 13, template_var 0),
                           template_app
                            (template_hole 12, template_hole 11))),
                       template_app
                        (template_app (template_hole 10, template_var 1),
                         template_app
                          (template_hole 9, template_hole 8))))),
                 template_app
                  (template_app
                    (template_hole 17,
                     template_app
                      (template_app
                        (template_hole 16,
                         template_app
                          (template_app (template_hole 15, template_var 2),
                           template_hole 3)),
                       template_app
                        (template_app
                          (template_hole 16,
                           template_app
                            (template_app
                              (template_hole 13, template_var 0),
                             template_app
                              (template_hole 12, template_hole 7))),
                         template_app
                          (template_app
                            (template_hole 16,
                             template_app
                              (template_app
                                (template_hole 6,
                                 template_app
                                  (template_hole 9, template_hole 5)),
                               template_var 1)),
                           template_app
                            (template_app (template_hole 6, template_var 1),
                             template_app
                              (template_hole 9, template_hole 4)))))),
                   template_app
                    (template_app
                      (template_hole 17,
                       template_app
                        (template_app
                          (template_hole 16,
                           template_app
                            (template_app
                              (template_hole 15, template_var 2),
                             template_hole 2)),
                         template_app
                          (template_app
                            (template_hole 16,
                             template_app
                              (template_app
                                (template_hole 13, template_var 0),
                               template_app
                                (template_hole 12, template_hole 7))),
                           template_app
                            (template_app
                              (template_hole 16,
                               template_app
                                (template_app
                                  (template_hole 6,
                                   template_app
                                    (template_hole 9, template_hole 5)),
                                 template_var 1)),
                             template_app
                              (template_app
                                (template_hole 6, template_var 1),
                               template_app
                                (template_hole 9, template_hole 8)))))),
                     template_app
                      (template_app
                        (template_hole 17,
                         template_app
                          (template_app
                            (template_hole 16,
                             template_app
                              (template_app
                                (template_hole 15, template_var 2),
                               template_hole 1)),
                           template_app
                            (template_app
                              (template_hole 16,
                               template_app
                                (template_app
                                  (template_hole 13, template_var 0),
                                 template_app
                                  (template_hole 12, template_hole 7))),
                             template_app
                              (template_app
                                (template_hole 16,
                                 template_app
                                  (template_app
                                    (template_hole 6,
                                     template_app
(template_hole 9, template_hole 5)),
                                   template_var 1)),
                               template_app
                                (template_app
                                  (template_hole 6, template_var 1),
                                 template_app
                                  (template_hole 9, template_hole 8)))))),
                       template_app
                        (template_app
                          (template_hole 16,
                           template_app
                            (template_app
                              (template_hole 15, template_var 2),
                             template_hole 0)),
                         template_app
                          (template_app
                            (template_hole 16,
                             template_app
                              (template_app
                                (template_hole 13, template_var 0),
                               template_app
                                (template_hole 12, template_hole 7))),
                           template_app
                            (template_app
                              (template_hole 10, template_var 1),
                             template_app
                              (template_hole 9, template_hole 5))))))))))
           ))),
    ("OCL_Typing.op_type_alt_simps",
     "op_type ?op ?k ?\<tau> ?\<pi> ?\<sigma> =
      ((EX op.
           ?op = Inl op & ?\<pi> = [] & unop_type op ?k ?\<tau> ?\<sigma>) |
       (EX op.
           ?op = Inr (Inl op) &
           (EX \<sigma>.
               ?\<pi> = [\<sigma>] &
               binop_type op ?k ?\<tau> \<sigma> ?\<sigma>)) |
       (EX op.
           ?op = Inr (Inr (Inl op)) &
           (EX \<sigma> \<rho>.
               ?\<pi> = [\<sigma>, \<rho>] &
               ternop_type op ?k ?\<tau> \<sigma> \<rho> ?\<sigma>)) |
       (EX op.
           ?op = Inr (Inr (Inr op)) &
           ?k = DotCall &
           (EX a aa ab ac ad b.
               ?\<sigma> = oper_type (a, aa, ab, ac, ad, b) &
               operation ?\<tau> op ?\<pi> (a, aa, ab, ac, ad, b))))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_app
              (template_app (template_hole 34, template_var 4),
               template_var 3),
             template_var 2),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 33, template_app (template_hole 32, t_empty)),
         template_app
          (template_app
            (template_hole 33, template_app (template_hole 25, t_empty)),
           template_app
            (template_app
              (template_hole 33, template_app (template_hole 19, t_empty)),
             template_app (template_hole 15, t_empty)))))),
    ("OCL_Typing.op_type_alt_simps",
     "collection_ternop_type ?op ?\<tau> ?\<sigma> ?\<rho> ?\<upsilon> =
      (?op = InsertAtOp &
       (EX \<tau>.
           ?\<tau> = OrderedSet \<tau> &
           ?\<upsilon> = OrderedSet \<tau> &
           UnlimitedNatural[1] <= ?\<sigma> &
           ?\<sigma> <= Integer[1] & ?\<rho> <= \<tau>) |
       ?op = InsertAtOp &
       (EX \<tau>.
           ?\<tau> = Sequence \<tau> &
           ?\<upsilon> = Sequence \<tau> &
           UnlimitedNatural[1] <= ?\<sigma> &
           ?\<sigma> <= Integer[1] & ?\<rho> <= \<tau>) |
       ?op = SubOrderedSetOp &
       (EX \<tau>.
           ?\<tau> = OrderedSet \<tau> &
           ?\<upsilon> = OrderedSet \<tau> &
           UnlimitedNatural[1] <= ?\<sigma> &
           ?\<sigma> <= Integer[1] & ?\<rho>
           = UnlimitedNatural[1]\<midarrow>Integer[1]) |
       ?op = SubSequenceOp &
       (EX \<tau>.
           ?\<tau> = Sequence \<tau> &
           ?\<upsilon> = Sequence \<tau> &
           UnlimitedNatural[1] <= ?\<sigma> &
           ?\<sigma> <= Integer[1] & ?\<rho>
           = UnlimitedNatural[1]\<midarrow>Integer[1]))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 18, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 17,
               template_app
                (template_app
                  (template_hole 16,
                   template_app
                    (template_app (template_hole 15, template_var 4),
                     template_hole 14)),
                 template_app (template_hole 13, t_empty))),
             template_app
              (template_app
                (template_hole 17,
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 15, template_var 4),
                       template_hole 14)),
                   template_app (template_hole 13, t_empty))),
               template_app
                (template_app
                  (template_hole 17,
                   template_app
                    (template_app
                      (template_hole 16,
                       template_app
                        (template_app (template_hole 15, template_var 4),
                         template_hole 4)),
                     template_app (template_hole 13, t_empty))),
                 template_app
                  (template_app
                    (template_hole 16,
                     template_app
                      (template_app (template_hole 15, template_var 4),
                       template_hole 0)),
                   template_app (template_hole 13, t_empty)))))
           ))),
    ("OCL_Typing.op_type_alt_simps",
     "string_binop_type ?op ?\<tau> ?\<sigma> ?\<rho> =
      (?op = ConcatOp &
       ?\<tau> = String[1] & ?\<sigma> = String[1] & ?\<rho> = String[1] |
       ?op = EqualsIgnoreCaseOp &
       ?\<tau> = String[1] & ?\<sigma> = String[1] & ?\<rho> = Boolean[1] |
       ?op = string_binop.LessOp &
       ?\<tau> = String[1] & ?\<sigma> = String[1] & ?\<rho> = Boolean[1] |
       ?op = string_binop.LessEqOp &
       ?\<tau> = String[1] & ?\<sigma> = String[1] & ?\<rho> = Boolean[1] |
       ?op = string_binop.GreaterOp &
       ?\<tau> = String[1] & ?\<sigma> = String[1] & ?\<rho> = Boolean[1] |
       ?op = string_binop.GreaterEqOp &
       ?\<tau> = String[1] & ?\<sigma> = String[1] & ?\<rho> = Boolean[1] |
       ?op = IndexOfOp &
       ?\<tau> = String[1] & ?\<sigma> = String[1] & ?\<rho> = Integer[1] |
       ?op = AtOp &
       ?\<tau> = String[1] &
       ?\<rho> = String[1] & ?\<sigma>
       = UnlimitedNatural[1]\<midarrow>Integer[1])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 25, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 24,
               template_app
                (template_app
                  (template_hole 23,
                   template_app
                    (template_app (template_hole 22, template_var 3),
                     template_hole 21)),
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app
                      (template_app (template_hole 20, template_var 2),
                       template_app (template_hole 19, template_hole 18))),
                   template_app
                    (template_app
                      (template_hole 23,
                       template_app
                        (template_app (template_hole 17, template_var 1),
                         template_app
                          (template_hole 16, template_hole 15))),
                     template_app
                      (template_app (template_hole 14, template_var 0),
                       template_app
                        (template_hole 13, template_hole 12)))))),
             template_app
              (template_app
                (template_hole 24,
                 template_app
                  (template_app
                    (template_hole 23,
                     template_app
                      (template_app (template_hole 22, template_var 3),
                       template_hole 11)),
                   template_app
                    (template_app
                      (template_hole 23,
                       template_app
                        (template_app (template_hole 20, template_var 2),
                         template_app
                          (template_hole 19, template_hole 18))),
                     template_app
                      (template_app
                        (template_hole 23,
                         template_app
                          (template_app (template_hole 17, template_var 1),
                           template_app
                            (template_hole 16, template_hole 15))),
                       template_app
                        (template_app (template_hole 14, template_var 0),
                         template_app
                          (template_hole 13, template_hole 10)))))),
               template_app
                (template_app
                  (template_hole 24,
                   template_app
                    (template_app
                      (template_hole 23,
                       template_app
                        (template_app (template_hole 22, template_var 3),
                         template_hole 9)),
                     template_app
                      (template_app
                        (template_hole 23,
                         template_app
                          (template_app (template_hole 20, template_var 2),
                           template_app
                            (template_hole 19, template_hole 18))),
                       template_app
                        (template_app
                          (template_hole 23,
                           template_app
                            (template_app
                              (template_hole 17, template_var 1),
                             template_app
                              (template_hole 16, template_hole 15))),
                         template_app
                          (template_app (template_hole 14, template_var 0),
                           template_app
                            (template_hole 13, template_hole 10)))))),
                 template_app
                  (template_app
                    (template_hole 24,
                     template_app
                      (template_app
                        (template_hole 23,
                         template_app
                          (template_app (template_hole 22, template_var 3),
                           template_hole 8)),
                       template_app
                        (template_app
                          (template_hole 23,
                           template_app
                            (template_app
                              (template_hole 20, template_var 2),
                             template_app
                              (template_hole 19, template_hole 18))),
                         template_app
                          (template_app
                            (template_hole 23,
                             template_app
                              (template_app
                                (template_hole 17, template_var 1),
                               template_app
                                (template_hole 16, template_hole 15))),
                           template_app
                            (template_app
                              (template_hole 14, template_var 0),
                             template_app
                              (template_hole 13, template_hole 10)))))),
                   template_app
                    (template_app
                      (template_hole 24,
                       template_app
                        (template_app
                          (template_hole 23,
                           template_app
                            (template_app
                              (template_hole 22, template_var 3),
                             template_hole 7)),
                         template_app
                          (template_app
                            (template_hole 23,
                             template_app
                              (template_app
                                (template_hole 20, template_var 2),
                               template_app
                                (template_hole 19, template_hole 18))),
                           template_app
                            (template_app
                              (template_hole 23,
                               template_app
                                (template_app
                                  (template_hole 17, template_var 1),
                                 template_app
                                  (template_hole 16, template_hole 15))),
                             template_app
                              (template_app
                                (template_hole 14, template_var 0),
                               template_app
                                (template_hole 13, template_hole 10)))))),
                     template_app
                      (template_app
                        (template_hole 24,
                         template_app
                          (template_app
                            (template_hole 23,
                             template_app
                              (template_app
                                (template_hole 22, template_var 3),
                               template_hole 6)),
                           template_app
                            (template_app
                              (template_hole 23,
                               template_app
                                (template_app
                                  (template_hole 20, template_var 2),
                                 template_app
                                  (template_hole 19, template_hole 18))),
                             template_app
                              (template_app
                                (template_hole 23,
                                 template_app
                                  (template_app
                                    (template_hole 17, template_var 1),
                                   template_app
                                    (template_hole 16, template_hole 15))),
                               template_app
                                (template_app
                                  (template_hole 14, template_var 0),
                                 template_app
                                  (template_hole 13, template_hole 10)))))),
                       template_app
                        (template_app
                          (template_hole 24,
                           template_app
                            (template_app
                              (template_hole 23,
                               template_app
                                (template_app
                                  (template_hole 22, template_var 3),
                                 template_hole 5)),
                             template_app
                              (template_app
                                (template_hole 23,
                                 template_app
                                  (template_app
                                    (template_hole 20, template_var 2),
                                   template_app
                                    (template_hole 19, template_hole 18))),
                               template_app
                                (template_app
                                  (template_hole 23,
                                   template_app
                                    (template_app
(template_hole 17, template_var 1),
                                     template_app
(template_hole 16, template_hole 15))),
                                 template_app
                                  (template_app
                                    (template_hole 14, template_var 0),
                                   template_app
                                    (template_hole 13,
                                     template_hole 4)))))),
                         template_app
                          (template_app
                            (template_hole 23,
                             template_app
                              (template_app
                                (template_hole 22, template_var 3),
                               template_hole 3)),
                           template_app
                            (template_app
                              (template_hole 23,
                               template_app
                                (template_app
                                  (template_hole 20, template_var 2),
                                 template_app
                                  (template_hole 19, template_hole 18))),
                             template_app
                              (template_app
                                (template_hole 23,
                                 template_app
                                  (template_app
                                    (template_hole 14, template_var 0),
                                   template_app
                                    (template_hole 13, template_hole 12))),
                               template_app
                                (template_app
                                  (template_hole 23,
                                   template_app
                                    (template_app
(template_hole 2, template_app (template_hole 16, template_hole 1)),
                                     template_var 1)),
                                 template_app
                                  (template_app
                                    (template_hole 2, template_var 1),
                                   template_app
                                    (template_hole 16,
                                     template_hole 0)))))))))))))
           ))),
    ("OCL_Typing.op_type_alt_simps",
     "numeric_binop_type ?op ?\<tau> ?\<sigma> ?\<rho> =
      (?op = PlusOp &
       ?\<tau> \<squnion> ?\<sigma> = ?\<rho> & ?\<rho>
       = UnlimitedNatural[1]\<midarrow>Real[1] |
       ?op = MinusOp &
       ?\<rho> = Real[1] & ?\<tau> \<squnion> ?\<sigma> = Real[1] |
       ?op = MinusOp &
       ?\<rho> = Integer[1] &
       UnlimitedNatural[1] <= ?\<tau> \<squnion> ?\<sigma> &
       ?\<tau> <= Integer[1] & ?\<sigma> <= Integer[1] |
       ?op = MultOp &
       ?\<tau> \<squnion> ?\<sigma> = ?\<rho> & ?\<rho>
       = UnlimitedNatural[1]\<midarrow>Real[1] |
       ?op = DivideOp &
       ?\<rho> = Real[1] &
       UnlimitedNatural[1] <= ?\<tau> &
       ?\<tau> <= Real[1] & ?\<sigma>
       = UnlimitedNatural[1]\<midarrow>Real[1] |
       ?op = DivOp &
       ?\<tau> \<squnion> ?\<sigma> = ?\<rho> & ?\<rho>
       = UnlimitedNatural[1]\<midarrow>Integer[1] |
       ?op = ModOp &
       ?\<tau> \<squnion> ?\<sigma> = ?\<rho> & ?\<rho>
       = UnlimitedNatural[1]\<midarrow>Integer[1] |
       ?op = MaxOp &
       ?\<tau> \<squnion> ?\<sigma> = ?\<rho> & ?\<rho>
       = UnlimitedNatural[1]\<midarrow>Real[1] |
       ?op = MinOp &
       ?\<tau> \<squnion> ?\<sigma> = ?\<rho> & ?\<rho>
       = UnlimitedNatural[1]\<midarrow>Real[1] |
       ?op = numeric_binop.LessOp &
       ?\<rho> = Boolean[1] &
       UnlimitedNatural[1] <= ?\<tau> &
       ?\<tau> <= Real[1] & ?\<sigma>
       = UnlimitedNatural[1]\<midarrow>Real[1] |
       ?op = numeric_binop.LessEqOp &
       ?\<rho> = Boolean[1] &
       UnlimitedNatural[1] <= ?\<tau> &
       ?\<tau> <= Real[1] & ?\<sigma>
       = UnlimitedNatural[1]\<midarrow>Real[1] |
       ?op = numeric_binop.GreaterOp &
       ?\<rho> = Boolean[1] &
       UnlimitedNatural[1] <= ?\<tau> &
       ?\<tau> <= Real[1] & ?\<sigma>
       = UnlimitedNatural[1]\<midarrow>Real[1] |
       ?op = numeric_binop.GreaterEqOp &
       ?\<rho> = Boolean[1] &
       UnlimitedNatural[1] <= ?\<tau> &
       ?\<tau> <= Real[1] & ?\<sigma>
       = UnlimitedNatural[1]\<midarrow>Real[1])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 23, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 22,
               template_app
                (template_app
                  (template_hole 21,
                   template_app
                    (template_app (template_hole 20, template_var 3),
                     template_hole 19)),
                 template_app
                  (template_app
                    (template_hole 21,
                     template_app
                      (template_app
                        (template_hole 18,
                         template_app
                          (template_app (template_hole 17, template_var 2),
                           template_var 1)),
                       template_var 0)),
                   template_app
                    (template_app
                      (template_hole 21,
                       template_app
                        (template_app
                          (template_hole 16,
                           template_app
                            (template_hole 15, template_hole 14)),
                         template_var 0)),
                     template_app
                      (template_app (template_hole 16, template_var 0),
                       template_app
                        (template_hole 15, template_hole 13)))))),
             template_app
              (template_app
                (template_hole 22,
                 template_app
                  (template_app
                    (template_hole 21,
                     template_app
                      (template_app (template_hole 20, template_var 3),
                       template_hole 12)),
                   template_app
                    (template_app
                      (template_hole 21,
                       template_app
                        (template_app (template_hole 18, template_var 0),
                         template_app
                          (template_hole 15, template_hole 13))),
                     template_app
                      (template_app
                        (template_hole 18,
                         template_app
                          (template_app (template_hole 17, template_var 2),
                           template_var 1)),
                       template_app
                        (template_hole 15, template_hole 13))))),
               template_app
                (template_app
                  (template_hole 22,
                   template_app
                    (template_app
                      (template_hole 21,
                       template_app
                        (template_app (template_hole 20, template_var 3),
                         template_hole 12)),
                     template_app
                      (template_app
                        (template_hole 21,
                         template_app
                          (template_app (template_hole 18, template_var 0),
                           template_app
                            (template_hole 15, template_hole 11))),
                       template_app
                        (template_app
                          (template_hole 21,
                           template_app
                            (template_app
                              (template_hole 16,
                               template_app
                                (template_hole 15, template_hole 14)),
                             template_app
                              (template_app
                                (template_hole 17, template_var 2),
                               template_var 1))),
                         template_app
                          (template_app
                            (template_hole 21,
                             template_app
                              (template_app
                                (template_hole 16, template_var 2),
                               template_app
                                (template_hole 15, template_hole 11))),
                           template_app
                            (template_app
                              (template_hole 16, template_var 1),
                             template_app
                              (template_hole 15, template_hole 11))))))),
                 template_app
                  (template_app
                    (template_hole 22,
                     template_app
                      (template_app
                        (template_hole 21,
                         template_app
                          (template_app (template_hole 20, template_var 3),
                           template_hole 10)),
                       template_app
                        (template_app
                          (template_hole 21,
                           template_app
                            (template_app
                              (template_hole 18,
                               template_app
                                (template_app
                                  (template_hole 17, template_var 2),
                                 template_var 1)),
                             template_var 0)),
                         template_app
                          (template_app
                            (template_hole 21,
                             template_app
                              (template_app
                                (template_hole 16,
                                 template_app
                                  (template_hole 15, template_hole 14)),
                               template_var 0)),
                           template_app
                            (template_app
                              (template_hole 16, template_var 0),
                             template_app
                              (template_hole 15, template_hole 13)))))),
                   template_app
                    (template_app
                      (template_hole 22,
                       template_app
                        (template_app
                          (template_hole 21,
                           template_app
                            (template_app
                              (template_hole 20, template_var 3),
                             template_hole 9)),
                         template_app
                          (template_app
                            (template_hole 21,
                             template_app
                              (template_app
                                (template_hole 18, template_var 0),
                               template_app
                                (template_hole 15, template_hole 13))),
                           template_app
                            (template_app
                              (template_hole 21,
                               template_app
                                (template_app
                                  (template_hole 16,
                                   template_app
                                    (template_hole 15, template_hole 14)),
                                 template_var 2)),
                             template_app
                              (template_app
                                (template_hole 21,
                                 template_app
                                  (template_app
                                    (template_hole 16, template_var 2),
                                   template_app
                                    (template_hole 15, template_hole 13))),
                               template_app
                                (template_app
                                  (template_hole 21,
                                   template_app
                                    (template_app
(template_hole 16, template_app (template_hole 15, template_hole 14)),
                                     template_var 1)),
                                 template_app
                                  (template_app
                                    (template_hole 16, template_var 1),
                                   template_app
                                    (template_hole 15,
                                     template_hole 13)))))))),
                     template_app
                      (template_app
                        (template_hole 22,
                         template_app
                          (template_app
                            (template_hole 21,
                             template_app
                              (template_app
                                (template_hole 20, template_var 3),
                               template_hole 8)),
                           template_app
                            (template_app
                              (template_hole 21,
                               template_app
                                (template_app
                                  (template_hole 18,
                                   template_app
                                    (template_app
(template_hole 17, template_var 2),
                                     template_var 1)),
                                 template_var 0)),
                             template_app
                              (template_app
                                (template_hole 21,
                                 template_app
                                  (template_app
                                    (template_hole 16,
                                     template_app
(template_hole 15, template_hole 14)),
                                   template_var 0)),
                               template_app
                                (template_app
                                  (template_hole 16, template_var 0),
                                 template_app
                                  (template_hole 15, template_hole 11)))))),
                       template_app
                        (template_app
                          (template_hole 22,
                           template_app
                            (template_app
                              (template_hole 21,
                               template_app
                                (template_app
                                  (template_hole 20, template_var 3),
                                 template_hole 7)),
                             template_app
                              (template_app
                                (template_hole 21,
                                 template_app
                                  (template_app
                                    (template_hole 18,
                                     template_app
(template_app (template_hole 17, template_var 2), template_var 1)),
                                   template_var 0)),
                               template_app
                                (template_app
                                  (template_hole 21,
                                   template_app
                                    (template_app
(template_hole 16, template_app (template_hole 15, template_hole 14)),
                                     template_var 0)),
                                 template_app
                                  (template_app
                                    (template_hole 16, template_var 0),
                                   template_app
                                    (template_hole 15,
                                     template_hole 11)))))),
                         template_app
                          (template_app
                            (template_hole 22,
                             template_app
                              (template_app
                                (template_hole 21,
                                 template_app
                                  (template_app
                                    (template_hole 20, template_var 3),
                                   template_hole 6)),
                               template_app
                                (template_app
                                  (template_hole 21,
                                   template_app
                                    (template_app
(template_hole 18,
 template_app
  (template_app (template_hole 17, template_var 2), template_var 1)),
                                     template_var 0)),
                                 template_app
                                  (template_app
                                    (template_hole 21,
                                     template_app
(template_app
  (template_hole 16, template_app (template_hole 15, template_hole 14)),
 template_var 0)),
                                   template_app
                                    (template_app
(template_hole 16, template_var 0),
                                     template_app
(template_hole 15, template_hole 13)))))),
                           template_app
                            (template_app
                              (template_hole 22,
                               template_app
                                (template_app
                                  (template_hole 21,
                                   template_app
                                    (template_app
(template_hole 20, template_var 3),
                                     template_hole 5)),
                                 template_app
                                  (template_app
                                    (template_hole 21,
                                     template_app
(template_app
  (template_hole 18,
   template_app
    (template_app (template_hole 17, template_var 2), template_var 1)),
 template_var 0)),
                                   template_app
                                    (template_app
(template_hole 21,
 template_app
  (template_app
    (template_hole 16, template_app (template_hole 15, template_hole 14)),
   template_var 0)),
                                     template_app
(template_app (template_hole 16, template_var 0),
 template_app (template_hole 15, template_hole 13)))))),
                             template_app
                              (template_app
                                (template_hole 22,
                                 template_app
                                  (template_app
                                    (template_hole 21,
                                     template_app
(template_app (template_hole 20, template_var 3), template_hole 4)),
                                   template_app
                                    (template_app
(template_hole 21,
 template_app
  (template_app (template_hole 18, template_var 0),
   template_app (template_hole 15, template_hole 3))),
                                     template_app
(template_app
  (template_hole 21,
   template_app
    (template_app
      (template_hole 16, template_app (template_hole 15, template_hole 14)),
     template_var 2)),
 template_app
  (template_app
    (template_hole 21,
     template_app
      (template_app (template_hole 16, template_var 2),
       template_app (template_hole 15, template_hole 13))),
   template_app
    (template_app
      (template_hole 21,
       template_app
        (template_app
          (template_hole 16,
           template_app (template_hole 15, template_hole 14)),
         template_var 1)),
     template_app
      (template_app (template_hole 16, template_var 1),
       template_app (template_hole 15, template_hole 13)))))))),
                               template_app
                                (template_app
                                  (template_hole 22,
                                   template_app
                                    (template_app
(template_hole 21,
 template_app
  (template_app (template_hole 20, template_var 3), template_hole 2)),
                                     template_app
(template_app
  (template_hole 21,
   template_app
    (template_app (template_hole 18, template_var 0),
     template_app (template_hole 15, template_hole 3))),
 template_app
  (template_app
    (template_hole 21,
     template_app
      (template_app
        (template_hole 16,
         template_app (template_hole 15, template_hole 14)),
       template_var 2)),
   template_app
    (template_app
      (template_hole 21,
       template_app
        (template_app (template_hole 16, template_var 2),
         template_app (template_hole 15, template_hole 13))),
     template_app
      (template_app
        (template_hole 21,
         template_app
          (template_app
            (template_hole 16,
             template_app (template_hole 15, template_hole 14)),
           template_var 1)),
       template_app
        (template_app (template_hole 16, template_var 1),
         template_app (template_hole 15, template_hole 13)))))))),
                                 template_app
                                  (template_app
                                    (template_hole 22,
                                     template_app
(template_app
  (template_hole 21,
   template_app
    (template_app (template_hole 20, template_var 3), template_hole 1)),
 template_app
  (template_app
    (template_hole 21,
     template_app
      (template_app (template_hole 18, template_var 0),
       template_app (template_hole 15, template_hole 3))),
   template_app
    (template_app
      (template_hole 21,
       template_app
        (template_app
          (template_hole 16,
           template_app (template_hole 15, template_hole 14)),
         template_var 2)),
     template_app
      (template_app
        (template_hole 21,
         template_app
          (template_app (template_hole 16, template_var 2),
           template_app (template_hole 15, template_hole 13))),
       template_app
        (template_app
          (template_hole 21,
           template_app
            (template_app
              (template_hole 16,
               template_app (template_hole 15, template_hole 14)),
             template_var 1)),
         template_app
          (template_app (template_hole 16, template_var 1),
           template_app (template_hole 15, template_hole 13)))))))),
                                   template_app
                                    (template_app
(template_hole 21,
 template_app
  (template_app (template_hole 20, template_var 3), template_hole 0)),
                                     template_app
(template_app
  (template_hole 21,
   template_app
    (template_app (template_hole 18, template_var 0),
     template_app (template_hole 15, template_hole 3))),
 template_app
  (template_app
    (template_hole 21,
     template_app
      (template_app
        (template_hole 16,
         template_app (template_hole 15, template_hole 14)),
       template_var 2)),
   template_app
    (template_app
      (template_hole 21,
       template_app
        (template_app (template_hole 16, template_var 2),
         template_app (template_hole 15, template_hole 13))),
     template_app
      (template_app
        (template_hole 21,
         template_app
          (template_app
            (template_hole 16,
             template_app (template_hole 15, template_hole 14)),
           template_var 1)),
       template_app
        (template_app (template_hole 16, template_var 1),
         template_app (template_hole 15, template_hole 13)))))))))))))))))))
           ))),
    ("OCL_Typing.op_type_alt_simps",
     "collection_unop_type ?op ?\<tau> ?\<sigma> =
      (?op = CollectionSizeOp &
       ?\<sigma> = Integer[1] & Ex (element_type ?\<tau>) |
       ?op = IsEmptyOp &
       ?\<sigma> = Boolean[1] & Ex (element_type ?\<tau>) |
       ?op = NotEmptyOp &
       ?\<sigma> = Boolean[1] & Ex (element_type ?\<tau>) |
       ?op = CollectionMaxOp &
       element_type ?\<tau> ?\<sigma> & ?\<sigma>
       = UnlimitedNatural[1]\<midarrow>Real[1] |
       ?op = CollectionMaxOp &
       element_type ?\<tau> ?\<sigma> &
       (EX a aa ab ac ad b.
           operation ?\<sigma> STR ''max'' [?\<sigma>]
            (a, aa, ab, ac, ad, b)) |
       ?op = CollectionMinOp &
       element_type ?\<tau> ?\<sigma> & ?\<sigma>
       = UnlimitedNatural[1]\<midarrow>Real[1] |
       ?op = CollectionMinOp &
       element_type ?\<tau> ?\<sigma> &
       (EX a aa ab ac ad b.
           operation ?\<sigma> STR ''min'' [?\<sigma>]
            (a, aa, ab, ac, ad, b)) |
       ?op = SumOp &
       element_type ?\<tau> ?\<sigma> & ?\<sigma>
       = UnlimitedNatural[1]\<midarrow>Real[1] |
       ?op = SumOp &
       element_type ?\<tau> ?\<sigma> &
       (EX a aa ab ac ad b.
           operation ?\<sigma> STR ''+'' [?\<sigma>]
            (a, aa, ab, ac, ad, b)) |
       ?op = AsSetOp &
       (EX \<sigma>.
           ?\<sigma> = Set \<sigma> & element_type ?\<tau> \<sigma>) |
       ?op = AsOrderedSetOp &
       (EX \<sigma>.
           ?\<sigma> = OrderedSet \<sigma> &
           element_type ?\<tau> \<sigma>) |
       ?op = AsBagOp &
       (EX \<sigma>.
           ?\<sigma> = Bag \<sigma> & element_type ?\<tau> \<sigma>) |
       ?op = AsSequenceOp &
       (EX \<sigma>.
           ?\<sigma> = Sequence \<sigma> & element_type ?\<tau> \<sigma>) |
       ?op = FlattenOp &
       update_element_type ?\<tau> (to_single_type ?\<tau>) ?\<sigma> |
       ?op = FirstOp & ?\<tau> = OrderedSet ?\<sigma> |
       ?op = FirstOp & ?\<tau> = Sequence ?\<sigma> |
       ?op = LastOp & ?\<tau> = OrderedSet ?\<sigma> |
       ?op = LastOp & ?\<tau> = Sequence ?\<sigma> |
       ?op = ReverseOp &
       (EX \<tau>.
           ?\<tau> = OrderedSet \<tau> & ?\<sigma> = OrderedSet \<tau>) |
       ?op = ReverseOp &
       (EX \<tau>.
           ?\<tau> = Sequence \<tau> & ?\<sigma> = Sequence \<tau>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 49, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 48,
               template_app
                (template_app
                  (template_hole 47,
                   template_app
                    (template_app (template_hole 46, template_var 2),
                     template_hole 45)),
                 template_app
                  (template_app
                    (template_hole 47,
                     template_app
                      (template_app (template_hole 44, template_var 0),
                       template_app (template_hole 43, template_hole 42))),
                   template_app
                    (template_hole 41,
                     template_app (template_hole 40, template_var 1))))),
             template_app
              (template_app
                (template_hole 48,
                 template_app
                  (template_app
                    (template_hole 47,
                     template_app
                      (template_app (template_hole 46, template_var 2),
                       template_hole 39)),
                   template_app
                    (template_app
                      (template_hole 47,
                       template_app
                        (template_app (template_hole 44, template_var 0),
                         template_app
                          (template_hole 43, template_hole 38))),
                     template_app
                      (template_hole 41,
                       template_app (template_hole 40, template_var 1))))),
               template_app
                (template_app
                  (template_hole 48,
                   template_app
                    (template_app
                      (template_hole 47,
                       template_app
                        (template_app (template_hole 46, template_var 2),
                         template_hole 37)),
                     template_app
                      (template_app
                        (template_hole 47,
                         template_app
                          (template_app (template_hole 44, template_var 0),
                           template_app
                            (template_hole 43, template_hole 38))),
                       template_app
                        (template_hole 41,
                         template_app
                          (template_hole 40, template_var 1))))),
                 template_app
                  (template_app
                    (template_hole 48,
                     template_app
                      (template_app
                        (template_hole 47,
                         template_app
                          (template_app (template_hole 46, template_var 2),
                           template_hole 36)),
                       template_app
                        (template_app
                          (template_hole 47,
                           template_app
                            (template_app
                              (template_hole 40, template_var 1),
                             template_var 0)),
                         template_app
                          (template_app
                            (template_hole 47,
                             template_app
                              (template_app
                                (template_hole 35,
                                 template_app
                                  (template_hole 43, template_hole 34)),
                               template_var 0)),
                           template_app
                            (template_app
                              (template_hole 35, template_var 0),
                             template_app
                              (template_hole 43, template_hole 33)))))),
                   template_app
                    (template_app
                      (template_hole 48,
                       template_app
                        (template_app
                          (template_hole 47,
                           template_app
                            (template_app
                              (template_hole 46, template_var 2),
                             template_hole 36)),
                         template_app
                          (template_app
                            (template_hole 47,
                             template_app
                              (template_app
                                (template_hole 40, template_var 1),
                               template_var 0)),
                           template_app (template_hole 32, t_empty)))),
                     template_app
                      (template_app
                        (template_hole 48,
                         template_app
                          (template_app
                            (template_hole 47,
                             template_app
                              (template_app
                                (template_hole 46, template_var 2),
                               template_hole 15)),
                           template_app
                            (template_app
                              (template_hole 47,
                               template_app
                                (template_app
                                  (template_hole 40, template_var 1),
                                 template_var 0)),
                             template_app
                              (template_app
                                (template_hole 47,
                                 template_app
                                  (template_app
                                    (template_hole 35,
                                     template_app
(template_hole 43, template_hole 34)),
                                   template_var 0)),
                               template_app
                                (template_app
                                  (template_hole 35, template_var 0),
                                 template_app
                                  (template_hole 43, template_hole 33)))))),
                       template_app
                        (template_app
                          (template_hole 48,
                           template_app
                            (template_app
                              (template_hole 47,
                               template_app
                                (template_app
                                  (template_hole 46, template_var 2),
                                 template_hole 15)),
                             template_app
                              (template_app
                                (template_hole 47,
                                 template_app
                                  (template_app
                                    (template_hole 40, template_var 1),
                                   template_var 0)),
                               template_app (template_hole 32, t_empty)))),
                         template_app
                          (template_app
                            (template_hole 48,
                             template_app
                              (template_app
                                (template_hole 47,
                                 template_app
                                  (template_app
                                    (template_hole 46, template_var 2),
                                   template_hole 14)),
                               template_app
                                (template_app
                                  (template_hole 47,
                                   template_app
                                    (template_app
(template_hole 40, template_var 1),
                                     template_var 0)),
                                 template_app
                                  (template_app
                                    (template_hole 47,
                                     template_app
(template_app
  (template_hole 35, template_app (template_hole 43, template_hole 34)),
 template_var 0)),
                                   template_app
                                    (template_app
(template_hole 35, template_var 0),
                                     template_app
(template_hole 43, template_hole 33)))))),
                           template_app
                            (template_app
                              (template_hole 48,
                               template_app
                                (template_app
                                  (template_hole 47,
                                   template_app
                                    (template_app
(template_hole 46, template_var 2),
                                     template_hole 14)),
                                 template_app
                                  (template_app
                                    (template_hole 47,
                                     template_app
(template_app (template_hole 40, template_var 1), template_var 0)),
                                   template_app
                                    (template_hole 32, t_empty)))),
                             template_app
                              (template_app
                                (template_hole 48,
                                 template_app
                                  (template_app
                                    (template_hole 47,
                                     template_app
(template_app (template_hole 46, template_var 2), template_hole 13)),
                                   template_app
                                    (template_hole 41, t_empty))),
                               template_app
                                (template_app
                                  (template_hole 48,
                                   template_app
                                    (template_app
(template_hole 47,
 template_app
  (template_app (template_hole 46, template_var 2), template_hole 11)),
                                     template_app
(template_hole 41, t_empty))),
                                 template_app
                                  (template_app
                                    (template_hole 48,
                                     template_app
(template_app
  (template_hole 47,
   template_app
    (template_app (template_hole 46, template_var 2), template_hole 9)),
 template_app (template_hole 41, t_empty))),
                                   template_app
                                    (template_app
(template_hole 48,
 template_app
  (template_app
    (template_hole 47,
     template_app
      (template_app (template_hole 46, template_var 2), template_hole 7)),
   template_app (template_hole 41, t_empty))),
                                     template_app
(template_app
  (template_hole 48,
   template_app
    (template_app
      (template_hole 47,
       template_app
        (template_app (template_hole 46, template_var 2), template_hole 5)),
     template_app
      (template_app
        (template_app (template_hole 4, template_var 1),
         template_app (template_hole 3, template_var 1)),
       template_var 0))),
 template_app
  (template_app
    (template_hole 48,
     template_app
      (template_app
        (template_hole 47,
         template_app
          (template_app (template_hole 46, template_var 2),
           template_hole 2)),
       template_app
        (template_app (template_hole 44, template_var 1),
         template_app (template_hole 10, template_var 0)))),
   template_app
    (template_app
      (template_hole 48,
       template_app
        (template_app
          (template_hole 47,
           template_app
            (template_app (template_hole 46, template_var 2),
             template_hole 2)),
         template_app
          (template_app (template_hole 44, template_var 1),
           template_app (template_hole 6, template_var 0)))),
     template_app
      (template_app
        (template_hole 48,
         template_app
          (template_app
            (template_hole 47,
             template_app
              (template_app (template_hole 46, template_var 2),
               template_hole 1)),
           template_app
            (template_app (template_hole 44, template_var 1),
             template_app (template_hole 10, template_var 0)))),
       template_app
        (template_app
          (template_hole 48,
           template_app
            (template_app
              (template_hole 47,
               template_app
                (template_app (template_hole 46, template_var 2),
                 template_hole 1)),
             template_app
              (template_app (template_hole 44, template_var 1),
               template_app (template_hole 6, template_var 0)))),
         template_app
          (template_app
            (template_hole 48,
             template_app
              (template_app
                (template_hole 47,
                 template_app
                  (template_app (template_hole 46, template_var 2),
                   template_hole 0)),
               template_app (template_hole 41, t_empty))),
           template_app
            (template_app
              (template_hole 47,
               template_app
                (template_app (template_hole 46, template_var 2),
                 template_hole 0)),
             template_app (template_hole 41, t_empty)))))))))))))))))))))
           ))),
    ("OCL_Typing.op_type_alt_simps",
     "collection_binop_type ?op ?\<tau> ?\<sigma> ?\<rho> =
      (?op = IncludesOp &
       ?\<rho> = Boolean[1] &
       (EX \<rho>.
           element_type ?\<tau> \<rho> &
           ?\<sigma> <= to_optional_type_nested \<rho>) |
       ?op = ExcludesOp &
       ?\<rho> = Boolean[1] &
       (EX \<rho>.
           element_type ?\<tau> \<rho> &
           ?\<sigma> <= to_optional_type_nested \<rho>) |
       ?op = CountOp &
       ?\<rho> = Integer[1] &
       (EX \<rho>.
           element_type ?\<tau> \<rho> &
           ?\<sigma> <= to_optional_type_nested \<rho>) |
       ?op = IncludesAllOp &
       ?\<rho> = Boolean[1] &
       (EX \<rho>.
           element_type ?\<tau> \<rho> &
           (EX \<upsilon>.
               element_type ?\<sigma> \<upsilon> &
               \<upsilon> <= to_optional_type_nested \<rho>)) |
       ?op = ExcludesAllOp &
       ?\<rho> = Boolean[1] &
       (EX \<rho>.
           element_type ?\<tau> \<rho> &
           (EX \<upsilon>.
               element_type ?\<sigma> \<upsilon> &
               \<upsilon> <= to_optional_type_nested \<rho>)) |
       ?op = ProductOp &
       (EX \<rho> \<upsilon>.
           ?\<rho> =
           Set (Tuple
                 [STR ''second'' |->f \<upsilon>, STR ''first'' |->f
                  \<rho>]) &
           element_type ?\<tau> \<rho> &
           element_type ?\<sigma> \<upsilon>) |
       ?op = UnionOp &
       (EX \<tau>.
           ?\<tau> = Set \<tau> &
           (EX \<sigma>.
               ?\<sigma> = Set \<sigma> &
               ?\<rho> = Set (\<tau> \<squnion> \<sigma>))) |
       ?op = UnionOp &
       (EX \<tau>.
           ?\<tau> = Set \<tau> &
           (EX \<sigma>.
               ?\<sigma> = Bag \<sigma> &
               ?\<rho> = Bag (\<tau> \<squnion> \<sigma>))) |
       ?op = UnionOp &
       (EX \<tau>.
           ?\<tau> = Bag \<tau> &
           (EX \<sigma>.
               ?\<sigma> = Set \<sigma> &
               ?\<rho> = Bag (\<tau> \<squnion> \<sigma>))) |
       ?op = UnionOp &
       (EX \<tau>.
           ?\<tau> = Bag \<tau> &
           (EX \<sigma>.
               ?\<sigma> = Bag \<sigma> &
               ?\<rho> = Bag (\<tau> \<squnion> \<sigma>))) |
       ?op = IntersectionOp &
       (EX \<tau>.
           ?\<tau> = Set \<tau> &
           (EX \<sigma>.
               ?\<sigma> = Set \<sigma> &
               ?\<rho> = Set (\<tau> \<squnion> \<sigma>))) |
       ?op = IntersectionOp &
       (EX \<tau>.
           ?\<tau> = Set \<tau> &
           (EX \<sigma>.
               ?\<sigma> = Bag \<sigma> &
               ?\<rho> = Set (\<tau> \<squnion> \<sigma>))) |
       ?op = IntersectionOp &
       (EX \<tau>.
           ?\<tau> = Bag \<tau> &
           (EX \<sigma>.
               ?\<sigma> = Set \<sigma> &
               ?\<rho> = Set (\<tau> \<squnion> \<sigma>))) |
       ?op = IntersectionOp &
       (EX \<tau>.
           ?\<tau> = Bag \<tau> &
           (EX \<sigma>.
               ?\<sigma> = Bag \<sigma> &
               ?\<rho> = Bag (\<tau> \<squnion> \<sigma>))) |
       ?op = SetMinusOp &
       (EX \<tau>.
           ?\<tau> = Set \<tau> &
           (EX \<sigma>. ?\<sigma> = Set \<sigma>) & ?\<rho> = Set \<tau>) |
       ?op = SymmetricDifferenceOp &
       (EX \<tau>.
           ?\<tau> = Set \<tau> &
           (EX \<sigma>.
               ?\<sigma> = Set \<sigma> &
               ?\<rho> = Set (\<tau> \<squnion> \<sigma>))) |
       ?op = IncludingOp &
       (EX \<rho>.
           element_type ?\<tau> \<rho> &
           update_element_type ?\<tau> (\<rho> \<squnion> ?\<sigma>)
            ?\<rho>) |
       ?op = ExcludingOp &
       ?\<rho> = ?\<tau> &
       (EX \<rho>. element_type ?\<tau> \<rho> & ?\<sigma> <= \<rho>) |
       ?op = AppendOp &
       (EX \<tau>.
           ?\<tau> = OrderedSet \<tau> &
           ?\<rho> = OrderedSet \<tau> & ?\<sigma> <= \<tau>) |
       ?op = AppendOp &
       (EX \<tau>.
           ?\<tau> = Sequence \<tau> &
           ?\<rho> = Sequence \<tau> & ?\<sigma> <= \<tau>) |
       ?op = PrependOp &
       (EX \<tau>.
           ?\<tau> = OrderedSet \<tau> &
           ?\<rho> = OrderedSet \<tau> & ?\<sigma> <= \<tau>) |
       ?op = PrependOp &
       (EX \<tau>.
           ?\<tau> = Sequence \<tau> &
           ?\<rho> = Sequence \<tau> & ?\<sigma> <= \<tau>) |
       ?op = CollectionAtOp &
       ?\<tau> = OrderedSet ?\<rho> & ?\<sigma>
       = UnlimitedNatural[1]\<midarrow>Integer[1] |
       ?op = CollectionAtOp &
       ?\<tau> = Sequence ?\<rho> & ?\<sigma>
       = UnlimitedNatural[1]\<midarrow>Integer[1] |
       ?op = CollectionIndexOfOp &
       (EX \<tau>.
           ?\<tau> = OrderedSet \<tau> &
           ?\<rho> = Integer[1] & ?\<sigma> <= \<tau>) |
       ?op = CollectionIndexOfOp &
       (EX \<tau>.
           ?\<tau> = Sequence \<tau> &
           ?\<rho> = Integer[1] & ?\<sigma> <= \<tau>))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 41, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 40,
               template_app
                (template_app
                  (template_hole 39,
                   template_app
                    (template_app (template_hole 38, template_var 3),
                     template_hole 37)),
                 template_app
                  (template_app
                    (template_hole 39,
                     template_app
                      (template_app (template_hole 36, template_var 0),
                       template_app (template_hole 35, template_hole 34))),
                   template_app (template_hole 33, t_empty)))),
             template_app
              (template_app
                (template_hole 40,
                 template_app
                  (template_app
                    (template_hole 39,
                     template_app
                      (template_app (template_hole 38, template_var 3),
                       template_hole 29)),
                   template_app
                    (template_app
                      (template_hole 39,
                       template_app
                        (template_app (template_hole 36, template_var 0),
                         template_app
                          (template_hole 35, template_hole 34))),
                     template_app (template_hole 33, t_empty)))),
               template_app
                (template_app
                  (template_hole 40,
                   template_app
                    (template_app
                      (template_hole 39,
                       template_app
                        (template_app (template_hole 38, template_var 3),
                         template_hole 28)),
                     template_app
                      (template_app
                        (template_hole 39,
                         template_app
                          (template_app (template_hole 36, template_var 0),
                           template_app
                            (template_hole 35, template_hole 27))),
                       template_app (template_hole 33, t_empty)))),
                 template_app
                  (template_app
                    (template_hole 40,
                     template_app
                      (template_app
                        (template_hole 39,
                         template_app
                          (template_app (template_hole 38, template_var 3),
                           template_hole 26)),
                       template_app
                        (template_app
                          (template_hole 39,
                           template_app
                            (template_app
                              (template_hole 36, template_var 0),
                             template_app
                              (template_hole 35, template_hole 34))),
                         template_app (template_hole 33, t_empty)))),
                   template_app
                    (template_app
                      (template_hole 40,
                       template_app
                        (template_app
                          (template_hole 39,
                           template_app
                            (template_app
                              (template_hole 38, template_var 3),
                             template_hole 25)),
                         template_app
                          (template_app
                            (template_hole 39,
                             template_app
                              (template_app
                                (template_hole 36, template_var 0),
                               template_app
                                (template_hole 35, template_hole 34))),
                           template_app (template_hole 33, t_empty)))),
                     template_app
                      (template_app
                        (template_hole 40,
                         template_app
                          (template_app
                            (template_hole 39,
                             template_app
                              (template_app
                                (template_hole 38, template_var 3),
                               template_hole 24)),
                           template_app (template_hole 33, t_empty))),
                       template_app
                        (template_app
                          (template_hole 40,
                           template_app
                            (template_app
                              (template_hole 39,
                               template_app
                                (template_app
                                  (template_hole 38, template_var 3),
                                 template_hole 15)),
                             template_app (template_hole 33, t_empty))),
                         template_app
                          (template_app
                            (template_hole 40,
                             template_app
                              (template_app
                                (template_hole 39,
                                 template_app
                                  (template_app
                                    (template_hole 38, template_var 3),
                                   template_hole 15)),
                               template_app (template_hole 33, t_empty))),
                           template_app
                            (template_app
                              (template_hole 40,
                               template_app
                                (template_app
                                  (template_hole 39,
                                   template_app
                                    (template_app
(template_hole 38, template_var 3),
                                     template_hole 15)),
                                 template_app (template_hole 33, t_empty))),
                             template_app
                              (template_app
                                (template_hole 40,
                                 template_app
                                  (template_app
                                    (template_hole 39,
                                     template_app
(template_app (template_hole 38, template_var 3), template_hole 15)),
                                   template_app
                                    (template_hole 33, t_empty))),
                               template_app
                                (template_app
                                  (template_hole 40,
                                   template_app
                                    (template_app
(template_hole 39,
 template_app
  (template_app (template_hole 38, template_var 3), template_hole 12)),
                                     template_app
(template_hole 33, t_empty))),
                                 template_app
                                  (template_app
                                    (template_hole 40,
                                     template_app
(template_app
  (template_hole 39,
   template_app
    (template_app (template_hole 38, template_var 3), template_hole 12)),
 template_app (template_hole 33, t_empty))),
                                   template_app
                                    (template_app
(template_hole 40,
 template_app
  (template_app
    (template_hole 39,
     template_app
      (template_app (template_hole 38, template_var 3), template_hole 12)),
   template_app (template_hole 33, t_empty))),
                                     template_app
(template_app
  (template_hole 40,
   template_app
    (template_app
      (template_hole 39,
       template_app
        (template_app (template_hole 38, template_var 3),
         template_hole 12)),
     template_app (template_hole 33, t_empty))),
 template_app
  (template_app
    (template_hole 40,
     template_app
      (template_app
        (template_hole 39,
         template_app
          (template_app (template_hole 38, template_var 3),
           template_hole 11)),
       template_app (template_hole 33, t_empty))),
   template_app
    (template_app
      (template_hole 40,
       template_app
        (template_app
          (template_hole 39,
           template_app
            (template_app (template_hole 38, template_var 3),
             template_hole 10)),
         template_app (template_hole 33, t_empty))),
     template_app
      (template_app
        (template_hole 40,
         template_app
          (template_app
            (template_hole 39,
             template_app
              (template_app (template_hole 38, template_var 3),
               template_hole 9)),
           template_app (template_hole 33, t_empty))),
       template_app
        (template_app
          (template_hole 40,
           template_app
            (template_app
              (template_hole 39,
               template_app
                (template_app (template_hole 38, template_var 3),
                 template_hole 7)),
             template_app
              (template_app
                (template_hole 39,
                 template_app
                  (template_app (template_hole 36, template_var 0),
                   template_var 2)),
               template_app (template_hole 33, t_empty)))),
         template_app
          (template_app
            (template_hole 40,
             template_app
              (template_app
                (template_hole 39,
                 template_app
                  (template_app (template_hole 38, template_var 3),
                   template_hole 6)),
               template_app (template_hole 33, t_empty))),
           template_app
            (template_app
              (template_hole 40,
               template_app
                (template_app
                  (template_hole 39,
                   template_app
                    (template_app (template_hole 38, template_var 3),
                     template_hole 6)),
                 template_app (template_hole 33, t_empty))),
             template_app
              (template_app
                (template_hole 40,
                 template_app
                  (template_app
                    (template_hole 39,
                     template_app
                      (template_app (template_hole 38, template_var 3),
                       template_hole 3)),
                   template_app (template_hole 33, t_empty))),
               template_app
                (template_app
                  (template_hole 40,
                   template_app
                    (template_app
                      (template_hole 39,
                       template_app
                        (template_app (template_hole 38, template_var 3),
                         template_hole 3)),
                     template_app (template_hole 33, t_empty))),
                 template_app
                  (template_app
                    (template_hole 40,
                     template_app
                      (template_app
                        (template_hole 39,
                         template_app
                          (template_app (template_hole 38, template_var 3),
                           template_hole 2)),
                       template_app
                        (template_app
                          (template_hole 39,
                           template_app
                            (template_app
                              (template_hole 36, template_var 2),
                             template_app
                              (template_hole 5, template_var 0))),
                         template_app
                          (template_app
                            (template_hole 39,
                             template_app
                              (template_app
                                (template_hole 31,
                                 template_app
                                  (template_hole 35, template_hole 1)),
                               template_var 1)),
                           template_app
                            (template_app
                              (template_hole 31, template_var 1),
                             template_app
                              (template_hole 35, template_hole 27)))))),
                   template_app
                    (template_app
                      (template_hole 40,
                       template_app
                        (template_app
                          (template_hole 39,
                           template_app
                            (template_app
                              (template_hole 38, template_var 3),
                             template_hole 2)),
                         template_app
                          (template_app
                            (template_hole 39,
                             template_app
                              (template_app
                                (template_hole 36, template_var 2),
                               template_app
                                (template_hole 4, template_var 0))),
                           template_app
                            (template_app
                              (template_hole 39,
                               template_app
                                (template_app
                                  (template_hole 31,
                                   template_app
                                    (template_hole 35, template_hole 1)),
                                 template_var 1)),
                             template_app
                              (template_app
                                (template_hole 31, template_var 1),
                               template_app
                                (template_hole 35, template_hole 27)))))),
                     template_app
                      (template_app
                        (template_hole 40,
                         template_app
                          (template_app
                            (template_hole 39,
                             template_app
                              (template_app
                                (template_hole 38, template_var 3),
                               template_hole 0)),
                           template_app (template_hole 33, t_empty))),
                       template_app
                        (template_app
                          (template_hole 39,
                           template_app
                            (template_app
                              (template_hole 38, template_var 3),
                             template_hole 0)),
                         template_app
                          (template_hole 33,
                           t_empty)))))))))))))))))))))))))))
           )))]:
   (string * thm * template) list
### theory "Draft.OCL_TypingTemplates"
### 1.075s elapsed time, 1.278s cpu time, 0.131s GC time
val it = (): unit
