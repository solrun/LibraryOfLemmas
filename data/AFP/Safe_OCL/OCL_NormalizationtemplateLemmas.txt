   [("OCL_Normalization.normalize_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>L [] \<Rrightarrow> ?ys) = (?ys = [])",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1),
              template_var 0)
            )],
       template_equation (template_var 0, template_hole 1))),
    ("OCL_Normalization.normalize_alt_simps",
     "(?\<Gamma> \<turnstile> Literal ?a \<Rrightarrow> ?b) =
      (?b = Literal ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_var 1)))),
    ("OCL_Normalization.normalize_alt_simps",
     "(?\<Gamma> \<turnstile> Var ?v \<Rrightarrow> ?b) = (?b = Var ?v)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_app (template_hole 1, template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 0, template_app (template_hole 1, template_var 1)))),
    ("OCL_Normalization.nf_typing_i_i_oI",
     "?x \<turnstile> ?xa : ?xb ==> pred.eval (nf_typing_i_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Normalization.normalize_i_i_oI",
     "?x \<turnstile> ?xa \<Rrightarrow> ?xb ==>
      pred.eval (normalize_i_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Normalization.normalize_call_Pii_i_oI",
     "?x \<turnstile>\<^sub>C ?xa \<Rrightarrow> ?xb ==>
      pred.eval (normalize_call_Pii_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Normalization.normalize_expr_list_i_i_oI",
     "?x \<turnstile>\<^sub>L ?xa \<Rrightarrow> ?xb ==>
      pred.eval (normalize_expr_list_i_i_o ?x ?xa) ?xb",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1)),
             template_var 0)
           ))),
    ("OCL_Normalization.normalize_alt_simps",
     "(?\<Gamma> \<turnstile> MetaOperationCall ?\<tau> ?op \<Rrightarrow>
       ?b) =
      (?b = MetaOperationCall ?\<tau> ?op)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 1)))),
    ("OCL_Normalization.nf_typing_i_i_iI",
     "?x \<turnstile> ?xa : ?xb ==>
      pred.eval (nf_typing_i_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Normalization.normalize_i_i_iI",
     "?x \<turnstile> ?xa \<Rrightarrow> ?xb ==>
      pred.eval (normalize_i_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Normalization.normalize_call_Pii_i_iI",
     "?x \<turnstile>\<^sub>C ?xa \<Rrightarrow> ?xb ==>
      pred.eval (normalize_call_Pii_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Normalization.normalize_expr_list_i_i_iI",
     "?x \<turnstile>\<^sub>L ?xa \<Rrightarrow> ?xb ==>
      pred.eval (normalize_expr_list_i_i_i ?x ?xa ?xb) ()",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0)),
             template_hole 0)
           ))),
    ("OCL_Normalization.any_has_not_element_type'",
     "[| element_type ?\<tau> ?\<sigma>; OclVoid[?] <= ?\<tau> |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 1),
              template_var 0)
            ),
        template_inequation
         (less_equals, template_app (template_hole 2, template_hole 1),
          template_var 1)],
       template_predicate (template_hole 0))),
    ("OCL_Normalization.nf_typing_det",
     "[| ?\<Gamma> \<turnstile> ?expr : ?\<tau>;
         ?\<Gamma> \<turnstile> ?expr : ?\<sigma> |]
      ==> ?\<tau> = ?\<sigma>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Normalization.normalize_det",
     "[| ?\<Gamma> \<turnstile> ?expr \<Rrightarrow> ?expr\<^sub>1;
         ?\<Gamma> \<turnstile> ?expr \<Rrightarrow> ?expr\<^sub>2 |]
      ==> ?expr\<^sub>1 = ?expr\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Normalization.normalize_call_det",
     "[| ?\<Gamma>_\<tau> \<turnstile>\<^sub>C ?call \<Rrightarrow>
         ?call\<^sub>1;
         ?\<Gamma>_\<tau> \<turnstile>\<^sub>C ?call \<Rrightarrow>
         ?call\<^sub>2 |]
      ==> ?call\<^sub>1 = ?call\<^sub>2",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Normalization.normalize_expr_list_det",
     "[| ?\<Gamma> \<turnstile>\<^sub>L ?xs \<Rrightarrow> ?ys;
         ?\<Gamma> \<turnstile>\<^sub>L ?xs \<Rrightarrow> ?zs |]
      ==> ?ys = ?zs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 1, template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("OCL_Normalization.any_has_not_element_type",
     "[| element_type ?\<tau> ?\<sigma>;
         ?\<tau> <= OclAny[?] | ?\<tau> <= Tuple fmempty |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app (template_hole 5, template_var 1),
                  template_app (template_hole 4, template_hole 3))),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_app (template_hole 2, template_hole 1)))
            )],
       template_predicate (template_hole 0))),
    ("OCL_Normalization.LiteralNE",
     "[| ?\<Gamma> \<turnstile> Literal ?a \<Rrightarrow> ?b;
         ?b = Literal ?a ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.VarNE",
     "[| ?\<Gamma> \<turnstile> Var ?v \<Rrightarrow> ?b;
         ?b = Var ?v ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 3),
                template_app (template_hole 1, template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app (template_hole 1, template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.normalize_expr_list_i_i_oE",
     "[| pred.eval (normalize_expr_list_i_i_o ?x ?xa) ?xb;
         ?x \<turnstile>\<^sub>L ?xa \<Rrightarrow> ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.nf_typing_i_i_oE",
     "[| pred.eval (nf_typing_i_i_o ?x ?xa) ?xb;
         ?x \<turnstile> ?xa : ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.normalize_i_i_oE",
     "[| pred.eval (normalize_i_i_o ?x ?xa) ?xb;
         ?x \<turnstile> ?xa \<Rrightarrow> ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.normalize_call_Pii_i_oE",
     "[| pred.eval (normalize_call_Pii_i_o ?x ?xa) ?xb;
         ?x \<turnstile>\<^sub>C ?xa \<Rrightarrow> ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 2),
                 template_var 1)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.nf_typing_i_i_iE",
     "[| pred.eval (nf_typing_i_i_i ?x ?xa ?xb) ?y;
         ?x \<turnstile> ?xa : ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.normalize_call_Pii_i_iE",
     "[| pred.eval (normalize_call_Pii_i_i ?x ?xa ?xb) ?y;
         ?x \<turnstile>\<^sub>C ?xa \<Rrightarrow> ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.normalize_expr_list_i_i_iE",
     "[| pred.eval (normalize_expr_list_i_i_i ?x ?xa ?xb) ?y;
         ?x \<turnstile>\<^sub>L ?xa \<Rrightarrow> ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.normalize_i_i_iE",
     "[| pred.eval (normalize_i_i_i ?x ?xa ?xb) ?y;
         ?x \<turnstile> ?xa \<Rrightarrow> ?xb ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app
                   (template_app (template_hole 1, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_predicate
            (
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 4),
                   template_var 3),
                 template_var 2)
               )],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.MetaOperationCallNE",
     "[| ?\<Gamma> \<turnstile> MetaOperationCall ?\<tau> ?op \<Rrightarrow>
         ?b;
         ?b = MetaOperationCall ?\<tau> ?op ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 4),
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_implication
         ([template_equation
            (template_var 1,
             template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2))],
          template_predicate (template_var 0))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.normalize_alt_simps",
     "(?\<Gamma> \<turnstile> StaticOperationCall ?\<tau> ?op
                               ?as \<Rrightarrow>
       ?b) =
      (EX params\<^sub>2.
          ?b = StaticOperationCall ?\<tau> ?op params\<^sub>2 &
          ?\<Gamma> \<turnstile>\<^sub>L ?as \<Rrightarrow>
          params\<^sub>2)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 3, t_empty))),
    ("OCL_Normalization.normalize_alt_simps",
     "((?\<Gamma>,
        ?\<tau>) \<turnstile>\<^sub>C Operation ?op ?as \<Rrightarrow>
       ?call) =
      (EX params\<^sub>2.
          ?call = Operation ?op params\<^sub>2 &
          ?\<Gamma> \<turnstile>\<^sub>L ?as \<Rrightarrow>
          params\<^sub>2)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app (template_hole 5, template_var 4),
               template_var 3)),
           template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 3, t_empty))),
    ("OCL_Normalization.normalize_alt_simps",
     "(?\<Gamma> \<turnstile>\<^sub>L ?x # ?xs \<Rrightarrow> ?ys) =
      (EX y ys.
          ?ys = y # ys &
          ?\<Gamma> \<turnstile> ?x \<Rrightarrow> y &
          ?\<Gamma> \<turnstile>\<^sub>L ?xs \<Rrightarrow> ys)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 3),
           template_app
            (template_app (template_hole 5, template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 4, t_empty))),
    ("OCL_Normalization.StaticOperationCallNE",
     "[| ?\<Gamma> \<turnstile> StaticOperationCall ?\<tau> ?op
                                 ?as \<Rrightarrow>
         ?b;
         !!params\<^sub>2.
            [| ?b = StaticOperationCall ?\<tau> ?op params\<^sub>2;
               ?\<Gamma> \<turnstile>\<^sub>L ?as \<Rrightarrow>
               params\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.OperationCallNE",
     "[| (?\<Gamma>,
          ?\<tau>) \<turnstile>\<^sub>C Operation ?op ?as \<Rrightarrow>
         ?call;
         !!params\<^sub>2.
            [| ?call = Operation ?op params\<^sub>2;
               ?\<Gamma> \<turnstile>\<^sub>L ?as \<Rrightarrow>
               params\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 5,
                  template_app
                   (template_app (template_hole 4, template_var 5),
                    template_var 4)),
                template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.normalize_alt_simps",
     "(?\<Gamma> \<turnstile> expr.If ?a ?b ?c \<Rrightarrow> ?d) =
      (EX a\<^sub>2 b\<^sub>2 c\<^sub>2.
          ?d = expr.If a\<^sub>2 b\<^sub>2 c\<^sub>2 &
          ?\<Gamma> \<turnstile> ?a \<Rrightarrow> a\<^sub>2 &
          ?\<Gamma> \<turnstile> ?b \<Rrightarrow> b\<^sub>2 &
          ?\<Gamma> \<turnstile> ?c \<Rrightarrow> c\<^sub>2)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 3, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app (template_hole 2, t_empty))),
    ("OCL_Normalization.IfNE",
     "[| ?\<Gamma> \<turnstile> expr.If ?a ?b ?c \<Rrightarrow> ?d;
         !!a\<^sub>2 b\<^sub>2 c\<^sub>2.
            [| ?d = expr.If a\<^sub>2 b\<^sub>2 c\<^sub>2;
               ?\<Gamma> \<turnstile> ?a \<Rrightarrow> a\<^sub>2;
               ?\<Gamma> \<turnstile> ?b \<Rrightarrow> b\<^sub>2;
               ?\<Gamma> \<turnstile> ?c \<Rrightarrow> c\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 5),
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.ExprListNE",
     "[| ?\<Gamma> \<turnstile>\<^sub>L ?xs \<Rrightarrow> ?ys;
         [| ?xs = []; ?ys = [] |] ==> ?P;
         !!x y xs ys.
            [| ?xs = x # xs; ?ys = y # ys;
               ?\<Gamma> \<turnstile> x \<Rrightarrow> y;
               ?\<Gamma> \<turnstile>\<^sub>L xs \<Rrightarrow> ys |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_implication
         ([template_equation (template_var 2, template_hole 4)],
          template_implication
           ([template_equation (template_var 1, template_hole 4)],
            template_predicate (template_var 0))),
        template_predicate (template_app (template_hole 3, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.normalize_alt_simps",
     "(?\<Gamma> \<turnstile> Call ?src SafeArrowCall ?call \<Rrightarrow>
       ?b) =
      (EX src\<^sub>2 \<tau> \<sigma> \<rho> call\<^sub>2.
          ?b =
          Call
           (TypeOperationCall src\<^sub>2 ArrowCall SelectByKindOp
             (to_required_type \<sigma>))
           ArrowCall call\<^sub>2 &
          ?\<Gamma> \<turnstile> ?src \<Rrightarrow> src\<^sub>2 &
          ?\<Gamma> \<turnstile>\<^sub>E src\<^sub>2 : \<tau> &
          element_type \<tau> \<sigma> &
          OclVoid[?] <= \<sigma> &
          ?\<Gamma> \<turnstile>\<^sub>E
           TypeOperationCall src\<^sub>2 ArrowCall SelectByKindOp
            (to_required_type \<sigma>) :
           \<rho> &
          (?\<Gamma>, \<rho>) \<turnstile>\<^sub>C ?call \<Rrightarrow>
          call\<^sub>2)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 18, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 17, template_var 2),
               template_hole 16),
             template_var 1)),
         template_var 0),
       template_app (template_hole 15, t_empty))),
    ("OCL_Normalization.normalize_alt_simps",
     "((?\<Gamma>,
        ?\<tau>) \<turnstile>\<^sub>C Iterator ?iter ?its ?its_ty
 ?body \<Rrightarrow>
       ?call) =
      ((EX \<sigma>.
           ?its_ty = Some \<sigma> &
           (EX body\<^sub>2.
               ?call = Iterator ?iter ?its (Some \<sigma>) body\<^sub>2 &
               ?\<Gamma> ++\<^sub>f
               fmap_of_list
                (map (%it. (it, \<sigma>))
                  ?its) \<turnstile> ?body \<Rrightarrow>
               body\<^sub>2)) |
       ?its_ty = None &
       (EX \<sigma> body\<^sub>2.
           ?call = Iterator ?iter ?its (Some \<sigma>) body\<^sub>2 &
           element_type ?\<tau> \<sigma> &
           ?\<Gamma> ++\<^sub>f
           fmap_of_list
            (map (%it. (it, \<sigma>))
              ?its) \<turnstile> ?body \<Rrightarrow>
           body\<^sub>2))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app (template_hole 15, template_var 6),
                    template_var 5)),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 14, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 13, template_app (template_hole 12, t_empty)),
             template_app
              (template_app
                (template_hole 11,
                 template_app
                  (template_app (template_hole 10, template_var 2),
                   template_hole 1)),
               template_app (template_hole 12, t_empty)))
           ))),
    ("OCL_Normalization.normalize_alt_simps",
     "(?\<Gamma> \<turnstile> expr.Let ?v ?t ?init ?body \<Rrightarrow>
       ?b) =
      ((EX init\<^sub>2 \<tau>.
           ?t = Some \<tau> &
           (EX body\<^sub>2.
               ?b = expr.Let ?v (Some \<tau>) init\<^sub>2 body\<^sub>2 &
               ?\<Gamma> \<turnstile> ?init \<Rrightarrow> init\<^sub>2 &
               ?\<Gamma>(?v |->f \<tau>) \<turnstile> ?body \<Rrightarrow>
               body\<^sub>2)) |
       ?t = None &
       (EX init\<^sub>2 \<tau> body\<^sub>2.
           ?b = expr.Let ?v (Some \<tau>) init\<^sub>2 body\<^sub>2 &
           ?\<Gamma> \<turnstile> ?init \<Rrightarrow> init\<^sub>2 &
           ?\<Gamma> \<turnstile>\<^sub>E init\<^sub>2 : \<tau> & ?\<Gamma>
           (?v |->f \<tau>) \<turnstile> ?body \<Rrightarrow>
           body\<^sub>2))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 5),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 10, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 9, template_app (template_hole 8, t_empty)),
             template_app
              (template_app
                (template_hole 6,
                 template_app
                  (template_app (template_hole 5, template_var 3),
                   template_hole 1)),
               template_app (template_hole 8, t_empty)))
           ))),
    ("OCL_Normalization.SafeArrowCallNE",
     "[| ?\<Gamma> \<turnstile> Call ?src SafeArrowCall ?call \<Rrightarrow>
         ?b;
         !!src\<^sub>2 \<tau> \<sigma> \<rho> call\<^sub>2.
            [| ?b =
               Call
                (TypeOperationCall src\<^sub>2 ArrowCall SelectByKindOp
                  (to_required_type \<sigma>))
                ArrowCall call\<^sub>2;
               ?\<Gamma> \<turnstile> ?src \<Rrightarrow> src\<^sub>2;
               ?\<Gamma> \<turnstile>\<^sub>E src\<^sub>2 : \<tau>;
               element_type \<tau> \<sigma>; OclVoid[?] <= \<sigma>;
               ?\<Gamma> \<turnstile>\<^sub>E
                TypeOperationCall src\<^sub>2 ArrowCall SelectByKindOp
                 (to_required_type \<sigma>) :
                \<rho>;
               (?\<Gamma>, \<rho>) \<turnstile>\<^sub>C ?call \<Rrightarrow>
               call\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 17, template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 16, template_var 3),
                    template_hole 15),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 14, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.IteratorCallNE",
     "[| (?\<Gamma>,
          ?\<tau>) \<turnstile>\<^sub>C Iterator ?iter ?its ?its_ty
   ?body \<Rrightarrow>
         ?call;
         !!\<sigma> body\<^sub>2.
            [| ?its_ty = Some \<sigma>;
               ?call = Iterator ?iter ?its (Some \<sigma>) body\<^sub>2;
               ?\<Gamma> ++\<^sub>f
               fmap_of_list
                (map (%it. (it, \<sigma>))
                  ?its) \<turnstile> ?body \<Rrightarrow>
               body\<^sub>2 |]
            ==> ?P;
         !!\<sigma> body\<^sub>2.
            [| ?its_ty = None;
               ?call = Iterator ?iter ?its (Some \<sigma>) body\<^sub>2;
               element_type ?\<tau> \<sigma>;
               ?\<Gamma> ++\<^sub>f
               fmap_of_list
                (map (%it. (it, \<sigma>))
                  ?its) \<turnstile> ?body \<Rrightarrow>
               body\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_app (template_hole 13, template_var 7),
                    template_var 6)),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 12, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 11, t_empty)),
        template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.normalize_alt_simps",
     "(?\<Gamma> \<turnstile> Call ?src DotCall ?call \<Rrightarrow> ?b) =
      ((EX src\<^sub>2 \<tau> call\<^sub>2.
           ?b = Call src\<^sub>2 DotCall call\<^sub>2 &
           ?\<Gamma> \<turnstile> ?src \<Rrightarrow> src\<^sub>2 &
           ?\<Gamma> \<turnstile>\<^sub>E src\<^sub>2 : \<tau> &
           (\<tau> <= OclAny[?] | \<tau> <= Tuple fmempty) &
           (?\<Gamma>, \<tau>) \<turnstile>\<^sub>C ?call \<Rrightarrow>
           call\<^sub>2) |
       (EX src\<^sub>2 \<tau> \<sigma> call\<^sub>2.
           ?b =
           CollectIteratorCall src\<^sub>2 ArrowCall [new_vname ?\<Gamma>]
            (Some \<sigma>)
            (Call (Var (new_vname ?\<Gamma>)) DotCall call\<^sub>2) &
           ?\<Gamma> \<turnstile> ?src \<Rrightarrow> src\<^sub>2 &
           ?\<Gamma> \<turnstile>\<^sub>E src\<^sub>2 : \<tau> &
           element_type \<tau> \<sigma> &
           (?\<Gamma>, \<sigma>) \<turnstile>\<^sub>C ?call \<Rrightarrow>
           call\<^sub>2))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 25, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 24, template_var 2),
               template_hole 23),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 22, template_app (template_hole 21, t_empty)),
         template_app (template_hole 21, t_empty)))),
    ("OCL_Normalization.LetNE",
     "[| ?\<Gamma> \<turnstile> expr.Let ?v ?t ?init ?body \<Rrightarrow>
         ?b;
         !!init\<^sub>2 \<tau> body\<^sub>2.
            [| ?t = Some \<tau>;
               ?b = expr.Let ?v (Some \<tau>) init\<^sub>2 body\<^sub>2;
               ?\<Gamma> \<turnstile> ?init \<Rrightarrow> init\<^sub>2;
               ?\<Gamma>(?v |->f \<tau>) \<turnstile> ?body \<Rrightarrow>
               body\<^sub>2 |]
            ==> ?P;
         !!init\<^sub>2 \<tau> body\<^sub>2.
            [| ?t = None;
               ?b = expr.Let ?v (Some \<tau>) init\<^sub>2 body\<^sub>2;
               ?\<Gamma> \<turnstile> ?init \<Rrightarrow> init\<^sub>2;
               ?\<Gamma> \<turnstile>\<^sub>E init\<^sub>2 : \<tau>;
               ?\<Gamma>(?v |->f \<tau>) \<turnstile> ?body \<Rrightarrow>
               body\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 6),
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 7, t_empty)),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.normalize_alt_simps",
     "(?\<Gamma> \<turnstile> Call ?src ArrowCall ?call \<Rrightarrow> ?b) =
      ((EX src\<^sub>2 \<tau> \<sigma> call\<^sub>2.
           ?b =
           Call
            (OperationCall src\<^sub>2 DotCall (Inl (Inl OclAsSetOp)) [])
            ArrowCall call\<^sub>2 &
           ?\<Gamma> \<turnstile> ?src \<Rrightarrow> src\<^sub>2 &
           ?\<Gamma> \<turnstile>\<^sub>E src\<^sub>2 : \<tau> &
           (\<tau> <= OclAny[?] | \<tau> <= Tuple fmempty) &
           ?\<Gamma> \<turnstile>\<^sub>E
            OperationCall src\<^sub>2 DotCall (Inl (Inl OclAsSetOp)) [] :
            \<sigma> &
           (?\<Gamma>, \<sigma>) \<turnstile>\<^sub>C ?call \<Rrightarrow>
           call\<^sub>2) |
       (EX src\<^sub>2 \<tau> uu_ call\<^sub>2.
           ?b = Call src\<^sub>2 ArrowCall call\<^sub>2 &
           ?\<Gamma> \<turnstile> ?src \<Rrightarrow> src\<^sub>2 &
           ?\<Gamma> \<turnstile>\<^sub>E src\<^sub>2 : \<tau> &
           element_type \<tau> uu_ &
           (?\<Gamma>, \<tau>) \<turnstile>\<^sub>C ?call \<Rrightarrow>
           call\<^sub>2))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 23, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 22, template_var 2),
               template_hole 21),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 20, template_app (template_hole 19, t_empty)),
         template_app (template_hole 19, t_empty)))),
    ("OCL_Normalization.normalize_alt_simps",
     "((?\<Gamma>,
        ?\<tau>) \<turnstile>\<^sub>C Iterate ?its ?its_ty ?res ?res_t
 ?res_init ?body \<Rrightarrow>
       ?call) =
      ((EX res_init\<^sub>2 \<sigma>.
           ?its_ty = Some \<sigma> &
           (EX res_t\<^sub>2 body\<^sub>2.
               ?call =
               Iterate ?its (Some \<sigma>) ?res res_t\<^sub>2
                res_init\<^sub>2 body\<^sub>2 &
               ?\<Gamma> \<turnstile> ?res_init \<Rrightarrow>
               res_init\<^sub>2 &
               ?\<Gamma> ++\<^sub>f
               fmap_of_list
                (map (%it. (it, \<sigma>))
                  ?its) \<turnstile> expr.Let ?res ?res_t ?res_init
?body \<Rrightarrow>
               expr.Let ?res res_t\<^sub>2 res_init\<^sub>2 body\<^sub>2)) |
       ?its_ty = None &
       (EX \<sigma> res_init\<^sub>2 res_t\<^sub>2 body\<^sub>2.
           ?call =
           Iterate ?its (Some \<sigma>) ?res res_t\<^sub>2 res_init\<^sub>2
            body\<^sub>2 &
           element_type ?\<tau> \<sigma> &
           ?\<Gamma> \<turnstile> ?res_init \<Rrightarrow>
           res_init\<^sub>2 &
           ?\<Gamma> ++\<^sub>f
           fmap_of_list
            (map (%it. (it, \<sigma>))
              ?its) \<turnstile> expr.Let ?res ?res_t ?res_init
                                  ?body \<Rrightarrow>
           expr.Let ?res res_t\<^sub>2 res_init\<^sub>2 body\<^sub>2))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_app (template_hole 17, template_var 8),
                    template_var 7)),
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 16, template_var 6),
                          template_var 5),
                        template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 15, template_app (template_hole 14, t_empty)),
             template_app
              (template_app
                (template_hole 12,
                 template_app
                  (template_app (template_hole 11, template_var 5),
                   template_hole 1)),
               template_app (template_hole 13, t_empty)))
           ))),
    ("OCL_Normalization.DotCallNE",
     "[| ?\<Gamma> \<turnstile> Call ?src DotCall ?call \<Rrightarrow> ?b;
         !!src\<^sub>2 \<tau> call\<^sub>2.
            [| ?b = Call src\<^sub>2 DotCall call\<^sub>2;
               ?\<Gamma> \<turnstile> ?src \<Rrightarrow> src\<^sub>2;
               ?\<Gamma> \<turnstile>\<^sub>E src\<^sub>2 : \<tau>;
               \<tau> <= OclAny[?] | \<tau> <= Tuple fmempty;
               (?\<Gamma>, \<tau>) \<turnstile>\<^sub>C ?call \<Rrightarrow>
               call\<^sub>2 |]
            ==> ?P;
         !!src\<^sub>2 \<tau> \<sigma> call\<^sub>2.
            [| ?b =
               CollectIteratorCall src\<^sub>2 ArrowCall
                [new_vname ?\<Gamma>] (Some \<sigma>)
                (Call (Var (new_vname ?\<Gamma>)) DotCall call\<^sub>2);
               ?\<Gamma> \<turnstile> ?src \<Rrightarrow> src\<^sub>2;
               ?\<Gamma> \<turnstile>\<^sub>E src\<^sub>2 : \<tau>;
               element_type \<tau> \<sigma>;
               (?\<Gamma>,
                \<sigma>) \<turnstile>\<^sub>C ?call \<Rrightarrow>
               call\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 24, template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 23, template_var 3),
                    template_hole 22),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 21, t_empty)),
        template_predicate (template_app (template_hole 21, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.ArrowCallNE",
     "[| ?\<Gamma> \<turnstile> Call ?src ArrowCall ?call \<Rrightarrow> ?b;
         !!src\<^sub>2 \<tau> \<sigma> call\<^sub>2.
            [| ?b =
               Call
                (OperationCall src\<^sub>2 DotCall (Inl (Inl OclAsSetOp))
                  [])
                ArrowCall call\<^sub>2;
               ?\<Gamma> \<turnstile> ?src \<Rrightarrow> src\<^sub>2;
               ?\<Gamma> \<turnstile>\<^sub>E src\<^sub>2 : \<tau>;
               \<tau> <= OclAny[?] | \<tau> <= Tuple fmempty;
               ?\<Gamma> \<turnstile>\<^sub>E
                OperationCall src\<^sub>2 DotCall (Inl (Inl OclAsSetOp))
                 [] :
                \<sigma>;
               (?\<Gamma>,
                \<sigma>) \<turnstile>\<^sub>C ?call \<Rrightarrow>
               call\<^sub>2 |]
            ==> ?P;
         !!src\<^sub>2 \<tau> uu_ call\<^sub>2.
            [| ?b = Call src\<^sub>2 ArrowCall call\<^sub>2;
               ?\<Gamma> \<turnstile> ?src \<Rrightarrow> src\<^sub>2;
               ?\<Gamma> \<turnstile>\<^sub>E src\<^sub>2 : \<tau>;
               element_type \<tau> uu_;
               (?\<Gamma>, \<tau>) \<turnstile>\<^sub>C ?call \<Rrightarrow>
               call\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 22, template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 21, template_var 3),
                    template_hole 20),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.normalize_alt_simps",
     "(?\<Gamma> \<turnstile> Call ?src SafeDotCall ?call \<Rrightarrow>
       ?b) =
      ((EX src\<^sub>2 \<tau> call\<^sub>2.
           ?b =
           expr.If
            (OperationCall src\<^sub>2 DotCall (Inr (Inl (Inl NotEqualOp)))
              [Literal NullLiteral])
            (Call
              (TypeOperationCall src\<^sub>2 DotCall OclAsTypeOp
                (to_required_type \<tau>))
              DotCall call\<^sub>2)
            (Literal NullLiteral) &
           ?\<Gamma> \<turnstile> ?src \<Rrightarrow> src\<^sub>2 &
           ?\<Gamma> \<turnstile>\<^sub>E src\<^sub>2 : \<tau> &
           OclVoid[?] <= \<tau> &
           (?\<Gamma>,
            to_required_type
             \<tau>) \<turnstile>\<^sub>C ?call \<Rrightarrow>
           call\<^sub>2) |
       (EX src\<^sub>2 \<tau> \<sigma> call\<^sub>2.
           ?b =
           CollectIteratorCall
            (TypeOperationCall src\<^sub>2 ArrowCall SelectByKindOp
              (to_required_type \<sigma>))
            ArrowCall [new_vname ?\<Gamma>]
            (Some (to_required_type \<sigma>))
            (Call (Var (new_vname ?\<Gamma>)) DotCall call\<^sub>2) &
           ?\<Gamma> \<turnstile> ?src \<Rrightarrow> src\<^sub>2 &
           ?\<Gamma> \<turnstile>\<^sub>E src\<^sub>2 : \<tau> &
           element_type \<tau> \<sigma> &
           OclVoid[?] <= \<sigma> &
           (?\<Gamma>,
            to_required_type
             \<sigma>) \<turnstile>\<^sub>C ?call \<Rrightarrow>
           call\<^sub>2))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 38, template_var 3),
           template_app
            (template_app
              (template_app (template_hole 37, template_var 2),
               template_hole 36),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 35, template_app (template_hole 34, t_empty)),
         template_app (template_hole 34, t_empty)))),
    ("OCL_Normalization.IterateCallNE",
     "[| (?\<Gamma>,
          ?\<tau>) \<turnstile>\<^sub>C Iterate ?its ?its_ty ?res ?res_t
   ?res_init ?body \<Rrightarrow>
         ?call;
         !!res_init\<^sub>2 \<sigma> res_t\<^sub>2 body\<^sub>2.
            [| ?its_ty = Some \<sigma>;
               ?call =
               Iterate ?its (Some \<sigma>) ?res res_t\<^sub>2
                res_init\<^sub>2 body\<^sub>2;
               ?\<Gamma> \<turnstile> ?res_init \<Rrightarrow>
               res_init\<^sub>2;
               ?\<Gamma> ++\<^sub>f
               fmap_of_list
                (map (%it. (it, \<sigma>))
                  ?its) \<turnstile> expr.Let ?res ?res_t ?res_init
?body \<Rrightarrow>
               expr.Let ?res res_t\<^sub>2 res_init\<^sub>2 body\<^sub>2 |]
            ==> ?P;
         !!\<sigma> res_init\<^sub>2 res_t\<^sub>2 body\<^sub>2.
            [| ?its_ty = None;
               ?call =
               Iterate ?its (Some \<sigma>) ?res res_t\<^sub>2
                res_init\<^sub>2 body\<^sub>2;
               element_type ?\<tau> \<sigma>;
               ?\<Gamma> \<turnstile> ?res_init \<Rrightarrow>
               res_init\<^sub>2;
               ?\<Gamma> ++\<^sub>f
               fmap_of_list
                (map (%it. (it, \<sigma>))
                  ?its) \<turnstile> expr.Let ?res ?res_t ?res_init
?body \<Rrightarrow>
               expr.Let ?res res_t\<^sub>2 res_init\<^sub>2 body\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 16,
                  template_app
                   (template_app (template_hole 15, template_var 9),
                    template_var 8)),
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 14, template_var 7),
                          template_var 6),
                        template_var 5),
                      template_var 4),
                    template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 13, t_empty)),
        template_predicate (template_app (template_hole 12, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.SafeDotCallNE",
     "[| ?\<Gamma> \<turnstile> Call ?src SafeDotCall ?call \<Rrightarrow>
         ?b;
         !!src\<^sub>2 \<tau> call\<^sub>2.
            [| ?b =
               expr.If
                (OperationCall src\<^sub>2 DotCall
                  (Inr (Inl (Inl NotEqualOp))) [Literal NullLiteral])
                (Call
                  (TypeOperationCall src\<^sub>2 DotCall OclAsTypeOp
                    (to_required_type \<tau>))
                  DotCall call\<^sub>2)
                (Literal NullLiteral);
               ?\<Gamma> \<turnstile> ?src \<Rrightarrow> src\<^sub>2;
               ?\<Gamma> \<turnstile>\<^sub>E src\<^sub>2 : \<tau>;
               OclVoid[?] <= \<tau>;
               (?\<Gamma>,
                to_required_type
                 \<tau>) \<turnstile>\<^sub>C ?call \<Rrightarrow>
               call\<^sub>2 |]
            ==> ?P;
         !!src\<^sub>2 \<tau> \<sigma> call\<^sub>2.
            [| ?b =
               CollectIteratorCall
                (TypeOperationCall src\<^sub>2 ArrowCall SelectByKindOp
                  (to_required_type \<sigma>))
                ArrowCall [new_vname ?\<Gamma>]
                (Some (to_required_type \<sigma>))
                (Call (Var (new_vname ?\<Gamma>)) DotCall call\<^sub>2);
               ?\<Gamma> \<turnstile> ?src \<Rrightarrow> src\<^sub>2;
               ?\<Gamma> \<turnstile>\<^sub>E src\<^sub>2 : \<tau>;
               element_type \<tau> \<sigma>; OclVoid[?] <= \<sigma>;
               (?\<Gamma>,
                to_required_type
                 \<sigma>) \<turnstile>\<^sub>C ?call \<Rrightarrow>
               call\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 36, template_var 4),
                template_app
                 (template_app
                   (template_app (template_hole 35, template_var 3),
                    template_hole 34),
                  template_var 2)),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 33, t_empty)),
        template_predicate (template_app (template_hole 33, t_empty))],
       template_predicate (template_var 0))),
    ("OCL_Normalization.normalize_alt_simps",
     "((?\<Gamma>, ?\<tau>) \<turnstile>\<^sub>C ?call \<Rrightarrow> ?b) =
      ((EX op ty. ?call = TypeOperation op ty & ?b = TypeOperation op ty) |
       (EX attr. ?call = Attribute attr & ?b = Attribute attr) |
       (EX role from.
           ?call = AssociationEnd role from &
           ?b = AssociationEnd role from) |
       (EX \<A> from.
           ?call = AssociationClass \<A> from &
           ?b = AssociationClass \<A> from) |
       (EX role.
           ?call = AssociationClassEnd role &
           ?b = AssociationClassEnd role) |
       (EX params\<^sub>1 params\<^sub>2 op.
           ?call = Operation op params\<^sub>1 &
           ?b = Operation op params\<^sub>2 &
           ?\<Gamma> \<turnstile>\<^sub>L params\<^sub>1 \<Rrightarrow>
           params\<^sub>2) |
       (EX elem. ?call = TupleElement elem & ?b = TupleElement elem) |
       (EX res_init\<^sub>1 res_init\<^sub>2 \<sigma> its res res_t\<^sub>1
           body\<^sub>1.
           ?call =
           Iterate its (Some \<sigma>) res res_t\<^sub>1 res_init\<^sub>1
            body\<^sub>1 &
           (EX res_t\<^sub>2 body\<^sub>2.
               ?b =
               Iterate its (Some \<sigma>) res res_t\<^sub>2
                res_init\<^sub>2 body\<^sub>2 &
               ?\<Gamma> \<turnstile> res_init\<^sub>1 \<Rrightarrow>
               res_init\<^sub>2 &
               ?\<Gamma> ++\<^sub>f
               fmap_of_list
                (map (%it. (it, \<sigma>))
                  its) \<turnstile> expr.Let res res_t\<^sub>1
                                     res_init\<^sub>1
                                     body\<^sub>1 \<Rrightarrow>
               expr.Let res res_t\<^sub>2 res_init\<^sub>2 body\<^sub>2)) |
       (EX \<sigma> res_init\<^sub>1 res_init\<^sub>2 its res res_t\<^sub>1
           body\<^sub>1.
           ?call =
           Iterate its None res res_t\<^sub>1 res_init\<^sub>1
            body\<^sub>1 &
           (EX res_t\<^sub>2 body\<^sub>2.
               ?b =
               Iterate its (Some \<sigma>) res res_t\<^sub>2
                res_init\<^sub>2 body\<^sub>2 &
               element_type ?\<tau> \<sigma> &
               ?\<Gamma> \<turnstile> res_init\<^sub>1 \<Rrightarrow>
               res_init\<^sub>2 &
               ?\<Gamma> ++\<^sub>f
               fmap_of_list
                (map (%it. (it, \<sigma>))
                  its) \<turnstile> expr.Let res res_t\<^sub>1
                                     res_init\<^sub>1
                                     body\<^sub>1 \<Rrightarrow>
               expr.Let res res_t\<^sub>2 res_init\<^sub>2 body\<^sub>2)) |
       (EX \<sigma> its body\<^sub>1 body\<^sub>2 iter.
           ?call = Iterator iter its (Some \<sigma>) body\<^sub>1 &
           ?b = Iterator iter its (Some \<sigma>) body\<^sub>2 &
           ?\<Gamma> ++\<^sub>f
           fmap_of_list
            (map (%it. (it, \<sigma>))
              its) \<turnstile> body\<^sub>1 \<Rrightarrow>
           body\<^sub>2) |
       (EX \<sigma> its body\<^sub>1 body\<^sub>2 iter.
           ?call = Iterator iter its None body\<^sub>1 &
           ?b = Iterator iter its (Some \<sigma>) body\<^sub>2 &
           element_type ?\<tau> \<sigma> &
           ?\<Gamma> ++\<^sub>f
           fmap_of_list
            (map (%it. (it, \<sigma>))
              its) \<turnstile> body\<^sub>1 \<Rrightarrow>
           body\<^sub>2))",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 34,
             template_app
              (template_app (template_hole 33, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 32, template_app (template_hole 31, t_empty)),
         template_app
          (template_app
            (template_hole 32, template_app (template_hole 26, t_empty)),
           template_app
            (template_app
              (template_hole 32, template_app (template_hole 24, t_empty)),
             template_app
              (template_app
                (template_hole 32,
                 template_app (template_hole 24, t_empty)),
               template_app
                (template_app
                  (template_hole 32,
                   template_app (template_hole 26, t_empty)),
                 template_app
                  (template_app
                    (template_hole 32,
                     template_app (template_hole 19, t_empty)),
                   template_app
                    (template_app
                      (template_hole 32,
                       template_app (template_hole 26, t_empty)),
                     template_app
                      (template_app
                        (template_hole 32,
                         template_app (template_hole 14, t_empty)),
                       template_app
                        (template_app
                          (template_hole 32,
                           template_app (template_hole 30, t_empty)),
                         template_app
                          (template_app
                            (template_hole 32,
                             template_app (template_hole 30, t_empty)),
                           template_app
                            (template_hole 30, t_empty))))))))))))),
    ("OCL_Normalization.CallNE",
     "[| (?\<Gamma>, ?\<tau>) \<turnstile>\<^sub>C ?call \<Rrightarrow> ?b;
         !!op ty.
            [| ?call = TypeOperation op ty; ?b = TypeOperation op ty |]
            ==> ?P;
         !!attr. [| ?call = Attribute attr; ?b = Attribute attr |] ==> ?P;
         !!role from.
            [| ?call = AssociationEnd role from;
               ?b = AssociationEnd role from |]
            ==> ?P;
         !!\<A> from.
            [| ?call = AssociationClass \<A> from;
               ?b = AssociationClass \<A> from |]
            ==> ?P;
         !!role.
            [| ?call = AssociationClassEnd role;
               ?b = AssociationClassEnd role |]
            ==> ?P;
         !!params\<^sub>1 params\<^sub>2 op.
            [| ?call = Operation op params\<^sub>1;
               ?b = Operation op params\<^sub>2;
               ?\<Gamma> \<turnstile>\<^sub>L params\<^sub>1 \<Rrightarrow>
               params\<^sub>2 |]
            ==> ?P;
         !!elem.
            [| ?call = TupleElement elem; ?b = TupleElement elem |] ==> ?P;
         !!res_init\<^sub>1 res_init\<^sub>2 \<sigma> its res res_t\<^sub>1
            body\<^sub>1 res_t\<^sub>2 body\<^sub>2.
            [| ?call =
               Iterate its (Some \<sigma>) res res_t\<^sub>1
                res_init\<^sub>1 body\<^sub>1;
               ?b =
               Iterate its (Some \<sigma>) res res_t\<^sub>2
                res_init\<^sub>2 body\<^sub>2;
               ?\<Gamma> \<turnstile> res_init\<^sub>1 \<Rrightarrow>
               res_init\<^sub>2;
               ?\<Gamma> ++\<^sub>f
               fmap_of_list
                (map (%it. (it, \<sigma>))
                  its) \<turnstile> expr.Let res res_t\<^sub>1
                                     res_init\<^sub>1
                                     body\<^sub>1 \<Rrightarrow>
               expr.Let res res_t\<^sub>2 res_init\<^sub>2 body\<^sub>2 |]
            ==> ?P;
         !!\<sigma> res_init\<^sub>1 res_init\<^sub>2 its res res_t\<^sub>1
            body\<^sub>1 res_t\<^sub>2 body\<^sub>2.
            [| ?call =
               Iterate its None res res_t\<^sub>1 res_init\<^sub>1
                body\<^sub>1;
               ?b =
               Iterate its (Some \<sigma>) res res_t\<^sub>2
                res_init\<^sub>2 body\<^sub>2;
               element_type ?\<tau> \<sigma>;
               ?\<Gamma> \<turnstile> res_init\<^sub>1 \<Rrightarrow>
               res_init\<^sub>2;
               ?\<Gamma> ++\<^sub>f
               fmap_of_list
                (map (%it. (it, \<sigma>))
                  its) \<turnstile> expr.Let res res_t\<^sub>1
                                     res_init\<^sub>1
                                     body\<^sub>1 \<Rrightarrow>
               expr.Let res res_t\<^sub>2 res_init\<^sub>2 body\<^sub>2 |]
            ==> ?P;
         !!\<sigma> its body\<^sub>1 body\<^sub>2 iter.
            [| ?call = Iterator iter its (Some \<sigma>) body\<^sub>1;
               ?b = Iterator iter its (Some \<sigma>) body\<^sub>2;
               ?\<Gamma> ++\<^sub>f
               fmap_of_list
                (map (%it. (it, \<sigma>))
                  its) \<turnstile> body\<^sub>1 \<Rrightarrow>
               body\<^sub>2 |]
            ==> ?P;
         !!\<sigma> its body\<^sub>1 body\<^sub>2 iter.
            [| ?call = Iterator iter its None body\<^sub>1;
               ?b = Iterator iter its (Some \<sigma>) body\<^sub>2;
               element_type ?\<tau> \<sigma>;
               ?\<Gamma> ++\<^sub>f
               fmap_of_list
                (map (%it. (it, \<sigma>))
                  its) \<turnstile> body\<^sub>1 \<Rrightarrow>
               body\<^sub>2 |]
            ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_hole 32,
                  template_app
                   (template_app (template_hole 31, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 30, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 24, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 19, t_empty)),
        template_predicate (template_app (template_hole 26, t_empty)),
        template_predicate (template_app (template_hole 14, t_empty)),
        template_predicate (template_app (template_hole 29, t_empty)),
        template_predicate (template_app (template_hole 29, t_empty)),
        template_predicate (template_app (template_hole 29, t_empty))],
       template_predicate (template_var 0)))]
