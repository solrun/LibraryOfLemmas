Loading theory "HOL-Library.Adhoc_Overloading" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "Transition_Systems_and_Automata.Sequence" via "HOL-Library.Monad_Syntax")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ATCMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.ATCMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity" via "HOL-Library.Countable_Complete_Lattices" via "HOL-Library.Countable_Set")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
signature ADHOC_OVERLOADING =
  sig
    val generic_add_overloaded: string -> Context.generic -> Context.generic
    val generic_add_variant:
       string -> term -> Context.generic -> Context.generic
    val generic_remove_overloaded:
       string -> Context.generic -> Context.generic
    val generic_remove_variant:
       string -> term -> Context.generic -> Context.generic
    val is_overloaded: Proof.context -> string -> bool
    val show_variants: bool Config.T
  end
structure Adhoc_Overloading: ADHOC_OVERLOADING
### theory "HOL-Library.Adhoc_Overloading"
### 0.124s elapsed time, 0.511s cpu time, 0.040s GC time
Loading theory "HOL-Library.Monad_Syntax" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "Transition_Systems_and_Automata.Sequence")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Function_Algebras"
### 0.146s elapsed time, 0.596s cpu time, 0.040s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat" via "HOL-Library.Countable")
### theory "HOL-Library.Monad_Syntax"
### 0.042s elapsed time, 0.169s cpu time, 0.000s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ATCMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
consts
  enumerate :: "'a set => nat => 'a"
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
Found termination order: "size_list size <*mlex*> {}"
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
### theory "HOL-Library.Infinite_Set"
### 0.340s elapsed time, 1.356s cpu time, 0.135s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams")
### theory "HOL-Library.Nat_Bijection"
### 0.360s elapsed time, 1.440s cpu time, 0.135s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.ATCMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.300s elapsed time, 1.193s cpu time, 0.095s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.ATCMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
consts
  prefixes :: "'a list => 'a list list"
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.543s elapsed time, 2.131s cpu time, 0.310s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat")
consts
  shift :: "'a list => 'a stream => 'a stream"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
### Additional type variable(s) in locale specification "countable": 'a
Found termination order: "size <*mlex*> {}"
consts
  suffixes :: "'a list => 'a list list"
consts
  flat :: "'a list stream => 'a stream"
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "size <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.180s elapsed time, 4.476s cpu time, 1.054s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ATCMoreTemplates" via "Draft.ExtrEqs")
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.730s elapsed time, 6.637s cpu time, 1.325s GC time
Loading theory "Transition_Systems_and_Automata.Basic" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "Transition_Systems_and_Automata.Sequence")
### theory "HOL-Library.Countable"
### 1.403s elapsed time, 5.363s cpu time, 1.110s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity" via "HOL-Library.Countable_Complete_Lattices")
### theory "Transition_Systems_and_Automata.Basic"
### 0.045s elapsed time, 0.189s cpu time, 0.000s GC time
Loading theory "Transition_Systems_and_Automata.Sequence" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### theory "HOL-Library.BigO"
### 0.894s elapsed time, 3.527s cpu time, 0.445s GC time
[| inj_on ?f ?A; ?B <= ?A |] ==> inj_on ?f ?B
[| inj_on ?f ?B; ?A <= ?B |] ==> inj_on ?f ?A
### theory "HOL-Library.Countable_Set"
### 0.496s elapsed time, 1.899s cpu time, 0.258s GC time
Loading theory "HOL-Library.Countable_Complete_Lattices" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity")
Found termination order: "size <*mlex*> {}"
consts
  scan :: "('a => 'b => 'b) => 'a list => 'b => 'b list"
consts
  sscan :: "('a => 'b => 'b) => 'a stream => 'b => 'b stream"
### theory "HOL-Library.Tree"
### 2.309s elapsed time, 8.689s cpu time, 1.583s GC time
Loading theory "Draft.Templates" (required by "Draft.ATCMoreTemplates" via "Draft.ExtrEqs")
consts
  stranspose :: "'a stream list => 'a list stream"
Proofs for coinductive predicate(s) "sdistinct"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.062s elapsed time, 0.202s cpu time, 0.000s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ATCMoreTemplates")
  Proving monotonicity ...
Proofs for coinductive predicate(s) "sascending"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "sdescending"
  Proving monotonicity ...
### theory "Transition_Systems_and_Automata.Sequence"
### 0.894s elapsed time, 3.108s cpu time, 0.445s GC time
Loading theory "Transition_Systems_and_Automata.Transition_System" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM")
locale transition_system_universal
  fixes execute :: "'transition => 'state => 'state"
locale transition_system
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
Proofs for inductive predicate(s) "path"
  Proving monotonicity ...
class countable_complete_lattice = Inf + Sup + lattice + bot + top +
  assumes "ccInf_lower": "!!A x. [| countable A; x : A |] ==> Inf A <= x"
  assumes
    "ccInf_greatest":
      "!!A z. [| countable A; !!x. x : A ==> z <= x |] ==> z <= Inf A"
  assumes "ccSup_upper": "!!A x. [| countable A; x : A |] ==> x <= Sup A"
  assumes
    "ccSup_least":
      "!!A z. [| countable A; !!x. x : A ==> x <= z |] ==> Sup A <= z"
  assumes "ccInf_empty": "Inf {} = top"
  assumes "ccSup_empty": "Sup {} = bot"
Proofs for coinductive predicate(s) "run"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reachablep"
  Proving monotonicity ...
locale transition_system_initial
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
    and initial :: "'state => bool"
Proofs for inductive predicate(s) "nodesp"
  Proving monotonicity ...
### theory "Transition_Systems_and_Automata.Transition_System"
### 0.262s elapsed time, 0.798s cpu time, 0.064s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.647s elapsed time, 1.749s cpu time, 0.158s GC time
class countable_complete_distrib_lattice = countable_complete_lattice +
  assumes
    "sup_ccInf": "!!B a. countable B ==> sup a (Inf B) = Inf (sup a ` B)"
  assumes
    "inf_ccSup": "!!B a. countable B ==> inf a (Sup B) = Sup (inf a ` B)"
### theory "HOL-Library.Countable_Complete_Lattices"
### 1.698s elapsed time, 3.424s cpu time, 0.335s GC time
Loading theory "HOL-Library.Order_Continuity" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat")
### theory "HOL-Library.Order_Continuity"
### 0.379s elapsed time, 0.427s cpu time, 0.039s GC time
Loading theory "HOL-Library.Extended_Nat" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams")
class infinity = type +
  fixes infinity :: "'a"
instantiation
  enat :: infinity
  infinity_enat == infinity :: enat
Proofs for inductive predicate(s) "rec_set_enat"
### No equation for constructor "Extended_Nat.infinity_class.infinity"
### in definition of function "the_enat"
consts
  the_enat :: "enat => nat"
instantiation
  enat :: zero_neq_one
  one_enat == one_class.one :: enat
  zero_enat == zero_class.zero :: enat
instantiation
  enat :: comm_monoid_add
  plus_enat == plus :: enat => enat => enat
instantiation
  enat :: {comm_semiring_1,semiring_no_zero_divisors}
  times_enat == times :: enat => enat => enat
instantiation
  enat :: minus
  minus_enat == minus :: enat => enat => enat
instantiation
  enat :: linordered_ab_semigroup_add
  less_eq_enat == less_eq :: enat => enat => bool
  less_enat == less :: enat => enat => bool
instantiation
  enat :: {order_bot,order_top}
  top_enat == top :: enat
  bot_enat == bot :: enat
structure Cancel_Enat_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
instantiation
  enat :: complete_lattice
  Inf_enat == Inf :: enat set => enat
  Sup_enat == Sup :: enat set => enat
  sup_enat == sup :: enat => enat => enat
  inf_enat == inf :: enat => enat => enat
### theory "HOL-Library.Extended_Nat"
### 0.455s elapsed time, 0.500s cpu time, 0.062s GC time
Loading theory "HOL-Library.Linear_Temporal_Logic_on_Streams" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL")
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "ev"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "alw"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "UNTIL"
  Proving monotonicity ...
Proofs for inductive predicate(s) "ev_at"
  Proving monotonicity ...
Proofs for inductive predicate(s) "suntil"
  Proving monotonicity ...
### theory "HOL-Library.Linear_Temporal_Logic_on_Streams"
### 0.807s elapsed time, 0.941s cpu time, 0.185s GC time
Loading theory "Transition_Systems_and_Automata.Sequence_LTL" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip")
### theory "Transition_Systems_and_Automata.Sequence_LTL"
### 0.720s elapsed time, 1.518s cpu time, 1.098s GC time
Loading theory "Transition_Systems_and_Automata.Sequence_Zip" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM")
Loading theory "Transition_Systems_and_Automata.Transition_System_Construction" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM")
Loading theory "Transition_Systems_and_Automata.Transition_System_Extra" (required by "Draft.ATCMoreTemplates" via "Draft.ATC" via "Draft.FSM")
### theory "Transition_Systems_and_Automata.Sequence_Zip"
### 0.129s elapsed time, 0.386s cpu time, 0.000s GC time
locale transition_system
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
locale transition_system
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
### theory "Transition_Systems_and_Automata.Transition_System_Construction"
### 0.239s elapsed time, 0.624s cpu time, 0.038s GC time
locale transition_system_initial
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
    and initial :: "'state => bool"
### theory "Transition_Systems_and_Automata.Transition_System_Extra"
### 0.269s elapsed time, 0.657s cpu time, 0.038s GC time
Loading theory "Draft.FSM" (required by "Draft.ATCMoreTemplates" via "Draft.ATC")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.FSM"
### 2.285s elapsed time, 3.242s cpu time, 1.336s GC time
Loading theory "Draft.ATC" (required by "Draft.ATCMoreTemplates")
Proofs for inductive predicate(s) "atc_reaction"
  Proving monotonicity ...
Proofs for inductive predicate(s) "subtest"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.ATC"
### 1.562s elapsed time, 1.725s cpu time, 0.209s GC time
Loading theory "Draft.ATCMoreTemplates"
val templateLemmas =
   [("ATC.accp_subtest", "Wellfounded.accp subtest ?t",
     template_predicate
      (
         template_app
          (template_app (template_hole 1, template_hole 0), template_var 0)
         )),
    ("HOL.NO_MATCH_cong", "NO_MATCH ?pat ?val = NO_MATCH ?pat ?val",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("ATC.IO_leaf", "IO ?M ?q ATC.Leaf = {[]}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_hole 0))),
    ("ATC.IO_language", "IO ?M ?q ?t <= LS ?M ?q",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 1))),
    ("ATC.IO_set_in_language", "IO_set ?M ?q ?\<Omega> <= LS ?M ?q",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 1))),
    ("ATC.append_io_B_in_language", "append_io_B ?M ?io ?\<Omega> <= L ?M",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app (template_hole 0, template_var 2)))),
    ("ATC.atc_reaction_empty", "atc_reaction ?M ?q ?t [] ==> ?t = ATC.Leaf",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 2)
            )],
       template_equation (template_var 0, template_hole 0))),
    ("ATC.applicable_subtest",
     "applicable ?M (ATC.Node ?x ?f) ==> applicable ?M (?f ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 1, template_var 3),
              template_app
               (template_app (template_hole 0, template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 3),
             template_app (template_var 1, template_var 0))
           ))),
    ("ATC.leaf_elim", "[| atc_reaction ?M ?q1.0 ATC.Leaf []; ?P |] ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 2),
                  template_var 1),
                template_hole 1),
              template_hole 0)
            ),
        template_predicate (template_var 0)],
       template_predicate (template_var 0))),
    ("ATC.subtest_relI'",
     "?t = ?f ?y ==> (?t, ATC.Node ?x ?f) : subtest_rel",
     template_implication
      ([template_equation
         (template_var 3, template_app (template_var 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 3),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 2))),
             template_hole 0)
           ))),
    ("ATC.atc_reaction_nonempty_no_leaf",
     "atc_reaction ?M ?q ?t (?a # ?io) ==> ?t ~= ATC.Leaf",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 3),
                template_var 2),
              template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0))
            )],
       template_negation
        (template_equation (template_var 2, template_hole 0)))),
    ("ATC.subtest_relI",
     "?t : range ?f ==> (?t, ATC.Node ?x ?f) : subtest_rel",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 1),
                template_hole 4))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_app
                  (template_app (template_hole 1, template_var 0),
                   template_var 1))),
             template_hole 0)
           ))),
    ("ATC.append_io_B_prefix_in_language",
     "append_io_B ?M ?io ?\<Omega> ~= {} ==> ?io : L ?M",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 2),
                  template_var 1),
                template_var 0),
              template_hole 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app (template_hole 0, template_var 2)))
           ))),
    ("ATC.atc_io_reduction_on_subset",
     "[| ?M1.0 \<preceq>\<lbrakk>?T.?\<Omega>\<rbrakk> ?M2.0; ?T' <= ?T |]
      ==> ?M1.0 \<preceq>\<lbrakk>?T'.?\<Omega>\<rbrakk> ?M2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_inequation (less_equals, template_var 0, template_var 3)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("ATC.D_bound",
     "[| well_formed ?M; observable ?M; finite ?ISeqs |]
      ==> finite (D ?M ?ISeqs ?\<Omega>)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate (template_app (template_hole 3, template_var 2)),
        template_predicate
         (template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("ATC.atc_io_reduction_on_reduction",
     "[| ?M1.0 \<preceq> ?M2.0; observable ?M1.0; observable ?M2.0 |]
      ==> atc_io_reduction_on ?M1.0 ?M2.0 ?iseq ?\<Omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 1, template_var 3)),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ATC.atc_io_reduction_on_sets_reduction",
     "[| ?M1.0 \<preceq> ?M2.0; observable ?M1.0; observable ?M2.0 |]
      ==> ?M1.0 \<preceq>\<lbrakk>?TS.?\<Omega>\<rbrakk> ?M2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 1, template_var 3)),
        template_predicate
         (template_app (template_hole 1, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 1),
               template_var 0),
             template_var 2)
           ))),
    ("ATC.atc_reaction_path_ex",
     "atc_reaction ?M ?q1.0 ?t ?io ==>
      EX tr. path ?M (?io || tr) ?q1.0 & length ?io = length tr",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 7, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("ATC.D_bound",
     "[| well_formed ?M; observable ?M; finite ?ISeqs |]
      ==> card (D ?M ?ISeqs ?\<Omega>) <= |?M|",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (template_app (template_hole 5, template_var 1))],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1),
             template_var 0)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 2))))),
    ("ATC.io_reduction_from_atc_io_reduction",
     "[| ?M1.0 \<preceq>\<lbrakk>?T.?\<Omega>\<rbrakk> ?M2.0; finite ?T |]
      ==> ?M1.0 \<preceq>\<lbrakk>?T\<rbrakk> ?M2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app (template_hole 2, template_var 3)),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0)),
           template_var 2)))),
    ("ATC.IO_applicable_nonempty",
     "[| applicable ?M ?t; completely_specified ?M; ?q1.0 : nodes ?M |]
      ==> IO ?M ?q1.0 ?t ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0),
               template_var 1),
             template_hole 0)
           ))),
    ("ATC.B_reduction",
     "[| ?M1.0 \<preceq> ?M2.0; observable ?M1.0; observable ?M2.0 |]
      ==> B ?M1.0 ?io ?\<Omega> <= B ?M2.0 ?io ?\<Omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("ATC.append_io_B_reduction",
     "[| ?M1.0 \<preceq> ?M2.0; observable ?M1.0; observable ?M2.0 |]
      ==> append_io_B ?M1.0 ?io ?\<Omega>
          <= append_io_B ?M2.0 ?io ?\<Omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("ATC.B_dist'",
     "B ?M ?io1.0 ?\<Omega> ~= B ?M ?io2.0 ?\<Omega> ==>
      io_targets ?M (initial ?M) ?io1.0 ~=
      io_targets ?M (initial ?M) ?io2.0",
     template_implication
      ([template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 2),
                template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 0),
                template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_app (template_hole 0, template_var 3)),
               template_var 2),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_app (template_hole 0, template_var 3)),
               template_var 0))
           ))),
    ("ATC.r_dist_dist",
     "[| applicable ?M ?t; completely_specified ?M;
         r_dist ?M ?t ?q1.0 ?q2.0; ?q1.0 : nodes ?M |]
      ==> ?q1.0 ~= ?q2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 3))
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("ATC.r_dist_set_dist",
     "[| applicable_set ?M ?\<Omega>; completely_specified ?M;
         r_dist_set ?M ?\<Omega> ?q1.0 ?q2.0; ?q1.0 : nodes ?M |]
      ==> ?q1.0 ~= ?q2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 3))
            )],
       template_negation
        (template_equation (template_var 1, template_var 0)))),
    ("ATC.atc_reaction_path",
     "[| atc_reaction ?M ?q1.0 ?t ?io;
         !!tr. [| path ?M (?io || tr) ?q1.0; length ?io = length tr |]
               ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("Topological_Spaces.tendsto_within_open_NO_MATCH",
     "[| ?a : ?S; NO_MATCH UNIV ?S; open ?S |]
      ==> (?f \<longlongrightarrow> ?l) (at ?a within ?S) =
          ?f \<midarrow>?a\<rightarrow> ?l",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_hole 6),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 5, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 1),
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_hole 0))))),
    ("ATC.append_io_B_nonempty",
     "[| applicable_set ?M ?\<Omega>; completely_specified ?M; ?io : L ?M;
         ?\<Omega> ~= {} |]
      ==> append_io_B ?M ?io ?\<Omega> ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 9, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app (template_hole 6, template_var 2)))
            ),
        template_negation
         (template_equation (template_var 1, template_hole 3))],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 0),
               template_var 1),
             template_hole 0)
           ))),
    ("ATC.r_dist_set_dist_disjoint",
     "[| applicable_set ?M ?\<Omega>; completely_specified ?M;
         ALL t1:?T1.0. ALL t2:?T2.0. r_dist_set ?M ?\<Omega> t1 t2;
         ?T1.0 <= nodes ?M |]
      ==> ?T1.0 Int ?T2.0 = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1), t_empty)
            ),
        template_inequation
         (less_equals, template_var 1,
          template_app (template_hole 3, template_var 3))],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0))),
    ("ATC.node_elim",
     "[| atc_reaction ?M ?q1.0 (ATC.Node ?x ?f) ((?x, ?y) # ?io);
         !!q2. [| q2 : succ ?M (?x, ?y) ?q1.0;
                  atc_reaction ?M q2 (?f ?y) ?io |]
               ==> ?P |]
      ==> ?P",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 5),
                template_app
                 (template_app (template_hole 5, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 2)),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("ATC.B_dist",
     "[| io_targets ?M (initial ?M) ?io1.0 = {?q1.0};
         io_targets ?M (initial ?M) ?io2.0 = {?q2.0};
         B ?M ?io1.0 ?\<Omega> ~= B ?M ?io2.0 ?\<Omega> |]
      ==> ?q1.0 ~= ?q2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_app (template_hole 6, template_var 5)),
            template_var 4),
          template_app
           (template_app (template_hole 5, template_var 3),
            template_hole 4)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 7, template_var 5),
              template_app (template_hole 6, template_var 5)),
            template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_hole 4)),
        template_negation
         (
            template_equation
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 0),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 2),
                template_var 0))
            )],
       template_negation
        (template_equation (template_var 3, template_var 1)))),
    ("ATC.IO_reduction",
     "[| LS ?M1.0 ?q1.0 <= LS ?M2.0 ?q2.0; ?q1.0 : nodes ?M1.0;
         ?q2.0 : nodes ?M2.0; observable ?M1.0; observable ?M2.0 |]
      ==> IO ?M1.0 ?q1.0 ?t <= IO ?M2.0 ?q2.0 ?t",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 9, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate (template_app (template_hole 3, template_var 4)),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("ATC.IO_set_reduction",
     "[| LS ?M1.0 ?q1.0 <= LS ?M2.0 ?q2.0; ?q1.0 : nodes ?M1.0;
         ?q2.0 : nodes ?M2.0; observable ?M1.0; observable ?M2.0 |]
      ==> IO_set ?M1.0 ?q1.0 ?\<Omega> <= IO_set ?M2.0 ?q2.0 ?\<Omega>",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 9, template_var 4), template_var 3),
          template_app
           (template_app (template_hole 8, template_var 2),
            template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app (template_hole 6, template_var 4))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app (template_hole 4, template_var 2))
            ),
        template_predicate (template_app (template_hole 3, template_var 4)),
        template_predicate
         (template_app (template_hole 2, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 1, template_var 4),
             template_var 3),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("ATC.atc_reaction_reduction",
     "[| LS ?M1.0 ?q1.0 <= LS ?M2.0 ?q2.0; ?q1.0 : nodes ?M1.0;
         ?q2.0 : nodes ?M2.0; atc_reaction ?M1.0 ?q1.0 ?t ?io;
         observable ?M2.0; observable ?M1.0 |]
      ==> atc_reaction ?M2.0 ?q2.0 ?t ?io",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 9, template_var 5), template_var 4),
          template_app
           (template_app (template_hole 8, template_var 3),
            template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app (template_hole 6, template_var 5))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app (template_hole 4, template_var 3))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            ),
        template_predicate (template_app (template_hole 2, template_var 3)),
        template_predicate
         (template_app (template_hole 1, template_var 5))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)
           ))),
    ("ATC.atc_io_reduction_on_sets_via_LS\<^sub>i\<^sub>n",
     "?M1.0 \<preceq>\<lbrakk>?TS.?\<Omega>\<rbrakk> ?M2.0 ==>
      L\<^sub>i\<^sub>n ?M1.0 ?TS Un
      (UN io:L\<^sub>i\<^sub>n ?M1.0 ?TS. B ?M1.0 io ?\<Omega>)
      <= L\<^sub>i\<^sub>n ?M2.0 ?TS Un
         (UN io:L\<^sub>i\<^sub>n ?M2.0 ?TS. B ?M2.0 io ?\<Omega>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 3),
                 template_app (template_hole 6, template_var 3)),
               template_var 2)),
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app
                  (template_app (template_hole 7, template_var 3),
                   template_app (template_hole 6, template_var 3)),
                 template_var 2)))),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 2, template_var 0),
                 template_app (template_hole 1, template_var 0)),
               template_var 2)),
           template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_app
                  (template_app (template_hole 2, template_var 0),
                   template_app (template_hole 1, template_var 0)),
                 template_var 2))))))),
    ("ATC.atc_reaction_nonempty",
     "[| atc_reaction ?M ?q1.0 ?t ((?x, ?y) # ?io);
         !!q2 f.
            [| ?t = ATC.Node ?x f; q2 : succ ?M (?x, ?y) ?q1.0;
               atc_reaction ?M q2 (f ?y) ?io |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 6),
                  template_var 5),
                template_var 4),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2)),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("ATC.atc_rdist_dist",
     "[| well_formed ?M2.0; completely_specified ?M2.0;
         applicable_set ?M2.0 ?\<Omega>; ?t1.0 : nodes ?M2.0;
         atc_reduction ?M2.0 ?t1.0 ?M1.0 ?s1.0 ?\<Omega>;
         atc_reduction ?M2.0 ?t2.0 ?M1.0 ?s2.0 ?\<Omega>;
         r_dist_set ?M1.0 ?\<Omega> ?s1.0 ?s2.0; ?t1.0 : nodes ?M2.0 |]
      ==> r_dist_set ?M2.0 ?\<Omega> ?t1.0 ?t2.0",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 6)),
        template_predicate (template_app (template_hole 5, template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app (template_hole 2, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 6),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 1, template_var 6),
                    template_var 1),
                  template_var 3),
                template_var 0),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 0, template_var 3),
                  template_var 5),
                template_var 2),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app (template_hole 2, template_var 6))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 5),
               template_var 4),
             template_var 1)
           )))]:
   (string * thm * template) list
### theory "Draft.ATCMoreTemplates"
### 0.442s elapsed time, 0.672s cpu time, 0.083s GC time
val it = (): unit
