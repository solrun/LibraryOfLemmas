   [("FSM.d_reachable_reachable", "d_reachable ?M ?p <= reachable ?M ?p",
     template_inequation
      (less_equals,
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("FSM.language_state_for_input_empty",
     "language_state_for_input ?M ?q [] = {[]}",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_hole 3),
       template_app
        (template_app (template_hole 2, template_hole 1),
         template_hole 0))),
    ("FSM.language_state_for_inputs_in_language_state",
     "LS\<^sub>i\<^sub>n ?M ?q ?T <= LS ?M ?q",
     template_inequation
      (less_equals,
       template_app
        (template_app
          (template_app (template_hole 1, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), template_var 1))),
    ("FSM.det_state_cover_empty", "is_det_state_cover ?M ?V ==> [] : ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 0)
           ))),
    ("FSM.product_simps", "inputs (product ?A ?B) = inputs ?A Un inputs ?B",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("FSM.product_simps",
     "outputs (product ?A ?B) = outputs ?A Un outputs ?B",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("FSM.product_simps",
     "initial (product ?A ?B) = (initial ?A, initial ?B)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("FSM.sequence_to_failure_non_nil",
     "sequence_to_failure ?M1.0 ?M2.0 ?xs ==> ?xs ~= []",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_negation
        (template_equation (template_var 0, template_hole 0)))),
    ("FSM.product_nodes",
     "nodes (product ?A ?B) <= nodes ?A \<times> nodes ?B",
     template_inequation
      (less_equals,
       template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         t_empty))),
    ("FSM.language_state_for_inputs_empty",
     "[] : ?V ==> [] : LS\<^sub>i\<^sub>n ?M ?q ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_hole 3),
              template_var 2)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0),
               template_var 2))
           ))),
    ("FSM.OFSM_props", "OFSM ?M ==> completely_specified ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 1, template_var 0)),
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("FSM.OFSM_props", "OFSM ?M ==> observable ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 1, template_var 0)),
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (template_app (template_hole 1, template_var 0)))),
    ("FSM.OFSM_props", "OFSM ?M ==> well_formed ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app (template_hole 2, template_var 0)),
              template_app
               (template_app
                 (template_hole 3,
                  template_app (template_hole 1, template_var 0)),
                template_app (template_hole 0, template_var 0)))
            )],
       template_predicate
        (template_app (template_hole 2, template_var 0)))),
    ("FSM.well_formed_product",
     "[| well_formed ?M1.0; well_formed ?M2.0 |]
      ==> well_formed (product ?M2.0 ?M1.0)",
     template_implication
      ([template_predicate (template_app (template_hole 3, template_var 1)),
        template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 0),
               template_var 1))
           ))),
    ("FSM.det_state_cover_finite",
     "[| is_det_state_cover ?M ?V; finite (nodes ?M) |] ==> finite ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 2,
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 0)))),
    ("FSM.mstfe_prefix_input_in_V",
     "minimal_sequence_to_failure_extending ?V ?M1.0 ?M2.0 ?vs ?xs ==>
      map fst ?vs : ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app (template_hole 3, template_var 4),
                    template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 1)),
             template_var 4)
           ))),
    ("FSM.io_targets_reachable",
     "?q2.0 : io_targets ?M ?q1.0 ?io ==> ?q2.0 : reachable ?M ?q1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 1))
           ))),
    ("FSM.language_state_for_inputs_map_fst_contained",
     "?vs : LS\<^sub>i\<^sub>n ?M ?q ?V ==> map fst ?vs : ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 3)),
             template_var 0)
           ))),
    ("FSM.language_state_prefix",
     "?w1.0 @ ?w2.0 : LS ?M ?q ==> ?w1.0 : LS ?M ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2)),
              template_app
               (template_app (template_hole 0, template_var 1),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_var 0))
           ))),
    ("FSM.product_language_state",
     "LS (product ?A ?B) (?q1.0, ?q2.0) = LS ?A ?q1.0 Int LS ?B ?q2.0",
     template_equation
      (template_app
        (template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_var 3),
             template_var 2)),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("FSM.index_last_take",
     "?i < length ?xs ==> ?xs ! ?i = last (take (Suc ?i) ?xs)",
     template_implication
      ([template_inequation
         (less_than, template_var 1,
          template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app (template_hole 3, template_var 0), template_var 1),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1)),
             template_var 0))))),
    ("FSM.io_target_implies_L",
     "?q : io_targets ?M (initial ?M) ?io ==> ?io : L ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 1),
                  template_app (template_hole 2, template_var 1)),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app
              (template_app (template_hole 0, template_var 1),
               template_app (template_hole 2, template_var 1)))
           ))),
    ("FSM.set_of_succs_finite",
     "[| well_formed ?M; ?q : nodes ?M |] ==> finite (succ ?M ?io ?q)",
     template_implication
      ([template_predicate (template_app (template_hole 4, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app (template_hole 2, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("FSM.language_state_for_inputs_union",
     "LS\<^sub>i\<^sub>n ?M ?q ?T1.0 Un LS\<^sub>i\<^sub>n ?M ?q ?T2.0 =
      LS\<^sub>i\<^sub>n ?M ?q (?T1.0 Un ?T2.0)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("FSM.io_targets_succ",
     "?q2.0 : io_targets ?M ?q1.0 [?xy] ==> ?q2.0 : succ ?M ?xy ?q1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1),
                template_app
                 (template_app (template_hole 2, template_var 0),
                  template_hole 1)))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0),
               template_var 1))
           ))),
    ("FSM.d_reaches_unique",
     "[| d_reaches ?M ?p ?xs ?q1.0; d_reaches ?M ?p ?xs ?q2.0 |]
      ==> ?q1.0 = ?q2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("FSM.language_state_for_input_take",
     "?io : language_state_for_input ?M ?q ?xs ==>
      take ?n ?io : language_state_for_input ?M ?q (take ?n ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app (template_hole 1, template_var 0),
                 template_var 4)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("FSM.language_state_inputs",
     "[| well_formed ?M; ?io : LS ?M ?q |]
      ==> set (map fst ?io) <= inputs ?M",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_hole 1),
             template_var 1)),
         template_app (template_hole 0, template_var 2)))),
    ("FSM.det_state_cover_card",
     "[| is_det_state_cover ?M ?V; finite (nodes ?M) |]
      ==> card (d_reachable ?M (initial ?M)) = card ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_hole 6,
              template_app (template_hole 5, template_var 1))
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 1))),
         template_app (template_hole 0, template_var 0)))),
    ("FSM.io_targets_nodes",
     "[| ?q2.0 : io_targets ?M ?q1.0 ?io; ?q1.0 : nodes ?M |]
      ==> ?q2.0 : nodes ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 0, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app (template_hole 0, template_var 2))
           ))),
    ("FSM.succ_nodes",
     "[| ?q2.0 : succ ?A ?w ?q1.0; ?q1.0 : nodes ?A |]
      ==> ?q2.0 : nodes ?A",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 1, template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 0, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app (template_hole 0, template_var 2))
           ))),
    ("FSM.product_simps",
     "succ (product ?A ?B) ?a (?p\<^sub>1, ?p\<^sub>2) =
      succ ?A ?a ?p\<^sub>1 \<times> succ ?B ?a ?p\<^sub>2",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app (template_hole 4, template_var 4),
               template_var 3)),
           template_var 2),
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 4),
               template_var 2),
             template_var 1)),
         t_empty))),
    ("FSM.path_input_containment",
     "[| well_formed ?M; path ?M ?p ?q |]
      ==> set (map fst (map fst ?p)) <= inputs ?M",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_app
              (template_app (template_hole 2, template_hole 1),
               template_var 1))),
         template_app (template_hole 0, template_var 2)))),
    ("FSM.path_state_containment",
     "[| path ?M ?p ?q; ?q : nodes ?M |] ==> set (map snd ?p) <= nodes ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app (template_hole 4, template_var 2))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)),
         template_app (template_hole 4, template_var 2)))),
    ("FSM.d_reaches_unique_obtain",
     "d_reaches ?M (initial ?M) ?xs ?q ==>
      {p. d_reaches ?M (initial ?M) ?xs p} = {?q}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 2),
                  template_app (template_hole 4, template_var 2)),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app (template_hole 2, t_empty),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_hole 0)))),
    ("FSM.observable_io_target_is_singleton",
     "[| observable ?M; ?p : io_targets ?M ?q ?io |]
      ==> io_targets ?M ?q ?io = {?p}",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_app
               (template_app
                 (template_app (template_hole 3, template_var 3),
                  template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_var 1),
           template_var 0),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_hole 0)))),
    ("FSM.language_state_for_inputs_map_fst",
     "[| ?io : LS ?M ?q; map fst ?io : ?T |]
      ==> ?io : LS\<^sub>i\<^sub>n ?M ?q ?T",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app (template_hole 2, template_hole 1),
                  template_var 3)),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 5, template_var 3),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 1),
               template_var 0))
           ))),
    ("FSM.language_state",
     "[| path ?M (?w || ?r) ?q; length ?w = length ?r |] ==> ?w : LS ?M ?q",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 6, template_var 3),
                template_app
                 (template_app (template_hole 5, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 3, template_var 2),
          template_app (template_hole 2, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 2),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("FSM.sequence_to_failure_succ",
     "sequence_to_failure ?M1.0 ?M2.0 ?io ==>
      ALL q:io_targets ?M2.0 (initial ?M2.0) (butlast ?io).
         succ ?M2.0 (last ?io) q = {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 7,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 1),
                   template_app (template_hole 5, template_var 1)),
                 template_app (template_hole 4, template_var 0))),
             t_empty)
           ))),
    ("FSM.io_targets_observable_singleton_ex",
     "[| observable ?M; ?io : LS ?M ?q1.0 |]
      ==> EX q2. io_targets ?M ?q1.0 ?io = {q2}",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 0))
            )],
       template_predicate (template_app (template_hole 4, t_empty)))),
    ("FSM.well_formed_path_io_containment",
     "[| well_formed ?M; path ?M ?p ?q |]
      ==> set (map fst ?p) <= inputs ?M \<times> outputs ?M",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 2)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 5,
           template_app
            (template_app (template_hole 4, template_hole 3),
             template_var 1)),
         template_app
          (template_app
            (template_hole 2,
             template_app (template_hole 1, template_var 2)),
           t_empty)))),
    ("FSM.d_reaches_io_target",
     "[| d_reaches ?M ?p ?xs ?q; length ?ys = length ?xs |]
      ==> io_targets ?M ?p (?xs || ?ys) <= {?q}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 6, template_var 0),
          template_app (template_hole 5, template_var 2))],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("FSM.det_state_cover_d_reachable",
     "[| is_det_state_cover ?M ?V; ?v : ?V;
         !!q. d_reaches ?M (initial ?M) ?v q ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("FSM.d_reaches_unique_cases",
     "{q. d_reaches ?M (initial ?M) ?xs q} = {} |
      (EX q2. {q. d_reaches ?M (initial ?M) ?xs q} = {q2})",
     template_predicate
      (
         template_app
          (template_app
            (template_hole 7,
             template_app
              (template_app
                (template_hole 6, template_app (template_hole 5, t_empty)),
               template_hole 2)),
           template_app (template_hole 1, t_empty))
         )),
    ("FSM.states_target_index",
     "?i < length ?p ==>
      states ?p ?q1.0 ! ?i = target (take (Suc ?i) ?p) ?q1.0",
     template_implication
      ([template_inequation
         (less_than, template_var 2,
          template_app (template_hole 7, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app (template_hole 4, t_empty), template_var 1),
               template_var 0)),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 2, t_empty),
             template_app
              (template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 2)),
               template_var 1)),
           template_var 0)))),
    ("FSM.language_state_for_inputs_nonempty",
     "[| set ?xs <= inputs ?M; completely_specified ?M; ?q : nodes ?M |]
      ==> LS\<^sub>i\<^sub>n ?M ?q {?xs} ~= {}",
     template_implication
      ([template_inequation
         (less_equals, template_app (template_hole 10, template_var 2),
          template_app (template_hole 9, template_var 1)),
        template_predicate (template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 0),
              template_app (template_hole 6, template_var 1))
            )],
       template_negation
        (
           template_equation
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 1),
                 template_var 0),
               template_app
                (template_app (template_hole 2, template_var 2),
                 template_hole 1)),
             template_hole 0)
           ))),
    ("FSM.sequence_to_failure_ob",
     "[| ~ ?M1.0 \<preceq> ?M2.0; well_formed ?M1.0; well_formed ?M2.0;
         !!io. sequence_to_failure ?M1.0 ?M2.0 io ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_var 1)
                )
            ),
        template_predicate (template_app (template_hole 2, template_var 2)),
        template_predicate (template_app (template_hole 2, template_var 1)),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("FSM.io_targets_observable_singleton_ob",
     "[| observable ?M; ?io : LS ?M ?q1.0;
         !!q2. io_targets ?M ?q1.0 ?io = {q2} ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 7, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 4, t_empty))],
       template_predicate (template_var 0))),
    ("FSM.language_state_elim",
     "[| ?w : LS ?M ?q;
         !!r. [| path ?M (?w || r) ?q; length ?w = length r |]
              ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("FSM.path_last_io_target",
     "[| path ?M (?xs || ?tr) ?q; length ?xs = length ?tr; 0 < length ?xs |]
      ==> last ?tr : io_targets ?M ?q ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 9, template_var 3),
                template_app
                 (template_app (template_hole 8, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 6, template_var 2),
          template_app (template_hole 5, template_var 1)),
        template_inequation
         (less_than, template_hole 3,
          template_app (template_hole 6, template_var 2))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0),
               template_var 2))
           ))),
    ("FSM.io_target_from_path",
     "[| path ?M (?w || ?tr) ?q; length ?w = length ?tr |]
      ==> target (?w || ?tr) ?q : io_targets ?M ?q ?w",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 8, template_var 3),
                template_app
                 (template_app (template_hole 7, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 5, template_var 2),
          template_app (template_hole 4, template_var 1))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_app (template_hole 2, t_empty),
                   template_app
                    (template_app (template_hole 7, template_var 2),
                     template_var 1)),
                 template_var 0)),
             template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 0),
               template_var 2))
           ))),
    ("FSM.io_reduction_on_subset",
     "[| ?M1.0 \<preceq>\<lbrakk>?T\<rbrakk> ?M2.0; ?T' <= ?T |]
      ==> ?M1.0 \<preceq>\<lbrakk>?T'\<rbrakk> ?M2.0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_app (template_hole 4, template_var 3),
              template_app (template_hole 3, template_var 3)),
            template_var 2),
          template_app
           (template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 1)),
            template_var 2)),
        template_inequation (less_equals, template_var 0, template_var 2)],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_app (template_hole 3, template_var 3)),
           template_var 0),
         template_app
          (template_app
            (template_app (template_hole 2, template_var 1),
             template_app (template_hole 1, template_var 1)),
           template_var 0)))),
    ("FSM.non_distinct_duplicate_indices",
     "~ distinct ?xs ==>
      EX i1 i2.
         i1 ~= i2 &
         ?xs ! i1 = ?xs ! i2 & i1 <= length ?xs & i2 <= length ?xs",
     template_implication
      ([template_negation
         (
            template_predicate
             (template_app (template_hole 7, template_var 0))
            )],
       template_predicate (template_app (template_hole 6, t_empty)))),
    ("FSM.language_state_for_inputs_prefix",
     "[| ?vs @ ?xs : L\<^sub>i\<^sub>n ?M1.0 {?vs' @ ?xs'};
         length ?vs = length ?vs' |]
      ==> ?vs : L\<^sub>i\<^sub>n ?M1.0 {?vs'}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_app (template_hole 7, template_var 2),
                  template_app (template_hole 6, template_var 2)),
                template_app
                 (template_app
                   (template_hole 5,
                    template_app
                     (template_app (template_hole 4, template_var 1),
                      template_var 0)),
                  template_hole 3)))
            ),
        template_equation
         (template_app (template_hole 1, template_var 4),
          template_app (template_hole 0, template_var 1))],
       template_predicate
        (
           template_app
            (template_app (template_hole 9, template_var 4),
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_app (template_hole 6, template_var 2)),
               template_app
                (template_app (template_hole 5, template_var 1),
                 template_hole 3)))
           ))),
    ("FSM.set_of_paths_finite",
     "[| well_formed ?M; ?q1.0 : nodes ?M |]
      ==> finite
           {p. path ?M p ?q1.0 & target p ?q1.0 = ?q2.0 & length p <= ?k}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 2),
              template_app (template_hole 9, template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_hole 8, template_app (template_hole 7, t_empty))
           ))),
    ("FSM.target_in_states",
     "[| length ?io = length ?tr; 0 < length ?io |]
      ==> last (states (?io || ?tr) ?q) = target (?io || ?tr) ?q",
     template_implication
      ([template_equation
         (template_app (template_hole 9, template_var 2),
          template_app (template_hole 8, template_var 1)),
        template_inequation
         (less_than, template_hole 6,
          template_app (template_hole 9, template_var 2))],
       template_equation
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_app (template_hole 3, t_empty),
               template_app
                (template_app (template_hole 1, template_var 2),
                 template_var 1)),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 0, t_empty),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_var 1)),
           template_var 0)))),
    ("FSM.det_state_cover_ass_diff",
     "[| is_det_state_cover_ass ?M ?f; ?s1.0 : d_reachable ?M (initial ?M);
         ?s2.0 : d_reachable ?M (initial ?M); ?s1.0 ~= ?s2.0 |]
      ==> ?f ?s1.0 ~= ?f ?s2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 3)))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app (template_var 2, template_var 1),
             template_app (template_var 2, template_var 0))
           ))),
    ("FSM.observable_io_targets_append",
     "[| observable ?M; io_targets ?M ?q1.0 ?vs = {?q2.0};
         io_targets ?M ?q2.0 ?xs = {?q3.0} |]
      ==> io_targets ?M ?q1.0 (?vs @ ?xs) = {?q3.0}",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_hole 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 5),
              template_var 2),
            template_var 1),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_hole 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 5),
             template_var 4),
           template_app
            (template_app (template_hole 0, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)))),
    ("FSM.observable_io_targets_suffix",
     "[| observable ?M; io_targets ?M ?q1.0 ?vs = {?q2.0};
         io_targets ?M ?q1.0 (?vs @ ?xs) = {?q3.0} |]
      ==> io_targets ?M ?q2.0 ?xs = {?q3.0}",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app (template_hole 2, template_var 2),
            template_hole 1)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 5),
              template_var 4),
            template_app
             (template_app (template_hole 0, template_var 3),
              template_var 1)),
          template_app
           (template_app (template_hole 2, template_var 0),
            template_hole 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 5),
             template_var 2),
           template_var 1),
         template_app
          (template_app (template_hole 2, template_var 0),
           template_hole 1)))),
    ("FSM.observable_io_targets_split",
     "[| observable ?M; io_targets ?M ?q1.0 (?vs @ ?xs) = {?q3.0};
         io_targets ?M ?q1.0 ?vs = {?q2.0} |]
      ==> io_targets ?M ?q2.0 ?xs = {?q3.0}",
     template_implication
      ([template_predicate (template_app (template_hole 5, template_var 5)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 5),
              template_var 4),
            template_app
             (template_app (template_hole 2, template_var 3),
              template_var 2)),
          template_app
           (template_app (template_hole 1, template_var 1),
            template_hole 0)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 3, template_var 5),
              template_var 4),
            template_var 3),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_hole 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 5),
             template_var 0),
           template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_hole 0)))),
    ("FSM.path_prefix_io_targets",
     "[| path ?M (?xs || ?tr) ?q; length ?xs = length ?tr; 0 < length ?xs |]
      ==> last (take (Suc ?i) ?tr) : io_targets ?M ?q (take (Suc ?i) ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 12, template_var 4),
                template_app
                 (template_app (template_hole 11, template_var 3),
                  template_var 2)),
              template_var 1)
            ),
        template_equation
         (template_app (template_hole 9, template_var 3),
          template_app (template_hole 8, template_var 2)),
        template_inequation
         (less_than, template_hole 6,
          template_app (template_hole 9, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 5,
               template_app
                (template_hole 4,
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_var 2))),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1),
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 2, template_var 0)),
                 template_var 3)))
           ))),
    ("FSM.obs_target_is_io_targets",
     "[| observable ?M; path ?M (?io || ?tr) ?q; length ?io = length ?tr |]
      ==> io_targets ?M ?q ?io = {target (?io || ?tr) ?q}",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 10, template_var 3),
                template_app
                 (template_app (template_hole 9, template_var 2),
                  template_var 1)),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 7, template_var 2),
          template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 3),
             template_var 0),
           template_var 2),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app
                (template_app (template_hole 2, t_empty),
                 template_app
                  (template_app (template_hole 9, template_var 2),
                   template_var 1)),
               template_var 0)),
           template_hole 0)))),
    ("FSM.det_state_cover_ass_dist",
     "[| is_det_state_cover_ass ?M ?f; ?s1.0 : d_reachable ?M (initial ?M);
         ?s2.0 : d_reachable ?M (initial ?M); ?s1.0 ~= ?s2.0 |]
      ==> ~ d_reaches ?M (initial ?M) (?f ?s2.0) ?s1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_app (template_hole 3, template_var 3)))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 3),
                     template_app (template_hole 3, template_var 3)),
                   template_app (template_var 2, template_var 0)),
                 template_var 1)
               )
           ))),
    ("FSM.io_target_target",
     "[| io_targets ?M ?q1.0 ?io = {?q2.0}; path ?M (?io || ?tr) ?q1.0;
         length ?io = length ?tr |]
      ==> target (?io || ?tr) ?q1.0 = ?q2.0",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 9, template_var 1),
            template_hole 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 0)),
              template_var 3)
            ),
        template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, t_empty),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0)),
           template_var 3),
         template_var 1))),
    ("FSM.observable_path_unique_ex",
     "[| observable ?M; ?io : LS ?M ?q;
         !!tr. {t. path ?M (?io || t) ?q & length ?io = length t} = {tr} ==>
               ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (template_app (template_hole 13, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_app (template_hole 11, template_var 3),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 10, t_empty))],
       template_predicate (template_var 0))),
    ("FSM.sequence_to_failure_length",
     "[| well_formed ?M1.0; well_formed ?M2.0; observable ?M1.0;
         observable ?M2.0; ~ ?M1.0 \<preceq> ?M2.0 |]
      ==> EX xs.
             sequence_to_failure ?M1.0 ?M2.0 xs &
             length xs <= |?M2.0| * |?M1.0|",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 1)),
        template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_predicate
         (template_app (template_hole 10, template_var 1)),
        template_predicate
         (template_app (template_hole 10, template_var 0)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)
                )
            )],
       template_predicate (template_app (template_hole 7, t_empty)))),
    ("FSM.minimal_sequence_to_failure_extending_det_state_cover_ob",
     "[| well_formed ?M1.0; well_formed ?M2.0; observable ?M2.0;
         is_det_state_cover ?M2.0 ?V; ~ ?M1.0 \<preceq> ?M2.0;
         !!vs xs.
            minimal_sequence_to_failure_extending ?V ?M1.0 ?M2.0 vs xs ==>
            ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate (template_app (template_hole 6, template_var 2)),
        template_predicate (template_app (template_hole 5, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2)
                )
            ),
        template_predicate (template_app (template_hole 1, t_empty))],
       template_predicate (template_var 0))),
    ("FSM.product_path",
     "[| length ?w = length ?r\<^sub>1;
         length ?r\<^sub>1 = length ?r\<^sub>2 |]
      ==> path (product ?A ?B) (?w || ?r\<^sub>1 || ?r\<^sub>2)
           (?p\<^sub>1, ?p\<^sub>2) =
          (path ?A (?w || ?r\<^sub>1) ?p\<^sub>1 &
           path ?B (?w || ?r\<^sub>2) ?p\<^sub>2)",
     template_implication
      ([template_equation
         (template_app (template_hole 13, template_var 6),
          template_app (template_hole 12, template_var 5)),
        template_equation
         (template_app (template_hole 12, template_var 5),
          template_app (template_hole 11, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app
              (template_hole 9,
               template_app
                (template_app (template_hole 8, template_var 3),
                 template_var 2)),
             template_app
              (template_app (template_hole 7, template_var 6),
               template_app
                (template_app (template_hole 6, template_var 5),
                 template_var 4))),
           template_app
            (template_app (template_hole 5, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app
                (template_app (template_hole 3, template_var 3),
                 template_app
                  (template_app (template_hole 2, template_var 6),
                   template_var 5)),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 6),
                 template_var 4)),
             template_var 0))))),
    ("FSM.io_targets_elim",
     "[| ?p : io_targets ?M ?q ?io;
         !!tr. target (?io || tr) ?q = ?p &
               path ?M (?io || tr) ?q & length ?io = length tr ==>
               ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 4),
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 9, t_empty))],
       template_predicate (template_var 0))),
    ("FSM.sequence_to_failure_from_arbitrary_failure",
     "[| ?vs @ ?xs : L ?M1.0 - L ?M2.0; ?vs : L ?M2.0 Int L ?M1.0 |]
      ==> EX xs'.
             prefix xs' ?xs & sequence_to_failure ?M1.0 ?M2.0 (?vs @ xs')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 3),
                  template_var 2)),
              template_app
               (template_app
                 (template_hole 7,
                  template_app
                   (template_app (template_hole 6, template_var 1),
                    template_app (template_hole 5, template_var 1))),
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_app (template_hole 5, template_var 0))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 3),
              template_app
               (template_app
                 (template_hole 4,
                  template_app
                   (template_app (template_hole 6, template_var 0),
                    template_app (template_hole 5, template_var 0))),
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_app (template_hole 5, template_var 1))))
            )],
       template_predicate (template_app (template_hole 3, t_empty)))),
    ("FSM.observable_io_target_unique_target",
     "[| observable ?M; io_targets ?M ?q1.0 ?io = {?q2.0};
         path ?M (?io || ?tr) ?q1.0; length ?io = length ?tr |]
      ==> target (?io || ?tr) ?q1.0 = ?q2.0",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 10, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 9, template_var 1),
            template_hole 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 4),
                template_app
                 (template_app (template_hole 6, template_var 2),
                  template_var 0)),
              template_var 3)
            ),
        template_equation
         (template_app (template_hole 4, template_var 2),
          template_app (template_hole 3, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 1, t_empty),
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0)),
           template_var 3),
         template_var 1))),
    ("FSM.reaching_path_without_repetition",
     "[| well_formed ?M; ?q2.0 : reachable ?M ?q1.0; ?q1.0 : nodes ?M |]
      ==> EX p. path ?M p ?q1.0 &
                target p ?q1.0 = ?q2.0 & distinct (?q1.0 # states p ?q1.0)",
     template_implication
      ([template_predicate
         (template_app (template_hole 12, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_app (template_hole 10, template_var 2),
                template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app (template_hole 9, template_var 2))
            )],
       template_predicate (template_app (template_hole 8, t_empty)))),
    ("FSM.language_state_inclusion_of_state_reached_by_same_sequence",
     "[| LS ?M1.0 ?q1.0 <= LS ?M2.0 ?q2.0; observable ?M1.0;
         observable ?M2.0; io_targets ?M1.0 ?q1.0 ?io = {?q1t};
         io_targets ?M2.0 ?q2.0 ?io = {?q2t} |]
      ==> LS ?M1.0 ?q1t <= LS ?M2.0 ?q2t",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app (template_hole 11, template_var 6),
            template_var 5),
          template_app
           (template_app (template_hole 10, template_var 4),
            template_var 3)),
        template_predicate (template_app (template_hole 9, template_var 6)),
        template_predicate (template_app (template_hole 8, template_var 4)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 6, template_var 6),
              template_var 5),
            template_var 2),
          template_app
           (template_app (template_hole 5, template_var 1),
            template_hole 4)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 2, template_var 4),
              template_var 3),
            template_var 2),
          template_app
           (template_app (template_hole 1, template_var 0),
            template_hole 0))],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 11, template_var 6), template_var 1),
         template_app
          (template_app (template_hole 10, template_var 4),
           template_var 0)))),
    ("FSM.observable_path_unique",
     "[| ?io : LS ?M ?q; observable ?M; path ?M (?io || ?tr1.0) ?q;
         length ?io = length ?tr1.0; path ?M (?io || ?tr2.0) ?q;
         length ?io = length ?tr2.0 |]
      ==> ?tr1.0 = ?tr2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 4),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 6, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 1)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 2, template_var 4),
          template_app (template_hole 1, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 5, template_var 3),
                template_app
                 (template_app (template_hole 4, template_var 4),
                  template_var 0)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 2, template_var 4),
          template_app (template_hole 1, template_var 0))],
       template_equation (template_var 1, template_var 0))),
    ("FSM.observable_path_prefix",
     "[| observable ?M; path ?M (?io || ?tr) ?q; length ?io = length ?tr;
         path ?M (?ioP || ?trP) ?q; length ?ioP = length ?trP;
         prefix ?ioP ?io |]
      ==> ?trP = take (length ?ioP) ?tr",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 4, template_var 4),
          template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 4, template_var 1),
          template_app (template_hole 3, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_var 4)
            )],
       template_equation
        (template_var 0,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 1)),
           template_var 3)))),
    ("FSM.io_path_states_prefix",
     "[| observable ?M; path ?M (?io1.0 || ?tr1.0) ?q;
         length ?tr1.0 = length ?io1.0; path ?M (?io2.0 || ?tr2.0) ?q;
         length ?tr2.0 = length ?io2.0; prefix ?io1.0 ?io2.0 |]
      ==> ?tr1.0 = take (length ?tr1.0) ?tr2.0",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 3)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 4, template_var 3),
          template_app (template_hole 3, template_var 4)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 7, template_var 5),
                template_app
                 (template_app (template_hole 6, template_var 1),
                  template_var 0)),
              template_var 2)
            ),
        template_equation
         (template_app (template_hole 4, template_var 0),
          template_app (template_hole 3, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_var 1)
            )],
       template_equation
        (template_var 3,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 4, template_var 3)),
           template_var 0)))),
    ("FSM.states_index_io_target",
     "[| ?i < length ?xs; path ?M (?xs || ?tr) ?q; length ?xs = length ?tr;
         0 < length ?xs |]
      ==> states (?xs || ?tr) ?q ! ?i
          : io_targets ?M ?q (take (Suc ?i) ?xs)",
     template_implication
      ([template_inequation
         (less_than, template_var 4,
          template_app (template_hole 12, template_var 3)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 11, template_var 2),
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_var 1)),
              template_var 0)
            ),
        template_equation
         (template_app (template_hole 12, template_var 3),
          template_app (template_hole 8, template_var 1)),
        template_inequation
         (less_than, template_hole 7,
          template_app (template_hole 12, template_var 3))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 6,
               template_app
                (template_app
                  (template_hole 5,
                   template_app
                    (template_app
                      (template_app (template_hole 4, t_empty),
                       template_app
                        (template_app (template_hole 10, template_var 3),
                         template_var 1)),
                     template_var 0)),
                 template_var 4)),
             template_app
              (template_app
                (template_app (template_hole 2, template_var 2),
                 template_var 0),
               template_app
                (template_app
                  (template_hole 1,
                   template_app (template_hole 0, template_var 4)),
                 template_var 3)))
           ))),
    ("FSM.product_target",
     "[| length ?w = length ?r\<^sub>1;
         length ?r\<^sub>1 = length ?r\<^sub>2 |]
      ==> target (?w || ?r\<^sub>1 || ?r\<^sub>2) (?p\<^sub>1, ?p\<^sub>2) =
          (target (?w || ?r\<^sub>1) ?p\<^sub>1,
           target (?w || ?r\<^sub>2) ?p\<^sub>2)",
     template_implication
      ([template_equation
         (template_app (template_hole 14, template_var 4),
          template_app (template_hole 13, template_var 3)),
        template_equation
         (template_app (template_hole 13, template_var 3),
          template_app (template_hole 12, template_var 2))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 10, t_empty),
             template_app
              (template_app (template_hole 8, template_var 4),
               template_app
                (template_app (template_hole 7, template_var 3),
                 template_var 2))),
           template_app
            (template_app (template_hole 6, template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_app
                (template_app (template_hole 5, t_empty),
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_var 3)),
               template_var 1)),
           template_app
            (template_app
              (template_app (template_hole 2, t_empty),
               template_app
                (template_app (template_hole 0, template_var 4),
                 template_var 2)),
             template_var 0))))),
    ("FSM.language_state_split",
     "[| ?w1.0 @ ?w2.0 : LS ?M ?q;
         !!tr1 tr2.
            [| path ?M (?w1.0 || tr1) ?q; length ?w1.0 = length tr1;
               path ?M (?w2.0 || tr2) (target (?w1.0 || tr1) ?q);
               length ?w2.0 = length tr2 |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 8, template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 7, t_empty))],
       template_predicate (template_var 0))),
    ("FSM.product_suite_completeness",
     "[| well_formed ?M1.0; well_formed ?M2.0; observable ?M1.0;
         observable ?M2.0; inputs ?M2.0 = inputs ?M1.0; |?M1.0| <= ?m |]
      ==> ?M1.0 \<preceq> ?M2.0 =
          ?M1.0 \<preceq>\<lbrakk>{xs.
                                   set xs <= inputs ?M2.0 &
                                   length xs
                                   <= |?M2.0| * ?m}\<rbrakk> ?M2.0",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 2)),
        template_predicate
         (template_app (template_hole 17, template_var 1)),
        template_predicate
         (template_app (template_hole 16, template_var 2)),
        template_predicate
         (template_app (template_hole 16, template_var 1)),
        template_equation
         (template_app (template_hole 14, template_var 1),
          template_app (template_hole 14, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 12,
            template_app (template_hole 11, template_var 2)),
          template_var 0)],
       template_equation
        (template_app
          (template_app (template_hole 9, template_var 2), template_var 1),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_app (template_hole 6, template_var 2)),
               template_app (template_hole 5, t_empty))),
           template_app
            (template_app
              (template_app (template_hole 7, template_var 1),
               template_app (template_hole 6, template_var 1)),
             template_app (template_hole 5, t_empty)))))),
    ("FSM.product_suite_soundness",
     "[| well_formed ?M1.0; well_formed ?M2.0; observable ?M1.0;
         observable ?M2.0; inputs ?M2.0 = inputs ?M1.0; |?M1.0| <= ?m |]
      ==> ~ ?M1.0 \<preceq> ?M2.0 -->
          ~ ?M1.0 \<preceq>\<lbrakk>{xs.
                                     set xs <= inputs ?M2.0 &
                                     length xs
                                     <= |?M2.0| * ?m}\<rbrakk> ?M2.0",
     template_implication
      ([template_predicate
         (template_app (template_hole 18, template_var 2)),
        template_predicate
         (template_app (template_hole 18, template_var 1)),
        template_predicate
         (template_app (template_hole 17, template_var 2)),
        template_predicate
         (template_app (template_hole 17, template_var 1)),
        template_equation
         (template_app (template_hole 15, template_var 1),
          template_app (template_hole 15, template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 13,
            template_app (template_hole 12, template_var 2)),
          template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 11,
               template_app
                (template_hole 10,
                 template_app
                  (template_app (template_hole 9, template_var 2),
                   template_var 1))),
             template_app
              (template_hole 10,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app
                      (template_app (template_hole 7, template_var 2),
                       template_app (template_hole 6, template_var 2)),
                     template_app (template_hole 5, t_empty))),
                 template_app
                  (template_app
                    (template_app (template_hole 7, template_var 1),
                     template_app (template_hole 6, template_var 1)),
                   template_app (template_hole 5, t_empty)))))
           )))]
