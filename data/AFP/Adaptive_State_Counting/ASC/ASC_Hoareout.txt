Loading theory "HOL-Library.Adhoc_Overloading" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "Transition_Systems_and_Automata.Sequence" via "HOL-Library.Monad_Syntax")
Loading theory "HOL-Hoare.Hoare_Tac" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "HOL-Hoare.Hoare_Logic")
Loading theory "HOL-Hoare.Hoare_Syntax" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "HOL-Hoare.Hoare_Logic")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
signature ADHOC_OVERLOADING =
  sig
    val generic_add_overloaded: string -> Context.generic -> Context.generic
    val generic_add_variant:
       string -> term -> Context.generic -> Context.generic
    val generic_remove_overloaded:
       string -> Context.generic -> Context.generic
    val generic_remove_variant:
       string -> term -> Context.generic -> Context.generic
    val is_overloaded: Proof.context -> string -> bool
    val show_variants: bool Config.T
  end
structure Adhoc_Overloading: ADHOC_OVERLOADING
### theory "HOL-Library.Adhoc_Overloading"
### 0.096s elapsed time, 0.416s cpu time, 0.000s GC time
Loading theory "HOL-Library.Monad_Syntax" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "Transition_Systems_and_Automata.Sequence")
### theory "HOL-Library.Function_Algebras"
### 0.124s elapsed time, 0.520s cpu time, 0.037s GC time
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity" via "HOL-Library.Countable_Complete_Lattices" via "HOL-Library.Countable_Set")
### theory "HOL-Library.Monad_Syntax"
### 0.043s elapsed time, 0.159s cpu time, 0.037s GC time
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
consts
  enumerate :: "'a set => nat => 'a"
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Infinite_Set"
### 0.304s elapsed time, 1.202s cpu time, 0.107s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat" via "HOL-Library.Countable")
### theory "HOL-Library.Nat_Bijection"
### 0.337s elapsed time, 1.331s cpu time, 0.107s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ExtrEqs")
### ML warning (line 58 of "~~/src/HOL/Hoare/hoare_syntax.ML"):
### Matches are not exhaustive.
### ML warning (line 62 of "~~/src/HOL/Hoare/hoare_syntax.ML"):
### Matches are not exhaustive.
### ML warning (line 232 of "~~/src/HOL/Hoare/hoare_syntax.ML"):
### Matches are not exhaustive.
signature HOARE_SYNTAX =
  sig
    val hoare_tc_vars_tr: Proof.context -> term list -> term
    val hoare_vars_tr: Proof.context -> term list -> term
    val setup:
       {Basic: string,
        Cond: string,
        Seq: string,
        Skip: string, Valid: string, ValidTC: string, While: string}
         -> theory -> theory
    val spec_tr': string -> Proof.context -> term list -> term
  end
structure Hoare_Syntax: HOARE_SYNTAX
### theory "HOL-Hoare.Hoare_Syntax"
### 0.831s elapsed time, 3.306s cpu time, 0.315s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.428s elapsed time, 1.689s cpu time, 0.171s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams")
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
### theory "HOL-Library.Set_Algebras"
### 0.226s elapsed time, 0.896s cpu time, 0.066s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
consts
  stake :: "nat => 'a stream => 'a list"
consts
  sdrop :: "nat => 'a stream => 'a stream"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  cycle :: "'a list => 'a stream"
consts
  prefixes :: "'a list => 'a list list"
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.145s elapsed time, 4.331s cpu time, 0.912s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat")
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
### ML warning (line 49 of "~~/src/HOL/Hoare/hoare_tac.ML"):
### Matches are not exhaustive.
### ML warning (line 64 of "~~/src/HOL/Hoare/hoare_tac.ML"):
### Matches are not exhaustive.
### ML warning (line 76 of "~~/src/HOL/Hoare/hoare_tac.ML"):
### Matches are not exhaustive.
### ML warning (file "~~/src/HOL/Hoare/hoare_tac.ML"):
### Pattern is not exhaustive.
### ML warning (line 90 of "~~/src/HOL/Hoare/hoare_tac.ML"):
### Pattern is not exhaustive.
signature HOARE_TAC =
  sig
    val hoare_rule_tac:
       Proof.context ->
         term list * thm -> (int -> tactic) -> bool -> int -> tactic
    val hoare_tac: Proof.context -> (int -> tactic) -> int -> tactic
    val hoare_tc_tac: Proof.context -> (int -> tactic) -> int -> tactic
  end
structure Hoare_Tac: HOARE_TAC
### theory "HOL-Hoare.Hoare_Tac"
### 1.886s elapsed time, 7.289s cpu time, 1.132s GC time
Loading theory "HOL-Hoare.Hoare_Logic" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare")
consts
  suffixes :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### Additional type variable(s) in locale specification "countable": 'a
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
### theory "HOL-Library.Sublist"
### 1.956s elapsed time, 7.365s cpu time, 1.948s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "Sem"
  Proving monotonicity ...
### theory "HOL-Library.Countable"
### 1.495s elapsed time, 5.723s cpu time, 1.344s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity" via "HOL-Library.Countable_Complete_Lattices")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Hoare.Hoare_Logic"
### 1.352s elapsed time, 5.146s cpu time, 1.354s GC time
Loading theory "Transition_Systems_and_Automata.Basic" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "Transition_Systems_and_Automata.Sequence")
### theory "Transition_Systems_and_Automata.Basic"
### 0.043s elapsed time, 0.175s cpu time, 0.000s GC time
Loading theory "Transition_Systems_and_Automata.Sequence" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL")
Found termination order: "size <*mlex*> {}"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### theory "HOL-Library.Tree"
### 2.556s elapsed time, 9.729s cpu time, 2.329s GC time
Loading theory "Draft.Templates" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Countable_Set"
### 0.502s elapsed time, 1.976s cpu time, 0.310s GC time
Loading theory "HOL-Library.Countable_Complete_Lattices" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity")
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.065s elapsed time, 0.256s cpu time, 0.000s GC time
[| inj_on ?f ?A; ?B <= ?A |] ==> inj_on ?f ?B
[| inj_on ?f ?B; ?A <= ?B |] ==> inj_on ?f ?A
### theory "HOL-Library.BigO"
### 0.861s elapsed time, 3.389s cpu time, 0.446s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ASC_HoareMoreTemplates")
consts
  scan :: "('a => 'b => 'b) => 'a list => 'b => 'b list"
consts
  sscan :: "('a => 'b => 'b) => 'a stream => 'b => 'b stream"
consts
  stranspose :: "'a stream list => 'a list stream"
Proofs for coinductive predicate(s) "sdistinct"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "sascending"
  Proving monotonicity ...
class countable_complete_lattice = Inf + Sup + lattice + bot + top +
  assumes "ccInf_lower": "!!A x. [| countable A; x : A |] ==> Inf A <= x"
  assumes
    "ccInf_greatest":
      "!!A z. [| countable A; !!x. x : A ==> z <= x |] ==> z <= Inf A"
  assumes "ccSup_upper": "!!A x. [| countable A; x : A |] ==> x <= Sup A"
  assumes
    "ccSup_least":
      "!!A z. [| countable A; !!x. x : A ==> x <= z |] ==> Sup A <= z"
  assumes "ccInf_empty": "Inf {} = top"
  assumes "ccSup_empty": "Sup {} = bot"
Proofs for coinductive predicate(s) "sdescending"
  Proving monotonicity ...
### theory "Transition_Systems_and_Automata.Sequence"
### 1.249s elapsed time, 4.401s cpu time, 1.507s GC time
Loading theory "Transition_Systems_and_Automata.Transition_System" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM")
locale transition_system_universal
  fixes execute :: "'transition => 'state => 'state"
locale transition_system
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
Proofs for inductive predicate(s) "path"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "run"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reachablep"
  Proving monotonicity ...
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 1.000s elapsed time, 3.263s cpu time, 1.368s GC time
locale transition_system_initial
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
    and initial :: "'state => bool"
Proofs for inductive predicate(s) "nodesp"
  Proving monotonicity ...
### theory "Transition_Systems_and_Automata.Transition_System"
### 0.259s elapsed time, 0.714s cpu time, 0.084s GC time
class countable_complete_distrib_lattice = countable_complete_lattice +
  assumes
    "sup_ccInf": "!!B a. countable B ==> sup a (Inf B) = Inf (sup a ` B)"
  assumes
    "inf_ccSup": "!!B a. countable B ==> inf a (Sup B) = Sup (inf a ` B)"
### theory "HOL-Library.Countable_Complete_Lattices"
### 2.058s elapsed time, 4.701s cpu time, 1.457s GC time
Loading theory "HOL-Library.Order_Continuity" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat")
### theory "HOL-Library.Order_Continuity"
### 0.376s elapsed time, 0.403s cpu time, 0.000s GC time
Loading theory "HOL-Library.Extended_Nat" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams")
class infinity = type +
  fixes infinity :: "'a"
instantiation
  enat :: infinity
  infinity_enat == infinity :: enat
Proofs for inductive predicate(s) "rec_set_enat"
### No equation for constructor "Extended_Nat.infinity_class.infinity"
### in definition of function "the_enat"
consts
  the_enat :: "enat => nat"
instantiation
  enat :: zero_neq_one
  one_enat == one_class.one :: enat
  zero_enat == zero_class.zero :: enat
instantiation
  enat :: comm_monoid_add
  plus_enat == plus :: enat => enat => enat
instantiation
  enat :: {comm_semiring_1,semiring_no_zero_divisors}
  times_enat == times :: enat => enat => enat
instantiation
  enat :: minus
  minus_enat == minus :: enat => enat => enat
instantiation
  enat :: linordered_ab_semigroup_add
  less_eq_enat == less_eq :: enat => enat => bool
  less_enat == less :: enat => enat => bool
instantiation
  enat :: {order_bot,order_top}
  top_enat == top :: enat
  bot_enat == bot :: enat
structure Cancel_Enat_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
instantiation
  enat :: complete_lattice
  Inf_enat == Inf :: enat set => enat
  Sup_enat == Sup :: enat set => enat
  sup_enat == sup :: enat => enat => enat
  inf_enat == inf :: enat => enat => enat
### theory "HOL-Library.Extended_Nat"
### 0.467s elapsed time, 0.548s cpu time, 0.110s GC time
Loading theory "HOL-Library.Linear_Temporal_Logic_on_Streams" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL")
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "ev"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "alw"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "UNTIL"
  Proving monotonicity ...
Proofs for inductive predicate(s) "ev_at"
  Proving monotonicity ...
Proofs for inductive predicate(s) "suntil"
  Proving monotonicity ...
### theory "HOL-Library.Linear_Temporal_Logic_on_Streams"
### 0.820s elapsed time, 0.997s cpu time, 0.240s GC time
Loading theory "Transition_Systems_and_Automata.Sequence_LTL" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip")
### theory "Transition_Systems_and_Automata.Sequence_LTL"
### 0.376s elapsed time, 0.379s cpu time, 0.000s GC time
Loading theory "Transition_Systems_and_Automata.Sequence_Zip" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM")
Loading theory "Transition_Systems_and_Automata.Transition_System_Construction" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM")
Loading theory "Transition_Systems_and_Automata.Transition_System_Extra" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM")
### theory "Transition_Systems_and_Automata.Sequence_Zip"
### 0.486s elapsed time, 1.678s cpu time, 1.242s GC time
locale transition_system
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
locale transition_system
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
### theory "Transition_Systems_and_Automata.Transition_System_Construction"
### 0.575s elapsed time, 1.856s cpu time, 1.242s GC time
locale transition_system_initial
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
    and initial :: "'state => bool"
### theory "Transition_Systems_and_Automata.Transition_System_Extra"
### 0.638s elapsed time, 1.958s cpu time, 1.293s GC time
Loading theory "Draft.FSM" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB" via "Draft.ATC")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.FSM"
### 2.025s elapsed time, 2.240s cpu time, 0.292s GC time
Loading theory "Draft.ATC" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB")
Loading theory "Draft.FSM_Product" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite" via "Draft.ASC_LB")
Found termination order: "{}"
Proofs for inductive predicate(s) "atc_reaction"
  Proving monotonicity ...
### theory "Draft.FSM_Product"
### 1.009s elapsed time, 2.811s cpu time, 1.758s GC time
Proofs for inductive predicate(s) "subtest"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.ATC"
### 2.265s elapsed time, 4.234s cpu time, 1.968s GC time
Loading theory "Draft.ASC_LB" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency" via "Draft.ASC_Suite")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.ASC_LB"
### 1.650s elapsed time, 1.942s cpu time, 0.386s GC time
Loading theory "Draft.ASC_Suite" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare" via "Draft.ASC_Sufficiency")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order:
  "case_sum (%p. size (snd (snd (snd (snd (snd p))))))
    (case_sum (%p. size (snd (snd (snd (snd (snd p))))))
      (%p. size (snd (snd (snd (snd (snd p))))))) <*mlex*>
   case_sum (%p. size (snd (snd (snd (snd (snd p))))))
    (case_sum (%p. size (snd (snd (snd (snd p)))))
      (%p. size (snd (snd (snd (snd (snd p))))))) <*mlex*>
   case_sum (%x. 0) (case_sum (%x. 0) (%x. Suc 0)) <*mlex*> {}"
### theory "Draft.ASC_Suite"
### 7.177s elapsed time, 15.493s cpu time, 1.130s GC time
Loading theory "Draft.ASC_Sufficiency" (required by "Draft.ASC_HoareMoreTemplates" via "Draft.ASC_Hoare")
### theory "Draft.ASC_Sufficiency"
### 0.089s elapsed time, 0.089s cpu time, 0.000s GC time
Loading theory "Draft.ASC_Hoare" (required by "Draft.ASC_HoareMoreTemplates")
### theory "Draft.ASC_Hoare"
### 0.750s elapsed time, 0.920s cpu time, 0.224s GC time
Loading theory "Draft.ASC_HoareMoreTemplates"
val templateLemmas =
   [("ASC_Hoare.atc_io_reduction_on_sets_to_obs",
     "?M1.0 \<preceq>\<lbrakk>?T.?\<Omega>\<rbrakk> ?M2.0 ==>
      ?M1.0 \<preceq>\<lbrakk>?T\<rbrakk> ?M2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 5, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app (template_hole 2, template_var 3)),
           template_var 2),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 0)),
           template_var 2)))),
    ("ASC_Hoare.atc_io_reduction_on_sets_to_obs",
     "?M1.0 \<preceq>\<lbrakk>?T.?\<Omega>\<rbrakk> ?M2.0 ==>
      (UN io:L\<^sub>i\<^sub>n ?M1.0 ?T. {io} \<times> B ?M1.0 io ?\<Omega>)
      <= (UN io:L\<^sub>i\<^sub>n ?M2.0 ?T.
             {io} \<times> B ?M2.0 io ?\<Omega>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, t_empty),
             template_app
              (template_app
                (template_app (template_hole 4, template_var 3),
                 template_app (template_hole 3, template_var 3)),
               template_var 2))),
         template_app
          (template_hole 10,
           template_app
            (template_app (template_hole 9, t_empty),
             template_app
              (template_app
                (template_app (template_hole 1, template_var 0),
                 template_app (template_hole 0, template_var 0)),
               template_var 2)))))),
    ("ASC_Hoare.atc_io_reduction_on_sets_from_obs",
     "[| ?M1.0 \<preceq>\<lbrakk>?T\<rbrakk> ?M2.0;
         (UN io:L\<^sub>i\<^sub>n ?M1.0 ?T.
             {io} \<times> B ?M1.0 io ?\<Omega>)
         <= (UN io:L\<^sub>i\<^sub>n ?M2.0 ?T.
                {io} \<times> B ?M2.0 io ?\<Omega>) |]
      ==> ?M1.0 \<preceq>\<lbrakk>?T.?\<Omega>\<rbrakk> ?M2.0",
     template_implication
      ([template_inequation
         (less_equals,
          template_app
           (template_app
             (template_app (template_hole 12, template_var 3),
              template_app (template_hole 11, template_var 3)),
            template_var 2),
          template_app
           (template_app
             (template_app (template_hole 10, template_var 1),
              template_app (template_hole 9, template_var 1)),
            template_var 2)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, t_empty),
              template_app
               (template_app
                 (template_app (template_hole 12, template_var 3),
                  template_app (template_hole 11, template_var 3)),
                template_var 2))),
          template_app
           (template_hole 7,
            template_app
             (template_app (template_hole 6, t_empty),
              template_app
               (template_app
                 (template_app (template_hole 10, template_var 1),
                  template_app (template_hole 9, template_var 1)),
                template_var 2))))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 0),
             template_var 1)
           ))),
    ("ASC_Hoare.asc_algorithm_correctness",
     "{OFSM ?M1.0 &
       OFSM ?M2.0 &
       asc_fault_domain ?M2.0 ?M1.0 ?m &
       test_tools ?M2.0 ?M1.0 ?FAIL ?PM ?V ?\<Omega>} 
       tsN := {};
       cN := ?V;
       rmN := {};
       obs := L\<^sub>i\<^sub>n ?M2.0 cN;
       obsI := L\<^sub>i\<^sub>n ?M1.0 cN;
       obs\<^sub>\<Omega> :=
         (UN io:L\<^sub>i\<^sub>n ?M2.0 cN.
             {io} \<times> B ?M2.0 io ?\<Omega>);
       obsI\<^sub>\<Omega> :=
         (UN io:L\<^sub>i\<^sub>n ?M1.0 cN.
             {io} \<times> B ?M1.0 io ?\<Omega>);
       iter := 1;
       WHILE cN ~= {} &
             obsI <= obs & obsI\<^sub>\<Omega> <= obs\<^sub>\<Omega>
        INV {0 < iter &
             tsN = TS ?M2.0 ?M1.0 ?\<Omega> ?V ?m (iter - 1) &
             cN = C ?M2.0 ?M1.0 ?\<Omega> ?V ?m iter &
             rmN = RM ?M2.0 ?M1.0 ?\<Omega> ?V ?m (iter - 1) &
             obs = L\<^sub>i\<^sub>n ?M2.0 (tsN Un cN) &
             obsI = L\<^sub>i\<^sub>n ?M1.0 (tsN Un cN) &
             obs\<^sub>\<Omega> =
             (UN io:L\<^sub>i\<^sub>n ?M2.0 (tsN Un cN).
                 {io} \<times> B ?M2.0 io ?\<Omega>) &
             obsI\<^sub>\<Omega> =
             (UN io:L\<^sub>i\<^sub>n ?M1.0 (tsN Un cN).
                 {io} \<times> B ?M1.0 io ?\<Omega>) &
             OFSM ?M1.0 &
             OFSM ?M2.0 &
             asc_fault_domain ?M2.0 ?M1.0 ?m &
             test_tools ?M2.0 ?M1.0 ?FAIL ?PM ?V ?\<Omega>} 
        VAR {0} 
        DO iter := iter + 1;
           rmN :=
             {xs': cN.
              ~ ?M1.0 \<preceq>\<lbrakk>{xs'}\<rbrakk> ?M2.0 |
              (ALL io:L\<^sub>i\<^sub>n ?M1.0 {xs'}.
                  EX V'':N io ?M1.0 ?V.
                     EX S1 vs xs.
                        io = vs @ xs &
                        mcp (vs @ xs) V'' vs &
                        S1 <= nodes ?M2.0 &
                        (ALL s1:S1.
                            ALL s2:S1.
                               s1 ~= s2 -->
                               (ALL io1:RP ?M2.0 s1 vs xs V''.
                                   ALL io2:RP ?M2.0 s2 vs xs V''.
B ?M1.0 io1 ?\<Omega> ~= B ?M1.0 io2 ?\<Omega>)) &
                        ?m < LB ?M2.0 ?M1.0 vs xs (tsN Un ?V) S1 ?\<Omega>
                              V'')};
           tsN := tsN Un cN;
           cN := append_set (cN - rmN) (inputs ?M2.0) - tsN;
           obs := obs Un L\<^sub>i\<^sub>n ?M2.0 cN;
           obsI := obsI Un L\<^sub>i\<^sub>n ?M1.0 cN;
           obs\<^sub>\<Omega> :=
             obs\<^sub>\<Omega> Un
             (UN io:L\<^sub>i\<^sub>n ?M2.0 cN.
                 {io} \<times> B ?M2.0 io ?\<Omega>);
           obsI\<^sub>\<Omega> :=
             obsI\<^sub>\<Omega> Un
             (UN io:L\<^sub>i\<^sub>n ?M1.0 cN.
                 {io} \<times> B ?M1.0 io ?\<Omega>) 
        OD;
       isReduction :=
         (obsI <= obs & obsI\<^sub>\<Omega> <= obs\<^sub>\<Omega>) 
       {isReduction = ?M1.0 \<preceq> ?M2.0}",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app
                (template_hole 105,
                 template_app
                  (template_hole 104,
                   template_app (template_hole 103, t_empty))),
               template_app
                (template_app
                  (template_hole 83,
                   template_app
                    (template_hole 82,
                     template_app (template_hole 81, t_empty))),
                 template_app
                  (template_app
                    (template_hole 83,
                     template_app
                      (template_hole 82,
                       template_app (template_hole 81, t_empty))),
                   template_app
                    (template_app
                      (template_hole 83,
                       template_app
                        (template_hole 82,
                         template_app (template_hole 81, t_empty))),
                     template_app
                      (template_app
                        (template_hole 83,
                         template_app
                          (template_hole 82,
                           template_app (template_hole 81, t_empty))),
                       template_app
                        (template_app
                          (template_hole 83,
                           template_app
                            (template_hole 82,
                             template_app (template_hole 81, t_empty))),
                         template_app
                          (template_app
                            (template_hole 83,
                             template_app
                              (template_hole 82,
                               template_app (template_hole 81, t_empty))),
                           template_app
                            (template_app
                              (template_hole 83,
                               template_app
                                (template_hole 82,
                                 template_app (template_hole 81, t_empty))),
                             template_app
                              (template_app
                                (template_hole 83,
                                 template_app
                                  (template_hole 82,
                                   template_app
                                    (template_hole 81, t_empty))),
                               template_app
                                (template_app
                                  (template_hole 83,
                                   template_app
                                    (template_app
(template_hole 55,
 template_app
  (template_hole 104, template_app (template_hole 103, t_empty))),
                                     template_app
(template_app
  (template_hole 83,
   template_app
    (template_hole 82, template_app (template_hole 81, t_empty))),
 template_app
  (template_app
    (template_hole 83,
     template_app
      (template_hole 82, template_app (template_hole 81, t_empty))),
   template_app
    (template_app
      (template_hole 83,
       template_app
        (template_hole 82, template_app (template_hole 81, t_empty))),
     template_app
      (template_app
        (template_hole 83,
         template_app
          (template_hole 82, template_app (template_hole 81, t_empty))),
       template_app
        (template_app
          (template_hole 83,
           template_app
            (template_hole 82, template_app (template_hole 81, t_empty))),
         template_app
          (template_app
            (template_hole 83,
             template_app
              (template_hole 82, template_app (template_hole 81, t_empty))),
           template_app
            (template_app
              (template_hole 83,
               template_app
                (template_hole 82,
                 template_app (template_hole 81, t_empty))),
             template_app
              (template_hole 82,
               template_app (template_hole 81, t_empty))))))))))),
                                 template_app
                                  (template_hole 82,
                                   template_app
                                    (template_hole 81, t_empty)))))))))))),
             template_app
              (template_app (template_hole 18, template_hole 17),
               template_app
                (template_app (template_hole 18, template_hole 17),
                 template_app
                  (template_app (template_hole 18, template_hole 17),
                   template_app
                    (template_app (template_hole 18, template_hole 17),
                     template_app
                      (template_app (template_hole 18, template_hole 17),
                       template_app
                        (template_app (template_hole 18, template_hole 17),
                         template_app
                          (template_app
                            (template_hole 18, template_hole 17),
                           template_app
                            (template_app
                              (template_hole 18, template_hole 17),
                             template_app
                              (template_app
                                (template_hole 18,
                                 template_app
                                  (template_app
                                    (template_app
(template_hole 16,
 template_app
  (template_hole 104, template_app (template_hole 103, t_empty))),
                                     template_app
(template_hole 9, t_empty)),
                                   t_empty)),
                               template_hole 17)))))))))),
           template_app
            (template_hole 104, template_app (template_hole 103, t_empty)))
         ))]:
   (string * thm * template) list
### theory "Draft.ASC_HoareMoreTemplates"
### 0.657s elapsed time, 0.807s cpu time, 0.000s GC time
val it = (): unit
