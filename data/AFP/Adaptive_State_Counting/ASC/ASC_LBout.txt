Loading theory "HOL-Library.Adhoc_Overloading" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "Transition_Systems_and_Automata.Sequence" via "HOL-Library.Monad_Syntax")
Loading theory "HOL-Library.Function_Algebras" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
Loading theory "HOL-Library.Nat_Bijection" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.Stream")
Loading theory "HOL-Library.Infinite_Set" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity" via "HOL-Library.Countable_Complete_Lattices" via "HOL-Library.Countable_Set")
instantiation
  fun :: (type, plus) plus
  plus_fun == plus :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, zero) zero
  zero_fun == zero_class.zero :: 'a => 'b
instantiation
  fun :: (type, times) times
  times_fun == times :: ('a => 'b) => ('a => 'b) => 'a => 'b
instantiation
  fun :: (type, one) one
  one_fun == one_class.one :: 'a => 'b
signature ADHOC_OVERLOADING =
  sig
    val generic_add_overloaded: string -> Context.generic -> Context.generic
    val generic_add_variant:
       string -> term -> Context.generic -> Context.generic
    val generic_remove_overloaded:
       string -> Context.generic -> Context.generic
    val generic_remove_variant:
       string -> term -> Context.generic -> Context.generic
    val is_overloaded: Proof.context -> string -> bool
    val show_variants: bool Config.T
  end
structure Adhoc_Overloading: ADHOC_OVERLOADING
### theory "HOL-Library.Adhoc_Overloading"
### 0.101s elapsed time, 0.420s cpu time, 0.035s GC time
Loading theory "HOL-Library.Monad_Syntax" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "Transition_Systems_and_Automata.Sequence")
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
### theory "HOL-Library.Monad_Syntax"
### 0.033s elapsed time, 0.136s cpu time, 0.000s GC time
Loading theory "HOL-Library.Old_Datatype" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat" via "HOL-Library.Countable")
### theory "HOL-Library.Function_Algebras"
### 0.143s elapsed time, 0.585s cpu time, 0.035s GC time
Loading theory "HOL-Library.Set_Algebras" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ExtrEqs" via "HOL-Library.BigO")
instantiation
  set :: (plus) plus
  plus_set == plus :: 'a set => 'a set => 'a set
consts
  enumerate :: "'a set => nat => 'a"
instantiation
  set :: (times) times
  times_set == times :: 'a set => 'a set => 'a set
instantiation
  set :: (zero) zero
  zero_set == zero_class.zero :: 'a set
instantiation
  set :: (one) one
  one_set == one_class.one :: 'a set
Found termination order: "size_list size <*mlex*> {}"
### theory "HOL-Library.Infinite_Set"
### 0.319s elapsed time, 1.279s cpu time, 0.121s GC time
Loading theory "HOL-Library.Sublist" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams")
### theory "HOL-Library.Nat_Bijection"
### 0.416s elapsed time, 1.673s cpu time, 0.121s GC time
Loading theory "HOL-Library.Stream" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ExtrEqs")
### theory "HOL-Library.Set_Algebras"
### 0.271s elapsed time, 1.072s cpu time, 0.086s GC time
Loading theory "HOL-Library.Tree" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ExtrEqs" via "Draft.Templates")
signature OLD_DATATYPE =
  sig
    val check_specs: spec list -> theory -> spec list * Proof.context
    type config = {quiet: bool, strict: bool}
    val default_config: config
    type descr =
       (int * (string * dtyp list * (string * dtyp list) list)) list
    val distinct_lemma: thm
    datatype dtyp
    = DtRec of int | DtTFree of string * sort | DtType of string * dtyp list
    type info =
       {case_cong: thm,
        case_cong_weak: thm,
        case_name: string,
        case_rewrites: thm list,
        descr: descr,
        distinct: thm list,
        exhaust: thm,
        index: int,
        induct: thm,
        inducts: thm list,
        inject: thm list,
        nchotomy: thm,
        rec_names: string list,
        rec_rewrites: thm list, split: thm, split_asm: thm}
    val read_specs: spec_cmd list -> theory -> spec list * Proof.context
    type spec =
       (binding * (string * sort) list * mixfix) *
       (binding * typ list * mixfix) list
    type spec_cmd =
       (binding * (string * string option) list * mixfix) *
       (binding * string list * mixfix) list
  end
structure Old_Datatype: OLD_DATATYPE
### theory "HOL-Library.Old_Datatype"
### 0.438s elapsed time, 1.729s cpu time, 0.188s GC time
Loading theory "HOL-Library.Countable" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat")
consts
  prefixes :: "'a list => 'a list list"
Found termination order: "(%p. length (snd p)) <*mlex*> {}"
consts
  shift :: "'a list => 'a stream => 'a stream"
Proofs for coinductive predicate(s) "streamsp"
  Proving monotonicity ...
consts
  snth :: "'a stream => nat => 'a"
consts
  stake :: "nat => 'a stream => 'a list"
### Additional type variable(s) in locale specification "countable": 'a
consts
  left :: "'a tree => 'a tree"
consts
  right :: "'a tree => 'a tree"
consts
  sdrop :: "nat => 'a stream => 'a stream"
class countable = type +
  assumes "ex_inj": "EX to_nat. inj to_nat"
Found termination order: "size <*mlex*> {}"
consts
  sfilter :: "('a => bool) => 'a stream => 'a stream"
consts
  suffixes :: "'a list => 'a list list"
consts
  cycle :: "'a list => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "list_emb"
  Proving monotonicity ...
consts
  siterate :: "('a => 'a) => 'a => 'a stream"
consts
  flat :: "'a list stream => 'a stream"
Found termination order: "size <*mlex*> {}"
Proofs for inductive predicate(s) "finite_item"
  Proving monotonicity ...
consts
  sinterleave :: "'a stream => 'a stream => 'a stream"
class height = type +
  fixes height :: "'a => nat"
instantiation
  tree :: (type) height
  height_tree == height :: 'a tree => nat
consts
  szip :: "'a stream => 'b stream => ('a * 'b) stream"
consts
  smap2 :: "('a => 'b => 'c) => 'a stream => 'b stream => 'c stream"
### theory "HOL-Library.Stream"
### 1.208s elapsed time, 4.563s cpu time, 0.976s GC time
Loading theory "HOL-Library.BigO" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ExtrEqs")
Found termination order: "size <*mlex*> {}"
val old_countable_datatype_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
### ML warning (line 93 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 139 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
### ML warning (line 143 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 145 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Matches are not exhaustive.
### ML warning (line 156 of "~~/src/HOL/Tools/BNF/bnf_lfp_countable.ML"):
### Pattern is not exhaustive.
signature BNF_LFP_COUNTABLE =
  sig
    val countable_datatype_tac: Proof.context -> tactic
    val derive_encode_injectives_thms:
       Proof.context -> string list -> thm list
  end
structure BNF_LFP_Countable: BNF_LFP_COUNTABLE
val countable_datatype_tac = fn: Proof.context -> thm -> thm Seq.seq
val countable_tac = fn: Proof.context -> int -> tactic
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Countable"
### 1.466s elapsed time, 5.578s cpu time, 1.108s GC time
Loading theory "HOL-Library.Countable_Set" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity" via "HOL-Library.Countable_Complete_Lattices")
consts
  sublists :: "'a list => 'a list list"
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Sublist"
### 1.823s elapsed time, 6.989s cpu time, 1.210s GC time
Loading theory "Transition_Systems_and_Automata.Basic" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "Transition_Systems_and_Automata.Sequence")
Found termination order: "(%p. size (fst p)) <*mlex*> {}"
### theory "Transition_Systems_and_Automata.Basic"
### 0.045s elapsed time, 0.175s cpu time, 0.000s GC time
Loading theory "Transition_Systems_and_Automata.Sequence" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL")
Found termination order: "size <*mlex*> {}"
Found termination order: "(%p. size (snd p)) <*mlex*> {}"
locale comm_monoid_set
  fixes f :: "'a => 'a => 'a"  (infixl \<open>\<^bold>*\<close> 70)
    and z :: "'a"  (\<open>\<^bold>1\<close>)
  assumes "comm_monoid_set (\<^bold>*) \<^bold>1"
### theory "HOL-Library.BigO"
### 0.917s elapsed time, 3.618s cpu time, 0.428s GC time
[| inj_on ?f ?A; ?B <= ?A |] ==> inj_on ?f ?B
[| inj_on ?f ?B; ?A <= ?B |] ==> inj_on ?f ?A
### theory "HOL-Library.Countable_Set"
### 0.563s elapsed time, 2.219s cpu time, 0.266s GC time
Loading theory "HOL-Library.Countable_Complete_Lattices" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat" via "HOL-Library.Order_Continuity")
Found termination order: "size <*mlex*> {}"
### theory "HOL-Library.Tree"
### 2.397s elapsed time, 9.096s cpu time, 1.546s GC time
Loading theory "Draft.Templates" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ExtrEqs")
consts
  scan :: "('a => 'b => 'b) => 'a list => 'b => 'b list"
datatype template_term
=
     t_empty
   | template_app of template_term * template_term
   | template_hole of int
   | template_var of int
datatype sign
= equals | greater_equals | greater_than | less_equals | less_than
datatype template
=
     template_bimplication of template * template
   | template_dunno
   | template_equation of template_term * template_term
   | template_implication of template list * template
   | template_inequation of sign * template_term * template_term
   | template_negation of template
   | template_predicate of template_term
constructor t_empty: template_term
constructor template_app: template_term * template_term -> template_term
constructor template_hole: int -> template_term
constructor template_var: int -> template_term
constructor equals: sign
constructor greater_equals: sign
constructor greater_than: sign
constructor less_equals: sign
constructor less_than: sign
constructor template_bimplication: template * template -> template
constructor template_dunno: template
constructor template_equation: template_term * template_term -> template
constructor template_implication: template list * template -> template
constructor template_inequation:
   sign * template_term * template_term -> template
constructor template_negation: template -> template
constructor template_predicate: template_term -> template
val vfs = fn: term -> (indexname * typ) list * (string * typ) list
val indexOf = fn: ''a list -> ''a -> int -> int
val has_eq = fn: term -> bool
val term2template = fn:
   (indexname * typ) list -> (string * typ) list -> term -> template_term
val lemma2predicate = fn: term -> term -> template
val makeTemplatewithContext = fn: term -> term -> template
val lemma2template = fn: term -> template
val thm2template = fn: thm -> template
val tterm2string = fn: template_term -> string
val template2string = fn: template -> string
val t = "height ?t <= size ?t": thm
val th =
   Const ("HOL.Trueprop", "bool => prop") $
     (Const ("Orderings.ord_class.less_eq", "nat => nat => bool") $
       (Const ("Tree.height_class.height", "?'a tree => nat") $
         Var (("t", 0), "?'a tree")) $
       (Const ("Nat.size_class.size", "?'a tree => nat") $
         Var (("t", 0), "?'a tree"))):
   term
### theory "Draft.Templates"
### 0.086s elapsed time, 0.294s cpu time, 0.077s GC time
Loading theory "Draft.ExtrEqs" (required by "Draft.ASC_LBMoreTemplates")
consts
  sscan :: "('a => 'b => 'b) => 'a stream => 'b => 'b stream"
consts
  stranspose :: "'a stream list => 'a list stream"
Proofs for coinductive predicate(s) "sdistinct"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "sascending"
  Proving monotonicity ...
class countable_complete_lattice = Inf + Sup + lattice + bot + top +
  assumes "ccInf_lower": "!!A x. [| countable A; x : A |] ==> Inf A <= x"
  assumes
    "ccInf_greatest":
      "!!A z. [| countable A; !!x. x : A ==> z <= x |] ==> z <= Inf A"
  assumes "ccSup_upper": "!!A x. [| countable A; x : A |] ==> x <= Sup A"
  assumes
    "ccSup_least":
      "!!A z. [| countable A; !!x. x : A ==> x <= z |] ==> Sup A <= z"
  assumes "ccInf_empty": "Inf {} = top"
  assumes "ccSup_empty": "Sup {} = bot"
Proofs for coinductive predicate(s) "sdescending"
  Proving monotonicity ...
### theory "Transition_Systems_and_Automata.Sequence"
### 0.965s elapsed time, 3.359s cpu time, 0.474s GC time
Loading theory "Transition_Systems_and_Automata.Transition_System" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM")
locale transition_system_universal
  fixes execute :: "'transition => 'state => 'state"
locale transition_system
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
Proofs for inductive predicate(s) "path"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "run"
  Proving monotonicity ...
Proofs for inductive predicate(s) "reachablep"
  Proving monotonicity ...
locale transition_system_initial
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
    and initial :: "'state => bool"
Proofs for inductive predicate(s) "nodesp"
  Proving monotonicity ...
### theory "Transition_Systems_and_Automata.Transition_System"
### 0.257s elapsed time, 0.781s cpu time, 0.064s GC time
val eqpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Var (("_dummy_", 2), "?'a"))
       ):
   term Find_Theorems.criterion
val badeqpattern = Pattern (Const ("Pure.eq", "?'a => ?'a => prop")):
   term Find_Theorems.criterion
val undefpattern =
   Pattern
    (
       Const ("HOL.Trueprop", "bool => prop") $
         (Const ("HOL.eq", "?'a => ?'a => bool") $
           Var (("_dummy_", 1), "?'a") $ Const ("HOL.undefined", "?'a"))
       ):
   term Find_Theorems.criterion
val thmpattern =
   Pattern
    (Const ("HOL.Trueprop", "bool => prop") $ Var (("_dummy_", 1), "bool")):
   term Find_Theorems.criterion
val badnames =
   ["*nitpick*", "*Nitpick*", "*full_exhaustive*", "*_def*", "Enum.finite*",
    "*Quickcheck*", "ATP*", "*Nunchaku*", "*Code*", "*BNF*", "*SMT*",
    "*.*.*"]:
   string list
val unwanted_names =
   [(false, Name "*nitpick*"), (false, Name "*Nitpick*"),
    (false, Name "*full_exhaustive*"), (false, Name "*_def*"),
    (false, Name "Enum.finite*"), (false, Name "*Quickcheck*"),
    (false, Name "ATP*"), (false, Name "*Nunchaku*"),
    (false, Name "*Code*"), (false, Name "*BNF*"), (false, Name "*SMT*"),
    (false, Name "*.*.*")]:
   (bool * term Find_Theorems.criterion) list
val has_vars = fn: term -> bool
val get_all_eqs = fn: string -> Proof.context -> (string * thm) list
val get_all_thms = fn: string -> Proof.context -> (string * thm) list
val get_noneq_thms = fn: string -> Proof.context -> (string * thm) list
val template_eqs = fn:
   string -> Proof.context -> (string * thm * template) list
val template_thms = fn:
   string -> Proof.context -> (string * thm * template) list
### theory "Draft.ExtrEqs"
### 0.655s elapsed time, 1.892s cpu time, 0.166s GC time
class countable_complete_distrib_lattice = countable_complete_lattice +
  assumes
    "sup_ccInf": "!!B a. countable B ==> sup a (Inf B) = Inf (sup a ` B)"
  assumes
    "inf_ccSup": "!!B a. countable B ==> inf a (Sup B) = Sup (inf a ` B)"
### theory "HOL-Library.Countable_Complete_Lattices"
### 1.753s elapsed time, 3.691s cpu time, 0.364s GC time
Loading theory "HOL-Library.Order_Continuity" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams" via "HOL-Library.Extended_Nat")
### theory "HOL-Library.Order_Continuity"
### 0.384s elapsed time, 0.435s cpu time, 0.045s GC time
Loading theory "HOL-Library.Extended_Nat" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL" via "HOL-Library.Linear_Temporal_Logic_on_Streams")
class infinity = type +
  fixes infinity :: "'a"
instantiation
  enat :: infinity
  infinity_enat == infinity :: enat
Proofs for inductive predicate(s) "rec_set_enat"
### No equation for constructor "Extended_Nat.infinity_class.infinity"
### in definition of function "the_enat"
consts
  the_enat :: "enat => nat"
instantiation
  enat :: zero_neq_one
  one_enat == one_class.one :: enat
  zero_enat == zero_class.zero :: enat
instantiation
  enat :: comm_monoid_add
  plus_enat == plus :: enat => enat => enat
instantiation
  enat :: {comm_semiring_1,semiring_no_zero_divisors}
  times_enat == times :: enat => enat => enat
instantiation
  enat :: minus
  minus_enat == minus :: enat => enat => enat
instantiation
  enat :: linordered_ab_semigroup_add
  less_eq_enat == less_eq :: enat => enat => bool
  less_enat == less :: enat => enat => bool
instantiation
  enat :: {order_bot,order_top}
  top_enat == top :: enat
  bot_enat == bot :: enat
structure Cancel_Enat_Common:
  sig
    val dest_sum: term -> term list
    val dest_summing: term * term list -> term list
    val find_first: term -> term list -> term list
    val find_first_t: term list -> term -> term list -> term list
    val mk_eq: term * term -> term
    val mk_sum: typ -> term list -> term
    val norm_ss: simpset
    val norm_tac: Proof.context -> tactic
    val simplify_meta_eq: Proof.context -> thm -> thm -> thm
    val trans_tac: Proof.context -> thm option -> tactic
  end
structure Eq_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Le_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
structure Less_Enat_Cancel:
  sig val proc: Proof.context -> term -> thm option end
instantiation
  enat :: complete_lattice
  Inf_enat == Inf :: enat set => enat
  Sup_enat == Sup :: enat set => enat
  sup_enat == sup :: enat => enat => enat
  inf_enat == inf :: enat => enat => enat
### theory "HOL-Library.Extended_Nat"
### 0.451s elapsed time, 0.494s cpu time, 0.059s GC time
Loading theory "HOL-Library.Linear_Temporal_Logic_on_Streams" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip" via "Transition_Systems_and_Automata.Sequence_LTL")
Found termination order: "{}"
Found termination order: "{}"
Proofs for inductive predicate(s) "ev"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "alw"
  Proving monotonicity ...
Proofs for coinductive predicate(s) "UNTIL"
  Proving monotonicity ...
Proofs for inductive predicate(s) "ev_at"
  Proving monotonicity ...
Proofs for inductive predicate(s) "suntil"
  Proving monotonicity ...
### theory "HOL-Library.Linear_Temporal_Logic_on_Streams"
### 1.096s elapsed time, 1.878s cpu time, 1.094s GC time
Loading theory "Transition_Systems_and_Automata.Sequence_LTL" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM" via "Transition_Systems_and_Automata.Sequence_Zip")
### theory "Transition_Systems_and_Automata.Sequence_LTL"
### 0.440s elapsed time, 0.470s cpu time, 0.039s GC time
Loading theory "Transition_Systems_and_Automata.Sequence_Zip" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM")
Loading theory "Transition_Systems_and_Automata.Transition_System_Construction" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM")
Loading theory "Transition_Systems_and_Automata.Transition_System_Extra" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC" via "Draft.FSM")
### theory "Transition_Systems_and_Automata.Sequence_Zip"
### 0.130s elapsed time, 0.395s cpu time, 0.059s GC time
locale transition_system
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
locale transition_system
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
### theory "Transition_Systems_and_Automata.Transition_System_Construction"
### 0.232s elapsed time, 0.606s cpu time, 0.059s GC time
locale transition_system_initial
  fixes execute :: "'transition => 'state => 'state"
    and enabled :: "'transition => 'state => bool"
    and initial :: "'state => bool"
### theory "Transition_Systems_and_Automata.Transition_System_Extra"
### 0.263s elapsed time, 0.639s cpu time, 0.059s GC time
Loading theory "Draft.FSM" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB" via "Draft.ATC")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.FSM"
### 2.307s elapsed time, 3.379s cpu time, 1.498s GC time
Loading theory "Draft.ATC" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB")
Loading theory "Draft.FSM_Product" (required by "Draft.ASC_LBMoreTemplates" via "Draft.ASC_LB")
Found termination order: "{}"
Proofs for inductive predicate(s) "atc_reaction"
  Proving monotonicity ...
### theory "Draft.FSM_Product"
### 0.571s elapsed time, 1.242s cpu time, 0.216s GC time
Proofs for inductive predicate(s) "subtest"
  Proving monotonicity ...
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.ATC"
### 2.199s elapsed time, 4.036s cpu time, 1.817s GC time
Loading theory "Draft.ASC_LB" (required by "Draft.ASC_LBMoreTemplates")
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
Found termination order: "{}"
### theory "Draft.ASC_LB"
### 1.541s elapsed time, 1.786s cpu time, 0.330s GC time
Loading theory "Draft.ASC_LBMoreTemplates"
val templateLemmas =
   [("ASC_LB.finite_R", "finite (R ?M ?s ?vs ?xs)",
     template_predicate
      (
         template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 0, template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0))
         )),
    ("ASC_LB.perm_empty",
     "[| is_det_state_cover ?M2.0 ?V; ?V'' : Perm ?V ?M1.0 |]
      ==> [] : ?V''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_app
               (template_app (template_hole 2, template_var 2),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_hole 0),
             template_var 1)
           ))),
    ("ASC_LB.perm_inputs",
     "[| ?V'' : Perm ?V ?M; ?vs : ?V'' |] ==> map fst ?vs : ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 3),
              template_app
               (template_app (template_hole 4, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 1, template_hole 0),
                 template_var 0)),
             template_var 2)
           ))),
    ("ASC_LB.card_union_of_singletons",
     "ALL S:?SS. EX t. S = {t} ==> card (\<Union> ?SS) = card ?SS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 0)),
         template_app (template_hole 0, template_var 0)))),
    ("ASC_LB.asc_fault_domain_props",
     "asc_fault_domain ?M2.0 ?M1.0 ?m ==> inputs ?M2.0 = inputs ?M1.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 2)),
                  template_app (template_hole 3, template_var 1))),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 1))),
                template_var 0))
            )],
       template_equation
        (template_app (template_hole 4, template_var 2),
         template_app (template_hole 3, template_var 1)))),
    ("ASC_LB.asc_fault_domain_props",
     "asc_fault_domain ?M2.0 ?M1.0 ?m ==> |?M1.0| <= ?m",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 2)),
                  template_app (template_hole 3, template_var 1))),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 1))),
                template_var 0))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0))),
    ("ASC_LB.perm_language",
     "[| ?V'' : Perm ?V ?M; ?vs : ?V'' |] ==> ?vs : L ?M",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_var 3)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 0),
             template_app
              (template_app (template_hole 1, template_var 1),
               template_app (template_hole 0, template_var 1)))
           ))),
    ("ASC_LB.perm_elem_finite",
     "[| is_det_state_cover ?M2.0 ?V; well_formed ?M2.0;
         ?V'' : Perm ?V ?M1.0 |]
      ==> finite ?V''",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_var 2)
            ),
        template_predicate (template_app (template_hole 3, template_var 3)),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app
               (template_app (template_hole 1, template_var 2),
                template_var 0))
            )],
       template_predicate
        (template_app (template_hole 0, template_var 1)))),
    ("ASC_LB.finite_RP",
     "[| is_det_state_cover ?M2.0 ?V; ?V'' : Perm ?V ?M1.0 |]
      ==> finite (RP ?M2.0 ?s ?vs ?xs ?V'')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 4),
              template_app
               (template_app (template_hole 2, template_var 5),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 0, template_var 6),
                     template_var 2),
                   template_var 1),
                 template_var 0),
               template_var 4))
           ))),
    ("ASC_LB.R_state_component_2",
     "[| ?io : R ?M2.0 ?s ?vs ?xs; observable ?M2.0 |]
      ==> io_targets ?M2.0 (initial ?M2.0) ?io = {?s}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app
                 (template_app
                   (template_app (template_hole 6, template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (template_app (template_hole 5, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 3),
             template_app (template_hole 2, template_var 3)),
           template_var 4),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_hole 0)))),
    ("ASC_LB.RP_state_component_2",
     "[| ?io : RP ?M2.0 ?s ?vs ?xs ?V''; observable ?M2.0 |]
      ==> io_targets ?M2.0 (initial ?M2.0) ?io = {?s}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 5),
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 6, template_var 4),
                      template_var 3),
                    template_var 2),
                  template_var 1),
                template_var 0))
            ),
        template_predicate
         (template_app (template_hole 5, template_var 4))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 3, template_var 4),
             template_app (template_hole 2, template_var 4)),
           template_var 5),
         template_app
          (template_app (template_hole 1, template_var 3),
           template_hole 0)))),
    ("ASC_LB.LB_count_helper_RP_card_union",
     "[| observable ?M2.0; ?s1.0 ~= ?s2.0 |]
      ==> RP ?M2.0 ?s1.0 ?vs ?xs ?V'' Int RP ?M2.0 ?s2.0 ?vs ?xs ?V'' = {}",
     template_implication
      ([template_predicate (template_app (template_hole 6, template_var 5)),
        template_negation
         (template_equation (template_var 4, template_var 3))],
       template_equation
        (template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 5),
                     template_var 4),
                   template_var 2),
                 template_var 1),
               template_var 0)),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 5),
                   template_var 3),
                 template_var 2),
               template_var 1),
             template_var 0)),
         template_hole 0))),
    ("ASC_LB.finite_insert_card",
     "[| finite (\<Union> ?SS); finite ?S; ?S Int \<Union> ?SS = {} |]
      ==> card (\<Union> (insert ?S ?SS)) = card (\<Union> ?SS) + card ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_hole 8,
              template_app (template_hole 7, template_var 1))
            ),
        template_predicate (template_app (template_hole 8, template_var 0)),
        template_equation
         (template_app
           (template_app (template_hole 5, template_var 0),
            template_app (template_hole 7, template_var 1)),
          template_hole 4)],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_hole 7,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_var 1))),
         template_app
          (template_app
            (template_hole 0,
             template_app
              (template_hole 2,
               template_app (template_hole 7, template_var 1))),
           template_app (template_hole 2, template_var 0))))),
    ("ASC_LB.test_tools_props",
     "[| test_tools ?M2.0 ?M1.0 ?FAIL ?PM ?V ?\<Omega>;
         asc_fault_domain ?M2.0 ?M1.0 ?m |]
      ==> applicable_set ?M2.0 ?\<Omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 2)),
                template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 6)),
                  template_app (template_hole 3, template_var 5))),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 5))),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 6, template_var 6), template_var 1)
           ))),
    ("ASC_LB.test_tools_props",
     "[| test_tools ?M2.0 ?M1.0 ?FAIL ?PM ?V ?\<Omega>;
         asc_fault_domain ?M2.0 ?M1.0 ?m |]
      ==> applicable_set ?M1.0 ?\<Omega>",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 9, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 10,
                  template_app
                   (template_app (template_hole 8, template_var 6),
                    template_var 2)),
                template_app
                 (template_app (template_hole 7, template_var 6),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app
                   (template_hole 6,
                    template_app (template_hole 5, template_var 6)),
                  template_app (template_hole 4, template_var 5))),
              template_app
               (template_app
                 (template_hole 3,
                  template_app
                   (template_hole 2,
                    template_app (template_hole 1, template_var 5))),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 0, template_var 5), template_var 1)
           ))),
    ("ASC_LB.test_tools_props",
     "[| test_tools ?M2.0 ?M1.0 ?FAIL ?PM ?V ?\<Omega>;
         asc_fault_domain ?M2.0 ?M1.0 ?m |]
      ==> is_det_state_cover ?M2.0 ?V",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 2)),
                template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 6)),
                  template_app (template_hole 3, template_var 5))),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 5))),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 7, template_var 6), template_var 2)
           ))),
    ("ASC_LB.LB_count_helper_D_states",
     "[| observable ?M; ?RS : D ?M ?T ?\<Omega>;
         !!q. q : nodes ?M & ?RS = IO_set ?M q ?\<Omega> ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_app
               (template_app
                 (template_app (template_hole 6, template_var 4),
                  template_var 2),
                template_var 1))
            ),
        template_predicate (template_app (template_hole 5, t_empty))],
       template_predicate (template_var 0))),
    ("ASC_LB.perm_inputs_diff",
     "[| ?V'' : Perm ?V ?M; ?vs1.0 : ?V''; ?vs2.0 : ?V'';
         ?vs1.0 ~= ?vs2.0 |]
      ==> map fst ?vs1.0 ~= map fst ?vs2.0",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 4),
              template_app
               (template_app (template_hole 6, template_var 3),
                template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_var 4)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 1),
             template_app
              (template_app (template_hole 1, template_hole 0),
               template_var 0))
           ))),
    ("ASC_LB.R_union_card_is_suffix_length",
     "[| OFSM ?M2.0; ?io @ ?xs : L ?M2.0 |]
      ==> (SUM q:nodes ?M2.0. card (R ?M2.0 q ?io ?xs)) = length ?xs",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 2)),
              template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 11, template_var 2)),
                template_app (template_hole 10, template_var 2)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app (template_hole 8, template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 7, template_var 2),
                template_app (template_hole 6, template_var 2)))
            )],
       template_equation
        (template_app
          (template_app (template_hole 4, t_empty),
           template_app (template_hole 1, template_var 2)),
         template_app (template_hole 0, template_var 0)))),
    ("ASC_LB.test_tools_props",
     "[| test_tools ?M2.0 ?M1.0 ?FAIL ?PM ?V ?\<Omega>;
         asc_fault_domain ?M2.0 ?M1.0 ?m |]
      ==> productF ?M2.0 ?M1.0 ?FAIL ?PM",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 6),
                      template_var 5),
                    template_var 4),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 7, template_var 6),
                    template_var 2)),
                template_app
                 (template_app (template_hole 6, template_var 6),
                  template_var 1)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 9,
                template_app
                 (template_app
                   (template_hole 5,
                    template_app (template_hole 4, template_var 6)),
                  template_app (template_hole 3, template_var 5))),
              template_app
               (template_app
                 (template_hole 2,
                  template_app
                   (template_hole 1,
                    template_app (template_hole 0, template_var 5))),
                template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 8, template_var 6),
                 template_var 5),
               template_var 4),
             template_var 3)
           ))),
    ("ASC_LB.perm_nonempty",
     "[| is_det_state_cover ?M2.0 ?V; OFSM ?M1.0; OFSM ?M2.0;
         inputs ?M1.0 = inputs ?M2.0 |]
      ==> Perm ?V ?M1.0 ~= {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 12, template_var 0)),
              template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 11, template_var 0)),
                template_app (template_hole 10, template_var 0)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app (template_hole 9, template_var 2)),
              template_app
               (template_app
                 (template_hole 13,
                  template_app (template_hole 8, template_var 2)),
                template_app (template_hole 7, template_var 2)))
            ),
        template_equation
         (template_app (template_hole 5, template_var 0),
          template_app (template_hole 4, template_var 2))],
       template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 1, template_var 1),
               template_var 0),
             template_hole 0)
           ))),
    ("ASC_LB.card_union_of_distinct",
     "[| ALL S1:?SS. ALL S2:?SS. S1 = S2 | ?f S1 Int ?f S2 = {}; finite ?SS;
         ALL S:?SS. ?f S ~= {} |]
      ==> card (?f ` ?SS) = card ?SS",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1), t_empty)
            ),
        template_predicate (template_app (template_hole 5, template_var 1)),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1), t_empty)
            )],
       template_equation
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 0),
             template_var 1)),
         template_app (template_hole 0, template_var 1)))),
    ("ASC_LB.R_state_repetition_distribution",
     "[| OFSM ?M; Suc (|?M| * ?m) <= length ?xs; ?vs @ ?xs : L ?M |]
      ==> EX q:nodes ?M. ?m < card (R ?M q ?vs ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 3)),
              template_app
               (template_app
                 (template_hole 17,
                  template_app (template_hole 15, template_var 3)),
                template_app (template_hole 14, template_var 3)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 12,
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_hole 10,
                  template_app (template_hole 9, template_var 3))),
              template_var 2)),
          template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 1)),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 9, template_var 3)),
             t_empty)
           ))),
    ("ASC_LB.RP_io_targets_finite_M1",
     "[| ?vs @ ?xs : L ?M1.0 Int L ?M2.0; observable ?M1.0;
         is_det_state_cover ?M2.0 ?V; ?V'' : Perm ?V ?M1.0 |]
      ==> finite
           (\<Union>
             (io_targets ?M1.0 (initial ?M1.0) `
              RP ?M2.0 ?s ?vs ?xs ?V''))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_app (template_hole 14, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 13,
                  template_app
                   (template_app (template_hole 12, template_var 4),
                    template_app (template_hole 11, template_var 4))),
                template_app
                 (template_app (template_hole 10, template_var 3),
                  template_app (template_hole 9, template_var 3))))
            ),
        template_predicate (template_app (template_hole 8, template_var 4)),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_app
               (template_app (template_hole 5, template_var 2),
                template_var 4))
            )],
       template_predicate
        (
           template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_app
                  (template_hole 2,
                   template_app
                    (template_app (template_hole 1, template_var 4),
                     template_app (template_hole 11, template_var 4))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 3),
                         template_var 0),
                       template_var 6),
                     template_var 5),
                   template_var 1))))
           ))),
    ("ASC_LB.RP_union_card_is_suffix_length",
     "[| OFSM ?M2.0; ?io @ ?xs : L ?M2.0; is_det_state_cover ?M2.0 ?V;
         ?V'' : Perm ?V ?M1.0 |]
      ==> length ?xs
          <= (SUM q:nodes ?M2.0. card (RP ?M2.0 q ?io ?xs ?V''))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 15, template_var 5)),
              template_app
               (template_app
                 (template_hole 16,
                  template_app (template_hole 14, template_var 5)),
                template_app (template_hole 13, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 12,
                template_app
                 (template_app (template_hole 11, template_var 4),
                  template_var 3)),
              template_app
               (template_app (template_hole 10, template_var 5),
                template_app (template_hole 9, template_var 5)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 0))
            )],
       template_inequation
        (less_equals, template_app (template_hole 4, template_var 3),
         template_app
          (template_app (template_hole 3, t_empty),
           template_app (template_hole 0, template_var 5))))),
    ("ASC_LB.RP_union_card_is_suffix_length",
     "[| OFSM ?M2.0; ?io @ ?xs : L ?M2.0; is_det_state_cover ?M2.0 ?V;
         ?V'' : Perm ?V ?M1.0 |]
      ==> card (R ?M2.0 ?q ?io ?xs) <= card (RP ?M2.0 ?q ?io ?xs ?V'')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 14,
                template_app (template_hole 13, template_var 6)),
              template_app
               (template_app
                 (template_hole 14,
                  template_app (template_hole 12, template_var 6)),
                template_app (template_hole 11, template_var 6)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 10,
                template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 4)),
              template_app
               (template_app (template_hole 8, template_var 6),
                template_app (template_hole 7, template_var 6)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 2),
              template_app
               (template_app (template_hole 4, template_var 3),
                template_var 1))
            )],
       template_inequation
        (less_equals,
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 6),
                 template_var 0),
               template_var 5),
             template_var 4)),
         template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 0, template_var 6),
                   template_var 0),
                 template_var 5),
               template_var 4),
             template_var 2))))),
    ("ASC_LB.R_state_repetition_via_long_sequence",
     "[| OFSM ?M; |?M| <= ?m; Suc (?m * ?m) <= length ?xs;
         ?vs @ ?xs : L ?M |]
      ==> EX q:nodes ?M. ?m < card (R ?M q ?vs ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 17,
                template_app (template_hole 16, template_var 3)),
              template_app
               (template_app
                 (template_hole 17,
                  template_app (template_hole 15, template_var 3)),
                template_app (template_hole 14, template_var 3)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_hole 12,
            template_app (template_hole 11, template_var 3)),
          template_var 2),
        template_inequation
         (less_equals,
          template_app
           (template_hole 10,
            template_app
             (template_app (template_hole 9, template_var 2),
              template_var 2)),
          template_app (template_hole 8, template_var 1)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 7,
                template_app
                 (template_app (template_hole 6, template_var 0),
                  template_var 1)),
              template_app
               (template_app (template_hole 5, template_var 3),
                template_app (template_hole 4, template_var 3)))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 11, template_var 3)),
             t_empty)
           ))),
    ("ASC_LB.LB_count_helper_RP_inj",
     "(!!f. [| ALL q:UN s:?S.
                        \<Union>
                         (io_targets ?M1.0 (initial ?M1.0) `
                          RP ?M2.0 s ?vs ?xs ?V'').
                  f q : nodes ?M1.0;
               inj_on f
                (UN s:?S.
                    \<Union>
                     (io_targets ?M1.0 (initial ?M1.0) `
                      RP ?M2.0 s ?vs ?xs ?V'')) |]
            ==> ?thesis) ==>
      ?thesis",
     template_implication
      ([template_predicate (template_app (template_hole 11, t_empty))],
       template_predicate (template_var 0))),
    ("ASC_LB.RP_from_R",
     "[| is_det_state_cover ?M2.0 ?V; ?V'' : Perm ?V ?M1.0 |]
      ==> RP ?M2.0 ?s ?vs ?xs ?V'' = R ?M2.0 ?s ?vs ?xs |
          (EX vs':?V''.
              vs' ~: R ?M2.0 ?s ?vs ?xs &
              RP ?M2.0 ?s ?vs ?xs ?V'' = insert vs' (R ?M2.0 ?s ?vs ?xs))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 6),
              template_var 5)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 4),
              template_app
               (template_app (template_hole 9, template_var 5),
                template_var 3))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 8,
               template_app
                (template_app
                  (template_hole 7,
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 6, template_var 6),
                           template_var 2),
                         template_var 1),
                       template_var 0),
                     template_var 4)),
                 template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 5, template_var 6),
                       template_var 2),
                     template_var 1),
                   template_var 0))),
             template_app
              (template_app (template_hole 4, template_var 4), t_empty))
           ))),
    ("ASC_LB.LB_count_helper_LB2",
     "[| observable ?M1.0;
         IO_set ?M1.0 ?q ?\<Omega>
         : D ?M1.0 ?T ?\<Omega> -
           {uu_.
            EX xs' s'.
               uu_ = B ?M1.0 xs' ?\<Omega> &
               s' : ?S & xs' : RP ?M2.0 s' ?vs ?xs ?V''} |]
      ==> ?q ~: (UN s:?S.
                    \<Union>
                     (io_targets ?M1.0 (initial ?M1.0) `
                      RP ?M2.0 s ?vs ?xs ?V''))",
     template_implication
      ([template_predicate
         (template_app (template_hole 20, template_var 8)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 19,
                template_app
                 (template_app
                   (template_app (template_hole 18, template_var 8),
                    template_var 7),
                  template_var 6)),
              template_app
               (template_app
                 (template_hole 17,
                  template_app
                   (template_app
                     (template_app (template_hole 16, template_var 8),
                      template_var 5),
                    template_var 6)),
                template_app (template_hole 15, t_empty)))
            )],
       template_negation
        (
           template_predicate
            (
               template_app
                (template_app (template_hole 5, template_var 7),
                 template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, t_empty),
                     template_var 4)))
               )
           ))),
    ("ASC_LB.RP_io_targets_finite_PM",
     "[| ?vs @ ?xs : L ?M1.0 Int L ?M2.0; observable ?M1.0;
         observable ?M2.0; well_formed ?M1.0; well_formed ?M2.0;
         productF ?M2.0 ?M1.0 ?FAIL ?PM; is_det_state_cover ?M2.0 ?V;
         ?V'' : Perm ?V ?M1.0 |]
      ==> finite
           (\<Union>
             (io_targets ?PM (initial ?PM) ` RP ?M2.0 ?s ?vs ?xs ?V''))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 20,
                template_app
                 (template_app (template_hole 19, template_var 8),
                  template_var 7)),
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_app (template_hole 17, template_var 6),
                    template_app (template_hole 16, template_var 6))),
                template_app
                 (template_app (template_hole 15, template_var 5),
                  template_app (template_hole 14, template_var 5))))
            ),
        template_predicate
         (template_app (template_hole 13, template_var 6)),
        template_predicate
         (template_app (template_hole 12, template_var 5)),
        template_predicate
         (template_app (template_hole 11, template_var 6)),
        template_predicate
         (template_app (template_hole 10, template_var 5)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 9, template_var 5),
                  template_var 6),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 5),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 7, template_var 1),
              template_app
               (template_app (template_hole 6, template_var 2),
                template_var 6))
            )],
       template_predicate
        (
           template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 3),
                     template_app (template_hole 1, template_var 3))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 0, template_var 5),
                         template_var 0),
                       template_var 8),
                     template_var 7),
                   template_var 1))))
           ))),
    ("ASC_LB.perm_elem",
     "[| is_det_state_cover ?M2.0 ?V; OFSM ?M1.0; OFSM ?M2.0;
         inputs ?M1.0 = inputs ?M2.0; ?vs : ?V;
         ?vs' : language_state_for_input ?M1.0 (initial ?M1.0) ?vs;
         !!V''. [| V'' : Perm ?V ?M1.0; ?vs' : V'' |] ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 15, template_var 3)),
              template_app
               (template_app
                 (template_hole 16,
                  template_app (template_hole 14, template_var 3)),
                template_app (template_hole 13, template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 16,
                template_app (template_hole 12, template_var 5)),
              template_app
               (template_app
                 (template_hole 16,
                  template_app (template_hole 11, template_var 5)),
                template_app (template_hole 10, template_var 5)))
            ),
        template_equation
         (template_app (template_hole 8, template_var 3),
          template_app (template_hole 7, template_var 5)),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 3),
                  template_app (template_hole 3, template_var 3)),
                template_var 2))
            ),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_var 0))),
    ("ASC_LB.RP_state_repetition_distribution_productF",
     "[| OFSM ?M2.0; OFSM ?M1.0; |?M2.0| * ?m <= length ?xs; |?M1.0| <= ?m;
         ?vs @ ?xs : L ?M2.0 Int L ?M1.0; is_det_state_cover ?M2.0 ?V;
         ?V'' : Perm ?V ?M1.0 |]
      ==> EX q:nodes ?M2.0. ?m < card (RP ?M2.0 q ?vs ?xs ?V'')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 27,
                template_app (template_hole 26, template_var 6)),
              template_app
               (template_app
                 (template_hole 27,
                  template_app (template_hole 25, template_var 6)),
                template_app (template_hole 24, template_var 6)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 27,
                template_app (template_hole 23, template_var 5)),
              template_app
               (template_app
                 (template_hole 27,
                  template_app (template_hole 22, template_var 5)),
                template_app (template_hole 21, template_var 5)))
            ),
        template_inequation
         (less_equals,
          template_app
           (template_app
             (template_hole 19,
              template_app
               (template_hole 18,
                template_app (template_hole 17, template_var 6))),
            template_var 4),
          template_app (template_hole 16, template_var 3)),
        template_inequation
         (less_equals,
          template_app
           (template_hole 15,
            template_app (template_hole 14, template_var 5)),
          template_var 4),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 13,
                template_app
                 (template_app (template_hole 12, template_var 2),
                  template_var 3)),
              template_app
               (template_app
                 (template_hole 11,
                  template_app
                   (template_app (template_hole 10, template_var 6),
                    template_app (template_hole 9, template_var 6))),
                template_app
                 (template_app (template_hole 8, template_var 5),
                  template_app (template_hole 7, template_var 5))))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 6),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 0),
              template_app
               (template_app (template_hole 4, template_var 1),
                template_var 5))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 3,
               template_app (template_hole 17, template_var 6)),
             t_empty)
           ))),
    ("ASC_LB.RP_io_targets_split",
     "[| ?vs @ ?xs : L ?M1.0 Int L ?M2.0; observable ?M1.0;
         observable ?M2.0; well_formed ?M1.0; well_formed ?M2.0;
         productF ?M2.0 ?M1.0 ?FAIL ?PM; is_det_state_cover ?M2.0 ?V;
         ?V'' : Perm ?V ?M1.0; ?io : RP ?M2.0 ?s ?vs ?xs ?V'' |]
      ==> io_targets ?PM (initial ?PM) ?io =
          io_targets ?M2.0 (initial ?M2.0) ?io \<times>
          io_targets ?M1.0 (initial ?M1.0) ?io",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 21,
                template_app
                 (template_app (template_hole 20, template_var 9),
                  template_var 8)),
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_app (template_hole 18, template_var 7),
                    template_app (template_hole 17, template_var 7))),
                template_app
                 (template_app (template_hole 16, template_var 6),
                  template_app (template_hole 15, template_var 6))))
            ),
        template_predicate
         (template_app (template_hole 14, template_var 7)),
        template_predicate
         (template_app (template_hole 13, template_var 6)),
        template_predicate
         (template_app (template_hole 12, template_var 7)),
        template_predicate
         (template_app (template_hole 11, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 6),
                  template_var 7),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 6),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 3),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 21, template_var 1),
              template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 6, template_var 6),
                      template_var 0),
                    template_var 9),
                  template_var 8),
                template_var 2))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 4, template_var 4),
             template_app (template_hole 3, template_var 4)),
           template_var 1),
         template_app
          (template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 6),
                 template_app (template_hole 15, template_var 6)),
               template_var 1)),
           t_empty)))),
    ("ASC_LB.LB_count_helper_RP_disjoint_and_cards",
     "[| ?vs @ ?xs : L ?M1.0 Int L ?M2.0; observable ?M1.0;
         observable ?M2.0; well_formed ?M1.0; well_formed ?M2.0;
         productF ?M2.0 ?M1.0 ?FAIL ?PM; is_det_state_cover ?M2.0 ?V;
         ?V'' : Perm ?V ?M1.0; ?s1.0 ~= ?s2.0 |]
      ==> card
           (\<Union>
             (io_targets ?PM (initial ?PM) ` RP ?M2.0 ?s1.0 ?vs ?xs ?V'')) =
          card
           (\<Union>
             (io_targets ?M1.0 (initial ?M1.0) `
              RP ?M2.0 ?s1.0 ?vs ?xs ?V''))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 27,
                template_app
                 (template_app (template_hole 26, template_var 9),
                  template_var 8)),
              template_app
               (template_app
                 (template_hole 25,
                  template_app
                   (template_app (template_hole 24, template_var 7),
                    template_app (template_hole 23, template_var 7))),
                template_app
                 (template_app (template_hole 22, template_var 6),
                  template_app (template_hole 21, template_var 6))))
            ),
        template_predicate
         (template_app (template_hole 20, template_var 7)),
        template_predicate
         (template_app (template_hole 19, template_var 6)),
        template_predicate
         (template_app (template_hole 18, template_var 7)),
        template_predicate
         (template_app (template_hole 17, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 16, template_var 6),
                  template_var 7),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 6),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app
               (template_app (template_hole 13, template_var 3),
                template_var 7))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 4),
                   template_app (template_hole 5, template_var 4))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 1),
                     template_var 9),
                   template_var 8),
                 template_var 2)))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 7),
                   template_app (template_hole 23, template_var 7))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 1),
                     template_var 9),
                   template_var 8),
                 template_var 2))))))),
    ("ASC_LB.LB_count_helper_RP_disjoint_and_cards",
     "[| ?vs @ ?xs : L ?M1.0 Int L ?M2.0; observable ?M1.0;
         observable ?M2.0; well_formed ?M1.0; well_formed ?M2.0;
         productF ?M2.0 ?M1.0 ?FAIL ?PM; is_det_state_cover ?M2.0 ?V;
         ?V'' : Perm ?V ?M1.0; ?s1.0 ~= ?s2.0 |]
      ==> card
           (\<Union>
             (io_targets ?PM (initial ?PM) ` RP ?M2.0 ?s2.0 ?vs ?xs ?V'')) =
          card
           (\<Union>
             (io_targets ?M1.0 (initial ?M1.0) `
              RP ?M2.0 ?s2.0 ?vs ?xs ?V''))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 27,
                template_app
                 (template_app (template_hole 26, template_var 9),
                  template_var 8)),
              template_app
               (template_app
                 (template_hole 25,
                  template_app
                   (template_app (template_hole 24, template_var 7),
                    template_app (template_hole 23, template_var 7))),
                template_app
                 (template_app (template_hole 22, template_var 6),
                  template_app (template_hole 21, template_var 6))))
            ),
        template_predicate
         (template_app (template_hole 20, template_var 7)),
        template_predicate
         (template_app (template_hole 19, template_var 6)),
        template_predicate
         (template_app (template_hole 18, template_var 7)),
        template_predicate
         (template_app (template_hole 17, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 16, template_var 6),
                  template_var 7),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 6),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 2),
              template_app
               (template_app (template_hole 13, template_var 3),
                template_var 7))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_hole 9,
           template_app
            (template_hole 8,
             template_app
              (template_app
                (template_hole 7,
                 template_app
                  (template_app (template_hole 6, template_var 4),
                   template_app (template_hole 5, template_var 4))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 0),
                     template_var 9),
                   template_var 8),
                 template_var 2)))),
         template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_hole 1,
                 template_app
                  (template_app (template_hole 0, template_var 7),
                   template_app (template_hole 23, template_var 7))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 6),
                       template_var 0),
                     template_var 9),
                   template_var 8),
                 template_var 2))))))),
    ("ASC_LB.LB_count_helper_RP_disjoint_and_cards",
     "[| ?vs @ ?xs : L ?M1.0 Int L ?M2.0; observable ?M1.0;
         observable ?M2.0; well_formed ?M1.0; well_formed ?M2.0;
         productF ?M2.0 ?M1.0 ?FAIL ?PM; is_det_state_cover ?M2.0 ?V;
         ?V'' : Perm ?V ?M1.0; ?s1.0 ~= ?s2.0 |]
      ==> \<Union>
           (io_targets ?PM (initial ?PM) ` RP ?M2.0 ?s1.0 ?vs ?xs ?V'') Int
          \<Union>
           (io_targets ?PM (initial ?PM) ` RP ?M2.0 ?s2.0 ?vs ?xs ?V'') =
          {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app (template_hole 23, template_var 9),
                  template_var 8)),
              template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 21, template_var 7),
                    template_app (template_hole 20, template_var 7))),
                template_app
                 (template_app (template_hole 19, template_var 6),
                  template_app (template_hole 18, template_var 6))))
            ),
        template_predicate
         (template_app (template_hole 17, template_var 7)),
        template_predicate
         (template_app (template_hole 16, template_var 6)),
        template_predicate
         (template_app (template_hole 15, template_var 7)),
        template_predicate
         (template_app (template_hole 14, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 13, template_var 6),
                  template_var 7),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 6),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 2),
              template_app
               (template_app (template_hole 10, template_var 3),
                template_var 7))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 4),
                     template_app (template_hole 2, template_var 4))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 6),
                         template_var 1),
                       template_var 9),
                     template_var 8),
                   template_var 2)))),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_hole 4,
                 template_app
                  (template_app (template_hole 3, template_var 4),
                   template_app (template_hole 2, template_var 4))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 6),
                       template_var 0),
                     template_var 9),
                   template_var 8),
                 template_var 2)))),
         template_hole 0))),
    ("ASC_LB.distinctness_via_Rep_Pre",
     "[| ~ Rep_Pre ?M2.0 ?M1.0 ?vs ?xs; productF ?M2.0 ?M1.0 ?FAIL ?PM;
         observable ?M1.0; observable ?M2.0;
         io_targets ?PM (initial ?PM) ?vs = {(?q2.0, ?q1.0)};
         path ?PM (?xs || ?tr) (?q2.0, ?q1.0); length ?xs = length ?tr;
         ?vs @ ?xs : L ?M1.0 Int L ?M2.0; well_formed ?M1.0;
         well_formed ?M2.0 |]
      ==> distinct (states (?xs || ?tr) (?q2.0, ?q1.0))",
     template_implication
      ([template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 26, template_var 8),
                      template_var 7),
                    template_var 6),
                  template_var 5)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 25, template_var 8),
                  template_var 7),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (template_app (template_hole 24, template_var 7)),
        template_predicate
         (template_app (template_hole 23, template_var 8)),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 21, template_var 3),
              template_app (template_hole 20, template_var 3)),
            template_var 6),
          template_app
           (template_app
             (template_hole 19,
              template_app
               (template_app (template_hole 18, template_var 2),
                template_var 1)),
            template_hole 17)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 16, template_var 3),
                template_app
                 (template_app (template_hole 15, template_var 5),
                  template_var 0)),
              template_app
               (template_app (template_hole 18, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 13, template_var 5),
          template_app (template_hole 12, template_var 0)),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 11,
                template_app
                 (template_app (template_hole 10, template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 9,
                  template_app
                   (template_app (template_hole 8, template_var 7),
                    template_app (template_hole 7, template_var 7))),
                template_app
                 (template_app (template_hole 6, template_var 8),
                  template_app (template_hole 5, template_var 8))))
            ),
        template_predicate (template_app (template_hole 4, template_var 7)),
        template_predicate
         (template_app (template_hole 3, template_var 8))],
       template_predicate
        (
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 1, t_empty),
                 template_app
                  (template_app (template_hole 15, template_var 5),
                   template_var 0)),
               template_app
                (template_app (template_hole 18, template_var 2),
                 template_var 1)))
           ))),
    ("ASC_LB.LB_count",
     "[| ?vs @ ?xs : L ?M1.0; OFSM ?M1.0; OFSM ?M2.0;
         asc_fault_domain ?M2.0 ?M1.0 ?m;
         test_tools ?M2.0 ?M1.0 ?FAIL ?PM ?V ?\<Omega>;
         ?V'' : Perm ?V ?M1.0;
         Prereq ?M2.0 ?M1.0 ?vs ?xs ?T ?S ?\<Omega> ?V'';
         ~ Rep_Pre ?M2.0 ?M1.0 ?vs ?xs;
         ~ Rep_Cov ?M2.0 ?M1.0 ?V'' ?vs ?xs |]
      ==> LB ?M2.0 ?M1.0 ?vs ?xs ?T ?S ?\<Omega> ?V'' <= |?M1.0|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 26,
                template_app
                 (template_app (template_hole 25, template_var 11),
                  template_var 10)),
              template_app
               (template_app (template_hole 24, template_var 9),
                template_app (template_hole 23, template_var 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app (template_hole 21, template_var 9)),
              template_app
               (template_app
                 (template_hole 22,
                  template_app (template_hole 20, template_var 9)),
                template_app (template_hole 19, template_var 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app (template_hole 18, template_var 8)),
              template_app
               (template_app
                 (template_hole 22,
                  template_app (template_hole 17, template_var 8)),
                template_app (template_hole 16, template_var 8)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app
                   (template_hole 15,
                    template_app (template_hole 14, template_var 8)),
                  template_app (template_hole 13, template_var 9))),
              template_app
               (template_app
                 (template_hole 12,
                  template_app
                   (template_hole 11,
                    template_app (template_hole 10, template_var 9))),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 22,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 9, template_var 8),
                      template_var 9),
                    template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 22,
                  template_app
                   (template_app (template_hole 8, template_var 8),
                    template_var 4)),
                template_app
                 (template_app (template_hole 7, template_var 8),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 2),
              template_app
               (template_app (template_hole 5, template_var 4),
                template_var 9))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 4, template_var 8),
                          template_var 9),
                        template_var 11),
                      template_var 10),
                    template_var 1),
                  template_var 0),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 2, template_var 8),
                      template_var 9),
                    template_var 11),
                  template_var 10)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 9),
                      template_var 2),
                    template_var 11),
                  template_var 10)
                )
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 0, template_var 8),
                       template_var 9),
                     template_var 11),
                   template_var 10),
                 template_var 1),
               template_var 0),
             template_var 3),
           template_var 2),
         template_app
          (template_hole 11,
           template_app (template_hole 10, template_var 9))))),
    ("ASC_LB.contradiction_via_LB",
     "[| ?vs @ ?xs : L ?M1.0; OFSM ?M1.0; OFSM ?M2.0;
         asc_fault_domain ?M2.0 ?M1.0 ?m;
         test_tools ?M2.0 ?M1.0 ?FAIL ?PM ?V ?\<Omega>;
         ?V'' : Perm ?V ?M1.0;
         Prereq ?M2.0 ?M1.0 ?vs ?xs ?T ?S ?\<Omega> ?V'';
         ~ Rep_Pre ?M2.0 ?M1.0 ?vs ?xs; ~ Rep_Cov ?M2.0 ?M1.0 ?V'' ?vs ?xs;
         ?m < LB ?M2.0 ?M1.0 ?vs ?xs ?T ?S ?\<Omega> ?V'' |]
      ==> False",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app
                 (template_app (template_hole 27, template_var 11),
                  template_var 10)),
              template_app
               (template_app (template_hole 26, template_var 9),
                template_app (template_hole 25, template_var 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app (template_hole 23, template_var 9)),
              template_app
               (template_app
                 (template_hole 24,
                  template_app (template_hole 22, template_var 9)),
                template_app (template_hole 21, template_var 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app (template_hole 20, template_var 8)),
              template_app
               (template_app
                 (template_hole 24,
                  template_app (template_hole 19, template_var 8)),
                template_app (template_hole 18, template_var 8)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 8)),
                  template_app (template_hole 15, template_var 9))),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_var 9))),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 11, template_var 8),
                      template_var 9),
                    template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 24,
                  template_app
                   (template_app (template_hole 10, template_var 8),
                    template_var 4)),
                template_app
                 (template_app (template_hole 9, template_var 8),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 9))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 6, template_var 8),
                          template_var 9),
                        template_var 11),
                      template_var 10),
                    template_var 1),
                  template_var 0),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 8),
                      template_var 9),
                    template_var 11),
                  template_var 10)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 8),
                        template_var 9),
                      template_var 2),
                    template_var 11),
                  template_var 10)
                )
            ),
        template_inequation
         (less_than, template_var 7,
          template_app
           (template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 1, template_var 8),
                        template_var 9),
                      template_var 11),
                    template_var 10),
                  template_var 1),
                template_var 0),
              template_var 3),
            template_var 2))],
       template_predicate (template_hole 0))),
    ("ASC_LB.R_count",
     "[| ?vs @ ?xs : L ?M1.0 Int L ?M2.0; observable ?M1.0;
         observable ?M2.0; well_formed ?M1.0; well_formed ?M2.0;
         ?s : nodes ?M2.0; productF ?M2.0 ?M1.0 ?FAIL ?PM;
         io_targets ?PM (initial ?PM) ?vs = {(?q2.0, ?q1.0)};
         path ?PM (?xs || ?tr) (?q2.0, ?q1.0); length ?xs = length ?tr;
         distinct (states (?xs || ?tr) (?q2.0, ?q1.0)) |]
      ==> card
           (\<Union>
             (io_targets ?M1.0 (initial ?M1.0) ` R ?M2.0 ?s ?vs ?xs)) =
          card (R ?M2.0 ?s ?vs ?xs)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 33,
                template_app
                 (template_app (template_hole 32, template_var 9),
                  template_var 8)),
              template_app
               (template_app
                 (template_hole 31,
                  template_app
                   (template_app (template_hole 30, template_var 7),
                    template_app (template_hole 29, template_var 7))),
                template_app
                 (template_app (template_hole 28, template_var 6),
                  template_app (template_hole 27, template_var 6))))
            ),
        template_predicate
         (template_app (template_hole 26, template_var 7)),
        template_predicate
         (template_app (template_hole 25, template_var 6)),
        template_predicate
         (template_app (template_hole 24, template_var 7)),
        template_predicate
         (template_app (template_hole 23, template_var 6)),
        template_predicate
         (
            template_app
             (template_app (template_hole 22, template_var 5),
              template_app (template_hole 21, template_var 6))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 20, template_var 6),
                  template_var 7),
                template_var 4),
              template_var 3)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 18, template_var 3),
              template_app (template_hole 17, template_var 3)),
            template_var 9),
          template_app
           (template_app
             (template_hole 16,
              template_app
               (template_app (template_hole 15, template_var 2),
                template_var 1)),
            template_hole 14)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 13, template_var 3),
                template_app
                 (template_app (template_hole 12, template_var 8),
                  template_var 0)),
              template_app
               (template_app (template_hole 15, template_var 2),
                template_var 1))
            ),
        template_equation
         (template_app (template_hole 10, template_var 8),
          template_app (template_hole 9, template_var 0)),
        template_predicate
         (
            template_app
             (template_hole 8,
              template_app
               (template_app
                 (template_app (template_hole 7, t_empty),
                  template_app
                   (template_app (template_hole 12, template_var 8),
                    template_var 0)),
                template_app
                 (template_app (template_hole 15, template_var 2),
                  template_var 1)))
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 7),
                   template_app (template_hole 29, template_var 7))),
               template_app
                (template_app
                  (template_app
                    (template_app (template_hole 1, template_var 6),
                     template_var 5),
                   template_var 9),
                 template_var 8)))),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 6),
                 template_var 5),
               template_var 9),
             template_var 8))))),
    ("ASC_LB.LB_count_helper_RP_disjoint_card_M1",
     "[| ?vs @ ?xs : L ?M1.0 Int L ?M2.0; observable ?M1.0;
         observable ?M2.0; well_formed ?M1.0; well_formed ?M2.0;
         productF ?M2.0 ?M1.0 ?FAIL ?PM; is_det_state_cover ?M2.0 ?V;
         ?V'' : Perm ?V ?M1.0; ?s1.0 ~= ?s2.0 |]
      ==> card
           (\<Union>
             (io_targets ?PM (initial ?PM) ` RP ?M2.0 ?s1.0 ?vs ?xs ?V'') Un
            \<Union>
             (io_targets ?PM (initial ?PM) ` RP ?M2.0 ?s2.0 ?vs ?xs ?V'')) =
          card
           (\<Union>
             (io_targets ?M1.0 (initial ?M1.0) `
              RP ?M2.0 ?s1.0 ?vs ?xs ?V'')) +
          card
           (\<Union>
             (io_targets ?M1.0 (initial ?M1.0) `
              RP ?M2.0 ?s2.0 ?vs ?xs ?V''))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app
                 (template_app (template_hole 28, template_var 9),
                  template_var 8)),
              template_app
               (template_app
                 (template_hole 27,
                  template_app
                   (template_app (template_hole 26, template_var 7),
                    template_app (template_hole 25, template_var 7))),
                template_app
                 (template_app (template_hole 24, template_var 6),
                  template_app (template_hole 23, template_var 6))))
            ),
        template_predicate
         (template_app (template_hole 22, template_var 7)),
        template_predicate
         (template_app (template_hole 21, template_var 6)),
        template_predicate
         (template_app (template_hole 20, template_var 7)),
        template_predicate
         (template_app (template_hole 19, template_var 6)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 18, template_var 6),
                  template_var 7),
                template_var 5),
              template_var 4)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 6),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 2),
              template_app
               (template_app (template_hole 15, template_var 3),
                template_var 7))
            ),
        template_negation
         (template_equation (template_var 1, template_var 0))],
       template_equation
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_hole 10,
               template_app
                (template_hole 9,
                 template_app
                  (template_app
                    (template_hole 8,
                     template_app
                      (template_app (template_hole 7, template_var 4),
                       template_app (template_hole 6, template_var 4))),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 5, template_var 6),
                           template_var 1),
                         template_var 9),
                       template_var 8),
                     template_var 2)))),
             template_app
              (template_hole 9,
               template_app
                (template_app
                  (template_hole 8,
                   template_app
                    (template_app (template_hole 7, template_var 4),
                     template_app (template_hole 6, template_var 4))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 5, template_var 6),
                         template_var 0),
                       template_var 9),
                     template_var 8),
                   template_var 2))))),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 7),
                       template_app (template_hole 25, template_var 7))),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 5, template_var 6),
                           template_var 1),
                         template_var 9),
                       template_var 8),
                     template_var 2))))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 7),
                     template_app (template_hole 25, template_var 7))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 5, template_var 6),
                         template_var 0),
                       template_var 9),
                     template_var 8),
                   template_var 2)))))))),
    ("ASC_LB.LB_count_helper_LB1",
     "[| ?vs @ ?xs : L ?M2.0 Int L ?M1.0; OFSM ?M1.0; OFSM ?M2.0;
         asc_fault_domain ?M2.0 ?M1.0 ?m;
         test_tools ?M2.0 ?M1.0 ?FAIL ?PM ?V ?\<Omega>;
         ?V'' : Perm ?V ?M1.0;
         Prereq ?M2.0 ?M1.0 ?vs ?xs ?T ?S ?\<Omega> ?V'';
         ~ Rep_Pre ?M2.0 ?M1.0 ?vs ?xs;
         ~ Rep_Cov ?M2.0 ?M1.0 ?V'' ?vs ?xs |]
      ==> (SUM s:?S. card (RP ?M2.0 s ?vs ?xs ?V'')) <= |?M1.0|",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 31,
                template_app
                 (template_app (template_hole 30, template_var 11),
                  template_var 10)),
              template_app
               (template_app
                 (template_hole 29,
                  template_app
                   (template_app (template_hole 28, template_var 9),
                    template_app (template_hole 27, template_var 9))),
                template_app
                 (template_app (template_hole 26, template_var 8),
                  template_app (template_hole 25, template_var 8))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app (template_hole 23, template_var 8)),
              template_app
               (template_app
                 (template_hole 24,
                  template_app (template_hole 22, template_var 8)),
                template_app (template_hole 21, template_var 8)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app (template_hole 20, template_var 9)),
              template_app
               (template_app
                 (template_hole 24,
                  template_app (template_hole 19, template_var 9)),
                template_app (template_hole 18, template_var 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 9)),
                  template_app (template_hole 15, template_var 8))),
              template_app
               (template_app
                 (template_hole 14,
                  template_app
                   (template_hole 13,
                    template_app (template_hole 12, template_var 8))),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 24,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 11, template_var 9),
                      template_var 8),
                    template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 24,
                  template_app
                   (template_app (template_hole 10, template_var 9),
                    template_var 4)),
                template_app
                 (template_app (template_hole 9, template_var 9),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 2),
              template_app
               (template_app (template_hole 7, template_var 4),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 6, template_var 9),
                          template_var 8),
                        template_var 11),
                      template_var 10),
                    template_var 1),
                  template_var 0),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 4, template_var 9),
                      template_var 8),
                    template_var 11),
                  template_var 10)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 3, template_var 9),
                        template_var 8),
                      template_var 2),
                    template_var 11),
                  template_var 10)
                )
            )],
       template_inequation
        (less_equals,
         template_app
          (template_app (template_hole 2, t_empty), template_var 0),
         template_app
          (template_hole 13,
           template_app (template_hole 12, template_var 8))))),
    ("ASC_LB.LB_count_helper_RP_card_union_sum",
     "[| ?vs @ ?xs : L ?M2.0 Int L ?M1.0; OFSM ?M1.0; OFSM ?M2.0;
         asc_fault_domain ?M2.0 ?M1.0 ?m;
         test_tools ?M2.0 ?M1.0 ?FAIL ?PM ?V ?\<Omega>;
         ?V'' : Perm ?V ?M1.0;
         Prereq ?M2.0 ?M1.0 ?vs ?xs ?T ?S ?\<Omega> ?V'';
         ~ Rep_Pre ?M2.0 ?M1.0 ?vs ?xs;
         ~ Rep_Cov ?M2.0 ?M1.0 ?V'' ?vs ?xs |]
      ==> (SUM s:?S. card (RP ?M2.0 s ?vs ?xs ?V'')) =
          (SUM s:?S.
              card
               (\<Union>
                 (io_targets ?M1.0 (initial ?M1.0) `
                  RP ?M2.0 s ?vs ?xs ?V'')))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 35,
                template_app
                 (template_app (template_hole 34, template_var 11),
                  template_var 10)),
              template_app
               (template_app
                 (template_hole 33,
                  template_app
                   (template_app (template_hole 32, template_var 9),
                    template_app (template_hole 31, template_var 9))),
                template_app
                 (template_app (template_hole 30, template_var 8),
                  template_app (template_hole 29, template_var 8))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app (template_hole 27, template_var 8)),
              template_app
               (template_app
                 (template_hole 28,
                  template_app (template_hole 26, template_var 8)),
                template_app (template_hole 25, template_var 8)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app (template_hole 24, template_var 9)),
              template_app
               (template_app
                 (template_hole 28,
                  template_app (template_hole 23, template_var 9)),
                template_app (template_hole 22, template_var 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app
                 (template_app
                   (template_hole 21,
                    template_app (template_hole 20, template_var 9)),
                  template_app (template_hole 19, template_var 8))),
              template_app
               (template_app
                 (template_hole 18,
                  template_app
                   (template_hole 17,
                    template_app (template_hole 16, template_var 8))),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 28,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 15, template_var 9),
                      template_var 8),
                    template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 28,
                  template_app
                   (template_app (template_hole 14, template_var 9),
                    template_var 4)),
                template_app
                 (template_app (template_hole 13, template_var 9),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 2),
              template_app
               (template_app (template_hole 11, template_var 4),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 10, template_var 9),
                          template_var 8),
                        template_var 11),
                      template_var 10),
                    template_var 1),
                  template_var 0),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 8, template_var 9),
                      template_var 8),
                    template_var 11),
                  template_var 10)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 7, template_var 9),
                        template_var 8),
                      template_var 2),
                    template_var 11),
                  template_var 10)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 5, t_empty), template_var 0),
         template_app
          (template_app (template_hole 5, t_empty), template_var 0)))),
    ("ASC_LB.LB_count_helper_RP_disjoint_M1_union",
     "[| ?vs @ ?xs : L ?M2.0 Int L ?M1.0; OFSM ?M1.0; OFSM ?M2.0;
         asc_fault_domain ?M2.0 ?M1.0 ?m;
         test_tools ?M2.0 ?M1.0 ?FAIL ?PM ?V ?\<Omega>;
         ?V'' : Perm ?V ?M1.0;
         Prereq ?M2.0 ?M1.0 ?vs ?xs ?T ?S ?\<Omega> ?V'';
         ~ Rep_Pre ?M2.0 ?M1.0 ?vs ?xs;
         ~ Rep_Cov ?M2.0 ?M1.0 ?V'' ?vs ?xs |]
      ==> (SUM s:?S. card (RP ?M2.0 s ?vs ?xs ?V'')) =
          card
           (UN s:?S.
               \<Union>
                (io_targets ?M1.0 (initial ?M1.0) `
                 RP ?M2.0 s ?vs ?xs ?V''))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 36,
                template_app
                 (template_app (template_hole 35, template_var 11),
                  template_var 10)),
              template_app
               (template_app
                 (template_hole 34,
                  template_app
                   (template_app (template_hole 33, template_var 9),
                    template_app (template_hole 32, template_var 9))),
                template_app
                 (template_app (template_hole 31, template_var 8),
                  template_app (template_hole 30, template_var 8))))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app (template_hole 28, template_var 8)),
              template_app
               (template_app
                 (template_hole 29,
                  template_app (template_hole 27, template_var 8)),
                template_app (template_hole 26, template_var 8)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app (template_hole 25, template_var 9)),
              template_app
               (template_app
                 (template_hole 29,
                  template_app (template_hole 24, template_var 9)),
                template_app (template_hole 23, template_var 9)))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app
                 (template_app
                   (template_hole 22,
                    template_app (template_hole 21, template_var 9)),
                  template_app (template_hole 20, template_var 8))),
              template_app
               (template_app
                 (template_hole 19,
                  template_app
                   (template_hole 18,
                    template_app (template_hole 17, template_var 8))),
                template_var 7))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 29,
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 16, template_var 9),
                      template_var 8),
                    template_var 6),
                  template_var 5)),
              template_app
               (template_app
                 (template_hole 29,
                  template_app
                   (template_app (template_hole 15, template_var 9),
                    template_var 4)),
                template_app
                 (template_app (template_hole 14, template_var 9),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app
               (template_app (template_hole 12, template_var 4),
                template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 11, template_var 9),
                          template_var 8),
                        template_var 11),
                      template_var 10),
                    template_var 1),
                  template_var 0),
                template_var 3),
              template_var 2)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 9, template_var 9),
                      template_var 8),
                    template_var 11),
                  template_var 10)
                )
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 8, template_var 9),
                        template_var 8),
                      template_var 2),
                    template_var 11),
                  template_var 10)
                )
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, t_empty), template_var 0),
         template_app
          (template_hole 18,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, t_empty),
               template_var 0)))))),
    ("ASC_LB.RP_count_via_Rep_Cov",
     "[| ?vs @ ?xs : L ?M1.0 Int L ?M2.0; observable ?M1.0;
         observable ?M2.0; well_formed ?M1.0; well_formed ?M2.0;
         ?s : nodes ?M2.0; productF ?M2.0 ?M1.0 ?FAIL ?PM;
         io_targets ?PM (initial ?PM) ?vs = {(?q2.0, ?q1.0)};
         path ?PM (?xs || ?tr) (?q2.0, ?q1.0); length ?xs = length ?tr;
         distinct (states (?xs || ?tr) (?q2.0, ?q1.0));
         is_det_state_cover ?M2.0 ?V; ?V'' : Perm ?V ?M1.0;
         ~ Rep_Cov ?M2.0 ?M1.0 ?V'' ?vs ?xs |]
      ==> card
           (\<Union>
             (io_targets ?M1.0 (initial ?M1.0) `
              RP ?M2.0 ?s ?vs ?xs ?V'')) =
          card (RP ?M2.0 ?s ?vs ?xs ?V'')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 38,
                template_app
                 (template_app (template_hole 37, template_var 11),
                  template_var 10)),
              template_app
               (template_app
                 (template_hole 36,
                  template_app
                   (template_app (template_hole 35, template_var 9),
                    template_app (template_hole 34, template_var 9))),
                template_app
                 (template_app (template_hole 33, template_var 8),
                  template_app (template_hole 32, template_var 8))))
            ),
        template_predicate
         (template_app (template_hole 31, template_var 9)),
        template_predicate
         (template_app (template_hole 30, template_var 8)),
        template_predicate
         (template_app (template_hole 29, template_var 9)),
        template_predicate
         (template_app (template_hole 28, template_var 8)),
        template_predicate
         (
            template_app
             (template_app (template_hole 27, template_var 7),
              template_app (template_hole 26, template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 25, template_var 8),
                  template_var 9),
                template_var 6),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 23, template_var 5),
              template_app (template_hole 22, template_var 5)),
            template_var 11),
          template_app
           (template_app
             (template_hole 21,
              template_app
               (template_app (template_hole 20, template_var 4),
                template_var 3)),
            template_hole 19)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 18, template_var 5),
                template_app
                 (template_app (template_hole 17, template_var 10),
                  template_var 2)),
              template_app
               (template_app (template_hole 20, template_var 4),
                template_var 3))
            ),
        template_equation
         (template_app (template_hole 15, template_var 10),
          template_app (template_hole 14, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 13,
              template_app
               (template_app
                 (template_app (template_hole 12, t_empty),
                  template_app
                   (template_app (template_hole 17, template_var 10),
                    template_var 2)),
                template_app
                 (template_app (template_hole 20, template_var 4),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 8),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_app
               (template_app (template_hole 8, template_var 1),
                template_var 9))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 6, template_var 8),
                        template_var 9),
                      template_var 0),
                    template_var 11),
                  template_var 10)
                )
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 9),
                   template_app (template_hole 34, template_var 9))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 11),
                   template_var 10),
                 template_var 0)))),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 8),
                   template_var 7),
                 template_var 11),
               template_var 10),
             template_var 0))))),
    ("ASC_LB.RP_count",
     "[| ?vs @ ?xs : L ?M1.0 Int L ?M2.0; observable ?M1.0;
         observable ?M2.0; well_formed ?M1.0; well_formed ?M2.0;
         ?s : nodes ?M2.0; productF ?M2.0 ?M1.0 ?FAIL ?PM;
         io_targets ?PM (initial ?PM) ?vs = {(?q2.0, ?q1.0)};
         path ?PM (?xs || ?tr) (?q2.0, ?q1.0); length ?xs = length ?tr;
         distinct (states (?xs || ?tr) (?q2.0, ?q1.0));
         is_det_state_cover ?M2.0 ?V; ?V'' : Perm ?V ?M1.0;
         ALL s':set (states (?xs || map fst ?tr) ?q2.0).
            ~ (EX v:?V. d_reaches ?M2.0 (initial ?M2.0) v s') |]
      ==> card
           (\<Union>
             (io_targets ?M1.0 (initial ?M1.0) `
              RP ?M2.0 ?s ?vs ?xs ?V'')) =
          card (RP ?M2.0 ?s ?vs ?xs ?V'')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 46,
                template_app
                 (template_app (template_hole 45, template_var 11),
                  template_var 10)),
              template_app
               (template_app
                 (template_hole 44,
                  template_app
                   (template_app (template_hole 43, template_var 9),
                    template_app (template_hole 42, template_var 9))),
                template_app
                 (template_app (template_hole 41, template_var 8),
                  template_app (template_hole 40, template_var 8))))
            ),
        template_predicate
         (template_app (template_hole 39, template_var 9)),
        template_predicate
         (template_app (template_hole 38, template_var 8)),
        template_predicate
         (template_app (template_hole 37, template_var 9)),
        template_predicate
         (template_app (template_hole 36, template_var 8)),
        template_predicate
         (
            template_app
             (template_app (template_hole 35, template_var 7),
              template_app (template_hole 34, template_var 8))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 33, template_var 8),
                  template_var 9),
                template_var 6),
              template_var 5)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 31, template_var 5),
              template_app (template_hole 30, template_var 5)),
            template_var 11),
          template_app
           (template_app
             (template_hole 29,
              template_app
               (template_app (template_hole 28, template_var 4),
                template_var 3)),
            template_hole 27)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 26, template_var 5),
                template_app
                 (template_app (template_hole 25, template_var 10),
                  template_var 2)),
              template_app
               (template_app (template_hole 28, template_var 4),
                template_var 3))
            ),
        template_equation
         (template_app (template_hole 23, template_var 10),
          template_app (template_hole 22, template_var 2)),
        template_predicate
         (
            template_app
             (template_hole 21,
              template_app
               (template_app
                 (template_app (template_hole 20, t_empty),
                  template_app
                   (template_app (template_hole 25, template_var 10),
                    template_var 2)),
                template_app
                 (template_app (template_hole 28, template_var 4),
                  template_var 3)))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 18, template_var 8),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 17, template_var 0),
              template_app
               (template_app (template_hole 16, template_var 1),
                template_var 9))
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_hole 15,
                template_app
                 (template_hole 14,
                  template_app
                   (template_app
                     (template_app (template_hole 13, t_empty),
                      template_app
                       (template_app (template_hole 11, template_var 10),
                        template_app
                         (template_app (template_hole 10, template_hole 9),
                          template_var 2))),
                    template_var 4))),
              t_empty)
            )],
       template_equation
        (template_app
          (template_hole 5,
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 9),
                   template_app (template_hole 42, template_var 9))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 8),
                       template_var 7),
                     template_var 11),
                   template_var 10),
                 template_var 0)))),
         template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app (template_hole 1, template_var 8),
                   template_var 7),
                 template_var 11),
               template_var 10),
             template_var 0))))),
    ("ASC_LB.LB_count_helper_RP_disjoint_M1_pair",
     "[| ?vs @ ?xs : L ?M1.0 Int L ?M2.0; observable ?M1.0;
         observable ?M2.0; well_formed ?M1.0; well_formed ?M2.0;
         productF ?M2.0 ?M1.0 ?FAIL ?PM;
         io_targets ?PM (initial ?PM) ?vs = {(?q2.0, ?q1.0)};
         path ?PM (?xs || ?tr) (?q2.0, ?q1.0); length ?xs = length ?tr;
         ~ Rep_Pre ?M2.0 ?M1.0 ?vs ?xs; is_det_state_cover ?M2.0 ?V;
         ?V'' : Perm ?V ?M1.0; ~ Rep_Cov ?M2.0 ?M1.0 ?V'' ?vs ?xs;
         Prereq ?M2.0 ?M1.0 ?vs ?xs ?T ?S ?\<Omega> ?V''; ?s1.0 ~= ?s2.0;
         ?s1.0 : ?S; ?s2.0 : ?S; applicable_set ?M1.0 ?\<Omega>;
         completely_specified ?M1.0 |]
      ==> \<Union>
           (io_targets ?M1.0 (initial ?M1.0) `
            RP ?M2.0 ?s1.0 ?vs ?xs ?V'') Int
          \<Union>
           (io_targets ?M1.0 (initial ?M1.0) `
            RP ?M2.0 ?s2.0 ?vs ?xs ?V'') =
          {}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 40,
                template_app
                 (template_app (template_hole 39, template_var 15),
                  template_var 14)),
              template_app
               (template_app
                 (template_hole 38,
                  template_app
                   (template_app (template_hole 37, template_var 13),
                    template_app (template_hole 36, template_var 13))),
                template_app
                 (template_app (template_hole 35, template_var 12),
                  template_app (template_hole 34, template_var 12))))
            ),
        template_predicate
         (template_app (template_hole 33, template_var 13)),
        template_predicate
         (template_app (template_hole 32, template_var 12)),
        template_predicate
         (template_app (template_hole 31, template_var 13)),
        template_predicate
         (template_app (template_hole 30, template_var 12)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 29, template_var 12),
                  template_var 13),
                template_var 11),
              template_var 10)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 27, template_var 10),
              template_app (template_hole 26, template_var 10)),
            template_var 15),
          template_app
           (template_app
             (template_hole 25,
              template_app
               (template_app (template_hole 24, template_var 9),
                template_var 8)),
            template_hole 23)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 22, template_var 10),
                template_app
                 (template_app (template_hole 21, template_var 14),
                  template_var 7)),
              template_app
               (template_app (template_hole 24, template_var 9),
                template_var 8))
            ),
        template_equation
         (template_app (template_hole 19, template_var 14),
          template_app (template_hole 18, template_var 7)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 16, template_var 12),
                      template_var 13),
                    template_var 15),
                  template_var 14)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 12),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 5),
              template_app
               (template_app (template_hole 13, template_var 6),
                template_var 13))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 12, template_var 12),
                        template_var 13),
                      template_var 5),
                    template_var 15),
                  template_var 14)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 11, template_var 12),
                          template_var 13),
                        template_var 15),
                      template_var 14),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 5)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 13),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 7, template_var 13))],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 13),
                     template_app (template_hole 36, template_var 13))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 1, template_var 12),
                         template_var 1),
                       template_var 15),
                     template_var 14),
                   template_var 5)))),
           template_app
            (template_hole 4,
             template_app
              (template_app
                (template_hole 3,
                 template_app
                  (template_app (template_hole 2, template_var 13),
                   template_app (template_hole 36, template_var 13))),
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 1, template_var 12),
                       template_var 0),
                     template_var 15),
                   template_var 14),
                 template_var 5)))),
         template_hole 0))),
    ("ASC_LB.LB_count_helper_RP_disjoint_M1_pair",
     "[| ?vs @ ?xs : L ?M1.0 Int L ?M2.0; observable ?M1.0;
         observable ?M2.0; well_formed ?M1.0; well_formed ?M2.0;
         productF ?M2.0 ?M1.0 ?FAIL ?PM;
         io_targets ?PM (initial ?PM) ?vs = {(?q2.0, ?q1.0)};
         path ?PM (?xs || ?tr) (?q2.0, ?q1.0); length ?xs = length ?tr;
         ~ Rep_Pre ?M2.0 ?M1.0 ?vs ?xs; is_det_state_cover ?M2.0 ?V;
         ?V'' : Perm ?V ?M1.0; ~ Rep_Cov ?M2.0 ?M1.0 ?V'' ?vs ?xs;
         Prereq ?M2.0 ?M1.0 ?vs ?xs ?T ?S ?\<Omega> ?V''; ?s1.0 ~= ?s2.0;
         ?s1.0 : ?S; ?s2.0 : ?S; applicable_set ?M1.0 ?\<Omega>;
         completely_specified ?M1.0 |]
      ==> card (RP ?M2.0 ?s1.0 ?vs ?xs ?V'') +
          card (RP ?M2.0 ?s2.0 ?vs ?xs ?V'') =
          card
           (\<Union>
             (io_targets ?M1.0 (initial ?M1.0) `
              RP ?M2.0 ?s1.0 ?vs ?xs ?V'')) +
          card
           (\<Union>
             (io_targets ?M1.0 (initial ?M1.0) `
              RP ?M2.0 ?s2.0 ?vs ?xs ?V''))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 40,
                template_app
                 (template_app (template_hole 39, template_var 15),
                  template_var 14)),
              template_app
               (template_app
                 (template_hole 38,
                  template_app
                   (template_app (template_hole 37, template_var 13),
                    template_app (template_hole 36, template_var 13))),
                template_app
                 (template_app (template_hole 35, template_var 12),
                  template_app (template_hole 34, template_var 12))))
            ),
        template_predicate
         (template_app (template_hole 33, template_var 13)),
        template_predicate
         (template_app (template_hole 32, template_var 12)),
        template_predicate
         (template_app (template_hole 31, template_var 13)),
        template_predicate
         (template_app (template_hole 30, template_var 12)),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 29, template_var 12),
                  template_var 13),
                template_var 11),
              template_var 10)
            ),
        template_equation
         (template_app
           (template_app
             (template_app (template_hole 27, template_var 10),
              template_app (template_hole 26, template_var 10)),
            template_var 15),
          template_app
           (template_app
             (template_hole 25,
              template_app
               (template_app (template_hole 24, template_var 9),
                template_var 8)),
            template_hole 23)),
        template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 22, template_var 10),
                template_app
                 (template_app (template_hole 21, template_var 14),
                  template_var 7)),
              template_app
               (template_app (template_hole 24, template_var 9),
                template_var 8))
            ),
        template_equation
         (template_app (template_hole 19, template_var 14),
          template_app (template_hole 18, template_var 7)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app (template_hole 16, template_var 12),
                      template_var 13),
                    template_var 15),
                  template_var 14)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 15, template_var 12),
              template_var 6)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 14, template_var 5),
              template_app
               (template_app (template_hole 13, template_var 6),
                template_var 13))
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app (template_hole 12, template_var 12),
                        template_var 13),
                      template_var 5),
                    template_var 15),
                  template_var 14)
                )
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app
                   (template_app
                     (template_app
                       (template_app
                         (template_app (template_hole 11, template_var 12),
                          template_var 13),
                        template_var 15),
                      template_var 14),
                    template_var 4),
                  template_var 3),
                template_var 2),
              template_var 5)
            ),
        template_negation
         (template_equation (template_var 1, template_var 0)),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 1),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 9, template_var 0),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 13),
              template_var 2)
            ),
        template_predicate
         (template_app (template_hole 7, template_var 13))],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app (template_hole 4, template_var 12),
                       template_var 1),
                     template_var 15),
                   template_var 14),
                 template_var 5))),
           template_app
            (template_hole 5,
             template_app
              (template_app
                (template_app
                  (template_app
                    (template_app (template_hole 4, template_var 12),
                     template_var 0),
                   template_var 15),
                 template_var 14),
               template_var 5))),
         template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_hole 1,
                     template_app
                      (template_app (template_hole 0, template_var 13),
                       template_app (template_hole 36, template_var 13))),
                   template_app
                    (template_app
                      (template_app
                        (template_app
                          (template_app (template_hole 4, template_var 12),
                           template_var 1),
                         template_var 15),
                       template_var 14),
                     template_var 5))))),
           template_app
            (template_hole 3,
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_hole 1,
                   template_app
                    (template_app (template_hole 0, template_var 13),
                     template_app (template_hole 36, template_var 13))),
                 template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 4, template_var 12),
                         template_var 0),
                       template_var 15),
                     template_var 14),
                   template_var 5))))))))]:
   (string * thm * template) list
### theory "Draft.ASC_LBMoreTemplates"
### 0.522s elapsed time, 0.748s cpu time, 0.104s GC time
val it = (): unit
