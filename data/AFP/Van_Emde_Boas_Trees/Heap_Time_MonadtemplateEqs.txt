   [("Heap_Time_Monad.timeFrame_zero", "timeFrame 0 ?h = ?h",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Heap_Time_Monad.Heap_execute", "Heap.Heap (execute ?f) = ?f",
     template_equation
      (template_app
        (template_hole 1, template_app (template_hole 0, template_var 0)),
       template_var 0)),
    ("Heap_Time_Monad.bind_ureturn", "?f >>= ureturn = ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_var 0)),
    ("Heap_Time_Monad.execute_raise", "execute (raise ?s) = Map.empty",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("Heap_Time_Monad.execute_heap",
     "execute (Heap_Time_Monad.heap ?f) = Some o ?f",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app
        (template_app (template_hole 1, template_hole 0), template_var 0))),
    ("Heap_Time_Monad.lift_collapse", "lift ?f ?x = return (?f ?x)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1), template_var 0),
       template_app
        (template_hole 0, template_app (template_var 1, template_var 0)))),
    ("Heap_Time_Monad.raise_bind", "raise ?e >>= ?f = raise ?e",
     template_equation
      (template_app
        (template_app
          (template_hole 2, template_app (template_hole 1, template_var 1)),
         template_var 0),
       template_app (template_hole 0, template_var 1))),
    ("Heap_Time_Monad.ureturn_bind", "ureturn ?x >>= ?f = ?f ?x",
     template_equation
      (template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_var 0),
       template_app (template_var 0, template_var 1))),
    ("Heap_Time_Monad.bind_return", "?f >>= return = wait 1 >>= (%_. ?f)",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 0), template_hole 3),
       template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         t_empty))),
    ("Heap_Time_Monad.timeFrame_assoc",
     "timeFrame ?n (timeFrame ?n' ?f) = timeFrame (?n + ?n') ?f",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Heap_Time_Monad.bind_lift",
     "?f >>= lift ?g = ?f >>= (%x. return (?g x))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 2, template_var 1), t_empty))),
    ("Heap_Time_Monad.return_bind",
     "return ?x >>= ?f = wait 1 >>= (%_. ?f ?x)",
     template_equation
      (template_app
        (template_app
          (template_hole 4, template_app (template_hole 3, template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_hole 2,
           template_app (template_hole 1, template_hole 0)),
         t_empty))),
    ("Heap_Time_Monad.execute_simps",
     "wait ?n = Heap.Heap (%h. Some ((), h, ?n))",
     template_equation
      (template_app (template_hole 5, template_var 0),
       template_app (template_hole 4, t_empty))),
    ("Heap_Time_Monad.execute_return",
     "execute (return ?x) = Some o (%h. (?x, h, 1))",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app (template_hole 4, template_hole 3), t_empty))),
    ("Heap_Time_Monad.execute_ureturn",
     "execute (ureturn ?x) = Some o (%h. (?x, h, 0))",
     template_equation
      (template_app
        (template_hole 6, template_app (template_hole 5, template_var 0)),
       template_app
        (template_app (template_hole 4, template_hole 3), t_empty))),
    ("Heap_Time_Monad.execute_tap",
     "execute (tap ?f) ?h = Some (?f ?h, ?h, 1)",
     template_equation
      (template_app
        (template_app
          (template_hole 5, template_app (template_hole 4, template_var 1)),
         template_var 0),
       template_app
        (template_hole 3,
         template_app
          (template_app
            (template_hole 2,
             template_app (template_var 1, template_var 0)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Heap_Time_Monad.fold_if_return",
     "(if ?b then return ?c else return ?d) =
      return (if ?b then ?c else ?d)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Heap_Time_Monad.execute_Let",
     "execute (Let ?t ?f) = (let x = ?t in execute (?f x))",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), t_empty)),
       template_app
        (template_app (template_hole 0, template_var 1), t_empty))),
    ("Heap_Time_Monad.bind_bind",
     "?f >>= ?g >>= ?k = ?f >>= (%x. ?g x >>= ?k)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 0, template_var 2), t_empty))),
    ("Heap_Time_Monad.distrib_if_bind",
     "(if ?b then ?c else ?d) >>= ?f =
      (if ?b then ?c >>= ?f else ?d >>= ?f)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1)),
         t_empty),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 3),
           template_app
            (template_app (template_hole 2, template_var 2), t_empty)),
         template_app
          (template_app (template_hole 2, template_var 1), t_empty)))),
    ("Heap_Time_Monad.execute_bind_case",
     "execute (?f >>= ?g) ?h =
      (case execute ?f ?h of None => None
       | Some (x, h', n) => timeFrame n (execute (?g x) h'))",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app (template_hole 6, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 5, template_hole 4), t_empty),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0))))]
