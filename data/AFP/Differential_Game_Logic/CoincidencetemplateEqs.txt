   [("Coincidence.BVG_test", "BVG (? ?\<phi>) = {}",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_hole 0)),
    ("Coincidence.stateinterpol_empty",
     "stateinterpol ?\<nu> ?\<omega> {} = ?\<omega>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 0)),
    ("Coincidence.selectlike_empty", "selectlike ?X ?\<nu> {} = ?X",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_var 1)),
    ("Coincidence.stateinterpol_diff",
     "stateinterpol ?\<nu> ?\<omega> (statediff ?\<nu> ?\<omega>) = ?\<nu>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("Coincidence.Union_insert",
     "\<Union> (insert ?x ?S) = ?x Un \<Union> ?S",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 2, template_var 0)))),
    ("Coincidence.selectlike_self",
     "(?\<nu> : selectlike ?X ?\<nu> ?V) = (?\<nu> : ?X)",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)),
       template_app
        (template_app (template_hole 1, template_var 2), template_var 1))),
    ("Coincidence.restrictto_compose",
     "restrictto (restrictto ?X ?V) ?W = restrictto ?X (?V Int ?W)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app (template_hole 1, template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coincidence.union_or", "(?c : ?A Un ?B) = (?c : ?A | ?c : ?B)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Coincidence.selectlike_compose",
     "selectlike (selectlike ?X ?\<nu> ?V) ?\<nu> ?W =
      selectlike ?X ?\<nu> (?V Un ?W)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 2),
               template_var 1)),
           template_var 2),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Coincidence.selectlike_co_selectlike",
     "selectlike (- selectlike ?X ?\<nu> ?V) ?\<nu> ?V =
      selectlike (- ?X) ?\<nu> ?V",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 1, template_var 2),
                   template_var 1),
                 template_var 0))),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 2)),
           template_var 1),
         template_var 0))),
    ("Coincidence.co_selectlike",
     "- selectlike ?X ?\<nu> ?V =
      - ?X Un {\<omega>. ~ Vagree \<omega> ?\<nu> ?V}",
     template_equation
      (template_app
        (template_hole 5,
         template_app
          (template_app
            (template_app (template_hole 4, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_hole 3, template_app (template_hole 5, template_var 2)),
         template_app (template_hole 2, t_empty)))),
    ("Coincidence.selectlike_union",
     "selectlike (?X Un ?Y) ?\<nu> ?V =
      selectlike ?X ?\<nu> ?V Un selectlike ?Y ?\<nu> ?V",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 1),
             template_var 0)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)))),
    ("Coincidence.not_union_or", "(?x ~: ?A Un ?B) = (?x ~: ?A & ?x ~: ?B)",
     template_equation
      (template_app
        (template_hole 3,
         template_app
          (template_app (template_hole 2, template_var 2),
           template_app
            (template_app (template_hole 1, template_var 1),
             template_var 0))),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_var 2),
               template_var 1))),
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 0))))),
    ("Coincidence.boundeffect",
     "(?\<omega> : game_sem ?I ?\<alpha> ?X) =
      (?\<omega>
       : game_sem ?I ?\<alpha>
          (selectlike ?X ?\<omega> (- BVG ?\<alpha>)))",
     template_equation
      (template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app (template_hole 4, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 3, template_var 2),
             template_var 1),
           template_app
            (template_app
              (template_app (template_hole 2, template_var 0),
               template_var 3),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 1))))))),
    ("Coincidence.repv_selectlike_self",
     "(repv ?\<omega> ?x ?d : selectlike ?X ?\<omega> {?x}) =
      (?d = ?\<omega> ?x & ?\<omega> : ?X)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 6,
                template_app
                 (template_app
                   (template_app (template_hole 5, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_app
               (template_app
                 (template_app (template_hole 4, template_var 0),
                  template_var 3),
                template_app
                 (template_app (template_hole 3, template_var 2),
                  template_hole 2)))
            )],
       template_dunno)),
    ("Coincidence.selectlike_Sup",
     "selectlike (\<Union> ?M) ?\<nu> ?V =
      \<Union> {selectlike X ?\<nu> ?V |X. X : ?M}",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 5,
             template_app (template_hole 4, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_hole 4, template_app (template_hole 3, t_empty)))),
    ("Coincidence.BVG_assign",
     "BVG (?x := ?\<theta>) =
      (if ALL I \<omega>. term_sem I ?\<theta> \<omega> = \<omega> ?x
       then {} else {?x})",
     template_equation
      (template_app
        (template_hole 8,
         template_app
          (template_app (template_hole 7, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 6, template_app (template_hole 5, t_empty)),
           template_hole 1),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_hole 1)))),
    ("Coincidence.selectlike_equal_cond",
     "(selectlike ?X ?\<nu> ?V = selectlike ?Y ?\<nu> ?V) =
      (ALL \<mu>.
          Uvariation \<mu> ?\<nu> (- ?V) --> (\<mu> : ?X) = (\<mu> : ?Y))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 0),
             template_var 2),
           template_var 1)),
       template_app (template_hole 4, t_empty))),
    ("Coincidence.selectlike_equal_cocond",
     "(selectlike ?X ?\<nu> (- ?V) = selectlike ?Y ?\<nu> (- ?V)) =
      (ALL \<mu>.
          Uvariation \<mu> ?\<nu> ?V --> (\<mu> : ?X) = (\<mu> : ?Y))",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_app (template_hole 4, template_var 1))),
         template_app
          (template_app
            (template_app (template_hole 5, template_var 0),
             template_var 2),
           template_app (template_hole 4, template_var 1))),
       template_app (template_hole 3, t_empty))),
    ("Coincidence.Bignorabimus_equiv",
     "Bignorabimus ?\<alpha> =
      {M. ALL I \<omega> X.
             \<omega> : game_sem I ?\<alpha> X -->
             \<omega> : game_sem I ?\<alpha> (selectlike X \<omega> M)}",
     template_equation
      (template_app (template_hole 8, template_var 0),
       template_app (template_hole 7, t_empty))),
    ("Coincidence.BVG_nonelem",
     "(?x ~: BVG ?\<alpha>) =
      (ALL I \<omega> X.
          (\<omega> : game_sem I ?\<alpha> X) =
          (\<omega> : game_sem I ?\<alpha> (selectlike X \<omega> {?x})))",
     template_equation
      (template_app
        (template_hole 10,
         template_app
          (template_app (template_hole 9, template_var 1),
           template_app (template_hole 8, template_var 0))),
       template_app (template_hole 7, t_empty))),
    ("Coincidence.Cignorabimus_equiv",
     "Cignorabimus ?\<alpha> ?V =
      {M. ALL I \<omega> \<omega>' X.
             Vagree \<omega> \<omega>' (- M) -->
             (\<omega> : game_sem I ?\<alpha> (restrictto X ?V)) =
             (\<omega>' : game_sem I ?\<alpha> (restrictto X ?V))}",
     template_equation
      (template_app
        (template_app (template_hole 11, template_var 1), template_var 0),
       template_app (template_hole 10, t_empty)))]
