   [("Denotational_Semantics.skip_id", "game_sem ?I Skip ?X = ?X",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_var 1), template_hole 0),
         template_var 0),
       template_var 0)),
    ("Denotational_Semantics.repv_self",
     "repv ?\<omega> ?x (?\<omega> ?x) = ?\<omega>",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_app (template_var 1, template_var 0)),
       template_var 1)),
    ("Denotational_Semantics.valid_is_valid_in_all",
     "valid ?\<phi> = (ALL I. valid_in I ?\<phi>)",
     template_equation
      (template_app (template_hole 2, template_var 0),
       template_app (template_hole 1, t_empty))),
    ("Denotational_Semantics.Uvariation_empty",
     "Uvariation ?\<nu> ?\<nu>' {} = (?\<nu> = ?\<nu>')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0),
              template_hole 1)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Denotational_Semantics.valid_fml_equiv",
     "valid (?\<phi> \<leftrightarrow> ?\<psi>) =
      fml_equiv ?\<phi> ?\<psi>",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Denotational_Semantics.fml_sem_not",
     "fml_sem ?I (! ?\<phi>) = - fml_sem ?I ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Denotational_Semantics.fml_sem_not_not",
     "fml_sem ?I (! (! ?\<phi>)) = fml_sem ?I ?\<phi>",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app
          (template_hole 0,
           template_app (template_hole 0, template_var 0))),
       template_app
        (template_app (template_hole 1, template_var 1), template_var 0))),
    ("Denotational_Semantics.Uvariation_sym",
     "Uvariation ?\<omega> ?\<nu> ?U = Uvariation ?\<nu> ?\<omega> ?U",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Denotational_Semantics.Vagree_sym",
     "Vagree ?\<nu> ?\<nu>' ?V = Vagree ?\<nu>' ?\<nu> ?V",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 2),
         template_var 0))),
    ("Denotational_Semantics.Uvariation_Vagree",
     "Uvariation ?\<nu> ?\<nu>' (- ?V) = Vagree ?\<nu> ?\<nu>' ?V",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 2, template_var 2), template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_var 0))),
    ("Denotational_Semantics.Vagree_univ",
     "Vagree ?\<nu> ?\<nu>' Denotational_Semantics.allvars =
      (?\<nu> = ?\<nu>')",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 1),
                template_var 0),
              template_app (template_hole 2, t_empty))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Denotational_Semantics.Preds_mkinterp",
     "Preds (mkinterp (?C, ?F, ?P, ?G)) = ?P",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))),
       template_var 1)),
    ("Denotational_Semantics.Funcs_mkinterp",
     "Funcs (mkinterp (?C, ?F, ?P, ?G)) = ?F",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))),
       template_var 2)),
    ("Denotational_Semantics.Consts_mkinterp",
     "Consts (mkinterp (?C, ?F, ?P, ?G)) = ?C",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 3),
             template_app
              (template_app (template_hole 1, template_var 2),
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0))))),
       template_var 3)),
    ("Denotational_Semantics.fml_sem_or",
     "fml_sem ?I (?\<phi> || ?\<psi>) =
      fml_sem ?I ?\<phi> Un fml_sem ?I ?\<psi>",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Denotational_Semantics.valid_in_equiv",
     "valid_in ?I (?\<phi> \<leftrightarrow> ?\<psi>) =
      (fml_sem ?I ?\<phi> = fml_sem ?I ?\<psi>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 2),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_var 0))
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Denotational_Semantics.valid_in_impl",
     "valid_in ?I (?\<phi> \<rightarrow> ?\<psi>) =
      (fml_sem ?I ?\<phi> <= fml_sem ?I ?\<psi>)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 0, template_var 2),
           template_var 0)))),
    ("Denotational_Semantics.repv_access",
     "repv ?\<omega> ?x ?r ?y = (if ?x = ?y then ?r else ?\<omega> ?y)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_dunno)),
    ("Denotational_Semantics.game_sem_loop",
     "game_sem ?I ?\<alpha>** =
      (%X. lfp (%Z. X Un game_sem ?I ?\<alpha> Z))",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       t_empty)),
    ("Denotational_Semantics.game_sem_loop_back",
     "(%X. lfp (%Z. X Un game_sem ?I ?\<alpha> Z)) =
      game_sem ?I ?\<alpha>**",
     template_equation
      (t_empty,
       template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Denotational_Semantics.fml_sem_implies",
     "fml_sem ?I (?\<phi> \<rightarrow> ?\<psi>) =
      - fml_sem ?I ?\<phi> Un fml_sem ?I ?\<psi>",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 3, template_var 2),
               template_var 1))),
         template_app
          (template_app (template_hole 3, template_var 2),
           template_var 0)))),
    ("Denotational_Semantics.valid_equiv",
     "valid (?\<phi> \<leftrightarrow> ?\<psi>) =
      (ALL I. fml_sem I ?\<phi> = fml_sem I ?\<psi>)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Denotational_Semantics.valid_impl",
     "valid (?\<phi> \<rightarrow> ?\<psi>) =
      (ALL I. fml_sem I ?\<phi> <= fml_sem I ?\<psi>)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 1), template_var 0)),
       template_app (template_hole 2, t_empty))),
    ("Denotational_Semantics.Vagree_repv_self",
     "Vagree ?\<omega> (repv ?\<omega> ?x ?d) {?x} = (?d = ?\<omega> ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 4, template_var 2),
                template_app
                 (template_app
                   (template_app (template_hole 3, template_var 2),
                    template_var 1),
                  template_var 0)),
              template_app
               (template_app (template_hole 2, template_var 1),
                template_hole 1))
            )],
       template_equation
        (template_var 0, template_app (template_var 2, template_var 1)))),
    ("Denotational_Semantics.game_sem_loop_unwind",
     "game_sem ?I ?\<alpha>** =
      (%X. X Un game_sem ?I (?\<alpha> ;; ?\<alpha>**) X)",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 1),
         template_app (template_hole 2, template_var 0)),
       t_empty)),
    ("Denotational_Semantics.game_sem_loop_unwind_reduce",
     "(%X. X Un game_sem ?I (?\<alpha> ;; ?\<alpha>**) X) =
      game_sem ?I ?\<alpha>**",
     template_equation
      (t_empty,
       template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Denotational_Semantics.game_sem_loop_iterate",
     "game_sem ?I ?\<alpha>** =
      (%X. X Un game_sem ?I ?\<alpha> (game_sem ?I ?\<alpha>** X))",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       t_empty)),
    ("Denotational_Semantics.mon_mono",
     "mono ?r = (ALL X Y. X <= Y --> ?r X <= ?r Y)",
     template_equation
      (template_app (template_hole 4, template_var 0),
       template_app (template_hole 3, t_empty))),
    ("Denotational_Semantics.Vagree_and",
     "(Vagree ?\<nu> ?\<nu>' ?V & Vagree ?\<nu> ?\<nu>' ?W) =
      Vagree ?\<nu> ?\<nu>' (?V Un ?W)",
     template_equation
      (template_app
        (template_app
          (template_hole 2,
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 2),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 3),
             template_var 2),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 1, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 0, template_var 1),
           template_var 0)))),
    ("Denotational_Semantics.fml_sem_equals",
     "(?\<omega> : fml_sem ?I (Equals ?\<theta> ?\<eta>)) =
      (term_sem ?I ?\<theta> ?\<omega> = term_sem ?I ?\<eta> ?\<omega>)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 3),
              template_app
               (template_app (template_hole 3, template_var 2),
                template_app
                 (template_app (template_hole 2, template_var 1),
                  template_var 0)))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 3),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 0),
           template_var 3)))),
    ("Denotational_Semantics.mkinterp_eq",
     "(Consts ?I = Consts ?J &
       Funcs ?I = Funcs ?J & Preds ?I = Preds ?J & Games ?I = Games ?J) =
      (?I = ?J)",
     template_bimplication
      (template_dunno,
       template_equation (template_var 1, template_var 0)))]
