   [("USubst.Aterm_Some", "Aterm ?\<theta> = Aterm ?\<theta>",
     template_equation
      (template_app (template_hole 0, template_var 0),
       template_app (template_hole 0, template_var 0))),
    ("USubst.fst_pair", "fst (?a, ?b) = ?a",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 1)),
    ("USubst.snd_pair", "snd (?a, ?b) = ?b",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_var 0)),
    ("USubst.union_comm", "?A Un ?B = ?B Un ?A",
     template_equation
      (template_app
        (template_app (template_hole 0, template_var 1), template_var 0),
       template_app
        (template_app (template_hole 0, template_var 0), template_var 1))),
    ("USubst.repc_games", "Games (repc ?I ?f ?d) = Games ?I",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("USubst.repc_preds", "Preds (repc ?I ?f ?d) = Preds ?I",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("USubst.repc_funcs", "Funcs (repc ?I ?f ?d) = Funcs ?I",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app (template_hole 1, template_var 2))),
    ("USubst.Noto_undef", "(Noto ?\<phi> = undeff) = (?\<phi> = undeff)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("USubst.Differentialo_undef",
     "(Differentialo ?\<theta> = undeft) = (?\<theta> = undeft)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("USubst.Dualo_undef",
     "(Dualo ?\<alpha> = undefg) = (?\<alpha> = undefg)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("USubst.Loopo_undef",
     "(Loopo ?\<alpha> = undefg) = (?\<alpha> = undefg)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 0), template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("USubst.Testo_undef", "(Testo ?\<phi> = undefg) = (?\<phi> = undeff)",
     template_bimplication
      (template_equation
        (template_app (template_hole 3, template_var 0), template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("USubst.Existso_undef",
     "(Existso ?x ?\<phi> = undeff) = (?\<phi> = undeff)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 1, template_var 1), template_var 0),
         template_hole 0),
       template_equation (template_var 0, template_hole 0))),
    ("USubst.Assigno_undef",
     "(Assigno ?x ?\<theta> = undefg) = (?\<theta> = undeft)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("USubst.ODEo_undef",
     "(ODEo ?x ?\<theta> = undefg) = (?\<theta> = undeft)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 3, template_var 1), template_var 0),
         template_hole 2),
       template_equation (template_var 0, template_hole 0))),
    ("USubst.undeff_equiv",
     "(?\<phi> ~= undeff) = (EX f. ?\<phi> = Afml f)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app (template_hole 1, t_empty))),
    ("USubst.undeft_equiv",
     "(?\<theta> ~= undeft) = (EX t. ?\<theta> = Aterm t)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app (template_hole 1, t_empty))),
    ("USubst.undefg_equiv",
     "(?\<alpha> ~= undefg) = (EX g. ?\<alpha> = Agame g)",
     template_equation
      (template_app
        (template_hole 4,
         template_app
          (template_app (template_hole 3, template_var 0),
           template_hole 2)),
       template_app (template_hole 1, t_empty))),
    ("USubst.Ando_undef",
     "(Ando ?\<phi> ?\<psi> = undeff) =
      (?\<phi> = undeff | ?\<psi> = undeff)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_dunno)),
    ("USubst.Diamondo_undef",
     "(Diamondo ?\<alpha> ?\<phi> = undeff) =
      (?\<alpha> = undefg | ?\<phi> = undeff)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_hole 3),
       template_dunno)),
    ("USubst.Geqo_undef",
     "(Geqo ?\<theta> ?\<eta> = undeff) =
      (?\<theta> = undeft | ?\<eta> = undeft)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 4, template_var 1), template_var 0),
         template_hole 3),
       template_dunno)),
    ("USubst.Pluso_undef",
     "(Pluso ?\<theta> ?\<eta> = undeft) =
      (?\<theta> = undeft | ?\<eta> = undeft)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_dunno)),
    ("USubst.Timeso_undef",
     "(Timeso ?\<theta> ?\<eta> = undeft) =
      (?\<theta> = undeft | ?\<eta> = undeft)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_dunno)),
    ("USubst.Choiceo_undef",
     "(Choiceo ?\<alpha> ?\<beta> = undefg) =
      (?\<alpha> = undefg | ?\<beta> = undefg)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_dunno)),
    ("USubst.Composeo_undef",
     "(Composeo ?\<alpha> ?\<beta> = undefg) =
      (?\<alpha> = undefg | ?\<beta> = undefg)",
     template_bimplication
      (template_equation
        (template_app
          (template_app (template_hole 2, template_var 1), template_var 0),
         template_hole 1),
       template_dunno)),
    ("USubst.repc_consts",
     "Consts (repc ?I ?f ?d) ?c = (if ?c = ?f then ?d else Consts ?I ?c)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 3,
                template_app
                 (template_app
                   (template_app (template_hole 2, template_var 3),
                    template_var 2),
                  template_var 1)),
              template_var 0)
            )],
       template_dunno)),
    ("USubst.usubstappp_dual",
     "usubstappp ?\<sigma> ?U ?\<alpha>^d =
      (fst (usubstappp ?\<sigma> ?U ?\<alpha>),
       Dualo (snd (usubstappp ?\<sigma> ?U ?\<alpha>)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1),
               template_var 0))),
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1),
               template_var 0)))))),
    ("USubst.adjoint_dotsubstt",
     "USubst.adjoint (dotsubstt ?\<theta>) ?I ?\<omega> =
      repc ?I dotid (term_sem ?I ?\<theta> ?\<omega>)",
     template_equation
      (template_app
        (template_app
          (template_app
            (template_hole 6,
             template_app (template_hole 5, template_var 2)),
           template_var 1),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 4, template_var 1),
           template_app
            (template_app
              (template_app
                (template_app
                  (template_app
                    (template_app
                      (template_app
                        (template_app (template_hole 3, template_hole 2),
                         template_hole 1),
                       template_hole 1),
                     template_hole 1),
                   template_hole 2),
                 template_hole 1),
               template_hole 2),
             template_hole 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 1),
             template_var 2),
           template_var 0)))),
    ("USubst.usubstappp_loop",
     "usubstappp ?\<sigma> ?U ?\<alpha>** =
      (fst (usubstappp ?\<sigma> ?U ?\<alpha>),
       Loopo
        (snd (usubstappp ?\<sigma> (fst (usubstappp ?\<sigma> ?U ?\<alpha>))
               ?\<alpha>)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 2), template_var 1),
         template_app (template_hole 4, template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 5, template_var 2),
                 template_var 1),
               template_var 0))),
         template_app
          (template_hole 1,
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 5, template_var 2),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 2),
                       template_var 1),
                     template_var 0))),
               template_var 0)))))),
    ("USubst.adjoint_consts",
     "Consts (USubst.adjoint ?\<sigma> ?I ?\<omega>) ?f =
      term_sem ?I
       (case SConst ?\<sigma> ?f of None => Const ?f | Some r => r)
       ?\<omega>",
     template_equation
      (template_app
        (template_app
          (template_hole 7,
           template_app
            (template_app
              (template_app (template_hole 6, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app (template_hole 5, template_var 2),
           template_app
            (template_app
              (template_app
                (template_hole 4,
                 template_app (template_hole 3, template_var 0)),
               t_empty),
             template_app
              (template_app
                (template_app (template_hole 2, t_empty), template_var 3),
               template_var 0))),
         template_var 1))),
    ("USubst.adjoint_games",
     "Games (USubst.adjoint ?\<sigma> ?I ?\<omega>) ?a =
      (case SGames ?\<sigma> ?a of None => Games ?I ?a
       | Some r => game_sem ?I r)",
     template_equation
      (template_app
        (template_app
          (template_hole 6,
           template_app
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 6, template_var 2),
               template_var 0)),
           t_empty),
         template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 3),
           template_var 0)))),
    ("USubst.usubstr_union_undef",
     "(usubstr ?\<sigma> (?A @ ?B, ?C) ~= None) =
      (usubstr ?\<sigma> (?A, ?C) ~= None &
       usubstr ?\<sigma> (?B, ?C) ~= None)",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 4, template_var 3),
               template_app
                (template_app
                  (template_hole 3,
                   template_app
                    (template_app (template_hole 2, template_var 2),
                     template_var 1)),
                 template_var 0)),
             template_hole 1)
           ),
       template_dunno)),
    ("USubst.usubstr_cons_undef",
     "(usubstr ?\<sigma> (?A # ?B, ?C) ~= None) =
      (usubstr ?\<sigma> ([?A], ?C) ~= None &
       usubstr ?\<sigma> (?B, ?C) ~= None)",
     template_bimplication
      (template_negation
        (
           template_equation
            (template_app
              (template_app (template_hole 5, template_var 3),
               template_app
                (template_app
                  (template_hole 4,
                   template_app
                    (template_app (template_hole 3, template_var 2),
                     template_var 1)),
                 template_var 0)),
             template_hole 2)
           ),
       template_dunno)),
    ("USubst.usubstappp_choice",
     "usubstappp ?\<sigma> ?U (?\<alpha> \<union>\<union> ?\<beta>) =
      (fst (usubstappp ?\<sigma> ?U ?\<alpha>) Un
       fst (usubstappp ?\<sigma> ?U ?\<beta>),
       Choiceo (snd (usubstappp ?\<sigma> ?U ?\<alpha>))
        (snd (usubstappp ?\<sigma> ?U ?\<beta>)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 6, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 5, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 4,
           template_app
            (template_app
              (template_hole 3,
               template_app
                (template_hole 2,
                 template_app
                  (template_app
                    (template_app (template_hole 6, template_var 3),
                     template_var 2),
                   template_var 1))),
             template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 2),
                 template_var 0)))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 6, template_var 3),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 6, template_var 3),
                 template_var 2),
               template_var 0)))))),
    ("USubst.usubstappp_compose",
     "usubstappp ?\<sigma> ?U (?\<alpha> ;; ?\<beta>) =
      (fst (usubstappp ?\<sigma> (fst (usubstappp ?\<sigma> ?U ?\<alpha>))
             ?\<beta>),
       Composeo (snd (usubstappp ?\<sigma> ?U ?\<alpha>))
        (snd (usubstappp ?\<sigma> (fst (usubstappp ?\<sigma> ?U ?\<alpha>))
               ?\<beta>)))",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 5, template_var 3), template_var 2),
         template_app
          (template_app (template_hole 4, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 3,
           template_app
            (template_hole 2,
             template_app
              (template_app
                (template_app (template_hole 5, template_var 3),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 3),
                       template_var 2),
                     template_var 1))),
               template_var 0))),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_hole 0,
               template_app
                (template_app
                  (template_app (template_hole 5, template_var 3),
                   template_var 2),
                 template_var 1))),
           template_app
            (template_hole 0,
             template_app
              (template_app
                (template_app (template_hole 5, template_var 3),
                 template_app
                  (template_hole 2,
                   template_app
                    (template_app
                      (template_app (template_hole 5, template_var 3),
                       template_var 2),
                     template_var 1))),
               template_var 0)))))),
    ("USubst.adjoint_funcs",
     "Funcs (USubst.adjoint ?\<sigma> ?I ?\<omega>) ?f =
      (case SFuncs ?\<sigma> ?f of None => Funcs ?I ?f
       | Some r => %d. term_sem (repc ?I dotid d) r ?\<omega>)",
     template_equation
      (template_app
        (template_app
          (template_hole 10,
           template_app
            (template_app
              (template_app (template_hole 9, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app (template_hole 10, template_var 2),
               template_var 0)),
           t_empty),
         template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 3),
           template_var 0)))),
    ("USubst.adjoint_preds",
     "Preds (USubst.adjoint ?\<sigma> ?I ?\<omega>) ?p =
      (case SPreds ?\<sigma> ?p of None => Preds ?I ?p
       | Some r => %d. ?\<omega> : fml_sem (repc ?I dotid d) r)",
     template_equation
      (template_app
        (template_app
          (template_hole 11,
           template_app
            (template_app
              (template_app (template_hole 10, template_var 3),
               template_var 2),
             template_var 1)),
         template_var 0),
       template_app
        (template_app
          (template_app
            (template_hole 9,
             template_app
              (template_app (template_hole 11, template_var 2),
               template_var 0)),
           t_empty),
         template_app
          (template_app
            (template_app (template_hole 2, t_empty), template_var 3),
           template_var 0))))]
