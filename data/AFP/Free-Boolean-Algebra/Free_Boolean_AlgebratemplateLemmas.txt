   [("Free_Boolean_Algebra.formulas_bot", "bot : formulas ?S",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Free_Boolean_Algebra.formulas_top", "top : formulas ?S",
     template_predicate
      (
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app (template_hole 0, template_var 0))
         )),
    ("Free_Boolean_Algebra.hom_bot", "hom ?f bot = bot",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Free_Boolean_Algebra.hom_top", "hom ?f top = top",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Free_Boolean_Algebra.fmap_bot", "fmap ?f bot = bot",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Free_Boolean_Algebra.fmap_top", "fmap ?f top = top",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 0), template_hole 1),
       template_hole 0)),
    ("Free_Boolean_Algebra.hom_var_eq_id", "hom var ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 1, template_hole 0), template_var 0),
       template_var 0)),
    ("Free_Boolean_Algebra.ifte_bot", "ifte bot ?x ?y = ?y",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0),
       template_var 0)),
    ("Free_Boolean_Algebra.ifte_top", "ifte top ?x ?y = ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 1, template_hole 0), template_var 1),
         template_var 0),
       template_var 1)),
    ("Free_Boolean_Algebra.ifte_same", "ifte ?a ?x ?x = ?x",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 1), template_var 0),
         template_var 0),
       template_var 0)),
    ("Free_Boolean_Algebra.fmap_ident", "fmap (%i. i) ?x = ?x",
     template_equation
      (template_app
        (template_app (template_hole 0, t_empty), template_var 0),
       template_var 0)),
    ("Free_Boolean_Algebra.var_eq_var_simps", "var ?i ~= - var ?j",
     template_negation
      (
         template_equation
          (template_app (template_hole 1, template_var 1),
           template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)))
         )),
    ("Free_Boolean_Algebra.var_eq_var_simps", "- var ?i ~= var ?j",
     template_negation
      (
         template_equation
          (template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Free_Boolean_Algebra.var_le_var_simps", "~ var ?i <= - var ?j",
     template_negation
      (
         template_inequation
          (less_equals, template_app (template_hole 1, template_var 1),
           template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 0)))
         )),
    ("Free_Boolean_Algebra.var_le_var_simps", "~ - var ?i <= var ?j",
     template_negation
      (
         template_inequation
          (less_equals,
           template_app
            (template_hole 1,
             template_app (template_hole 0, template_var 1)),
           template_app (template_hole 0, template_var 0))
         )),
    ("Free_Boolean_Algebra.hom_var", "hom ?f (var ?i) = ?f ?i",
     template_equation
      (template_app
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 0, template_var 0)),
       template_app (template_var 1, template_var 0))),
    ("Free_Boolean_Algebra.Rep_formula_compl",
     "Rep_formula (- ?x) = - Rep_formula ?x",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_hole 2, template_var 0)))),
    ("Free_Boolean_Algebra.fmap_var", "fmap ?f (var ?i) = var (?f ?i)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0, template_app (template_var 1, template_var 0)))),
    ("Free_Boolean_Algebra.hom_graph_var",
     "hom_graph ?f {?i} (var ?i) (?f ?i)",
     template_predicate
      (
         template_app
          (template_app
            (template_app
              (template_app (template_hole 3, template_var 1),
               template_app
                (template_app (template_hole 2, template_var 0),
                 template_hole 1)),
             template_app (template_hole 0, template_var 0)),
           template_app (template_var 1, template_var 0))
         )),
    ("Free_Boolean_Algebra.hom_graph_exists", "EX a S. hom_graph ?f S ?x a",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("Free_Boolean_Algebra.hom_graph_hom",
     "EX S. hom_graph ?f S ?x (hom ?f ?x)",
     template_predicate (template_app (template_hole 2, t_empty))),
    ("Free_Boolean_Algebra.hom_compl", "hom ?f (- ?x) = - hom ?f ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Free_Boolean_Algebra.Rep_formula_var",
     "Rep_formula (var ?i) = {A. ?i : A}",
     template_equation
      (template_app
        (template_hole 3, template_app (template_hole 2, template_var 0)),
       template_app (template_hole 1, t_empty))),
    ("Free_Boolean_Algebra.eq_formula_iff",
     "(?x = ?y) = (Rep_formula ?x = Rep_formula ?y)",
     template_bimplication
      (template_equation (template_var 1, template_var 0),
       template_equation
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Free_Boolean_Algebra.Rep_formula_simps",
     "(?x < ?y) = (Rep_formula ?x < Rep_formula ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Free_Boolean_Algebra.Rep_formula_simps",
     "(?x <= ?y) = (Rep_formula ?x <= Rep_formula ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_app
          (template_hole 1, template_app (template_hole 0, template_var 1)),
         template_app (template_hole 0, template_var 0)))),
    ("Free_Boolean_Algebra.var_eq_var_simps",
     "(var ?i = var ?j) = (?i = ?j)",
     template_bimplication
      (template_equation
        (template_app (template_hole 1, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_equation (template_var 1, template_var 0))),
    ("Free_Boolean_Algebra.var_le_var_simps",
     "(var ?i <= var ?j) = (?i = ?j)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_hole 2,
                template_app (template_hole 1, template_var 1)),
              template_app (template_hole 1, template_var 0))
            )],
       template_equation (template_var 1, template_var 0))),
    ("Free_Boolean_Algebra.formulas_var_iff",
     "(var ?i : formulas ?S) = (?i : ?S)",
     template_equation
      (template_app
        (template_app
          (template_hole 3, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1), template_var 0))),
    ("Free_Boolean_Algebra.fmap_compl", "fmap ?f (- ?x) = - fmap ?f ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1),
         template_app (template_hole 1, template_var 0)),
       template_app
        (template_hole 0,
         template_app
          (template_app (template_hole 2, template_var 1),
           template_var 0)))),
    ("Free_Boolean_Algebra.hom_graph_imp_finite",
     "hom_graph ?f ?S ?x ?a ==> finite ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (template_app (template_hole 0, template_var 2)))),
    ("Free_Boolean_Algebra.sup_conv_inf", "sup ?x ?y = - inf (- ?x) (- ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 1), template_var 0),
       template_app
        (template_hole 1,
         template_app
          (template_app
            (template_hole 0,
             template_app (template_hole 1, template_var 1)),
           template_app (template_hole 1, template_var 0))))),
    ("Free_Boolean_Algebra.Rep_formula_diff",
     "Rep_formula (?x - ?y) = Rep_formula ?x - Rep_formula ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Free_Boolean_Algebra.Rep_formula_inf",
     "Rep_formula (inf ?x ?y) = Rep_formula ?x Int Rep_formula ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Free_Boolean_Algebra.Rep_formula_sup",
     "Rep_formula (sup ?x ?y) = Rep_formula ?x Un Rep_formula ?y",
     template_equation
      (template_app
        (template_hole 2,
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0, template_app (template_hole 2, template_var 1)),
         template_app (template_hole 2, template_var 0)))),
    ("Free_Boolean_Algebra.formulas_mono",
     "?S <= ?T ==> formulas ?S <= formulas ?T",
     template_implication
      ([template_inequation (less_equals, template_var 1, template_var 0)],
       template_inequation
        (less_equals, template_app (template_hole 0, template_var 1),
         template_app (template_hole 0, template_var 0)))),
    ("Free_Boolean_Algebra.formulas_var",
     "?i : ?S ==> var ?i : formulas ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 3, template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Free_Boolean_Algebra.fmap_fmap",
     "fmap ?f (fmap ?g ?x) = fmap (?f o ?g) ?x",
     template_equation
      (template_app
        (template_app (template_hole 3, template_var 2),
         template_app
          (template_app (template_hole 2, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1)),
         template_var 0))),
    ("Free_Boolean_Algebra.formulas_compl",
     "?x : formulas ?S ==> - ?x : formulas ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app (template_hole 0, template_var 1)),
             template_app (template_hole 1, template_var 0))
           ))),
    ("Free_Boolean_Algebra.hom_graph_imp_formulas",
     "hom_graph ?f ?S ?x ?a ==> ?x : formulas ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 1),
             template_app (template_hole 0, template_var 2))
           ))),
    ("Free_Boolean_Algebra.compl_ifte",
     "- ifte ?a ?x ?y = ifte ?a (- ?x) (- ?y)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app
            (template_app (template_hole 0, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 2),
           template_app (template_hole 1, template_var 1)),
         template_app (template_hole 1, template_var 0)))),
    ("Free_Boolean_Algebra.formulas_insert",
     "?x : formulas ?S ==> ?x : formulas (insert ?a ?S)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app (template_hole 2, template_var 2),
             template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 0),
                 template_var 1)))
           ))),
    ("Free_Boolean_Algebra.hom_equality",
     "hom_graph ?f ?S ?x ?a ==> hom ?f ?x = ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_app (template_hole 0, template_var 3), template_var 1),
         template_var 0))),
    ("Free_Boolean_Algebra.hom_hom",
     "hom ?f (hom ?g ?x) = hom (%i. hom ?f (?g i)) ?x",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, t_empty), template_var 0))),
    ("Free_Boolean_Algebra.hom_diff",
     "hom ?f (?x - ?y) = hom ?f ?x - hom ?f ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Free_Boolean_Algebra.hom_inf",
     "hom ?f (inf ?x ?y) = inf (hom ?f ?x) (hom ?f ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Free_Boolean_Algebra.hom_sup",
     "hom ?f (sup ?x ?y) = sup (hom ?f ?x) (hom ?f ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Free_Boolean_Algebra.fmap_diff",
     "fmap ?f (?x - ?y) = fmap ?f ?x - fmap ?f ?y",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Free_Boolean_Algebra.fmap_inf",
     "fmap ?f (inf ?x ?y) = inf (fmap ?f ?x) (fmap ?f ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Free_Boolean_Algebra.fmap_sup",
     "fmap ?f (sup ?x ?y) = sup (fmap ?f ?x) (fmap ?f ?y)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 2),
         template_app
          (template_app (template_hole 1, template_var 1), template_var 0)),
       template_app
        (template_app
          (template_hole 0,
           template_app
            (template_app (template_hole 2, template_var 2),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 2),
           template_var 0)))),
    ("Free_Boolean_Algebra.hom_graph_compl",
     "hom_graph ?f ?S ?x ?a ==> hom_graph ?f ?S (- ?x) (- ?a)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 3),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 3),
                 template_var 2),
               template_app (template_hole 1, template_var 1)),
             template_app (template_hole 0, template_var 0))
           ))),
    ("Free_Boolean_Algebra.hom_graph_insert",
     "hom_graph ?f ?S ?x ?a ==> hom_graph ?f (insert ?i ?S) ?x ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 1, template_var 4),
                 template_app
                  (template_app (template_hole 0, template_var 0),
                   template_var 3)),
               template_var 2),
             template_var 1)
           ))),
    ("Free_Boolean_Algebra.fba_Diff",
     "[| ?S : fba; ?T : fba |] ==> ?S - ?T : fba",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Free_Boolean_Algebra.fba_union",
     "[| ?S : fba; ?T : fba |] ==> ?S Un ?T : fba",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_hole 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_hole 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 0)),
             template_hole 1)
           ))),
    ("Free_Boolean_Algebra.hom_ifte",
     "hom ?f (ifte ?x ?y ?z) = ifte (hom ?f ?x) (hom ?f ?y) (hom ?f ?z)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Free_Boolean_Algebra.fmap_ifte",
     "fmap ?f (ifte ?x ?y ?z) =
      ifte (fmap ?f ?x) (fmap ?f ?y) (fmap ?f ?z)",
     template_equation
      (template_app
        (template_app (template_hole 2, template_var 3),
         template_app
          (template_app
            (template_app (template_hole 1, template_var 2),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app
            (template_hole 0,
             template_app
              (template_app (template_hole 2, template_var 3),
               template_var 2)),
           template_app
            (template_app (template_hole 2, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 2, template_var 3),
           template_var 0)))),
    ("Free_Boolean_Algebra.hom_graph_unique",
     "[| hom_graph ?f ?S ?x ?a; hom_graph ?f ?S ?x ?a' |] ==> ?a = ?a'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 0)
            )],
       template_equation (template_var 1, template_var 0))),
    ("Free_Boolean_Algebra.hom_graph_unique'",
     "[| hom_graph ?f ?S ?x ?a; hom_graph ?f ?T ?x ?a' |] ==> ?a = ?a'",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 1, template_var 5),
                  template_var 1),
                template_var 3),
              template_var 0)
            )],
       template_equation (template_var 2, template_var 0))),
    ("Free_Boolean_Algebra.inf_ifte_distrib",
     "inf (ifte ?x ?a ?b) (ifte ?x ?c ?d) =
      ifte ?x (inf ?a ?c) (inf ?b ?d)",
     template_equation
      (template_app
        (template_app
          (template_hole 1,
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 4),
           template_app
            (template_app (template_hole 1, template_var 3),
             template_var 1)),
         template_app
          (template_app (template_hole 1, template_var 2),
           template_var 0)))),
    ("Free_Boolean_Algebra.formulas_diff",
     "[| ?x : formulas ?S; ?y : formulas ?S |] ==> ?x - ?y : formulas ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Free_Boolean_Algebra.formulas_inf",
     "[| ?x : formulas ?S; ?y : formulas ?S |] ==> inf ?x ?y : formulas ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Free_Boolean_Algebra.formulas_sup",
     "[| ?x : formulas ?S; ?y : formulas ?S |] ==> sup ?x ?y : formulas ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 1))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 1))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 0, template_var 2),
                 template_var 0)),
             template_app (template_hole 1, template_var 1))
           ))),
    ("Free_Boolean_Algebra.ifte_ifte_distrib",
     "ifte ?x (ifte ?y ?a ?b) (ifte ?y ?c ?d) =
      ifte ?y (ifte ?x ?a ?c) (ifte ?x ?b ?d)",
     template_equation
      (template_app
        (template_app
          (template_app (template_hole 0, template_var 5),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 4),
               template_var 3),
             template_var 2)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 4),
             template_var 1),
           template_var 0)),
       template_app
        (template_app
          (template_app (template_hole 0, template_var 4),
           template_app
            (template_app
              (template_app (template_hole 0, template_var 5),
               template_var 3),
             template_var 1)),
         template_app
          (template_app
            (template_app (template_hole 0, template_var 5),
             template_var 2),
           template_var 0)))),
    ("Free_Boolean_Algebra.hom_graph_finite_superset",
     "[| hom_graph ?f ?S ?x ?a; finite ?T; ?S <= ?T |]
      ==> hom_graph ?f ?T ?x ?a",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 1, template_var 0)),
        template_inequation (less_equals, template_var 3, template_var 0)],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 4),
                 template_var 0),
               template_var 2),
             template_var 1)
           ))),
    ("Free_Boolean_Algebra.hom_graph_inf",
     "[| hom_graph ?f ?S ?x ?a; hom_graph ?f ?S ?y ?b |]
      ==> hom_graph ?f ?S (inf ?x ?y) (inf ?a ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 3),
              template_var 2)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 2, template_var 5),
                  template_var 4),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 2, template_var 5),
                 template_var 4),
               template_app
                (template_app (template_hole 1, template_var 3),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 2),
               template_var 0))
           ))),
    ("Free_Boolean_Algebra.hom_graph_union_inf",
     "[| hom_graph ?f ?S ?x ?a; hom_graph ?f ?T ?y ?b |]
      ==> hom_graph ?f (?S Un ?T) (inf ?x ?y) (inf ?a ?b)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 5),
                template_var 4),
              template_var 3)
            ),
        template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 3, template_var 6),
                  template_var 2),
                template_var 1),
              template_var 0)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_app (template_hole 3, template_var 6),
                 template_app
                  (template_app (template_hole 2, template_var 5),
                   template_var 2)),
               template_app
                (template_app (template_hole 1, template_var 4),
                 template_var 1)),
             template_app
              (template_app (template_hole 0, template_var 3),
               template_var 0))
           ))),
    ("Free_Boolean_Algebra.formulas_ifte",
     "[| ?a : formulas ?S; ?x : formulas ?S; ?y : formulas ?S |]
      ==> ifte ?a ?x ?y : formulas ?S",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app (template_hole 1, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 0),
              template_app (template_hole 1, template_var 2))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app
                  (template_app (template_hole 0, template_var 3),
                   template_var 1),
                 template_var 0)),
             template_app (template_hole 1, template_var 2))
           ))),
    ("Free_Boolean_Algebra.formulasD",
     "[| ?x : formulas ?S; ALL i:?S. (i : ?A) = (i : ?B) |]
      ==> (?A : Rep_formula ?x) = (?B : Rep_formula ?x)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 3),
              template_app (template_hole 5, template_var 2))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 4, template_var 2), t_empty)
            )],
       template_equation
        (template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 3)),
         template_app
          (template_app (template_hole 1, template_var 0),
           template_app (template_hole 0, template_var 3))))),
    ("Free_Boolean_Algebra.formulasI",
     "(!!A B.
          ALL i:?S. (i : A) = (i : B) ==>
          (A : Rep_formula ?x) = (B : Rep_formula ?x)) ==>
      ?x : formulas ?S",
     template_implication
      ([template_predicate (template_app (template_hole 8, t_empty))],
       template_predicate
        (
           template_app
            (template_app (template_hole 1, template_var 0),
             template_app (template_hole 0, template_var 1))
           ))),
    ("Free_Boolean_Algebra.formula_induct",
     "[| !!i. ?P (var i); !!x. ?P x ==> ?P (- x);
         !!x y. [| ?P x; ?P y |] ==> ?P (inf x y) |]
      ==> ?P ?x",
     template_implication
      ([template_predicate (template_app (template_hole 5, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty)),
        template_predicate (template_app (template_hole 2, t_empty))],
       template_predicate (template_app (template_var 1, template_var 0)))),
    ("Free_Boolean_Algebra.ifte_inject",
     "[| ifte (var ?i) ?x ?y = ifte (var ?i) ?x' ?y'; ?i ~: ?S;
         ?x : formulas ?S; ?x' : formulas ?S; ?y : formulas ?S;
         ?y' : formulas ?S |]
      ==> ?x = ?x' & ?y = ?y'",
     template_implication
      ([template_equation
         (template_app
           (template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 5)),
              template_var 4),
            template_var 3),
          template_app
           (template_app
             (template_app
               (template_hole 6,
                template_app (template_hole 5, template_var 5)),
              template_var 2),
            template_var 1)),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 3, template_var 5),
                  template_var 0)
                )
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 4),
              template_app (template_hole 1, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_app (template_hole 1, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 3),
              template_app (template_hole 1, template_var 0))
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 1),
              template_app (template_hole 1, template_var 0))
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 7, template_var 4),
                 template_var 2)),
             template_app
              (template_app (template_hole 7, template_var 3),
               template_var 1))
           ))),
    ("Free_Boolean_Algebra.hom_graph_dest",
     "[| hom_graph ?f ?S ?x ?a; ?k : ?S |]
      ==> EX y z b c.
             ?x = ifte (var ?k) y z &
             ?a = ifte (?f ?k) b c &
             hom_graph ?f (?S - {?k}) y b & hom_graph ?f (?S - {?k}) z c",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 12, template_var 4),
                  template_var 3),
                template_var 2),
              template_var 1)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_var 3)
            )],
       template_predicate (template_app (template_hole 10, t_empty)))),
    ("Free_Boolean_Algebra.hom_graph_insert_elim",
     "[| hom_graph ?f (insert ?i ?S) ?x ?a; ?i ~: ?S;
         !!y z b c.
            [| ?x = ifte (var ?i) y z; ?a = ifte (?f ?i) b c;
               hom_graph ?f ?S y b; hom_graph ?f ?S z c |]
            ==> ?thesis |]
      ==> ?thesis",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app
                 (template_app (template_hole 10, template_var 5),
                  template_app
                   (template_app (template_hole 9, template_var 4),
                    template_var 3)),
                template_var 2),
              template_var 1)
            ),
        template_negation
         (
            template_predicate
             (
                template_app
                 (template_app (template_hole 7, template_var 4),
                  template_var 3)
                )
            ),
        template_predicate (template_app (template_hole 6, t_empty))],
       template_predicate (template_var 0)))]
