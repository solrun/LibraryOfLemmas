   [("Geometric_PMF.bernoulli_pmf_Not",
     "?p : {0..1} ==>
      bernoulli_pmf ?p = map_pmf Not (bernoulli_pmf (1 - ?p))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_var 0),
              template_app
               (template_app (template_hole 7, template_hole 6),
                template_hole 5))
            )],
       template_equation
        (template_app (template_hole 3, template_var 0),
         template_app
          (template_app (template_hole 2, template_hole 1),
           template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 0, template_hole 5),
               template_var 0)))))),
    ("Geometric_PMF.geometric_pmf_prob_atLeast",
     "?p : {0<..1} ==>
      measure_pmf.prob (geometric_pmf ?p) {?n..} = (1 - ?p) ^ ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_hole 7))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1))),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app
            (template_hole 1,
             template_app
              (template_app (template_hole 0, template_hole 7),
               template_var 1)),
           template_var 0)))),
    ("Geometric_PMF.geometric_pmf_prob_greaterThan",
     "?p : {0<..1} ==>
      measure_pmf.prob (geometric_pmf ?p) {?n<..} = (1 - ?p) ^ (?n + 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_hole 9))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1))),
           template_app (template_hole 4, template_var 0)),
         template_app
          (template_app
            (template_hole 3,
             template_app
              (template_app (template_hole 2, template_hole 9),
               template_var 1)),
           template_app
            (template_app (template_hole 1, template_var 0),
             template_hole 0))))),
    ("Geometric_PMF.geometric_pmf_prob_lessThan",
     "?p : {0<..1} ==>
      measure_pmf.prob (geometric_pmf ?p) {..<?n} = 1 - (1 - ?p) ^ ?n",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 10, template_var 1),
              template_app
               (template_app (template_hole 9, template_hole 8),
                template_hole 7))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 4,
               template_app (template_hole 3, template_var 1))),
           template_app (template_hole 2, template_var 0)),
         template_app
          (template_app (template_hole 1, template_hole 7),
           template_app
            (template_app
              (template_hole 0,
               template_app
                (template_app (template_hole 1, template_hole 7),
                 template_var 1)),
             template_var 0))))),
    ("Geometric_PMF.nn_integral_geometric_pmf",
     "?p : {0<..1} ==>
      \<integral>\<^sup>+ x. ennreal (real x)
                         \<partial>measure_pmf (geometric_pmf ?p) =
      ennreal ((1 - ?p) / ?p)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 0),
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_hole 8))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 6,
             template_app
              (template_hole 5,
               template_app (template_hole 4, template_var 0))),
           t_empty),
         template_app
          (template_hole 3,
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_hole 8),
                 template_var 0)),
             template_var 0))))),
    ("Geometric_PMF.geometric_pmf_prob_atMost",
     "?p : {0<..1} ==>
      measure_pmf.prob (geometric_pmf ?p) {..?n} = 1 - (1 - ?p) ^ (?n + 1)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 12, template_var 1),
              template_app
               (template_app (template_hole 11, template_hole 10),
                template_hole 9))
            )],
       template_equation
        (template_app
          (template_app
            (template_hole 7,
             template_app
              (template_hole 6,
               template_app (template_hole 5, template_var 1))),
           template_app (template_hole 4, template_var 0)),
         template_app
          (template_app (template_hole 3, template_hole 9),
           template_app
            (template_app
              (template_hole 2,
               template_app
                (template_app (template_hole 3, template_hole 9),
                 template_var 1)),
             template_app
              (template_app (template_hole 1, template_var 0),
               template_hole 0)))))),
    ("Geometric_PMF.bernoulli_pmf_of_set'",
     "finite ?A ==>
      map_pmf (%b. {x: ?A. ~ b x})
       (Pi_pmf.Pi_pmf ?A ?P (%_. bernoulli_pmf (1 / 2))) =
      pmf_of_set (Pow ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 15, template_var 1))],
       template_equation
        (template_app
          (template_app (template_hole 13, t_empty),
           template_app
            (template_app
              (template_app (template_hole 8, template_var 1),
               template_var 0),
             t_empty)),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 1))))),
    ("Geometric_PMF.binomial_pmf_altdef''",
     "?p : {0..1} ==>
      binomial_pmf ?n ?p =
      map_pmf (%f. card {x. x < ?n & f x})
       (Pi_pmf.Pi_pmf {..<?n} ?dflt (%_. bernoulli_pmf ?p))",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 13, template_var 2),
              template_app
               (template_app (template_hole 12, template_hole 11),
                template_hole 10))
            )],
       template_equation
        (template_app
          (template_app (template_hole 8, template_var 1), template_var 2),
         template_app
          (template_app (template_hole 7, t_empty),
           template_app
            (template_app
              (template_app
                (template_hole 2,
                 template_app (template_hole 1, template_var 1)),
               template_var 0),
             t_empty))))),
    ("Geometric_PMF.Pi_pmf_pmf_of_set_Suc",
     "finite ?A ==>
      Pi_pmf.Pi_pmf ?A 0 (%_. geometric_pmf (1 / 2)) =
      pmf_of_set (Pow ?A) >>=
      (%B. Pi_pmf.Pi_pmf B 0 (%_. map_pmf Suc (geometric_pmf (1 / 2))))",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 12, template_var 0),
             template_hole 11),
           t_empty),
         template_app
          (template_app
            (template_hole 4,
             template_app
              (template_hole 3,
               template_app (template_hole 2, template_var 0))),
           t_empty)))),
    ("Geometric_PMF.binomial_pmf_altdef'",
     "[| finite ?A; card ?A = ?n; ?p : {0..1} |]
      ==> binomial_pmf ?n ?p =
          map_pmf (%f. card {x: ?A. f x})
           (Pi_pmf.Pi_pmf ?A ?dflt (%_. bernoulli_pmf ?p))",
     template_implication
      ([template_predicate
         (template_app (template_hole 14, template_var 3)),
        template_equation
         (template_app (template_hole 12, template_var 3), template_var 2),
        template_predicate
         (
            template_app
             (template_app (template_hole 11, template_var 1),
              template_app
               (template_app (template_hole 10, template_hole 9),
                template_hole 8))
            )],
       template_equation
        (template_app
          (template_app (template_hole 6, template_var 2), template_var 1),
         template_app
          (template_app (template_hole 5, t_empty),
           template_app
            (template_app
              (template_app (template_hole 1, template_var 3),
               template_var 0),
             t_empty))))),
    ("Geometric_PMF.Pi_pmf_geometric_filter",
     "[| finite ?A; ?p : {0<..1} |]
      ==> Pi_pmf.Pi_pmf ?A 0 (%_. geometric_pmf ?p) =
          Pi_pmf.Pi_pmf ?A ?dflt (%_. bernoulli_pmf ?p) >>=
          (%fb. Pi_pmf.Pi_pmf {x: ?A. ~ fb x} 0
                 (%_. map_pmf Suc (geometric_pmf ?p)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app
               (template_app (template_hole 15, template_hole 14),
                template_hole 13))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 11, template_var 2),
             template_hole 10),
           t_empty),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 0),
               t_empty)),
           t_empty)))),
    ("Geometric_PMF.Pi_pmf_geometric_filter'",
     "[| finite ?A; ?p : {0<..1} |]
      ==> Pi_pmf.Pi_pmf ?A 0 (%_. geometric_pmf ?p) =
          Pi_pmf.Pi_pmf ?A ?dflt (%_. bernoulli_pmf (1 - ?p)) >>=
          (%fb. Pi_pmf.Pi_pmf {x: ?A. fb x} 0
                 (%_. map_pmf Suc (geometric_pmf ?p)))",
     template_implication
      ([template_predicate
         (template_app (template_hole 17, template_var 2)),
        template_predicate
         (
            template_app
             (template_app (template_hole 16, template_var 1),
              template_app
               (template_app (template_hole 15, template_hole 14),
                template_hole 13))
            )],
       template_equation
        (template_app
          (template_app
            (template_app (template_hole 11, template_var 2),
             template_hole 10),
           t_empty),
         template_app
          (template_app
            (template_hole 8,
             template_app
              (template_app
                (template_app (template_hole 7, template_var 2),
                 template_var 0),
               t_empty)),
           t_empty))))]
