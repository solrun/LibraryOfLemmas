   [("Misc.sorted_list_of_set_length",
     "length (sorted_list_of_set ?A) = card ?A",
     template_equation
      (template_app
        (template_hole 2, template_app (template_hole 1, template_var 0)),
       template_app (template_hole 0, template_var 0))),
    ("Misc.bij_mono_map_set_to_nat",
     "finite ?A ==> mono_on (bij_mono_map_set_to_nat ?A) ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 2, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)),
             template_var 0)
           ))),
    ("Misc.rev_removeAll_removeAll_rev",
     "rev (removeAll ?x ?xs) = removeAll ?x (rev ?xs)",
     template_equation
      (template_app
        (template_hole 1,
         template_app
          (template_app (template_hole 0, template_var 1), template_var 0)),
       template_app
        (template_app (template_hole 0, template_var 1),
         template_app (template_hole 1, template_var 0)))),
    ("Misc.bij_mono_map_set_to_nat",
     "finite ?A ==> bij_betw (bij_mono_map_set_to_nat ?A) ?A {..<card ?A}",
     template_implication
      ([template_predicate
         (template_app (template_hole 4, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app
                (template_hole 3,
                 template_app (template_hole 2, template_var 0)),
               template_var 0),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Misc.bij_mono_map_set_to_nat",
     "finite ?A ==> bij_mono_map_set_to_nat ?A ` ?A = {..<card ?A}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_equation
        (template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_var 0),
         template_app
          (template_hole 1,
           template_app (template_hole 0, template_var 0))))),
    ("Misc.sorted_list_of_set_mono_on",
     "finite ?A ==> mono_on ((!) (sorted_list_of_set ?A)) {..<card ?A}",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app (template_hole 4, t_empty),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Misc.sorted_list_of_set_bij_betw",
     "finite ?A ==> bij_betw ((!) (sorted_list_of_set ?A)) {..<card ?A} ?A",
     template_implication
      ([template_predicate
         (template_app (template_hole 5, template_var 0))],
       template_predicate
        (
           template_app
            (template_app
              (template_app (template_hole 4, t_empty),
               template_app
                (template_hole 1,
                 template_app (template_hole 0, template_var 0))),
             template_var 0)
           ))),
    ("Misc.bij_betw_mono_on_the_inv_into",
     "[| bij_betw ?f ?A ?B; mono_on ?f ?A |]
      ==> mono_on (the_inv_into ?A ?f) ?B",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app
               (template_app (template_hole 3, template_var 2),
                template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 2, template_var 2),
              template_var 1)
            )],
       template_predicate
        (
           template_app
            (template_app
              (template_hole 1,
               template_app
                (template_app (template_hole 0, template_var 1),
                 template_var 2)),
             template_var 0)
           ))),
    ("Misc.sorted_list_of_set_filter",
     "finite ?A ==>
      sorted_list_of_set {x: ?A. ?P x} = filter ?P (sorted_list_of_set ?A)",
     template_implication
      ([template_predicate
         (template_app (template_hole 6, template_var 1))],
       template_equation
        (template_app
          (template_hole 4, template_app (template_hole 3, t_empty)),
         template_app
          (template_app (template_hole 0, template_var 0),
           template_app (template_hole 4, template_var 1))))),
    ("Misc.sorted_list_of_set_image",
     "[| mono_on ?g ?A; inj_on ?g ?A |]
      ==> sorted_list_of_set (?g ` ?A) = map ?g (sorted_list_of_set ?A)",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 6, template_var 1),
              template_var 0)
            ),
        template_predicate
         (
            template_app
             (template_app (template_hole 5, template_var 1),
              template_var 0)
            )],
       template_equation
        (template_app
          (template_hole 3,
           template_app
            (template_app (template_hole 2, template_var 1),
             template_var 0)),
         template_app
          (template_app (template_hole 1, template_var 1),
           template_app (template_hole 0, template_var 0))))),
    ("Misc.sorted_list_of_set_Min_Cons",
     "[| finite ?A; ?A ~= {} |]
      ==> sorted_list_of_set ?A =
          Min ?A # sorted_list_of_set (?A - {Min ?A})",
     template_implication
      ([template_predicate (template_app (template_hole 9, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 6))],
       template_equation
        (template_app (template_hole 4, template_var 0),
         template_app
          (template_app
            (template_hole 3,
             template_app (template_hole 2, template_var 0)),
           template_app
            (template_hole 4,
             template_app
              (template_app (template_hole 1, template_var 0),
               template_app
                (template_app
                  (template_hole 0,
                   template_app (template_hole 2, template_var 0)),
                 template_hole 6))))))),
    ("Misc.nth_mono_on",
     "[| sorted ?xs; distinct ?xs; set ?xs = ?A |]
      ==> mono_on ((!) ?xs) {..<card ?A}",
     template_implication
      ([template_predicate
         (
            template_app
             (template_app (template_hole 8, template_hole 7),
              template_var 1)
            ),
        template_predicate (template_app (template_hole 6, template_var 1)),
        template_equation
         (template_app (template_hole 4, template_var 1), template_var 0)],
       template_predicate
        (
           template_app
            (template_app (template_hole 3, t_empty),
             template_app
              (template_hole 1,
               template_app (template_hole 0, template_var 0)))
           ))),
    ("Misc.sorted_list_of_set_Max_snoc",
     "[| finite ?A; ?A ~= {} |]
      ==> sorted_list_of_set ?A =
          sorted_list_of_set (?A - {Max ?A}) @ [Max ?A]",
     template_implication
      ([template_predicate
         (template_app (template_hole 11, template_var 0)),
        template_negation
         (template_equation (template_var 0, template_hole 8))],
       template_equation
        (template_app (template_hole 6, template_var 0),
         template_app
          (template_app
            (template_hole 5,
             template_app
              (template_hole 6,
               template_app
                (template_app (template_hole 4, template_var 0),
                 template_app
                  (template_app
                    (template_hole 3,
                     template_app (template_hole 2, template_var 0)),
                   template_hole 8)))),
           template_app
            (template_app
              (template_hole 1,
               template_app (template_hole 2, template_var 0)),
             template_hole 0)))))]
